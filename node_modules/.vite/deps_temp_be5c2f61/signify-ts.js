import {
  __commonJS,
  __publicField,
  __toESM
} from "./chunk-PNDESK4O.js";

// browser-external:fs
var require_fs = __commonJS({
  "browser-external:fs"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "fs" has been externalized for browser compatibility. Cannot access "fs.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:path
var require_path = __commonJS({
  "browser-external:path"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "path" has been externalized for browser compatibility. Cannot access "path.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:crypto
var require_crypto = __commonJS({
  "browser-external:crypto"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "crypto" has been externalized for browser compatibility. Cannot access "crypto.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/libsodium-sumo/dist/modules-sumo/libsodium-sumo.js
var require_libsodium_sumo = __commonJS({
  "node_modules/libsodium-sumo/dist/modules-sumo/libsodium-sumo.js"(exports, module) {
    !function(A) {
      function I(A2) {
        "use strict";
        var I2;
        void 0 === (I2 = A2) && (I2 = {});
        var g = I2;
        "object" != typeof g.sodium && ("object" == typeof global ? g = global : "object" == typeof window && (g = window));
        var C = I2;
        return I2.ready = new Promise(function(A3, I3) {
          (B = C).onAbort = I3, B.print = function(A4) {
          }, B.printErr = function(A4) {
          }, B.onRuntimeInitialized = function() {
            try {
              B._crypto_secretbox_keybytes(), A3();
            } catch (A4) {
              I3(A4);
            }
          }, B.useBackupModule = function() {
            return new Promise(function(A4, I4) {
              (B2 = {}).onAbort = I4, B2.onRuntimeInitialized = function() {
                Object.keys(C).forEach(function(A5) {
                  "getRandomValue" !== A5 && delete C[A5];
                }), Object.keys(B2).forEach(function(A5) {
                  C[A5] = B2[A5];
                }), A4();
              };
              var g3, B2 = void 0 !== B2 ? B2 : {}, Q3 = "object" == typeof window, i3 = "function" == typeof importScripts, o2 = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, E2 = Object.assign({}, B2), a2 = "";
              if (o2) {
                var _2 = require_fs(), c2 = require_path();
                a2 = __dirname + "/", g3 = (A5) => (A5 = Y2(A5) ? new URL(A5) : c2.normalize(A5), _2.readFileSync(A5)), !B2.thisProgram && process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"), process.argv.slice(2), "undefined" != typeof module && (module.exports = B2);
              } else (Q3 || i3) && (i3 ? a2 = self.location.href : "undefined" != typeof document && document.currentScript && (a2 = document.currentScript.src), a2 = a2.startsWith("blob:") ? "" : a2.substr(0, a2.replace(/[?#].*/, "").lastIndexOf("/") + 1), i3 && (g3 = (A5) => {
                var I5 = new XMLHttpRequest();
                return I5.open("GET", A5, false), I5.responseType = "arraybuffer", I5.send(null), new Uint8Array(I5.response);
              }));
              B2.print;
              var t2, r2 = B2.printErr || void 0;
              Object.assign(B2, E2), E2 = null, B2.arguments && B2.arguments, B2.thisProgram && B2.thisProgram, B2.quit && B2.quit, B2.wasmBinary && (t2 = B2.wasmBinary);
              var e4, y2 = { Memory: function(A5) {
                this.buffer = new ArrayBuffer(65536 * A5.initial);
              }, Module: function(A5) {
              }, Instance: function(A5, I5) {
                this.exports = function(A6) {
                  for (var I6, g4 = new Uint8Array(123), C2 = 25; C2 >= 0; --C2) g4[48 + C2] = 52 + C2, g4[65 + C2] = C2, g4[97 + C2] = 26 + C2;
                  function B3(A7, I7, C3) {
                    for (var B4, Q5, i4 = 0, o3 = I7, E3 = C3.length, a3 = I7 + (3 * E3 >> 2) - ("=" == C3[E3 - 2]) - ("=" == C3[E3 - 1]); i4 < E3; i4 += 4) B4 = g4[C3.charCodeAt(i4 + 1)], Q5 = g4[C3.charCodeAt(i4 + 2)], A7[o3++] = g4[C3.charCodeAt(i4)] << 2 | B4 >> 4, o3 < a3 && (A7[o3++] = B4 << 4 | Q5 >> 2), o3 < a3 && (A7[o3++] = Q5 << 6 | g4[C3.charCodeAt(i4 + 3)]);
                  }
                  function Q4() {
                    throw new Error("abort");
                  }
                  return g4[43] = 62, g4[47] = 63, function(A7) {
                    var g5 = new ArrayBuffer(50331648), C3 = new Int8Array(g5), i4 = (new Int16Array(g5), new Int32Array(g5)), o3 = new Uint8Array(g5), E3 = (new Uint16Array(g5), new Uint32Array(g5)), a3 = (new Float32Array(g5), new Float64Array(g5), Math.imul), _3 = (Math.fround, Math.abs, Math.clz32), c3 = (Math.min, Math.max, Math.floor, Math.ceil, Math.trunc, Math.sqrt, A7.a), t3 = c3.a, r3 = c3.b, e5 = c3.c, y3 = c3.d, s3 = 103696, h3 = 0, D3 = 0, f3 = 0;
                    function p3(A8, I7) {
                      var g6, B4, Q5, i5, E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, v4 = 0, R4 = 0, L4 = 0, P7 = 0, q3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, W2 = 0, V2 = 0, Z2 = 0, T2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, oA2 = 0, EA2 = 0, aA2 = 0, _A2 = 0, cA2 = 0, tA2 = 0, rA2 = 0, eA2 = 0, yA2 = 0, sA2 = 0, hA2 = 0, DA2 = 0, fA2 = 0, pA2 = 0, wA2 = 0, nA2 = 0, kA2 = 0, FA2 = 0, SA2 = 0, NA2 = 0, GA2 = 0, MA2 = 0, KA2 = 0;
                      rA2 = o3[I7 + 40 | 0] | o3[I7 + 41 | 0] << 8 | o3[I7 + 42 | 0] << 16 | o3[I7 + 43 | 0] << 24, yA2 = a4 = o3[I7 + 44 | 0] | o3[I7 + 45 | 0] << 8 | o3[I7 + 46 | 0] << 16 | o3[I7 + 47 | 0] << 24, gA2 = o3[I7 + 104 | 0] | o3[I7 + 105 | 0] << 8 | o3[I7 + 106 | 0] << 16 | o3[I7 + 107 | 0] << 24, sA2 = a4 = o3[I7 + 108 | 0] | o3[I7 + 109 | 0] << 8 | o3[I7 + 110 | 0] << 16 | o3[I7 + 111 | 0] << 24, a4 = o3[I7 + 68 | 0] | o3[I7 + 69 | 0] << 8 | o3[I7 + 70 | 0] << 16 | o3[I7 + 71 | 0] << 24, j2 = o3[I7 + 64 | 0] | o3[I7 + 65 | 0] << 8 | o3[I7 + 66 | 0] << 16 | o3[I7 + 67 | 0] << 24, BA2 = a4, NA2 = a4 = o3[I7 + 36 | 0] | o3[I7 + 37 | 0] << 8 | o3[I7 + 38 | 0] << 16 | o3[I7 + 39 | 0] << 24, N4 = a4, EA2 = o3[I7 + 120 | 0] | o3[I7 + 121 | 0] << 8 | o3[I7 + 122 | 0] << 16 | o3[I7 + 123 | 0] << 24, pA2 = a4 = o3[I7 + 124 | 0] | o3[I7 + 125 | 0] << 8 | o3[I7 + 126 | 0] << 16 | o3[I7 + 127 | 0] << 24, Q5 = a4 = o3[I7 + 92 | 0] | o3[I7 + 93 | 0] << 8 | o3[I7 + 94 | 0] << 16 | o3[I7 + 95 | 0] << 24, g6 = o3[I7 + 88 | 0] | o3[I7 + 89 | 0] << 8 | o3[I7 + 90 | 0] << 16 | o3[I7 + 91 | 0] << 24, z2 = a4, oA2 = o3[I7 + 80 | 0] | o3[I7 + 81 | 0] << 8 | o3[I7 + 82 | 0] << 16 | o3[I7 + 83 | 0] << 24, DA2 = a4 = o3[I7 + 84 | 0] | o3[I7 + 85 | 0] << 8 | o3[I7 + 86 | 0] << 16 | o3[I7 + 87 | 0] << 24, X2 = a4, QA2 = o3[A8 + 16 | 0] | o3[A8 + 17 | 0] << 8 | o3[A8 + 18 | 0] << 16 | o3[A8 + 19 | 0] << 24, a4 = (_A2 = o3[A8 + 52 | 0] | o3[A8 + 53 | 0] << 8 | o3[A8 + 54 | 0] << 16 | o3[A8 + 55 | 0] << 24) + N4 | 0, P7 = (aA2 = o3[A8 + 48 | 0] | o3[A8 + 49 | 0] << 8 | o3[A8 + 50 | 0] << 16 | o3[A8 + 51 | 0] << 24) + (cA2 = o3[I7 + 32 | 0] | o3[I7 + 33 | 0] << 8 | o3[I7 + 34 | 0] << 16 | o3[I7 + 35 | 0] << 24) | 0, a4 = (o3[A8 + 20 | 0] | o3[A8 + 21 | 0] << 8 | o3[A8 + 22 | 0] << 16 | o3[A8 + 23 | 0] << 24) + (aA2 >>> 0 > P7 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (QA2 = (_4 = P7) >>> 0 > (P7 = P7 + QA2 | 0) >>> 0 ? a4 + 1 | 0 : a4) + yA2 | 0, iA2 = eA2 = P7 + rA2 | 0, eA2 = a4 = eA2 >>> 0 < P7 >>> 0 ? a4 + 1 | 0 : a4, P7 = UI(P7 ^ (o3[A8 + 80 | 0] | o3[A8 + 81 | 0] << 8 | o3[A8 + 82 | 0] << 16 | o3[A8 + 83 | 0] << 24) ^ -79577749, QA2 ^ (o3[A8 + 84 | 0] | o3[A8 + 85 | 0] << 8 | o3[A8 + 86 | 0] << 16 | o3[A8 + 87 | 0] << 24) ^ 528734635, 32), kA2 = a4 = f3, a4 = a4 + 1013904242 | 0, QA2 = P7, V2 = a4 = (P7 = P7 - 23791573 | 0) >>> 0 < 4271175723 ? a4 + 1 | 0 : a4, _A2 = UI(P7 ^ aA2, a4 ^ _A2, 40), a4 = (a4 = eA2) + (eA2 = f3) | 0, aA2 = UI(QA2 ^ (h4 = aA2 = _A2 + iA2 | 0), kA2 ^ (D4 = h4 >>> 0 < _A2 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = V2 + (R4 = f3) | 0, k4 = a4 = (aA2 = P7 + (p4 = aA2) | 0) >>> 0 < P7 >>> 0 ? a4 + 1 | 0 : a4, aA2 = a4 = UI(_A2 ^ (n5 = aA2), eA2 ^ a4, 1), V2 = P7 = f3, eA2 = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, kA2 = a4 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24, tA2 = o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24, P7 = (_A2 = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24) + (QA2 = o3[A8 + 40 | 0] | o3[A8 + 41 | 0] << 8 | o3[A8 + 42 | 0] << 16 | o3[A8 + 43 | 0] << 24) | 0, a4 = (GA2 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24) + (KA2 = o3[A8 + 44 | 0] | o3[A8 + 45 | 0] << 8 | o3[A8 + 46 | 0] << 16 | o3[A8 + 47 | 0] << 24) | 0, a4 = (o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24) + (P7 >>> 0 < QA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = kA2 + (iA2 = (_4 = P7) >>> 0 > (P7 = P7 + tA2 | 0) >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (tA2 = P7 + eA2 | 0) >>> 0 < P7 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(P7 ^ (o3[A8 + 72 | 0] | o3[A8 + 73 | 0] << 8 | o3[A8 + 74 | 0] << 16 | o3[A8 + 75 | 0] << 24) ^ 725511199, iA2 ^ (o3[A8 + 76 | 0] | o3[A8 + 77 | 0] << 8 | o3[A8 + 78 | 0] << 16 | o3[A8 + 79 | 0] << 24) ^ -1694144372, 32), e6 = UI(QA2 ^ (c4 = _4 - 2067093701 | 0), KA2 ^ (x4 = (J4 = P7 = f3) - ((_4 >>> 0 < 2067093701) + 1150833018 | 0) | 0), 40), a4 = (L4 = f3) + a4 | 0, a4 = (Y4 = (F4 = P7 = e6 + tA2 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4) + V2 | 0, a4 = (F4 >>> 0 > (P7 = F4 + aA2 | 0) >>> 0 ? a4 + 1 | 0 : a4) + X2 | 0, a4 = (QA2 = (t4 = P7) >>> 0 > (P7 = P7 + oA2 | 0) >>> 0 ? a4 + 1 | 0 : a4) + z2 | 0, l4 = z2 = P7 + g6 | 0, s4 = a4 = z2 >>> 0 < P7 >>> 0 ? a4 + 1 | 0 : a4, w4 = aA2, wA2 = V2, V2 = P7, iA2 = QA2, aA2 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, P7 = a4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, KA2 = a4 = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, i5 = QA2 = o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24, X2 = a4, a4 = (FA2 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24) + (r4 = o3[A8 + 36 | 0] | o3[A8 + 37 | 0] << 8 | o3[A8 + 38 | 0] << 16 | o3[A8 + 39 | 0] << 24) | 0, a4 = i5 + ((z2 = o3[A8 + 32 | 0] | o3[A8 + 33 | 0] << 8 | o3[A8 + 34 | 0] << 16 | o3[A8 + 35 | 0] << 24) >>> 0 > (t4 = z2 + (QA2 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24) | 0) >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (tA2 = (X2 = t4 + X2 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4) + P7 | 0, fA2 = t4 = X2 + aA2 | 0, t4 = a4 = t4 >>> 0 < X2 >>> 0 ? a4 + 1 | 0 : a4, y4 = z2, z2 = UI(X2 ^ (o3[A8 + 64 | 0] | o3[A8 + 65 | 0] << 8 | o3[A8 + 66 | 0] << 16 | o3[A8 + 67 | 0] << 24) ^ -1377402159, tA2 ^ (o3[A8 + 68 | 0] | o3[A8 + 69 | 0] << 8 | o3[A8 + 70 | 0] << 16 | o3[A8 + 71 | 0] << 24) ^ 1359893119, 32), tA2 = a4 = f3, a4 = a4 + 1779033703 | 0, X2 = z2, U4 = a4 = (z2 = z2 - 205731576 | 0) >>> 0 < 4089235720 ? a4 + 1 | 0 : a4, r4 = UI(y4 ^ (S4 = z2), a4 ^ r4, 40), a4 = (m4 = f3) + t4 | 0, y4 = UI(X2 ^ (t4 = z2 = r4 + fA2 | 0), tA2 ^ (G4 = r4 >>> 0 > t4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = UI(y4 ^ V2, (T2 = f3) ^ iA2, 32), W2 = z2 = f3, u4 = a4, B4 = a4 = o3[I7 + 60 | 0] | o3[I7 + 61 | 0] << 8 | o3[I7 + 62 | 0] << 16 | o3[I7 + 63 | 0] << 24, tA2 = fA2 = o3[I7 + 56 | 0] | o3[I7 + 57 | 0] << 8 | o3[I7 + 58 | 0] << 16 | o3[I7 + 59 | 0] << 24, K4 = o3[A8 + 24 | 0] | o3[A8 + 25 | 0] << 8 | o3[A8 + 26 | 0] << 16 | o3[A8 + 27 | 0] << 24, z2 = (iA2 = o3[I7 + 48 | 0] | o3[I7 + 49 | 0] << 8 | o3[I7 + 50 | 0] << 16 | o3[I7 + 51 | 0] << 24) + (X2 = o3[A8 + 56 | 0] | o3[A8 + 57 | 0] << 8 | o3[A8 + 58 | 0] << 16 | o3[A8 + 59 | 0] << 24) | 0, a4 = (SA2 = o3[I7 + 52 | 0] | o3[I7 + 53 | 0] << 8 | o3[I7 + 54 | 0] << 16 | o3[I7 + 55 | 0] << 24) + (d5 = o3[A8 + 60 | 0] | o3[A8 + 61 | 0] << 8 | o3[A8 + 62 | 0] << 16 | o3[A8 + 63 | 0] << 24) | 0, a4 = (o3[A8 + 28 | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24) + (z2 >>> 0 < X2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = B4 + (V2 = (M4 = z2) >>> 0 > (z2 = K4 + z2 | 0) >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (K4 = z2 + tA2 | 0) >>> 0 < z2 >>> 0 ? a4 + 1 | 0 : a4, V2 = UI(z2 ^ (o3[A8 + 88 | 0] | o3[A8 + 89 | 0] << 8 | o3[A8 + 90 | 0] << 16 | o3[A8 + 91 | 0] << 24) ^ 327033209, V2 ^ (o3[A8 + 92 | 0] | o3[A8 + 93 | 0] << 8 | o3[A8 + 94 | 0] << 16 | o3[A8 + 95 | 0] << 24) ^ 1541459225, 32), X2 = UI(X2 ^ (tA2 = V2 + 1595750129 | 0), (M4 = d5) ^ (d5 = (b5 = z2 = f3) - ((V2 >>> 0 < 2699217167) + 1521486533 | 0) | 0), 40), a4 = (IA2 = f3) + a4 | 0, z2 = UI((K4 = z2 = X2 + K4 | 0) ^ V2, b5 ^ (M4 = K4 >>> 0 < X2 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = d5 + ($2 = f3) | 0, H4 = a4 = (z2 = tA2 + (d5 = z2) | 0) >>> 0 < tA2 >>> 0 ? a4 + 1 | 0 : a4, a4 = W2 + a4 | 0, O2 = w4 ^ (V2 = u4 + (b5 = z2) | 0), w4 = a4 = V2 >>> 0 < b5 >>> 0 ? a4 + 1 | 0 : a4, tA2 = UI(O2, a4 ^ wA2, 40), a4 = (wA2 = f3) + s4 | 0, z2 = UI(l4 = u4 ^ (s4 = z2 = tA2 + l4 | 0), W2 ^ (u4 = s4 >>> 0 < tA2 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = w4 + (CA2 = f3) | 0, W2 = a4 = (w4 = V2 + (l4 = z2) | 0) >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4, z2 = (v4 = UI(w4 ^ tA2, wA2 ^ a4, 1)) + (V2 = o3[I7 + 72 | 0] | o3[I7 + 73 | 0] << 8 | o3[I7 + 74 | 0] << 16 | o3[I7 + 75 | 0] << 24) | 0, a4 = (hA2 = f3) + (wA2 = o3[I7 + 76 | 0] | o3[I7 + 77 | 0] << 8 | o3[I7 + 78 | 0] << 16 | o3[I7 + 79 | 0] << 24) | 0, nA2 = z2, q3 = z2 >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4, Z2 = sA2, z2 = o3[I7 + 96 | 0] | o3[I7 + 97 | 0] << 8 | o3[I7 + 98 | 0] << 16 | o3[I7 + 99 | 0] << 24, tA2 = a4 = o3[I7 + 100 | 0] | o3[I7 + 101 | 0] << 8 | o3[I7 + 102 | 0] << 16 | o3[I7 + 103 | 0] << 24, X2 = (a4 = h4) + (h4 = UI(b5 ^ X2, H4 ^ IA2, 1)) | 0, a4 = (b5 = f3) + D4 | 0, a4 = (h4 >>> 0 > X2 >>> 0 ? a4 + 1 | 0 : a4) + tA2 | 0, a4 = (D4 = (D4 = X2) >>> 0 > (X2 = z2 + X2 | 0) >>> 0 ? a4 + 1 | 0 : a4) + Z2 | 0, O2 = H4 = X2 + gA2 | 0, H4 = a4 = H4 >>> 0 < X2 >>> 0 ? a4 + 1 | 0 : a4, F4 = UI(_4 ^ F4, Y4 ^ J4, 48), Y4 = a4 = UI(F4 ^ X2, (J4 = f3) ^ D4, 32), a4 = U4 + T2 | 0, a4 = (IA2 = X2 = f3) + (S4 = (X2 = y4 + S4 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4) | 0, U4 = a4 = (D4 = X2) >>> 0 > (y4 = D4 + Y4 | 0) >>> 0 ? a4 + 1 | 0 : a4, h4 = UI(y4 ^ h4, b5 ^ a4, 40), a4 = (T2 = f3) + H4 | 0, a4 = (b5 = h4 >>> 0 > (H4 = X2 = h4 + O2 | 0) >>> 0 ? a4 + 1 | 0 : a4) + q3 | 0, a4 = (_4 = H4 >>> 0 > (X2 = H4 + nA2 | 0) >>> 0 ? a4 + 1 | 0 : a4) + pA2 | 0, nA2 = q3 = X2 + EA2 | 0, q3 = a4 = q3 >>> 0 < X2 >>> 0 ? a4 + 1 | 0 : a4, O2 = X2, Z2 = _4, X2 = o3[I7 + 116 | 0] | o3[I7 + 117 | 0] << 8 | o3[I7 + 118 | 0] << 16 | o3[I7 + 119 | 0] << 24, I7 = o3[I7 + 112 | 0] | o3[I7 + 113 | 0] << 8 | o3[I7 + 114 | 0] << 16 | o3[I7 + 115 | 0] << 24, r4 = UI(r4 ^ D4, S4 ^ m4, 1), a4 = (m4 = f3) + M4 | 0, a4 = ((_4 = r4 + K4 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4) + X2 | 0, a4 = (D4 = (S4 = _4) >>> 0 > (_4 = I7 + _4 | 0) >>> 0 ? a4 + 1 | 0 : a4) + pA2 | 0, MA2 = S4 = _4 + EA2 | 0, S4 = a4 = S4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, a4 = UI(_4 ^ p4, D4 ^ R4, 32), AA2 = _4 = f3, p4 = a4, D4 = _4, a4 = J4 + x4 | 0, F4 = _4 = c4 + F4 | 0, K4 = a4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + D4 | 0, M4 = _4 = _4 + p4 | 0, R4 = a4 = F4 >>> 0 > _4 >>> 0 ? a4 + 1 | 0 : a4, D4 = UI(_4 ^ r4, m4 ^ a4, 40), a4 = (m4 = f3) + S4 | 0, p4 = UI((_4 = D4 + MA2 | 0) ^ p4, AA2 ^ (c4 = _4 >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = UI(p4 ^ O2, (MA2 = f3) ^ Z2, 32), AA2 = r4 = f3, S4 = a4, O2 = r4, e6 = UI(e6 ^ F4, K4 ^ L4, 1), a4 = G4 + (F4 = f3) | 0, a4 = ((r4 = t4) >>> 0 > (t4 = t4 + e6 | 0) >>> 0 ? a4 + 1 | 0 : a4) + BA2 | 0, a4 = (t4 = (r4 = t4 + j2 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4) + wA2 | 0, Z2 = G4 = r4 + V2 | 0, G4 = a4 = G4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, K4 = e6, r4 = UI(r4 ^ d5, t4 ^ $2, 32), a4 = (d5 = f3) + k4 | 0, n5 = UI(K4 ^ (t4 = e6 = r4 + n5 | 0), (k4 = r4 >>> 0 > t4 >>> 0 ? a4 + 1 | 0 : a4) ^ F4, 40), a4 = ($2 = f3) + G4 | 0, F4 = e6 = n5 + Z2 | 0, e6 = UI(r4 ^ e6, d5 ^ (G4 = e6 >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = k4 + (E4 = f3) | 0, k4 = e6, d5 = a4 = (e6 = t4 + e6 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + O2 | 0, a4 = (K4 = e6) >>> 0 > (e6 = e6 + S4 | 0) >>> 0 ? a4 + 1 | 0 : a4, O2 = e6, e6 ^= v4, v4 = a4, r4 = UI(e6, hA2 ^ a4, 40), a4 = (hA2 = f3) + q3 | 0, q3 = e6 = r4 + nA2 | 0, a4 = Q5 + (Z2 = r4 >>> 0 > e6 >>> 0 ? a4 + 1 | 0 : a4) | 0, nA2 = e6 = e6 + g6 | 0, J4 = a4 = e6 >>> 0 < g6 >>> 0 ? a4 + 1 | 0 : a4, e6 = _4, x4 = gA2, L4 = sA2, _4 = UI(Y4 ^ H4, b5 ^ IA2, 48), a4 = U4 + (IA2 = f3) | 0, Y4 = _4, U4 = a4 = (t4 = y4 + _4 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(t4 ^ h4, T2 ^ a4, 1), a4 = (y4 = f3) + L4 | 0, a4 = ((h4 = _4 + x4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) + c4 | 0, a4 = SA2 + (e6 = (c4 = e6 + h4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4) | 0, H4 = h4 = c4 + iA2 | 0, h4 = a4 = h4 >>> 0 < iA2 >>> 0 ? a4 + 1 | 0 : a4, c4 = UI(c4 ^ k4, e6 ^ E4, 32), a4 = W2 + (b5 = f3) | 0, k4 = c4, w4 = a4 = (c4 = w4 + c4 | 0) >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4, e6 = UI(_4 ^ c4, a4 ^ y4, 40), a4 = (a4 = h4) + (h4 = f3) | 0, y4 = _4 = e6 + H4 | 0, _4 = UI(_4 ^ k4, b5 ^ (H4 = _4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = w4 + (T2 = f3) | 0, b5 = _4, W2 = a4 = (w4 = c4 + _4 | 0) >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(e6 ^ w4, h4 ^ a4, 1), a4 = (h4 = f3) + J4 | 0, a4 = B4 + (e6 = (c4 = _4 + nA2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) | 0, nA2 = k4 = c4 + fA2 | 0, k4 = a4 = k4 >>> 0 < fA2 >>> 0 ? a4 + 1 | 0 : a4, J4 = _4, x4 = h4, a4 = R4 + MA2 | 0, a4 = (_4 = p4 + M4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, p4 = _4, M4 = a4, a4 = UI(_4 ^ D4, m4 ^ a4, 1), D4 = h4 = f3, _4 = a4, a4 = G4 + X2 | 0, a4 = ((F4 = I7 + F4 | 0) >>> 0 < I7 >>> 0 ? a4 + 1 | 0 : a4) + h4 | 0, a4 = DA2 + (F4 = (h4 = _4 + F4 | 0) >>> 0 < F4 >>> 0 ? a4 + 1 | 0 : a4) | 0, R4 = G4 = h4 + oA2 | 0, G4 = a4 = G4 >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4, h4 = UI(h4 ^ l4, F4 ^ CA2, 32), a4 = U4 + (l4 = f3) | 0, F4 = h4, U4 = a4 = (U4 = t4) >>> 0 > (t4 = t4 + h4 | 0) >>> 0 ? a4 + 1 | 0 : a4, h4 = UI(_4 ^ t4, a4 ^ D4, 40), a4 = (m4 = f3) + G4 | 0, D4 = _4 = h4 + R4 | 0, _4 = UI(G4 = _4 ^ F4, l4 ^ (F4 = _4 >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = U4 + (CA2 = f3) | 0, U4 = _4, G4 = _4 = t4 + _4 | 0, l4 = a4 = _4 >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4, R4 = c4, L4 = e6, _4 = UI(n5 ^ K4, d5 ^ $2, 1), a4 = (t4 = f3) + N4 | 0, a4 = u4 + ((c4 = _4 + cA2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = BA2 + (e6 = (c4 = c4 + s4 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4) | 0, u4 = s4 = c4 + j2 | 0, s4 = a4 = s4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, n5 = _4, _4 = (c4 = UI(c4 ^ Y4, e6 ^ IA2, 32)) + p4 | 0, a4 = (p4 = f3) + M4 | 0, e6 = _4, t4 = UI(_4 ^ n5, (Y4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4) ^ t4, 40), a4 = (IA2 = f3) + s4 | 0, s4 = _4 = t4 + u4 | 0, K4 = UI(_4 ^ c4, p4 ^ (u4 = _4 >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4), 48), c4 = UI(K4 ^ R4, (a4 = L4) ^ (L4 = f3), 32), a4 = (R4 = f3) + l4 | 0, p4 = _4 = c4 + G4 | 0, n5 = UI(_4 ^ J4, (M4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4) ^ x4, 40), a4 = (J4 = f3) + k4 | 0, k4 = _4 = n5 + nA2 | 0, _4 = UI(_4 ^ c4, R4 ^ (d5 = _4 >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = M4 + ($2 = f3) | 0, M4 = _4, R4 = a4 = (c4 = p4) >>> 0 > (p4 = p4 + _4 | 0) >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(p4 ^ n5, J4 ^ a4, 1), a4 = pA2 + (nA2 = f3) | 0, J4 = _4, MA2 = _4 = EA2 + _4 | 0, n5 = a4 = _4 >>> 0 < EA2 >>> 0 ? a4 + 1 | 0 : a4, c4 = rA2, _4 = UI(h4 ^ G4, m4 ^ l4, 1), a4 = H4 + (h4 = f3) | 0, a4 = ((G4 = y4) >>> 0 > (y4 = _4 + y4 | 0) >>> 0 ? a4 + 1 | 0 : a4) + yA2 | 0, a4 = (G4 = (c4 = c4 + y4 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4) + kA2 | 0, x4 = y4 = c4 + eA2 | 0, H4 = a4 = y4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, l4 = _4, y4 = UI(S4 ^ q3, Z2 ^ AA2, 48), a4 = UI(y4 ^ c4, (m4 = f3) ^ G4, 32), AA2 = _4 = f3, S4 = a4, c4 = _4, a4 = Y4 + L4 | 0, a4 = (_4 = e6 + K4 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, e6 = _4, Y4 = a4, a4 = a4 + c4 | 0, G4 = _4 = _4 + S4 | 0, K4 = a4 = e6 >>> 0 > _4 >>> 0 ? a4 + 1 | 0 : a4, c4 = UI(_4 ^ l4, a4 ^ h4, 40), a4 = (a4 = H4) + (H4 = f3) | 0, l4 = _4 = c4 + x4 | 0, q3 = a4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + n5 | 0, Z2 = a4 = (h4 = _4 + MA2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, n5 = a4, _4 = UI(t4 ^ e6, Y4 ^ IA2, 1), a4 = P7 + (t4 = f3) | 0, a4 = F4 + ((e6 = _4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = tA2 + (D4 = (e6 = e6 + D4 | 0) >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4) | 0, x4 = F4 = e6 + z2 | 0, F4 = a4 = F4 >>> 0 < z2 >>> 0 ? a4 + 1 | 0 : a4, Y4 = _4, a4 = UI(e6 ^ b5, D4 ^ T2, 32), L4 = _4 = f3, e6 = a4, D4 = _4, a4 = m4 + v4 | 0, b5 = _4 = y4 + O2 | 0, v4 = a4 = _4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + D4 | 0, a4 = (y4 = _4 + e6 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, _4 = y4 ^ Y4, Y4 = a4, D4 = UI(_4, a4 ^ t4, 40), a4 = (T2 = f3) + F4 | 0, t4 = _4 = D4 + x4 | 0, O2 = UI(_4 ^ e6, L4 ^ (F4 = _4 >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = UI(O2 ^ h4, (IA2 = f3) ^ n5, 32), MA2 = _4 = f3, x4 = a4, n5 = _4, _4 = UI(r4 ^ b5, v4 ^ hA2, 1), a4 = u4 + (r4 = f3) | 0, a4 = FA2 + ((e6 = _4 + s4 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (s4 = (e6 = e6 + QA2 | 0) >>> 0 < QA2 >>> 0 ? a4 + 1 | 0 : a4) + GA2 | 0, b5 = u4 = e6 + _A2 | 0, u4 = a4 = u4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, e6 = UI(e6 ^ U4, s4 ^ CA2, 32), a4 = W2 + (v4 = f3) | 0, U4 = e6, s4 = r4, r4 = a4 = (e6 = w4 + e6 | 0) >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4, s4 = UI(_4 ^ e6, s4 ^ a4, 40), a4 = (CA2 = f3) + u4 | 0, w4 = _4 = s4 + b5 | 0, _4 = UI(b5 = _4 ^ U4, v4 ^ (U4 = _4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = r4 + (m4 = f3) | 0, r4 = _4, u4 = _4 = e6 + _4 | 0, b5 = a4 = _4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + n5 | 0, W2 = a4 = (n5 = _4 + x4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, e6 = UI(n5 ^ J4, nA2 ^ a4, 40), a4 = Z2 + (v4 = f3) | 0, a4 = ((_4 = e6 + h4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4) + sA2 | 0, h4 = _4, Z2 = _4 = _4 + gA2 | 0, J4 = a4 = h4 >>> 0 > _4 >>> 0 ? a4 + 1 | 0 : a4, L4 = BA2, h4 = UI(S4 ^ l4, q3 ^ AA2, 48), a4 = (hA2 = f3) + K4 | 0, S4 = _4 = h4 + G4 | 0, a4 = UI(_4 ^ c4, (G4 = _4 >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4) ^ H4, 1), H4 = c4 = f3, _4 = a4, a4 = F4 + Q5 | 0, a4 = ((t4 = t4 + g6 | 0) >>> 0 < g6 >>> 0 ? a4 + 1 | 0 : a4) + c4 | 0, a4 = (t4 = (c4 = _4 + t4 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4) + L4 | 0, K4 = F4 = c4 + j2 | 0, F4 = a4 = F4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, c4 = UI(c4 ^ r4, t4 ^ m4, 32), a4 = R4 + (l4 = f3) | 0, p4 = a4 = (r4 = c4 + p4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(_4 ^ r4, a4 ^ H4, 40), a4 = (q3 = f3) + F4 | 0, F4 = _4 = t4 + K4 | 0, c4 = UI(_4 ^ c4, l4 ^ (H4 = _4 >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = p4 + (K4 = f3) | 0, l4 = a4 = (p4 = c4 + r4 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(t4 ^ p4, q3 ^ a4, 1), a4 = (q3 = f3) + J4 | 0, a4 = wA2 + ((r4 = _4 + Z2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (t4 = (r4 = r4 + V2 | 0) >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4) + N4 | 0, nA2 = N4 = r4 + cA2 | 0, N4 = a4 = N4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, R4 = _4, L4 = r4, m4 = t4, r4 = rA2, _4 = UI(s4 ^ u4, b5 ^ CA2, 1), a4 = d5 + (s4 = f3) | 0, a4 = ((t4 = k4) >>> 0 > (k4 = _4 + k4 | 0) >>> 0 ? a4 + 1 | 0 : a4) + yA2 | 0, a4 = GA2 + (t4 = (r4 = r4 + k4 | 0) >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4) | 0, d5 = k4 = r4 + _A2 | 0, u4 = a4 = k4 >>> 0 < _A2 >>> 0 ? a4 + 1 | 0 : a4, k4 = _4, t4 = a4 = UI(r4 ^ h4, t4 ^ hA2, 32), a4 = Y4 + IA2 | 0, a4 = (b5 = _4 = f3) + (y4 = (_4 = y4 + O2 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4) | 0, Y4 = a4 = (h4 = _4 + t4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, k4 = UI(h4 ^ k4, a4 ^ s4, 40), a4 = (IA2 = f3) + u4 | 0, u4 = UI(d5 = (r4 = k4 + d5 | 0) ^ t4, b5 ^ (t4 = r4 >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = UI(u4 ^ L4, (CA2 = f3) ^ m4, 32), hA2 = s4 = f3, d5 = a4, b5 = s4, _4 = UI(_4 ^ D4, y4 ^ T2, 1), a4 = tA2 + (s4 = f3) | 0, a4 = U4 + ((y4 = _4 + z2 | 0) >>> 0 < z2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = FA2 + (w4 = (y4 = y4 + w4 | 0) >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4) | 0, L4 = D4 = y4 + QA2 | 0, D4 = a4 = D4 >>> 0 < QA2 >>> 0 ? a4 + 1 | 0 : a4, U4 = _4, O2 = s4, y4 = UI(y4 ^ M4, w4 ^ $2, 32), a4 = (M4 = f3) + G4 | 0, s4 = _4 = y4 + S4 | 0, w4 = UI(_4 ^ U4, (S4 = _4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4) ^ O2, 40), a4 = (T2 = f3) + D4 | 0, U4 = _4 = w4 + L4 | 0, _4 = UI(_4 ^ y4, M4 ^ (G4 = _4 >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = S4 + (L4 = f3) | 0, D4 = _4, S4 = _4 = s4 + _4 | 0, M4 = a4 = _4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + b5 | 0, b5 = _4 = _4 + d5 | 0, y4 = q3, q3 = a4 = S4 >>> 0 > _4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ R4, y4 ^ a4, 40), a4 = (a4 = N4) + (N4 = f3) | 0, O2 = _4 = y4 + nA2 | 0, R4 = a4 = _4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, s4 = t4, _4 = UI(x4 ^ Z2, J4 ^ MA2, 48), a4 = W2 + ($2 = f3) | 0, W2 = _4, t4 = (_4 = n5 + _4 | 0) ^ e6, e6 = a4 = _4 >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(t4, a4 ^ v4, 1), a4 = (v4 = f3) + s4 | 0, a4 = B4 + ((r4 = t4 + r4 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (s4 = (r4 = r4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? a4 + 1 | 0 : a4) + P7 | 0, Z2 = n5 = r4 + aA2 | 0, n5 = a4 = n5 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, r4 = UI(r4 ^ D4, s4 ^ L4, 32), a4 = l4 + (J4 = f3) | 0, l4 = r4, p4 = a4 = (s4 = p4 + r4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(t4 ^ s4, v4 ^ a4, 40), a4 = (a4 = n5) + (n5 = f3) | 0, D4 = r4 = t4 + Z2 | 0, r4 = UI(x4 = r4 ^ l4, J4 ^ (l4 = r4 >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = p4 + (nA2 = f3) | 0, v4 = r4, Z2 = a4 = (p4 = s4 + r4 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, r4 = UI(t4 ^ p4, n5 ^ a4, 1), a4 = (n5 = f3) + R4 | 0, a4 = Q5 + ((t4 = r4 + O2 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = X2 + (s4 = (t4 = t4 + g6 | 0) >>> 0 < g6 >>> 0 ? a4 + 1 | 0 : a4) | 0, MA2 = J4 = I7 + t4 | 0, J4 = a4 = J4 >>> 0 < I7 >>> 0 ? a4 + 1 | 0 : a4, x4 = r4, L4 = n5, n5 = t4, m4 = s4, r4 = UI(w4 ^ S4, M4 ^ T2, 1), a4 = (s4 = f3) + H4 | 0, a4 = DA2 + ((t4 = r4 + F4 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (w4 = (t4 = t4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4) + X2 | 0, H4 = F4 = I7 + t4 | 0, F4 = a4 = F4 >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4, S4 = r4, t4 = a4 = UI(t4 ^ W2, w4 ^ $2, 32), w4 = r4 = f3, a4 = Y4 + CA2 | 0, Y4 = a4 = (r4 = h4 + u4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + w4 | 0, a4 = (h4 = r4) >>> 0 > (r4 = r4 + t4 | 0) >>> 0 ? a4 + 1 | 0 : a4, u4 = r4, r4 ^= S4, S4 = a4, s4 = UI(r4, a4 ^ s4, 40), a4 = (T2 = f3) + F4 | 0, w4 = UI(F4 = (r4 = s4 + H4 | 0) ^ t4, w4 ^ (t4 = r4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = UI(w4 ^ n5, (a4 = m4) ^ (m4 = f3), 32), $2 = n5 = f3, F4 = a4, H4 = e6, e6 = c4, a4 = UI(h4 ^ k4, Y4 ^ IA2, 1), M4 = c4 = f3, h4 = a4, a4 = G4 + kA2 | 0, a4 = ((k4 = U4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? a4 + 1 | 0 : a4) + c4 | 0, k4 = a4 = (c4 = h4 + k4 | 0) >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, e6 = UI(c4 ^ e6, a4 ^ K4, 32), a4 = (a4 = H4) + (H4 = f3) | 0, h4 = UI((_4 = e6 + _4 | 0) ^ h4, M4 ^ (Y4 = _4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4), 40), a4 = k4 + (IA2 = f3) | 0, U4 = h4, a4 = SA2 + ((G4 = c4) >>> 0 > (c4 = c4 + h4 | 0) >>> 0 ? a4 + 1 | 0 : a4) | 0, G4 = a4 = (h4 = c4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? a4 + 1 | 0 : a4, c4 = UI(e6 ^ h4, H4 ^ a4, 48), a4 = Y4 + (CA2 = f3) | 0, K4 = _4, e6 = c4, Y4 = _4 = _4 + c4 | 0, H4 = a4 = K4 >>> 0 > _4 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + n5 | 0, K4 = a4 = (n5 = _4 + F4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, _4 = (k4 = UI(n5 ^ x4, a4 ^ L4, 40)) + MA2 | 0, a4 = (MA2 = f3) + J4 | 0, M4 = _4, W2 = _4 >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(d5 ^ O2, R4 ^ hA2, 48), a4 = (d5 = f3) + q3 | 0, b5 = c4 = _4 + b5 | 0, x4 = N4, N4 = a4 = c4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, a4 = UI(c4 ^ y4, x4 ^ a4, 1), O2 = c4 = f3, y4 = a4, a4 = t4 + B4 | 0, a4 = ((r4 = r4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? a4 + 1 | 0 : a4) + c4 | 0, a4 = wA2 + (r4 = (c4 = r4 + y4 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4) | 0, R4 = t4 = c4 + V2 | 0, t4 = a4 = t4 >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4, c4 = UI(c4 ^ e6, r4 ^ CA2, 32), a4 = Z2 + (J4 = f3) | 0, q3 = c4, c4 = (e6 = p4 + c4 | 0) ^ y4, y4 = a4 = e6 >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, r4 = UI(c4, O2 ^ a4, 40), a4 = (a4 = t4) + (t4 = f3) | 0, O2 = c4 = r4 + R4 | 0, c4 = UI(p4 = c4 ^ q3, J4 ^ (q3 = c4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = y4 + (CA2 = f3) | 0, Z2 = c4, e6 = a4 = (c4 = e6 + c4 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, r4 = UI(c4 ^ r4, t4 ^ a4, 1), a4 = (p4 = f3) + W2 | 0, a4 = pA2 + ((t4 = r4 + M4 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (y4 = (t4 = t4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? a4 + 1 | 0 : a4) + BA2 | 0, AA2 = R4 = t4 + j2 | 0, R4 = a4 = R4 >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4, J4 = r4, x4 = t4, L4 = y4, r4 = UI(U4 ^ Y4, H4 ^ IA2, 1), a4 = (H4 = f3) + sA2 | 0, a4 = l4 + (r4 >>> 0 > (t4 = r4 + gA2 | 0) >>> 0 ? a4 + 1 | 0 : a4) | 0, y4 = a4 = (t4 = t4 + D4 | 0) >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4, a4 = UI(_4 ^ t4, a4 ^ d5, 32), d5 = _4 = f3, D4 = a4, a4 = S4 + m4 | 0, a4 = (_4 = w4 + u4 | 0) >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4, w4 = _4, Y4 = a4, a4 = d5 + a4 | 0, S4 = _4 = _4 + D4 | 0, U4 = a4 = w4 >>> 0 > _4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(_4 ^ r4, H4 ^ a4, 40), a4 = y4 + (m4 = f3) | 0, u4 = _4, a4 = tA2 + ((_4 = t4 + _4 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (_4 = _4 + z2 | 0) >>> 0 < z2 >>> 0 ? a4 + 1 | 0 : a4, H4 = _4, _4 ^= D4, D4 = a4, y4 = UI(_4, d5 ^ a4, 48), a4 = UI(y4 ^ x4, (a4 = L4) ^ (L4 = f3), 32), IA2 = _4 = f3, d5 = a4, l4 = _4, _4 = UI(s4 ^ w4, Y4 ^ T2, 1), a4 = kA2 + (t4 = f3) | 0, a4 = G4 + ((r4 = _4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (s4 = (r4 = r4 + h4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4) + P7 | 0, G4 = w4 = r4 + aA2 | 0, w4 = a4 = w4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, h4 = _4, Y4 = t4, _4 = (r4 = UI(r4 ^ v4, s4 ^ nA2, 32)) + b5 | 0, a4 = (b5 = f3) + N4 | 0, t4 = _4, s4 = UI(s4 = _4 ^ h4, (h4 = _4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4) ^ Y4, 40), a4 = (T2 = f3) + w4 | 0, w4 = _4 = s4 + G4 | 0, r4 = UI(_4 ^ r4, b5 ^ (N4 = _4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = h4 + (Y4 = f3) | 0, G4 = _4 = r4 + t4 | 0, b5 = a4 = _4 >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + l4 | 0, l4 = a4 = (h4 = _4 + d5 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(h4 ^ J4, a4 ^ p4, 40), a4 = (v4 = f3) + R4 | 0, R4 = _4 = t4 + AA2 | 0, J4 = a4 = _4 >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4, _4 = c4, p4 = e6, e6 = r4, c4 = UI(F4 ^ M4, W2 ^ $2, 48), a4 = K4 + (AA2 = f3) | 0, F4 = c4, n5 = a4 = (r4 = n5 + c4 | 0) >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4, a4 = UI(r4 ^ k4, MA2 ^ a4, 1), K4 = c4 = f3, k4 = a4, a4 = D4 + NA2 | 0, a4 = ((D4 = H4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? a4 + 1 | 0 : a4) + c4 | 0, D4 = a4 = (c4 = D4 + k4 | 0) >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4, e6 = UI(c4 ^ e6, a4 ^ Y4, 32), a4 = (H4 = f3) + p4 | 0, k4 = UI((_4 = e6 + _4 | 0) ^ k4, K4 ^ (p4 = _4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4), 40), a4 = D4 + (M4 = f3) | 0, a4 = FA2 + ((D4 = c4) >>> 0 > (c4 = c4 + k4 | 0) >>> 0 ? a4 + 1 | 0 : a4) | 0, Y4 = a4 = (D4 = c4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? a4 + 1 | 0 : a4, c4 = UI(e6 ^ D4, H4 ^ a4, 48), a4 = p4 + ($2 = f3) | 0, H4 = c4, K4 = a4 = (p4 = _4 + c4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(p4 ^ k4, M4 ^ a4, 1), a4 = (k4 = f3) + J4 | 0, a4 = DA2 + ((c4 = _4 + R4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = pA2 + (e6 = (c4 = c4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, hA2 = M4 = c4 + EA2 | 0, M4 = a4 = M4 >>> 0 < EA2 >>> 0 ? a4 + 1 | 0 : a4, W2 = _4, x4 = c4, _4 = UI(s4 ^ G4, b5 ^ T2, 1), a4 = (s4 = f3) + q3 | 0, a4 = GA2 + ((c4 = _4 + O2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = SA2 + (G4 = (c4 = c4 + _A2 | 0) >>> 0 < _A2 >>> 0 ? a4 + 1 | 0 : a4) | 0, O2 = b5 = c4 + iA2 | 0, b5 = a4 = b5 >>> 0 < iA2 >>> 0 ? a4 + 1 | 0 : a4, q3 = _4, a4 = UI(c4 ^ F4, G4 ^ AA2, 32), AA2 = _4 = f3, c4 = a4, a4 = U4 + L4 | 0, S4 = _4 = y4 + S4 | 0, F4 = a4 = _4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, a4 = AA2 + a4 | 0, U4 = a4 = (y4 = _4 + c4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, s4 = UI(y4 ^ q3, a4 ^ s4, 40), a4 = (L4 = f3) + b5 | 0, G4 = _4 = s4 + O2 | 0, q3 = UI(_4 ^ c4, AA2 ^ (b5 = _4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = UI(q3 ^ x4, (AA2 = f3) ^ e6, 32), T2 = _4 = f3, O2 = a4, e6 = _4, c4 = rA2, _4 = UI(S4 ^ u4, F4 ^ m4, 1), a4 = N4 + (F4 = f3) | 0, a4 = ((S4 = w4) >>> 0 > (w4 = _4 + w4 | 0) >>> 0 ? a4 + 1 | 0 : a4) + yA2 | 0, a4 = DA2 + (w4 = (c4 = c4 + w4 | 0) >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4) | 0, S4 = N4 = c4 + oA2 | 0, N4 = a4 = N4 >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4, c4 = UI(c4 ^ Z2, w4 ^ CA2, 32), a4 = n5 + (u4 = f3) | 0, n5 = c4, a4 = (c4 = r4 + c4 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, r4 = F4, F4 = a4, r4 = UI(_4 ^ c4, r4 ^ a4, 40), a4 = (m4 = f3) + N4 | 0, w4 = _4 = r4 + S4 | 0, _4 = UI(_4 ^ n5, u4 ^ (N4 = _4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = F4 + (x4 = f3) | 0, F4 = _4, S4 = _4 = c4 + _4 | 0, u4 = a4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + e6 | 0, a4 = (n5 = _4 + O2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, _4 = n5 ^ W2, W2 = a4, k4 = UI(_4, a4 ^ k4, 40), a4 = (CA2 = f3) + M4 | 0, M4 = _4 = k4 + hA2 | 0, Z2 = _4 >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(d5 ^ R4, J4 ^ IA2, 48), a4 = l4 + (IA2 = f3) | 0, d5 = _4, a4 = (_4 = h4 + _4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, h4 = _4, l4 = a4, a4 = UI(_4 ^ t4, a4 ^ v4, 1), v4 = _4 = f3, e6 = a4, a4 = b5 + wA2 | 0, a4 = ((c4 = G4 + V2 | 0) >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4) + _4 | 0, a4 = FA2 + (c4 = (_4 = c4 + e6 | 0) >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4) | 0, G4 = t4 = _4 + QA2 | 0, t4 = a4 = t4 >>> 0 < QA2 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(_4 ^ F4, c4 ^ x4, 32), a4 = K4 + (b5 = f3) | 0, F4 = _4, p4 = a4 = (c4 = p4 + _4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, e6 = UI(c4 ^ e6, v4 ^ a4, 40), a4 = (v4 = f3) + t4 | 0, G4 = _4 = e6 + G4 | 0, _4 = UI(t4 = _4 ^ F4, b5 ^ (F4 = _4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = p4 + (hA2 = f3) | 0, p4 = _4, K4 = a4 = (t4 = c4 + _4 | 0) >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(t4 ^ e6, v4 ^ a4, 1), a4 = (b5 = f3) + Z2 | 0, a4 = kA2 + ((c4 = _4 + M4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (e6 = (c4 = c4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? a4 + 1 | 0 : a4) + sA2 | 0, nA2 = v4 = c4 + gA2 | 0, v4 = a4 = v4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, R4 = _4, J4 = c4, x4 = e6, _4 = UI(r4 ^ S4, m4 ^ u4, 1), a4 = GA2 + (e6 = f3) | 0, a4 = Y4 + ((c4 = _4 + _A2 | 0) >>> 0 < _A2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = NA2 + (r4 = (c4 = c4 + D4 | 0) >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4) | 0, u4 = D4 = c4 + cA2 | 0, D4 = a4 = D4 >>> 0 < cA2 >>> 0 ? a4 + 1 | 0 : a4, Y4 = _4, S4 = e6, a4 = UI(c4 ^ d5, r4 ^ IA2, 32), d5 = _4 = f3, r4 = a4, c4 = _4, a4 = U4 + AA2 | 0, a4 = (_4 = y4 + q3 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, y4 = _4, U4 = a4, a4 = a4 + c4 | 0, a4 = (e6 = _4 + r4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, _4 = e6 ^ Y4, Y4 = a4, _4 = UI(_4, a4 ^ S4, 40), a4 = (a4 = D4) + (D4 = f3) | 0, S4 = c4 = _4 + u4 | 0, u4 = a4 = c4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, d5 = UI(c4 ^ r4, d5 ^ a4, 48), a4 = UI(d5 ^ J4, (a4 = x4) ^ (x4 = f3), 32), m4 = c4 = f3, q3 = a4, c4 = UI(y4 ^ s4, U4 ^ L4, 1), a4 = (y4 = f3) + yA2 | 0, a4 = N4 + ((r4 = c4 + rA2 | 0) >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = B4 + (s4 = (r4 = r4 + w4 | 0) >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4) | 0, L4 = w4 = r4 + fA2 | 0, w4 = a4 = w4 >>> 0 < fA2 >>> 0 ? a4 + 1 | 0 : a4, N4 = c4, U4 = y4, r4 = UI(r4 ^ H4, s4 ^ $2, 32), a4 = (H4 = f3) + l4 | 0, y4 = c4 = r4 + h4 | 0, c4 = (s4 = UI(c4 ^ N4, (h4 = c4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4) ^ U4, 40)) + L4 | 0, a4 = (L4 = f3) + w4 | 0, N4 = c4, c4 = UI(c4 ^ r4, H4 ^ (U4 = c4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = h4 + (AA2 = f3) | 0, H4 = c4, l4 = c4 = y4 + c4 | 0, J4 = a4 = c4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, a4 = m4 + a4 | 0, a4 = (r4 = c4 + q3 | 0) >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, c4 = b5, b5 = a4, y4 = UI(r4 ^ R4, c4 ^ a4, 40), a4 = (IA2 = f3) + v4 | 0, w4 = c4 = y4 + nA2 | 0, a4 = UI(c4 ^ q3, m4 ^ (v4 = c4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4), 48), m4 = c4 = f3, q3 = a4, c4 = _4, a4 = Y4 + x4 | 0, Y4 = _4 = e6 + d5 | 0, d5 = a4 = _4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, a4 = UI(_4 ^ c4, a4 ^ D4, 1), e6 = c4 = f3, _4 = a4, a4 = U4 + Q5 | 0, a4 = ((h4 = N4 + g6 | 0) >>> 0 < g6 >>> 0 ? a4 + 1 | 0 : a4) + c4 | 0, a4 = tA2 + (h4 = (c4 = _4 + h4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4) | 0, x4 = D4 = c4 + z2 | 0, D4 = a4 = D4 >>> 0 < z2 >>> 0 ? a4 + 1 | 0 : a4, N4 = _4, U4 = e6, _4 = UI(M4 ^ O2, Z2 ^ T2, 48), a4 = W2 + (T2 = f3) | 0, M4 = _4, a4 = (_4 = n5 + _4 | 0) >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4, n5 = _4, c4 = UI(c4 ^ p4, h4 ^ hA2, 32), W2 = a4, a4 = a4 + (O2 = f3) | 0, e6 = _4 = c4 + _4 | 0, h4 = UI(_4 ^ N4, (p4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4) ^ U4, 40), a4 = (Z2 = f3) + D4 | 0, D4 = _4 = h4 + x4 | 0, _4 = UI(_4 ^ c4, O2 ^ (N4 = _4 >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = p4 + ($2 = f3) | 0, U4 = _4, O2 = a4 = (p4 = e6 + _4 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(h4 ^ p4, Z2 ^ a4, 1), a4 = FA2 + (x4 = f3) | 0, Z2 = _4, hA2 = _4 = QA2 + _4 | 0, e6 = a4 = _4 >>> 0 < QA2 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(k4 ^ n5, W2 ^ CA2, 1), a4 = (h4 = f3) + u4 | 0, a4 = SA2 + ((c4 = _4 + S4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = BA2 + (n5 = (c4 = c4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, W2 = k4 = c4 + j2 | 0, k4 = a4 = k4 >>> 0 < j2 >>> 0 ? a4 + 1 | 0 : a4, S4 = h4, c4 = UI(c4 ^ H4, n5 ^ AA2, 32), a4 = K4 + (AA2 = f3) | 0, u4 = c4, a4 = (h4 = t4 + c4 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4, t4 = S4, S4 = a4, n5 = UI(_4 ^ h4, t4 ^ a4, 40), a4 = (CA2 = f3) + k4 | 0, H4 = _4 = n5 + W2 | 0, a4 = (K4 = _4 >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4) + e6 | 0, k4 = a4 = (e6 = _4 + hA2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, W2 = a4 = UI(e6 ^ q3, a4 ^ m4, 32), R4 = _4 = f3, _4 = UI(s4 ^ l4, J4 ^ L4, 1), a4 = (t4 = f3) + F4 | 0, a4 = X2 + ((c4 = _4 + G4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (s4 = (c4 = I7 + c4 | 0) >>> 0 < I7 >>> 0 ? a4 + 1 | 0 : a4) + P7 | 0, J4 = F4 = c4 + aA2 | 0, F4 = a4 = F4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, G4 = _4, l4 = t4, c4 = UI(c4 ^ M4, s4 ^ T2, 32), a4 = (M4 = f3) + d5 | 0, t4 = _4 = c4 + Y4 | 0, _4 = (s4 = UI(_4 ^ G4, (Y4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4) ^ l4, 40)) + J4 | 0, a4 = (J4 = f3) + F4 | 0, F4 = _4, _4 = UI(_4 ^ c4, M4 ^ (G4 = _4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = Y4 + (T2 = f3) | 0, Y4 = _4, M4 = a4 = (_4 = t4 + _4 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + R4 | 0, d5 = a4 = (t4 = _4) >>> 0 > (_4 = _4 + W2 | 0) >>> 0 ? a4 + 1 | 0 : a4, c4 = UI(_4 ^ Z2, x4 ^ a4, 40), a4 = k4 + (x4 = f3) | 0, l4 = c4, a4 = Q5 + ((c4 = e6 + c4 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4) | 0, Z2 = c4 = c4 + g6 | 0, e6 = c4 ^ W2, W2 = a4 = c4 >>> 0 < g6 >>> 0 ? a4 + 1 | 0 : a4, c4 = UI(e6, R4 ^ a4, 48), a4 = d5 + (R4 = f3) | 0, d5 = a4 = (k4 = _4 + c4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, _4 = a4 = UI(k4 ^ l4, x4 ^ a4, 1), l4 = e6 = f3, e6 = UI(t4 ^ s4, M4 ^ J4, 1), a4 = N4 + (s4 = f3) | 0, a4 = SA2 + ((t4 = e6 + D4 | 0) >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = DA2 + (D4 = (t4 = t4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, x4 = N4 = t4 + oA2 | 0, N4 = a4 = N4 >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4, M4 = e6, J4 = s4, a4 = b5 + m4 | 0, a4 = (e6 = r4 + q3 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, b5 = e6, u4 = UI(H4 ^ u4, K4 ^ AA2, 48), s4 = UI(t4 ^ u4, D4 ^ (AA2 = f3), 32), H4 = a4, a4 = a4 + (hA2 = f3) | 0, D4 = e6 = s4 + e6 | 0, e6 = UI(e6 ^ M4, (K4 = e6 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4) ^ J4, 40), a4 = (M4 = f3) + N4 | 0, J4 = a4 = (r4 = e6 + x4 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + l4 | 0, a4 = B4 + ((q3 = r4) >>> 0 > (r4 = _4 + r4 | 0) >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (t4 = (r4 = r4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? a4 + 1 | 0 : a4) + yA2 | 0, nA2 = N4 = r4 + rA2 | 0, x4 = a4 = N4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, L4 = _4, m4 = r4, a4 = UI(y4 ^ b5, H4 ^ IA2, 1), y4 = r4 = f3, _4 = a4, a4 = G4 + GA2 | 0, a4 = ((N4 = F4 + _A2 | 0) >>> 0 < _A2 >>> 0 ? a4 + 1 | 0 : a4) + r4 | 0, a4 = tA2 + (N4 = (r4 = _4 + N4 | 0) >>> 0 < N4 >>> 0 ? a4 + 1 | 0 : a4) | 0, H4 = F4 = r4 + z2 | 0, F4 = a4 = F4 >>> 0 < z2 >>> 0 ? a4 + 1 | 0 : a4, G4 = _4, a4 = UI(r4 ^ U4, N4 ^ $2, 32), b5 = _4 = f3, r4 = a4, N4 = _4, a4 = S4 + AA2 | 0, S4 = _4 = h4 + u4 | 0, U4 = a4 = _4 >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + N4 | 0, a4 = (h4 = _4 + r4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, _4 = h4 ^ G4;
                      G4 = a4, N4 = UI(_4, a4 ^ y4, 40), a4 = (AA2 = f3) + F4 | 0, u4 = UI(F4 = (_4 = N4 + H4 | 0) ^ r4, b5 ^ (r4 = _4 >>> 0 < N4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = UI(a4 = u4 ^ m4, (m4 = f3) ^ t4, 32), IA2 = t4 = f3, H4 = a4, F4 = t4, t4 = UI(n5 ^ S4, U4 ^ CA2, 1), a4 = BA2 + (n5 = f3) | 0, a4 = v4 + ((y4 = t4 + j2 | 0) >>> 0 < j2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = kA2 + (w4 = (y4 = y4 + w4 | 0) >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4) | 0, U4 = S4 = y4 + eA2 | 0, S4 = a4 = S4 >>> 0 < eA2 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(y4 ^ Y4, w4 ^ T2, 32), a4 = O2 + (b5 = f3) | 0, Y4 = y4, p4 = a4 = (y4 = p4 + y4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, w4 = UI(t4 ^ y4, a4 ^ n5, 40), a4 = (T2 = f3) + S4 | 0, n5 = t4 = w4 + U4 | 0, t4 = UI(S4 = t4 ^ Y4, b5 ^ (Y4 = t4 >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = p4 + ($2 = f3) | 0, S4 = t4, U4 = t4 = y4 + t4 | 0, b5 = a4 = t4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, a4 = a4 + F4 | 0, a4 = (y4 = t4 + H4 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4, t4 = l4, l4 = a4, p4 = UI(y4 ^ L4, t4 ^ a4, 40), a4 = (v4 = f3) + x4 | 0, F4 = t4 = p4 + nA2 | 0, t4 = UI(x4 = t4 ^ H4, IA2 ^ (H4 = t4 >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = l4 + (IA2 = f3) | 0, l4 = t4, y4 = a4 = (t4 = y4 + t4 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, v4 = a4 = UI(t4 ^ p4, v4 ^ a4, 1), CA2 = a4, O2 = p4 = f3, p4 = r4, r4 = e6, e6 = UI(s4 ^ q3, J4 ^ hA2, 48), a4 = K4 + (hA2 = f3) | 0, K4 = e6, a4 = (e6 = D4 + e6 | 0) >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4, D4 = _4, _4 = r4 ^ e6, r4 = a4, _4 = UI(_4, a4 ^ M4, 1), a4 = (M4 = f3) + p4 | 0, a4 = NA2 + (_4 >>> 0 > (s4 = D4 + _4 | 0) >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = sA2 + (D4 = (s4 = s4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, q3 = p4 = s4 + gA2 | 0, p4 = a4 = p4 >>> 0 < gA2 >>> 0 ? a4 + 1 | 0 : a4, s4 = UI(s4 ^ S4, D4 ^ $2, 32), a4 = d5 + (J4 = f3) | 0, S4 = a4 = (D4 = s4 + k4 | 0) >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, k4 = UI(_4 ^ D4, M4 ^ a4, 40), a4 = ($2 = f3) + p4 | 0, M4 = _4 = k4 + q3 | 0, s4 = UI(_4 ^ s4, J4 ^ (d5 = _4 >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4), 48), a4 = S4 + (q3 = f3) | 0, J4 = _4 = s4 + D4 | 0, S4 = _4, x4 = a4 = _4 >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4, D4 = e6, p4 = r4, a4 = G4 + m4 | 0, a4 = (_4 = h4 + u4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, h4 = _4, _4 ^= N4, N4 = a4, a4 = UI(_4, AA2 ^ a4, 1), L4 = _4 = f3, G4 = a4, r4 = a4, a4 = Y4 + P7 | 0, a4 = ((e6 = n5 + aA2 | 0) >>> 0 < aA2 >>> 0 ? a4 + 1 | 0 : a4) + _4 | 0, n5 = a4 = (_4 = e6) >>> 0 > (e6 = r4 + e6 | 0) >>> 0 ? a4 + 1 | 0 : a4, r4 = UI(c4 ^ e6, a4 ^ R4, 32), a4 = (a4 = p4) + (p4 = f3) | 0, u4 = _4 = r4 + D4 | 0, c4 = UI(c4 = _4 ^ G4, L4 ^ (G4 = _4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4), 40), a4 = n5 + (R4 = f3) | 0, a4 = wA2 + ((_4 = c4 + e6 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4) | 0, L4 = a4 = (D4 = _4 + V2 | 0) >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4, p4 = UI(r4 ^ D4, p4 ^ a4, 48), nA2 = a4 = f3, _4 = UI(w4 ^ U4, b5 ^ T2, 1), a4 = (r4 = f3) + W2 | 0, a4 = pA2 + ((e6 = _4 + Z2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = X2 + (w4 = (e6 = e6 + EA2 | 0) >>> 0 < EA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, W2 = n5 = I7 + e6 | 0, U4 = a4 = n5 >>> 0 < I7 >>> 0 ? a4 + 1 | 0 : a4, b5 = _4, n5 = UI(e6 ^ K4, w4 ^ hA2, 32), a4 = (T2 = f3) + N4 | 0, N4 = _4 = n5 + h4 | 0, e6 = UI(_4 ^ b5, (K4 = _4 >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4) ^ r4, 40), a4 = (a4 = U4) + (U4 = f3) | 0, b5 = _4 = e6 + W2 | 0, W2 = a4 = _4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, r4 = a4, a4 = X2 + O2 | 0, a4 = ((w4 = I7 + v4 | 0) >>> 0 < I7 >>> 0 ? a4 + 1 | 0 : a4) + r4 | 0, Y4 = a4 = (r4 = _4 + w4 | 0) >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(r4 ^ p4, nA2 ^ a4, 32), a4 = (v4 = f3) + x4 | 0, h4 = UI((w4 = _4 + S4 | 0) ^ CA2, (a4 = w4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) ^ O2, 40), O2 = a4, a4 = sA2 + (S4 = f3) | 0, a4 = Y4 + ((Z2 = h4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (Y4 = r4 + Z2 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, r4 = v4, v4 = a4, r4 = UI(_4 ^ Y4, r4 ^ a4, 48), a4 = (a4 = O2) + (O2 = f3) | 0, _4 = h4 ^ (w4 = r4 + w4 | 0), h4 = a4 = w4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, Z2 = a4 = UI(_4, a4 ^ S4, 1), CA2 = a4, m4 = _4 = f3, S4 = t4, AA2 = y4, t4 = e6, e6 = UI(n5 ^ b5, W2 ^ T2, 48), a4 = K4 + (b5 = f3) | 0, n5 = _4 = e6 + N4 | 0, N4 = a4 = _4 >>> 0 < N4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(_4 ^ t4, a4 ^ U4, 1), a4 = (W2 = f3) + NA2 | 0, a4 = L4 + ((_4 = t4 + cA2 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4) | 0, D4 = a4 = (y4 = _4 + D4 | 0) >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(y4 ^ s4, a4 ^ q3, 32), a4 = (U4 = f3) + AA2 | 0, S4 = s4 = _4 + S4 | 0, K4 = a4 = s4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(t4 ^ s4, a4 ^ W2, 40), a4 = DA2 + (hA2 = f3) | 0, W2 = t4, a4 = D4 + ((t4 = oA2 + t4 | 0) >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, y4 = a4 = (t4 = t4 + y4 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, s4 = UI(_4 ^ t4, a4 ^ U4, 48), a4 = (a4 = K4) + (K4 = f3) | 0, q3 = _4 = s4 + S4 | 0, U4 = _4, L4 = a4 = _4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, a4 = G4 + nA2 | 0, S4 = (_4 = p4 + u4 | 0) ^ c4, c4 = a4 = _4 >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, a4 = UI(S4, a4 ^ R4, 1), R4 = D4 = f3, S4 = a4, a4 = d5 + tA2 | 0, a4 = ((p4 = M4 + z2 | 0) >>> 0 < z2 >>> 0 ? a4 + 1 | 0 : a4) + D4 | 0, G4 = a4 = (G4 = p4) >>> 0 > (p4 = p4 + S4 | 0) >>> 0 ? a4 + 1 | 0 : a4, u4 = D4 = UI(p4 ^ l4, IA2 ^ a4, 32), M4 = a4 = f3, a4 = a4 + N4 | 0, d5 = D4 = D4 + n5 | 0, l4 = a4 = u4 >>> 0 > D4 >>> 0 ? a4 + 1 | 0 : a4, D4 = UI(D4 ^ S4, R4 ^ a4, 40), a4 = yA2 + (R4 = f3) | 0, a4 = G4 + ((n5 = D4 + rA2 | 0) >>> 0 < rA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, n5 = a4 = (S4 = p4) >>> 0 > (p4 = p4 + n5 | 0) >>> 0 ? a4 + 1 | 0 : a4, S4 = UI(p4 ^ u4, a4 ^ M4, 48), IA2 = a4 = f3, N4 = a4, k4 = UI(k4 ^ J4, x4 ^ $2, 1), G4 = a4 = f3, u4 = e6, a4 = a4 + P7 | 0, a4 = H4 + ((e6 = k4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (e6 = e6 + F4 | 0) >>> 0 < F4 >>> 0 ? a4 + 1 | 0 : a4, F4 = e6 ^ u4, u4 = a4, F4 = UI(F4, a4 ^ b5, 32), a4 = ($2 = f3) + c4 | 0, H4 = _4 = F4 + _4 | 0, c4 = UI(_4 ^ k4, (c4 = G4) ^ (G4 = _4 >>> 0 < F4 >>> 0 ? a4 + 1 | 0 : a4), 40), a4 = pA2 + (M4 = f3) | 0, a4 = u4 + ((_4 = c4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, u4 = _4 = _4 + e6 | 0, b5 = a4 = _4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, e6 = a4, a4 = m4 + SA2 | 0, a4 = ((k4 = Z2 + iA2 | 0) >>> 0 < iA2 >>> 0 ? a4 + 1 | 0 : a4) + e6 | 0, Z2 = a4 = (e6 = _4 + k4 | 0) >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(e6 ^ S4, a4 ^ N4, 32), a4 = (J4 = f3) + L4 | 0, N4 = UI((k4 = _4 + U4 | 0) ^ CA2, (a4 = k4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) ^ m4, 40), x4 = U4 = f3, m4 = a4, a4 = U4 + kA2 | 0, a4 = Z2 + ((U4 = N4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, Z2 = a4 = (U4 = e6 + U4 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, e6 = UI(_4 ^ U4, a4 ^ J4, 48), a4 = (J4 = f3) + m4 | 0, _4 = (k4 = e6 + k4 | 0) ^ N4, N4 = a4 = k4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, x4 = a4 = UI(_4, a4 ^ x4, 1), m4 = _4 = f3, AA2 = w4, T2 = s4, s4 = c4, c4 = UI(F4 ^ u4, b5 ^ $2, 48), a4 = (F4 = f3) + G4 | 0, G4 = _4 = c4 + H4 | 0, u4 = a4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, s4 = UI(_4 ^ s4, a4 ^ M4, 1), a4 = (M4 = f3) + FA2 | 0, a4 = ((_4 = s4 + QA2 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4) + n5 | 0, p4 = a4 = (w4 = _4 + p4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(w4 ^ T2, a4 ^ K4, 32), a4 = (n5 = f3) + h4 | 0, H4 = h4 = _4 + AA2 | 0, K4 = a4 = h4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, s4 = UI(s4 ^ h4, a4 ^ M4, 40), a4 = B4 + (T2 = f3) | 0, M4 = s4, a4 = p4 + ((s4 = fA2 + s4 | 0) >>> 0 < fA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, b5 = a4 = (h4 = s4 + w4 | 0) >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4, s4 = UI(_4 ^ h4, a4 ^ n5, 48), a4 = (a4 = K4) + (K4 = f3) | 0, H4 = _4 = s4 + H4 | 0, AA2 = a4 = _4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, p4 = r4, w4 = t4, a4 = l4 + IA2 | 0, r4 = a4 = (_4 = S4 + d5 | 0) >>> 0 < S4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(_4 ^ D4, a4 ^ R4, 1), a4 = (D4 = f3) + BA2 | 0, a4 = ((n5 = t4 + j2 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4) + y4 | 0, y4 = UI(p4 ^ (w4 = w4 + n5 | 0), (a4 = w4 >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4) ^ O2, 32), n5 = a4, S4 = t4, a4 = (p4 = f3) + u4 | 0, a4 = (t4 = y4 + G4 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, G4 = t4, t4 ^= S4, S4 = a4, t4 = UI(t4, a4 ^ D4, 40), a4 = Q5 + (u4 = f3) | 0, a4 = ((D4 = t4 + g6 | 0) >>> 0 < g6 >>> 0 ? a4 + 1 | 0 : a4) + n5 | 0, d5 = a4 = (n5 = D4) >>> 0 > (D4 = D4 + w4 | 0) >>> 0 ? a4 + 1 | 0 : a4, p4 = UI(y4 ^ D4, a4 ^ p4, 48), IA2 = a4 = f3, w4 = a4, y4 = UI(q3 ^ W2, L4 ^ hA2, 1), l4 = a4 = f3, W2 = r4, a4 = a4 + wA2 | 0, a4 = v4 + ((r4 = y4 + V2 | 0) >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4) | 0, n5 = F4, F4 = a4 = (r4 = r4 + Y4 | 0) >>> 0 < Y4 >>> 0 ? a4 + 1 | 0 : a4, n5 = UI(c4 ^ r4, n5 ^ a4, 32), a4 = ($2 = f3) + W2 | 0, Y4 = _4 = n5 + _4 | 0, c4 = UI(_4 ^ y4, (c4 = l4) ^ (l4 = _4 >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4), 40), a4 = GA2 + (W2 = f3) | 0, a4 = F4 + ((_4 = c4 + _A2 | 0) >>> 0 < _A2 >>> 0 ? a4 + 1 | 0 : a4) | 0, v4 = _4 = _4 + r4 | 0, q3 = a4 = _4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, r4 = a4, a4 = m4 + tA2 | 0, a4 = ((y4 = z2 + x4 | 0) >>> 0 < z2 >>> 0 ? a4 + 1 | 0 : a4) + r4 | 0, F4 = a4 = (r4 = _4 + y4 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(r4 ^ p4, a4 ^ w4, 32), a4 = (O2 = f3) + AA2 | 0, w4 = UI((y4 = _4 + H4 | 0) ^ x4, (a4 = y4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) ^ m4, 40), x4 = a4, a4 = P7 + (R4 = f3) | 0, a4 = F4 + ((L4 = w4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (F4 = r4 + L4 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, r4 = O2, O2 = a4, r4 = UI(_4 ^ F4, r4 ^ a4, 48), a4 = (a4 = x4) + (x4 = f3) | 0, _4 = (y4 = r4 + y4 | 0) ^ w4, w4 = a4 = y4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, R4 = a4 = UI(_4, a4 ^ R4, 1), L4 = _4 = f3, m4 = s4, s4 = c4, c4 = UI(n5 ^ v4, q3 ^ $2, 48), a4 = (a4 = l4) + (l4 = f3) | 0, Y4 = _4 = c4 + Y4 | 0, n5 = W2, W2 = a4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, s4 = UI(_4 ^ s4, n5 ^ a4, 1), a4 = (v4 = f3) + kA2 | 0, a4 = d5 + ((_4 = s4 + eA2 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4) | 0, n5 = D4, D4 = _4 + D4 | 0, _4 = K4, K4 = a4 = n5 >>> 0 > D4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(D4 ^ m4, _4 ^ a4, 32), a4 = (a4 = N4) + (N4 = f3) | 0, d5 = a4 = (n5 = _4 + k4 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, k4 = n5, s4 = UI(s4 ^ n5, a4 ^ v4, 40), a4 = wA2 + ($2 = f3) | 0, v4 = s4, a4 = K4 + ((s4 = V2 + s4 | 0) >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4) | 0, K4 = a4 = (n5 = s4 + D4 | 0) >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4, s4 = UI(_4 ^ n5, a4 ^ N4, 48), a4 = (a4 = d5) + (d5 = f3) | 0, q3 = _4 = s4 + k4 | 0, m4 = a4 = _4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, k4 = e6, a4 = S4 + IA2 | 0, e6 = a4 = (_4 = p4 + G4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(_4 ^ t4, a4 ^ u4, 1), a4 = sA2 + (p4 = f3) | 0, a4 = b5 + ((D4 = t4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, S4 = (D4 = h4 + D4 | 0) ^ k4, k4 = a4 = D4 >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, h4 = UI(S4, a4 ^ J4, 32), N4 = a4 = f3, S4 = t4, a4 = a4 + W2 | 0, a4 = (t4 = h4 + Y4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, G4 = t4, t4 ^= S4, S4 = a4, t4 = UI(t4, a4 ^ p4, 40), a4 = Q5 + (u4 = f3) | 0, a4 = k4 + ((p4 = t4 + g6 | 0) >>> 0 < g6 >>> 0 ? a4 + 1 | 0 : a4) | 0, b5 = a4 = (p4 = D4 + p4 | 0) >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4, k4 = UI(h4 ^ p4, a4 ^ N4, 48), IA2 = a4 = f3, D4 = a4, h4 = UI(M4 ^ H4, T2 ^ AA2, 1), Y4 = a4 = f3, H4 = e6, a4 = a4 + B4 | 0, a4 = Z2 + ((e6 = h4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, U4 = a4 = (e6 = e6 + U4 | 0) >>> 0 < U4 >>> 0 ? a4 + 1 | 0 : a4, N4 = UI(c4 ^ e6, a4 ^ l4, 32), a4 = (CA2 = f3) + H4 | 0, H4 = _4 = N4 + _4 | 0, c4 = UI(_4 ^ h4, (M4 = _4 >>> 0 < N4 >>> 0 ? a4 + 1 | 0 : a4) ^ Y4, 40), a4 = X2 + (l4 = f3) | 0, a4 = U4 + ((_4 = I7 + c4 | 0) >>> 0 < I7 >>> 0 ? a4 + 1 | 0 : a4) | 0, U4 = _4 = _4 + e6 | 0, W2 = a4 = _4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, e6 = a4, a4 = L4 + pA2 | 0, a4 = ((h4 = R4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? a4 + 1 | 0 : a4) + e6 | 0, Y4 = a4 = (e6 = _4 + h4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(e6 ^ k4, a4 ^ D4, 32), a4 = (Z2 = f3) + m4 | 0, D4 = UI((h4 = _4 + q3 | 0) ^ R4, (a4 = h4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) ^ L4, 40), J4 = a4, a4 = NA2 + (R4 = f3) | 0, a4 = Y4 + ((L4 = D4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (Y4 = e6 + L4 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, e6 = Z2, Z2 = a4, e6 = UI(_4 ^ Y4, e6 ^ a4, 48), a4 = (a4 = J4) + (J4 = f3) | 0, _4 = (h4 = e6 + h4 | 0) ^ D4, D4 = a4 = h4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, R4 = a4 = UI(_4, a4 ^ R4, 1), hA2 = a4, L4 = _4 = f3, AA2 = y4, T2 = s4, y4 = c4, c4 = UI(N4 ^ U4, W2 ^ CA2, 48), a4 = (N4 = f3) + M4 | 0, U4 = _4 = c4 + H4 | 0, H4 = a4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ y4, a4 ^ l4, 1), a4 = (l4 = f3) + yA2 | 0, a4 = b5 + ((_4 = y4 + rA2 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4) | 0, p4 = a4 = (s4 = _4 + p4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(s4 ^ T2, a4 ^ d5, 32), a4 = (M4 = f3) + w4 | 0, d5 = a4 = (w4 = _4 + AA2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(y4 ^ w4, a4 ^ l4, 40), a4 = FA2 + (CA2 = f3) | 0, b5 = y4, a4 = p4 + ((y4 = QA2 + y4 | 0) >>> 0 < QA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, p4 = y4 + s4 | 0, y4 = M4, M4 = a4 = p4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ p4, y4 ^ a4, 48), a4 = (a4 = d5) + (d5 = f3) | 0, l4 = _4 = y4 + w4 | 0, W2 = a4 = _4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, s4 = r4, a4 = S4 + IA2 | 0, r4 = a4 = (_4 = k4 + G4 | 0) >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(_4 ^ t4, a4 ^ u4, 1), a4 = (k4 = f3) + GA2 | 0, a4 = K4 + ((w4 = t4 + _A2 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4) | 0, s4 = UI(s4 ^ (w4 = w4 + n5 | 0), (a4 = w4 >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4) ^ x4, 32), S4 = n5 = f3, n5 = a4, G4 = t4, a4 = S4 + H4 | 0, a4 = (t4 = s4 + U4 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, U4 = t4, t4 ^= G4, G4 = a4, t4 = UI(t4, a4 ^ k4, 40), a4 = DA2 + (u4 = f3) | 0, a4 = ((k4 = t4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4) + n5 | 0, K4 = S4, S4 = a4 = (n5 = w4 + k4 | 0) >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, k4 = UI(s4 ^ n5, K4 ^ a4, 48), IA2 = a4 = f3, w4 = a4, s4 = UI(q3 ^ v4, m4 ^ $2, 1), H4 = a4 = f3, K4 = r4, a4 = a4 + BA2 | 0, a4 = O2 + ((r4 = s4 + j2 | 0) >>> 0 < j2 >>> 0 ? a4 + 1 | 0 : a4) | 0, F4 = a4 = (r4 = r4 + F4 | 0) >>> 0 < F4 >>> 0 ? a4 + 1 | 0 : a4, N4 = UI(c4 ^ r4, a4 ^ N4, 32), a4 = ($2 = f3) + K4 | 0, K4 = _4 = N4 + _4 | 0, c4 = UI(_4 ^ s4, (c4 = H4) ^ (H4 = _4 >>> 0 < N4 >>> 0 ? a4 + 1 | 0 : a4), 40), a4 = SA2 + (v4 = f3) | 0, a4 = F4 + ((_4 = c4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, q3 = _4 = _4 + r4 | 0, O2 = a4 = _4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, r4 = a4, a4 = L4 + Q5 | 0, a4 = ((s4 = R4 + g6 | 0) >>> 0 < g6 >>> 0 ? a4 + 1 | 0 : a4) + r4 | 0, F4 = a4 = (r4 = _4 + s4 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(r4 ^ k4, a4 ^ w4, 32), a4 = (R4 = f3) + W2 | 0, w4 = UI((s4 = _4 + l4 | 0) ^ hA2, (a4 = s4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) ^ L4, 40), L4 = a4, a4 = kA2 + (x4 = f3) | 0, a4 = F4 + ((m4 = w4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (F4 = r4 + m4 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, r4 = R4, R4 = a4, r4 = UI(_4 ^ F4, r4 ^ a4, 48), a4 = (a4 = L4) + (L4 = f3) | 0, _4 = (s4 = r4 + s4 | 0) ^ w4, w4 = a4 = s4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, x4 = a4 = UI(_4, a4 ^ x4, 1), m4 = _4 = f3, AA2 = h4, T2 = y4, y4 = c4, c4 = UI(N4 ^ q3, O2 ^ $2, 48), a4 = (N4 = f3) + H4 | 0, H4 = _4 = c4 + K4 | 0, K4 = a4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ y4, a4 ^ v4, 1), a4 = (v4 = f3) + FA2 | 0, a4 = S4 + ((_4 = y4 + QA2 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4) | 0, n5 = a4 = (h4 = _4 + n5 | 0) >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(h4 ^ T2, a4 ^ d5, 32), a4 = (S4 = f3) + D4 | 0, d5 = a4 = (D4 = _4 + AA2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(y4 ^ D4, a4 ^ v4, 40), a4 = BA2 + ($2 = f3) | 0, v4 = y4, a4 = n5 + ((y4 = j2 + y4 | 0) >>> 0 < j2 >>> 0 ? a4 + 1 | 0 : a4) | 0, n5 = y4 + h4 | 0, y4 = S4, S4 = a4 = n5 >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ n5, y4 ^ a4, 48), a4 = (a4 = d5) + (d5 = f3) | 0, q3 = _4 = y4 + D4 | 0, O2 = a4 = _4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, h4 = e6, a4 = G4 + IA2 | 0, e6 = a4 = (_4 = k4 + U4 | 0) >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(_4 ^ t4, a4 ^ u4, 1), a4 = SA2 + (k4 = f3) | 0, a4 = M4 + ((D4 = t4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, p4 = a4 = (D4 = D4 + p4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, h4 = UI(h4 ^ D4, a4 ^ J4, 32), U4 = a4 = f3, G4 = t4, a4 = a4 + K4 | 0, a4 = (t4 = h4 + H4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, u4 = t4, t4 ^= G4, G4 = a4, t4 = UI(t4, a4 ^ k4, 40), a4 = pA2 + (H4 = f3) | 0, a4 = p4 + ((k4 = t4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (p4 = D4 + k4 | 0) >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4, D4 = U4, U4 = a4, k4 = UI(h4 ^ p4, D4 ^ a4, 48), IA2 = a4 = f3, D4 = a4, h4 = UI(b5 ^ l4, W2 ^ CA2, 1), K4 = a4 = f3, M4 = e6, a4 = a4 + X2 | 0, a4 = Z2 + ((e6 = I7 + h4 | 0) >>> 0 < I7 >>> 0 ? a4 + 1 | 0 : a4) | 0, Y4 = a4 = (e6 = e6 + Y4 | 0) >>> 0 < Y4 >>> 0 ? a4 + 1 | 0 : a4, N4 = UI(c4 ^ e6, a4 ^ N4, 32), a4 = (CA2 = f3) + M4 | 0, M4 = _4 = N4 + _4 | 0, c4 = UI(_4 ^ h4, (c4 = K4) ^ (K4 = _4 >>> 0 < N4 >>> 0 ? a4 + 1 | 0 : a4), 40), a4 = wA2 + (b5 = f3) | 0, a4 = Y4 + ((_4 = c4 + V2 | 0) >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4) | 0, l4 = _4 = _4 + e6 | 0, W2 = a4 = _4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, e6 = a4, a4 = m4 + sA2 | 0, a4 = ((h4 = x4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? a4 + 1 | 0 : a4) + e6 | 0, Y4 = a4 = (e6 = _4 + h4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(e6 ^ k4, a4 ^ D4, 32), a4 = (Z2 = f3) + O2 | 0, D4 = UI((h4 = _4 + q3 | 0) ^ x4, (a4 = h4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) ^ m4, 40), x4 = a4, a4 = B4 + (J4 = f3) | 0, a4 = Y4 + ((m4 = D4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (Y4 = e6 + m4 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, e6 = Z2, Z2 = a4, e6 = UI(_4 ^ Y4, e6 ^ a4, 48), a4 = (a4 = x4) + (x4 = f3) | 0, _4 = (h4 = e6 + h4 | 0) ^ D4, D4 = a4 = h4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, J4 = a4 = UI(_4, a4 ^ J4, 1), m4 = _4 = f3, AA2 = s4, T2 = y4, y4 = c4, c4 = UI(N4 ^ l4, W2 ^ CA2, 48), a4 = (N4 = f3) + K4 | 0, K4 = _4 = c4 + M4 | 0, M4 = a4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ y4, a4 ^ b5, 1), a4 = (b5 = f3) + tA2 | 0, a4 = U4 + ((_4 = y4 + z2 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4) | 0, p4 = a4 = (s4 = _4 + p4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(s4 ^ T2, a4 ^ d5, 32), a4 = (U4 = f3) + w4 | 0, d5 = a4 = (w4 = _4 + AA2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(y4 ^ w4, a4 ^ b5, 40), a4 = GA2 + (CA2 = f3) | 0, b5 = y4, a4 = p4 + ((y4 = _A2 + y4 | 0) >>> 0 < _A2 >>> 0 ? a4 + 1 | 0 : a4) | 0, p4 = y4 + s4 | 0, y4 = U4, U4 = a4 = p4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ p4, y4 ^ a4, 48), a4 = (a4 = d5) + (d5 = f3) | 0, l4 = _4 = y4 + w4 | 0, W2 = a4 = _4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, s4 = r4, a4 = G4 + IA2 | 0, r4 = a4 = (_4 = k4 + u4 | 0) >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(_4 ^ t4, a4 ^ H4, 1), a4 = (k4 = f3) + DA2 | 0, a4 = S4 + ((w4 = t4 + oA2 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4) | 0, n5 = a4 = (w4 = w4 + n5 | 0) >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4, s4 = UI(s4 ^ w4, a4 ^ L4, 32), S4 = a4 = f3, G4 = t4, a4 = a4 + M4 | 0, a4 = (t4 = s4 + K4 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, u4 = t4, t4 ^= G4, G4 = a4, t4 = UI(t4, a4 ^ k4, 40), a4 = yA2 + (H4 = f3) | 0, a4 = n5 + ((k4 = t4 + rA2 | 0) >>> 0 < rA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, K4 = S4, S4 = a4 = (n5 = w4 + k4 | 0) >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4, k4 = UI(s4 ^ n5, K4 ^ a4, 48), IA2 = a4 = f3, w4 = a4, s4 = UI(q3 ^ v4, O2 ^ $2, 1), K4 = a4 = f3, M4 = r4, a4 = a4 + P7 | 0, a4 = R4 + ((r4 = s4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, F4 = a4 = (r4 = r4 + F4 | 0) >>> 0 < F4 >>> 0 ? a4 + 1 | 0 : a4, N4 = UI(c4 ^ r4, a4 ^ N4, 32), a4 = ($2 = f3) + M4 | 0, M4 = _4 = N4 + _4 | 0, c4 = UI(_4 ^ s4, (c4 = K4) ^ (K4 = _4 >>> 0 < N4 >>> 0 ? a4 + 1 | 0 : a4), 40), a4 = NA2 + (v4 = f3) | 0, a4 = F4 + ((_4 = c4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, q3 = _4 = _4 + r4 | 0, O2 = a4 = _4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, r4 = a4, a4 = m4 + B4 | 0, a4 = ((s4 = J4 + fA2 | 0) >>> 0 < fA2 >>> 0 ? a4 + 1 | 0 : a4) + r4 | 0, F4 = a4 = (r4 = _4 + s4 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(r4 ^ k4, a4 ^ w4, 32), a4 = (R4 = f3) + W2 | 0, w4 = UI((s4 = _4 + l4 | 0) ^ J4, (a4 = s4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) ^ m4, 40), L4 = a4, a4 = SA2 + (J4 = f3) | 0, a4 = F4 + ((m4 = w4 + iA2 | 0) >>> 0 < iA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (F4 = r4 + m4 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, r4 = R4, R4 = a4, r4 = UI(_4 ^ F4, r4 ^ a4, 48), a4 = (a4 = L4) + (L4 = f3) | 0, _4 = (s4 = r4 + s4 | 0) ^ w4, w4 = a4 = s4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, J4 = a4 = UI(_4, a4 ^ J4, 1), m4 = _4 = f3, AA2 = h4, T2 = y4, y4 = c4, c4 = UI(N4 ^ q3, O2 ^ $2, 48), a4 = (N4 = f3) + K4 | 0, K4 = _4 = c4 + M4 | 0, M4 = a4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ y4, a4 ^ v4, 1), a4 = (v4 = f3) + P7 | 0, a4 = S4 + ((_4 = y4 + aA2 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4) | 0, n5 = a4 = (h4 = _4 + n5 | 0) >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(h4 ^ T2, a4 ^ d5, 32), a4 = (S4 = f3) + D4 | 0, d5 = a4 = (D4 = _4 + AA2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(y4 ^ D4, a4 ^ v4, 40), a4 = yA2 + ($2 = f3) | 0, v4 = y4, a4 = n5 + ((y4 = rA2 + y4 | 0) >>> 0 < rA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, n5 = y4 + h4 | 0, y4 = S4, S4 = a4 = n5 >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ n5, y4 ^ a4, 48), a4 = (a4 = d5) + (d5 = f3) | 0, q3 = _4 = y4 + D4 | 0, O2 = a4 = _4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, h4 = e6, a4 = G4 + IA2 | 0, e6 = a4 = (_4 = k4 + u4 | 0) >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(_4 ^ t4, a4 ^ H4, 1), a4 = DA2 + (k4 = f3) | 0, a4 = U4 + ((D4 = t4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, p4 = a4 = (D4 = D4 + p4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, h4 = UI(h4 ^ D4, a4 ^ x4, 32), U4 = a4 = f3, G4 = t4, a4 = a4 + M4 | 0, a4 = (t4 = h4 + K4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, u4 = t4, t4 ^= G4, G4 = a4, t4 = UI(t4, a4 ^ k4, 40), a4 = GA2 + (H4 = f3) | 0, a4 = p4 + ((k4 = t4 + _A2 | 0) >>> 0 < _A2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (p4 = D4 + k4 | 0) >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4, D4 = U4, U4 = a4, k4 = UI(h4 ^ p4, D4 ^ a4, 48), IA2 = a4 = f3, D4 = a4, h4 = UI(b5 ^ l4, W2 ^ CA2, 1), K4 = a4 = f3, M4 = e6, a4 = a4 + BA2 | 0, a4 = Z2 + ((e6 = h4 + j2 | 0) >>> 0 < j2 >>> 0 ? a4 + 1 | 0 : a4) | 0, Y4 = a4 = (e6 = e6 + Y4 | 0) >>> 0 < Y4 >>> 0 ? a4 + 1 | 0 : a4, N4 = UI(c4 ^ e6, a4 ^ N4, 32), a4 = (CA2 = f3) + M4 | 0, M4 = _4 = N4 + _4 | 0, c4 = UI(_4 ^ h4, (c4 = K4) ^ (K4 = _4 >>> 0 < N4 >>> 0 ? a4 + 1 | 0 : a4), 40), a4 = NA2 + (b5 = f3) | 0, a4 = Y4 + ((_4 = c4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, l4 = _4 = _4 + e6 | 0, W2 = a4 = _4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, e6 = a4, a4 = m4 + wA2 | 0, a4 = ((h4 = J4 + V2 | 0) >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4) + e6 | 0, Y4 = a4 = (e6 = _4 + h4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(e6 ^ k4, a4 ^ D4, 32), a4 = (Z2 = f3) + O2 | 0, D4 = UI((h4 = _4 + q3 | 0) ^ J4, (a4 = h4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) ^ m4, 40), x4 = a4, a4 = X2 + (J4 = f3) | 0, a4 = Y4 + ((m4 = I7 + D4 | 0) >>> 0 < I7 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (Y4 = e6 + m4 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, e6 = Z2, Z2 = a4, e6 = UI(_4 ^ Y4, e6 ^ a4, 48), a4 = (a4 = x4) + (x4 = f3) | 0, _4 = (h4 = e6 + h4 | 0) ^ D4, D4 = a4 = h4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, J4 = a4 = UI(_4, a4 ^ J4, 1), m4 = _4 = f3, AA2 = s4, T2 = y4, y4 = c4, c4 = UI(N4 ^ l4, W2 ^ CA2, 48), a4 = (N4 = f3) + K4 | 0, K4 = _4 = c4 + M4 | 0, M4 = a4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ y4, a4 ^ b5, 1), a4 = (b5 = f3) + pA2 | 0, a4 = U4 + ((_4 = y4 + EA2 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4) | 0, p4 = a4 = (s4 = _4 + p4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(s4 ^ T2, a4 ^ d5, 32), a4 = (U4 = f3) + w4 | 0, d5 = a4 = (w4 = _4 + AA2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(y4 ^ w4, a4 ^ b5, 40), a4 = Q5 + (CA2 = f3) | 0, b5 = y4, a4 = p4 + ((y4 = g6 + y4 | 0) >>> 0 < g6 >>> 0 ? a4 + 1 | 0 : a4) | 0, p4 = y4 + s4 | 0, y4 = U4, U4 = a4 = p4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ p4, y4 ^ a4, 48), a4 = (a4 = d5) + (d5 = f3) | 0, l4 = _4 = y4 + w4 | 0, W2 = a4 = _4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, s4 = r4, a4 = G4 + IA2 | 0, r4 = a4 = (_4 = k4 + u4 | 0) >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(_4 ^ t4, a4 ^ H4, 1), a4 = (k4 = f3) + sA2 | 0, a4 = S4 + ((w4 = t4 + gA2 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4) | 0, n5 = a4 = (w4 = w4 + n5 | 0) >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4, s4 = UI(s4 ^ w4, a4 ^ L4, 32), S4 = a4 = f3, G4 = t4, a4 = a4 + M4 | 0, a4 = (t4 = s4 + K4 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, u4 = t4, t4 ^= G4, G4 = a4, t4 = UI(t4, a4 ^ k4, 40), a4 = FA2 + (H4 = f3) | 0, a4 = n5 + ((k4 = t4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, K4 = S4, S4 = a4 = (n5 = w4 + k4 | 0) >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4, k4 = UI(s4 ^ n5, K4 ^ a4, 48), IA2 = a4 = f3, w4 = a4, s4 = UI(q3 ^ v4, O2 ^ $2, 1), K4 = a4 = f3, M4 = r4, a4 = a4 + kA2 | 0, a4 = R4 + ((r4 = s4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, F4 = a4 = (r4 = r4 + F4 | 0) >>> 0 < F4 >>> 0 ? a4 + 1 | 0 : a4, N4 = UI(c4 ^ r4, a4 ^ N4, 32), a4 = ($2 = f3) + M4 | 0, M4 = _4 = N4 + _4 | 0, c4 = UI(_4 ^ s4, (c4 = K4) ^ (K4 = _4 >>> 0 < N4 >>> 0 ? a4 + 1 | 0 : a4), 40), a4 = tA2 + (v4 = f3) | 0, a4 = F4 + ((_4 = c4 + z2 | 0) >>> 0 < z2 >>> 0 ? a4 + 1 | 0 : a4) | 0, q3 = _4 = _4 + r4 | 0, O2 = a4 = _4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, r4 = a4, a4 = m4 + NA2 | 0, a4 = ((s4 = J4 + cA2 | 0) >>> 0 < cA2 >>> 0 ? a4 + 1 | 0 : a4) + r4 | 0, F4 = a4 = (r4 = _4 + s4 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(r4 ^ k4, a4 ^ w4, 32), a4 = (R4 = f3) + W2 | 0, w4 = UI((s4 = _4 + l4 | 0) ^ J4, (a4 = s4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) ^ m4, 40), L4 = a4, a4 = yA2 + (J4 = f3) | 0, a4 = F4 + ((m4 = w4 + rA2 | 0) >>> 0 < rA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (F4 = r4 + m4 | 0) >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, r4 = R4, R4 = a4, r4 = UI(_4 ^ F4, r4 ^ a4, 48), a4 = (a4 = L4) + (L4 = f3) | 0, _4 = (s4 = r4 + s4 | 0) ^ w4, w4 = a4 = s4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, J4 = a4 = UI(_4, a4 ^ J4, 1), m4 = _4 = f3, AA2 = h4, T2 = y4, y4 = c4, c4 = UI(N4 ^ q3, O2 ^ $2, 48), a4 = (N4 = f3) + K4 | 0, K4 = _4 = c4 + M4 | 0, M4 = a4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ y4, a4 ^ v4, 1), a4 = (v4 = f3) + SA2 | 0, a4 = S4 + ((_4 = y4 + iA2 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4) | 0, n5 = a4 = (h4 = _4 + n5 | 0) >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(h4 ^ T2, a4 ^ d5, 32), a4 = (S4 = f3) + D4 | 0, d5 = a4 = (D4 = _4 + AA2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(y4 ^ D4, a4 ^ v4, 40), a4 = B4 + ($2 = f3) | 0, v4 = y4, a4 = n5 + ((y4 = fA2 + y4 | 0) >>> 0 < fA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, n5 = y4 + h4 | 0, y4 = S4, S4 = a4 = n5 >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ n5, y4 ^ a4, 48), a4 = (a4 = d5) + (d5 = f3) | 0, q3 = _4 = y4 + D4 | 0, O2 = a4 = _4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, h4 = e6, a4 = G4 + IA2 | 0, e6 = a4 = (_4 = k4 + u4 | 0) >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(_4 ^ t4, a4 ^ H4, 1), a4 = FA2 + (k4 = f3) | 0, a4 = U4 + ((D4 = t4 + QA2 | 0) >>> 0 < QA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, p4 = a4 = (D4 = D4 + p4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, h4 = UI(h4 ^ D4, a4 ^ x4, 32), U4 = a4 = f3, G4 = t4, a4 = a4 + M4 | 0, a4 = (t4 = h4 + K4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, u4 = t4, t4 ^= G4, G4 = a4, t4 = UI(t4, a4 ^ k4, 40), a4 = P7 + (H4 = f3) | 0, a4 = p4 + ((k4 = t4 + aA2 | 0) >>> 0 < aA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (p4 = D4 + k4 | 0) >>> 0 < D4 >>> 0 ? a4 + 1 | 0 : a4, D4 = U4, U4 = a4, k4 = UI(h4 ^ p4, D4 ^ a4, 48), IA2 = a4 = f3, D4 = a4, h4 = UI(b5 ^ l4, W2 ^ CA2, 1), K4 = a4 = f3, M4 = e6, a4 = a4 + GA2 | 0, a4 = Z2 + ((e6 = h4 + _A2 | 0) >>> 0 < _A2 >>> 0 ? a4 + 1 | 0 : a4) | 0, Y4 = a4 = (e6 = e6 + Y4 | 0) >>> 0 < Y4 >>> 0 ? a4 + 1 | 0 : a4, N4 = UI(c4 ^ e6, a4 ^ N4, 32), a4 = (CA2 = f3) + M4 | 0, M4 = _4 = N4 + _4 | 0, c4 = UI(_4 ^ h4, (c4 = K4) ^ (K4 = _4 >>> 0 < N4 >>> 0 ? a4 + 1 | 0 : a4), 40), a4 = kA2 + (b5 = f3) | 0, a4 = Y4 + ((_4 = c4 + eA2 | 0) >>> 0 < eA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, l4 = _4 = _4 + e6 | 0, W2 = a4 = _4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, e6 = a4, a4 = m4 + DA2 | 0, a4 = ((h4 = J4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4) + e6 | 0, Y4 = a4 = (e6 = _4 + h4 | 0) >>> 0 < h4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(e6 ^ k4, a4 ^ D4, 32), a4 = (Z2 = f3) + O2 | 0, D4 = UI((h4 = _4 + q3 | 0) ^ J4, (a4 = h4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4) ^ m4, 40), x4 = a4, a4 = Q5 + (J4 = f3) | 0, a4 = Y4 + ((m4 = D4 + g6 | 0) >>> 0 < g6 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (Y4 = e6 + m4 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, e6 = Z2, Z2 = a4, e6 = UI(_4 ^ Y4, e6 ^ a4, 48), a4 = (a4 = x4) + (x4 = f3) | 0, _4 = (h4 = e6 + h4 | 0) ^ D4, D4 = a4 = h4 >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, J4 = a4 = UI(_4, a4 ^ J4, 1), m4 = _4 = f3, AA2 = s4, T2 = y4, y4 = c4, c4 = UI(N4 ^ l4, W2 ^ CA2, 48), a4 = (N4 = f3) + K4 | 0, K4 = _4 = c4 + M4 | 0, M4 = a4 = _4 >>> 0 < c4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ y4, a4 ^ b5, 1), a4 = (l4 = f3) + BA2 | 0, a4 = U4 + ((_4 = y4 + j2 | 0) >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4) | 0, p4 = a4 = (s4 = _4 + p4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, _4 = UI(s4 ^ T2, a4 ^ d5, 32), a4 = (U4 = f3) + w4 | 0, d5 = w4 = _4 + AA2 | 0, b5 = a4 = w4 >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(y4 ^ w4, a4 ^ l4, 40), a4 = wA2 + (AA2 = f3) | 0, l4 = y4, a4 = p4 + ((y4 = V2 + y4 | 0) >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4) | 0, w4 = y4 + s4 | 0, y4 = U4, U4 = a4 = w4 >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(_4 ^ w4, y4 ^ a4, 48), a4 = (a4 = b5) + (b5 = f3) | 0, d5 = _4 = y4 + d5 | 0, W2 = a4 = _4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, s4 = r4, a4 = G4 + IA2 | 0, r4 = a4 = (_4 = k4 + u4 | 0) >>> 0 < k4 >>> 0 ? a4 + 1 | 0 : a4, t4 = UI(_4 ^ t4, a4 ^ H4, 1), a4 = (k4 = f3) + X2 | 0, a4 = S4 + ((p4 = I7 + t4 | 0) >>> 0 < t4 >>> 0 ? a4 + 1 | 0 : a4) | 0, n5 = a4 = (p4 = p4 + n5 | 0) >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4, S4 = s4 = UI(s4 ^ p4, a4 ^ L4, 32), G4 = a4 = f3, u4 = t4, a4 = a4 + M4 | 0, a4 = (t4 = s4 + K4 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, H4 = t4, t4 ^= u4, u4 = a4, t4 = UI(t4, a4 ^ k4, 40), a4 = pA2 + (K4 = f3) | 0, a4 = n5 + ((s4 = t4 + EA2 | 0) >>> 0 < EA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, M4 = (s4 = s4 + p4 | 0) ^ S4, S4 = a4 = s4 >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, p4 = UI(M4, a4 ^ G4, 48), L4 = a4 = f3, k4 = a4, G4 = n5 = UI(q3 ^ v4, O2 ^ $2, 1), M4 = a4 = f3, v4 = r4, a4 = a4 + tA2 | 0, a4 = R4 + ((r4 = n5 + z2 | 0) >>> 0 < z2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (r4 = r4 + F4 | 0) >>> 0 < F4 >>> 0 ? a4 + 1 | 0 : a4, F4 = N4, N4 = a4, n5 = UI(c4 ^ r4, F4 ^ a4, 32), a4 = (T2 = f3) + v4 | 0, F4 = _4 = n5 + _4 | 0, c4 = UI(c4 = _4 ^ G4, (G4 = _4 >>> 0 < n5 >>> 0 ? a4 + 1 | 0 : a4) ^ M4, 40), a4 = sA2 + (M4 = f3) | 0, a4 = N4 + ((_4 = c4 + gA2 | 0) >>> 0 < gA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, N4 = _4 = _4 + r4 | 0, v4 = a4 = _4 >>> 0 < r4 >>> 0 ? a4 + 1 | 0 : a4, r4 = a4, a4 = m4 + wA2 | 0, a4 = ((R4 = V2) >>> 0 > (V2 = J4 + V2 | 0) >>> 0 ? a4 + 1 | 0 : a4) + r4 | 0, wA2 = a4 = (_4 = _4 + V2 | 0) >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4, V2 = UI(_4 ^ p4, a4 ^ k4, 32), a4 = (q3 = f3) + W2 | 0, k4 = UI((r4 = d5 + V2 | 0) ^ J4, (a4 = r4 >>> 0 < V2 >>> 0 ? a4 + 1 | 0 : a4) ^ m4, 40), R4 = a4, a4 = pA2 + (O2 = f3) | 0, a4 = wA2 + ((J4 = EA2) >>> 0 > (EA2 = k4 + EA2 | 0) >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (EA2 = _4 + EA2 | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, _4 = V2 ^ EA2, V2 = a4, pA2 = UI(_4, a4 ^ q3, 48);
                      a4 = (wA2 = f3) + R4 | 0, r4 = a4 = (_4 = r4 + pA2 | 0) >>> 0 < pA2 >>> 0 ? a4 + 1 | 0 : a4, a4 = UI(_4 ^ k4, a4 ^ O2, 1), k4 = f3, q3 = a4, O2 = h4, h4 = gA2, R4 = sA2, sA2 = UI(n5 ^ N4, v4 ^ T2, 48), a4 = (n5 = f3) + G4 | 0, G4 = h4, F4 = a4 = (gA2 = F4 + sA2 | 0) >>> 0 < sA2 >>> 0 ? a4 + 1 | 0 : a4, h4 = UI(c4 ^ (N4 = gA2), a4 ^ M4, 1), a4 = (M4 = f3) + R4 | 0, a4 = S4 + (h4 >>> 0 > (gA2 = G4 + h4 | 0) >>> 0 ? a4 + 1 | 0 : a4) | 0, c4 = a4 = (gA2 = s4 + gA2 | 0) >>> 0 < s4 >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(y4 ^ gA2, a4 ^ b5, 32), a4 = (a4 = D4) + (D4 = f3) | 0, S4 = s4 = y4 + O2 | 0, G4 = a4 = s4 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, s4 = UI(s4 ^ h4, a4 ^ M4, 40), a4 = (M4 = f3) + SA2 | 0, a4 = (s4 >>> 0 > (iA2 = s4 + iA2 | 0) >>> 0 ? a4 + 1 | 0 : a4) + c4 | 0, c4 = a4 = (c4 = iA2) >>> 0 > (iA2 = gA2 + iA2 | 0) >>> 0 ? a4 + 1 | 0 : a4, y4 = UI(y4 ^ iA2, a4 ^ D4, 48), a4 = (h4 = f3) + G4 | 0, D4 = gA2 = y4 + S4 | 0, SA2 = a4 = gA2 >>> 0 < y4 >>> 0 ? a4 + 1 | 0 : a4, S4 = I7, G4 = X2, a4 = u4 + L4 | 0, gA2 = a4 = (I7 = p4 + H4 | 0) >>> 0 < p4 >>> 0 ? a4 + 1 | 0 : a4, X2 = UI(I7 ^ t4, a4 ^ K4, 1), a4 = (p4 = f3) + G4 | 0, a4 = U4 + ((t4 = S4 + X2 | 0) >>> 0 < X2 >>> 0 ? a4 + 1 | 0 : a4) | 0, e6 = UI((t4 = t4 + w4 | 0) ^ e6, (a4 = t4 >>> 0 < w4 >>> 0 ? a4 + 1 | 0 : a4) ^ x4, 32), S4 = a4, U4 = oA2, oA2 = X2, a4 = (w4 = f3) + F4 | 0, F4 = p4, p4 = a4 = (X2 = e6 + N4 | 0) >>> 0 < e6 >>> 0 ? a4 + 1 | 0 : a4, oA2 = UI(X2 ^ oA2, F4 ^ a4, 40), a4 = (N4 = f3) + DA2 | 0, a4 = ((DA2 = U4 + oA2 | 0) >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4) + S4 | 0, S4 = DA2, t4 = e6 ^ (DA2 = t4 + DA2 | 0), e6 = a4 = S4 >>> 0 > DA2 >>> 0 ? a4 + 1 | 0 : a4, a4 = UI(t4, a4 ^ w4, 48), u4 = t4 = f3, w4 = a4, F4 = j2, S4 = BA2, j2 = UI(d5 ^ l4, W2 ^ AA2, 1), G4 = a4 = f3, a4 = a4 + NA2 | 0, a4 = Z2 + ((j2 = (U4 = j2) + cA2 | 0) >>> 0 < cA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, cA2 = a4 = (j2 = Y4 + j2 | 0) >>> 0 < Y4 >>> 0 ? a4 + 1 | 0 : a4, BA2 = UI(j2 ^ sA2, a4 ^ n5, 32), a4 = (Y4 = f3) + gA2 | 0, gA2 = I7 = BA2 + I7 | 0, sA2 = UI(I7 ^ U4, (n5 = I7 >>> 0 < BA2 >>> 0 ? a4 + 1 | 0 : a4) ^ G4, 40), a4 = (a4 = S4) + (S4 = f3) | 0, a4 = cA2 + ((I7 = sA2 + F4 | 0) >>> 0 < sA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, cA2 = I7 = I7 + j2 | 0, NA2 = a4 = I7 >>> 0 < j2 >>> 0 ? a4 + 1 | 0 : a4, j2 = a4, a4 = k4 + FA2 | 0, a4 = ((U4 = QA2) >>> 0 > (QA2 = q3 + QA2 | 0) >>> 0 ? a4 + 1 | 0 : a4) + j2 | 0, FA2 = a4 = (j2 = I7 + QA2 | 0) >>> 0 < QA2 >>> 0 ? a4 + 1 | 0 : a4, QA2 = UI(w4 ^ j2, a4 ^ t4, 32), a4 = (U4 = f3) + SA2 | 0, t4 = I7 = QA2 + D4 | 0, I7 = UI(I7 ^ q3, (F4 = k4) ^ (k4 = I7 >>> 0 < QA2 >>> 0 ? a4 + 1 | 0 : a4), 40), a4 = GA2 + (G4 = f3) | 0, GA2 = I7, a4 = FA2 + ((I7 = _A2 + I7 | 0) >>> 0 < _A2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (I7 = I7 + j2 | 0) >>> 0 < j2 >>> 0 ? a4 + 1 | 0 : a4, FA2 = I7, H4 = (o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24) ^ I7, F4 = a4, K4 = a4 ^ (o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24), j2 = UI(BA2 ^ cA2, Y4 ^ NA2, 48), a4 = (cA2 = f3) + n5 | 0, n5 = I7 = j2 + gA2 | 0, NA2 = a4 = I7 >>> 0 < j2 >>> 0 ? a4 + 1 | 0 : a4, BA2 = rA2, a4 = p4 + u4 | 0, rA2 = a4 = (I7 = w4 + X2 | 0) >>> 0 < X2 >>> 0 ? a4 + 1 | 0 : a4, oA2 = UI(I7 ^ oA2, a4 ^ N4, 1), a4 = (w4 = f3) + yA2 | 0, a4 = ((BA2 = oA2 + BA2 | 0) >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4) + c4 | 0, BA2 = a4 = (yA2 = BA2 + iA2 | 0) >>> 0 < BA2 >>> 0 ? a4 + 1 | 0 : a4, gA2 = UI(yA2 ^ pA2, a4 ^ wA2, 32), a4 = (X2 = f3) + NA2 | 0, iA2 = a4 = (_A2 = gA2 + n5 | 0) >>> 0 < gA2 >>> 0 ? a4 + 1 | 0 : a4, pA2 = gA2, gA2 = UI(oA2 ^ _A2, a4 ^ w4, 40), a4 = (c4 = f3) + kA2 | 0, a4 = (gA2 >>> 0 > (oA2 = gA2 + eA2 | 0) >>> 0 ? a4 + 1 | 0 : a4) + BA2 | 0, p4 = X2, X2 = a4 = (yA2 = oA2 + yA2 | 0) >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4, oA2 = UI(pA2 ^ (eA2 = yA2), p4 ^ a4, 48), a4 = (w4 = f3) + iA2 | 0, a4 = (BA2 = oA2 + _A2 | 0) >>> 0 < oA2 >>> 0 ? a4 + 1 | 0 : a4, _A2 = BA2, BA2 ^= H4, C3[A8 + 8 | 0] = BA2, C3[A8 + 9 | 0] = BA2 >>> 8, C3[A8 + 10 | 0] = BA2 >>> 16, C3[A8 + 11 | 0] = BA2 >>> 24, iA2 = a4, a4 ^= K4, C3[A8 + 12 | 0] = a4, C3[A8 + 13 | 0] = a4 >>> 8, C3[A8 + 14 | 0] = a4 >>> 16, C3[A8 + 15 | 0] = a4 >>> 24, yA2 = I7, BA2 = rA2, I7 = j2, j2 = UI(s4 ^ D4, M4 ^ SA2, 1), a4 = (kA2 = f3) + Q5 | 0, a4 = (j2 >>> 0 > (rA2 = j2 + g6 | 0) >>> 0 ? a4 + 1 | 0 : a4) + V2 | 0, EA2 = a4 = (D4 = rA2) >>> 0 > (rA2 = EA2 + rA2 | 0) >>> 0 ? a4 + 1 | 0 : a4, I7 = UI(I7 ^ rA2, a4 ^ cA2, 32), a4 = (a4 = BA2) + (BA2 = f3) | 0, cA2 = a4 = (yA2 = I7 + yA2 | 0) >>> 0 < I7 >>> 0 ? a4 + 1 | 0 : a4, pA2 = I7, yA2 = UI(j2 ^ (V2 = yA2), a4 ^ kA2, 40), a4 = (s4 = f3) + B4 | 0, a4 = EA2 + ((I7 = yA2 + fA2 | 0) >>> 0 < yA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (I7 = I7 + rA2 | 0) >>> 0 < rA2 >>> 0 ? a4 + 1 | 0 : a4, EA2 = I7, I7 ^= pA2, pA2 = a4, rA2 = UI(I7, a4 ^ BA2, 48), a4 = (D4 = f3) + cA2 | 0, V2 = I7 = rA2 + V2 | 0, cA2 = I7 >>> 0 < rA2 >>> 0 ? a4 + 1 | 0 : a4, sA2 = I7 = UI(n5 ^ sA2, S4 ^ NA2, 1), kA2 = a4 = f3, a4 = a4 + P7 | 0, a4 = e6 + ((I7 = I7 + aA2 | 0) >>> 0 < aA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, P7 = a4 = (j2 = I7 + DA2 | 0) >>> 0 < DA2 >>> 0 ? a4 + 1 | 0 : a4, I7 = (BA2 = UI(y4 ^ j2, a4 ^ h4, 32)) + _4 | 0, a4 = (_4 = f3) + r4 | 0, DA2 = I7, I7 = (aA2 = UI(e6 = I7 ^ sA2, (sA2 = I7 >>> 0 < BA2 >>> 0 ? a4 + 1 | 0 : a4) ^ kA2, 40)) + z2 | 0, a4 = (z2 = f3) + tA2 | 0, a4 = P7 + (I7 >>> 0 < aA2 >>> 0 ? a4 + 1 | 0 : a4) | 0, a4 = (P7 = I7 + j2 | 0) >>> 0 < j2 >>> 0 ? a4 + 1 | 0 : a4, j2 = P7 ^ KA2 ^ V2, C3[0 | (I7 = A8)] = j2, C3[I7 + 1 | 0] = j2 >>> 8, C3[I7 + 2 | 0] = j2 >>> 16, C3[I7 + 3 | 0] = j2 >>> 24, j2 = a4 ^ i5 ^ cA2, C3[I7 + 4 | 0] = j2, C3[I7 + 5 | 0] = j2 >>> 8, C3[I7 + 6 | 0] = j2 >>> 16, C3[I7 + 7 | 0] = j2 >>> 24, j2 = (BA2 = UI(P7 ^ BA2, a4 ^ _4, 48)) + DA2 | 0, a4 = (DA2 = f3) + sA2 | 0, a4 = (sA2 = j2 >>> 0 < BA2 >>> 0 ? a4 + 1 | 0 : a4) ^ (o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24) ^ pA2, P7 = (o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24) ^ EA2 ^ j2, C3[I7 + 16 | 0] = P7, C3[I7 + 17 | 0] = P7 >>> 8, C3[I7 + 18 | 0] = P7 >>> 16, C3[I7 + 19 | 0] = P7 >>> 24, C3[I7 + 20 | 0] = a4, C3[I7 + 21 | 0] = a4 >>> 8, C3[I7 + 22 | 0] = a4 >>> 16, C3[I7 + 23 | 0] = a4 >>> 24, I7 = UI(QA2 ^ FA2, F4 ^ U4, 48), P7 = f3, EA2 = o3[A8 + 36 | 0] | o3[A8 + 37 | 0] << 8 | o3[A8 + 38 | 0] << 16 | o3[A8 + 39 | 0] << 24, a4 = (o3[A8 + 32 | 0] | o3[A8 + 33 | 0] << 8 | o3[A8 + 34 | 0] << 16 | o3[A8 + 35 | 0] << 24) ^ UI(gA2 ^ _A2, c4 ^ iA2, 1) ^ I7, C3[A8 + 32 | 0] = a4, C3[A8 + 33 | 0] = a4 >>> 8, C3[A8 + 34 | 0] = a4 >>> 16, C3[A8 + 35 | 0] = a4 >>> 24, a4 = f3 ^ EA2 ^ P7, C3[A8 + 36 | 0] = a4, C3[A8 + 37 | 0] = a4 >>> 8, C3[A8 + 38 | 0] = a4 >>> 16, C3[A8 + 39 | 0] = a4 >>> 24, a4 = k4 + P7 | 0, a4 = (EA2 = I7 + t4 | 0) >>> 0 < I7 >>> 0 ? a4 + 1 | 0 : a4, gA2 = (o3[(I7 = A8) + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24) ^ X2 ^ a4, P7 = (o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24) ^ eA2 ^ EA2, C3[I7 + 24 | 0] = P7, C3[I7 + 25 | 0] = P7 >>> 8, C3[I7 + 26 | 0] = P7 >>> 16, C3[I7 + 27 | 0] = P7 >>> 24, C3[I7 + 28 | 0] = gA2, C3[I7 + 29 | 0] = gA2 >>> 8, C3[I7 + 30 | 0] = gA2 >>> 16, C3[I7 + 31 | 0] = gA2 >>> 24, gA2 = o3[I7 + 44 | 0] | o3[I7 + 45 | 0] << 8 | o3[I7 + 46 | 0] << 16 | o3[I7 + 47 | 0] << 24, I7 = rA2 ^ (o3[I7 + 40 | 0] | o3[I7 + 41 | 0] << 8 | o3[I7 + 42 | 0] << 16 | o3[I7 + 43 | 0] << 24) ^ UI(j2 ^ aA2, z2 ^ sA2, 1), C3[A8 + 40 | 0] = I7, C3[A8 + 41 | 0] = I7 >>> 8, C3[A8 + 42 | 0] = I7 >>> 16, C3[A8 + 43 | 0] = I7 >>> 24, I7 = D4 ^ f3 ^ gA2, C3[A8 + 44 | 0] = I7, C3[A8 + 45 | 0] = I7 >>> 8, C3[A8 + 46 | 0] = I7 >>> 16, C3[A8 + 47 | 0] = I7 >>> 24, j2 = o3[A8 + 60 | 0] | o3[A8 + 61 | 0] << 8 | o3[A8 + 62 | 0] << 16 | o3[A8 + 63 | 0] << 24, I7 = BA2 ^ (o3[A8 + 56 | 0] | o3[A8 + 57 | 0] << 8 | o3[A8 + 58 | 0] << 16 | o3[A8 + 59 | 0] << 24) ^ UI(V2 ^ yA2, s4 ^ cA2, 1), C3[A8 + 56 | 0] = I7, C3[A8 + 57 | 0] = I7 >>> 8, C3[A8 + 58 | 0] = I7 >>> 16, C3[A8 + 59 | 0] = I7 >>> 24, I7 = DA2 ^ f3 ^ j2, C3[A8 + 60 | 0] = I7, C3[A8 + 61 | 0] = I7 >>> 8, C3[A8 + 62 | 0] = I7 >>> 16, C3[A8 + 63 | 0] = I7 >>> 24, j2 = o3[A8 + 52 | 0] | o3[A8 + 53 | 0] << 8 | o3[A8 + 54 | 0] << 16 | o3[A8 + 55 | 0] << 24, I7 = oA2 ^ (o3[A8 + 48 | 0] | o3[A8 + 49 | 0] << 8 | o3[A8 + 50 | 0] << 16 | o3[A8 + 51 | 0] << 24) ^ UI(EA2 ^ GA2, a4 ^ G4, 1), C3[A8 + 48 | 0] = I7, C3[A8 + 49 | 0] = I7 >>> 8, C3[A8 + 50 | 0] = I7 >>> 16, C3[A8 + 51 | 0] = I7 >>> 24, I7 = w4 ^ f3 ^ j2, C3[A8 + 52 | 0] = I7, C3[A8 + 53 | 0] = I7 >>> 8, C3[A8 + 54 | 0] = I7 >>> 16, C3[A8 + 55 | 0] = I7 >>> 24;
                    }
                    function w3(A8, I7, g6, B4, Q5, E4, a4) {
                      var _4, c4, t4, r4, e6, y4, h4, D4, p4, w4, n5, k4, F4, N4, G4, M4, K4, U4, b5, H4, Y4, J4, d5, m4, l4, u4, x4, v4, R4, L4, P7, q3, z2, X2, O2, W2, V2, Z2, T2, $2, AA2, IA2, gA2, CA2, BA2, QA2, iA2, oA2, EA2 = 0, aA2 = 0, _A2 = 0, cA2 = 0, tA2 = 0, rA2 = 0, eA2 = 0, yA2 = 0, sA2 = 0, hA2 = 0, DA2 = 0, fA2 = 0, pA2 = 0, wA2 = 0, kA2 = 0, FA2 = 0, NA2 = 0, GA2 = 0, MA2 = 0, KA2 = 0, UA2 = 0, bA2 = 0, HA2 = 0, YA2 = 0, JA2 = 0, dA2 = 0, mA2 = 0, lA2 = 0, uA2 = 0, xA2 = 0, vA2 = 0, RA2 = 0, LA2 = 0, PA2 = 0, qA2 = 0, zA2 = 0, jA2 = 0, XA2 = 0, OA2 = 0, WA2 = 0, VA2 = 0, ZA2 = 0, TA2 = 0, $A2 = 0, AI2 = 0, II2 = 0;
                      return s3 = t4 = s3 - 560 | 0, SI(_A2 = t4 + 352 | 0), a4 && SA(_A2, 35600, 34, 0), FI(t4 + 288 | 0, E4, 32, 0), SA(rA2 = t4 + 352 | 0, t4 + 320 | 0, 32, 0), SA(rA2, g6, B4, Q5), j(rA2, yA2 = t4 + 224 | 0), hA2 = o3[(aA2 = E4) + 32 | 0] | o3[aA2 + 33 | 0] << 8 | o3[aA2 + 34 | 0] << 16 | o3[aA2 + 35 | 0] << 24, DA2 = o3[aA2 + 36 | 0] | o3[aA2 + 37 | 0] << 8 | o3[aA2 + 38 | 0] << 16 | o3[aA2 + 39 | 0] << 24, cA2 = o3[aA2 + 40 | 0] | o3[aA2 + 41 | 0] << 8 | o3[aA2 + 42 | 0] << 16 | o3[aA2 + 43 | 0] << 24, EA2 = o3[aA2 + 44 | 0] | o3[aA2 + 45 | 0] << 8 | o3[aA2 + 46 | 0] << 16 | o3[aA2 + 47 | 0] << 24, _A2 = o3[aA2 + 48 | 0] | o3[aA2 + 49 | 0] << 8 | o3[aA2 + 50 | 0] << 16 | o3[aA2 + 51 | 0] << 24, E4 = o3[aA2 + 52 | 0] | o3[aA2 + 53 | 0] << 8 | o3[aA2 + 54 | 0] << 16 | o3[aA2 + 55 | 0] << 24, tA2 = o3[aA2 + 60 | 0] | o3[aA2 + 61 | 0] << 8 | o3[aA2 + 62 | 0] << 16 | o3[aA2 + 63 | 0] << 24, aA2 = o3[aA2 + 56 | 0] | o3[aA2 + 57 | 0] << 8 | o3[aA2 + 58 | 0] << 16 | o3[aA2 + 59 | 0] << 24, C3[A8 + 56 | 0] = aA2, C3[A8 + 57 | 0] = aA2 >>> 8, C3[A8 + 58 | 0] = aA2 >>> 16, C3[A8 + 59 | 0] = aA2 >>> 24, C3[A8 + 60 | 0] = tA2, C3[A8 + 61 | 0] = tA2 >>> 8, C3[A8 + 62 | 0] = tA2 >>> 16, C3[A8 + 63 | 0] = tA2 >>> 24, C3[A8 + 48 | 0] = _A2, C3[A8 + 49 | 0] = _A2 >>> 8, C3[A8 + 50 | 0] = _A2 >>> 16, C3[A8 + 51 | 0] = _A2 >>> 24, C3[A8 + 52 | 0] = E4, C3[A8 + 53 | 0] = E4 >>> 8, C3[A8 + 54 | 0] = E4 >>> 16, C3[A8 + 55 | 0] = E4 >>> 24, C3[A8 + 40 | 0] = cA2, C3[A8 + 41 | 0] = cA2 >>> 8, C3[A8 + 42 | 0] = cA2 >>> 16, C3[A8 + 43 | 0] = cA2 >>> 24, C3[A8 + 44 | 0] = EA2, C3[A8 + 45 | 0] = EA2 >>> 8, C3[A8 + 46 | 0] = EA2 >>> 16, C3[A8 + 47 | 0] = EA2 >>> 24, C3[0 | (E4 = A8 + 32 | 0)] = hA2, C3[E4 + 1 | 0] = hA2 >>> 8, C3[E4 + 2 | 0] = hA2 >>> 16, C3[E4 + 3 | 0] = hA2 >>> 24, C3[E4 + 4 | 0] = DA2, C3[E4 + 5 | 0] = DA2 >>> 8, C3[E4 + 6 | 0] = DA2 >>> 16, C3[E4 + 7 | 0] = DA2 >>> 24, S3(yA2), nA(t4, yA2), tg(A8, t4), SI(rA2), a4 && SA(rA2, 35600, 34, 0), SA(a4 = t4 + 352 | 0, A8, 64, 0), SA(a4, g6, B4, Q5), j(a4, eA2 = t4 + 160 | 0), S3(eA2), C3[t4 + 288 | 0] = 248 & o3[t4 + 288 | 0], C3[t4 + 319 | 0] = 63 & o3[t4 + 319 | 0] | 64, g6 = o3[23 + (A8 = c4 = t4 + 288 | 0) | 0], cA2 = Ig(r4 = o3[A8 + 21 | 0] | o3[A8 + 22 | 0] << 8 | g6 << 16 & 2031616, 0, e6 = (o3[eA2 + 28 | 0] | o3[eA2 + 29 | 0] << 8 | o3[eA2 + 30 | 0] << 16 | o3[eA2 + 31 | 0] << 24) >>> 7 | 0, 0), _A2 = f3, g6 = (A8 = o3[eA2 + 27 | 0]) >>> 24 | 0, Q5 = A8 << 8 | (EA2 = o3[eA2 + 23 | 0] | o3[eA2 + 24 | 0] << 8 | o3[eA2 + 25 | 0] << 16 | o3[eA2 + 26 | 0] << 24) >>> 24, A8 = Ig(y4 = 2097151 & ((3 & (DA2 = (A8 = (B4 = o3[eA2 + 28 | 0]) >>> 16 | 0) | g6)) << 30 | (g6 = (B4 <<= 16) | Q5) >>> 2), 0, h4 = (a4 = o3[c4 + 23 | 0] | o3[c4 + 24 | 0] << 8 | o3[c4 + 25 | 0] << 16 | o3[c4 + 26 | 0] << 24) >>> 5 & 2097151, 0), g6 = f3 + _A2 | 0, B4 = A8 >>> 0 > (Q5 = A8 + cA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(D4 = (g6 = o3[eA2 + 23 | 0]) << 16 & 2031616 | o3[eA2 + 21 | 0] | o3[eA2 + 22 | 0] << 8, 0, p4 = (o3[c4 + 28 | 0] | o3[c4 + 29 | 0] << 8 | o3[c4 + 30 | 0] << 16 | o3[c4 + 31 | 0] << 24) >>> 7 | 0, 0), B4 = f3 + B4 | 0, _A2 = g6 = A8 + Q5 | 0, Q5 = A8 >>> 0 > g6 >>> 0 ? B4 + 1 | 0 : B4, B4 = (A8 = o3[c4 + 27 | 0]) >>> 24 | 0, a4 = A8 << 8 | a4 >>> 24, A8 = Ig(w4 = 2097151 & ((3 & (B4 |= g6 = (A8 = o3[c4 + 28 | 0]) >>> 16 | 0)) << 30 | (g6 = (A8 <<= 16) | a4) >>> 2), 0, n5 = EA2 >>> 5 & 2097151, 0), g6 = f3 + Q5 | 0, aA2 = B4 = A8 + _A2 | 0, Q5 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, EA2 = Ig(h4, 0, n5, 0), _A2 = f3, g6 = (A8 = o3[c4 + 19 | 0]) >>> 24 | 0, a4 = A8 << 8 | (GA2 = o3[c4 + 15 | 0] | o3[c4 + 16 | 0] << 8 | o3[c4 + 17 | 0] << 16 | o3[c4 + 18 | 0] << 24) >>> 24, B4 = g6, g6 = Ig(k4 = (7 & (B4 |= g6 = (A8 = o3[c4 + 20 | 0]) >>> 16 | 0)) << 29 | (g6 = (A8 <<= 16) | a4) >>> 3, DA2 = B4 >>> 3 | 0, e6, 0), A8 = f3 + _A2 | 0, A8 = g6 >>> 0 > (B4 = g6 + EA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4 = (g6 = Ig(r4, 0, y4, 0)) + B4 | 0, B4 = f3 + A8 | 0, g6 = g6 >>> 0 > (EA2 = a4) >>> 0 ? B4 + 1 | 0 : B4, B4 = (A8 = o3[eA2 + 19 | 0]) >>> 24 | 0, _A2 = A8 << 8 | (kA2 = o3[eA2 + 15 | 0] | o3[eA2 + 16 | 0] << 8 | o3[eA2 + 17 | 0] << 16 | o3[eA2 + 18 | 0] << 24) >>> 24, A8 = Ig(F4 = (7 & (cA2 = (A8 = (a4 = o3[eA2 + 20 | 0]) >>> 16 | 0) | B4)) << 29 | (B4 = (a4 <<= 16) | _A2) >>> 3, N4 = cA2 >>> 3 | 0, p4, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + EA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(D4, 0, w4, 0), g6 = f3 + g6 | 0, hA2 = g6 = A8 >>> 0 > (yA2 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, fA2 = A8 = g6 - ((yA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (g6 = A8 >>> 21 | 0) + Q5 | 0, EA2 = B4 = (A8 = (2097151 & A8) << 11 | (cA2 = yA2 - -1048576 | 0) >>> 21) >>> 0 > (aA2 = A8 + aA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, wA2 = A8 = B4 - ((aA2 >>> 0 < 4293918720) - 1 | 0) | 0, tA2 = (2097151 & A8) << 11 | (_A2 = aA2 - -1048576 | 0) >>> 21, a4 = A8 >>> 21 | 0, A8 = Ig(p4, 0, n5, 0), g6 = f3, B4 = A8, A8 = Ig(e6, 0, h4, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, pA2 = (A8 = B4) + (B4 = Ig(y4, 0, w4, 0)) | 0, A8 = f3 + g6 | 0, A8 = B4 >>> 0 > pA2 >>> 0 ? A8 + 1 | 0 : A8, rA2 = pA2 - (g6 = -2097152 & (B4 = pA2 - -1048576 | 0)) | 0, g6 = (A8 - ((131071 & (Q5 = A8 - ((pA2 >>> 0 < 4293918720) - 1 | 0) | 0)) + (g6 >>> 0 > pA2 >>> 0) | 0) | 0) + a4 | 0, R4 = g6 = (A8 = tA2 + rA2 | 0) >>> 0 < rA2 >>> 0 ? g6 + 1 | 0 : g6, L4 = A8, rA2 = Ig(A8, g6, 470296, 0), tA2 = f3, g6 = Ig(e6, 0, w4, 0), A8 = f3, a4 = g6, g6 = Ig(y4, 0, p4, 0), A8 = f3 + A8 | 0, g6 = g6 >>> 0 > (a4 = a4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, A8 = Q5 >>> 21 | 0, Q5 = (2097151 & Q5) << 11 | B4 >>> 21, B4 = A8 + g6 | 0, bA2 = Q5 = (B4 = Q5 >>> 0 > (a4 = Q5 + a4 | 0) >>> 0 ? B4 + 1 | 0 : B4) - ((a4 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = a4 - (g6 = -2097152 & (UA2 = a4 - -1048576 | 0)) | 0, P7 = a4 = B4 - ((131071 & Q5) + (g6 >>> 0 > a4 >>> 0) | 0) | 0, q3 = g6 = aA2 - (B4 = -2097152 & _A2) | 0, z2 = Q5 = EA2 - ((B4 >>> 0 > aA2 >>> 0) + wA2 | 0) | 0, X2 = A8, B4 = Ig(A8, a4, 666643, 0), A8 = f3 + tA2 | 0, A8 = B4 >>> 0 > (a4 = B4 + rA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = Ig(g6, Q5, 654183, 0), g6 = f3 + A8 | 0, sA2 = Q5 = B4 + a4 | 0, _A2 = B4 >>> 0 > Q5 >>> 0 ? g6 + 1 | 0 : g6, pA2 = yA2 - (A8 = -2097152 & cA2) | 0, fA2 = hA2 - ((A8 >>> 0 > yA2 >>> 0) + fA2 | 0) | 0, g6 = Ig(y4, 0, k4, DA2), B4 = f3, Q5 = (A8 = g6) + (g6 = Ig(G4 = GA2 >>> 6 & 2097151, 0, e6, 0)) | 0, A8 = f3 + B4 | 0, A8 = g6 >>> 0 > Q5 >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(h4, 0, D4, 0), B4 = f3 + A8 | 0, B4 = g6 >>> 0 > (Q5 = g6 + Q5 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(r4, 0, n5, 0), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (Q5 = A8 + Q5 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(p4, 0, M4 = kA2 >>> 6 & 2097151, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (Q5 = B4 + Q5 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = Ig(w4, 0, F4, N4), g6 = f3 + A8 | 0, yA2 = Q5 = B4 + Q5 | 0, a4 = B4 >>> 0 > Q5 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = o3[c4 + 14 | 0]) >>> 24 | 0, Q5 = A8 << 8 | (hA2 = o3[c4 + 10 | 0] | o3[c4 + 11 | 0] << 8 | o3[c4 + 12 | 0] << 16 | o3[c4 + 13 | 0] << 24) >>> 24, g6 = Ig(K4 = 2097151 & ((1 & (g6 |= A8 = (B4 = o3[c4 + 15 | 0]) >>> 16 | 0)) << 31 | (A8 = (B4 <<= 16) | Q5) >>> 1), 0, e6, 0), A8 = f3, B4 = g6, g6 = Ig(y4, 0, G4, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q5 = (g6 = Ig(n5, 0, k4, DA2)) + B4 | 0, B4 = f3 + A8 | 0, B4 = g6 >>> 0 > Q5 >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(h4, 0, F4, N4), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (Q5 = A8 + Q5 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(r4, 0, D4, 0), g6 = f3 + g6 | 0, cA2 = B4 = A8 + Q5 | 0, Q5 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = o3[eA2 + 14 | 0]) >>> 24 | 0, EA2 = A8 << 8 | (aA2 = o3[eA2 + 10 | 0] | o3[eA2 + 11 | 0] << 8 | o3[eA2 + 12 | 0] << 16 | o3[eA2 + 13 | 0] << 24) >>> 24, B4 = g6, g6 = (A8 = o3[eA2 + 15 | 0]) >>> 16 | 0, g6 = Ig(U4 = 2097151 & ((1 & (g6 |= B4)) << 31 | (A8 = A8 << 16 | EA2) >>> 1), 0, p4, 0), A8 = f3 + Q5 | 0, A8 = g6 >>> 0 > (B4 = g6 + cA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(w4, 0, M4, 0), A8 = f3 + A8 | 0, EA2 = A8 = g6 >>> 0 > (cA2 = g6 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, HA2 = g6 = A8 - ((cA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (A8 = g6 >>> 21 | 0) + a4 | 0, tA2 = B4 = (g6 = (2097151 & g6) << 11 | (rA2 = cA2 - -1048576 | 0) >>> 21) >>> 0 > (wA2 = g6 + yA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, MA2 = g6 = B4 - ((wA2 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = (A8 = g6 >>> 21 | 0) + fA2 | 0, O2 = A8 = (g6 = (B4 = (2097151 & g6) << 11 | (yA2 = wA2 - -1048576 | 0) >>> 21) + pA2 | 0) >>> 0 < B4 >>> 0 ? A8 + 1 | 0 : A8, W2 = g6, A8 = Ig(g6, A8, -997805, -1), g6 = f3 + _A2 | 0, sA2 = B4 = A8 + sA2 | 0, _A2 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, pA2 = (dA2 = o3[23 + (_4 = t4 + 224 | 0) | 0] | o3[_4 + 24 | 0] << 8 | o3[_4 + 25 | 0] << 16 | o3[_4 + 26 | 0] << 24) >>> 5 & 2097151, B4 = Ig(b5 = (A8 = o3[c4 + 2 | 0]) << 16 & 2031616 | o3[0 | c4] | o3[c4 + 1 | 0] << 8, 0, n5, 0), g6 = f3, Q5 = (A8 = Ig(D4, 0, H4 = (a4 = o3[c4 + 2 | 0] | o3[c4 + 3 | 0] << 8 | o3[c4 + 4 | 0] << 16 | o3[c4 + 5 | 0] << 24) >>> 5 & 2097151, 0)) + B4 | 0, B4 = f3 + g6 | 0, B4 = A8 >>> 0 > Q5 >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(Y4 = (o3[c4 + 7 | 0] | o3[c4 + 8 | 0] << 8 | o3[c4 + 9 | 0] << 16 | o3[c4 + 10 | 0] << 24) >>> 7 & 2097151, 0, M4, 0), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (Q5 = A8 + Q5 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(U4, 0, J4 = hA2 >>> 4 & 2097151, 0), A8 = f3 + g6 | 0, hA2 = Q5 = B4 + Q5 | 0, Q5 = B4 >>> 0 > Q5 >>> 0 ? A8 + 1 | 0 : A8, a4 = (g6 = o3[c4 + 6 | 0]) << 8 | a4 >>> 24, B4 = A8 = g6 >>> 24 | 0, g6 = (A8 = o3[c4 + 7 | 0]) >>> 16 | 0, g6 = Ig(d5 = 2097151 & ((3 & (g6 |= B4)) << 30 | (A8 = A8 << 16 | a4) >>> 2), 0, F4, N4), A8 = f3 + Q5 | 0, A8 = g6 >>> 0 > (B4 = g6 + hA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q5 = (g6 = Ig(G4, 0, m4 = (o3[eA2 + 7 | 0] | o3[eA2 + 8 | 0] << 8 | o3[eA2 + 9 | 0] << 16 | o3[eA2 + 10 | 0] << 24) >>> 7 & 2097151, 0)) + B4 | 0, B4 = f3 + A8 | 0, B4 = g6 >>> 0 > Q5 >>> 0 ? B4 + 1 | 0 : B4, g6 = Ig(K4, 0, KA2 = aA2 >>> 4 & 2097151, 0), A8 = f3 + B4 | 0, a4 = g6 >>> 0 > (Q5 = g6 + Q5 | 0) >>> 0 ? A8 + 1 | 0 : A8, A8 = (g6 = o3[eA2 + 6 | 0]) >>> 24 | 0, hA2 = g6 << 8 | (aA2 = o3[eA2 + 2 | 0] | o3[eA2 + 3 | 0] << 8 | o3[eA2 + 4 | 0] << 16 | o3[eA2 + 5 | 0] << 24) >>> 24, g6 = A8, A8 = Ig(k4, DA2, l4 = 2097151 & ((3 & (g6 |= B4 = (A8 = o3[eA2 + 7 | 0]) >>> 16 | 0)) << 30 | (A8 = A8 << 16 | hA2) >>> 2), 0), g6 = f3 + a4 | 0, g6 = A8 >>> 0 > (B4 = A8 + Q5 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q5 = B4, B4 = Ig(u4 = (A8 = o3[eA2 + 2 | 0]) << 16 & 2031616 | o3[0 | eA2] | o3[eA2 + 1 | 0] << 8, 0, h4, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (Q5 = Q5 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(r4, 0, x4 = aA2 >>> 5 & 2097151, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + Q5 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = B4, hA2 = B4 = B4 + pA2 | 0, a4 = g6 = g6 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, Q5 = o3[_4 + 21 | 0] | o3[_4 + 22 | 0] << 8, A8 = Ig(D4, 0, b5, 0), g6 = f3, aA2 = (B4 = A8) + (A8 = Ig(F4, N4, H4, 0)) | 0, B4 = f3 + g6 | 0, B4 = A8 >>> 0 > aA2 >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(U4, 0, Y4, 0), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (aA2 = A8 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(J4, 0, KA2, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, aA2 = (A8 = B4) + (B4 = Ig(M4, 0, d5, 0)) | 0, A8 = f3 + g6 | 0, A8 = B4 >>> 0 > aA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(G4, 0, l4, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + aA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, aA2 = (g6 = Ig(K4, 0, m4, 0)) + B4 | 0, B4 = f3 + A8 | 0, B4 = g6 >>> 0 > aA2 >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(k4, DA2, x4, 0), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (aA2 = A8 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(r4, 0, u4, 0), g6 = f3 + g6 | 0, A8 = A8 >>> 0 > (B4 = A8 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, g6 = (g6 = B4) >>> 0 > (B4 = B4 + Q5 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q5 = B4, B4 = (A8 = o3[_4 + 23 | 0]) << 16 & 2031616, A8 = g6, B4 = A8 = B4 >>> 0 > (Q5 = Q5 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, eA2 = A8 = A8 - ((Q5 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (g6 = A8 >>> 21 | 0) + a4 | 0, A8 = (g6 = (a4 = hA2 = (A8 = (2097151 & A8) << 11 | (aA2 = Q5 - -1048576 | 0) >>> 21) + hA2 | 0) >>> 0 < A8 >>> 0 ? g6 + 1 | 0 : g6) + _A2 | 0, A8 = (_A2 = a4 + sA2 | 0) >>> 0 < a4 >>> 0 ? A8 + 1 | 0 : A8, kA2 = a4 - -1048576 | 0, FA2 = a4 = g6 - ((a4 >>> 0 < 4293918720) - 1 | 0) | 0, NA2 = _A2 - (g6 = -2097152 & kA2) | 0, YA2 = A8 - ((g6 >>> 0 > _A2 >>> 0) + a4 | 0) | 0, hA2 = Q5, _A2 = B4, A8 = Ig(q3, z2, 470296, 0), g6 = f3, B4 = A8, A8 = Ig(L4, R4, 666643, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q5 = (A8 = B4) + (B4 = Ig(W2, O2, 654183, 0)) | 0, A8 = f3 + g6 | 0, GA2 = Q5, a4 = B4 >>> 0 > Q5 >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(F4, N4, b5, 0), A8 = f3, B4 = g6, g6 = Ig(M4, 0, H4, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q5 = (g6 = B4) + (B4 = Ig(Y4, 0, KA2, 0)) | 0, g6 = f3 + A8 | 0, g6 = B4 >>> 0 > Q5 >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(J4, 0, m4, 0), B4 = f3 + g6 | 0, B4 = A8 >>> 0 > (Q5 = A8 + Q5 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(U4, 0, d5, 0), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (Q5 = A8 + Q5 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(G4, 0, x4, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (Q5 = B4 + Q5 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(K4, 0, l4, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + Q5 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q5 = (g6 = B4) + (B4 = Ig(k4, DA2, u4, 0)) | 0, g6 = f3 + A8 | 0, pA2 = Q5, B4 = B4 >>> 0 > Q5 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = o3[_4 + 19 | 0]) >>> 24 | 0, fA2 = A8 << 8 | (sA2 = o3[_4 + 15 | 0] | o3[_4 + 16 | 0] << 8 | o3[_4 + 17 | 0] << 16 | o3[_4 + 18 | 0] << 24) >>> 24, B4 = ((JA2 = (A8 = (Q5 = o3[_4 + 20 | 0]) >>> 16 | 0) | g6) >>> 3 | 0) + B4 | 0, pA2 = Q5 = (g6 = (7 & JA2) << 29 | (g6 = (Q5 <<= 16) | fA2) >>> 3) + pA2 | 0, Q5 = g6 >>> 0 > Q5 >>> 0 ? B4 + 1 | 0 : B4, fA2 = sA2 >>> 6 & 2097151, A8 = Ig(M4, 0, b5, 0), g6 = f3, B4 = A8, A8 = Ig(U4, 0, H4, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, sA2 = (A8 = B4) + (B4 = Ig(Y4, 0, m4, 0)) | 0, A8 = f3 + g6 | 0, A8 = B4 >>> 0 > sA2 >>> 0 ? A8 + 1 | 0 : A8, B4 = Ig(J4, 0, l4, 0), g6 = f3 + A8 | 0, g6 = B4 >>> 0 > (sA2 = B4 + sA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(d5, 0, KA2, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (sA2 = B4 + sA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(G4, 0, u4, 0), B4 = f3 + A8 | 0, B4 = g6 >>> 0 > (sA2 = g6 + sA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(K4, 0, x4, 0), g6 = f3 + B4 | 0, A8 = A8 >>> 0 > (sA2 = A8 + sA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, qA2 = A8 = (lA2 = sA2 + fA2 | 0) >>> 0 < sA2 >>> 0 ? A8 + 1 | 0 : A8, ZA2 = A8 = A8 - ((lA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (LA2 = lA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + Q5 | 0, jA2 = A8 = B4 >>> 0 > (zA2 = B4 + pA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, TA2 = A8 = A8 - ((zA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (xA2 = zA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + a4 | 0, g6 = (B4 >>> 0 > (Q5 = B4 + GA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) + _A2 | 0, _A2 = (B4 = Q5 + hA2 | 0) - (A8 = -2097152 & aA2) | 0, eA2 = A8 = (g6 = B4 >>> 0 < Q5 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > B4 >>> 0) + eA2 | 0) | 0, $A2 = A8 = A8 - ((_A2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (vA2 = _A2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + YA2 | 0, Q5 = A8 = B4 >>> 0 > (a4 = B4 + NA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, VA2 = A8 = A8 - ((a4 >>> 0 < 4293918720) - 1 | 0) | 0, RA2 = (2097151 & A8) << 11 | (GA2 = a4 - -1048576 | 0) >>> 21, hA2 = A8 >> 21, JA2 = wA2 - (A8 = -2097152 & yA2) | 0, MA2 = tA2 - ((A8 >>> 0 > wA2 >>> 0) + MA2 | 0) | 0, A8 = Ig(e6, 0, p4, 0), PA2 = g6 = f3, NA2 = A8, sA2 = A8 - -1048576 | 0, uA2 = g6 = g6 - ((A8 >>> 0 < 4293918720) - 1 | 0) | 0, V2 = A8 = g6 >>> 21 | 0, A8 = Ig(v4 = (2097151 & g6) << 11 | sA2 >>> 21, A8, -683901, -1), g6 = f3 + EA2 | 0, g6 = A8 >>> 0 > (B4 = A8 + cA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, yA2 = B4 - (A8 = -2097152 & rA2) | 0, aA2 = g6 - ((A8 >>> 0 > B4 >>> 0) + HA2 | 0) | 0, g6 = Ig(n5, 0, G4, 0), A8 = f3, B4 = g6, g6 = Ig(e6, 0, J4, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(y4, 0, K4, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, EA2 = (g6 = B4) + (B4 = Ig(D4, 0, k4, DA2)) | 0, g6 = f3 + A8 | 0, g6 = B4 >>> 0 > EA2 >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(h4, 0, M4, 0), B4 = f3 + g6 | 0, B4 = A8 >>> 0 > (EA2 = A8 + EA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(r4, 0, F4, N4), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (EA2 = A8 + EA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(p4, 0, KA2, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (EA2 = B4 + EA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(w4, 0, U4, 0), A8 = f3 + A8 | 0, cA2 = B4 = g6 + EA2 | 0, EA2 = g6 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, A8 = Ig(y4, 0, J4, 0), g6 = f3, B4 = A8, A8 = Ig(e6, 0, Y4, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, tA2 = (A8 = Ig(D4, 0, G4, 0)) + B4 | 0, B4 = f3 + g6 | 0, B4 = A8 >>> 0 > tA2 >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(n5, 0, K4, 0), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (tA2 = A8 + tA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(k4, DA2, F4, N4), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (tA2 = B4 + tA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(h4, 0, U4, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + tA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, tA2 = (g6 = B4) + (B4 = Ig(r4, 0, M4, 0)) | 0, g6 = f3 + A8 | 0, g6 = B4 >>> 0 > tA2 >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(p4, 0, m4, 0), B4 = f3 + g6 | 0, B4 = A8 >>> 0 > (tA2 = A8 + tA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(w4, 0, KA2, 0), g6 = f3 + B4 | 0, fA2 = g6 = A8 >>> 0 > (pA2 = A8 + tA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, OA2 = A8 = g6 - ((pA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (2097151 & A8) << 11 | (wA2 = pA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + EA2 | 0, rA2 = A8 = g6 >>> 0 > (HA2 = g6 + cA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, mA2 = A8 = A8 - ((HA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (B4 = A8 >>> 21 | 0) + aA2 | 0, yA2 = g6 = (A8 = (2097151 & A8) << 11 | (tA2 = HA2 - -1048576 | 0) >>> 21) >>> 0 > (YA2 = A8 + yA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, XA2 = A8 = g6 - ((YA2 >>> 0 < 4293918720) - 1 | 0) | 0, EA2 = (2097151 & A8) << 11 | (aA2 = YA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + MA2 | 0, Z2 = A8 = (g6 = EA2 + JA2 | 0) >>> 0 < EA2 >>> 0 ? A8 + 1 | 0 : A8, T2 = g6, A8 = Ig(g6, A8, -683901, -1), g6 = f3 + hA2 | 0, RA2 = B4 = A8 + RA2 | 0, hA2 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(y4, 0, b5, 0), g6 = f3, B4 = A8, A8 = Ig(n5, 0, H4, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, EA2 = (A8 = B4) + (B4 = Ig(F4, N4, Y4, 0)) | 0, A8 = f3 + g6 | 0, A8 = B4 >>> 0 > EA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(M4, 0, J4, 0), B4 = f3 + A8 | 0, B4 = g6 >>> 0 > (EA2 = g6 + EA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, g6 = Ig(D4, 0, d5, 0), A8 = f3 + B4 | 0, A8 = g6 >>> 0 > (EA2 = g6 + EA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = Ig(G4, 0, KA2, 0), g6 = f3 + A8 | 0, g6 = B4 >>> 0 > (EA2 = B4 + EA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(K4, 0, U4, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + EA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, EA2 = (A8 = B4) + (B4 = Ig(k4, DA2, m4, 0)) | 0, A8 = f3 + g6 | 0, A8 = B4 >>> 0 > EA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(h4, 0, x4, 0), B4 = f3 + A8 | 0, B4 = g6 >>> 0 > (EA2 = g6 + EA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, g6 = Ig(r4, 0, l4, 0), A8 = f3 + B4 | 0, A8 = g6 >>> 0 > (EA2 = g6 + EA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = Ig(w4, 0, u4, 0), g6 = f3 + A8 | 0, MA2 = EA2 = B4 + EA2 | 0, B4 = B4 >>> 0 > EA2 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = o3[_4 + 27 | 0]) >>> 24 | 0, cA2 = A8 << 8 | dA2 >>> 24, EA2 = 2097151 & ((3 & (g6 |= A8 = (EA2 = o3[_4 + 28 | 0]) >>> 16 | 0)) << 30 | (A8 = (EA2 <<= 16) | cA2) >>> 2), g6 = B4, cA2 = A8 = EA2 + MA2 | 0, EA2 = A8 >>> 0 < EA2 >>> 0 ? g6 + 1 | 0 : g6, JA2 = Ig(X2, P7, 470296, 0), MA2 = f3, A8 = (B4 = (2097151 & bA2) << 11 | UA2 >>> 21) + (NA2 - (g6 = -2097152 & sA2) | 0) | 0, g6 = PA2 - ((524287 & uA2) + (g6 >>> 0 > NA2 >>> 0) | 0) + (bA2 >>> 21) | 0, $2 = g6 = A8 >>> 0 < B4 >>> 0 ? g6 + 1 | 0 : g6, AA2 = A8, g6 = Ig(A8, g6, 666643, 0), A8 = f3 + MA2 | 0, A8 = g6 >>> 0 > (B4 = g6 + JA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, sA2 = (g6 = Ig(L4, R4, 654183, 0)) + B4 | 0, B4 = f3 + A8 | 0, B4 = g6 >>> 0 > sA2 >>> 0 ? B4 + 1 | 0 : B4, g6 = Ig(q3, z2, -997805, -1), A8 = f3 + B4 | 0, A8 = g6 >>> 0 > (sA2 = g6 + sA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = Ig(W2, O2, 136657, 0), g6 = f3 + A8 | 0, kA2 = (A8 = (2097151 & FA2) << 11 | kA2 >>> 21) + (sA2 = B4 + sA2 | 0) | 0, g6 = (FA2 >>> 21 | 0) + (B4 >>> 0 > sA2 >>> 0 ? g6 + 1 | 0 : g6) | 0, uA2 = sA2 = EA2 - ((cA2 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = (A8 >>> 0 > kA2 >>> 0 ? g6 + 1 | 0 : g6) + EA2 | 0, g6 = (EA2 = cA2 + kA2 | 0) - (B4 = -2097152 & (PA2 = cA2 - -1048576 | 0)) | 0, B4 = (A8 = (A8 = EA2 >>> 0 < kA2 >>> 0 ? A8 + 1 | 0 : A8) - ((B4 >>> 0 > EA2 >>> 0) + sA2 | 0) | 0) + hA2 | 0, JA2 = EA2 = A8 - ((g6 >>> 0 < 4293918720) - 1 | 0) | 0, NA2 = (B4 = (cA2 = g6 + RA2 | 0) >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4) - (((g6 = -2097152 & (MA2 = g6 - -1048576 | 0)) >>> 0 > cA2 >>> 0) + EA2 | 0) | 0, dA2 = A8 = cA2 - g6 | 0, EA2 = a4, a4 = Q5, WA2 = YA2 - (A8 = -2097152 & aA2) | 0, sA2 = yA2 - ((A8 >>> 0 > YA2 >>> 0) + XA2 | 0) | 0, A8 = Ig(AA2, $2, -683901, -1), g6 = f3, Q5 = (B4 = A8) + (A8 = Ig(v4, V2, 136657, 0)) | 0, B4 = f3 + g6 | 0, g6 = rA2 + (A8 >>> 0 > Q5 >>> 0 ? B4 + 1 | 0 : B4) | 0, tA2 = (B4 = Q5 + HA2 | 0) - (A8 = -2097152 & tA2) | 0, yA2 = (g6 = B4 >>> 0 < HA2 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > B4 >>> 0) + mA2 | 0) | 0, g6 = Ig(v4, V2, -997805, -1), A8 = f3 + fA2 | 0, A8 = g6 >>> 0 > (B4 = g6 + pA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q5 = (g6 = Ig(AA2, $2, 136657, 0)) + B4 | 0, B4 = f3 + A8 | 0, B4 = g6 >>> 0 > Q5 >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(X2, P7, -683901, -1), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (Q5 = A8 + Q5 | 0) >>> 0 ? g6 + 1 | 0 : g6, aA2 = Q5 - (A8 = -2097152 & wA2) | 0, hA2 = g6 - ((A8 >>> 0 > Q5 >>> 0) + OA2 | 0) | 0, g6 = Ig(n5, 0, J4, 0), A8 = f3, B4 = g6, g6 = Ig(y4, 0, Y4, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q5 = (g6 = Ig(e6, 0, d5, 0)) + B4 | 0, B4 = f3 + A8 | 0, B4 = g6 >>> 0 > Q5 >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(F4, N4, G4, 0), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (Q5 = A8 + Q5 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(D4, 0, K4, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (Q5 = B4 + Q5 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = Ig(k4, DA2, M4, 0), g6 = f3 + A8 | 0, g6 = B4 >>> 0 > (Q5 = B4 + Q5 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(h4, 0, KA2, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (Q5 = B4 + Q5 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(r4, 0, U4, 0), B4 = f3 + A8 | 0, B4 = g6 >>> 0 > (Q5 = g6 + Q5 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(p4, 0, l4, 0), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (Q5 = A8 + Q5 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(w4, 0, m4, 0), A8 = f3 + g6 | 0, cA2 = Q5 = B4 + Q5 | 0, Q5 = B4 >>> 0 > Q5 >>> 0 ? A8 + 1 | 0 : A8, A8 = Ig(n5, 0, Y4, 0), g6 = f3, B4 = A8, A8 = Ig(e6, 0, H4, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, rA2 = (A8 = B4) + (B4 = Ig(D4, 0, J4, 0)) | 0, A8 = f3 + g6 | 0, A8 = B4 >>> 0 > rA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(y4, 0, d5, 0), B4 = f3 + A8 | 0, B4 = g6 >>> 0 > (rA2 = g6 + rA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(G4, 0, M4, 0), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (rA2 = A8 + rA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(F4, N4, K4, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (rA2 = B4 + rA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = Ig(k4, DA2, U4, 0), g6 = f3 + A8 | 0, g6 = B4 >>> 0 > (rA2 = B4 + rA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(h4, 0, m4, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (rA2 = B4 + rA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(r4, 0, KA2, 0), B4 = f3 + A8 | 0, B4 = g6 >>> 0 > (rA2 = g6 + rA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, rA2 = (A8 = Ig(p4, 0, x4, 0)) + rA2 | 0, g6 = f3 + B4 | 0, B4 = Ig(w4, 0, l4, 0), A8 = f3 + (A8 >>> 0 > rA2 >>> 0 ? g6 + 1 | 0 : g6) | 0, YA2 = A8 = B4 >>> 0 > (XA2 = B4 + rA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, gA2 = A8 = A8 - ((XA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (bA2 = XA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + Q5 | 0, UA2 = A8 = B4 >>> 0 > (RA2 = B4 + cA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, CA2 = A8 = A8 - ((RA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (FA2 = RA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + hA2 | 0, kA2 = A8 = B4 >>> 0 > (HA2 = B4 + aA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, BA2 = A8 = A8 - ((HA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (fA2 = HA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + yA2 | 0, Q5 = A8 = B4 >>> 0 > (aA2 = B4 + tA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, yA2 = A8 = A8 - ((aA2 >>> 0 < 4293918720) - 1 | 0) | 0, hA2 = (2097151 & A8) << 11 | (B4 = aA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + sA2 | 0, OA2 = A8 = (cA2 = hA2 + WA2 | 0) >>> 0 < hA2 >>> 0 ? A8 + 1 | 0 : A8, mA2 = cA2, A8 = Ig(cA2, A8, -683901, -1), g6 = f3, cA2 = A8, A8 = Ig(T2, Z2, 136657, 0), g6 = f3 + g6 | 0, A8 = (A8 >>> 0 > (cA2 = cA2 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6) + a4 | 0, AI2 = (a4 = EA2 + cA2 | 0) - (g6 = -2097152 & GA2) | 0, II2 = (A8 = a4 >>> 0 < cA2 >>> 0 ? A8 + 1 | 0 : A8) - ((g6 >>> 0 > a4 >>> 0) + VA2 | 0) | 0, hA2 = _A2, cA2 = eA2, _A2 = Ig(mA2, OA2, 136657, 0), a4 = f3, WA2 = A8 = aA2 - (g6 = -2097152 & B4) | 0, IA2 = Q5 = Q5 - ((g6 >>> 0 > aA2 >>> 0) + yA2 | 0) | 0, B4 = Ig(T2, Z2, -997805, -1), g6 = f3 + a4 | 0, g6 = B4 >>> 0 > (_A2 = B4 + _A2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(A8, Q5, -683901, -1), A8 = f3 + g6 | 0, VA2 = Q5 = B4 + _A2 | 0, EA2 = B4 >>> 0 > Q5 >>> 0 ? A8 + 1 | 0 : A8, A8 = Ig(W2, O2, 470296, 0), g6 = f3, Q5 = (B4 = A8) + (A8 = Ig(q3, z2, 666643, 0)) | 0, B4 = f3 + g6 | 0, g6 = jA2 + (A8 >>> 0 > Q5 >>> 0 ? B4 + 1 | 0 : B4) | 0, GA2 = A8 = Q5 + zA2 | 0, a4 = g6 = A8 >>> 0 < zA2 >>> 0 ? g6 + 1 | 0 : g6, g6 = Ig(W2, O2, 666643, 0), A8 = f3 + qA2 | 0, A8 = g6 >>> 0 > (B4 = g6 + lA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, tA2 = B4 - (g6 = -2097152 & LA2) | 0, pA2 = A8 - ((g6 >>> 0 > B4 >>> 0) + ZA2 | 0) | 0, g6 = Ig(U4, 0, b5, 0), A8 = f3, B4 = g6, g6 = Ig(H4, 0, KA2, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q5 = (g6 = B4) + (B4 = Ig(Y4, 0, l4, 0)) | 0, g6 = f3 + A8 | 0, g6 = B4 >>> 0 > Q5 >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(J4, 0, x4, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (Q5 = B4 + Q5 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(d5, 0, m4, 0), B4 = f3 + A8 | 0, B4 = g6 >>> 0 > (Q5 = g6 + Q5 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(K4, 0, u4, 0), g6 = f3 + B4 | 0, aA2 = Q5 = A8 + Q5 | 0, Q5 = A8 >>> 0 > Q5 >>> 0 ? g6 + 1 | 0 : g6, g6 = (A8 = o3[_4 + 14 | 0]) >>> 24 | 0, _A2 = A8 << 8 | (yA2 = o3[_4 + 10 | 0] | o3[_4 + 11 | 0] << 8 | o3[_4 + 12 | 0] << 16 | o3[_4 + 13 | 0] << 24) >>> 24, g6 = 2097151 & ((1 & (g6 |= B4 = (A8 = o3[_4 + 15 | 0]) >>> 16 | 0)) << 31 | (A8 = _A2 | A8 << 16) >>> 1), A8 = Q5, aA2 = B4 = g6 + aA2 | 0, Q5 = g6 >>> 0 > B4 >>> 0 ? A8 + 1 | 0 : A8, _A2 = yA2 >>> 4 & 2097151, A8 = Ig(b5, 0, KA2, 0), g6 = f3, B4 = A8, A8 = Ig(H4, 0, m4, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(Y4, 0, x4, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, yA2 = (A8 = B4) + (B4 = Ig(J4, 0, u4, 0)) | 0, A8 = f3 + g6 | 0, A8 = B4 >>> 0 > yA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(d5, 0, l4, 0), B4 = f3 + A8 | 0, A8 = g6 >>> 0 > (yA2 = g6 + yA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, eA2 = A8 = (LA2 = _A2 + yA2 | 0) >>> 0 < yA2 >>> 0 ? A8 + 1 | 0 : A8, QA2 = A8 = A8 - ((LA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (B4 = A8 >>> 21 | 0) + Q5 | 0, wA2 = g6 = (A8 = (2097151 & A8) << 11 | (sA2 = LA2 - -1048576 | 0) >>> 21) >>> 0 > (jA2 = A8 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, iA2 = A8 = g6 - ((jA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (2097151 & A8) << 11 | (rA2 = jA2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + pA2 | 0, yA2 = A8 = g6 >>> 0 > (tA2 = g6 + tA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, oA2 = A8 = A8 - ((tA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (B4 = A8 >> 21) + a4 | 0, ZA2 = g6 = (g6 = (A8 = (2097151 & A8) << 11 | (aA2 = tA2 - -1048576 | 0) >>> 21) >>> 0 > (Q5 = A8 + GA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) - (((B4 = -2097152 & xA2) >>> 0 > Q5 >>> 0) + TA2 | 0) | 0, xA2 = A8 = Q5 - B4 | 0, _A2 = A8 - -1048576 | 0, TA2 = A8 = g6 - ((A8 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (g6 = A8 >> 21) + EA2 | 0, g6 = ((A8 = (2097151 & A8) << 11 | _A2 >>> 21) >>> 0 > (Q5 = A8 + VA2 | 0) >>> 0 ? B4 + 1 | 0 : B4) + cA2 | 0, lA2 = g6 = (g6 = (A8 = Q5) >>> 0 > (Q5 = Q5 + hA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) - (((B4 = -2097152 & vA2) >>> 0 > Q5 >>> 0) + $A2 | 0) | 0, cA2 = A8 = Q5 - B4 | 0, a4 = A8 - -1048576 | 0, qA2 = A8 = g6 - ((A8 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (g6 = A8 >> 21) + II2 | 0, vA2 = A8 = (B4 = (A8 = (2097151 & A8) << 11 | a4 >>> 21) >>> 0 > (EA2 = A8 + AI2 | 0) >>> 0 ? B4 + 1 | 0 : B4) - ((EA2 >>> 0 < 4293918720) - 1 | 0) | 0, GA2 = dA2 - -1048576 | 0, pA2 = NA2 - ((dA2 >>> 0 < 4293918720) - 1 | 0) | 0, hA2 = (2097151 & A8) << 11 | (Q5 = EA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + NA2 | 0, $A2 = (dA2 = hA2 + dA2 | 0) - (g6 = -2097152 & GA2) | 0, AI2 = (hA2 >>> 0 > dA2 >>> 0 ? A8 + 1 | 0 : A8) - ((g6 >>> 0 > dA2 >>> 0) + pA2 | 0) | 0, II2 = EA2 - (A8 = -2097152 & Q5) | 0, VA2 = B4 - ((A8 >>> 0 > EA2 >>> 0) + vA2 | 0) | 0, zA2 = cA2 - (A8 = -2097152 & a4) | 0, dA2 = lA2 - ((A8 >>> 0 > cA2 >>> 0) + qA2 | 0) | 0, A8 = Ig(mA2, OA2, -997805, -1), g6 = f3, B4 = A8, A8 = Ig(T2, Z2, 654183, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q5 = (A8 = B4) + (B4 = Ig(WA2, IA2, 136657, 0)) | 0, A8 = f3 + g6 | 0, g6 = ZA2 + (B4 >>> 0 > Q5 >>> 0 ? A8 + 1 | 0 : A8) | 0, lA2 = (B4 = Q5 + xA2 | 0) - (A8 = -2097152 & _A2) | 0, qA2 = (g6 = B4 >>> 0 < xA2 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > B4 >>> 0) + TA2 | 0) | 0, xA2 = HA2 - (A8 = -2097152 & fA2) | 0, NA2 = kA2 - ((A8 >>> 0 > HA2 >>> 0) + BA2 | 0) | 0, g6 = Ig(AA2, $2, -997805, -1), A8 = f3, B4 = g6, g6 = Ig(v4, V2, 654183, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q5 = (g6 = B4) + (B4 = Ig(X2, P7, 136657, 0)) | 0, g6 = f3 + A8 | 0, g6 = B4 >>> 0 > Q5 >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(L4, R4, -683901, -1), B4 = f3 + g6 | 0, g6 = UA2 + (A8 >>> 0 > (Q5 = A8 + Q5 | 0) >>> 0 ? B4 + 1 | 0 : B4) | 0, fA2 = (B4 = Q5 + RA2 | 0) - (A8 = -2097152 & FA2) | 0, kA2 = (g6 = B4 >>> 0 < RA2 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > B4 >>> 0) + CA2 | 0) | 0, g6 = Ig(AA2, $2, 654183, 0), A8 = f3, B4 = g6, g6 = Ig(v4, V2, 470296, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q5 = (g6 = Ig(X2, P7, -997805, -1)) + B4 | 0, B4 = f3 + A8 | 0, g6 = YA2 + (g6 >>> 0 > Q5 >>> 0 ? B4 + 1 | 0 : B4) | 0, g6 = (A8 = Q5 + XA2 | 0) >>> 0 < XA2 >>> 0 ? g6 + 1 | 0 : g6, B4 = A8, A8 = Ig(L4, R4, 136657, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q5 = (A8 = B4) + (B4 = Ig(q3, z2, -683901, -1)) | 0, A8 = f3 + g6 | 0, _A2 = Q5 - (g6 = -2097152 & bA2) | 0, a4 = (B4 >>> 0 > Q5 >>> 0 ? A8 + 1 | 0 : A8) - ((g6 >>> 0 > Q5 >>> 0) + gA2 | 0) | 0, Q5 = (o3[_4 + 28 | 0] | o3[_4 + 29 | 0] << 8 | o3[_4 + 30 | 0] << 16 | o3[_4 + 31 | 0] << 24) >>> 7 | 0, A8 = Ig(e6, 0, b5, 0), g6 = f3, EA2 = (B4 = A8) + (A8 = Ig(y4, 0, H4, 0)) | 0, B4 = f3 + g6 | 0, B4 = A8 >>> 0 > EA2 >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(D4, 0, Y4, 0), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (EA2 = A8 + EA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(F4, N4, J4, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (EA2 = B4 + EA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = Ig(n5, 0, d5, 0), g6 = f3 + A8 | 0, g6 = B4 >>> 0 > (EA2 = B4 + EA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(G4, 0, U4, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (EA2 = B4 + EA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(M4, 0, K4, 0), B4 = f3 + A8 | 0, B4 = g6 >>> 0 > (EA2 = g6 + EA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, A8 = Ig(k4, DA2, KA2, 0), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (EA2 = A8 + EA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(h4, 0, l4, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (EA2 = B4 + EA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = Ig(r4, 0, m4, 0), g6 = f3 + A8 | 0, g6 = B4 >>> 0 > (EA2 = B4 + EA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(p4, 0, u4, 0), A8 = f3 + g6 | 0, A8 = B4 >>> 0 > (EA2 = B4 + EA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(w4, 0, x4, 0), B4 = f3 + A8 | 0, g6 = B4 = g6 >>> 0 > (EA2 = g6 + EA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, UA2 = (B4 = (2097151 & uA2) << 11 | PA2 >>> 21) + (A8 = Q5 + EA2 | 0) | 0, A8 = (uA2 >>> 21 | 0) + (g6 = A8 >>> 0 < EA2 >>> 0 ? g6 + 1 | 0 : g6) | 0, hA2 = A8 = B4 >>> 0 > UA2 >>> 0 ? A8 + 1 | 0 : A8, vA2 = g6 = A8 - ((UA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (A8 = g6 >>> 21 | 0) + a4 | 0, cA2 = B4 = (g6 = (2097151 & g6) << 11 | (DA2 = UA2 - -1048576 | 0) >>> 21) >>> 0 > (FA2 = g6 + _A2 | 0) >>> 0 ? B4 + 1 | 0 : B4, PA2 = g6 = B4 - ((FA2 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = (A8 = g6 >> 21) + kA2 | 0, _A2 = A8 = (g6 = (2097151 & g6) << 11 | (EA2 = FA2 - -1048576 | 0) >>> 21) >>> 0 > (fA2 = g6 + fA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, bA2 = g6 = A8 - ((fA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (A8 = g6 >> 21) + NA2 | 0, uA2 = B4 = (g6 = (Q5 = (2097151 & g6) << 11 | (a4 = fA2 - -1048576 | 0) >>> 21) + xA2 | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, NA2 = g6, A8 = Ig(g6, B4, -683901, -1), g6 = f3 + qA2 | 0, kA2 = B4 = A8 + lA2 | 0, Q5 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, g6 = Ig(T2, Z2, 470296, 0), A8 = f3 + yA2 | 0, A8 = g6 >>> 0 > (tA2 = g6 + tA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(mA2, OA2, 654183, 0), A8 = f3 + (A8 - (((B4 = -2097152 & aA2) >>> 0 > tA2 >>> 0) + oA2 | 0) | 0) | 0, A8 = g6 >>> 0 > (aA2 = g6 + (tA2 - B4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = Ig(WA2, IA2, -997805, -1), g6 = f3 + A8 | 0, g6 = B4 >>> 0 > (aA2 = B4 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, YA2 = B4 = fA2 - (A8 = -2097152 & a4) | 0, KA2 = _A2 = _A2 - ((A8 >>> 0 > fA2 >>> 0) + bA2 | 0) | 0, aA2 = (a4 = Ig(NA2, uA2, 136657, 0)) + aA2 | 0, A8 = f3 + g6 | 0, B4 = Ig(B4, _A2, -683901, -1), g6 = f3 + (a4 >>> 0 > aA2 >>> 0 ? A8 + 1 | 0 : A8) | 0, _A2 = g6 = B4 >>> 0 > (yA2 = B4 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, bA2 = A8 = g6 - ((yA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = (2097151 & A8) << 11 | (a4 = yA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + Q5 | 0, fA2 = g6 = (A8 = g6 >>> 0 > (aA2 = g6 + kA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) - ((aA2 >>> 0 < 4293918720) - 1 | 0) | 0, tA2 = (2097151 & g6) << 11 | (Q5 = aA2 - -1048576 | 0) >>> 21, g6 = (g6 >> 21) + dA2 | 0, zA2 = kA2 = tA2 + zA2 | 0, kA2 = tA2 >>> 0 > kA2 >>> 0 ? g6 + 1 | 0 : g6, dA2 = aA2 - (g6 = -2097152 & Q5) | 0, XA2 = A8 - ((g6 >>> 0 > aA2 >>> 0) + fA2 | 0) | 0, lA2 = yA2 - (A8 = -2097152 & a4) | 0, qA2 = _A2 - ((A8 >>> 0 > yA2 >>> 0) + bA2 | 0) | 0, A8 = Ig(T2, Z2, 666643, 0), B4 = wA2 + f3 | 0, B4 = (a4 = A8 + jA2 | 0) >>> 0 < jA2 >>> 0 ? B4 + 1 | 0 : B4, Q5 = (A8 = Ig(mA2, OA2, 470296, 0)) + (a4 - (g6 = -2097152 & rA2) | 0) | 0, g6 = f3 + (B4 - ((g6 >>> 0 > a4 >>> 0) + iA2 | 0) | 0) | 0, g6 = A8 >>> 0 > Q5 >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(WA2, IA2, 654183, 0), A8 = f3 + g6 | 0, aA2 = Q5 = B4 + Q5 | 0, Q5 = B4 >>> 0 > Q5 >>> 0 ? A8 + 1 | 0 : A8, a4 = FA2 - (A8 = -2097152 & EA2) | 0, _A2 = cA2 - ((A8 >>> 0 > FA2 >>> 0) + PA2 | 0) | 0, A8 = Ig(AA2, $2, 470296, 0), g6 = f3, B4 = A8, A8 = Ig(v4, V2, 666643, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(X2, P7, 654183, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6, EA2 = (A8 = B4) + (B4 = Ig(L4, R4, -997805, -1)) | 0, A8 = f3 + g6 | 0, A8 = B4 >>> 0 > EA2 >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(q3, z2, 136657, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + EA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, EA2 = (g6 = Ig(W2, O2, -683901, -1)) + B4 | 0, B4 = f3 + A8 | 0, g6 = hA2 + (g6 >>> 0 > EA2 >>> 0 ? B4 + 1 | 0 : B4) | 0, FA2 = (B4 = (2097151 & JA2) << 11 | MA2 >>> 21) + ((EA2 = EA2 + UA2 | 0) - (A8 = -2097152 & DA2) | 0) | 0, A8 = ((g6 = EA2 >>> 0 < UA2 >>> 0 ? g6 + 1 | 0 : g6) - ((A8 >>> 0 > EA2 >>> 0) + vA2 | 0) | 0) + (JA2 >> 21) | 0, fA2 = A8 = B4 >>> 0 > FA2 >>> 0 ? A8 + 1 | 0 : A8, xA2 = A8 = A8 - ((FA2 >>> 0 < 4293918720) - 1 | 0) | 0, g6 = a4, a4 = (2097151 & A8) << 11 | (rA2 = FA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + _A2 | 0, bA2 = A8 = (B4 = g6 + a4 | 0) >>> 0 < a4 >>> 0 ? A8 + 1 | 0 : A8, UA2 = B4, A8 = Ig(B4, A8, -683901, -1), g6 = f3 + Q5 | 0, g6 = A8 >>> 0 > (B4 = A8 + aA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q5 = (A8 = B4) + (B4 = Ig(NA2, uA2, -997805, -1)) | 0, A8 = f3 + g6 | 0, A8 = B4 >>> 0 > Q5 >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(YA2, KA2, 136657, 0), B4 = f3 + A8 | 0, MA2 = Q5 = g6 + Q5 | 0, cA2 = g6 >>> 0 > Q5 >>> 0 ? B4 + 1 | 0 : B4, aA2 = LA2 - (A8 = -2097152 & sA2) | 0, hA2 = eA2 - ((A8 >>> 0 > LA2 >>> 0) + QA2 | 0) | 0, g6 = Ig(b5, 0, m4, 0), A8 = f3, B4 = g6, g6 = Ig(H4, 0, l4, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = B4 + g6 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(Y4, 0, u4, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + B4 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q5 = (g6 = Ig(d5, 0, x4, 0)) + B4 | 0, B4 = f3 + A8 | 0, g6 = g6 >>> 0 > Q5 >>> 0 ? B4 + 1 | 0 : B4, DA2 = B4 = (A8 = (o3[_4 + 7 | 0] | o3[_4 + 8 | 0] << 8 | o3[_4 + 9 | 0] << 16 | o3[_4 + 10 | 0] << 24) >>> 7 & 2097151) + Q5 | 0, EA2 = A8 >>> 0 > B4 >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(b5, 0, l4, 0), g6 = f3, B4 = A8, A8 = Ig(H4, 0, x4, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = B4 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q5 = (A8 = B4) + (B4 = Ig(d5, 0, u4, 0)) | 0, A8 = f3 + g6 | 0, _A2 = Q5, Q5 = B4 >>> 0 > Q5 >>> 0 ? A8 + 1 | 0 : A8, A8 = (g6 = o3[_4 + 6 | 0]) >>> 24 | 0, a4 = g6 << 8 | (vA2 = o3[_4 + 2 | 0] | o3[_4 + 3 | 0] << 8 | o3[_4 + 4 | 0] << 16 | o3[_4 + 5 | 0] << 24) >>> 24, B4 = A8, g6 = (A8 = o3[_4 + 7 | 0]) >>> 16 | 0, g6 |= B4, B4 = Q5, a4 = B4 = (A8 = 2097151 & ((3 & g6) << 30 | (A8 = A8 << 16 | a4) >>> 2)) >>> 0 > (_A2 = A8 + _A2 | 0) >>> 0 ? B4 + 1 | 0 : B4, RA2 = A8 = B4 - ((_A2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (wA2 = _A2 - -1048576 | 0) >>> 21, A8 = (A8 >>> 21 | 0) + EA2 | 0, tA2 = A8 = B4 >>> 0 > (eA2 = B4 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, PA2 = A8 = A8 - ((eA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (g6 = A8 >>> 21 | 0) + hA2 | 0, B4 = (A8 = (2097151 & A8) << 11 | (yA2 = eA2 - -1048576 | 0) >>> 21) >>> 0 > (Q5 = A8 + aA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, g6 = Ig(mA2, OA2, 666643, 0), A8 = f3 + B4 | 0, A8 = g6 >>> 0 > (Q5 = g6 + Q5 | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(WA2, IA2, 470296, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + Q5 | 0) >>> 0 ? A8 + 1 | 0 : A8, Q5 = (g6 = B4) + (B4 = Ig(UA2, bA2, 136657, 0)) | 0, g6 = f3 + A8 | 0, g6 = B4 >>> 0 > Q5 >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(NA2, uA2, 654183, 0), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + Q5 | 0) >>> 0 ? g6 + 1 | 0 : g6, aA2 = (A8 = Ig(YA2, KA2, -997805, -1)) + B4 | 0, B4 = f3 + g6 | 0, hA2 = B4 = A8 >>> 0 > aA2 >>> 0 ? B4 + 1 | 0 : B4, JA2 = A8 = B4 - ((aA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & A8) << 11 | (DA2 = aA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + cA2 | 0, MA2 = B4 = (A8 = B4 >>> 0 > (Q5 = B4 + MA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) - ((Q5 >>> 0 < 4293918720) - 1 | 0) | 0, EA2 = (2097151 & B4) << 11 | (cA2 = Q5 - -1048576 | 0) >>> 21, B4 = (B4 >> 21) + qA2 | 0, HA2 = sA2 = EA2 + lA2 | 0, sA2 = EA2 >>> 0 > sA2 >>> 0 ? B4 + 1 | 0 : B4, EA2 = Q5, g6 = A8, Q5 = (FA2 - (A8 = -2097152 & rA2) | 0) + (rA2 = (2097151 & pA2) << 11 | GA2 >>> 21) | 0, A8 = (fA2 - ((A8 >>> 0 > FA2 >>> 0) + xA2 | 0) | 0) + (pA2 >> 21) | 0, pA2 = A8 = Q5 >>> 0 < rA2 >>> 0 ? A8 + 1 | 0 : A8, lA2 = A8 = A8 - ((Q5 >>> 0 < 4293918720) - 1 | 0) | 0, FA2 = B4 = A8 >> 21, A8 = Ig(mA2 = (2097151 & A8) << 11 | (fA2 = Q5 - -1048576 | 0) >>> 21, B4, -683901, -1), g6 = f3 + g6 | 0, g6 = A8 >>> 0 > (B4 = A8 + EA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, qA2 = B4 - (A8 = -2097152 & cA2) | 0, LA2 = g6 - ((A8 >>> 0 > B4 >>> 0) + MA2 | 0) | 0, g6 = Ig(mA2, FA2, 136657, 0), A8 = f3 + hA2 | 0, A8 = g6 >>> 0 > (B4 = g6 + aA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, jA2 = B4 - (g6 = -2097152 & DA2) | 0, JA2 = A8 - ((g6 >>> 0 > B4 >>> 0) + JA2 | 0) | 0, g6 = Ig(WA2, IA2, 666643, 0), A8 = f3 + (tA2 - (((B4 = -2097152 & yA2) >>> 0 > eA2 >>> 0) + PA2 | 0) | 0) | 0, A8 = g6 >>> 0 > (EA2 = g6 + (eA2 - B4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8, B4 = Ig(UA2, bA2, -997805, -1), g6 = f3 + A8 | 0, g6 = B4 >>> 0 > (EA2 = B4 + EA2 | 0) >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(NA2, uA2, 470296, 0), B4 = f3 + g6 | 0, B4 = A8 >>> 0 > (EA2 = A8 + EA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, g6 = Ig(YA2, KA2, 654183, 0), A8 = f3 + B4 | 0, MA2 = EA2 = g6 + EA2 | 0, hA2 = g6 >>> 0 > EA2 >>> 0 ? A8 + 1 | 0 : A8, B4 = vA2 >>> 5 & 2097151, A8 = Ig(b5, 0, x4, 0), g6 = f3, cA2 = A8, A8 = Ig(H4, 0, u4, 0), g6 = f3 + g6 | 0, A8 = A8 >>> 0 > (EA2 = cA2 + A8 | 0) >>> 0 ? g6 + 1 | 0 : g6, cA2 = g6 = B4 + EA2 | 0, B4 = A8 = g6 >>> 0 < EA2 >>> 0 ? A8 + 1 | 0 : A8, eA2 = (g6 = Ig(b5, 0, u4, 0)) + (A8 = (A8 = o3[_4 + 2 | 0]) << 16 & 2031616 | o3[0 | _4] | o3[_4 + 1 | 0] << 8) | 0, g6 = f3, rA2 = g6 = A8 >>> 0 > eA2 >>> 0 ? g6 + 1 | 0 : g6, xA2 = g6 = g6 - ((eA2 >>> 0 < 4293918720) - 1 | 0) | 0, A8 = (A8 = g6 >>> 21 | 0) + B4 | 0, yA2 = A8 = (g6 = (2097151 & g6) << 11 | (tA2 = eA2 - -1048576 | 0) >>> 21) >>> 0 > (GA2 = g6 + cA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, vA2 = g6 = A8 - ((GA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (2097151 & g6) << 11 | (aA2 = GA2 - -1048576 | 0) >>> 21, g6 = (g6 >>> 21 | 0) + a4 | 0, g6 = B4 >>> 0 > (EA2 = B4 + _A2 | 0) >>> 0 ? g6 + 1 | 0 : g6, B4 = Ig(UA2, bA2, 654183, 0), A8 = f3 + (g6 - (((a4 = -2097152 & wA2) >>> 0 > EA2 >>> 0) + RA2 | 0) | 0) | 0, A8 = B4 >>> 0 > (_A2 = B4 + (EA2 - a4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(NA2, uA2, 666643, 0), A8 = f3 + A8 | 0, A8 = g6 >>> 0 > (B4 = g6 + _A2 | 0) >>> 0 ? A8 + 1 | 0 : A8, DA2 = (g6 = B4) + (B4 = Ig(YA2, KA2, 470296, 0)) | 0, g6 = f3 + A8 | 0, cA2 = g6 = B4 >>> 0 > DA2 >>> 0 ? g6 + 1 | 0 : g6, PA2 = g6 = g6 - ((DA2 >>> 0 < 4293918720) - 1 | 0) | 0, B4 = (A8 = g6 >> 21) + hA2 | 0, wA2 = g6 = (B4 = (g6 = (2097151 & g6) << 11 | (EA2 = DA2 - -1048576 | 0) >>> 21) >>> 0 > (_A2 = g6 + MA2 | 0) >>> 0 ? B4 + 1 | 0 : B4) - ((_A2 >>> 0 < 4293918720) - 1 | 0) | 0, hA2 = (2097151 & g6) << 11 | (a4 = _A2 - -1048576 | 0) >>> 21, g6 = (g6 >> 21) + JA2 | 0, uA2 = NA2 = hA2 + jA2 | 0, hA2 = hA2 >>> 0 > NA2 >>> 0 ? g6 + 1 | 0 : g6, A8 = Ig(mA2, FA2, -997805, -1), g6 = f3 + B4 | 0, g6 = A8 >>> 0 > (_A2 = A8 + _A2 | 0) >>> 0 ? g6 + 1 | 0 : g6, JA2 = _A2 - (A8 = -2097152 & a4) | 0, MA2 = g6 - ((A8 >>> 0 > _A2 >>> 0) + wA2 | 0) | 0, g6 = Ig(mA2, FA2, 654183, 0), A8 = f3 + cA2 | 0, A8 = g6 >>> 0 > (B4 = g6 + DA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, NA2 = B4 - (g6 = -2097152 & EA2) | 0, wA2 = A8 - ((g6 >>> 0 > B4 >>> 0) + PA2 | 0) | 0, A8 = Ig(UA2, bA2, 470296, 0), B4 = f3 + (yA2 - (((g6 = -2097152 & aA2) >>> 0 > GA2 >>> 0) + vA2 | 0) | 0) | 0, B4 = A8 >>> 0 > (a4 = A8 + (GA2 - g6 | 0) | 0) >>> 0 ? B4 + 1 | 0 : B4, g6 = Ig(YA2, KA2, 666643, 0), A8 = f3 + B4 | 0, _A2 = a4 = g6 + a4 | 0, B4 = g6 >>> 0 > a4 >>> 0 ? A8 + 1 | 0 : A8, g6 = Ig(UA2, bA2, 666643, 0), A8 = f3 + (rA2 - ((4095 & xA2) + ((a4 = -2097152 & tA2) >>> 0 > eA2 >>> 0) | 0) | 0) | 0, DA2 = A8 = g6 >>> 0 > (aA2 = g6 + (eA2 - a4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8, rA2 = A8 = A8 - ((aA2 >>> 0 < 4293918720) - 1 | 0) | 0, a4 = (2097151 & A8) << 11 | (cA2 = aA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + B4 | 0, B4 = A8 = a4 >>> 0 > (EA2 = a4 + _A2 | 0) >>> 0 ? A8 + 1 | 0 : A8, tA2 = A8 = A8 - ((EA2 >>> 0 < 4293918720) - 1 | 0) | 0, a4 = (2097151 & A8) << 11 | (_A2 = EA2 - -1048576 | 0) >>> 21, A8 = (A8 >> 21) + wA2 | 0, a4 = a4 >>> 0 > (yA2 = a4 + NA2 | 0) >>> 0 ? A8 + 1 | 0 : A8, A8 = Ig(mA2, FA2, 470296, 0), B4 = f3 + B4 | 0, B4 = A8 >>> 0 > (g6 = A8 + EA2 | 0) >>> 0 ? B4 + 1 | 0 : B4, EA2 = g6 - (A8 = -2097152 & _A2) | 0, _A2 = B4 - ((A8 >>> 0 > g6 >>> 0) + tA2 | 0) | 0, g6 = Ig(mA2, FA2, 666643, 0), A8 = f3 + (DA2 - (((B4 = -2097152 & cA2) >>> 0 > aA2 >>> 0) + rA2 | 0) | 0) | 0, g6 = (B4 = (A8 = g6 >>> 0 > (wA2 = g6 + (aA2 - B4 | 0) | 0) >>> 0 ? A8 + 1 | 0 : A8) >> 21) + _A2 | 0, A8 = (A8 = (g6 = (A8 = (2097151 & A8) << 11 | wA2 >>> 21) >>> 0 > (rA2 = A8 + EA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) >> 21) + a4 | 0, g6 = (g6 = (A8 = (g6 = (2097151 & g6) << 11 | rA2 >>> 21) >>> 0 > (tA2 = g6 + yA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) >> 21) + MA2 | 0, B4 = (A8 = (g6 = (A8 = (2097151 & A8) << 11 | tA2 >>> 21) >>> 0 > (a4 = A8 + JA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) >> 21) + hA2 | 0, A8 = (g6 = (B4 = (g6 = (2097151 & g6) << 11 | a4 >>> 21) >>> 0 > (yA2 = g6 + uA2 | 0) >>> 0 ? B4 + 1 | 0 : B4) >> 21) + LA2 | 0, g6 = (B4 = (A8 = (B4 = (2097151 & B4) << 11 | yA2 >>> 21) >>> 0 > (aA2 = B4 + qA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) >> 21) + sA2 | 0, A8 = (A8 = (g6 = (A8 = (2097151 & A8) << 11 | aA2 >>> 21) >>> 0 > (hA2 = A8 + HA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) >> 21) + XA2 | 0, g6 = (g6 = (A8 = (g6 = (2097151 & g6) << 11 | hA2 >>> 21) >>> 0 > (DA2 = g6 + dA2 | 0) >>> 0 ? A8 + 1 | 0 : A8) >> 21) + kA2 | 0, B4 = (A8 = (g6 = (A8 = (2097151 & A8) << 11 | DA2 >>> 21) >>> 0 > (cA2 = A8 + zA2 | 0) >>> 0 ? g6 + 1 | 0 : g6) >> 21) + VA2 | 0, A8 = (g6 = (B4 = (g6 = (2097151 & g6) << 11 | cA2 >>> 21) >>> 0 > (EA2 = g6 + II2 | 0) >>> 0 ? B4 + 1 | 0 : B4) >> 21) + AI2 | 0, fA2 = (sA2 = Q5 - (g6 = -2097152 & fA2) | 0) + ((2097151 & (A8 = (B4 = (2097151 & B4) << 11 | EA2 >>> 21) >>> 0 > (_A2 = B4 + $A2 | 0) >>> 0 ? A8 + 1 | 0 : A8)) << 11 | _A2 >>> 21) | 0, A8 = (pA2 - ((g6 >>> 0 > Q5 >>> 0) + lA2 | 0) | 0) + (A8 >> 21) | 0, pA2 = g6 = (A8 = sA2 >>> 0 > fA2 >>> 0 ? A8 + 1 | 0 : A8) >> 21, wA2 = (A8 = Ig(kA2 = (2097151 & A8) << 11 | fA2 >>> 21, g6, 666643, 0)) + (g6 = 2097151 & wA2) | 0, A8 = f3, Q5 = A8 = g6 >>> 0 > wA2 >>> 0 ? A8 + 1 | 0 : A8, C3[0 | E4] = wA2, C3[E4 + 1 | 0] = (255 & A8) << 24 | wA2 >>> 8, A8 = 2097151 & rA2, g6 = Ig(kA2, pA2, 470296, 0) + A8 | 0, B4 = f3, A8 = (Q5 >> 21) + (A8 >>> 0 > g6 >>> 0 ? B4 + 1 | 0 : B4) | 0, A8 = (rA2 = (sA2 = (2097151 & Q5) << 11 | wA2 >>> 21) + g6 | 0) >>> 0 < sA2 >>> 0 ? A8 + 1 | 0 : A8, C3[E4 + 4 | 0] = (2047 & A8) << 21 | rA2 >>> 11, g6 = A8, B4 = rA2, C3[E4 + 3 | 0] = (7 & A8) << 29 | B4 >>> 3, C3[E4 + 2 | 0] = 31 & ((65535 & Q5) << 16 | wA2 >>> 16) | B4 << 5, Q5 = 2097151 & tA2, tA2 = Ig(kA2, pA2, 654183, 0) + Q5 | 0, A8 = f3, rA2 = (2097151 & g6) << 11 | B4 >>> 21, g6 = (g6 >> 21) + (Q5 = Q5 >>> 0 > tA2 >>> 0 ? A8 + 1 | 0 : A8) | 0, A8 = g6 = (tA2 = rA2 + tA2 | 0) >>> 0 < rA2 >>> 0 ? g6 + 1 | 0 : g6, C3[E4 + 6 | 0] = (63 & A8) << 26 | tA2 >>> 6, Q5 = tA2, tA2 = 0, C3[E4 + 5 | 0] = tA2 << 13 | (1572864 & B4) >>> 19 | Q5 << 2, B4 = 2097151 & a4, a4 = Ig(kA2, pA2, -997805, -1) + B4 | 0, g6 = f3, g6 = B4 >>> 0 > a4 >>> 0 ? g6 + 1 | 0 : g6, tA2 = (2097151 & (B4 = A8)) << 11 | Q5 >>> 21, B4 = (A8 >>= 21) + g6 | 0, B4 = (a4 = tA2 + a4 | 0) >>> 0 < tA2 >>> 0 ? B4 + 1 | 0 : B4, C3[E4 + 9 | 0] = (511 & B4) << 23 | a4 >>> 9, C3[E4 + 8 | 0] = (1 & B4) << 31 | a4 >>> 1, g6 = 0, C3[E4 + 7 | 0] = g6 << 18 | (2080768 & Q5) >>> 14 | a4 << 7, g6 = 2097151 & yA2, Q5 = Ig(kA2, pA2, 136657, 0) + g6 | 0, A8 = f3, A8 = g6 >>> 0 > Q5 >>> 0 ? A8 + 1 | 0 : A8, yA2 = (2097151 & (g6 = B4)) << 11 | a4 >>> 21, g6 = A8 + (B4 = g6 >> 21) | 0, g6 = (Q5 = yA2 + Q5 | 0) >>> 0 < yA2 >>> 0 ? g6 + 1 | 0 : g6, C3[E4 + 12 | 0] = (4095 & g6) << 20 | Q5 >>> 12, B4 = Q5, C3[E4 + 11 | 0] = (15 & g6) << 28 | B4 >>> 4, Q5 = 0, C3[E4 + 10 | 0] = Q5 << 15 | (1966080 & a4) >>> 17 | B4 << 4, Q5 = 2097151 & aA2, a4 = Ig(kA2, pA2, -683901, -1) + Q5 | 0, A8 = f3, A8 = Q5 >>> 0 > a4 >>> 0 ? A8 + 1 | 0 : A8, Q5 = g6, g6 = A8 + (g6 >>= 21) | 0, g6 = (Q5 = (aA2 = a4) + (a4 = (2097151 & Q5) << 11 | B4 >>> 21) | 0) >>> 0 < a4 >>> 0 ? g6 + 1 | 0 : g6, C3[E4 + 14 | 0] = (127 & g6) << 25 | Q5 >>> 7, a4 = 0, C3[E4 + 13 | 0] = a4 << 12 | (1048576 & B4) >>> 20 | Q5 << 1, A8 = g6 >> 21, B4 = (g6 = (2097151 & g6) << 11 | Q5 >>> 21) >>> 0 > (a4 = g6 + (2097151 & hA2) | 0) >>> 0 ? A8 + 1 | 0 : A8, C3[E4 + 17 | 0] = (1023 & B4) << 22 | a4 >>> 10, C3[E4 + 16 | 0] = (3 & B4) << 30 | a4 >>> 2, g6 = 0, C3[E4 + 15 | 0] = g6 << 17 | (2064384 & Q5) >>> 15 | a4 << 6, A8 = B4 >> 21, A8 = (g6 = (2097151 & B4) << 11 | a4 >>> 21) >>> 0 > (B4 = g6 + (2097151 & DA2) | 0) >>> 0 ? A8 + 1 | 0 : A8, C3[E4 + 20 | 0] = (8191 & A8) << 19 | B4 >>> 13, C3[E4 + 19 | 0] = (31 & A8) << 27 | B4 >>> 5, Q5 = (g6 = 2097151 & cA2) + (cA2 = (2097151 & A8) << 11 | B4 >>> 21) | 0, g6 = A8 >> 21, g6 = Q5 >>> 0 < cA2 >>> 0 ? g6 + 1 | 0 : g6, cA2 = Q5, C3[E4 + 21 | 0] = Q5, DA2 = 0, C3[E4 + 18 | 0] = DA2 << 14 | (1835008 & a4) >>> 18 | B4 << 3, C3[E4 + 22 | 0] = (255 & g6) << 24 | Q5 >>> 8, B4 = g6 >> 21, B4 = (Q5 = (a4 = (2097151 & g6) << 11 | Q5 >>> 21) + (2097151 & EA2) | 0) >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4, C3[E4 + 25 | 0] = (2047 & B4) << 21 | Q5 >>> 11, C3[E4 + 24 | 0] = (7 & B4) << 29 | Q5 >>> 3, C3[E4 + 23 | 0] = 31 & ((65535 & g6) << 16 | cA2 >>> 16) | Q5 << 5, A8 = B4 >> 21, A8 = (g6 = (2097151 & B4) << 11 | Q5 >>> 21) >>> 0 > (B4 = g6 + (2097151 & _A2) | 0) >>> 0 ? A8 + 1 | 0 : A8, C3[E4 + 27 | 0] = (63 & A8) << 26 | B4 >>> 6, a4 = 0, C3[E4 + 26 | 0] = a4 << 13 | (1572864 & Q5) >>> 19 | B4 << 2, g6 = A8, A8 >>= 21, g6 = (Q5 = (_A2 = (2097151 & g6) << 11 | B4 >>> 21) + (a4 = 2097151 & fA2) | 0) >>> 0 < a4 >>> 0 ? A8 + 1 | 0 : A8, C3[E4 + 31 | 0] = (131071 & g6) << 15 | Q5 >>> 17, A8 = Q5, C3[E4 + 30 | 0] = (511 & g6) << 23 | A8 >>> 9, Q5 = 0, C3[E4 + 28 | 0] = Q5 << 18 | (2080768 & B4) >>> 14 | A8 << 7, C3[E4 + 29 | 0] = _A2 + fA2 >>> 1, XC(c4, 64), XC(_4, 64), I7 && (i4[I7 >> 2] = 64, i4[I7 + 4 >> 2] = 0), s3 = t4 + 560 | 0, 0;
                    }
                    function n4(A8, I7, g6) {
                      var B4, Q5, i5, E4, a4, _4, c4, t4, r4, e6, y4, s4, h4, D4, p4, w4, n5, k4, F4, S4, N4, G4, M4, K4, U4, b5, H4, Y4, J4, d5, m4, l4, u4, x4, v4, R4, L4, P7, q3, z2, j2, X2, O2 = 0, W2 = 0, V2 = 0, Z2 = 0, T2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, oA2 = 0, EA2 = 0, aA2 = 0, _A2 = 0, cA2 = 0, tA2 = 0, rA2 = 0, eA2 = 0, yA2 = 0, sA2 = 0, hA2 = 0, DA2 = 0, fA2 = 0, pA2 = 0, wA2 = 0, nA2 = 0, kA2 = 0, FA2 = 0, SA2 = 0, NA2 = 0, GA2 = 0, MA2 = 0, KA2 = 0, UA2 = 0, bA2 = 0, HA2 = 0, YA2 = 0, JA2 = 0, dA2 = 0, mA2 = 0, lA2 = 0, uA2 = 0, xA2 = 0, vA2 = 0, RA2 = 0, LA2 = 0, PA2 = 0, qA2 = 0;
                      Z2 = Ig(B4 = (W2 = o3[g6 + 2 | 0]) << 16 & 2031616 | o3[0 | g6] | o3[g6 + 1 | 0] << 8, 0, Q5 = (QA2 = o3[I7 + 23 | 0] | o3[I7 + 24 | 0] << 8 | o3[I7 + 25 | 0] << 16 | o3[I7 + 26 | 0] << 24) >>> 5 & 2097151, 0), V2 = f3, O2 = Ig(i5 = (W2 = o3[I7 + 23 | 0]) << 16 & 2031616 | o3[I7 + 21 | 0] | o3[I7 + 22 | 0] << 8, 0, E4 = (T2 = o3[g6 + 2 | 0] | o3[g6 + 3 | 0] << 8 | o3[g6 + 4 | 0] << 16 | o3[g6 + 5 | 0] << 24) >>> 5 & 2097151, 0), W2 = f3 + V2 | 0, W2 = O2 >>> 0 > (Z2 = O2 + Z2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = Ig(a4 = (o3[g6 + 7 | 0] | o3[g6 + 8 | 0] << 8 | o3[g6 + 9 | 0] << 16 | o3[g6 + 10 | 0] << 24) >>> 7 & 2097151, 0, _4 = (aA2 = o3[I7 + 15 | 0] | o3[I7 + 16 | 0] << 8 | o3[I7 + 17 | 0] << 16 | o3[I7 + 18 | 0] << 24) >>> 6 & 2097151, 0), O2 = f3 + W2 | 0, IA2 = Z2 = V2 + Z2 | 0, V2 = V2 >>> 0 > Z2 >>> 0 ? O2 + 1 | 0 : O2, O2 = (W2 = o3[I7 + 14 | 0]) >>> 24 | 0, $2 = W2 << 8 | (gA2 = o3[I7 + 10 | 0] | o3[I7 + 11 | 0] << 8 | o3[I7 + 12 | 0] << 16 | o3[I7 + 13 | 0] << 24) >>> 24, O2 = Ig(c4 = 2097151 & ((1 & (CA2 = (W2 = O2) | (O2 = (Z2 = o3[I7 + 15 | 0]) >>> 16 | 0))) << 31 | (W2 = (Z2 <<= 16) | $2) >>> 1), 0, t4 = (AA2 = o3[g6 + 10 | 0] | o3[g6 + 11 | 0] << 8 | o3[g6 + 12 | 0] << 16 | o3[g6 + 13 | 0] << 24) >>> 4 & 2097151, 0), V2 = f3 + V2 | 0, CA2 = W2 = O2 + IA2 | 0, Z2 = W2 >>> 0 < O2 >>> 0 ? V2 + 1 | 0 : V2, V2 = (O2 = o3[g6 + 6 | 0]) >>> 24 | 0, IA2 = O2 << 8 | T2 >>> 24, T2 = r4 = 2097151 & ((3 & (V2 |= O2 = (W2 = o3[g6 + 7 | 0]) >>> 16 | 0)) << 30 | (W2 = IA2 | W2 << 16) >>> 2), IA2 = 0, $2 = (W2 = o3[I7 + 19 | 0]) << 8 | aA2 >>> 24, V2 = O2 = W2 >>> 24 | 0, W2 = (O2 = o3[I7 + 20 | 0]) >>> 16 | 0, G4 = V2 = (W2 |= V2) >>> 3 | 0, O2 = Ig(T2, IA2, e6 = (7 & W2) << 29 | (O2 = O2 << 16 | $2) >>> 3, V2), W2 = f3 + Z2 | 0, W2 = O2 >>> 0 > ($2 = O2 + CA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = Ig(y4 = (T2 = o3[g6 + 15 | 0] | o3[g6 + 16 | 0] << 8 | o3[g6 + 17 | 0] << 16 | o3[g6 + 18 | 0] << 24) >>> 6 & 2097151, 0, s4 = (o3[I7 + 7 | 0] | o3[I7 + 8 | 0] << 8 | o3[I7 + 9 | 0] << 16 | o3[I7 + 10 | 0] << 24) >>> 7 & 2097151, 0), O2 = f3 + W2 | 0, IA2 = Z2 = V2 + $2 | 0, Z2 = V2 >>> 0 > Z2 >>> 0 ? O2 + 1 | 0 : O2, $2 = (W2 = o3[g6 + 14 | 0]) << 8 | AA2 >>> 24, W2 = O2 = W2 >>> 24 | 0, V2 = (O2 = o3[g6 + 15 | 0]) >>> 16 | 0, O2 = Ig(h4 = 2097151 & ((1 & (V2 |= W2)) << 31 | (W2 = (O2 <<= 16) | $2) >>> 1), 0, D4 = gA2 >>> 4 & 2097151, 0), W2 = f3 + Z2 | 0, AA2 = V2 = O2 + IA2 | 0, IA2 = O2 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, W2 = (O2 = o3[g6 + 19 | 0]) >>> 24 | 0, Z2 = O2 << 8 | T2 >>> 24, V2 = (O2 = o3[g6 + 20 | 0]) >>> 16 | 0, p4 = (7 & (V2 |= W2)) << 29 | (O2 = Z2 | O2 << 16) >>> 3, eA2 = W2 = V2 >>> 3 | 0, Z2 = W2, W2 = (O2 = o3[I7 + 6 | 0]) >>> 24 | 0, T2 = O2 << 8 | (CA2 = o3[I7 + 2 | 0] | o3[I7 + 3 | 0] << 8 | o3[I7 + 4 | 0] << 16 | o3[I7 + 5 | 0] << 24) >>> 24, V2 = W2, W2 = (O2 = o3[I7 + 7 | 0]) >>> 16 | 0, W2 = Ig(p4, Z2, w4 = 2097151 & ((3 & (W2 |= V2)) << 30 | (O2 = O2 << 16 | T2) >>> 2), 0), O2 = f3 + IA2 | 0, V2 = W2 >>> 0 > (Z2 = W2 + AA2 | 0) >>> 0 ? O2 + 1 | 0 : O2, W2 = Ig(n5 = (W2 = o3[g6 + 23 | 0]) << 16 & 2031616 | o3[g6 + 21 | 0] | o3[g6 + 22 | 0] << 8, 0, k4 = CA2 >>> 5 & 2097151, 0), O2 = f3 + V2 | 0, V2 = W2 >>> 0 > (Z2 = W2 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2, O2 = Ig(F4 = (W2 = o3[I7 + 2 | 0]) << 16 & 2031616 | o3[0 | I7] | o3[I7 + 1 | 0] << 8, 0, hA2 = (CA2 = o3[g6 + 23 | 0] | o3[g6 + 24 | 0] << 8 | o3[g6 + 25 | 0] << 16 | o3[g6 + 26 | 0] << 24) >>> 5 & 2097151, 0), W2 = f3 + V2 | 0, T2 = Z2 = O2 + Z2 | 0, IA2 = O2 >>> 0 > Z2 >>> 0 ? W2 + 1 | 0 : W2, O2 = Ig(i5, 0, B4, 0), W2 = f3, Z2 = (V2 = O2) + (O2 = Ig(e6, G4, E4, 0)) | 0, V2 = f3 + W2 | 0, V2 = O2 >>> 0 > Z2 >>> 0 ? V2 + 1 | 0 : V2, O2 = Ig(a4, 0, c4, 0), W2 = f3 + V2 | 0, W2 = O2 >>> 0 > (Z2 = O2 + Z2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = Ig(t4, 0, D4, 0), O2 = f3 + W2 | 0, O2 = V2 >>> 0 > (Z2 = V2 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2, W2 = Ig(_4, 0, r4, 0), O2 = f3 + O2 | 0, O2 = W2 >>> 0 > (V2 = W2 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2, Z2 = (W2 = V2) + (V2 = Ig(y4, 0, w4, 0)) | 0, W2 = f3 + O2 | 0, W2 = V2 >>> 0 > Z2 >>> 0 ? W2 + 1 | 0 : W2, O2 = Ig(h4, 0, s4, 0), V2 = f3 + W2 | 0, V2 = O2 >>> 0 > (Z2 = O2 + Z2 | 0) >>> 0 ? V2 + 1 | 0 : V2, Z2 = (O2 = Ig(p4, eA2, k4, 0)) + Z2 | 0, W2 = f3 + V2 | 0, V2 = Ig(n5, 0, F4, 0), O2 = f3 + (O2 >>> 0 > Z2 >>> 0 ? W2 + 1 | 0 : W2) | 0, Z2 = O2 = V2 >>> 0 > ($2 = V2 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2, yA2 = O2 = O2 - (($2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = (W2 = O2 >>> 21 | 0) + IA2 | 0, oA2 = V2 = (W2 = (O2 = (2097151 & O2) << 11 | (cA2 = $2 - -1048576 | 0) >>> 21) >>> 0 > (T2 = O2 + T2 | 0) >>> 0 ? W2 + 1 | 0 : W2) - ((T2 >>> 0 < 4293918720) - 1 | 0) | 0, iA2 = T2 - (O2 = -2097152 & (EA2 = T2 - -1048576 | 0)) | 0, BA2 = W2 - ((O2 >>> 0 > T2 >>> 0) + V2 | 0) | 0, IA2 = (W2 = o3[g6 + 27 | 0]) << 8 | CA2 >>> 24, V2 = O2 = W2 >>> 24 | 0, T2 = Ig(S4 = 2097151 & ((3 & (V2 |= W2 = (O2 = o3[g6 + 28 | 0]) >>> 16 | 0)) << 30 | (W2 = (O2 <<= 16) | IA2) >>> 2), 0, DA2 = (o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24) >>> 7 | 0, 0), IA2 = f3, W2 = (O2 = o3[I7 + 27 | 0]) >>> 24 | 0, I7 = Ig(N4 = 2097151 & ((3 & (W2 |= V2 = (I7 = o3[I7 + 28 | 0]) >>> 16 | 0)) << 30 | (O2 = O2 << 8 | QA2 >>> 24 | I7 << 16) >>> 2), 0, fA2 = (o3[g6 + 28 | 0] | o3[g6 + 29 | 0] << 8 | o3[g6 + 30 | 0] << 16 | o3[g6 + 31 | 0] << 24) >>> 7 | 0, 0), O2 = f3 + IA2 | 0, O2 = I7 >>> 0 > (g6 = I7 + T2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = g6, I7 = Ig(Q5, 0, fA2, 0), g6 = f3, IA2 = (W2 = I7) + (I7 = Ig(hA2, 0, DA2, 0)) | 0, W2 = f3 + g6 | 0, W2 = I7 >>> 0 > IA2 >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(S4, 0, N4, 0), W2 = f3 + W2 | 0, IA2 = W2 = I7 >>> 0 > (CA2 = I7 + IA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, AA2 = I7 = W2 - ((CA2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = I7 >>> 21 | 0, T2 = (I7 = (2097151 & I7) << 11 | (g6 = CA2 - -1048576 | 0) >>> 21) + V2 | 0, V2 = W2 + O2 | 0, aA2 = W2 = (V2 = I7 >>> 0 > T2 >>> 0 ? V2 + 1 | 0 : V2) - ((T2 >>> 0 < 4293918720) - 1 | 0) | 0, I7 = T2 - (O2 = -2097152 & (gA2 = T2 - -1048576 | 0)) | 0, K4 = O2 = V2 - ((131071 & W2) + (O2 >>> 0 > T2 >>> 0) | 0) | 0, U4 = I7, I7 = Ig(I7, O2, 666643, 0), O2 = f3 + BA2 | 0, nA2 = W2 = I7 + iA2 | 0, T2 = I7 >>> 0 > W2 >>> 0 ? O2 + 1 | 0 : O2, iA2 = CA2 - (I7 = -2097152 & g6) | 0, tA2 = IA2 - ((131071 & AA2) + (I7 >>> 0 > CA2 >>> 0) | 0) | 0, I7 = Ig(n5, 0, DA2, 0), g6 = f3, W2 = (O2 = I7) + (I7 = Ig(hA2, 0, N4, 0)) | 0, O2 = f3 + g6 | 0, O2 = I7 >>> 0 > W2 >>> 0 ? O2 + 1 | 0 : O2, g6 = (I7 = Ig(i5, 0, fA2, 0)) + W2 | 0, W2 = f3 + O2 | 0, W2 = I7 >>> 0 > g6 >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(Q5, 0, S4, 0), O2 = f3 + W2 | 0, AA2 = g6 = I7 + g6 | 0, I7 = I7 >>> 0 > g6 >>> 0 ? O2 + 1 | 0 : O2, g6 = Ig(Q5, 0, hA2, 0), O2 = f3, V2 = (W2 = g6) + (g6 = Ig(p4, eA2, DA2, 0)) | 0, W2 = f3 + O2 | 0, W2 = g6 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, O2 = (g6 = Ig(n5, 0, N4, 0)) + V2 | 0, V2 = f3 + W2 | 0, V2 = g6 >>> 0 > O2 >>> 0 ? V2 + 1 | 0 : V2, W2 = (g6 = Ig(e6, G4, fA2, 0)) + O2 | 0, O2 = f3 + V2 | 0, O2 = g6 >>> 0 > W2 >>> 0 ? O2 + 1 | 0 : O2, BA2 = (g6 = Ig(i5, 0, S4, 0)) + W2 | 0, W2 = f3 + O2 | 0, CA2 = W2 = g6 >>> 0 > BA2 >>> 0 ? W2 + 1 | 0 : W2, _A2 = g6 = W2 - ((BA2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = I7 + (O2 = g6 >>> 21 | 0) | 0, g6 = W2 = (g6 = (2097151 & g6) << 11 | (IA2 = BA2 - -1048576 | 0) >>> 21) >>> 0 > (AA2 = g6 + AA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, QA2 = W2 = W2 - ((AA2 >>> 0 < 4293918720) - 1 | 0) | 0, O2 = iA2, iA2 = (2097151 & W2) << 11 | (I7 = AA2 - -1048576 | 0) >>> 21, W2 = (W2 >>> 21 | 0) + tA2 | 0, b5 = W2 = (V2 = O2 + iA2 | 0) >>> 0 < iA2 >>> 0 ? W2 + 1 | 0 : W2, H4 = I7 = AA2 - (O2 = -2097152 & I7) | 0, Y4 = AA2 = g6 - ((O2 >>> 0 > AA2 >>> 0) + QA2 | 0) | 0, J4 = V2, g6 = Ig(V2, W2, 470296, 0), O2 = f3 + T2 | 0, O2 = g6 >>> 0 > (W2 = g6 + nA2 | 0) >>> 0 ? O2 + 1 | 0 : O2, I7 = Ig(I7, AA2, 654183, 0), V2 = f3 + O2 | 0, tA2 = g6 = I7 + W2 | 0, T2 = I7 >>> 0 > g6 >>> 0 ? V2 + 1 | 0 : V2, QA2 = BA2 - (I7 = -2097152 & IA2) | 0, BA2 = CA2 - ((I7 >>> 0 > BA2 >>> 0) + _A2 | 0) | 0, I7 = Ig(p4, eA2, N4, 0), g6 = f3, W2 = (O2 = I7) + (I7 = Ig(y4, 0, DA2, 0)) | 0, O2 = f3 + g6 | 0, O2 = I7 >>> 0 > W2 >>> 0 ? O2 + 1 | 0 : O2, g6 = (I7 = Ig(i5, 0, hA2, 0)) + W2 | 0, W2 = f3 + O2 | 0, W2 = I7 >>> 0 > g6 >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(Q5, 0, n5, 0), V2 = f3 + W2 | 0, V2 = I7 >>> 0 > (g6 = I7 + g6 | 0) >>> 0 ? V2 + 1 | 0 : V2, I7 = Ig(_4, 0, fA2, 0), O2 = f3 + V2 | 0, O2 = I7 >>> 0 > (g6 = I7 + g6 | 0) >>> 0 ? O2 + 1 | 0 : O2, I7 = Ig(e6, G4, S4, 0), W2 = f3 + O2 | 0, CA2 = g6 = I7 + g6 | 0, IA2 = I7 >>> 0 > g6 >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(h4, 0, DA2, 0), g6 = f3, W2 = (O2 = I7) + (I7 = Ig(y4, 0, N4, 0)) | 0, O2 = f3 + g6 | 0, O2 = I7 >>> 0 > W2 >>> 0 ? O2 + 1 | 0 : O2, g6 = (I7 = Ig(Q5, 0, p4, eA2)) + W2 | 0, W2 = f3 + O2 | 0, W2 = I7 >>> 0 > g6 >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(e6, G4, hA2, 0), V2 = f3 + W2 | 0, V2 = I7 >>> 0 > (g6 = I7 + g6 | 0) >>> 0 ? V2 + 1 | 0 : V2, I7 = Ig(i5, 0, n5, 0), O2 = f3 + V2 | 0, O2 = I7 >>> 0 > (g6 = I7 + g6 | 0) >>> 0 ? O2 + 1 | 0 : O2, I7 = Ig(c4, 0, fA2, 0), W2 = f3 + O2 | 0, W2 = I7 >>> 0 > (g6 = I7 + g6 | 0) >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(_4, 0, S4, 0), O2 = f3 + W2 | 0, I7 = O2 = I7 >>> 0 > (g6 = I7 + g6 | 0) >>> 0 ? O2 + 1 | 0 : O2, sA2 = O2 = O2 - ((g6 >>> 0 < 4293918720) - 1 | 0) | 0, V2 = (W2 = O2 >>> 21 | 0) + IA2 | 0, iA2 = V2 = (O2 = (2097151 & O2) << 11 | (_A2 = g6 - -1048576 | 0) >>> 21) >>> 0 > (pA2 = O2 + CA2 | 0) >>> 0 ? V2 + 1 | 0 : V2, NA2 = O2 = V2 - ((pA2 >>> 0 < 4293918720) - 1 | 0) | 0, IA2 = (2097151 & O2) << 11 | (AA2 = pA2 - -1048576 | 0) >>> 21, O2 = (O2 >>> 21 | 0) + BA2 | 0, d5 = O2 = (V2 = IA2 + QA2 | 0) >>> 0 < IA2 >>> 0 ? O2 + 1 | 0 : O2, m4 = V2, O2 = Ig(V2, O2, -997805, -1), W2 = f3 + T2 | 0, BA2 = V2 = O2 + tA2 | 0, T2 = O2 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, IA2 = $2, $2 = Z2, O2 = Ig(B4, 0, e6, G4), W2 = f3, Z2 = (V2 = O2) + (O2 = Ig(_4, 0, E4, 0)) | 0, V2 = f3 + W2 | 0, V2 = O2 >>> 0 > Z2 >>> 0 ? V2 + 1 | 0 : V2, W2 = Ig(a4, 0, D4, 0), O2 = f3 + V2 | 0, O2 = W2 >>> 0 > (Z2 = W2 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = Ig(t4, 0, s4, 0), W2 = f3 + O2 | 0, W2 = V2 >>> 0 > (Z2 = V2 + Z2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = Ig(c4, 0, r4, 0), O2 = f3 + W2 | 0, O2 = V2 >>> 0 > (Z2 = V2 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = Ig(y4, 0, k4, 0), W2 = f3 + O2 | 0, W2 = V2 >>> 0 > (Z2 = V2 + Z2 | 0) >>> 0 ? W2 + 1 | 0 : W2, O2 = Ig(h4, 0, w4, 0), V2 = f3 + W2 | 0, V2 = O2 >>> 0 > (Z2 = O2 + Z2 | 0) >>> 0 ? V2 + 1 | 0 : V2, W2 = Ig(p4, eA2, F4, 0), O2 = f3 + V2 | 0, CA2 = Z2 = W2 + Z2 | 0, Z2 = W2 >>> 0 > Z2 >>> 0 ? O2 + 1 | 0 : O2, O2 = Ig(B4, 0, _4, 0), W2 = f3, V2 = O2, O2 = Ig(E4, 0, c4, 0), W2 = f3 + W2 | 0, W2 = O2 >>> 0 > (V2 = V2 + O2 | 0) >>> 0 ? W2 + 1 | 0 : W2, QA2 = (O2 = V2) + (V2 = Ig(a4, 0, s4, 0)) | 0, O2 = f3 + W2 | 0, O2 = V2 >>> 0 > QA2 >>> 0 ? O2 + 1 | 0 : O2, V2 = Ig(t4, 0, w4, 0), W2 = f3 + O2 | 0, W2 = V2 >>> 0 > (QA2 = V2 + QA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, O2 = Ig(r4, 0, D4, 0), V2 = f3 + W2 | 0, V2 = O2 >>> 0 > (QA2 = O2 + QA2 | 0) >>> 0 ? V2 + 1 | 0 : V2, QA2 = (W2 = Ig(y4, 0, F4, 0)) + QA2 | 0, O2 = f3 + V2 | 0, V2 = Ig(h4, 0, k4, 0), W2 = f3 + (W2 >>> 0 > QA2 >>> 0 ? O2 + 1 | 0 : O2) | 0, KA2 = W2 = V2 >>> 0 > (MA2 = V2 + QA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, xA2 = W2 = W2 - ((MA2 >>> 0 < 4293918720) - 1 | 0) | 0, V2 = (2097151 & W2) << 11 | (GA2 = MA2 - -1048576 | 0) >>> 21, W2 = (W2 >>> 21 | 0) + Z2 | 0, rA2 = W2 = V2 >>> 0 > (UA2 = V2 + CA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, vA2 = W2 = W2 - ((UA2 >>> 0 < 4293918720) - 1 | 0) | 0, V2 = (2097151 & W2) << 11 | (nA2 = UA2 - -1048576 | 0) >>> 21, W2 = (W2 >>> 21 | 0) + $2 | 0, W2 = V2 >>> 0 > (IA2 = V2 + IA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, O2 = Ig(J4, b5, 666643, 0), W2 = f3 + (W2 - (((V2 = -2097152 & cA2) >>> 0 > IA2 >>> 0) + yA2 | 0) | 0) | 0, W2 = O2 >>> 0 > (Z2 = O2 + (IA2 - V2 | 0) | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = Ig(H4, Y4, 470296, 0), O2 = f3 + W2 | 0, O2 = V2 >>> 0 > (Z2 = V2 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = Ig(m4, d5, 654183, 0), W2 = f3 + O2 | 0, tA2 = W2 = V2 >>> 0 > (kA2 = V2 + Z2 | 0) >>> 0 ? W2 + 1 | 0 : W2, mA2 = W2 = W2 - ((kA2 >>> 0 < 4293918720) - 1 | 0) | 0, O2 = (O2 = W2 >> 21) + T2 | 0, BA2 = O2 = (W2 = (2097151 & W2) << 11 | (QA2 = kA2 - -1048576 | 0) >>> 21) >>> 0 > (yA2 = W2 + BA2 | 0) >>> 0 ? O2 + 1 | 0 : O2, bA2 = W2 = O2 - ((yA2 >>> 0 < 4293918720) - 1 | 0) | 0, JA2 = (2097151 & W2) << 11 | (cA2 = yA2 - -1048576 | 0) >>> 21, CA2 = W2 >> 21, O2 = Ig(B4, 0, N4, 0), W2 = f3, V2 = O2, O2 = Ig(Q5, 0, E4, 0), W2 = f3 + W2 | 0, W2 = O2 >>> 0 > (V2 = V2 + O2 | 0) >>> 0 ? W2 + 1 | 0 : W2, Z2 = (O2 = Ig(a4, 0, e6, G4)) + V2 | 0, V2 = f3 + W2 | 0, V2 = O2 >>> 0 > Z2 >>> 0 ? V2 + 1 | 0 : V2, W2 = Ig(_4, 0, t4, 0), O2 = f3 + V2 | 0, O2 = W2 >>> 0 > (Z2 = W2 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = Ig(i5, 0, r4, 0), W2 = f3 + O2 | 0, W2 = V2 >>> 0 > (Z2 = V2 + Z2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = Ig(y4, 0, D4, 0), O2 = f3 + W2 | 0, O2 = V2 >>> 0 > (Z2 = V2 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = Ig(h4, 0, c4, 0), W2 = f3 + O2 | 0, W2 = V2 >>> 0 > (Z2 = V2 + Z2 | 0) >>> 0 ? W2 + 1 | 0 : W2, O2 = Ig(s4, 0, p4, eA2), V2 = f3 + W2 | 0, V2 = O2 >>> 0 > (Z2 = O2 + Z2 | 0) >>> 0 ? V2 + 1 | 0 : V2, W2 = Ig(k4, 0, hA2, 0), O2 = f3 + V2 | 0, O2 = W2 >>> 0 > (Z2 = W2 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = Ig(w4, 0, n5, 0), W2 = f3 + O2 | 0, W2 = V2 >>> 0 > (Z2 = V2 + Z2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = (O2 = Z2) + (Z2 = Ig(S4, 0, F4, 0)) | 0, O2 = f3 + W2 | 0, T2 = V2, IA2 = V2 >>> 0 < Z2 >>> 0 ? O2 + 1 | 0 : O2, FA2 = Ig(DA2, 0, fA2, 0), $2 = V2 = (SA2 = f3) - ((FA2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = FA2 - (O2 = -2097152 & (Z2 = FA2 - -1048576 | 0)) | 0, O2 = (aA2 >>> 21 | 0) + (O2 = SA2 - ((524287 & V2) + (O2 >>> 0 > FA2 >>> 0) | 0) | 0) | 0, l4 = O2 = (V2 = (gA2 = (2097151 & aA2) << 11 | gA2 >>> 21) + W2 | 0) >>> 0 < gA2 >>> 0 ? O2 + 1 | 0 : O2, u4 = V2, W2 = (2097151 & oA2) << 11 | EA2 >>> 21, gA2 = Ig(V2, O2, 666643, 0) + W2 | 0, O2 = f3 + (oA2 >>> 21 | 0) | 0, O2 = W2 >>> 0 > gA2 >>> 0 ? O2 + 1 | 0 : O2, V2 = Ig(U4, K4, 470296, 0), W2 = f3 + O2 | 0, W2 = (V2 >>> 0 > (gA2 = V2 + gA2 | 0) >>> 0 ? W2 + 1 | 0 : W2) + IA2 | 0, W2 = (O2 = T2 + gA2 | 0) >>> 0 < gA2 >>> 0 ? W2 + 1 | 0 : W2, gA2 = (V2 = Ig(J4, b5, 654183, 0)) + O2 | 0, O2 = f3 + W2 | 0, dA2 = T2 - -1048576 | 0, FA2 = IA2 = IA2 - ((T2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = Ig(H4, Y4, -997805, -1), V2 = f3 + (V2 >>> 0 > gA2 >>> 0 ? O2 + 1 | 0 : O2) | 0, V2 = W2 >>> 0 > (T2 = W2 + gA2 | 0) >>> 0 ? V2 + 1 | 0 : V2, EA2 = (O2 = Ig(m4, d5, 136657, 0)) + (T2 - (W2 = -2097152 & dA2) | 0) | 0, W2 = f3 + (V2 - ((W2 >>> 0 > T2 >>> 0) + IA2 | 0) | 0) | 0, V2 = (aA2 = O2 >>> 0 > EA2 >>> 0 ? W2 + 1 | 0 : W2) + CA2 | 0, HA2 = O2 = EA2 + JA2 | 0, gA2 = V2 = O2 >>> 0 < EA2 >>> 0 ? V2 + 1 | 0 : V2, SA2 = pA2 - (O2 = -2097152 & AA2) | 0, pA2 = iA2 - ((O2 >>> 0 > pA2 >>> 0) + NA2 | 0) | 0, x4 = V2 = $2 >>> 21 | 0, W2 = (O2 = g6) + (g6 = Ig(M4 = (2097151 & $2) << 11 | Z2 >>> 21, V2, -683901, -1)) | 0, O2 = f3 + I7 | 0, iA2 = W2 - (I7 = -2097152 & _A2) | 0, oA2 = (g6 >>> 0 > W2 >>> 0 ? O2 + 1 | 0 : O2) - ((I7 >>> 0 > W2 >>> 0) + sA2 | 0) | 0, I7 = Ig(Q5, 0, y4, 0), g6 = f3, O2 = I7, I7 = Ig(t4, 0, DA2, 0), W2 = f3 + g6 | 0, W2 = I7 >>> 0 > (O2 = O2 + I7 | 0) >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(h4, 0, N4, 0), V2 = f3 + W2 | 0, V2 = I7 >>> 0 > (g6 = I7 + O2 | 0) >>> 0 ? V2 + 1 | 0 : V2, I7 = Ig(i5, 0, p4, eA2), O2 = f3 + V2 | 0, O2 = I7 >>> 0 > (g6 = I7 + g6 | 0) >>> 0 ? O2 + 1 | 0 : O2, I7 = Ig(_4, 0, hA2, 0), O2 = f3 + O2 | 0, O2 = I7 >>> 0 > (g6 = I7 + g6 | 0) >>> 0 ? O2 + 1 | 0 : O2, I7 = Ig(e6, G4, n5, 0), W2 = f3 + O2 | 0, W2 = I7 >>> 0 > (g6 = I7 + g6 | 0) >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(D4, 0, fA2, 0), W2 = f3 + W2 | 0, W2 = I7 >>> 0 > (g6 = I7 + g6 | 0) >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(c4, 0, S4, 0), V2 = f3 + W2 | 0, Z2 = g6 = I7 + g6 | 0, I7 = I7 >>> 0 > g6 >>> 0 ? V2 + 1 | 0 : V2, g6 = Ig(t4, 0, N4, 0), O2 = f3, W2 = g6, g6 = Ig(a4, 0, DA2, 0), O2 = f3 + O2 | 0, O2 = g6 >>> 0 > (W2 = W2 + g6 | 0) >>> 0 ? O2 + 1 | 0 : O2, g6 = Ig(i5, 0, y4, 0), O2 = f3 + O2 | 0, O2 = g6 >>> 0 > (W2 = g6 + W2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = (g6 = Ig(Q5, 0, h4, 0)) + W2 | 0, W2 = f3 + O2 | 0, W2 = g6 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, g6 = Ig(e6, G4, p4, eA2), W2 = f3 + W2 | 0, W2 = g6 >>> 0 > (O2 = g6 + V2 | 0) >>> 0 ? W2 + 1 | 0 : W2, g6 = Ig(c4, 0, hA2, 0), V2 = f3 + W2 | 0, V2 = g6 >>> 0 > (O2 = g6 + O2 | 0) >>> 0 ? V2 + 1 | 0 : V2, W2 = (g6 = Ig(_4, 0, n5, 0)) + O2 | 0, O2 = f3 + V2 | 0, O2 = g6 >>> 0 > W2 >>> 0 ? O2 + 1 | 0 : O2, g6 = Ig(s4, 0, fA2, 0), O2 = f3 + O2 | 0, O2 = g6 >>> 0 > (W2 = g6 + W2 | 0) >>> 0 ? O2 + 1 | 0 : O2, AA2 = (g6 = Ig(D4, 0, S4, 0)) + W2 | 0, W2 = f3 + O2 | 0, CA2 = W2 = g6 >>> 0 > AA2 >>> 0 ? W2 + 1 | 0 : W2, YA2 = g6 = W2 - ((AA2 >>> 0 < 4293918720) - 1 | 0) | 0, V2 = I7 + (O2 = g6 >>> 21 | 0) | 0, IA2 = V2 = (g6 = (2097151 & g6) << 11 | (T2 = AA2 - -1048576 | 0) >>> 21) >>> 0 > (_A2 = g6 + Z2 | 0) >>> 0 ? V2 + 1 | 0 : V2, sA2 = I7 = V2 - ((_A2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = (O2 = I7 >>> 21 | 0) + oA2 | 0, Z2 = W2 = (I7 = (2097151 & I7) << 11 | ($2 = _A2 - -1048576 | 0) >>> 21) >>> 0 > (iA2 = I7 + iA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, oA2 = g6 = W2 - ((iA2 >>> 0 < 4293918720) - 1 | 0) | 0, V2 = (O2 = g6 >> 21) + pA2 | 0, v4 = V2 = (g6 = (W2 = (2097151 & g6) << 11 | (I7 = iA2 - -1048576 | 0) >>> 21) + SA2 | 0) >>> 0 < W2 >>> 0 ? V2 + 1 | 0 : V2, NA2 = EA2 - -1048576 | 0, JA2 = W2 = aA2 - ((EA2 >>> 0 < 4293918720) - 1 | 0) | 0, lA2 = g6, g6 = Ig(g6, V2, -683901, -1), O2 = f3 + gA2 | 0, SA2 = O2 = (W2 = (O2 = g6 >>> 0 > (V2 = g6 + HA2 | 0) >>> 0 ? O2 + 1 | 0 : O2) - (((g6 = -2097152 & NA2) >>> 0 > V2 >>> 0) + W2 | 0) | 0) - (((gA2 = V2 - g6 | 0) >>> 0 < 4293918720) - 1 | 0) | 0, P7 = gA2 - (g6 = -2097152 & (pA2 = gA2 - -1048576 | 0)) | 0, RA2 = W2 - ((g6 >>> 0 > gA2 >>> 0) + O2 | 0) | 0, g6 = Ig(lA2, v4, 136657, 0), W2 = f3 + (BA2 - (((O2 = -2097152 & cA2) >>> 0 > yA2 >>> 0) + bA2 | 0) | 0) | 0, uA2 = V2 = g6 + (yA2 - O2 | 0) | 0, g6 = g6 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, wA2 = iA2 - (I7 &= -2097152) | 0, cA2 = Z2 - ((I7 >>> 0 > iA2 >>> 0) + oA2 | 0) | 0, I7 = Ig(u4, l4, -683901, -1), O2 = f3, W2 = I7, I7 = Ig(M4, x4, 136657, 0), O2 = f3 + O2 | 0, W2 = IA2 + (I7 >>> 0 > (V2 = W2 + I7 | 0) >>> 0 ? O2 + 1 | 0 : O2) | 0, aA2 = (O2 = V2 + _A2 | 0) - (I7 = -2097152 & $2) | 0, gA2 = (W2 = O2 >>> 0 < _A2 >>> 0 ? W2 + 1 | 0 : W2) - ((I7 >>> 0 > O2 >>> 0) + sA2 | 0) | 0, I7 = Ig(M4, x4, -997805, -1), O2 = f3 + CA2 | 0, O2 = I7 >>> 0 > (W2 = I7 + AA2 | 0) >>> 0 ? O2 + 1 | 0 : O2, I7 = Ig(u4, l4, 136657, 0), O2 = f3 + O2 | 0, O2 = I7 >>> 0 > (W2 = I7 + W2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = (I7 = Ig(U4, K4, -683901, -1)) + W2 | 0, W2 = f3 + O2 | 0, W2 = I7 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, IA2 = V2 - (I7 = -2097152 & T2) | 0, $2 = W2 - ((I7 >>> 0 > V2 >>> 0) + YA2 | 0) | 0, I7 = Ig(Q5, 0, t4, 0), O2 = f3, V2 = (W2 = I7) + (I7 = Ig(a4, 0, N4, 0)) | 0, W2 = f3 + O2 | 0, W2 = I7 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(r4, 0, DA2, 0), O2 = f3 + W2 | 0, O2 = I7 >>> 0 > (V2 = I7 + V2 | 0) >>> 0 ? O2 + 1 | 0 : O2, I7 = Ig(y4, 0, e6, G4), W2 = f3 + O2 | 0, W2 = I7 >>> 0 > (V2 = I7 + V2 | 0) >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(i5, 0, h4, 0), O2 = f3 + W2 | 0, O2 = I7 >>> 0 > (V2 = I7 + V2 | 0) >>> 0 ? O2 + 1 | 0 : O2, W2 = (I7 = Ig(_4, 0, p4, eA2)) + V2 | 0, V2 = f3 + O2 | 0, V2 = I7 >>> 0 > W2 >>> 0 ? V2 + 1 | 0 : V2, O2 = (I7 = Ig(D4, 0, hA2, 0)) + W2 | 0, W2 = f3 + V2 | 0, W2 = I7 >>> 0 > O2 >>> 0 ? W2 + 1 | 0 : W2, V2 = (I7 = Ig(c4, 0, n5, 0)) + O2 | 0, O2 = f3 + W2 | 0, O2 = I7 >>> 0 > V2 >>> 0 ? O2 + 1 | 0 : O2, I7 = Ig(w4, 0, fA2, 0), W2 = f3 + O2 | 0, W2 = I7 >>> 0 > (V2 = I7 + V2 | 0) >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(s4, 0, S4, 0), O2 = f3 + W2 | 0, Z2 = V2 = I7 + V2 | 0, I7 = I7 >>> 0 > V2 >>> 0 ? O2 + 1 | 0 : O2, O2 = Ig(Q5, 0, a4, 0), W2 = f3, T2 = (V2 = O2) + (O2 = Ig(E4, 0, DA2, 0)) | 0, V2 = f3 + W2 | 0, V2 = O2 >>> 0 > T2 >>> 0 ? V2 + 1 | 0 : V2, O2 = Ig(i5, 0, t4, 0), W2 = f3 + V2 | 0, W2 = O2 >>> 0 > (T2 = O2 + T2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = Ig(r4, 0, N4, 0), O2 = f3 + W2 | 0, O2 = V2 >>> 0 > (T2 = V2 + T2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = Ig(_4, 0, y4, 0), W2 = f3 + O2 | 0, W2 = V2 >>> 0 > (T2 = V2 + T2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = Ig(e6, G4, h4, 0), O2 = f3 + W2 | 0, O2 = V2 >>> 0 > (T2 = V2 + T2 | 0) >>> 0 ? O2 + 1 | 0 : O2, W2 = Ig(c4, 0, p4, eA2), V2 = f3 + O2 | 0, V2 = W2 >>> 0 > (T2 = W2 + T2 | 0) >>> 0 ? V2 + 1 | 0 : V2, O2 = Ig(s4, 0, hA2, 0), W2 = f3 + V2 | 0, W2 = O2 >>> 0 > (T2 = O2 + T2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = Ig(D4, 0, n5, 0), O2 = f3 + W2 | 0, O2 = V2 >>> 0 > (T2 = V2 + T2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = Ig(k4, 0, fA2, 0), W2 = f3 + O2 | 0, W2 = V2 >>> 0 > (T2 = V2 + T2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = Ig(w4, 0, S4, 0), O2 = f3 + W2 | 0, yA2 = O2 = V2 >>> 0 > (bA2 = V2 + T2 | 0) >>> 0 ? O2 + 1 | 0 : O2, q3 = O2 = O2 - ((bA2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = I7 + (W2 = O2 >>> 21 | 0) | 0, EA2 = W2 = (O2 = (2097151 & O2) << 11 | (oA2 = bA2 - -1048576 | 0) >>> 21) >>> 0 > (HA2 = O2 + Z2 | 0) >>> 0 ? W2 + 1 | 0 : W2, z2 = I7 = W2 - ((HA2 >>> 0 < 4293918720) - 1 | 0) | 0, O2 = (W2 = I7 >>> 21 | 0) + $2 | 0, iA2 = O2 = (I7 = (2097151 & I7) << 11 | (_A2 = HA2 - -1048576 | 0) >>> 21) >>> 0 > (YA2 = I7 + IA2 | 0) >>> 0 ? O2 + 1 | 0 : O2, j2 = I7 = O2 - ((YA2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = (W2 = I7 >> 21) + gA2 | 0, CA2 = W2 = (I7 = (2097151 & I7) << 11 | (BA2 = YA2 - -1048576 | 0) >>> 21) >>> 0 > (sA2 = I7 + aA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, LA2 = I7 = W2 - ((sA2 >>> 0 < 4293918720) - 1 | 0) | 0, O2 = (W2 = I7 >> 21) + cA2 | 0, R4 = O2 = (I7 = (V2 = (2097151 & I7) << 11 | (Z2 = sA2 - -1048576 | 0) >>> 21) + wA2 | 0) >>> 0 < V2 >>> 0 ? O2 + 1 | 0 : O2, wA2 = I7, I7 = Ig(I7, O2, -683901, -1), V2 = f3 + g6 | 0, PA2 = O2 = I7 + uA2 | 0, T2 = I7 >>> 0 > O2 >>> 0 ? V2 + 1 | 0 : V2, qA2 = kA2 - (I7 = -2097152 & QA2) | 0, mA2 = tA2 - ((I7 >>> 0 > kA2 >>> 0) + mA2 | 0) | 0, I7 = Ig(H4, Y4, 666643, 0), O2 = f3 + (rA2 - (((g6 = -2097152 & nA2) >>> 0 > UA2 >>> 0) + vA2 | 0) | 0) | 0, O2 = I7 >>> 0 > (W2 = I7 + (UA2 - g6 | 0) | 0) >>> 0 ? O2 + 1 | 0 : O2, g6 = (I7 = Ig(m4, d5, 470296, 0)) + W2 | 0, W2 = f3 + O2 | 0, nA2 = g6, g6 = I7 >>> 0 > g6 >>> 0 ? W2 + 1 | 0 : W2, AA2 = MA2 - (I7 = -2097152 & GA2) | 0, IA2 = KA2 - ((I7 >>> 0 > MA2 >>> 0) + xA2 | 0) | 0, I7 = Ig(B4, 0, c4, 0), O2 = f3, W2 = I7, I7 = Ig(E4, 0, D4, 0), V2 = f3 + O2 | 0, V2 = I7 >>> 0 > (W2 = W2 + I7 | 0) >>> 0 ? V2 + 1 | 0 : V2, I7 = Ig(a4, 0, w4, 0), O2 = f3 + V2 | 0, O2 = I7 >>> 0 > (W2 = I7 + W2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = (I7 = Ig(t4, 0, k4, 0)) + W2 | 0, W2 = f3 + O2 | 0, W2 = I7 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(r4, 0, s4, 0), O2 = f3 + W2 | 0, O2 = I7 >>> 0 > (V2 = I7 + V2 | 0) >>> 0 ? O2 + 1 | 0 : O2, I7 = Ig(h4, 0, F4, 0), W2 = f3 + O2 | 0, $2 = V2 = I7 + V2 | 0, I7 = I7 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, O2 = Ig(B4, 0, D4, 0), W2 = f3, gA2 = (V2 = O2) + (O2 = Ig(E4, 0, s4, 0)) | 0, V2 = f3 + W2 | 0, V2 = O2 >>> 0 > gA2 >>> 0 ? V2 + 1 | 0 : V2, W2 = Ig(a4, 0, k4, 0), O2 = f3 + V2 | 0, O2 = W2 >>> 0 > (gA2 = W2 + gA2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = Ig(t4, 0, F4, 0), W2 = f3 + O2 | 0, W2 = V2 >>> 0 > (gA2 = V2 + gA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = Ig(r4, 0, w4, 0), O2 = f3 + W2 | 0, tA2 = O2 = V2 >>> 0 > (kA2 = V2 + gA2 | 0) >>> 0 ? O2 + 1 | 0 : O2, X2 = O2 = O2 - ((kA2 >>> 0 < 4293918720) - 1 | 0) | 0, V2 = I7 + (W2 = O2 >>> 21 | 0) | 0, cA2 = V2 = (O2 = (2097151 & O2) << 11 | (QA2 = kA2 - -1048576 | 0) >>> 21) >>> 0 > (KA2 = O2 + $2 | 0) >>> 0 ? V2 + 1 | 0 : V2, xA2 = I7 = V2 - ((KA2 >>> 0 < 4293918720) - 1 | 0) | 0, O2 = (W2 = I7 >>> 21 | 0) + IA2 | 0, O2 = (I7 = (2097151 & I7) << 11 | (aA2 = KA2 - -1048576 | 0) >>> 21) >>> 0 > (V2 = I7 + AA2 | 0) >>> 0 ? O2 + 1 | 0 : O2, I7 = Ig(m4, d5, 666643, 0), W2 = f3 + O2 | 0, gA2 = W2 = I7 >>> 0 > (GA2 = I7 + V2 | 0) >>> 0 ? W2 + 1 | 0 : W2, vA2 = I7 = W2 - ((GA2 >>> 0 < 4293918720) - 1 | 0) | 0, O2 = g6 + (O2 = I7 >> 21) | 0, IA2 = O2 = (I7 = (2097151 & I7) << 11 | (AA2 = GA2 - -1048576 | 0) >>> 21) >>> 0 > (rA2 = I7 + nA2 | 0) >>> 0 ? O2 + 1 | 0 : O2, uA2 = I7 = O2 - ((rA2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = (O2 = I7 >> 21) + mA2 | 0, W2 = (I7 = (2097151 & I7) << 11 | ($2 = rA2 - -1048576 | 0) >>> 21) >>> 0 > (g6 = I7 + qA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(lA2, v4, -997805, -1), V2 = f3 + W2 | 0, V2 = I7 >>> 0 > (O2 = I7 + g6 | 0) >>> 0 ? V2 + 1 | 0 : V2, UA2 = I7 = sA2 - (g6 = -2097152 & Z2) | 0, L4 = W2 = CA2 - ((g6 >>> 0 > sA2 >>> 0) + LA2 | 0) | 0, Z2 = (g6 = Ig(wA2, R4, 136657, 0)) + O2 | 0, O2 = f3 + V2 | 0, I7 = Ig(I7, W2, -683901, -1), O2 = f3 + (g6 >>> 0 > Z2 >>> 0 ? O2 + 1 | 0 : O2) | 0, Z2 = O2 = I7 >>> 0 > (CA2 = I7 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2, MA2 = I7 = O2 - ((CA2 >>> 0 < 4293918720) - 1 | 0) | 0, O2 = (W2 = I7 >> 21) + T2 | 0, g6 = O2 = (T2 = nA2 = (I7 = (2097151 & I7) << 11 | (V2 = CA2 - -1048576 | 0) >>> 21) + PA2 | 0) >>> 0 < I7 >>> 0 ? O2 + 1 | 0 : O2, sA2 = O2 = O2 - ((T2 >>> 0 < 4293918720) - 1 | 0) | 0, nA2 = (2097151 & O2) << 11 | (I7 = T2 - -1048576 | 0) >>> 21, O2 = (O2 >> 21) + RA2 | 0, RA2 = mA2 = nA2 + P7 | 0, nA2 = nA2 >>> 0 > mA2 >>> 0 ? O2 + 1 | 0 : O2, LA2 = T2 - (I7 &= -2097152) | 0, PA2 = g6 - ((I7 >>> 0 > T2 >>> 0) + sA2 | 0) | 0, qA2 = CA2 - (I7 = -2097152 & V2) | 0, mA2 = Z2 - ((I7 >>> 0 > CA2 >>> 0) + MA2 | 0) | 0, I7 = Ig(lA2, v4, 654183, 0), W2 = f3 + (IA2 - (((g6 = -2097152 & $2) >>> 0 > rA2 >>> 0) + uA2 | 0) | 0) | 0, W2 = I7 >>> 0 > (O2 = I7 + (rA2 - g6 | 0) | 0) >>> 0 ? W2 + 1 | 0 : W2, g6 = (I7 = Ig(wA2, R4, -997805, -1)) + O2 | 0, O2 = f3 + W2 | 0, O2 = I7 >>> 0 > g6 >>> 0 ? O2 + 1 | 0 : O2, I7 = Ig(UA2, L4, 136657, 0), O2 = f3 + O2 | 0, uA2 = g6 = I7 + g6 | 0, I7 = I7 >>> 0 > g6 >>> 0 ? O2 + 1 | 0 : O2, MA2 = YA2 - (g6 = -2097152 & BA2) | 0, rA2 = iA2 - ((g6 >>> 0 > YA2 >>> 0) + j2 | 0) | 0, g6 = Ig(u4, l4, -997805, -1), O2 = f3, V2 = (W2 = g6) + (g6 = Ig(M4, x4, 654183, 0)) | 0, W2 = f3 + O2 | 0, W2 = g6 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, g6 = Ig(U4, K4, 136657, 0), O2 = f3 + W2 | 0, O2 = g6 >>> 0 > (V2 = g6 + V2 | 0) >>> 0 ? O2 + 1 | 0 : O2, g6 = Ig(J4, b5, -683901, -1), O2 = f3 + O2 | 0, W2 = EA2 + (g6 >>> 0 > (V2 = g6 + V2 | 0) >>> 0 ? O2 + 1 | 0 : O2) | 0, BA2 = (O2 = V2 + HA2 | 0) - (g6 = -2097152 & _A2) | 0, _A2 = (W2 = O2 >>> 0 < HA2 >>> 0 ? W2 + 1 | 0 : W2) - ((g6 >>> 0 > O2 >>> 0) + z2 | 0) | 0, g6 = Ig(u4, l4, 654183, 0), O2 = f3, V2 = (W2 = g6) + (g6 = Ig(M4, x4, 470296, 0)) | 0, W2 = f3 + O2 | 0, W2 = g6 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, g6 = Ig(U4, K4, -997805, -1), O2 = f3 + W2 | 0, W2 = yA2 + (g6 >>> 0 > (V2 = g6 + V2 | 0) >>> 0 ? O2 + 1 | 0 : O2) | 0, W2 = (g6 = V2 + bA2 | 0) >>> 0 < bA2 >>> 0 ? W2 + 1 | 0 : W2, V2 = (O2 = g6) + (g6 = Ig(J4, b5, 136657, 0)) | 0, O2 = f3 + W2 | 0, O2 = g6 >>> 0 > V2 >>> 0 ? O2 + 1 | 0 : O2, W2 = (g6 = Ig(H4, Y4, -683901, -1)) + V2 | 0, V2 = f3 + O2 | 0, V2 = g6 >>> 0 > W2 >>> 0 ? V2 + 1 | 0 : V2, $2 = W2 - (g6 = -2097152 & oA2) | 0, Z2 = V2 - ((g6 >>> 0 > W2 >>> 0) + q3 | 0) | 0, g6 = Ig(B4, 0, DA2, 0), O2 = f3, W2 = g6, g6 = Ig(E4, 0, N4, 0), O2 = f3 + O2 | 0, O2 = g6 >>> 0 > (W2 = W2 + g6 | 0) >>> 0 ? O2 + 1 | 0 : O2, g6 = Ig(i5, 0, a4, 0), O2 = f3 + O2 | 0, O2 = g6 >>> 0 > (W2 = g6 + W2 | 0) >>> 0 ? O2 + 1 | 0 : O2, g6 = Ig(e6, G4, t4, 0), V2 = f3 + O2 | 0, V2 = g6 >>> 0 > (W2 = g6 + W2 | 0) >>> 0 ? V2 + 1 | 0 : V2, O2 = (g6 = Ig(Q5, 0, r4, 0)) + W2 | 0, W2 = f3 + V2 | 0, W2 = g6 >>> 0 > O2 >>> 0 ? W2 + 1 | 0 : W2, g6 = Ig(y4, 0, c4, 0), W2 = f3 + W2 | 0, W2 = g6 >>> 0 > (O2 = g6 + O2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = (g6 = Ig(_4, 0, h4, 0)) + O2 | 0, O2 = f3 + W2 | 0, O2 = g6 >>> 0 > V2 >>> 0 ? O2 + 1 | 0 : O2, g6 = Ig(D4, 0, p4, eA2), O2 = f3 + O2 | 0, O2 = g6 >>> 0 > (W2 = g6 + V2 | 0) >>> 0 ? O2 + 1 | 0 : O2, g6 = Ig(w4, 0, hA2, 0), V2 = f3 + O2 | 0, V2 = g6 >>> 0 > (W2 = g6 + W2 | 0) >>> 0 ? V2 + 1 | 0 : V2, O2 = (g6 = Ig(s4, 0, n5, 0)) + W2 | 0, W2 = f3 + V2 | 0, W2 = g6 >>> 0 > O2 >>> 0 ? W2 + 1 | 0 : W2, g6 = Ig(F4, 0, fA2, 0), W2 = f3 + W2 | 0, W2 = g6 >>> 0 > (O2 = g6 + O2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = (g6 = Ig(S4, 0, k4, 0)) + O2 | 0, O2 = f3 + W2 | 0, O2 = (FA2 >>> 21 | 0) + (O2 = g6 >>> 0 > V2 >>> 0 ? O2 + 1 | 0 : O2) | 0, CA2 = O2 = (g6 = (2097151 & FA2) << 11 | dA2 >>> 21) >>> 0 > (EA2 = g6 + V2 | 0) >>> 0 ? O2 + 1 | 0 : O2, bA2 = g6 = O2 - ((EA2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = (W2 = g6 >>> 21 | 0) + Z2 | 0, IA2 = W2 = (g6 = (2097151 & g6) << 11 | (T2 = EA2 - -1048576 | 0) >>> 21) >>> 0 > (iA2 = g6 + $2 | 0) >>> 0 ? W2 + 1 | 0 : W2, sA2 = g6 = W2 - ((iA2 >>> 0 < 4293918720) - 1 | 0) | 0, O2 = (W2 = g6 >> 21) + _A2 | 0, Z2 = O2 = (g6 = (2097151 & g6) << 11 | ($2 = iA2 - -1048576 | 0) >>> 21) >>> 0 > (BA2 = g6 + BA2 | 0) >>> 0 ? O2 + 1 | 0 : O2, oA2 = O2 = O2 - ((BA2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = (W2 = O2 >> 21) + rA2 | 0, rA2 = W2 = (O2 = (V2 = (2097151 & O2) << 11 | (g6 = BA2 - -1048576 | 0) >>> 21) + MA2 | 0) >>> 0 < V2 >>> 0 ? W2 + 1 | 0 : W2, dA2 = O2, W2 = Ig(O2, W2, -683901, -1), O2 = f3 + I7 | 0, _A2 = V2 = W2 + uA2 | 0, I7 = W2 >>> 0 > V2 >>> 0 ? O2 + 1 | 0 : O2, O2 = Ig(lA2, v4, 470296, 0), V2 = f3 + (gA2 - (((W2 = -2097152 & AA2) >>> 0 > GA2 >>> 0) + vA2 | 0) | 0) | 0, V2 = O2 >>> 0 > (AA2 = O2 + (GA2 - W2 | 0) | 0) >>> 0 ? V2 + 1 | 0 : V2, O2 = Ig(wA2, R4, 654183, 0), W2 = f3 + V2 | 0, W2 = O2 >>> 0 > (AA2 = O2 + AA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = Ig(UA2, L4, -997805, -1), O2 = f3 + W2 | 0, O2 = V2 >>> 0 > (AA2 = V2 + AA2 | 0) >>> 0 ? O2 + 1 | 0 : O2, FA2 = g6 = BA2 - (W2 = -2097152 & g6) | 0, eA2 = Z2 = Z2 - ((W2 >>> 0 > BA2 >>> 0) + oA2 | 0) | 0, AA2 = (V2 = Ig(dA2, rA2, 136657, 0)) + AA2 | 0, W2 = f3 + O2 | 0, g6 = Ig(g6, Z2, -683901, -1), V2 = f3 + (V2 >>> 0 > AA2 >>> 0 ? W2 + 1 | 0 : W2) | 0, Z2 = V2 = g6 >>> 0 > (gA2 = g6 + AA2 | 0) >>> 0 ? V2 + 1 | 0 : V2, yA2 = W2 = V2 - ((gA2 >>> 0 < 4293918720) - 1 | 0) | 0, V2 = (2097151 & W2) << 11 | (g6 = gA2 - -1048576 | 0) >>> 21, W2 = (W2 >> 21) + I7 | 0, oA2 = V2 = (W2 = V2 >>> 0 > (AA2 = V2 + _A2 | 0) >>> 0 ? W2 + 1 | 0 : W2) - ((AA2 >>> 0 < 4293918720) - 1 | 0) | 0, BA2 = (2097151 & V2) << 11 | (I7 = AA2 - -1048576 | 0) >>> 21, V2 = (V2 >> 21) + mA2 | 0, hA2 = _A2 = BA2 + qA2 | 0, _A2 = BA2 >>> 0 > _A2 >>> 0 ? V2 + 1 | 0 : V2, DA2 = AA2 - (I7 &= -2097152) | 0, fA2 = W2 - ((I7 >>> 0 > AA2 >>> 0) + oA2 | 0) | 0, HA2 = gA2 - (I7 = -2097152 & g6) | 0, YA2 = Z2 - ((I7 >>> 0 > gA2 >>> 0) + yA2 | 0) | 0, I7 = Ig(lA2, v4, 666643, 0), W2 = f3 + (cA2 - (((g6 = -2097152 & aA2) >>> 0 > KA2 >>> 0) + xA2 | 0) | 0) | 0, W2 = I7 >>> 0 > (O2 = I7 + (KA2 - g6 | 0) | 0) >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(wA2, R4, 470296, 0), V2 = f3 + W2 | 0, V2 = I7 >>> 0 > (g6 = I7 + O2 | 0) >>> 0 ? V2 + 1 | 0 : V2, I7 = Ig(UA2, L4, 654183, 0), W2 = f3 + V2 | 0, AA2 = g6 = I7 + g6 | 0, I7 = I7 >>> 0 > g6 >>> 0 ? W2 + 1 | 0 : W2, $2 = iA2 - (g6 = -2097152 & $2) | 0, Z2 = IA2 - ((g6 >>> 0 > iA2 >>> 0) + sA2 | 0) | 0, g6 = Ig(u4, l4, 470296, 0), O2 = f3, W2 = g6, g6 = Ig(M4, x4, 666643, 0), O2 = f3 + O2 | 0, O2 = g6 >>> 0 > (W2 = W2 + g6 | 0) >>> 0 ? O2 + 1 | 0 : O2, g6 = Ig(U4, K4, 654183, 0), V2 = f3 + O2 | 0, V2 = g6 >>> 0 > (W2 = g6 + W2 | 0) >>> 0 ? V2 + 1 | 0 : V2, O2 = (g6 = Ig(J4, b5, -997805, -1)) + W2 | 0, W2 = f3 + V2 | 0, W2 = g6 >>> 0 > O2 >>> 0 ? W2 + 1 | 0 : W2, g6 = Ig(H4, Y4, 136657, 0), W2 = f3 + W2 | 0, O2 = CA2 + (g6 >>> 0 > (V2 = g6 + O2 | 0) >>> 0 ? W2 + 1 | 0 : W2) | 0, O2 = (g6 = V2 + EA2 | 0) >>> 0 < EA2 >>> 0 ? O2 + 1 | 0 : O2, W2 = g6, g6 = Ig(m4, d5, -683901, -1), O2 = f3 + O2 | 0, O2 = g6 >>> 0 > (V2 = W2 + g6 | 0) >>> 0 ? O2 + 1 | 0 : O2, oA2 = (g6 = (2097151 & JA2) << 11 | NA2 >>> 21) + (V2 - (W2 = -2097152 & T2) | 0) | 0, W2 = (O2 - ((W2 >>> 0 > V2 >>> 0) + bA2 | 0) | 0) + (JA2 >> 21) | 0, iA2 = W2 = g6 >>> 0 > oA2 >>> 0 ? W2 + 1 | 0 : W2, sA2 = g6 = W2 - ((oA2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = (O2 = g6 >> 21) + Z2 | 0, JA2 = W2 = (g6 = (V2 = (2097151 & g6) << 11 | (BA2 = oA2 - -1048576 | 0) >>> 21) + $2 | 0) >>> 0 < V2 >>> 0 ? W2 + 1 | 0 : W2, yA2 = g6, g6 = Ig(g6, W2, -683901, -1), V2 = f3 + I7 | 0, V2 = g6 >>> 0 > (O2 = g6 + AA2 | 0) >>> 0 ? V2 + 1 | 0 : V2, I7 = Ig(dA2, rA2, -997805, -1), W2 = f3 + V2 | 0, W2 = I7 >>> 0 > (g6 = I7 + O2 | 0) >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(FA2, eA2, 136657, 0), O2 = f3 + W2 | 0, NA2 = g6 = I7 + g6 | 0, $2 = I7 >>> 0 > g6 >>> 0 ? O2 + 1 | 0 : O2, T2 = kA2 - (I7 = -2097152 & QA2) | 0, IA2 = tA2 - ((I7 >>> 0 > kA2 >>> 0) + X2 | 0) | 0, I7 = Ig(B4, 0, s4, 0), g6 = f3, O2 = I7, I7 = Ig(E4, 0, w4, 0), W2 = f3 + g6 | 0, W2 = I7 >>> 0 > (O2 = O2 + I7 | 0) >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(a4, 0, F4, 0), W2 = f3 + W2 | 0, W2 = I7 >>> 0 > (g6 = I7 + O2 | 0) >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(r4, 0, k4, 0), O2 = f3 + W2 | 0, I7 = I7 >>> 0 > (W2 = g6 = I7 + g6 | 0) >>> 0 ? O2 + 1 | 0 : O2, g6 = Ig(B4, 0, w4, 0), O2 = f3, Z2 = (V2 = g6) + (g6 = Ig(E4, 0, k4, 0)) | 0, V2 = f3 + O2 | 0, V2 = g6 >>> 0 > Z2 >>> 0 ? V2 + 1 | 0 : V2, g6 = Ig(r4, 0, F4, 0), O2 = f3 + V2 | 0, g6 = O2 = g6 >>> 0 > (Z2 = g6 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2, lA2 = O2 = O2 - ((Z2 >>> 0 < 4293918720) - 1 | 0) | 0, V2 = O2 >>> 21 | 0, EA2 = (O2 = (2097151 & O2) << 11 | (cA2 = Z2 - -1048576 | 0) >>> 21) + W2 | 0, W2 = I7 + V2 | 0, aA2 = W2 = O2 >>> 0 > EA2 >>> 0 ? W2 + 1 | 0 : W2, KA2 = I7 = W2 - ((EA2 >>> 0 < 4293918720) - 1 | 0) | 0, O2 = (V2 = I7 >>> 21 | 0) + IA2 | 0, O2 = (I7 = (2097151 & I7) << 11 | (gA2 = EA2 - -1048576 | 0) >>> 21) >>> 0 > (W2 = I7 + T2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = (I7 = Ig(wA2, R4, 666643, 0)) + W2 | 0, W2 = f3 + O2 | 0, W2 = I7 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, I7 = Ig(UA2, L4, 470296, 0), W2 = f3 + W2 | 0, W2 = I7 >>> 0 > (O2 = I7 + V2 | 0) >>> 0 ? W2 + 1 | 0 : W2, V2 = (I7 = Ig(yA2, JA2, 136657, 0)) + O2 | 0, O2 = f3 + W2 | 0, O2 = I7 >>> 0 > V2 >>> 0 ? O2 + 1 | 0 : O2, W2 = (I7 = Ig(dA2, rA2, 654183, 0)) + V2 | 0, V2 = f3 + O2 | 0, V2 = I7 >>> 0 > W2 >>> 0 ? V2 + 1 | 0 : V2, I7 = Ig(FA2, eA2, -997805, -1), O2 = f3 + V2 | 0, CA2 = O2 = I7 >>> 0 > (AA2 = I7 + W2 | 0) >>> 0 ? O2 + 1 | 0 : O2, GA2 = I7 = O2 - ((AA2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = (V2 = I7 >> 21) + $2 | 0, NA2 = O2 = (W2 = (I7 = (O2 = (2097151 & I7) << 11 | (T2 = AA2 - -1048576 | 0) >>> 21) + NA2 | 0) >>> 0 < O2 >>> 0 ? W2 + 1 | 0 : W2) - ((I7 >>> 0 < 4293918720) - 1 | 0) | 0, $2 = (2097151 & O2) << 11 | (IA2 = I7 - -1048576 | 0) >>> 21, O2 = (O2 >> 21) + YA2 | 0, MA2 = QA2 = $2 + HA2 | 0, tA2 = $2 >>> 0 > QA2 >>> 0 ? O2 + 1 | 0 : O2, $2 = I7, V2 = W2, W2 = (iA2 - (((O2 = -2097152 & BA2) >>> 0 > oA2 >>> 0) + sA2 | 0) | 0) + (SA2 >> 21) | 0, QA2 = W2 = (I7 = (oA2 - O2 | 0) + (BA2 = (2097151 & SA2) << 11 | pA2 >>> 21) | 0) >>> 0 < BA2 >>> 0 ? W2 + 1 | 0 : W2, bA2 = W2 = W2 - ((I7 >>> 0 < 4293918720) - 1 | 0) | 0, oA2 = O2 = W2 >> 21, W2 = Ig(wA2 = (2097151 & W2) << 11 | (iA2 = I7 - -1048576 | 0) >>> 21, O2, -683901, -1), O2 = f3 + V2 | 0, O2 = W2 >>> 0 > ($2 = W2 + $2 | 0) >>> 0 ? O2 + 1 | 0 : O2, HA2 = $2 - (W2 = -2097152 & IA2) | 0, YA2 = O2 - ((W2 >>> 0 > $2 >>> 0) + NA2 | 0) | 0, O2 = Ig(wA2, oA2, 136657, 0), W2 = f3 + CA2 | 0, W2 = O2 >>> 0 > (V2 = O2 + AA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, sA2 = V2 - (O2 = -2097152 & T2) | 0, NA2 = W2 - ((O2 >>> 0 > V2 >>> 0) + GA2 | 0) | 0, V2 = (O2 = Ig(UA2, L4, 666643, 0)) + (EA2 - (W2 = -2097152 & gA2) | 0) | 0, W2 = f3 + (aA2 - ((W2 >>> 0 > EA2 >>> 0) + KA2 | 0) | 0) | 0, W2 = O2 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, $2 = (O2 = Ig(yA2, JA2, -997805, -1)) + V2 | 0, V2 = f3 + W2 | 0, V2 = O2 >>> 0 > $2 >>> 0 ? V2 + 1 | 0 : V2, W2 = Ig(dA2, rA2, 470296, 0), O2 = f3 + V2 | 0, O2 = W2 >>> 0 > ($2 = W2 + $2 | 0) >>> 0 ? O2 + 1 | 0 : O2, V2 = Ig(FA2, eA2, 654183, 0), W2 = f3 + O2 | 0, SA2 = $2 = V2 + $2 | 0, CA2 = V2 >>> 0 > $2 >>> 0 ? W2 + 1 | 0 : W2, $2 = Z2, Z2 = g6, g6 = Ig(E4, 0, F4, 0), O2 = f3, W2 = g6, g6 = Ig(B4, 0, k4, 0), O2 = f3 + O2 | 0, O2 = g6 >>> 0 > (V2 = W2 + g6 | 0) >>> 0 ? O2 + 1 | 0 : O2, g6 = Ig(B4, 0, F4, 0), kA2 = W2 = f3, EA2 = g6, aA2 = g6 - -1048576 | 0, KA2 = g6 = W2 - ((g6 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = g6 >>> 21 | 0, BA2 = (g6 = (2097151 & g6) << 11 | aA2 >>> 21) + V2 | 0, V2 = W2 + O2 | 0, gA2 = V2 = g6 >>> 0 > BA2 >>> 0 ? V2 + 1 | 0 : V2, GA2 = g6 = V2 - ((BA2 >>> 0 < 4293918720) - 1 | 0) | 0, O2 = (W2 = g6 >>> 21 | 0) + Z2 | 0, O2 = (g6 = (2097151 & g6) << 11 | (AA2 = BA2 - -1048576 | 0) >>> 21) >>> 0 > (V2 = g6 + $2 | 0) >>> 0 ? O2 + 1 | 0 : O2, Z2 = (g6 = Ig(yA2, JA2, 654183, 0)) + (V2 - (W2 = -2097152 & cA2) | 0) | 0, V2 = f3 + (O2 - ((8191 & lA2) + (W2 >>> 0 > V2 >>> 0) | 0) | 0) | 0, V2 = g6 >>> 0 > Z2 >>> 0 ? V2 + 1 | 0 : V2, g6 = Ig(dA2, rA2, 666643, 0), W2 = f3 + V2 | 0, W2 = g6 >>> 0 > (O2 = g6 + Z2 | 0) >>> 0 ? W2 + 1 | 0 : W2, T2 = (g6 = Ig(FA2, eA2, 470296, 0)) + O2 | 0, O2 = f3 + W2 | 0, IA2 = O2 = g6 >>> 0 > T2 >>> 0 ? O2 + 1 | 0 : O2, pA2 = g6 = O2 - ((T2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = (W2 = g6 >> 21) + CA2 | 0, V2 = W2 = (g6 = (2097151 & g6) << 11 | ($2 = T2 - -1048576 | 0) >>> 21) >>> 0 > (Z2 = g6 + SA2 | 0) >>> 0 ? W2 + 1 | 0 : W2, cA2 = O2 = W2 - ((Z2 >>> 0 < 4293918720) - 1 | 0) | 0, CA2 = (2097151 & O2) << 11 | (g6 = Z2 - -1048576 | 0) >>> 21, O2 = (O2 >> 21) + NA2 | 0, CA2 = CA2 >>> 0 > (rA2 = SA2 = CA2 + sA2 | 0) >>> 0 ? O2 + 1 | 0 : O2, W2 = Ig(wA2, oA2, -997805, -1), O2 = f3 + V2 | 0, dA2 = (Z2 = W2 + Z2 | 0) - (g6 &= -2097152) | 0, NA2 = (W2 >>> 0 > Z2 >>> 0 ? O2 + 1 | 0 : O2) - ((g6 >>> 0 > Z2 >>> 0) + cA2 | 0) | 0, g6 = Ig(wA2, oA2, 654183, 0), V2 = f3 + IA2 | 0, V2 = g6 >>> 0 > (O2 = g6 + T2 | 0) >>> 0 ? V2 + 1 | 0 : V2, SA2 = O2 - (g6 = -2097152 & $2) | 0, pA2 = V2 - ((g6 >>> 0 > O2 >>> 0) + pA2 | 0) | 0, g6 = Ig(yA2, JA2, 470296, 0), W2 = f3 + (gA2 - ((8191 & GA2) + ((O2 = -2097152 & AA2) >>> 0 > BA2 >>> 0) | 0) | 0) | 0, W2 = g6 >>> 0 > (V2 = g6 + (BA2 - O2 | 0) | 0) >>> 0 ? W2 + 1 | 0 : W2, g6 = Ig(FA2, eA2, 666643, 0), W2 = f3 + W2 | 0, W2 = g6 >>> 0 > (O2 = g6 + V2 | 0) >>> 0 ? W2 + 1 | 0 : W2, Z2 = O2, g6 = Ig(yA2, JA2, 666643, 0), V2 = f3 + (kA2 - ((2047 & KA2) + ((O2 = -2097152 & aA2) >>> 0 > EA2 >>> 0) | 0) | 0) | 0, T2 = V2 = g6 >>> 0 > (AA2 = g6 + (EA2 - O2 | 0) | 0) >>> 0 ? V2 + 1 | 0 : V2, cA2 = g6 = V2 - ((AA2 >>> 0 < 4293918720) - 1 | 0) | 0, W2 = W2 + (O2 = g6 >> 21) | 0, aA2 = g6 = (W2 = (g6 = (2097151 & g6) << 11 | (IA2 = AA2 - -1048576 | 0) >>> 21) >>> 0 > ($2 = g6 + Z2 | 0) >>> 0 ? W2 + 1 | 0 : W2) - (($2 >>> 0 < 4293918720) - 1 | 0) | 0, V2 = (O2 = g6 >> 21) + pA2 | 0, g6 = (g6 = (2097151 & g6) << 11 | (Z2 = $2 - -1048576 | 0) >>> 21) >>> 0 > (gA2 = g6 + SA2 | 0) >>> 0 ? V2 + 1 | 0 : V2, O2 = Ig(wA2, oA2, 470296, 0), W2 = f3 + W2 | 0, W2 = O2 >>> 0 > (V2 = O2 + $2 | 0) >>> 0 ? W2 + 1 | 0 : W2, Z2 = V2 - (O2 = -2097152 & Z2) | 0, $2 = W2 - ((O2 >>> 0 > V2 >>> 0) + aA2 | 0) | 0, O2 = Ig(wA2, oA2, 666643, 0), V2 = f3 + (T2 - (((W2 = -2097152 & IA2) >>> 0 > AA2 >>> 0) + cA2 | 0) | 0) | 0, O2 = (W2 = (V2 = O2 >>> 0 > (BA2 = O2 + (AA2 - W2 | 0) | 0) >>> 0 ? V2 + 1 | 0 : V2) >> 21) + $2 | 0, W2 = g6 + (V2 = (O2 = (V2 = (2097151 & V2) << 11 | BA2 >>> 21) >>> 0 > (Z2 = V2 + Z2 | 0) >>> 0 ? O2 + 1 | 0 : O2) >> 21) | 0, O2 = (O2 = (W2 = (g6 = $2 = (O2 = (2097151 & O2) << 11 | Z2 >>> 21) + gA2 | 0) >>> 0 < O2 >>> 0 ? W2 + 1 | 0 : W2) >> 21) + NA2 | 0, W2 = (W2 = (O2 = (W2 = (2097151 & W2) << 11 | g6 >>> 21) >>> 0 > (cA2 = W2 + dA2 | 0) >>> 0 ? O2 + 1 | 0 : O2) >> 21) + CA2 | 0, V2 = (O2 = (W2 = (O2 = (2097151 & O2) << 11 | cA2 >>> 21) >>> 0 > (aA2 = O2 + rA2 | 0) >>> 0 ? W2 + 1 | 0 : W2) >> 21) + YA2 | 0, O2 = (W2 = (V2 = (W2 = (2097151 & W2) << 11 | aA2 >>> 21) >>> 0 > (gA2 = W2 + HA2 | 0) >>> 0 ? V2 + 1 | 0 : V2) >> 21) + tA2 | 0, W2 = (V2 = (O2 = (V2 = (2097151 & V2) << 11 | gA2 >>> 21) >>> 0 > (AA2 = V2 + MA2 | 0) >>> 0 ? O2 + 1 | 0 : O2) >> 21) + fA2 | 0, O2 = (O2 = (W2 = (O2 = (2097151 & O2) << 11 | AA2 >>> 21) >>> 0 > (CA2 = O2 + DA2 | 0) >>> 0 ? W2 + 1 | 0 : W2) >> 21) + _A2 | 0, W2 = (W2 = (O2 = (W2 = (2097151 & W2) << 11 | CA2 >>> 21) >>> 0 > (T2 = W2 + hA2 | 0) >>> 0 ? O2 + 1 | 0 : O2) >> 21) + PA2 | 0, V2 = (O2 = (W2 = (O2 = (2097151 & O2) << 11 | T2 >>> 21) >>> 0 > (IA2 = O2 + LA2 | 0) >>> 0 ? W2 + 1 | 0 : W2) >> 21) + nA2 | 0, W2 = (QA2 - ((I7 >>> 0 < (O2 = -2097152 & iA2) >>> 0) + bA2 | 0) | 0) + ((V2 = (W2 = (2097151 & W2) << 11 | IA2 >>> 21) >>> 0 > ($2 = W2 + RA2 | 0) >>> 0 ? V2 + 1 | 0 : V2) >> 21) | 0, QA2 = O2 = (W2 = (iA2 = (tA2 = I7 - O2 | 0) + ((2097151 & V2) << 11 | $2 >>> 21) | 0) >>> 0 < tA2 >>> 0 ? W2 + 1 | 0 : W2) >> 21, I7 = (I7 = Ig(tA2 = (2097151 & W2) << 11 | iA2 >>> 21, O2, 666643, 0)) + (O2 = 2097151 & BA2) | 0, V2 = f3, C3[0 | A8] = I7, V2 = I7 >>> 0 < O2 >>> 0 ? V2 + 1 | 0 : V2, C3[A8 + 1 | 0] = (255 & V2) << 24 | I7 >>> 8, O2 = 2097151 & Z2, Z2 = Ig(tA2, QA2, 470296, 0) + O2 | 0, W2 = f3, W2 = (V2 >> 21) + (W2 = O2 >>> 0 > Z2 >>> 0 ? W2 + 1 | 0 : W2) | 0, W2 = (Z2 = (BA2 = (2097151 & V2) << 11 | I7 >>> 21) + Z2 | 0) >>> 0 < BA2 >>> 0 ? W2 + 1 | 0 : W2, C3[A8 + 4 | 0] = (2047 & W2) << 21 | Z2 >>> 11;
                      C3[A8 + 3 | 0] = (7 & W2) << 29 | Z2 >>> 3, C3[A8 + 2 | 0] = 31 & ((65535 & V2) << 16 | I7 >>> 16) | Z2 << 5, I7 = 2097151 & g6, g6 = Ig(tA2, QA2, 654183, 0) + I7 | 0, V2 = f3, V2 = I7 >>> 0 > g6 >>> 0 ? V2 + 1 | 0 : V2, I7 = W2, O2 = (W2 >>= 21) + V2 | 0, I7 = O2 = (I7 = (2097151 & I7) << 11 | Z2 >>> 21) >>> 0 > (g6 = I7 + g6 | 0) >>> 0 ? O2 + 1 | 0 : O2, C3[A8 + 6 | 0] = (63 & O2) << 26 | g6 >>> 6, W2 = 0, C3[A8 + 5 | 0] = W2 << 13 | (1572864 & Z2) >>> 19 | g6 << 2, W2 = 2097151 & cA2, V2 = Ig(tA2, QA2, -997805, -1) + W2 | 0, O2 = f3, O2 = W2 >>> 0 > V2 >>> 0 ? O2 + 1 | 0 : O2, W2 = (W2 = I7 >> 21) + O2 | 0, W2 = (I7 = (Z2 = V2) + (V2 = (2097151 & I7) << 11 | g6 >>> 21) | 0) >>> 0 < V2 >>> 0 ? W2 + 1 | 0 : W2, C3[A8 + 9 | 0] = (511 & W2) << 23 | I7 >>> 9, C3[A8 + 8 | 0] = (1 & W2) << 31 | I7 >>> 1, O2 = 0, C3[A8 + 7 | 0] = O2 << 18 | (2080768 & g6) >>> 14 | I7 << 7, g6 = 2097151 & aA2, O2 = Ig(tA2, QA2, 136657, 0) + g6 | 0, V2 = f3, V2 = g6 >>> 0 > O2 >>> 0 ? V2 + 1 | 0 : V2, g6 = (Z2 = (2097151 & (g6 = W2)) << 11 | I7 >>> 21) + O2 | 0, O2 = (W2 >>= 21) + V2 | 0, O2 = g6 >>> 0 < Z2 >>> 0 ? O2 + 1 | 0 : O2, C3[A8 + 12 | 0] = (4095 & O2) << 20 | g6 >>> 12, C3[A8 + 11 | 0] = (15 & O2) << 28 | g6 >>> 4, W2 = 0, C3[A8 + 10 | 0] = W2 << 15 | (1966080 & I7) >>> 17 | g6 << 4, I7 = 2097151 & gA2, V2 = Ig(tA2, QA2, -683901, -1) + I7 | 0, W2 = f3, W2 = I7 >>> 0 > V2 >>> 0 ? W2 + 1 | 0 : W2, I7 = O2, O2 = W2 + (O2 >>= 21) | 0, O2 = (I7 = (Z2 = V2) + (V2 = (2097151 & I7) << 11 | g6 >>> 21) | 0) >>> 0 < V2 >>> 0 ? O2 + 1 | 0 : O2, C3[A8 + 14 | 0] = (127 & O2) << 25 | I7 >>> 7, W2 = 0, C3[A8 + 13 | 0] = W2 << 12 | (1048576 & g6) >>> 20 | I7 << 1, W2 = O2 >> 21, W2 = (g6 = (O2 = (2097151 & O2) << 11 | I7 >>> 21) + (2097151 & AA2) | 0) >>> 0 < O2 >>> 0 ? W2 + 1 | 0 : W2, C3[A8 + 17 | 0] = (1023 & W2) << 22 | g6 >>> 10, C3[A8 + 16 | 0] = (3 & W2) << 30 | g6 >>> 2, O2 = 0, C3[A8 + 15 | 0] = O2 << 17 | (2064384 & I7) >>> 15 | g6 << 6, I7 = W2, W2 >>= 21, V2 = (I7 = (O2 = (2097151 & I7) << 11 | g6 >>> 21) + (2097151 & CA2) | 0) >>> 0 < O2 >>> 0 ? W2 + 1 | 0 : W2, C3[A8 + 20 | 0] = (8191 & V2) << 19 | I7 >>> 13, C3[A8 + 19 | 0] = (31 & V2) << 27 | I7 >>> 5, O2 = V2 >> 21, O2 = (W2 = (Z2 = (2097151 & V2) << 11 | I7 >>> 21) + (2097151 & T2) | 0) >>> 0 < Z2 >>> 0 ? O2 + 1 | 0 : O2, Z2 = W2, C3[A8 + 21 | 0] = W2, W2 = 0, C3[A8 + 18 | 0] = W2 << 14 | (1835008 & g6) >>> 18 | I7 << 3, C3[A8 + 22 | 0] = (255 & O2) << 24 | Z2 >>> 8, W2 = O2 >> 21, W2 = (I7 = (g6 = (2097151 & O2) << 11 | Z2 >>> 21) + (2097151 & IA2) | 0) >>> 0 < g6 >>> 0 ? W2 + 1 | 0 : W2, C3[A8 + 25 | 0] = (2047 & W2) << 21 | I7 >>> 11, C3[A8 + 24 | 0] = (7 & W2) << 29 | I7 >>> 3, C3[A8 + 23 | 0] = 31 & ((65535 & O2) << 16 | Z2 >>> 16) | I7 << 5, O2 = (2097151 & W2) << 11 | I7 >>> 21, W2 >>= 21, W2 = (g6 = O2 + (2097151 & $2) | 0) >>> 0 < O2 >>> 0 ? W2 + 1 | 0 : W2, C3[A8 + 27 | 0] = (63 & W2) << 26 | g6 >>> 6, O2 = 0, C3[A8 + 26 | 0] = O2 << 13 | (1572864 & I7) >>> 19 | g6 << 2, I7 = W2, O2 = W2 >>= 21, O2 = (I7 = (Z2 = (2097151 & I7) << 11 | g6 >>> 21) + (V2 = 2097151 & iA2) | 0) >>> 0 < V2 >>> 0 ? O2 + 1 | 0 : O2, C3[A8 + 31 | 0] = (131071 & O2) << 15 | I7 >>> 17, C3[A8 + 30 | 0] = (511 & O2) << 23 | I7 >>> 9, W2 = 0, C3[A8 + 28 | 0] = W2 << 18 | (2080768 & g6) >>> 14 | I7 << 7, C3[A8 + 29 | 0] = Z2 + iA2 >>> 1;
                    }
                    function k3(A8, I7, g6, C4) {
                      for (var B4 = 0, Q5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, v4 = 0, R4 = 0, L4 = 0, P7 = 0; E4 = (B4 = _4 << 3) + g6 | 0, Q5 = o3[0 | (B4 = I7 + B4 | 0)] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, G4 = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24, c4 = Q5 << 24 | (65280 & Q5) << 8, t4 = (a4 = 16711680 & Q5) << 24, a4 = a4 >>> 8 | 0, B4 = (e6 = -16777216 & Q5) >>> 24 | 0, i4[E4 >> 2] = t4 | e6 << 8 | -16777216 & ((255 & G4) << 24 | Q5 >>> 8) | 16711680 & ((16777215 & G4) << 8 | Q5 >>> 24) | G4 >>> 8 & 65280 | G4 >>> 24, Q5 = B4 | a4 | c4, B4 = 0, i4[E4 + 4 >> 2] = Q5 | B4, 16 != (0 | (_4 = _4 + 1 | 0)); ) ;
                      for (I7 = i4[A8 + 4 >> 2], i4[C4 >> 2] = i4[A8 >> 2], i4[C4 + 4 >> 2] = I7, I7 = i4[A8 + 60 >> 2], i4[C4 + 56 >> 2] = i4[A8 + 56 >> 2], i4[C4 + 60 >> 2] = I7, I7 = i4[A8 + 52 >> 2], i4[C4 + 48 >> 2] = i4[A8 + 48 >> 2], i4[C4 + 52 >> 2] = I7, I7 = i4[A8 + 44 >> 2], i4[C4 + 40 >> 2] = i4[A8 + 40 >> 2], i4[C4 + 44 >> 2] = I7, I7 = i4[A8 + 36 >> 2], i4[C4 + 32 >> 2] = i4[A8 + 32 >> 2], i4[C4 + 36 >> 2] = I7, I7 = i4[A8 + 28 >> 2], i4[C4 + 24 >> 2] = i4[A8 + 24 >> 2], i4[C4 + 28 >> 2] = I7, I7 = i4[A8 + 20 >> 2], i4[C4 + 16 >> 2] = i4[A8 + 16 >> 2], i4[C4 + 20 >> 2] = I7, I7 = i4[A8 + 12 >> 2], i4[C4 + 8 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 12 >> 2] = I7; E4 = i4[C4 + 56 >> 2], a4 = i4[C4 + 60 >> 2], B4 = i4[(I7 = G4 = (M4 = P7 << 3) + g6 | 0) >> 2], I7 = i4[I7 + 4 >> 2], k4 = Q5 = i4[C4 + 36 >> 2], Q5 = UI(p4 = i4[C4 + 32 >> 2], Q5, 50), _4 = f3, Q5 = UI(p4, k4, 46) ^ Q5, _4 ^= f3, Q5 = UI(p4, k4, 23) ^ Q5, I7 = (f3 ^ _4) + I7 | 0, I7 = (B4 = Q5 + B4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, B4 = (_4 = i4[(Q5 = M4 + 34416 | 0) >> 2]) + B4 | 0, I7 = i4[Q5 + 4 >> 2] + I7 | 0, I7 = B4 >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = (_4 = ((t4 = i4[C4 + 48 >> 2]) ^ (y4 = i4[C4 + 40 >> 2])) & p4 ^ t4) + B4 | 0, B4 = (((w4 = i4[C4 + 52 >> 2]) ^ (F4 = i4[C4 + 44 >> 2])) & k4 ^ w4) + I7 | 0, I7 = (Q5 >>> 0 < _4 >>> 0 ? B4 + 1 | 0 : B4) + a4 | 0, I7 = (E4 = Q5 + E4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, _4 = (Q5 = i4[C4 + 24 >> 2]) + E4 | 0, B4 = i4[C4 + 28 >> 2] + I7 | 0, s4 = B4 = Q5 >>> 0 > _4 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 24 >> 2] = _4, i4[C4 + 28 >> 2] = B4, n5 = B4 = i4[C4 + 4 >> 2], B4 = UI(Q5 = i4[C4 >> 2], B4, 36), a4 = f3, B4 = UI(Q5, n5, 30) ^ B4, a4 ^= f3, e6 = E4 + (UI(Q5, n5, 25) ^ B4) | 0, B4 = I7 + (f3 ^ a4) | 0, B4 = E4 >>> 0 > e6 >>> 0 ? B4 + 1 | 0 : B4, c4 = (I7 = e6) + (e6 = Q5 & ((a4 = i4[C4 + 16 >> 2]) | (E4 = i4[C4 + 8 >> 2])) | E4 & a4) | 0, I7 = (I7 = B4) + (n5 & ((B4 = i4[C4 + 20 >> 2]) | (h4 = i4[C4 + 12 >> 2])) | B4 & h4) | 0, e6 = I7 = c4 >>> 0 < e6 >>> 0 ? I7 + 1 | 0 : I7, i4[C4 + 56 >> 2] = c4, i4[C4 + 60 >> 2] = I7, r4 = a4, D4 = B4, N4 = i4[(I7 = l4 = (S4 = 8 | M4) + g6 | 0) >> 2], U4 = i4[I7 + 4 >> 2], B4 = ((k4 ^ F4) & s4 ^ F4) + w4 | 0, B4 = (I7 = (a4 = (y4 ^ p4) & _4 ^ y4) + t4 | 0) >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4, a4 = UI(_4, s4, 50), t4 = f3, a4 = UI(_4, s4, 46) ^ a4, t4 ^= f3, a4 = (w4 = UI(_4, s4, 23) ^ a4) + I7 | 0, I7 = (f3 ^ t4) + B4 | 0, I7 = (a4 >>> 0 < w4 >>> 0 ? I7 + 1 | 0 : I7) + U4 | 0, I7 = (B4 = a4 + N4 | 0) >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7, a4 = (a4 = B4) + (t4 = i4[(B4 = S4 + 34416 | 0) >> 2]) | 0, B4 = i4[B4 + 4 >> 2] + I7 | 0, B4 = (I7 = a4 >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4) + D4 | 0, w4 = B4 = (t4 = a4 + r4 | 0) >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 16 >> 2] = t4, i4[C4 + 20 >> 2] = B4, I7 = I7 + ((h4 | n5) & e6 | h4 & n5) | 0, I7 = (B4 = a4 + ((Q5 | E4) & c4 | Q5 & E4) | 0) >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7, a4 = UI(c4, e6, 36), r4 = f3, a4 = UI(c4, e6, 30) ^ a4, r4 ^= f3, D4 = B4, B4 = UI(c4, e6, 25) ^ a4, I7 = (f3 ^ r4) + I7 | 0, r4 = I7 = B4 >>> 0 > (a4 = D4 + B4 | 0) >>> 0 ? I7 + 1 | 0 : I7, i4[C4 + 48 >> 2] = a4, i4[C4 + 52 >> 2] = I7, D4 = E4, S4 = h4, I7 = (h4 = i4[(B4 = Y4 = (E4 = 16 | M4) + g6 | 0) >> 2]) + y4 | 0, B4 = i4[B4 + 4 >> 2] + F4 | 0, B4 = I7 >>> 0 < h4 >>> 0 ? B4 + 1 | 0 : B4, E4 = (y4 = I7) + (h4 = i4[(I7 = E4 + 34416 | 0) >> 2]) | 0, I7 = i4[I7 + 4 >> 2] + B4 | 0, I7 = ((s4 ^ k4) & w4 ^ k4) + (I7 = E4 >>> 0 < h4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = E4) + (E4 = (_4 ^ p4) & t4 ^ p4) | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, E4 = UI(t4, w4, 50), h4 = f3, E4 = UI(t4, w4, 46) ^ E4, h4 ^= f3, E4 = (y4 = UI(t4, w4, 23) ^ E4) + B4 | 0, B4 = (f3 ^ h4) + I7 | 0, B4 = (y4 = E4 >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4) + S4 | 0, S4 = B4 = (h4 = E4) >>> 0 > (E4 = E4 + D4 | 0) >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 8 >> 2] = E4, i4[C4 + 12 >> 2] = B4, I7 = UI(a4, r4, 36), B4 = f3, I7 = UI(a4, r4, 30) ^ I7, B4 ^= f3, F4 = UI(a4, r4, 25) ^ I7, I7 = ((e6 | n5) & r4 | e6 & n5) + (f3 ^ B4) | 0, B4 = y4 + ((D4 = F4 + ((Q5 | c4) & a4 | Q5 & c4) | 0) >>> 0 < F4 >>> 0 ? I7 + 1 | 0 : I7) | 0, h4 = B4 = (y4 = h4 + D4 | 0) >>> 0 < h4 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 40 >> 2] = y4, i4[C4 + 44 >> 2] = B4, D4 = Q5, B4 = (B4 = p4) + (p4 = i4[(I7 = u4 = (Q5 = 24 | M4) + g6 | 0) >> 2]) | 0, I7 = i4[I7 + 4 >> 2] + k4 | 0, I7 = B4 >>> 0 < p4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = (F4 = B4) + (p4 = i4[(B4 = Q5 + 34416 | 0) >> 2]) | 0, B4 = i4[B4 + 4 >> 2] + I7 | 0, B4 = (s4 ^ (s4 ^ w4) & S4) + (B4 = Q5 >>> 0 < p4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (I7 = Q5) + (Q5 = _4 ^ (_4 ^ t4) & E4) | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, Q5 = UI(E4, S4, 50), p4 = f3, Q5 = UI(E4, S4, 46) ^ Q5, p4 ^= f3, Q5 = (k4 = UI(E4, S4, 23) ^ Q5) + I7 | 0, I7 = (f3 ^ p4) + B4 | 0, B4 = (I7 = Q5 >>> 0 < k4 >>> 0 ? I7 + 1 | 0 : I7) + n5 | 0, k4 = B4 = (n5 = Q5 + D4 | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 >> 2] = n5, i4[C4 + 4 >> 2] = B4, B4 = UI(y4, h4, 36), p4 = f3, B4 = UI(y4, h4, 30) ^ B4, D4 = f3 ^ p4, F4 = UI(y4, h4, 25) ^ B4, B4 = ((e6 | r4) & h4 | e6 & r4) + (f3 ^ D4) | 0, I7 = I7 + ((p4 = F4 + ((a4 | c4) & y4 | a4 & c4) | 0) >>> 0 < F4 >>> 0 ? B4 + 1 | 0 : B4) | 0, p4 = I7 = (D4 = Q5 + p4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, i4[C4 + 32 >> 2] = D4, i4[C4 + 36 >> 2] = I7, Q5 = i4[(B4 = m4 = (I7 = 32 | M4) + g6 | 0) >> 2], B4 = s4 + i4[B4 + 4 >> 2] | 0, B4 = (Q5 = Q5 + _4 | 0) >>> 0 < _4 >>> 0 ? B4 + 1 | 0 : B4, Q5 = (_4 = i4[(I7 = I7 + 34416 | 0) >> 2]) + Q5 | 0, I7 = i4[I7 + 4 >> 2] + B4 | 0, I7 = (w4 ^ (w4 ^ S4) & k4) + (I7 = Q5 >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = Q5) + (Q5 = t4 ^ (E4 ^ t4) & n5) | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, Q5 = UI(n5, k4, 50), _4 = f3, Q5 = UI(n5, k4, 46) ^ Q5, _4 ^= f3, Q5 = (s4 = UI(n5, k4, 23) ^ Q5) + B4 | 0, B4 = (f3 ^ _4) + I7 | 0, F4 = B4 = Q5 >>> 0 < s4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = UI(D4, p4, 36), _4 = f3, B4 = UI(D4, p4, 30) ^ B4, s4 = f3 ^ _4, N4 = UI(D4, p4, 25) ^ B4, B4 = ((r4 | h4) & p4 | r4 & h4) + (f3 ^ s4) | 0, I7 = ((_4 = N4 + ((a4 | y4) & D4 | a4 & y4) | 0) >>> 0 < N4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, _4 = I7 = (s4 = Q5 + _4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, i4[C4 + 24 >> 2] = s4, i4[C4 + 28 >> 2] = I7, B4 = e6 + F4 | 0, F4 = B4 = (e6 = Q5 + c4 | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 56 >> 2] = e6, i4[C4 + 60 >> 2] = B4, Q5 = i4[(I7 = J4 = (B4 = 40 | M4) + g6 | 0) >> 2], I7 = w4 + i4[I7 + 4 >> 2] | 0, I7 = (Q5 = Q5 + t4 | 0) >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = (c4 = i4[(B4 = B4 + 34416 | 0) >> 2]) + Q5 | 0, B4 = i4[B4 + 4 >> 2] + I7 | 0, B4 = (S4 ^ (k4 ^ S4) & F4) + (B4 = Q5 >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (I7 = Q5) + (Q5 = E4 ^ (E4 ^ n5) & e6) | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, Q5 = UI(e6, F4, 50), c4 = f3, Q5 = UI(e6, F4, 46) ^ Q5, c4 ^= f3, Q5 = (t4 = UI(e6, F4, 23) ^ Q5) + I7 | 0, I7 = (f3 ^ c4) + B4 | 0, I7 = Q5 >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, B4 = UI(s4, _4, 36), c4 = f3, B4 = UI(s4, _4, 30) ^ B4, t4 = f3 ^ c4, w4 = UI(s4, _4, 25) ^ B4, B4 = ((h4 | p4) & _4 | h4 & p4) + (f3 ^ t4) | 0, B4 = ((c4 = w4 + ((y4 | D4) & s4 | y4 & D4) | 0) >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, c4 = B4 = (t4 = Q5 + c4 | 0) >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 16 >> 2] = t4, i4[C4 + 20 >> 2] = B4, I7 = I7 + r4 | 0, N4 = I7 = (r4 = Q5 + a4 | 0) >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7, i4[C4 + 48 >> 2] = r4, i4[C4 + 52 >> 2] = I7, Q5 = i4[(B4 = H4 = (I7 = 48 | M4) + g6 | 0) >> 2], B4 = S4 + i4[B4 + 4 >> 2] | 0, B4 = (Q5 = Q5 + E4 | 0) >>> 0 < E4 >>> 0 ? B4 + 1 | 0 : B4, Q5 = (E4 = i4[(I7 = I7 + 34416 | 0) >> 2]) + Q5 | 0, I7 = i4[I7 + 4 >> 2] + B4 | 0, I7 = (k4 ^ (k4 ^ F4) & N4) + (I7 = Q5 >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = Q5) + (Q5 = n5 ^ (e6 ^ n5) & r4) | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, Q5 = UI(r4, N4, 50), E4 = f3, Q5 = UI(r4, N4, 46) ^ Q5, E4 ^= f3, Q5 = (a4 = UI(r4, N4, 23) ^ Q5) + B4 | 0, B4 = (f3 ^ E4) + I7 | 0, a4 = B4 = Q5 >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = UI(t4, c4, 36), E4 = f3, B4 = UI(t4, c4, 30) ^ B4, w4 = f3 ^ E4, S4 = UI(t4, c4, 25) ^ B4, B4 = ((_4 | p4) & c4 | _4 & p4) + (f3 ^ w4) | 0, I7 = ((E4 = S4 + ((s4 | D4) & t4 | s4 & D4) | 0) >>> 0 < S4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, w4 = I7 = (B4 = E4) >>> 0 > (E4 = Q5 + E4 | 0) >>> 0 ? I7 + 1 | 0 : I7, i4[C4 + 8 >> 2] = E4, i4[C4 + 12 >> 2] = I7, B4 = a4 + h4 | 0, S4 = B4 = (U4 = Q5 + y4 | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 40 >> 2] = U4, i4[C4 + 44 >> 2] = B4, Q5 = i4[(I7 = d5 = (B4 = 56 | M4) + g6 | 0) >> 2], I7 = k4 + i4[I7 + 4 >> 2] | 0, I7 = (Q5 = Q5 + n5 | 0) >>> 0 < n5 >>> 0 ? I7 + 1 | 0 : I7, Q5 = (a4 = i4[(B4 = B4 + 34416 | 0) >> 2]) + Q5 | 0, B4 = i4[B4 + 4 >> 2] + I7 | 0, B4 = (F4 ^ (F4 ^ N4) & S4) + (B4 = Q5 >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (I7 = Q5) + (Q5 = e6 ^ (e6 ^ r4) & U4) | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, Q5 = UI(U4, S4, 50), a4 = f3, Q5 = UI(U4, S4, 46) ^ Q5, a4 ^= f3, Q5 = (h4 = UI(U4, S4, 23) ^ Q5) + I7 | 0, I7 = (f3 ^ a4) + B4 | 0, I7 = Q5 >>> 0 < h4 >>> 0 ? I7 + 1 | 0 : I7, B4 = UI(E4, w4, 36), a4 = f3, B4 = UI(E4, w4, 30) ^ B4, h4 = f3 ^ a4, y4 = UI(E4, w4, 25) ^ B4, B4 = ((_4 | c4) & w4 | _4 & c4) + (f3 ^ h4) | 0, B4 = ((a4 = y4 + ((t4 | s4) & E4 | t4 & s4) | 0) >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, h4 = B4 = (h4 = a4) >>> 0 > (a4 = Q5 + a4 | 0) >>> 0 ? B4 + 1 | 0 : B4, i4[C4 >> 2] = a4, i4[C4 + 4 >> 2] = B4, I7 = I7 + p4 | 0, k4 = I7 = (y4 = Q5 + D4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, i4[C4 + 32 >> 2] = y4, i4[C4 + 36 >> 2] = I7, Q5 = i4[(B4 = x4 = (I7 = 64 | M4) + g6 | 0) >> 2], B4 = F4 + i4[B4 + 4 >> 2] | 0, B4 = (Q5 = Q5 + e6 | 0) >>> 0 < e6 >>> 0 ? B4 + 1 | 0 : B4, Q5 = (e6 = i4[(I7 = I7 + 34416 | 0) >> 2]) + Q5 | 0, I7 = i4[I7 + 4 >> 2] + B4 | 0, I7 = (N4 ^ (S4 ^ N4) & k4) + (I7 = Q5 >>> 0 < e6 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = Q5) + (Q5 = r4 ^ (r4 ^ U4) & y4) | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, Q5 = UI(y4, k4, 50), e6 = f3, Q5 = UI(y4, k4, 46) ^ Q5, e6 ^= f3, Q5 = (n5 = UI(y4, k4, 23) ^ Q5) + B4 | 0, B4 = (f3 ^ e6) + I7 | 0, p4 = B4 = Q5 >>> 0 < n5 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = UI(a4, h4, 36), e6 = f3, B4 = UI(a4, h4, 30) ^ B4, n5 = f3 ^ e6, D4 = UI(a4, h4, 25) ^ B4, B4 = ((c4 | w4) & h4 | c4 & w4) + (f3 ^ n5) | 0, I7 = ((e6 = D4 + ((E4 | t4) & a4 | E4 & t4) | 0) >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, e6 = I7 = (n5 = Q5 + e6 | 0) >>> 0 < e6 >>> 0 ? I7 + 1 | 0 : I7, i4[C4 + 56 >> 2] = n5, i4[C4 + 60 >> 2] = I7, B4 = _4 + p4 | 0, F4 = B4 = (_4 = Q5 + s4 | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 24 >> 2] = _4, i4[C4 + 28 >> 2] = B4, Q5 = i4[(I7 = b5 = (B4 = 72 | M4) + g6 | 0) >> 2], I7 = N4 + i4[I7 + 4 >> 2] | 0, I7 = (Q5 = Q5 + r4 | 0) >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = (r4 = i4[(B4 = B4 + 34416 | 0) >> 2]) + Q5 | 0, B4 = i4[B4 + 4 >> 2] + I7 | 0, B4 = (S4 ^ (k4 ^ S4) & F4) + (B4 = Q5 >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (I7 = Q5) + (Q5 = U4 ^ (y4 ^ U4) & _4) | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, Q5 = UI(_4, F4, 50), r4 = f3, Q5 = UI(_4, F4, 46) ^ Q5, r4 ^= f3, Q5 = (p4 = UI(_4, F4, 23) ^ Q5) + I7 | 0, I7 = (f3 ^ r4) + B4 | 0, I7 = Q5 >>> 0 < p4 >>> 0 ? I7 + 1 | 0 : I7, B4 = UI(n5, e6, 36), r4 = f3, B4 = UI(n5, e6, 30) ^ B4, p4 = f3 ^ r4, D4 = UI(n5, e6, 25) ^ B4, B4 = ((h4 | w4) & e6 | h4 & w4) + (f3 ^ p4) | 0, B4 = ((r4 = D4 + ((E4 | a4) & n5 | E4 & a4) | 0) >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, r4 = B4 = (p4 = Q5 + r4 | 0) >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 48 >> 2] = p4, i4[C4 + 52 >> 2] = B4, I7 = I7 + c4 | 0, N4 = I7 = (c4 = Q5 + t4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, i4[C4 + 16 >> 2] = c4, i4[C4 + 20 >> 2] = I7, I7 = (I7 = U4) + (t4 = i4[(B4 = U4 = (Q5 = 80 | M4) + g6 | 0) >> 2]) | 0, B4 = i4[B4 + 4 >> 2] + S4 | 0, B4 = I7 >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4, Q5 = (s4 = I7) + (t4 = i4[(I7 = Q5 + 34416 | 0) >> 2]) | 0, I7 = i4[I7 + 4 >> 2] + B4 | 0, I7 = (k4 ^ (k4 ^ F4) & N4) + (I7 = Q5 >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (B4 = Q5) + (Q5 = y4 ^ (_4 ^ y4) & c4) | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, Q5 = UI(c4, N4, 50), t4 = f3, Q5 = UI(c4, N4, 46) ^ Q5, t4 ^= f3, Q5 = (D4 = UI(c4, N4, 23) ^ Q5) + B4 | 0, B4 = (f3 ^ t4) + I7 | 0, s4 = B4 = Q5 >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = UI(p4, r4, 36), t4 = f3, B4 = UI(p4, r4, 30) ^ B4, D4 = f3 ^ t4, S4 = UI(p4, r4, 25) ^ B4, B4 = ((e6 | h4) & r4 | e6 & h4) + (f3 ^ D4) | 0, I7 = ((t4 = S4 + ((a4 | n5) & p4 | a4 & n5) | 0) >>> 0 < S4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, t4 = I7 = (D4 = Q5 + t4 | 0) >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, i4[C4 + 40 >> 2] = D4, i4[C4 + 44 >> 2] = I7, B4 = s4 + w4 | 0, w4 = B4 = (s4 = Q5 + E4 | 0) >>> 0 < E4 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 8 >> 2] = s4, i4[C4 + 12 >> 2] = B4, B4 = 34416 + (I7 = 88 | M4) | 0, E4 = i4[(I7 = K4 = I7 + g6 | 0) >> 2], Q5 = i4[B4 >> 2] + E4 | 0, I7 = i4[B4 + 4 >> 2] + i4[I7 + 4 >> 2] | 0, B4 = k4 + (Q5 >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = (F4 ^ (F4 ^ N4) & w4) + (B4 = (I7 = Q5 + y4 | 0) >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (Q5 = _4 ^ (_4 ^ c4) & s4) + I7 | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, Q5 = UI(s4, w4, 50), E4 = f3, Q5 = UI(s4, w4, 46) ^ Q5, E4 ^= f3, Q5 = (y4 = UI(s4, w4, 23) ^ Q5) + I7 | 0, I7 = (f3 ^ E4) + B4 | 0, I7 = Q5 >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7, B4 = UI(D4, t4, 36), E4 = f3, B4 = UI(D4, t4, 30) ^ B4, y4 = f3 ^ E4, S4 = UI(D4, t4, 25) ^ B4, B4 = ((e6 | r4) & t4 | e6 & r4) + (f3 ^ y4) | 0, B4 = ((E4 = S4 + ((p4 | n5) & D4 | p4 & n5) | 0) >>> 0 < S4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, y4 = B4 = (y4 = E4) >>> 0 > (E4 = Q5 + E4 | 0) >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 32 >> 2] = E4, i4[C4 + 36 >> 2] = B4, I7 = I7 + h4 | 0, h4 = I7 = (B4 = a4) >>> 0 > (a4 = Q5 + a4 | 0) >>> 0 ? I7 + 1 | 0 : I7, i4[C4 >> 2] = a4, i4[C4 + 4 >> 2] = I7, B4 = 34416 + (I7 = 96 | M4) | 0, S4 = i4[(I7 = v4 = I7 + g6 | 0) >> 2], Q5 = i4[B4 >> 2] + S4 | 0, B4 = i4[B4 + 4 >> 2] + i4[I7 + 4 >> 2] | 0, I7 = F4 + (Q5 >>> 0 < S4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = Q5 + _4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = (_4 = c4 ^ (c4 ^ s4) & a4) + B4 | 0, B4 = (N4 ^ (w4 ^ N4) & h4) + I7 | 0, B4 = Q5 >>> 0 < _4 >>> 0 ? B4 + 1 | 0 : B4, I7 = UI(a4, h4, 50), _4 = f3, I7 = UI(a4, h4, 46) ^ I7, _4 ^= f3, F4 = Q5, Q5 = UI(a4, h4, 23) ^ I7, B4 = (f3 ^ _4) + B4 | 0, k4 = B4 = (I7 = F4 + Q5 | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, Q5 = I7, I7 = UI(E4, y4, 36), _4 = f3, I7 = UI(E4, y4, 30) ^ I7, S4 = f3 ^ _4, F4 = UI(E4, y4, 25) ^ I7, I7 = ((t4 | r4) & y4 | t4 & r4) + (f3 ^ S4) | 0, B4 = ((_4 = F4 + ((p4 | D4) & E4 | p4 & D4) | 0) >>> 0 < F4 >>> 0 ? I7 + 1 | 0 : I7) + B4 | 0, _4 = B4 = (S4 = Q5 + _4 | 0) >>> 0 < _4 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 24 >> 2] = S4, i4[C4 + 28 >> 2] = B4, B4 = e6 + k4 | 0, e6 = B4 = (n5 = Q5 + n5 | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 56 >> 2] = n5, i4[C4 + 60 >> 2] = B4, B4 = 34416 + (I7 = 104 | M4) | 0, k4 = i4[(I7 = L4 = I7 + g6 | 0) >> 2], Q5 = i4[B4 >> 2] + k4 | 0, I7 = i4[B4 + 4 >> 2] + i4[I7 + 4 >> 2] | 0, B4 = N4 + (Q5 >>> 0 < k4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = (I7 = Q5 + c4 | 0) >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, Q5 = (c4 = s4 ^ (a4 ^ s4) & n5) + I7 | 0, I7 = (w4 ^ (h4 ^ w4) & e6) + B4 | 0, I7 = Q5 >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, B4 = UI(n5, e6, 50), c4 = f3, B4 = UI(n5, e6, 46) ^ B4, c4 ^= f3, k4 = UI(n5, e6, 23) ^ B4, B4 = (f3 ^ c4) + I7 | 0, F4 = B4 = (Q5 = k4 + Q5 | 0) >>> 0 < k4 >>> 0 ? B4 + 1 | 0 : B4, I7 = B4, B4 = UI(S4, _4, 36), c4 = f3, B4 = UI(S4, _4, 30) ^ B4, k4 = f3 ^ c4, N4 = UI(S4, _4, 25) ^ B4, B4 = ((t4 | y4) & _4 | t4 & y4) + (f3 ^ k4) | 0, I7 = ((c4 = N4 + ((E4 | D4) & S4 | E4 & D4) | 0) >>> 0 < N4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, c4 = I7 = (k4 = Q5 + c4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, i4[C4 + 16 >> 2] = k4, i4[C4 + 20 >> 2] = I7, I7 = r4 + F4 | 0, r4 = I7 = (p4 = Q5 + p4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, i4[C4 + 48 >> 2] = p4, i4[C4 + 52 >> 2] = I7, B4 = 34416 + (I7 = 112 | M4) | 0, F4 = i4[(Q5 = N4 = I7 + g6 | 0) >> 2], I7 = i4[B4 >> 2] + F4 | 0, B4 = i4[B4 + 4 >> 2] + i4[Q5 + 4 >> 2] | 0, B4 = w4 + (I7 >>> 0 < F4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (h4 ^ (e6 ^ h4) & r4) + (B4 = (I7 = I7 + s4 | 0) >>> 0 < s4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (I7 = (Q5 = a4 ^ (a4 ^ n5) & p4) + I7 | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, Q5 = UI(p4, r4, 50), s4 = f3, Q5 = UI(p4, r4, 46) ^ Q5, s4 ^= f3, Q5 = (w4 = UI(p4, r4, 23) ^ Q5) + I7 | 0, I7 = (f3 ^ s4) + B4 | 0, F4 = I7 = Q5 >>> 0 < w4 >>> 0 ? I7 + 1 | 0 : I7, B4 = I7, I7 = UI(k4, c4, 36), s4 = f3, I7 = UI(k4, c4, 30) ^ I7, w4 = f3 ^ s4, R4 = UI(k4, c4, 25) ^ I7, I7 = ((_4 | y4) & c4 | _4 & y4) + (f3 ^ w4) | 0, B4 = ((s4 = R4 + ((E4 | S4) & k4 | E4 & S4) | 0) >>> 0 < R4 >>> 0 ? I7 + 1 | 0 : I7) + B4 | 0, s4 = B4 = (w4 = Q5 + s4 | 0) >>> 0 < s4 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 8 >> 2] = w4, i4[C4 + 12 >> 2] = B4, B4 = t4 + F4 | 0, Q5 = B4 = (t4 = Q5 + D4 | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 40 >> 2] = t4, i4[C4 + 44 >> 2] = B4, B4 = 34416 + (I7 = 120 | M4) | 0, M4 = i4[(I7 = D4 = I7 + g6 | 0) >> 2], F4 = i4[B4 >> 2] + M4 | 0, B4 = i4[B4 + 4 >> 2] + i4[I7 + 4 >> 2] | 0, I7 = h4 + (F4 >>> 0 < M4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (e6 ^ (e6 ^ r4) & Q5) + (I7 = (B4 = a4 + F4 | 0) >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7) | 0, I7 = (B4 = (a4 = n5 ^ (p4 ^ n5) & t4) + B4 | 0) >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7, a4 = UI(t4, Q5, 50), e6 = f3, a4 = UI(t4, Q5, 46) ^ a4, e6 ^= f3, Q5 = (a4 = UI(t4, Q5, 23) ^ a4) + B4 | 0, B4 = (f3 ^ e6) + I7 | 0, B4 = Q5 >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4, a4 = Q5, e6 = B4, I7 = B4, B4 = UI(w4, s4, 36), t4 = f3, B4 = UI(w4, s4, 30) ^ B4, r4 = f3 ^ t4, h4 = UI(w4, s4, 25) ^ B4, B4 = ((_4 | c4) & s4 | _4 & c4) + (f3 ^ r4) | 0, I7 = ((t4 = h4 + ((k4 | S4) & w4 | k4 & S4) | 0) >>> 0 < h4 >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, I7 = (Q5 = Q5 + t4 | 0) >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, i4[C4 >> 2] = Q5, i4[C4 + 4 >> 2] = I7, B4 = e6 + y4 | 0, B4 = (r4 = E4) >>> 0 > (E4 = E4 + a4 | 0) >>> 0 ? B4 + 1 | 0 : B4, i4[C4 + 32 >> 2] = E4, i4[C4 + 36 >> 2] = B4, 64 != (0 | P7); ) c4 = ((P7 = P7 + 16 | 0) << 3) + g6 | 0, a4 = i4[G4 >> 2], _4 = i4[G4 + 4 >> 2], R4 = i4[b5 >> 2], e6 = I7 = i4[b5 + 4 >> 2], B4 = I7, Q5 = I7 = i4[N4 + 4 >> 2], I7 = UI(S4 = i4[N4 >> 2], I7, 45), E4 = f3, r4 = ((63 & Q5) << 26 | S4 >>> 6) ^ (I7 = UI(S4, Q5, 3) ^ I7), I7 = (Q5 >>> 6 ^ (t4 = f3 ^ E4)) + B4 | 0, B4 = ((E4 = r4 + R4 | 0) >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7) + _4 | 0, B4 = (I7 = E4 + a4 | 0) >>> 0 < E4 >>> 0 ? B4 + 1 | 0 : B4, a4 = E4 = i4[l4 + 4 >> 2], E4 = UI(_4 = i4[l4 >> 2], E4, 63), t4 = f3, E4 = ((127 & a4) << 25 | _4 >>> 7) ^ UI(_4, a4, 56) ^ E4, B4 = (f3 ^ t4 ^ a4 >>> 7) + B4 | 0, E4 = B4 = E4 >>> 0 > (k4 = E4 + I7 | 0) >>> 0 ? B4 + 1 | 0 : B4, i4[c4 >> 2] = k4, i4[c4 + 4 >> 2] = B4, _4 = (N4 = i4[U4 >> 2]) + _4 | 0, I7 = (c4 = i4[U4 + 4 >> 2]) + a4 | 0, B4 = _4 >>> 0 < N4 >>> 0 ? I7 + 1 | 0 : I7, a4 = I7 = i4[D4 + 4 >> 2], I7 = UI(F4 = i4[D4 >> 2], I7, 45), t4 = f3, r4 = _4, _4 = ((63 & a4) << 26 | F4 >>> 6) ^ UI(F4, a4, 3) ^ I7, B4 = (f3 ^ t4 ^ a4 >>> 6) + B4 | 0, _4 = _4 >>> 0 > (r4 = r4 + _4 | 0) >>> 0 ? B4 + 1 | 0 : B4, B4 = UI(t4 = i4[Y4 >> 2], I7 = i4[Y4 + 4 >> 2], 63), h4 = f3, s4 = r4, r4 = ((127 & I7) << 25 | t4 >>> 7) ^ UI(t4, I7, 56) ^ B4, B4 = (f3 ^ h4 ^ I7 >>> 7) + _4 | 0, _4 = B4 = r4 >>> 0 > (w4 = s4 + r4 | 0) >>> 0 ? B4 + 1 | 0 : B4, i4[G4 + 136 >> 2] = w4, i4[G4 + 140 >> 2] = B4, B4 = (U4 = i4[K4 >> 2]) + t4 | 0, I7 = (t4 = i4[K4 + 4 >> 2]) + I7 | 0, r4 = UI(k4, E4, 45), h4 = f3, r4 = (y4 = ((63 & E4) << 26 | k4 >>> 6) ^ UI(k4, E4, 3) ^ r4) + B4 | 0, B4 = (f3 ^ h4 ^ E4 >>> 6) + (B4 >>> 0 < U4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = r4 >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4, h4 = I7 = i4[u4 + 4 >> 2], I7 = UI(y4 = i4[u4 >> 2], I7, 63), n5 = f3, s4 = r4, r4 = ((127 & h4) << 25 | y4 >>> 7) ^ UI(y4, h4, 56) ^ I7, B4 = (f3 ^ n5 ^ h4 >>> 7) + B4 | 0, r4 = B4 = r4 >>> 0 > (M4 = s4 + r4 | 0) >>> 0 ? B4 + 1 | 0 : B4, i4[G4 + 144 >> 2] = M4, i4[G4 + 148 >> 2] = B4, y4 = (l4 = i4[v4 >> 2]) + y4 | 0, I7 = (I7 = h4) + (h4 = i4[v4 + 4 >> 2]) | 0, B4 = y4 >>> 0 < l4 >>> 0 ? I7 + 1 | 0 : I7, I7 = UI(w4, _4, 45), n5 = f3, p4 = ((63 & _4) << 26 | w4 >>> 6) ^ UI(w4, _4, 3) ^ I7, B4 = (f3 ^ n5 ^ _4 >>> 6) + B4 | 0, B4 = (y4 = p4 + y4 | 0) >>> 0 < p4 >>> 0 ? B4 + 1 | 0 : B4, n5 = I7 = i4[m4 + 4 >> 2], I7 = UI(p4 = i4[m4 >> 2], I7, 63), D4 = f3, s4 = y4, y4 = ((127 & n5) << 25 | p4 >>> 7) ^ UI(p4, n5, 56) ^ I7, B4 = (f3 ^ D4 ^ n5 >>> 7) + B4 | 0, y4 = B4 = y4 >>> 0 > (Y4 = s4 + y4 | 0) >>> 0 ? B4 + 1 | 0 : B4, i4[G4 + 152 >> 2] = Y4, i4[G4 + 156 >> 2] = B4, I7 = (u4 = i4[L4 >> 2]) + p4 | 0, B4 = (B4 = n5) + (n5 = i4[L4 + 4 >> 2]) | 0, p4 = UI(M4, r4, 45), D4 = f3, p4 = ((63 & r4) << 26 | M4 >>> 6) ^ UI(M4, r4, 3) ^ p4, B4 = (f3 ^ D4 ^ r4 >>> 6) + (I7 >>> 0 < u4 >>> 0 ? B4 + 1 | 0 : B4) | 0, p4 = (s4 = p4 + I7 | 0) >>> 0 < p4 >>> 0 ? B4 + 1 | 0 : B4, B4 = UI(D4 = i4[J4 >> 2], I7 = i4[J4 + 4 >> 2], 63), m4 = f3, K4 = s4, s4 = ((127 & I7) << 25 | D4 >>> 7) ^ (B4 = UI(D4, I7, 56) ^ B4), B4 = (I7 >>> 7 ^ (J4 = f3 ^ m4)) + p4 | 0, p4 = B4 = s4 >>> 0 > (m4 = K4 + s4 | 0) >>> 0 ? B4 + 1 | 0 : B4, i4[G4 + 160 >> 2] = m4, i4[G4 + 164 >> 2] = B4, I7 = I7 + Q5 | 0, I7 = (B4 = D4 + S4 | 0) >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7, D4 = UI(Y4, y4, 45), s4 = f3, D4 = (J4 = ((63 & y4) << 26 | Y4 >>> 6) ^ UI(Y4, y4, 3) ^ D4) + B4 | 0, B4 = (f3 ^ s4 ^ y4 >>> 6) + I7 | 0, B4 = D4 >>> 0 < J4 >>> 0 ? B4 + 1 | 0 : B4, s4 = i4[H4 >> 2], H4 = I7 = i4[H4 + 4 >> 2], I7 = UI(s4, I7, 63), J4 = f3, I7 = UI(s4, H4, 56) ^ I7, K4 = D4, B4 = (H4 >>> 7 ^ (b5 = f3 ^ J4)) + B4 | 0, D4 = B4 = (D4 = ((127 & H4) << 25 | s4 >>> 7) ^ I7) >>> 0 > (J4 = K4 + D4 | 0) >>> 0 ? B4 + 1 | 0 : B4, i4[G4 + 168 >> 2] = J4, i4[G4 + 172 >> 2] = B4, I7 = a4 + H4 | 0, I7 = (B4 = s4 + F4 | 0) >>> 0 < s4 >>> 0 ? I7 + 1 | 0 : I7, K4 = s4 = i4[d5 + 4 >> 2], s4 = UI(b5 = i4[d5 >> 2], s4, 63), H4 = f3, s4 = (d5 = ((127 & K4) << 25 | b5 >>> 7) ^ UI(b5, K4, 56) ^ s4) + B4 | 0, B4 = (f3 ^ H4 ^ K4 >>> 7) + I7 | 0, I7 = s4 >>> 0 < d5 >>> 0 ? B4 + 1 | 0 : B4, B4 = UI(m4, p4, 45), H4 = f3, B4 = UI(m4, p4, 3) ^ B4, d5 = f3 ^ H4, H4 = s4, I7 = (p4 >>> 6 ^ d5) + I7 | 0, s4 = I7 = (s4 = ((63 & p4) << 26 | m4 >>> 6) ^ B4) >>> 0 > (H4 = H4 + s4 | 0) >>> 0 ? I7 + 1 | 0 : I7, i4[G4 + 176 >> 2] = H4, i4[G4 + 180 >> 2] = I7, v4 = i4[x4 >> 2], x4 = I7 = i4[x4 + 4 >> 2], d5 = I7, I7 = UI(R4, e6, 63), B4 = f3, L4 = ((127 & e6) << 25 | R4 >>> 7) ^ UI(R4, e6, 56) ^ I7, I7 = (f3 ^ B4 ^ e6 >>> 7) + _4 | 0, B4 = ((w4 = L4 + w4 | 0) >>> 0 < L4 >>> 0 ? I7 + 1 | 0 : I7) + d5 | 0, B4 = (I7 = w4 + v4 | 0) >>> 0 < w4 >>> 0 ? B4 + 1 | 0 : B4, _4 = UI(H4, s4, 45), w4 = f3, d5 = (_4 = ((63 & s4) << 26 | H4 >>> 6) ^ UI(H4, s4, 3) ^ _4) + I7 | 0, I7 = (f3 ^ w4 ^ s4 >>> 6) + B4 | 0, _4 = I7 = _4 >>> 0 > d5 >>> 0 ? I7 + 1 | 0 : I7, i4[G4 + 192 >> 2] = d5, i4[G4 + 196 >> 2] = I7, B4 = E4 + K4 | 0, B4 = (I7 = k4 + b5 | 0) >>> 0 < b5 >>> 0 ? B4 + 1 | 0 : B4, w4 = UI(v4, x4, 63), b5 = f3, K4 = ((127 & x4) << 25 | v4 >>> 7) ^ UI(v4, x4, 56) ^ w4, B4 = (f3 ^ b5 ^ x4 >>> 7) + B4 | 0, I7 = (w4 = K4 + I7 | 0) >>> 0 < K4 >>> 0 ? B4 + 1 | 0 : B4, B4 = UI(J4, D4, 45), b5 = f3, B4 = UI(J4, D4, 3) ^ B4, x4 = w4, I7 = (D4 >>> 6 ^ (K4 = f3 ^ b5)) + I7 | 0, w4 = I7 = (w4 = ((63 & D4) << 26 | J4 >>> 6) ^ B4) >>> 0 > (b5 = x4 + w4 | 0) >>> 0 ? I7 + 1 | 0 : I7, i4[G4 + 184 >> 2] = b5, i4[G4 + 188 >> 2] = I7, I7 = UI(U4, t4, 63), B4 = f3, I7 = ((127 & t4) << 25 | U4 >>> 7) ^ UI(U4, t4, 56) ^ I7, B4 = (f3 ^ B4 ^ t4 >>> 7) + c4 | 0, I7 = y4 + (I7 >>> 0 > (K4 = I7 + N4 | 0) >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = Y4 + K4 | 0) >>> 0 < Y4 >>> 0 ? I7 + 1 | 0 : I7, y4 = UI(d5, _4, 45), Y4 = f3, y4 = UI(d5, _4, 3) ^ y4, K4 = f3 ^ Y4, Y4 = (y4 ^= (63 & _4) << 26 | d5 >>> 6) + B4 | 0, B4 = (_4 >>> 6 ^ K4) + I7 | 0, y4 = B4 = y4 >>> 0 > Y4 >>> 0 ? B4 + 1 | 0 : B4, i4[G4 + 208 >> 2] = Y4, i4[G4 + 212 >> 2] = B4, I7 = UI(N4, c4, 63), B4 = f3, K4 = UI(N4, c4, 56) ^ I7, B4 = ((I7 = c4 >>> 7 | 0) ^ f3 ^ B4) + e6 | 0, I7 = r4 + ((c4 = (N4 = K4 ^ ((127 & c4) << 25 | N4 >>> 7)) + R4 | 0) >>> 0 < N4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = c4 + M4 | 0) >>> 0 < M4 >>> 0 ? I7 + 1 | 0 : I7, e6 = UI(b5, w4, 45), c4 = f3, r4 = (e6 = ((63 & w4) << 26 | b5 >>> 6) ^ UI(b5, w4, 3) ^ e6) + B4 | 0, B4 = (f3 ^ c4 ^ w4 >>> 6) + I7 | 0, e6 = B4 = e6 >>> 0 > r4 >>> 0 ? B4 + 1 | 0 : B4, i4[G4 + 200 >> 2] = r4, i4[G4 + 204 >> 2] = B4, I7 = UI(u4, n5, 63), B4 = f3, N4 = ((127 & n5) << 25 | u4 >>> 7) ^ UI(u4, n5, 56) ^ I7, I7 = (f3 ^ B4 ^ n5 >>> 7) + h4 | 0, B4 = D4 + ((c4 = N4 + l4 | 0) >>> 0 < N4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = (I7 = c4 + J4 | 0) >>> 0 < J4 >>> 0 ? B4 + 1 | 0 : B4, c4 = UI(Y4, y4, 45), D4 = f3, N4 = I7, I7 = y4 >>> 6 | 0, c4 = ((63 & y4) << 26 | Y4 >>> 6) ^ UI(Y4, y4, 3) ^ c4, B4 = (I7 ^ f3 ^ D4) + B4 | 0, c4 = B4 = c4 >>> 0 > (y4 = N4 + c4 | 0) >>> 0 ? B4 + 1 | 0 : B4, i4[G4 + 224 >> 2] = y4, i4[G4 + 228 >> 2] = B4, I7 = UI(l4, h4, 63), B4 = f3, I7 = UI(l4, h4, 56) ^ I7, D4 = f3 ^ B4, N4 = ((127 & h4) << 25 | l4 >>> 7) ^ I7, I7 = ((B4 = h4 >>> 7 | 0) ^ D4) + t4 | 0, B4 = p4 + ((h4 = N4 + U4 | 0) >>> 0 < N4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = (I7 = h4 + m4 | 0) >>> 0 < m4 >>> 0 ? B4 + 1 | 0 : B4, t4 = UI(r4, e6, 45), h4 = f3, D4 = I7, I7 = e6 >>> 6 | 0, e6 = ((63 & e6) << 26 | r4 >>> 6) ^ UI(r4, e6, 3) ^ t4, I7 = (I7 ^ f3 ^ h4) + B4 | 0, e6 = I7 = (t4 = D4 + e6 | 0) >>> 0 < e6 >>> 0 ? I7 + 1 | 0 : I7, i4[G4 + 216 >> 2] = t4, i4[G4 + 220 >> 2] = I7, I7 = UI(F4, a4, 63), B4 = f3, h4 = ((127 & a4) << 25 | F4 >>> 7) ^ UI(F4, a4, 56) ^ I7, B4 = (f3 ^ B4 ^ a4 >>> 7) + Q5 | 0, B4 = w4 + ((I7 = h4 + S4 | 0) >>> 0 < h4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (r4 = I7 + b5 | 0) >>> 0 < b5 >>> 0 ? B4 + 1 | 0 : B4, B4 = UI(y4, c4, 45), h4 = f3, D4 = r4, r4 = UI(y4, c4, 3) ^ B4, B4 = c4 >>> 6 | 0, c4 = D4 + (r4 ^= (63 & c4) << 26 | y4 >>> 6) | 0, I7 = (B4 ^ f3 ^ h4) + I7 | 0, i4[G4 + 240 >> 2] = c4, i4[G4 + 244 >> 2] = c4 >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7, I7 = UI(S4, Q5, 63), B4 = f3, I7 = UI(S4, Q5, 56) ^ I7, c4 = f3 ^ B4, B4 = ((B4 = Q5 >>> 7 | 0) ^ c4) + n5 | 0, I7 = s4 + ((I7 ^= (127 & Q5) << 25 | S4 >>> 7) >>> 0 > (Q5 = I7 + u4 | 0) >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = Q5 + H4 | 0) >>> 0 < H4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = UI(t4, e6, 45), c4 = f3, r4 = B4, B4 = e6 >>> 6 | 0, Q5 = ((63 & e6) << 26 | t4 >>> 6) ^ UI(t4, e6, 3) ^ Q5, B4 = (B4 ^ f3 ^ c4) + I7 | 0, Q5 = B4 = Q5 >>> 0 > (e6 = r4 + Q5 | 0) >>> 0 ? B4 + 1 | 0 : B4, i4[G4 + 232 >> 2] = e6, i4[G4 + 236 >> 2] = B4, I7 = UI(k4, E4, 63), B4 = f3, r4 = UI(k4, E4, 56) ^ I7, B4 = ((I7 = E4 >>> 7 | 0) ^ f3 ^ B4) + a4 | 0, I7 = _4 + ((E4 = (c4 = r4 ^ ((127 & E4) << 25 | k4 >>> 7)) + F4 | 0) >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4) | 0, I7 = (B4 = E4 + d5 | 0) >>> 0 < d5 >>> 0 ? I7 + 1 | 0 : I7, E4 = UI(e6, Q5, 45), a4 = f3, r4 = B4, B4 = Q5 >>> 6 | 0, Q5 = r4 + (E4 = ((63 & Q5) << 26 | e6 >>> 6) ^ UI(e6, Q5, 3) ^ E4) | 0, B4 = (B4 ^ f3 ^ a4) + I7 | 0, i4[G4 + 248 >> 2] = Q5, i4[G4 + 252 >> 2] = Q5 >>> 0 < E4 >>> 0 ? B4 + 1 | 0 : B4;
                      I7 = I7 + i4[A8 + 4 >> 2] | 0, I7 = (g6 = Q5 + i4[A8 >> 2] | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, i4[A8 >> 2] = g6, i4[A8 + 4 >> 2] = I7, B4 = i4[A8 + 12 >> 2] + i4[C4 + 12 >> 2] | 0, I7 = (g6 = i4[C4 + 8 >> 2]) + i4[A8 + 8 >> 2] | 0, i4[A8 + 8 >> 2] = I7, i4[A8 + 12 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4, B4 = i4[A8 + 20 >> 2] + i4[C4 + 20 >> 2] | 0, I7 = (g6 = i4[C4 + 16 >> 2]) + i4[A8 + 16 >> 2] | 0, i4[A8 + 16 >> 2] = I7, i4[A8 + 20 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4, I7 = i4[A8 + 28 >> 2] + i4[C4 + 28 >> 2] | 0, g6 = (B4 = i4[C4 + 24 >> 2]) + i4[A8 + 24 >> 2] | 0, i4[A8 + 24 >> 2] = g6, i4[A8 + 28 >> 2] = g6 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = i4[A8 + 36 >> 2] + i4[C4 + 36 >> 2] | 0, I7 = (g6 = i4[C4 + 32 >> 2]) + i4[A8 + 32 >> 2] | 0, i4[A8 + 32 >> 2] = I7, i4[A8 + 36 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4, I7 = i4[A8 + 44 >> 2] + i4[C4 + 44 >> 2] | 0, g6 = (B4 = i4[C4 + 40 >> 2]) + i4[A8 + 40 >> 2] | 0, i4[A8 + 40 >> 2] = g6, i4[A8 + 44 >> 2] = g6 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = i4[A8 + 52 >> 2] + i4[C4 + 52 >> 2] | 0, I7 = (g6 = i4[C4 + 48 >> 2]) + i4[A8 + 48 >> 2] | 0, i4[A8 + 48 >> 2] = I7, i4[A8 + 52 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4, B4 = i4[A8 + 60 >> 2] + i4[C4 + 60 >> 2] | 0, I7 = (g6 = i4[C4 + 56 >> 2]) + i4[A8 + 56 >> 2] | 0, i4[A8 + 56 >> 2] = I7, i4[A8 + 60 >> 2] = I7 >>> 0 < g6 >>> 0 ? B4 + 1 | 0 : B4;
                    }
                    function F3(A8, I7) {
                      var g6, C4 = 0, B4 = 0, Q5 = 0, E4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, v4 = 0, R4 = 0, L4 = 0, P7 = 0, q3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, W2 = 0, V2 = 0, Z2 = 0, T2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, oA2 = 0, EA2 = 0, aA2 = 0, _A2 = 0, cA2 = 0, tA2 = 0, rA2 = 0, eA2 = 0, yA2 = 0;
                      if (s3 = g6 = s3 - 4096 | 0, A8) {
                        A: {
                          I: {
                            if (2 == (0 | (E4 = i4[A8 + 36 >> 2]))) {
                              if (oA2 = i4[A8 + 4 >> 2], (IA2 = i4[I7 >> 2]) | (V2 = o3[I7 + 8 | 0]) >>> 0 >= 2) break I;
                              IA2 = 0;
                            } else V2 = o3[I7 + 8 | 0], oA2 = i4[A8 + 4 >> 2], IA2 = i4[I7 >> 2];
                            if (bg(g6 + 3072 | 0, 0, 1024), bg(g6 + 2104 | 0, 0, 968), i4[g6 + 2048 >> 2] = IA2, i4[g6 + 2052 >> 2] = 0, u4 = i4[I7 + 4 >> 2], i4[g6 + 2064 >> 2] = V2, i4[g6 + 2068 >> 2] = 0, i4[g6 + 2056 >> 2] = u4, i4[g6 + 2060 >> 2] = 0, i4[g6 + 2072 >> 2] = i4[A8 + 16 >> 2], i4[g6 + 2076 >> 2] = 0, u4 = i4[A8 + 8 >> 2], i4[g6 + 2088 >> 2] = E4, i4[g6 + 2092 >> 2] = 0, i4[g6 + 2080 >> 2] = u4, i4[g6 + 2084 >> 2] = 0, !i4[A8 + 20 >> 2]) break A;
                            for (u4 = 0; (S4 = 127 & r4) || (u4 = (z2 = z2 + 1 | 0) ? u4 : u4 + 1 | 0, i4[g6 + 2096 >> 2] = z2, i4[g6 + 2100 >> 2] = u4, E4 = bg(g6, 0, 1024), bg(E4 + 1024 | 0, 0, 1024), N3(C4 = E4 + 3072 | 0, E4 + 2048 | 0, E4), N3(C4, E4, E4 + 1024 | 0)), S4 = i4[4 + (E4 = (g6 + 1024 | 0) + (S4 << 3) | 0) >> 2], i4[(C4 = (r4 << 3) + oA2 | 0) >> 2] = i4[E4 >> 2], i4[C4 + 4 >> 2] = S4, (S4 = i4[A8 + 20 >> 2]) >>> 0 > (r4 = r4 + 1 | 0) >>> 0; ) ;
                            break A;
                          }
                          S4 = i4[A8 + 20 >> 2], cA2 = 1;
                        }
                        if (!((u4 = (aA2 = !(V2 | IA2)) << 1) >>> 0 >= S4 >>> 0)) for (E4 = i4[A8 + 24 >> 2], iA2 = i4[I7 + 4 >> 2], r4 = (z2 = (a3(E4, iA2) + u4 | 0) + a3(S4, V2) | 0) + ((z2 >>> 0) % (E4 >>> 0) | 0 ? -1 : E4 - 1 | 0) | 0, tA2 = V2 + 1 | 0; ; ) {
                          C4 = i4[A8 + 28 >> 2], EA2 = 1 == ((z2 >>> 0) % ((E4 = i4[A8 + 24 >> 2]) >>> 0) | 0) ? z2 - 1 | 0 : r4, r4 = cA2 ? i4[i4[A8 >> 2] + 4 >> 2] + (EA2 << 10) | 0 : (u4 << 3) + oA2 | 0, B4 = i4[r4 >> 2], r4 = i4[r4 + 4 >> 2], i4[I7 + 12 >> 2] = u4, C4 = aA2 ? iA2 : (r4 >>> 0) % (C4 >>> 0) | 0;
                          A: if (IA2) r4 = E4 + ((0 | C4) == (0 | iA2) ? ~S4 + u4 | 0 : (u4 ? 0 : -1) - S4 | 0) | 0, Q5 = 0, 3 != (0 | V2) && (Q5 = a3(S4, tA2));
                          else {
                            if (!V2) {
                              r4 = u4 - 1 | 0, Q5 = 0;
                              break A;
                            }
                            if (r4 = a3(S4, V2), (0 | C4) == (0 | iA2)) {
                              r4 = (r4 + u4 | 0) - 1 | 0, Q5 = 0;
                              break A;
                            }
                            r4 = r4 - !u4 | 0, Q5 = 0;
                          }
                          S4 = Q5, c4 = (p4 = i4[i4[A8 >> 2] + 4 >> 2]) + (a3(C4, E4) << 10) | 0, y4 = (C4 = r4 - 1 | 0) >>> 0 > (Q5 = C4 + S4 | 0) >>> 0, Ig(B4, 0, B4, 0), Ig(r4, 0, f3, 0), S4 = Q5 - (r4 = f3) | 0, C4 = 0, e6 = 0;
                          A: {
                            I: {
                              g: {
                                C: {
                                  B: {
                                    Q: {
                                      i: {
                                        o: {
                                          E: {
                                            a: {
                                              if (r4 = y4 - (Q5 >>> 0 < r4 >>> 0) | 0) {
                                                if (!E4) break a;
                                                break E;
                                              }
                                              h3 = S4 - a3((S4 >>> 0) / (E4 >>> 0) | 0, E4) | 0, D3 = 0, f3 = 0;
                                              break A;
                                            }
                                            if (!S4) break o;
                                            break i;
                                          }
                                          if (!((B4 = E4 - 1 | 0) & E4)) break Q;
                                          t4 = 0 - (B4 = (_3(E4) + 33 | 0) - _3(r4) | 0) | 0;
                                          break C;
                                        }
                                        h3 = 0, D3 = r4, f3 = 0;
                                        break A;
                                      }
                                      if ((C4 = 32 - _3(r4) | 0) >>> 0 < 31) break B;
                                      break g;
                                    }
                                    if (h3 = B4 & S4, D3 = 0, 1 == (0 | E4)) break I;
                                    E4 = 31 & (S4 = FC(E4)), (63 & S4) >>> 0 >= 32 ? B4 = r4 >>> E4 | 0 : (C4 = r4 >>> E4 | 0, B4 = 0), f3 = C4;
                                    break A;
                                  }
                                  B4 = C4 + 1 | 0, t4 = 63 - C4 | 0;
                                }
                                if (Q5 = 31 & (C4 = 63 & B4), C4 >>> 0 >= 32 ? (C4 = 0, y4 = r4 >>> Q5 | 0) : (C4 = r4 >>> Q5 | 0, y4 = ((1 << Q5) - 1 & r4) << 32 - Q5 | S4 >>> Q5), Q5 = 31 & (t4 &= 63), t4 >>> 0 >= 32 ? (r4 = S4 << Q5, S4 = 0) : (r4 = (1 << Q5) - 1 & S4 >>> 32 - Q5 | r4 << Q5, S4 <<= Q5), B4) for (F4 = -1 == (0 | (t4 = E4 - 1 | 0)) ? -1 : 0; d5 = C4 << 1 | y4 >>> 31, y4 = (C4 = y4 << 1 | r4 >>> 31) - (b5 = E4 & (Q5 = F4 - (d5 + (C4 >>> 0 > t4 >>> 0) | 0) >> 31)) | 0, C4 = d5 - (C4 >>> 0 < b5 >>> 0) | 0, r4 = r4 << 1 | S4 >>> 31, S4 = e6 | S4 << 1, e6 = 1 & Q5, B4 = B4 - 1 | 0; ) ;
                                h3 = y4, D3 = C4, f3 = r4 << 1 | S4 >>> 31;
                                break A;
                              }
                              h3 = S4, D3 = r4, r4 = 0;
                            }
                            f3 = r4;
                          }
                          if (f3 = D3, r4 = (h3 << 10) + c4 | 0, E4 = p4 + (EA2 << 10) | 0, _A2 = p4 + (z2 << 10) | 0, IA2) N3(E4, r4, _A2);
                          else {
                            for (Ng(g6 + 3072 | 0, r4, 1024), r4 = 0; Q5 = i4[(B4 = (S4 = r4 << 3) + (C4 = g6 + 3072 | 0) | 0) >> 2], p4 = i4[(y4 = E4 + S4 | 0) >> 2], y4 = i4[B4 + 4 >> 2] ^ i4[y4 + 4 >> 2], i4[B4 >> 2] = Q5 ^ p4, i4[B4 + 4 >> 2] = y4, y4 = i4[(B4 = (Q5 = 8 | S4) + C4 | 0) >> 2], p4 = i4[(Q5 = E4 + Q5 | 0) >> 2], Q5 = i4[B4 + 4 >> 2] ^ i4[Q5 + 4 >> 2], i4[B4 >> 2] = y4 ^ p4, i4[B4 + 4 >> 2] = Q5, y4 = i4[(B4 = (Q5 = 16 | S4) + C4 | 0) >> 2], p4 = i4[(Q5 = E4 + Q5 | 0) >> 2], Q5 = i4[B4 + 4 >> 2] ^ i4[Q5 + 4 >> 2], i4[B4 >> 2] = y4 ^ p4, i4[B4 + 4 >> 2] = Q5, Q5 = i4[(S4 = (B4 = 24 | S4) + C4 | 0) >> 2], y4 = i4[(B4 = B4 + E4 | 0) >> 2], B4 = i4[S4 + 4 >> 2] ^ i4[B4 + 4 >> 2], i4[S4 >> 2] = Q5 ^ y4, i4[S4 + 4 >> 2] = B4, 128 != (0 | (r4 = r4 + 4 | 0)); ) ;
                            for (Ng(g6 + 2048 | 0, C4, 1024), S4 = 0, r4 = 0; Q5 = (y4 = i4[56 + (E4 = (g6 + 3072 | 0) + (r4 << 7) | 0) >> 2]) + (B4 = i4[E4 + 24 >> 2]) | 0, p4 = (F4 = i4[E4 + 60 >> 2]) + (C4 = i4[E4 + 28 >> 2]) | 0, e6 = Ig(B4 << 1 & -2, 1 & (C4 << 1 | B4 >>> 31), y4, 0), B4 = f3 + (B4 >>> 0 > Q5 >>> 0 ? p4 + 1 | 0 : p4) | 0, p4 = (C4 = e6 + Q5 | 0) >>> 0 < e6 >>> 0 ? B4 + 1 | 0 : B4, c4 = (e6 = UI(C4 ^ i4[E4 + 120 >> 2], p4 ^ i4[E4 + 124 >> 2], 32)) + (B4 = i4[E4 + 88 >> 2]) | 0, t4 = (k4 = f3) + (Q5 = i4[E4 + 92 >> 2]) | 0, d5 = Ig(e6, 0, B4 << 1 & -2, 1 & (Q5 << 1 | B4 >>> 31)), B4 = f3 + (B4 >>> 0 > c4 >>> 0 ? t4 + 1 | 0 : t4) | 0, b5 = UI(y4 ^ (Q5 = d5 + c4 | 0), F4 ^ (v4 = Q5 >>> 0 < d5 >>> 0 ? B4 + 1 | 0 : B4), 40), w4 = 1 + (B4 = p4 + (BA2 = f3) | 0) | 0, t4 = B4, y4 = (B4 = C4 + b5 | 0) >>> 0 < C4 >>> 0 ? w4 : t4, d5 = (C4 = Ig(b5, 0, C4 << 1 & -2, 1 & (p4 << 1 | C4 >>> 31))) + B4 | 0, B4 = f3 + y4 | 0, k4 = UI(d5 ^ e6, k4 ^ (X2 = C4 >>> 0 > d5 >>> 0 ? B4 + 1 | 0 : B4), 48), Y4 = w4 = f3, y4 = (n5 = i4[E4 + 44 >> 2]) + (C4 = i4[E4 + 12 >> 2]) | 0, e6 = (p4 = i4[E4 + 40 >> 2]) + (B4 = i4[E4 + 8 >> 2]) | 0, c4 = Ig(B4 << 1 & -2, 1 & (C4 << 1 | B4 >>> 31), p4, 0), B4 = f3 + (B4 >>> 0 > e6 >>> 0 ? y4 + 1 | 0 : y4) | 0, c4 = (C4 = e6 + c4 | 0) >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, e6 = (t4 = UI(C4 ^ i4[E4 + 104 >> 2], c4 ^ i4[E4 + 108 >> 2], 32)) + (y4 = i4[E4 + 72 >> 2]) | 0, F4 = (M4 = f3) + (B4 = i4[E4 + 76 >> 2]) | 0, G4 = Ig(t4, 0, y4 << 1 & -2, 1 & (B4 << 1 | y4 >>> 31)), y4 = f3 + (e6 >>> 0 < y4 >>> 0 ? F4 + 1 | 0 : F4) | 0, e6 = UI(H4 = p4 ^ (B4 = G4 + e6 | 0), n5 ^ (p4 = B4 >>> 0 < G4 >>> 0 ? y4 + 1 | 0 : y4), 40), G4 = 1 + (y4 = c4 + (F4 = f3) | 0) | 0, n5 = y4, n5 = (y4 = C4 + e6 | 0) >>> 0 < C4 >>> 0 ? G4 : n5, C4 = Ig(e6, 0, C4 << 1 & -2, 1 & (c4 << 1 | C4 >>> 31)), c4 = f3 + n5 | 0, n5 = UI((y4 = C4 + y4 | 0) ^ t4, M4 ^ (O2 = C4 >>> 0 > y4 >>> 0 ? c4 + 1 | 0 : c4), 48), G4 = 1 + (C4 = p4 + (QA2 = f3) | 0) | 0, t4 = C4, c4 = (C4 = B4 + n5 | 0) >>> 0 < B4 >>> 0 ? G4 : t4, p4 = C4 + (B4 = Ig(n5, 0, B4 << 1 & -2, 1 & (p4 << 1 | B4 >>> 31))) | 0, C4 = f3 + c4 | 0, M4 = UI(e6 ^ p4, F4 ^ (Z2 = B4 >>> 0 > p4 >>> 0 ? C4 + 1 | 0 : C4), 1), gA2 = H4 = f3, e6 = (J4 = i4[E4 + 36 >> 2]) + (C4 = i4[E4 + 4 >> 2]) | 0, t4 = (c4 = i4[E4 + 32 >> 2]) + (B4 = i4[E4 >> 2]) | 0, F4 = Ig(B4 << 1 & -2, 1 & (C4 << 1 | B4 >>> 31), c4, 0), B4 = f3 + (B4 >>> 0 > t4 >>> 0 ? e6 + 1 | 0 : e6) | 0, t4 = (C4 = t4 + F4 | 0) >>> 0 < F4 >>> 0 ? B4 + 1 | 0 : B4, F4 = (q3 = UI(C4 ^ i4[E4 + 96 >> 2], t4 ^ i4[E4 + 100 >> 2], 32)) + (B4 = i4[(e6 = j2 = E4 - -64 | 0) >> 2]) | 0, G4 = ($2 = f3) + (e6 = i4[e6 + 4 >> 2]) | 0, R4 = Ig(q3, 0, B4 << 1 & -2, 1 & (e6 << 1 | B4 >>> 31)), B4 = f3 + (B4 >>> 0 > F4 >>> 0 ? G4 + 1 | 0 : G4) | 0, G4 = UI(c4 ^ (e6 = R4 + F4 | 0), J4 ^ (R4 = e6 >>> 0 < R4 >>> 0 ? B4 + 1 | 0 : B4), 40), F4 = 1 + (B4 = t4 + (AA2 = f3) | 0) | 0, c4 = B4, c4 = (B4 = C4 + G4 | 0) >>> 0 < C4 >>> 0 ? F4 : c4, C4 = B4 + (t4 = Ig(G4, 0, C4 << 1 & -2, 1 & (t4 << 1 | C4 >>> 31))) | 0, B4 = f3 + c4 | 0, c4 = 1 + (B4 = (W2 = C4 >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4) + H4 | 0) | 0, t4 = B4, t4 = (B4 = C4 + M4 | 0) >>> 0 < C4 >>> 0 ? c4 : t4, c4 = B4 + (F4 = Ig(M4, 0, C4 << 1 & -2, 1 & (W2 << 1 | C4 >>> 31))) | 0, B4 = f3 + t4 | 0, w4 = UI(c4 ^ k4, (l4 = c4 >>> 0 < F4 >>> 0 ? B4 + 1 | 0 : B4) ^ w4, 32), L4 = f3, F4 = (K4 = i4[E4 + 52 >> 2]) + (B4 = i4[E4 + 20 >> 2]) | 0, J4 = (H4 = i4[E4 + 48 >> 2]) + (t4 = i4[E4 + 16 >> 2]) | 0, m4 = Ig(t4 << 1 & -2, 1 & (B4 << 1 | t4 >>> 31), H4, 0), t4 = f3 + (t4 >>> 0 > J4 >>> 0 ? F4 + 1 | 0 : F4) | 0, J4 = (B4 = J4 + m4 | 0) >>> 0 < m4 >>> 0 ? t4 + 1 | 0 : t4, P7 = (m4 = UI(B4 ^ i4[E4 + 112 >> 2], J4 ^ i4[E4 + 116 >> 2], 32)) + (F4 = i4[E4 + 80 >> 2]) | 0, x4 = (CA2 = f3) + (t4 = i4[E4 + 84 >> 2]) | 0, U4 = Ig(m4, 0, F4 << 1 & -2, 1 & (t4 << 1 | F4 >>> 31)), F4 = f3 + (F4 >>> 0 > P7 >>> 0 ? x4 + 1 | 0 : x4) | 0, H4 = UI(H4 ^ (t4 = U4 + P7 | 0), K4 ^ (P7 = t4 >>> 0 < U4 >>> 0 ? F4 + 1 | 0 : F4), 40), U4 = 1 + (F4 = J4 + (K4 = f3) | 0) | 0, x4 = F4, x4 = (F4 = B4 + H4 | 0) >>> 0 < B4 >>> 0 ? U4 : x4, B4 = Ig(H4, 0, B4 << 1 & -2, 1 & (J4 << 1 | B4 >>> 31)), J4 = f3 + x4 | 0, J4 = UI(U4 = (F4 = B4 + F4 | 0) ^ m4, CA2 ^ (m4 = B4 >>> 0 > F4 >>> 0 ? J4 + 1 | 0 : J4), 48), U4 = 1 + (B4 = P7 + (CA2 = f3) | 0) | 0, x4 = B4, x4 = (B4 = t4 + J4 | 0) >>> 0 < t4 >>> 0 ? U4 : x4, t4 = Ig(J4, 0, t4 << 1 & -2, 1 & (P7 << 1 | t4 >>> 31)), P7 = f3 + x4 | 0, U4 = 1 + (t4 = (P7 = (B4 = t4 + B4 | 0) >>> 0 < t4 >>> 0 ? P7 + 1 | 0 : P7) + L4 | 0) | 0, x4 = t4, x4 = (t4 = B4 + w4 | 0) >>> 0 < B4 >>> 0 ? U4 : x4, T2 = M4 ^ (t4 = (U4 = Ig(w4, 0, B4 << 1 & -2, 1 & (P7 << 1 | B4 >>> 31))) + t4 | 0), M4 = f3 + x4 | 0, M4 = UI(T2, gA2 ^ (x4 = t4 >>> 0 < U4 >>> 0 ? M4 + 1 | 0 : M4), 40), rA2 = 1 + (U4 = l4 + (gA2 = f3) | 0) | 0, T2 = U4, T2 = (U4 = c4 + M4 | 0) >>> 0 < c4 >>> 0 ? rA2 : T2, c4 = (l4 = Ig(M4, 0, c4 << 1 & -2, 1 & (l4 << 1 | c4 >>> 31))) + U4 | 0, i4[E4 >> 2] = c4, U4 = f3 + T2 | 0, l4 = c4 >>> 0 < l4 >>> 0 ? U4 + 1 | 0 : U4, i4[E4 + 4 >> 2] = l4, c4 = UI(c4 ^ w4, l4 ^ L4, 48), i4[E4 + 120 >> 2] = c4, w4 = f3, i4[E4 + 124 >> 2] = w4, T2 = 1 + (w4 = w4 + x4 | 0) | 0, U4 = w4, l4 = (w4 = c4 + t4 | 0) >>> 0 < t4 >>> 0 ? T2 : U4, c4 = (t4 = Ig(c4, 0, t4 << 1 & -2, 1 & (x4 << 1 | t4 >>> 31))) + w4 | 0, i4[E4 + 80 >> 2] = c4, w4 = f3 + l4 | 0, t4 = c4 >>> 0 < t4 >>> 0 ? w4 + 1 | 0 : w4, i4[E4 + 84 >> 2] = t4, eA2 = E4, yA2 = UI(c4 ^ M4, t4 ^ gA2, 1), i4[eA2 + 40 >> 2] = yA2, i4[E4 + 44 >> 2] = f3, c4 = UI(B4 ^ H4, K4 ^ P7, 1), w4 = 1 + (B4 = O2 + (H4 = f3) | 0) | 0, t4 = B4, t4 = (B4 = c4 + y4 | 0) >>> 0 < y4 >>> 0 ? w4 : t4, B4 = B4 + (M4 = Ig(c4, 0, y4 << 1 & -2, 1 & (O2 << 1 | y4 >>> 31))) | 0, y4 = f3 + t4 | 0, t4 = UI(C4 ^ q3, W2 ^ $2, 48), y4 = UI(t4 ^ B4, (M4 = B4 >>> 0 < M4 >>> 0 ? y4 + 1 | 0 : y4) ^ (O2 = f3), 32), q3 = w4 = f3, K4 = 1 + (C4 = v4 + Y4 | 0) | 0, Y4 = C4, W2 = (C4 = Q5 + k4 | 0) >>> 0 < Q5 >>> 0 ? K4 : Y4, Q5 = Ig(k4, 0, Q5 << 1 & -2, 1 & (v4 << 1 | Q5 >>> 31)), k4 = f3 + W2 | 0, Y4 = 1 + (Q5 = (k4 = (C4 = Q5 + C4 | 0) >>> 0 < Q5 >>> 0 ? k4 + 1 | 0 : k4) + w4 | 0) | 0, w4 = Q5, w4 = (Q5 = C4 + y4 | 0) >>> 0 < C4 >>> 0 ? Y4 : w4, Y4 = c4 ^ (Q5 = (v4 = Ig(y4, 0, C4 << 1 & -2, 1 & (k4 << 1 | C4 >>> 31))) + Q5 | 0), c4 = f3 + w4 | 0, c4 = UI(Y4, H4 ^ (w4 = Q5 >>> 0 < v4 >>> 0 ? c4 + 1 | 0 : c4), 40), K4 = 1 + (v4 = M4 + (H4 = f3) | 0) | 0, Y4 = v4, W2 = (v4 = B4 + c4 | 0) >>> 0 < B4 >>> 0 ? K4 : Y4, Y4 = y4 ^ (B4 = (M4 = Ig(c4, 0, B4 << 1 & -2, 1 & (M4 << 1 | B4 >>> 31))) + v4 | 0), y4 = f3 + W2 | 0, y4 = UI(Y4, q3 ^ (M4 = B4 >>> 0 < M4 >>> 0 ? y4 + 1 | 0 : y4), 48), i4[E4 + 96 >> 2] = y4, v4 = f3, i4[E4 + 100 >> 2] = v4, i4[E4 + 8 >> 2] = B4, i4[E4 + 12 >> 2] = M4, K4 = 1 + (B4 = w4 + v4 | 0) | 0, Y4 = B4, M4 = (B4 = Q5 + y4 | 0) >>> 0 < Q5 >>> 0 ? K4 : Y4, Q5 = Ig(y4, 0, Q5 << 1 & -2, 1 & (w4 << 1 | Q5 >>> 31)), y4 = f3 + M4 | 0, eA2 = E4, yA2 = UI((B4 = Q5 + B4 | 0) ^ c4, H4 ^ (Q5 = B4 >>> 0 < Q5 >>> 0 ? y4 + 1 | 0 : y4), 1), i4[eA2 + 48 >> 2] = yA2, i4[E4 + 52 >> 2] = f3, i4[E4 + 88 >> 2] = B4, i4[E4 + 92 >> 2] = Q5, y4 = UI(C4 ^ b5, k4 ^ BA2, 1), Q5 = 1 + (C4 = m4 + (b5 = f3) | 0) | 0, B4 = C4, Q5 = (C4 = y4 + F4 | 0) >>> 0 < F4 >>> 0 ? Q5 : B4, B4 = C4 + (c4 = Ig(y4, 0, F4 << 1 & -2, 1 & (m4 << 1 | F4 >>> 31))) | 0, C4 = f3 + Q5 | 0, c4 = UI(B4 ^ n5, QA2 ^ (F4 = B4 >>> 0 < c4 >>> 0 ? C4 + 1 | 0 : C4), 32), k4 = Q5 = f3, w4 = 1 + (C4 = R4 + O2 | 0) | 0, Q5 = C4, n5 = (C4 = e6 + t4 | 0) >>> 0 < e6 >>> 0 ? w4 : Q5, e6 = Ig(t4, 0, e6 << 1 & -2, 1 & (R4 << 1 | e6 >>> 31)), Q5 = f3 + n5 | 0, w4 = 1 + (Q5 = k4 + (e6 = (C4 = e6 + C4 | 0) >>> 0 < e6 >>> 0 ? Q5 + 1 | 0 : Q5) | 0) | 0, t4 = Q5, t4 = (Q5 = C4 + c4 | 0) >>> 0 < C4 >>> 0 ? w4 : t4, w4 = y4 ^ (Q5 = Q5 + (n5 = Ig(c4, 0, C4 << 1 & -2, 1 & (e6 << 1 | C4 >>> 31))) | 0), y4 = f3 + t4 | 0, y4 = UI(w4, b5 ^ (t4 = Q5 >>> 0 < n5 >>> 0 ? y4 + 1 | 0 : y4), 40), Y4 = 1 + (n5 = F4 + (b5 = f3) | 0) | 0, w4 = n5, M4 = (n5 = B4 + y4 | 0) >>> 0 < B4 >>> 0 ? Y4 : w4, B4 = (F4 = Ig(y4, 0, B4 << 1 & -2, 1 & (F4 << 1 | B4 >>> 31))) + n5 | 0, i4[E4 + 16 >> 2] = B4, n5 = f3 + M4 | 0, F4 = B4 >>> 0 < F4 >>> 0 ? n5 + 1 | 0 : n5, i4[E4 + 20 >> 2] = F4, B4 = UI(B4 ^ c4, F4 ^ k4, 48), i4[E4 + 104 >> 2] = B4, c4 = f3, i4[E4 + 108 >> 2] = c4, w4 = 1 + (c4 = c4 + t4 | 0) | 0, k4 = c4, F4 = (c4 = B4 + Q5 | 0) >>> 0 < Q5 >>> 0 ? w4 : k4, Q5 = (B4 = Ig(B4, 0, Q5 << 1 & -2, 1 & (t4 << 1 | Q5 >>> 31))) + c4 | 0, c4 = f3 + F4 | 0, F4 = B4 = B4 >>> 0 > Q5 >>> 0 ? c4 + 1 | 0 : c4, i4[j2 >> 2] = Q5, i4[j2 + 4 >> 2] = B4, B4 = (e6 = UI(C4 ^ G4, e6 ^ AA2, 1)) + d5 | 0, c4 = (k4 = f3) + X2 | 0, C4 = (t4 = Ig(d5 << 1 & -2, 1 & (X2 << 1 | d5 >>> 31), e6, 0)) + B4 | 0, B4 = f3 + (B4 >>> 0 < e6 >>> 0 ? c4 + 1 | 0 : c4) | 0, c4 = UI(C4 ^ J4, CA2 ^ (t4 = C4 >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4), 32), n5 = 1 + (B4 = Z2 + (d5 = f3) | 0) | 0, w4 = B4, n5 = (B4 = c4 + p4 | 0) >>> 0 < p4 >>> 0 ? n5 : w4, w4 = e6 ^ (B4 = (p4 = Ig(c4, 0, p4 << 1 & -2, 1 & (Z2 << 1 | p4 >>> 31))) + B4 | 0), e6 = f3 + n5 | 0, p4 = UI(w4, k4 ^ (e6 = B4 >>> 0 < p4 >>> 0 ? e6 + 1 | 0 : e6), 40), G4 = 1 + (n5 = t4 + (k4 = f3) | 0) | 0, w4 = n5, M4 = (n5 = C4 + p4 | 0) >>> 0 < C4 >>> 0 ? G4 : w4, w4 = c4 ^ (t4 = (C4 = Ig(p4, 0, C4 << 1 & -2, 1 & (t4 << 1 | C4 >>> 31))) + n5 | 0), c4 = f3 + M4 | 0, C4 = UI(w4, d5 ^ (c4 = C4 >>> 0 > t4 >>> 0 ? c4 + 1 | 0 : c4), 48), G4 = 1 + (n5 = e6 + (d5 = f3) | 0) | 0, w4 = n5, M4 = (n5 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? G4 : w4, B4 = (e6 = Ig(C4, 0, B4 << 1 & -2, 1 & (e6 << 1 | B4 >>> 31))) + n5 | 0, i4[E4 + 72 >> 2] = B4, n5 = f3 + M4 | 0, e6 = B4 >>> 0 < e6 >>> 0 ? n5 + 1 | 0 : n5, i4[E4 + 76 >> 2] = e6, i4[E4 + 112 >> 2] = C4, i4[E4 + 116 >> 2] = d5, i4[E4 + 24 >> 2] = t4, i4[E4 + 28 >> 2] = c4, eA2 = E4, yA2 = UI(Q5 ^ y4, F4 ^ b5, 1), i4[eA2 + 56 >> 2] = yA2, i4[E4 + 60 >> 2] = f3, eA2 = E4, yA2 = UI(B4 ^ p4, e6 ^ k4, 1), i4[eA2 + 32 >> 2] = yA2, i4[E4 + 36 >> 2] = f3, 8 != (0 | (r4 = r4 + 1 | 0)); ) ;
                            for (; B4 = (Q5 = i4[392 + (E4 = (g6 + 3072 | 0) + (S4 << 4) | 0) >> 2]) + (C4 = i4[E4 + 136 >> 2]) | 0, y4 = (t4 = i4[E4 + 396 >> 2]) + (r4 = i4[E4 + 140 >> 2]) | 0, p4 = Ig(C4 << 1 & -2, 1 & (r4 << 1 | C4 >>> 31), Q5, 0), C4 = f3 + (C4 >>> 0 > B4 >>> 0 ? y4 + 1 | 0 : y4) | 0, y4 = (r4 = p4 + B4 | 0) >>> 0 < p4 >>> 0 ? C4 + 1 | 0 : C4, e6 = (p4 = UI(r4 ^ i4[E4 + 904 >> 2], y4 ^ i4[E4 + 908 >> 2], 32)) + (C4 = i4[E4 + 648 >> 2]) | 0, c4 = (b5 = f3) + (B4 = i4[E4 + 652 >> 2]) | 0, F4 = Ig(p4, 0, C4 << 1 & -2, 1 & (B4 << 1 | C4 >>> 31)), C4 = f3 + (C4 >>> 0 > e6 >>> 0 ? c4 + 1 | 0 : c4) | 0, d5 = UI(Q5 ^ (B4 = F4 + e6 | 0), t4 ^ (J4 = B4 >>> 0 < F4 >>> 0 ? C4 + 1 | 0 : C4), 40), t4 = 1 + (C4 = y4 + (P7 = f3) | 0) | 0, Q5 = C4, Q5 = (C4 = r4 + d5 | 0) >>> 0 < r4 >>> 0 ? t4 : Q5, F4 = (r4 = Ig(d5, 0, r4 << 1 & -2, 1 & (y4 << 1 | r4 >>> 31))) + C4 | 0, C4 = f3 + Q5 | 0, b5 = UI(F4 ^ p4, b5 ^ (v4 = r4 >>> 0 > F4 >>> 0 ? C4 + 1 | 0 : C4), 48), x4 = G4 = f3, Q5 = (k4 = i4[E4 + 268 >> 2]) + (r4 = i4[E4 + 12 >> 2]) | 0, p4 = (y4 = i4[E4 + 264 >> 2]) + (C4 = i4[E4 + 8 >> 2]) | 0, e6 = Ig(C4 << 1 & -2, 1 & (r4 << 1 | C4 >>> 31), y4, 0), C4 = f3 + (C4 >>> 0 > p4 >>> 0 ? Q5 + 1 | 0 : Q5) | 0, e6 = (r4 = p4 + e6 | 0) >>> 0 < e6 >>> 0 ? C4 + 1 | 0 : C4, p4 = (c4 = UI(r4 ^ i4[E4 + 776 >> 2], e6 ^ i4[E4 + 780 >> 2], 32)) + (Q5 = i4[E4 + 520 >> 2]) | 0, t4 = (n5 = f3) + (C4 = i4[E4 + 524 >> 2]) | 0, M4 = Ig(c4, 0, Q5 << 1 & -2, 1 & (C4 << 1 | Q5 >>> 31)), Q5 = f3 + (Q5 >>> 0 > p4 >>> 0 ? t4 + 1 | 0 : t4) | 0, p4 = UI(w4 = y4 ^ (C4 = M4 + p4 | 0), k4 ^ (y4 = C4 >>> 0 < M4 >>> 0 ? Q5 + 1 | 0 : Q5), 40), w4 = 1 + (Q5 = e6 + (t4 = f3) | 0) | 0, k4 = Q5, k4 = (Q5 = r4 + p4 | 0) >>> 0 < r4 >>> 0 ? w4 : k4, r4 = Ig(p4, 0, r4 << 1 & -2, 1 & (e6 << 1 | r4 >>> 31)), e6 = f3 + k4 | 0, k4 = UI((Q5 = r4 + Q5 | 0) ^ c4, n5 ^ (X2 = Q5 >>> 0 < r4 >>> 0 ? e6 + 1 | 0 : e6), 48), n5 = 1 + (r4 = y4 + (BA2 = f3) | 0) | 0, w4 = r4, e6 = (r4 = C4 + k4 | 0) >>> 0 < C4 >>> 0 ? n5 : w4, y4 = r4 + (C4 = Ig(k4, 0, C4 << 1 & -2, 1 & (y4 << 1 | C4 >>> 31))) | 0, r4 = f3 + e6 | 0, n5 = UI(p4 ^ y4, t4 ^ (O2 = C4 >>> 0 > y4 >>> 0 ? r4 + 1 | 0 : r4), 1), Y4 = w4 = f3, p4 = (H4 = i4[E4 + 260 >> 2]) + (r4 = i4[E4 + 4 >> 2]) | 0, c4 = (e6 = i4[E4 + 256 >> 2]) + (C4 = i4[E4 >> 2]) | 0, t4 = Ig(C4 << 1 & -2, 1 & (r4 << 1 | C4 >>> 31), e6, 0), C4 = f3 + (C4 >>> 0 > c4 >>> 0 ? p4 + 1 | 0 : p4) | 0, c4 = (r4 = c4 + t4 | 0) >>> 0 < t4 >>> 0 ? C4 + 1 | 0 : C4, t4 = (Z2 = UI(r4 ^ i4[E4 + 768 >> 2], c4 ^ i4[E4 + 772 >> 2], 32)) + (C4 = i4[E4 + 512 >> 2]) | 0, M4 = (QA2 = f3) + (p4 = i4[E4 + 516 >> 2]) | 0, q3 = Ig(Z2, 0, C4 << 1 & -2, 1 & (p4 << 1 | C4 >>> 31)), C4 = f3 + (C4 >>> 0 > t4 >>> 0 ? M4 + 1 | 0 : M4) | 0, M4 = UI(e6 ^ (p4 = q3 + t4 | 0), H4 ^ (q3 = p4 >>> 0 < q3 >>> 0 ? C4 + 1 | 0 : C4), 40), e6 = 1 + (C4 = c4 + (gA2 = f3) | 0) | 0, t4 = C4, e6 = (C4 = r4 + M4 | 0) >>> 0 < r4 >>> 0 ? e6 : t4, r4 = C4 + (c4 = Ig(M4, 0, r4 << 1 & -2, 1 & (c4 << 1 | r4 >>> 31))) | 0, C4 = f3 + e6 | 0, w4 = 1 + (C4 = (j2 = r4 >>> 0 < c4 >>> 0 ? C4 + 1 | 0 : C4) + w4 | 0) | 0, t4 = C4, c4 = (C4 = r4 + n5 | 0) >>> 0 < r4 >>> 0 ? w4 : t4, e6 = C4 + (t4 = Ig(n5, 0, r4 << 1 & -2, 1 & (j2 << 1 | r4 >>> 31))) | 0, C4 = f3 + c4 | 0, G4 = UI(e6 ^ b5, (R4 = e6 >>> 0 < t4 >>> 0 ? C4 + 1 | 0 : C4) ^ G4, 32), W2 = f3, t4 = ($2 = i4[E4 + 388 >> 2]) + (C4 = i4[E4 + 132 >> 2]) | 0, H4 = (w4 = i4[E4 + 384 >> 2]) + (c4 = i4[E4 + 128 >> 2]) | 0, l4 = Ig(c4 << 1 & -2, 1 & (C4 << 1 | c4 >>> 31), w4, 0), c4 = f3 + (c4 >>> 0 > H4 >>> 0 ? t4 + 1 | 0 : t4) | 0, H4 = (C4 = H4 + l4 | 0) >>> 0 < l4 >>> 0 ? c4 + 1 | 0 : c4, L4 = (l4 = UI(C4 ^ i4[E4 + 896 >> 2], H4 ^ i4[E4 + 900 >> 2], 32)) + (t4 = i4[E4 + 640 >> 2]) | 0, m4 = (AA2 = f3) + (c4 = i4[E4 + 644 >> 2]) | 0, K4 = Ig(l4, 0, t4 << 1 & -2, 1 & (c4 << 1 | t4 >>> 31)), t4 = f3 + (t4 >>> 0 > L4 >>> 0 ? m4 + 1 | 0 : m4) | 0, w4 = UI(w4 ^ (c4 = K4 + L4 | 0), $2 ^ (L4 = c4 >>> 0 < K4 >>> 0 ? t4 + 1 | 0 : t4), 40), U4 = 1 + (t4 = H4 + ($2 = f3) | 0) | 0, K4 = t4, m4 = (t4 = C4 + w4 | 0) >>> 0 < C4 >>> 0 ? U4 : K4, C4 = Ig(w4, 0, C4 << 1 & -2, 1 & (H4 << 1 | C4 >>> 31)), H4 = f3 + m4 | 0, H4 = UI(K4 = (t4 = C4 + t4 | 0) ^ l4, AA2 ^ (l4 = C4 >>> 0 > t4 >>> 0 ? H4 + 1 | 0 : H4), 48), U4 = 1 + (C4 = L4 + (AA2 = f3) | 0) | 0, K4 = C4, m4 = (C4 = c4 + H4 | 0) >>> 0 < c4 >>> 0 ? U4 : K4, c4 = Ig(H4, 0, c4 << 1 & -2, 1 & (L4 << 1 | c4 >>> 31)), L4 = f3 + m4 | 0, U4 = 1 + (c4 = (L4 = (C4 = c4 + C4 | 0) >>> 0 < c4 >>> 0 ? L4 + 1 | 0 : L4) + W2 | 0) | 0, K4 = c4, m4 = (c4 = C4 + G4 | 0) >>> 0 < C4 >>> 0 ? U4 : K4, U4 = n5 ^ (c4 = (K4 = Ig(G4, 0, C4 << 1 & -2, 1 & (L4 << 1 | C4 >>> 31))) + c4 | 0), n5 = f3 + m4 | 0, n5 = UI(U4, Y4 ^ (m4 = c4 >>> 0 < K4 >>> 0 ? n5 + 1 | 0 : n5), 40), T2 = 1 + (K4 = R4 + (Y4 = f3) | 0) | 0, U4 = K4, CA2 = (K4 = e6 + n5 | 0) >>> 0 < e6 >>> 0 ? T2 : U4, e6 = (R4 = Ig(n5, 0, e6 << 1 & -2, 1 & (R4 << 1 | e6 >>> 31))) + K4 | 0, i4[E4 >> 2] = e6, K4 = f3 + CA2 | 0, R4 = e6 >>> 0 < R4 >>> 0 ? K4 + 1 | 0 : K4, i4[E4 + 4 >> 2] = R4, e6 = UI(e6 ^ G4, R4 ^ W2, 48), i4[E4 + 904 >> 2] = e6, G4 = f3, i4[E4 + 908 >> 2] = G4, U4 = 1 + (G4 = G4 + m4 | 0) | 0, K4 = G4, R4 = (G4 = c4 + e6 | 0) >>> 0 < c4 >>> 0 ? U4 : K4, e6 = (c4 = Ig(e6, 0, c4 << 1 & -2, 1 & (m4 << 1 | c4 >>> 31))) + G4 | 0, i4[E4 + 640 >> 2] = e6, G4 = f3 + R4 | 0, c4 = c4 >>> 0 > e6 >>> 0 ? G4 + 1 | 0 : G4, i4[E4 + 644 >> 2] = c4, eA2 = E4, yA2 = UI(e6 ^ n5, c4 ^ Y4, 1), i4[eA2 + 264 >> 2] = yA2, i4[E4 + 268 >> 2] = f3, e6 = UI(C4 ^ w4, L4 ^ $2, 1), G4 = 1 + (C4 = X2 + (w4 = f3) | 0) | 0, n5 = C4, c4 = (C4 = Q5 + e6 | 0) >>> 0 < Q5 >>> 0 ? G4 : n5, C4 = C4 + (n5 = Ig(e6, 0, Q5 << 1 & -2, 1 & (X2 << 1 | Q5 >>> 31))) | 0, Q5 = f3 + c4 | 0, c4 = UI(r4 ^ Z2, j2 ^ QA2, 48), Q5 = UI(c4 ^ C4, (n5 = C4 >>> 0 < n5 >>> 0 ? Q5 + 1 | 0 : Q5) ^ (X2 = f3), 32), Z2 = G4 = f3, K4 = 1 + (r4 = J4 + x4 | 0) | 0, Y4 = r4, j2 = (r4 = B4 + b5 | 0) >>> 0 < B4 >>> 0 ? K4 : Y4, B4 = Ig(b5, 0, B4 << 1 & -2, 1 & (J4 << 1 | B4 >>> 31)), b5 = f3 + j2 | 0, Y4 = 1 + (B4 = (b5 = B4 >>> 0 > (r4 = B4 + r4 | 0) >>> 0 ? b5 + 1 | 0 : b5) + G4 | 0) | 0, G4 = B4, G4 = (B4 = Q5 + r4 | 0) >>> 0 < r4 >>> 0 ? Y4 : G4, Y4 = e6 ^ (B4 = (J4 = Ig(Q5, 0, r4 << 1 & -2, 1 & (b5 << 1 | r4 >>> 31))) + B4 | 0), e6 = f3 + G4 | 0, e6 = UI(Y4, w4 ^ (G4 = B4 >>> 0 < J4 >>> 0 ? e6 + 1 | 0 : e6), 40), K4 = 1 + (J4 = n5 + (w4 = f3) | 0) | 0, Y4 = J4, j2 = (J4 = C4 + e6 | 0) >>> 0 < C4 >>> 0 ? K4 : Y4, Y4 = Q5 ^ (C4 = (n5 = Ig(e6, 0, C4 << 1 & -2, 1 & (n5 << 1 | C4 >>> 31))) + J4 | 0), Q5 = f3 + j2 | 0, Q5 = UI(Y4, Z2 ^ (n5 = C4 >>> 0 < n5 >>> 0 ? Q5 + 1 | 0 : Q5), 48), i4[E4 + 768 >> 2] = Q5, J4 = f3, i4[E4 + 772 >> 2] = J4, i4[E4 + 8 >> 2] = C4, i4[E4 + 12 >> 2] = n5, Y4 = 1 + (C4 = G4 + J4 | 0) | 0, n5 = C4, n5 = (C4 = B4 + Q5 | 0) >>> 0 < B4 >>> 0 ? Y4 : n5, B4 = Ig(Q5, 0, B4 << 1 & -2, 1 & (G4 << 1 | B4 >>> 31)), Q5 = f3 + n5 | 0, eA2 = E4, yA2 = UI((C4 = B4 + C4 | 0) ^ e6, w4 ^ (B4 = C4 >>> 0 < B4 >>> 0 ? Q5 + 1 | 0 : Q5), 1), i4[eA2 + 384 >> 2] = yA2, i4[E4 + 388 >> 2] = f3, i4[E4 + 648 >> 2] = C4, i4[E4 + 652 >> 2] = B4, Q5 = UI(r4 ^ d5, b5 ^ P7, 1), B4 = 1 + (r4 = l4 + (d5 = f3) | 0) | 0, C4 = r4, B4 = (r4 = Q5 + t4 | 0) >>> 0 < t4 >>> 0 ? B4 : C4, C4 = r4 + (e6 = Ig(Q5, 0, t4 << 1 & -2, 1 & (l4 << 1 | t4 >>> 31))) | 0, r4 = f3 + B4 | 0, e6 = UI(C4 ^ k4, BA2 ^ (t4 = C4 >>> 0 < e6 >>> 0 ? r4 + 1 | 0 : r4), 32), b5 = B4 = f3, k4 = 1 + (r4 = q3 + X2 | 0) | 0, B4 = r4, k4 = (r4 = c4 + p4 | 0) >>> 0 < p4 >>> 0 ? k4 : B4, p4 = Ig(c4, 0, p4 << 1 & -2, 1 & (q3 << 1 | p4 >>> 31)), B4 = f3 + k4 | 0, w4 = 1 + (B4 = b5 + (p4 = (r4 = p4 + r4 | 0) >>> 0 < p4 >>> 0 ? B4 + 1 | 0 : B4) | 0) | 0, k4 = B4, c4 = (B4 = r4 + e6 | 0) >>> 0 < r4 >>> 0 ? w4 : k4, w4 = Q5 ^ (B4 = B4 + (k4 = Ig(e6, 0, r4 << 1 & -2, 1 & (p4 << 1 | r4 >>> 31))) | 0), Q5 = f3 + c4 | 0, Q5 = UI(w4, d5 ^ (c4 = B4 >>> 0 < k4 >>> 0 ? Q5 + 1 | 0 : Q5), 40), n5 = 1 + (k4 = t4 + (d5 = f3) | 0) | 0, w4 = k4, n5 = (k4 = C4 + Q5 | 0) >>> 0 < C4 >>> 0 ? n5 : w4, C4 = (t4 = Ig(Q5, 0, C4 << 1 & -2, 1 & (t4 << 1 | C4 >>> 31))) + k4 | 0, i4[E4 + 128 >> 2] = C4, k4 = f3 + n5 | 0, t4 = C4 >>> 0 < t4 >>> 0 ? k4 + 1 | 0 : k4, i4[E4 + 132 >> 2] = t4, C4 = UI(C4 ^ e6, t4 ^ b5, 48), i4[E4 + 776 >> 2] = C4, e6 = f3, i4[E4 + 780 >> 2] = e6, k4 = 1 + (e6 = c4 + e6 | 0) | 0, t4 = e6, t4 = (e6 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? k4 : t4, B4 = (C4 = Ig(C4, 0, B4 << 1 & -2, 1 & (c4 << 1 | B4 >>> 31))) + e6 | 0, e6 = f3 + t4 | 0, t4 = C4 = C4 >>> 0 > B4 >>> 0 ? e6 + 1 | 0 : e6, i4[E4 + 512 >> 2] = B4, i4[E4 + 516 >> 2] = C4, C4 = (p4 = UI(r4 ^ M4, p4 ^ gA2, 1)) + F4 | 0, e6 = (b5 = f3) + v4 | 0, r4 = (c4 = Ig(F4 << 1 & -2, 1 & (v4 << 1 | F4 >>> 31), p4, 0)) + C4 | 0, C4 = f3 + (C4 >>> 0 < p4 >>> 0 ? e6 + 1 | 0 : e6) | 0, e6 = UI(r4 ^ H4, AA2 ^ (c4 = r4 >>> 0 < c4 >>> 0 ? C4 + 1 | 0 : C4), 32), w4 = 1 + (C4 = O2 + (F4 = f3) | 0) | 0, k4 = C4, k4 = (C4 = e6 + y4 | 0) >>> 0 < y4 >>> 0 ? w4 : k4, w4 = p4 ^ (C4 = (y4 = Ig(e6, 0, y4 << 1 & -2, 1 & (O2 << 1 | y4 >>> 31))) + C4 | 0), p4 = f3 + k4 | 0, y4 = UI(w4, b5 ^ (p4 = C4 >>> 0 < y4 >>> 0 ? p4 + 1 | 0 : p4), 40), n5 = 1 + (k4 = c4 + (b5 = f3) | 0) | 0, w4 = k4, n5 = (k4 = r4 + y4 | 0) >>> 0 < r4 >>> 0 ? n5 : w4, k4 = e6 ^ (c4 = (r4 = Ig(y4, 0, r4 << 1 & -2, 1 & (c4 << 1 | r4 >>> 31))) + k4 | 0), e6 = f3 + n5 | 0, r4 = UI(k4, F4 ^ (e6 = r4 >>> 0 > c4 >>> 0 ? e6 + 1 | 0 : e6), 48), n5 = 1 + (k4 = p4 + (F4 = f3) | 0) | 0, w4 = k4, n5 = (k4 = C4 + r4 | 0) >>> 0 < C4 >>> 0 ? n5 : w4, C4 = (p4 = Ig(r4, 0, C4 << 1 & -2, 1 & (p4 << 1 | C4 >>> 31))) + k4 | 0, i4[E4 + 520 >> 2] = C4, k4 = f3 + n5 | 0, p4 = C4 >>> 0 < p4 >>> 0 ? k4 + 1 | 0 : k4, i4[E4 + 524 >> 2] = p4, i4[E4 + 896 >> 2] = r4, i4[E4 + 900 >> 2] = F4, i4[E4 + 136 >> 2] = c4, i4[E4 + 140 >> 2] = e6, eA2 = E4, yA2 = UI(B4 ^ Q5, t4 ^ d5, 1), i4[eA2 + 392 >> 2] = yA2, i4[E4 + 396 >> 2] = f3, eA2 = E4, yA2 = UI(C4 ^ y4, p4 ^ b5, 1), i4[eA2 + 256 >> 2] = yA2, i4[E4 + 260 >> 2] = f3, 8 != (0 | (S4 = S4 + 1 | 0)); ) ;
                            for (E4 = Ng(_A2, g6 + 2048 | 0, 1024), r4 = 0; Q5 = i4[(C4 = (S4 = r4 << 3) + E4 | 0) >> 2], p4 = i4[(y4 = (B4 = g6 + 3072 | 0) + S4 | 0) >> 2], y4 = i4[C4 + 4 >> 2] ^ i4[y4 + 4 >> 2], i4[C4 >> 2] = Q5 ^ p4, i4[C4 + 4 >> 2] = y4, y4 = i4[(C4 = (Q5 = 8 | S4) + E4 | 0) >> 2], p4 = i4[(Q5 = B4 + Q5 | 0) >> 2], Q5 = i4[C4 + 4 >> 2] ^ i4[Q5 + 4 >> 2], i4[C4 >> 2] = y4 ^ p4, i4[C4 + 4 >> 2] = Q5, y4 = i4[(C4 = (Q5 = 16 | S4) + E4 | 0) >> 2], p4 = i4[(Q5 = B4 + Q5 | 0) >> 2], Q5 = i4[C4 + 4 >> 2] ^ i4[Q5 + 4 >> 2], i4[C4 >> 2] = y4 ^ p4, i4[C4 + 4 >> 2] = Q5, Q5 = i4[(S4 = (C4 = 24 | S4) + E4 | 0) >> 2], B4 = i4[(C4 = C4 + B4 | 0) >> 2], C4 = i4[S4 + 4 >> 2] ^ i4[C4 + 4 >> 2], i4[S4 >> 2] = B4 ^ Q5, i4[S4 + 4 >> 2] = C4, 128 != (0 | (r4 = r4 + 4 | 0)); ) ;
                          }
                          if (r4 = EA2 + 1 | 0, z2 = z2 + 1 | 0, !((S4 = i4[A8 + 20 >> 2]) >>> 0 > (u4 = u4 + 1 | 0) >>> 0)) break;
                        }
                      }
                      s3 = g6 + 4096 | 0;
                    }
                    function S3(A8) {
                      var I7, g6, B4, Q5, i5, E4, a4, _4, c4, t4, r4, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, v4 = 0, R4 = 0, L4 = 0, P7 = 0, q3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, W2 = 0, V2 = 0, Z2 = 0;
                      h4 = (U4 = o3[A8 + 44 | 0] | o3[A8 + 45 | 0] << 8 | o3[A8 + 46 | 0] << 16 | o3[A8 + 47 | 0] << 24) >>> 5 & 2097151, s4 = Ig(I7 = (o3[A8 + 60 | 0] | o3[A8 + 61 | 0] << 8 | o3[A8 + 62 | 0] << 16 | o3[A8 + 63 | 0] << 24) >>> 3 | 0, 0, -683901, -1), y4 = (e6 = o3[A8 + 44 | 0]) << 16 & 2031616 | o3[A8 + 42 | 0] | o3[A8 + 43 | 0] << 8, e6 = f3, n5 = e6 = y4 >>> 0 > (F4 = s4 + y4 | 0) >>> 0 ? e6 + 1 | 0 : e6, M4 = e6 = e6 - ((F4 >>> 0 < 4293918720) - 1 | 0) | 0, s4 = e6 >> 21, e6 = (y4 = h4) + (h4 = (2097151 & e6) << 11 | (p4 = F4 - -1048576 | 0) >>> 21) | 0, y4 = s4, m4 = y4 = e6 >>> 0 < h4 >>> 0 ? y4 + 1 | 0 : y4, z2 = e6, G4 = Ig(e6, y4, -683901, -1), k4 = f3, w4 = Ig(g6 = (o3[A8 + 49 | 0] | o3[A8 + 50 | 0] << 8 | o3[A8 + 51 | 0] << 16 | o3[A8 + 52 | 0] << 24) >>> 7 & 2097151, 0, -997805, -1), s4 = (e6 = o3[A8 + 27 | 0]) >>> 24 | 0, h4 = e6 << 8 | (K4 = o3[A8 + 23 | 0] | o3[A8 + 24 | 0] << 8 | o3[A8 + 25 | 0] << 16 | o3[A8 + 26 | 0] << 24) >>> 24, y4 = (e6 = o3[A8 + 28 | 0]) >>> 16 | 0, y4 = 2097151 & ((3 & (y4 |= s4)) << 30 | (e6 = h4 | e6 << 16) >>> 2), e6 = f3, e6 = y4 >>> 0 > (s4 = y4 + w4 | 0) >>> 0 ? e6 + 1 | 0 : e6, y4 = Ig(P7 = (S4 = o3[A8 + 52 | 0] | o3[A8 + 53 | 0] << 8 | o3[A8 + 54 | 0] << 16 | o3[A8 + 55 | 0] << 24) >>> 4 & 2097151, 0, 654183, 0), e6 = f3 + e6 | 0, w4 = s4 = y4 + s4 | 0, s4 = y4 >>> 0 > s4 >>> 0 ? e6 + 1 | 0 : e6, D4 = (y4 = o3[A8 + 48 | 0]) << 8 | U4 >>> 24, y4 = e6 = y4 >>> 24 | 0, e6 = Ig(B4 = 2097151 & ((3 & (U4 = (e6 = (h4 = o3[A8 + 49 | 0]) >>> 16 | 0) | y4)) << 30 | (y4 = (h4 <<= 16) | D4) >>> 2), 0, 136657, 0), s4 = f3 + s4 | 0, s4 = e6 >>> 0 > (y4 = e6 + w4 | 0) >>> 0 ? s4 + 1 | 0 : s4, h4 = (e6 = Ig(Q5 = (o3[A8 + 57 | 0] | o3[A8 + 58 | 0] << 8 | o3[A8 + 59 | 0] << 16 | o3[A8 + 60 | 0] << 24) >>> 6 & 2097151, 0, 666643, 0)) + y4 | 0, y4 = f3 + s4 | 0, w4 = h4, s4 = e6 >>> 0 > h4 >>> 0 ? y4 + 1 | 0 : y4, y4 = (e6 = o3[A8 + 56 | 0]) >>> 24 | 0, D4 = e6 << 8 | S4 >>> 24, y4 = Ig(i5 = 2097151 & ((1 & (S4 = (e6 = (h4 = o3[A8 + 57 | 0]) >>> 16 | 0) | y4)) << 31 | (y4 = (h4 <<= 16) | D4) >>> 1), 0, 470296, 0), e6 = f3 + s4 | 0, y4 = (e6 = (s4 = h4 = y4 + w4 | 0) >>> 0 < y4 >>> 0 ? e6 + 1 | 0 : e6) + k4 | 0, y4 = s4 >>> 0 > (h4 = s4 + G4 | 0) >>> 0 ? y4 + 1 | 0 : y4, b5 = s4 - -1048576 | 0, l4 = s4 = e6 - ((s4 >>> 0 < 4293918720) - 1 | 0) | 0, k4 = h4 - (e6 = -2097152 & b5) | 0, G4 = y4 - ((e6 >>> 0 > h4 >>> 0) + s4 | 0) | 0, y4 = Ig(g6, 0, 654183, 0), e6 = f3, e6 = y4 >>> 0 > (s4 = y4 + (K4 >>> 5 & 2097151) | 0) >>> 0 ? e6 + 1 | 0 : e6, h4 = (y4 = s4) + (s4 = Ig(P7, 0, 470296, 0)) | 0, y4 = f3 + e6 | 0, y4 = s4 >>> 0 > h4 >>> 0 ? y4 + 1 | 0 : y4, e6 = Ig(B4, j2, -997805, -1), y4 = f3 + y4 | 0, y4 = e6 >>> 0 > (s4 = e6 + h4 | 0) >>> 0 ? y4 + 1 | 0 : y4, h4 = (e6 = s4) + (s4 = Ig(i5, X2, 666643, 0)) | 0, e6 = f3 + y4 | 0, D4 = h4, h4 = s4 >>> 0 > h4 >>> 0 ? e6 + 1 | 0 : e6, w4 = (s4 = Ig(g6, 0, 470296, 0)) + (e6 = (e6 = o3[A8 + 23 | 0]) << 16 & 2031616 | o3[A8 + 21 | 0] | o3[A8 + 22 | 0] << 8) | 0, s4 = f3, s4 = e6 >>> 0 > w4 >>> 0 ? s4 + 1 | 0 : s4, w4 = (y4 = Ig(P7, 0, 666643, 0)) + w4 | 0, e6 = f3 + s4 | 0, s4 = Ig(B4, j2, 654183, 0), y4 = f3 + (y4 >>> 0 > w4 >>> 0 ? e6 + 1 | 0 : e6) | 0, S4 = y4 = s4 >>> 0 > (K4 = s4 + w4 | 0) >>> 0 ? y4 + 1 | 0 : y4, L4 = y4 = y4 - ((K4 >>> 0 < 4293918720) - 1 | 0) | 0, e6 = (e6 = y4 >>> 21 | 0) + h4 | 0, s4 = e6 = (y4 = (2097151 & y4) << 11 | (w4 = K4 - -1048576 | 0) >>> 21) >>> 0 > (D4 = y4 + D4 | 0) >>> 0 ? e6 + 1 | 0 : e6, N4 = y4 = e6 - ((D4 >>> 0 < 4293918720) - 1 | 0) | 0, e6 = k4, k4 = (2097151 & y4) << 11 | (h4 = D4 - -1048576 | 0) >>> 21, y4 = (y4 >> 21) + G4 | 0, U4 = k4 = (y4 = k4 >>> 0 > (H4 = e6 + k4 | 0) >>> 0 ? y4 + 1 | 0 : y4) - ((H4 >>> 0 < 4293918720) - 1 | 0) | 0, q3 = H4 - (e6 = -2097152 & (G4 = H4 - -1048576 | 0)) | 0, O2 = y4 - ((e6 >>> 0 > H4 >>> 0) + k4 | 0) | 0, e6 = Ig(z2, m4, 136657, 0), s4 = f3 + s4 | 0, s4 = e6 >>> 0 > (y4 = e6 + D4 | 0) >>> 0 ? s4 + 1 | 0 : s4, d5 = y4 - (e6 = -2097152 & h4) | 0, Y4 = s4 - ((e6 >>> 0 > y4 >>> 0) + N4 | 0) | 0, H4 = F4 - (e6 = -2097152 & p4) | 0, M4 = n5 - ((e6 >>> 0 > F4 >>> 0) + M4 | 0) | 0, n5 = Ig(I7, 0, 136657, 0), y4 = (e6 = o3[A8 + 40 | 0]) >>> 24 | 0, h4 = e6 << 8 | (p4 = o3[A8 + 36 | 0] | o3[A8 + 37 | 0] << 8 | o3[A8 + 38 | 0] << 16 | o3[A8 + 39 | 0] << 24) >>> 24, s4 = (e6 = o3[A8 + 41 | 0]) >>> 16 | 0, y4 = (s4 |= y4) >>> 3 | 0, s4 = (7 & s4) << 29 | (e6 = h4 | e6 << 16) >>> 3, e6 = y4 + f3 | 0, e6 = s4 >>> 0 > (h4 = s4 + n5 | 0) >>> 0 ? e6 + 1 | 0 : e6, y4 = Ig(Q5, 0, -683901, -1), e6 = f3 + e6 | 0, e6 = y4 >>> 0 > (s4 = y4 + h4 | 0) >>> 0 ? e6 + 1 | 0 : e6, D4 = s4, y4 = Ig(I7, 0, -997805, -1), s4 = f3, s4 = y4 >>> 0 > (h4 = y4 + (p4 >>> 6 & 2097151) | 0) >>> 0 ? s4 + 1 | 0 : s4, p4 = (y4 = h4) + (h4 = Ig(Q5, 0, 136657, 0)) | 0, y4 = f3 + s4 | 0, s4 = Ig(i5, X2, -683901, -1), y4 = f3 + (h4 >>> 0 > p4 >>> 0 ? y4 + 1 | 0 : y4) | 0, k4 = y4 = s4 >>> 0 > (u4 = s4 + p4 | 0) >>> 0 ? y4 + 1 | 0 : y4, W2 = s4 = y4 - ((u4 >>> 0 < 4293918720) - 1 | 0) | 0, e6 = e6 + (y4 = s4 >> 21) | 0, p4 = e6 = (s4 = (2097151 & s4) << 11 | (F4 = u4 - -1048576 | 0) >>> 21) >>> 0 > (N4 = s4 + D4 | 0) >>> 0 ? e6 + 1 | 0 : e6, x4 = e6 = e6 - ((N4 >>> 0 < 4293918720) - 1 | 0) | 0, y4 = (y4 = e6 >> 21) + M4 | 0, R4 = y4 = (e6 = (s4 = (2097151 & e6) << 11 | (D4 = N4 - -1048576 | 0) >>> 21) + H4 | 0) >>> 0 < s4 >>> 0 ? y4 + 1 | 0 : y4, v4 = e6, y4 = Ig(e6, y4, -683901, -1), e6 = f3 + Y4 | 0, J4 = s4 = y4 + d5 | 0, h4 = y4 >>> 0 > s4 >>> 0 ? e6 + 1 | 0 : e6, H4 = K4 - (e6 = -2097152 & w4) | 0, M4 = S4 - ((4095 & L4) + (e6 >>> 0 > K4 >>> 0) | 0) | 0, K4 = Ig(g6, 0, 666643, 0), e6 = (y4 = o3[A8 + 19 | 0]) >>> 24 | 0, w4 = y4 << 8 | (S4 = o3[A8 + 15 | 0] | o3[A8 + 16 | 0] << 8 | o3[A8 + 17 | 0] << 16 | o3[A8 + 18 | 0] << 24) >>> 24, s4 = e6, y4 = (7 & (s4 |= y4 = (e6 = o3[A8 + 20 | 0]) >>> 16 | 0)) << 29 | (y4 = (e6 <<= 16) | w4) >>> 3, s4 = f3 + (s4 >>> 3 | 0) | 0, s4 = y4 >>> 0 > (w4 = y4 + K4 | 0) >>> 0 ? s4 + 1 | 0 : s4, e6 = Ig(B4, j2, 470296, 0), y4 = f3 + s4 | 0, e6 = e6 >>> 0 > (w4 = e6 + w4 | 0) >>> 0 ? y4 + 1 | 0 : y4, s4 = Ig(B4, j2, 666643, 0), y4 = f3, K4 = y4 = s4 >>> 0 > (d5 = s4 + (S4 >>> 6 & 2097151) | 0) >>> 0 ? y4 + 1 | 0 : y4, V2 = s4 = y4 - ((d5 >>> 0 < 4293918720) - 1 | 0) | 0, e6 = e6 + (y4 = s4 >>> 21 | 0) | 0, S4 = e6 = (s4 = (2097151 & s4) << 11 | (n5 = d5 - -1048576 | 0) >>> 21) >>> 0 > (Y4 = s4 + w4 | 0) >>> 0 ? e6 + 1 | 0 : e6, Z2 = e6 = e6 - ((Y4 >>> 0 < 4293918720) - 1 | 0) | 0, y4 = (y4 = e6 >>> 21 | 0) + M4 | 0, y4 = (e6 = (2097151 & e6) << 11 | (w4 = Y4 - -1048576 | 0) >>> 21) >>> 0 > (s4 = e6 + H4 | 0) >>> 0 ? y4 + 1 | 0 : y4, M4 = (e6 = s4) + (s4 = Ig(z2, m4, -997805, -1)) | 0, e6 = f3 + y4 | 0, e6 = s4 >>> 0 > M4 >>> 0 ? e6 + 1 | 0 : e6, L4 = y4 = N4 - (s4 = -2097152 & D4) | 0, E4 = D4 = p4 - ((s4 >>> 0 > N4 >>> 0) + x4 | 0) | 0, s4 = Ig(v4, R4, 136657, 0), e6 = f3 + e6 | 0, e6 = s4 >>> 0 > (p4 = s4 + M4 | 0) >>> 0 ? e6 + 1 | 0 : e6, s4 = Ig(y4, D4, -683901, -1), y4 = f3 + e6 | 0, p4 = y4 = s4 >>> 0 > (M4 = s4 + p4 | 0) >>> 0 ? y4 + 1 | 0 : y4, x4 = e6 = y4 - ((M4 >>> 0 < 4293918720) - 1 | 0) | 0, y4 = (2097151 & e6) << 11 | (D4 = M4 - -1048576 | 0) >>> 21, e6 = (e6 >> 21) + h4 | 0, J4 = y4 = (e6 = y4 >>> 0 > (N4 = y4 + J4 | 0) >>> 0 ? e6 + 1 | 0 : e6) - ((N4 >>> 0 < 4293918720) - 1 | 0) | 0, H4 = (2097151 & y4) << 11 | (h4 = N4 - -1048576 | 0) >>> 21, y4 = (y4 >> 21) + O2 | 0, _4 = q3 = H4 + q3 | 0, H4 = H4 >>> 0 > q3 >>> 0 ? y4 + 1 | 0 : y4, c4 = N4 - (y4 = -2097152 & h4) | 0, t4 = e6 - ((y4 >>> 0 > N4 >>> 0) + J4 | 0) | 0, q3 = M4 - (e6 = -2097152 & D4) | 0, O2 = p4 - ((e6 >>> 0 > M4 >>> 0) + x4 | 0) | 0, s4 = (e6 = Ig(z2, m4, 654183, 0)) + (Y4 - (y4 = -2097152 & w4) | 0) | 0, y4 = f3 + (S4 - ((2147483647 & Z2) + (y4 >>> 0 > Y4 >>> 0) | 0) | 0) | 0, y4 = e6 >>> 0 > s4 >>> 0 ? y4 + 1 | 0 : y4, e6 = Ig(v4, R4, -997805, -1), y4 = f3 + y4 | 0, y4 = e6 >>> 0 > (s4 = e6 + s4 | 0) >>> 0 ? y4 + 1 | 0 : y4, h4 = (e6 = s4) + (s4 = Ig(L4, E4, 136657, 0)) | 0, e6 = f3 + y4 | 0, J4 = h4, p4 = s4 >>> 0 > h4 >>> 0 ? e6 + 1 | 0 : e6, Y4 = u4 - (e6 = -2097152 & F4) | 0, N4 = k4 - ((e6 >>> 0 > u4 >>> 0) + W2 | 0) | 0, S4 = Ig(P7, 0, -683901, -1), e6 = (y4 = o3[A8 + 35 | 0]) >>> 24 | 0, h4 = y4 << 8 | (w4 = o3[A8 + 31 | 0] | o3[A8 + 32 | 0] << 8 | o3[A8 + 33 | 0] << 16 | o3[A8 + 34 | 0] << 24) >>> 24, s4 = e6, y4 = (e6 = o3[A8 + 36 | 0]) >>> 16 | 0, y4 |= s4, s4 = f3, s4 = (e6 = 2097151 & ((1 & y4) << 31 | (e6 = e6 << 16 | h4) >>> 1)) >>> 0 > (y4 = e6 + S4 | 0) >>> 0 ? s4 + 1 | 0 : s4, h4 = (e6 = Ig(I7, 0, 654183, 0)) + y4 | 0, y4 = f3 + s4 | 0, y4 = e6 >>> 0 > h4 >>> 0 ? y4 + 1 | 0 : y4, s4 = Ig(Q5, 0, -997805, -1), e6 = f3 + y4 | 0, e6 = s4 >>> 0 > (h4 = s4 + h4 | 0) >>> 0 ? e6 + 1 | 0 : e6, y4 = Ig(i5, X2, 136657, 0), e6 = f3 + e6 | 0, D4 = s4 = y4 + h4 | 0, h4 = y4 >>> 0 > s4 >>> 0 ? e6 + 1 | 0 : e6, e6 = Ig(g6, 0, -683901, -1), y4 = f3, y4 = e6 >>> 0 > (s4 = e6 + (w4 >>> 4 & 2097151) | 0) >>> 0 ? y4 + 1 | 0 : y4, w4 = (e6 = Ig(P7, 0, 136657, 0)) + s4 | 0, s4 = f3 + y4 | 0, s4 = e6 >>> 0 > w4 >>> 0 ? s4 + 1 | 0 : s4, e6 = Ig(I7, 0, 470296, 0), y4 = f3 + s4 | 0, y4 = e6 >>> 0 > (w4 = e6 + w4 | 0) >>> 0 ? y4 + 1 | 0 : y4, w4 = (s4 = Ig(Q5, 0, 654183, 0)) + w4 | 0, e6 = f3 + y4 | 0, y4 = Ig(i5, X2, -997805, -1), e6 = f3 + (s4 >>> 0 > w4 >>> 0 ? e6 + 1 | 0 : e6) | 0, S4 = e6 = y4 >>> 0 > (k4 = y4 + w4 | 0) >>> 0 ? e6 + 1 | 0 : e6, r4 = y4 = e6 - ((k4 >>> 0 < 4293918720) - 1 | 0) | 0, s4 = (e6 = y4 >> 21) + h4 | 0, M4 = y4 = (s4 = (y4 = (2097151 & y4) << 11 | (w4 = k4 - -1048576 | 0) >>> 21) >>> 0 > (F4 = y4 + D4 | 0) >>> 0 ? s4 + 1 | 0 : s4) - ((F4 >>> 0 < 4293918720) - 1 | 0) | 0, e6 = (e6 = y4 >> 21) + N4 | 0, x4 = e6 = (y4 = (h4 = (2097151 & y4) << 11 | (D4 = F4 - -1048576 | 0) >>> 21) + Y4 | 0) >>> 0 < h4 >>> 0 ? e6 + 1 | 0 : e6, h4 = J4, J4 = y4, e6 = Ig(y4, e6, -683901, -1), y4 = f3 + p4 | 0, N4 = h4 = h4 + e6 | 0, h4 = e6 >>> 0 > h4 >>> 0 ? y4 + 1 | 0 : y4, p4 = (e6 = Ig(z2, m4, 470296, 0)) + (d5 - (y4 = -2097152 & n5) | 0) | 0, y4 = f3 + (K4 - ((2047 & V2) + (y4 >>> 0 > d5 >>> 0) | 0) | 0) | 0, y4 = e6 >>> 0 > p4 >>> 0 ? y4 + 1 | 0 : y4, n5 = (e6 = p4) + (p4 = Ig(v4, R4, 654183, 0)) | 0, e6 = f3 + y4 | 0, e6 = p4 >>> 0 > n5 >>> 0 ? e6 + 1 | 0 : e6, p4 = Ig(L4, E4, -997805, -1), y4 = f3 + e6 | 0, y4 = p4 >>> 0 > (n5 = p4 + n5 | 0) >>> 0 ? y4 + 1 | 0 : y4, u4 = D4 = F4 - (e6 = -2097152 & D4) | 0, a4 = p4 = s4 - ((e6 >>> 0 > F4 >>> 0) + M4 | 0) | 0, s4 = Ig(J4, x4, 136657, 0), e6 = f3 + y4 | 0, e6 = s4 >>> 0 > (n5 = s4 + n5 | 0) >>> 0 ? e6 + 1 | 0 : e6, s4 = Ig(D4, p4, -683901, -1), y4 = f3 + e6 | 0, p4 = y4 = s4 >>> 0 > (K4 = s4 + n5 | 0) >>> 0 ? y4 + 1 | 0 : y4, Y4 = e6 = y4 - ((K4 >>> 0 < 4293918720) - 1 | 0) | 0, y4 = (2097151 & e6) << 11 | (D4 = K4 - -1048576 | 0) >>> 21, e6 = (e6 >> 21) + h4 | 0, N4 = y4 = (e6 = y4 >>> 0 > (n5 = y4 + N4 | 0) >>> 0 ? e6 + 1 | 0 : e6) - ((n5 >>> 0 < 4293918720) - 1 | 0) | 0, F4 = (2097151 & y4) << 11 | (h4 = n5 - -1048576 | 0) >>> 21, y4 = (y4 >> 21) + O2 | 0, W2 = M4 = F4 + q3 | 0, M4 = F4 >>> 0 > M4 >>> 0 ? y4 + 1 | 0 : y4, V2 = n5 - (y4 = -2097152 & h4) | 0, Z2 = e6 - ((y4 >>> 0 > n5 >>> 0) + N4 | 0) | 0, q3 = K4 - (e6 = -2097152 & D4) | 0, O2 = p4 - ((e6 >>> 0 > K4 >>> 0) + Y4 | 0) | 0, p4 = Ig(z2, m4, 666643, 0), e6 = (y4 = o3[A8 + 14 | 0]) >>> 24 | 0, h4 = y4 << 8 | (N4 = o3[A8 + 10 | 0] | o3[A8 + 11 | 0] << 8 | o3[A8 + 12 | 0] << 16 | o3[A8 + 13 | 0] << 24) >>> 24, s4 = e6, y4 = (e6 = o3[A8 + 15 | 0]) >>> 16 | 0, y4 |= s4, s4 = f3, s4 = (e6 = 2097151 & ((1 & y4) << 31 | (e6 = e6 << 16 | h4) >>> 1)) >>> 0 > (y4 = e6 + p4 | 0) >>> 0 ? s4 + 1 | 0 : s4, h4 = (e6 = y4) + (y4 = Ig(v4, R4, 470296, 0)) | 0, e6 = f3 + s4 | 0, e6 = y4 >>> 0 > h4 >>> 0 ? e6 + 1 | 0 : e6, y4 = Ig(L4, E4, 654183, 0), e6 = f3 + e6 | 0, e6 = y4 >>> 0 > (s4 = y4 + h4 | 0) >>> 0 ? e6 + 1 | 0 : e6, h4 = (y4 = s4) + (s4 = Ig(J4, x4, -997805, -1)) | 0, y4 = f3 + e6 | 0, y4 = s4 >>> 0 > h4 >>> 0 ? y4 + 1 | 0 : y4, e6 = Ig(u4, a4, 136657, 0), y4 = f3 + y4 | 0, K4 = s4 = e6 + h4 | 0, h4 = e6 >>> 0 > s4 >>> 0 ? y4 + 1 | 0 : y4, w4 = k4 - (e6 = -2097152 & w4) | 0, p4 = S4 - ((e6 >>> 0 > k4 >>> 0) + r4 | 0) | 0, s4 = Ig(g6, 0, 136657, 0), e6 = f3, e6 = (y4 = (o3[A8 + 28 | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24) >>> 7 & 2097151) >>> 0 > (s4 = y4 + s4 | 0) >>> 0 ? e6 + 1 | 0 : e6, D4 = (y4 = s4) + (s4 = Ig(P7, 0, -997805, -1)) | 0, y4 = f3 + e6 | 0, y4 = s4 >>> 0 > D4 >>> 0 ? y4 + 1 | 0 : y4, e6 = Ig(B4, j2, -683901, -1), y4 = f3 + y4 | 0, y4 = e6 >>> 0 > (s4 = e6 + D4 | 0) >>> 0 ? y4 + 1 | 0 : y4, D4 = (e6 = Ig(I7, 0, 666643, 0)) + s4 | 0, s4 = f3 + y4 | 0, s4 = e6 >>> 0 > D4 >>> 0 ? s4 + 1 | 0 : s4, y4 = Ig(Q5, 0, 470296, 0), e6 = f3 + s4 | 0, e6 = y4 >>> 0 > (D4 = y4 + D4 | 0) >>> 0 ? e6 + 1 | 0 : e6, y4 = Ig(i5, X2, 654183, 0), e6 = f3 + e6 | 0, y4 = (l4 >> 21) + (y4 >>> 0 > (s4 = y4 + D4 | 0) >>> 0 ? e6 + 1 | 0 : e6) | 0, F4 = y4 = (D4 = (2097151 & l4) << 11 | b5 >>> 21) >>> 0 > (b5 = D4 + s4 | 0) >>> 0 ? y4 + 1 | 0 : y4, l4 = e6 = y4 - ((b5 >>> 0 < 4293918720) - 1 | 0) | 0, D4 = (2097151 & e6) << 11 | (n5 = b5 - -1048576 | 0) >>> 21, e6 = (e6 >> 21) + p4 | 0, d5 = e6 = (y4 = D4 + w4 | 0) >>> 0 < D4 >>> 0 ? e6 + 1 | 0 : e6, Y4 = y4, y4 = Ig(y4, e6, -683901, -1), e6 = f3 + h4 | 0, D4 = s4 = y4 + K4 | 0, h4 = y4 >>> 0 > s4 >>> 0 ? e6 + 1 | 0 : e6, e6 = Ig(v4, R4, 666643, 0), y4 = f3, y4 = e6 >>> 0 > (s4 = e6 + (N4 >>> 4 & 2097151) | 0) >>> 0 ? y4 + 1 | 0 : y4, e6 = Ig(L4, E4, 470296, 0), y4 = f3 + y4 | 0, y4 = e6 >>> 0 > (s4 = e6 + s4 | 0) >>> 0 ? y4 + 1 | 0 : y4, p4 = (e6 = Ig(J4, x4, 654183, 0)) + s4 | 0, s4 = f3 + y4 | 0, s4 = e6 >>> 0 > p4 >>> 0 ? s4 + 1 | 0 : s4, y4 = Ig(u4, a4, -997805, -1), e6 = f3 + s4 | 0, e6 = y4 >>> 0 > (p4 = y4 + p4 | 0) >>> 0 ? e6 + 1 | 0 : e6, y4 = Ig(Y4, d5, 136657, 0), e6 = f3 + e6 | 0, S4 = e6 = y4 >>> 0 > (k4 = y4 + p4 | 0) >>> 0 ? e6 + 1 | 0 : e6, R4 = y4 = e6 - ((k4 >>> 0 < 4293918720) - 1 | 0) | 0, e6 = D4, D4 = (2097151 & y4) << 11 | (w4 = k4 - -1048576 | 0) >>> 21, y4 = (y4 >> 21) + h4 | 0, v4 = h4 = (y4 = (s4 = e6 + D4 | 0) >>> 0 < D4 >>> 0 ? y4 + 1 | 0 : y4) - ((s4 >>> 0 < 4293918720) - 1 | 0) | 0, e6 = (e6 = h4 >> 21) + O2 | 0, z2 = D4 = (h4 = (2097151 & h4) << 11 | (p4 = s4 - -1048576 | 0) >>> 21) + q3 | 0, K4 = h4 >>> 0 > D4 >>> 0 ? e6 + 1 | 0 : e6, D4 = s4, s4 = y4, h4 = (b5 - (y4 = -2097152 & n5) | 0) + (n5 = (2097151 & U4) << 11 | G4 >>> 21) | 0, y4 = (F4 - ((y4 >>> 0 > b5 >>> 0) + l4 | 0) | 0) + (U4 >> 21) | 0, N4 = y4 = h4 >>> 0 < n5 >>> 0 ? y4 + 1 | 0 : y4, P7 = y4 = y4 - ((h4 >>> 0 < 4293918720) - 1 | 0) | 0, G4 = e6 = y4 >> 21, e6 = Ig(m4 = (2097151 & y4) << 11 | (l4 = h4 - -1048576 | 0) >>> 21, e6, -683901, -1), s4 = f3 + s4 | 0, s4 = e6 >>> 0 > (y4 = e6 + D4 | 0) >>> 0 ? s4 + 1 | 0 : s4, j2 = y4 - (e6 = -2097152 & p4) | 0, X2 = s4 - ((e6 >>> 0 > y4 >>> 0) + v4 | 0) | 0, e6 = Ig(m4, G4, 136657, 0), y4 = S4 + f3 | 0, v4 = (s4 = e6 + k4 | 0) - (e6 = -2097152 & w4) | 0, b5 = (y4 = s4 >>> 0 < k4 >>> 0 ? y4 + 1 | 0 : y4) - ((e6 >>> 0 > s4 >>> 0) + R4 | 0) | 0, y4 = Ig(L4, E4, 666643, 0), s4 = f3, s4 = (e6 = (o3[A8 + 7 | 0] | o3[A8 + 8 | 0] << 8 | o3[A8 + 9 | 0] << 16 | o3[A8 + 10 | 0] << 24) >>> 7 & 2097151) >>> 0 > (y4 = e6 + y4 | 0) >>> 0 ? s4 + 1 | 0 : s4, D4 = (e6 = Ig(J4, x4, 470296, 0)) + y4 | 0, y4 = f3 + s4 | 0, y4 = e6 >>> 0 > D4 >>> 0 ? y4 + 1 | 0 : y4, e6 = Ig(u4, a4, 654183, 0), y4 = f3 + y4 | 0, y4 = e6 >>> 0 > (s4 = e6 + D4 | 0) >>> 0 ? y4 + 1 | 0 : y4, D4 = (e6 = s4) + (s4 = Ig(Y4, d5, -997805, -1)) | 0, e6 = f3 + y4 | 0, n5 = D4, D4 = s4 >>> 0 > D4 >>> 0 ? e6 + 1 | 0 : e6, S4 = Ig(J4, x4, 666643, 0), e6 = (y4 = o3[A8 + 6 | 0]) >>> 24 | 0, p4 = y4 << 8 | (R4 = o3[A8 + 2 | 0] | o3[A8 + 3 | 0] << 8 | o3[A8 + 4 | 0] << 16 | o3[A8 + 5 | 0] << 24) >>> 24, s4 = e6, y4 = (e6 = o3[A8 + 7 | 0]) >>> 16 | 0, y4 = 2097151 & ((3 & (y4 |= s4)) << 30 | (e6 = e6 << 16 | p4) >>> 2), e6 = f3, e6 = y4 >>> 0 > (s4 = y4 + S4 | 0) >>> 0 ? e6 + 1 | 0 : e6, p4 = (y4 = Ig(u4, a4, 470296, 0)) + s4 | 0, s4 = f3 + e6 | 0, s4 = y4 >>> 0 > p4 >>> 0 ? s4 + 1 | 0 : s4, y4 = Ig(Y4, d5, 654183, 0), e6 = f3 + s4 | 0, S4 = e6 = y4 >>> 0 > (F4 = y4 + p4 | 0) >>> 0 ? e6 + 1 | 0 : e6, U4 = e6 = e6 - ((F4 >>> 0 < 4293918720) - 1 | 0) | 0, y4 = (s4 = e6 >> 21) + D4 | 0, k4 = e6 = (y4 = (e6 = (2097151 & e6) << 11 | (w4 = F4 - -1048576 | 0) >>> 21) >>> 0 > (p4 = e6 + n5 | 0) >>> 0 ? y4 + 1 | 0 : y4) - ((p4 >>> 0 < 4293918720) - 1 | 0) | 0, n5 = (2097151 & e6) << 11 | (D4 = p4 - -1048576 | 0) >>> 21, e6 = (e6 >> 21) + b5 | 0, v4 = J4 = n5 + v4 | 0, n5 = n5 >>> 0 > J4 >>> 0 ? e6 + 1 | 0 : e6, e6 = Ig(m4, G4, -997805, -1), y4 = f3 + y4 | 0, y4 = e6 >>> 0 > (s4 = e6 + p4 | 0) >>> 0 ? y4 + 1 | 0 : y4, L4 = s4 - (e6 = -2097152 & D4) | 0, x4 = y4 - ((e6 >>> 0 > s4 >>> 0) + k4 | 0) | 0, y4 = Ig(m4, G4, 654183, 0), e6 = S4 + f3 | 0, J4 = (s4 = y4 + F4 | 0) - (y4 = -2097152 & w4) | 0, b5 = (e6 = s4 >>> 0 < F4 >>> 0 ? e6 + 1 | 0 : e6) - ((y4 >>> 0 > s4 >>> 0) + U4 | 0) | 0, e6 = Ig(u4, a4, 666643, 0), y4 = f3, y4 = e6 >>> 0 > (s4 = e6 + (R4 >>> 5 & 2097151) | 0) >>> 0 ? y4 + 1 | 0 : y4, e6 = Ig(Y4, d5, 470296, 0), y4 = f3 + y4 | 0, p4 = s4 = e6 + s4 | 0, s4 = e6 >>> 0 > s4 >>> 0 ? y4 + 1 | 0 : y4, D4 = Ig(Y4, d5, 666643, 0), y4 = (e6 = o3[A8 + 2 | 0]) << 16 & 2031616 | o3[0 | A8] | o3[A8 + 1 | 0] << 8, e6 = f3, S4 = e6 = y4 >>> 0 > (k4 = D4 + y4 | 0) >>> 0 ? e6 + 1 | 0 : e6, d5 = e6 = e6 - ((k4 >>> 0 < 4293918720) - 1 | 0) | 0, D4 = (2097151 & e6) << 11 | (w4 = k4 - -1048576 | 0) >>> 21, e6 = (e6 >> 21) + s4 | 0, s4 = e6 = D4 >>> 0 > (F4 = D4 + p4 | 0) >>> 0 ? e6 + 1 | 0 : e6, U4 = e6 = e6 - ((F4 >>> 0 < 4293918720) - 1 | 0) | 0, D4 = (2097151 & e6) << 11 | (p4 = F4 - -1048576 | 0) >>> 21, e6 = (e6 >> 21) + b5 | 0, D4 = D4 >>> 0 > (Y4 = D4 + J4 | 0) >>> 0 ? e6 + 1 | 0 : e6, e6 = Ig(m4, G4, 470296, 0), s4 = s4 + f3 | 0, s4 = (y4 = e6 + F4 | 0) >>> 0 < F4 >>> 0 ? s4 + 1 | 0 : s4, F4 = y4 - (e6 = -2097152 & p4) | 0, p4 = s4 - ((e6 >>> 0 > y4 >>> 0) + U4 | 0) | 0, y4 = Ig(m4, G4, 666643, 0), e6 = f3 + (S4 - (((s4 = -2097152 & w4) >>> 0 > k4 >>> 0) + d5 | 0) | 0) | 0, y4 = (s4 = (e6 = y4 >>> 0 > (b5 = y4 + (k4 - s4 | 0) | 0) >>> 0 ? e6 + 1 | 0 : e6) >> 21) + p4 | 0, e6 = (e6 = (y4 = (e6 = (2097151 & e6) << 11 | b5 >>> 21) >>> 0 > (U4 = e6 + F4 | 0) >>> 0 ? y4 + 1 | 0 : y4) >> 21) + D4 | 0, y4 = (y4 = (e6 = (y4 = (2097151 & y4) << 11 | U4 >>> 21) >>> 0 > (G4 = y4 + Y4 | 0) >>> 0 ? e6 + 1 | 0 : e6) >> 21) + x4 | 0, s4 = (e6 = (y4 = (e6 = (2097151 & e6) << 11 | G4 >>> 21) >>> 0 > (D4 = e6 + L4 | 0) >>> 0 ? y4 + 1 | 0 : y4) >> 21) + n5 | 0, e6 = (y4 = (s4 = (y4 = (2097151 & y4) << 11 | D4 >>> 21) >>> 0 > (k4 = y4 + v4 | 0) >>> 0 ? s4 + 1 | 0 : s4) >> 21) + X2 | 0, y4 = (s4 = (e6 = (s4 = (2097151 & s4) << 11 | k4 >>> 21) >>> 0 > (F4 = s4 + j2 | 0) >>> 0 ? e6 + 1 | 0 : e6) >> 21) + K4 | 0, K4 = p4 = (e6 = (2097151 & e6) << 11 | F4 >>> 21) + z2 | 0, e6 = (e6 = (y4 = e6 >>> 0 > p4 >>> 0 ? y4 + 1 | 0 : y4) >> 21) + Z2 | 0, y4 = (y4 = (e6 = (y4 = (2097151 & y4) << 11 | p4 >>> 21) >>> 0 > (n5 = y4 + V2 | 0) >>> 0 ? e6 + 1 | 0 : e6) >> 21) + M4 | 0, s4 = (e6 = (y4 = (e6 = (2097151 & e6) << 11 | n5 >>> 21) >>> 0 > (S4 = e6 + W2 | 0) >>> 0 ? y4 + 1 | 0 : y4) >> 21) + t4 | 0, e6 = (y4 = (s4 = (y4 = (2097151 & y4) << 11 | S4 >>> 21) >>> 0 > (w4 = y4 + c4 | 0) >>> 0 ? s4 + 1 | 0 : s4) >> 21) + H4 | 0, l4 = (M4 = h4 - (y4 = -2097152 & l4) | 0) + ((2097151 & (e6 = (s4 = (2097151 & s4) << 11 | w4 >>> 21) >>> 0 > (p4 = s4 + _4 | 0) >>> 0 ? e6 + 1 | 0 : e6)) << 11 | p4 >>> 21) | 0, e6 = (N4 - ((y4 >>> 0 > h4 >>> 0) + P7 | 0) | 0) + (e6 >> 21) | 0, N4 = y4 = (e6 = M4 >>> 0 > l4 >>> 0 ? e6 + 1 | 0 : e6) >> 21, b5 = (e6 = Ig(H4 = (2097151 & e6) << 11 | l4 >>> 21, y4, 666643, 0)) + (y4 = 2097151 & b5) | 0, e6 = f3, h4 = e6 = y4 >>> 0 > b5 >>> 0 ? e6 + 1 | 0 : e6, C3[0 | A8] = b5, C3[A8 + 1 | 0] = (255 & e6) << 24 | b5 >>> 8, e6 = 2097151 & U4, y4 = Ig(H4, N4, 470296, 0) + e6 | 0, s4 = f3, e6 = (h4 >> 21) + (e6 >>> 0 > y4 >>> 0 ? s4 + 1 | 0 : s4) | 0, e6 = (M4 = (2097151 & h4) << 11 | b5 >>> 21) >>> 0 > (U4 = M4 + y4 | 0) >>> 0 ? e6 + 1 | 0 : e6, C3[A8 + 4 | 0] = (2047 & e6) << 21 | U4 >>> 11, y4 = e6, s4 = U4, C3[A8 + 3 | 0] = (7 & e6) << 29 | s4 >>> 3, C3[A8 + 2 | 0] = 31 & ((65535 & h4) << 16 | b5 >>> 16) | s4 << 5, h4 = 2097151 & G4, G4 = Ig(H4, N4, 654183, 0) + h4 | 0, e6 = f3, U4 = (2097151 & y4) << 11 | s4 >>> 21, y4 = (y4 >> 21) + (h4 = h4 >>> 0 > G4 >>> 0 ? e6 + 1 | 0 : e6) | 0, e6 = y4 = (G4 = U4 + G4 | 0) >>> 0 < U4 >>> 0 ? y4 + 1 | 0 : y4, C3[A8 + 6 | 0] = (63 & e6) << 26 | G4 >>> 6, h4 = G4, G4 = 0, C3[A8 + 5 | 0] = G4 << 13 | (1572864 & s4) >>> 19 | h4 << 2, s4 = 2097151 & D4, D4 = Ig(H4, N4, -997805, -1) + s4 | 0, y4 = f3, y4 = s4 >>> 0 > D4 >>> 0 ? y4 + 1 | 0 : y4, G4 = (2097151 & (s4 = e6)) << 11 | h4 >>> 21, s4 = (e6 >>= 21) + y4 | 0, s4 = (D4 = G4 + D4 | 0) >>> 0 < G4 >>> 0 ? s4 + 1 | 0 : s4, C3[A8 + 9 | 0] = (511 & s4) << 23 | D4 >>> 9, C3[A8 + 8 | 0] = (1 & s4) << 31 | D4 >>> 1, y4 = 0, C3[A8 + 7 | 0] = y4 << 18 | (2080768 & h4) >>> 14 | D4 << 7, y4 = 2097151 & k4, h4 = Ig(H4, N4, 136657, 0) + y4 | 0, e6 = f3, e6 = y4 >>> 0 > h4 >>> 0 ? e6 + 1 | 0 : e6, k4 = (2097151 & (y4 = s4)) << 11 | D4 >>> 21, y4 = e6 + (s4 = y4 >> 21) | 0, y4 = (h4 = k4 + h4 | 0) >>> 0 < k4 >>> 0 ? y4 + 1 | 0 : y4, C3[A8 + 12 | 0] = (4095 & y4) << 20 | h4 >>> 12, s4 = h4, C3[A8 + 11 | 0] = (15 & y4) << 28 | s4 >>> 4, h4 = 0, C3[A8 + 10 | 0] = h4 << 15 | (1966080 & D4) >>> 17 | s4 << 4, h4 = 2097151 & F4, D4 = Ig(H4, N4, -683901, -1) + h4 | 0, e6 = f3, e6 = h4 >>> 0 > D4 >>> 0 ? e6 + 1 | 0 : e6, h4 = y4, y4 = e6 + (y4 >>= 21) | 0, y4 = (h4 = (J4 = D4) + (D4 = (2097151 & h4) << 11 | s4 >>> 21) | 0) >>> 0 < D4 >>> 0 ? y4 + 1 | 0 : y4, C3[A8 + 14 | 0] = (127 & y4) << 25 | h4 >>> 7, D4 = 0, C3[A8 + 13 | 0] = D4 << 12 | (1048576 & s4) >>> 20 | h4 << 1, e6 = y4 >> 21, s4 = (y4 = (2097151 & y4) << 11 | h4 >>> 21) >>> 0 > (D4 = y4 + (2097151 & K4) | 0) >>> 0 ? e6 + 1 | 0 : e6, C3[A8 + 17 | 0] = (1023 & s4) << 22 | D4 >>> 10, C3[A8 + 16 | 0] = (3 & s4) << 30 | D4 >>> 2, y4 = 0, C3[A8 + 15 | 0] = y4 << 17 | (2064384 & h4) >>> 15 | D4 << 6, e6 = s4 >> 21, e6 = (y4 = (2097151 & s4) << 11 | D4 >>> 21) >>> 0 > (s4 = y4 + (2097151 & n5) | 0) >>> 0 ? e6 + 1 | 0 : e6, C3[A8 + 20 | 0] = (8191 & e6) << 19 | s4 >>> 13, C3[A8 + 19 | 0] = (31 & e6) << 27 | s4 >>> 5, h4 = (y4 = 2097151 & S4) + (S4 = (2097151 & e6) << 11 | s4 >>> 21) | 0, y4 = e6 >> 21, y4 = h4 >>> 0 < S4 >>> 0 ? y4 + 1 | 0 : y4, S4 = h4, C3[A8 + 21 | 0] = h4, n5 = 0, C3[A8 + 18 | 0] = n5 << 14 | (1835008 & D4) >>> 18 | s4 << 3, C3[A8 + 22 | 0] = (255 & y4) << 24 | h4 >>> 8, s4 = y4 >> 21, s4 = (h4 = (D4 = (2097151 & y4) << 11 | h4 >>> 21) + (2097151 & w4) | 0) >>> 0 < D4 >>> 0 ? s4 + 1 | 0 : s4, C3[A8 + 25 | 0] = (2047 & s4) << 21 | h4 >>> 11, C3[A8 + 24 | 0] = (7 & s4) << 29 | h4 >>> 3, C3[A8 + 23 | 0] = 31 & ((65535 & y4) << 16 | S4 >>> 16) | h4 << 5, e6 = s4 >> 21, e6 = (y4 = (2097151 & s4) << 11 | h4 >>> 21) >>> 0 > (s4 = y4 + (2097151 & p4) | 0) >>> 0 ? e6 + 1 | 0 : e6, C3[A8 + 27 | 0] = (63 & e6) << 26 | s4 >>> 6, D4 = 0, C3[A8 + 26 | 0] = D4 << 13 | (1572864 & h4) >>> 19 | s4 << 2, y4 = e6, e6 >>= 21, y4 = (h4 = (p4 = (2097151 & y4) << 11 | s4 >>> 21) + (D4 = 2097151 & l4) | 0) >>> 0 < D4 >>> 0 ? e6 + 1 | 0 : e6, C3[A8 + 31 | 0] = (131071 & y4) << 15 | h4 >>> 17, e6 = h4, C3[A8 + 30 | 0] = (511 & y4) << 23 | e6 >>> 9, h4 = 0, C3[A8 + 28 | 0] = h4 << 18 | (2080768 & s4) >>> 14 | e6 << 7, C3[A8 + 29 | 0] = p4 + l4 >>> 1;
                    }
                    function N3(A8, I7, g6) {
                      var C4, B4 = 0, Q5 = 0, o4 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, v4 = 0, R4 = 0, L4 = 0, P7 = 0, q3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, W2 = 0, V2 = 0;
                      for (s3 = E4 = s3 - 2048 | 0, Ng(E4 + 1024 | 0, I7, 1024), I7 = 0; Q5 = i4[(_4 = (o4 = E4 + 1024 | 0) + (B4 = I7 << 3) | 0) >> 2], a4 = i4[(c4 = A8 + B4 | 0) >> 2], c4 = i4[_4 + 4 >> 2] ^ i4[c4 + 4 >> 2], i4[_4 >> 2] = Q5 ^ a4, i4[_4 + 4 >> 2] = c4, c4 = i4[(_4 = (Q5 = 8 | B4) + o4 | 0) >> 2], a4 = i4[(Q5 = A8 + Q5 | 0) >> 2], Q5 = i4[_4 + 4 >> 2] ^ i4[Q5 + 4 >> 2], i4[_4 >> 2] = a4 ^ c4, i4[_4 + 4 >> 2] = Q5, c4 = i4[(_4 = (Q5 = 16 | B4) + o4 | 0) >> 2], a4 = i4[(Q5 = A8 + Q5 | 0) >> 2], Q5 = i4[_4 + 4 >> 2] ^ i4[Q5 + 4 >> 2], i4[_4 >> 2] = a4 ^ c4, i4[_4 + 4 >> 2] = Q5, Q5 = i4[(B4 = (_4 = 24 | B4) + o4 | 0) >> 2], c4 = i4[(_4 = A8 + _4 | 0) >> 2], _4 = i4[B4 + 4 >> 2] ^ i4[_4 + 4 >> 2], i4[B4 >> 2] = Q5 ^ c4, i4[B4 + 4 >> 2] = _4, 128 != (0 | (I7 = I7 + 4 | 0)); ) ;
                      for (C4 = Ng(E4, o4, 1024), A8 = 0, I7 = 0; E4 = i4[(B4 = (o4 = I7 << 3) + C4 | 0) >> 2], Q5 = i4[(_4 = g6 + o4 | 0) >> 2], _4 = i4[B4 + 4 >> 2] ^ i4[_4 + 4 >> 2], i4[B4 >> 2] = Q5 ^ E4, i4[B4 + 4 >> 2] = _4, _4 = i4[(B4 = (E4 = 8 | o4) + C4 | 0) >> 2], Q5 = i4[(E4 = g6 + E4 | 0) >> 2], E4 = i4[B4 + 4 >> 2] ^ i4[E4 + 4 >> 2], i4[B4 >> 2] = Q5 ^ _4, i4[B4 + 4 >> 2] = E4, _4 = i4[(B4 = (E4 = 16 | o4) + C4 | 0) >> 2], Q5 = i4[(E4 = g6 + E4 | 0) >> 2], E4 = i4[B4 + 4 >> 2] ^ i4[E4 + 4 >> 2], i4[B4 >> 2] = Q5 ^ _4, i4[B4 + 4 >> 2] = E4, E4 = i4[(o4 = (B4 = 24 | o4) + C4 | 0) >> 2], _4 = i4[(B4 = g6 + B4 | 0) >> 2], B4 = i4[o4 + 4 >> 2] ^ i4[B4 + 4 >> 2], i4[o4 >> 2] = E4 ^ _4, i4[o4 + 4 >> 2] = B4, 128 != (0 | (I7 = I7 + 4 | 0)); ) ;
                      for (; c4 = (Q5 = i4[56 + (o4 = (C4 + 1024 | 0) + (A8 << 7) | 0) >> 2]) + (B4 = i4[o4 + 24 >> 2]) | 0, I7 = (t4 = i4[o4 + 60 >> 2]) + (E4 = i4[o4 + 28 >> 2]) | 0, _4 = B4 >>> 0 > c4 >>> 0 ? I7 + 1 | 0 : I7, E4 = Ig(B4 << 1 & -2, 1 & (E4 << 1 | B4 >>> 31), Q5, 0), I7 = f3 + _4 | 0, _4 = (B4 = E4 + c4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, e6 = (c4 = UI(i4[o4 + 120 >> 2] ^ B4, _4 ^ i4[o4 + 124 >> 2], 32)) + (E4 = i4[o4 + 88 >> 2]) | 0, I7 = (y4 = f3) + (a4 = i4[o4 + 92 >> 2]) | 0, r4 = E4 >>> 0 > e6 >>> 0 ? I7 + 1 | 0 : I7, a4 = Ig(E4 << 1 & -2, 1 & (a4 << 1 | E4 >>> 31), c4, 0), I7 = f3 + r4 | 0, x4 = UI(Q5 ^ (E4 = a4 + e6 | 0), t4 ^ (h4 = E4 >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = _4 + (z2 = f3) | 0, Q5 = (a4 = B4 + x4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(x4, 0, B4 << 1 & -2, 1 & (_4 << 1 | B4 >>> 31)), I7 = f3 + Q5 | 0, H4 = UI(c4 ^ (F4 = B4 + a4 | 0), y4 ^ (b5 = B4 >>> 0 > F4 >>> 0 ? I7 + 1 | 0 : I7), 48), j2 = I7 = f3, p4 = H4, e6 = I7, a4 = (c4 = i4[o4 + 40 >> 2]) + (B4 = i4[o4 + 8 >> 2]) | 0, I7 = (Y4 = i4[o4 + 44 >> 2]) + (_4 = i4[o4 + 12 >> 2]) | 0, Q5 = B4 >>> 0 > a4 >>> 0 ? I7 + 1 | 0 : I7, _4 = Ig(B4 << 1 & -2, 1 & (_4 << 1 | B4 >>> 31), c4, 0), I7 = f3 + Q5 | 0, Q5 = (B4 = _4 + a4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, y4 = (a4 = UI(i4[o4 + 104 >> 2] ^ B4, Q5 ^ i4[o4 + 108 >> 2], 32)) + (_4 = i4[o4 + 72 >> 2]) | 0, I7 = (w4 = f3) + (r4 = i4[o4 + 76 >> 2]) | 0, t4 = _4 >>> 0 > y4 >>> 0 ? I7 + 1 | 0 : I7, r4 = Ig(_4 << 1 & -2, 1 & (r4 << 1 | _4 >>> 31), a4, 0), I7 = f3 + t4 | 0, r4 = UI(t4 = (_4 = r4 + y4 | 0) ^ c4, Y4 ^ (c4 = _4 >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = Q5 + (n5 = f3) | 0, t4 = (y4 = B4 + r4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = Ig(r4, 0, B4 << 1 & -2, 1 & (Q5 << 1 | B4 >>> 31)), I7 = f3 + t4 | 0, v4 = UI((B4 = Q5 + y4 | 0) ^ a4, w4 ^ (y4 = B4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7), 48), I7 = c4 + (R4 = f3) | 0, Q5 = (a4 = _4 + v4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, c4 = Ig(v4, 0, _4 << 1 & -2, 1 & (c4 << 1 | _4 >>> 31)), I7 = f3 + Q5 | 0, M4 = UI((_4 = c4 + a4 | 0) ^ r4, n5 ^ (Y4 = _4 >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7), 1), L4 = I7 = f3, k4 = M4, t4 = I7, w4 = (r4 = i4[o4 + 32 >> 2]) + (Q5 = i4[o4 >> 2]) | 0, I7 = (J4 = i4[o4 + 36 >> 2]) + (c4 = i4[o4 + 4 >> 2]) | 0, a4 = Q5 >>> 0 > w4 >>> 0 ? I7 + 1 | 0 : I7, c4 = Ig(Q5 << 1 & -2, 1 & (c4 << 1 | Q5 >>> 31), r4, 0), I7 = f3 + a4 | 0, a4 = (Q5 = c4 + w4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, D4 = (d5 = UI(i4[o4 + 96 >> 2] ^ Q5, a4 ^ i4[o4 + 100 >> 2], 32)) + (c4 = i4[(I7 = S4 = o4 - -64 | 0) >> 2]) | 0, I7 = (q3 = f3) + (w4 = i4[I7 + 4 >> 2]) | 0, n5 = c4 >>> 0 > D4 >>> 0 ? I7 + 1 | 0 : I7, w4 = Ig(c4 << 1 & -2, 1 & (w4 << 1 | c4 >>> 31), d5, 0), I7 = f3 + n5 | 0, J4 = UI((c4 = w4 + D4 | 0) ^ r4, J4 ^ (w4 = c4 >>> 0 < w4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = a4 + (X2 = f3) | 0, r4 = (n5 = Q5 + J4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, a4 = Ig(J4, 0, Q5 << 1 & -2, 1 & (a4 << 1 | Q5 >>> 31)), I7 = f3 + r4 | 0, I7 = (n5 = (Q5 = a4 + n5 | 0) >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7) + t4 | 0, r4 = (a4 = Q5 + k4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, t4 = Ig(k4, 0, Q5 << 1 & -2, 1 & (n5 << 1 | Q5 >>> 31)), I7 = f3 + r4 | 0, m4 = UI((a4 = t4 + a4 | 0) ^ p4, (D4 = a4 >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7) ^ e6, 32), P7 = I7 = f3, N4 = I7, k4 = (p4 = i4[o4 + 48 >> 2]) + (r4 = i4[o4 + 16 >> 2]) | 0, I7 = (l4 = i4[o4 + 52 >> 2]) + (e6 = i4[o4 + 20 >> 2]) | 0, t4 = r4 >>> 0 > k4 >>> 0 ? I7 + 1 | 0 : I7, e6 = Ig(r4 << 1 & -2, 1 & (e6 << 1 | r4 >>> 31), p4, 0), I7 = f3 + t4 | 0, t4 = (r4 = e6 + k4 | 0) >>> 0 < e6 >>> 0 ? I7 + 1 | 0 : I7, G4 = (k4 = UI(i4[o4 + 112 >> 2] ^ r4, t4 ^ i4[o4 + 116 >> 2], 32)) + (e6 = i4[o4 + 80 >> 2]) | 0, I7 = (u4 = f3) + (K4 = i4[o4 + 84 >> 2]) | 0, U4 = e6 >>> 0 > G4 >>> 0 ? I7 + 1 | 0 : I7, K4 = Ig(e6 << 1 & -2, 1 & (K4 << 1 | e6 >>> 31), k4, 0), I7 = f3 + U4 | 0, K4 = UI(G4 = (e6 = K4 + G4 | 0) ^ p4, l4 ^ (p4 = e6 >>> 0 < K4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = t4 + (l4 = f3) | 0, U4 = (G4 = r4 + K4 | 0) >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7, t4 = Ig(K4, 0, r4 << 1 & -2, 1 & (t4 << 1 | r4 >>> 31)), I7 = f3 + U4 | 0, U4 = UI(G4 = (r4 = t4 + G4 | 0) ^ k4, u4 ^ (k4 = t4 >>> 0 > r4 >>> 0 ? I7 + 1 | 0 : I7), 48), I7 = p4 + (u4 = f3) | 0, t4 = (G4 = e6 + U4 | 0) >>> 0 < e6 >>> 0 ? I7 + 1 | 0 : I7, p4 = Ig(U4, 0, e6 << 1 & -2, 1 & (p4 << 1 | e6 >>> 31)), I7 = f3 + t4 | 0, I7 = (p4 = (e6 = p4 + G4 | 0) >>> 0 < p4 >>> 0 ? I7 + 1 | 0 : I7) + N4 | 0, N4 = (t4 = e6 + m4 | 0) >>> 0 < e6 >>> 0 ? I7 + 1 | 0 : I7, G4 = Ig(m4, 0, e6 << 1 & -2, 1 & (p4 << 1 | e6 >>> 31)), I7 = f3 + N4 | 0, N4 = UI(N4 = (t4 = G4 + t4 | 0) ^ M4, L4 ^ (M4 = t4 >>> 0 < G4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = D4 + (L4 = f3) | 0, G4 = (O2 = a4 + N4 | 0) >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7, a4 = (D4 = Ig(N4, 0, a4 << 1 & -2, 1 & (D4 << 1 | a4 >>> 31))) + O2 | 0, I7 = f3 + G4 | 0, i4[o4 >> 2] = a4, I7 = a4 >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7, i4[o4 + 4 >> 2] = I7, a4 = UI(a4 ^ m4, I7 ^ P7, 48), i4[o4 + 120 >> 2] = a4, I7 = f3, i4[o4 + 124 >> 2] = I7, I7 = I7 + M4 | 0, D4 = (m4 = a4 + t4 | 0) >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, a4 = (t4 = Ig(a4, 0, t4 << 1 & -2, 1 & (M4 << 1 | t4 >>> 31))) + m4 | 0, I7 = f3 + D4 | 0, i4[o4 + 80 >> 2] = a4, I7 = a4 >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, i4[o4 + 84 >> 2] = I7, W2 = o4, V2 = UI(a4 ^ N4, I7 ^ L4, 1), i4[W2 + 40 >> 2] = V2, i4[o4 + 44 >> 2] = f3, I7 = h4 + j2 | 0, a4 = (t4 = E4 + H4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, E4 = Ig(H4, 0, E4 << 1 & -2, 1 & (h4 << 1 | E4 >>> 31)), I7 = f3 + a4 | 0, a4 = I7 = E4 >>> 0 > (t4 = E4 + t4 | 0) >>> 0 ? I7 + 1 | 0 : I7, E4 = I7, e6 = UI(e6 ^ K4, p4 ^ l4, 1), I7 = y4 + (p4 = f3) | 0, h4 = (D4 = B4 + e6 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (y4 = Ig(e6, 0, B4 << 1 & -2, 1 & (y4 << 1 | B4 >>> 31))) + D4 | 0, I7 = f3 + h4 | 0, n5 = UI(Q5 ^ d5, n5 ^ q3, 48), y4 = UI(n5 ^ B4, (Q5 = B4 >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7) ^ (M4 = f3), 32), I7 = (H4 = f3) + E4 | 0, h4 = y4 >>> 0 > (D4 = y4 + t4 | 0) >>> 0 ? I7 + 1 | 0 : I7, E4 = (I7 = D4) + (D4 = Ig(t4 << 1 & -2, 1 & (E4 << 1 | t4 >>> 31), y4, 0)) | 0, I7 = f3 + h4 | 0, h4 = UI(N4 = E4 ^ e6, p4 ^ (e6 = E4 >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = Q5 + (D4 = f3) | 0, p4 = (d5 = B4 + h4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(h4, 0, B4 << 1 & -2, 1 & (Q5 << 1 | B4 >>> 31)), I7 = f3 + p4 | 0, B4 = UI((Q5 = B4 + d5 | 0) ^ y4, H4 ^ (I7 = B4 >>> 0 > Q5 >>> 0 ? I7 + 1 | 0 : I7), 48), i4[o4 + 96 >> 2] = B4, y4 = f3, i4[o4 + 100 >> 2] = y4, i4[o4 + 8 >> 2] = Q5, i4[o4 + 12 >> 2] = I7, I7 = e6 + y4 | 0, Q5 = (y4 = B4 + E4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, E4 = Ig(B4, 0, E4 << 1 & -2, 1 & (e6 << 1 | E4 >>> 31)), I7 = f3 + Q5 | 0, W2 = o4, V2 = UI((B4 = E4 + y4 | 0) ^ h4, (I7 = B4 >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7) ^ D4, 1), i4[W2 + 48 >> 2] = V2, i4[o4 + 52 >> 2] = f3, i4[o4 + 88 >> 2] = B4, i4[o4 + 92 >> 2] = I7, e6 = UI(t4 ^ x4, a4 ^ z2, 1), I7 = k4 + (h4 = f3) | 0, E4 = (B4 = r4 + e6 | 0) >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = Ig(e6, 0, r4 << 1 & -2, 1 & (k4 << 1 | r4 >>> 31)), I7 = f3 + E4 | 0, t4 = UI((B4 = Q5 + B4 | 0) ^ v4, R4 ^ (a4 = B4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7), 32), y4 = I7 = f3, Q5 = I7, I7 = w4 + M4 | 0, r4 = (E4 = c4 + n5 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, c4 = Ig(n5, 0, c4 << 1 & -2, 1 & (w4 << 1 | c4 >>> 31)), I7 = f3 + r4 | 0, I7 = (c4 = (E4 = c4 + E4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7) + Q5 | 0, r4 = (Q5 = E4 + t4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, w4 = Ig(t4, 0, E4 << 1 & -2, 1 & (c4 << 1 | E4 >>> 31)), I7 = f3 + r4 | 0, e6 = UI((Q5 = w4 + Q5 | 0) ^ e6, h4 ^ (r4 = Q5 >>> 0 < w4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = a4 + (w4 = f3) | 0, h4 = (n5 = B4 + e6 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (a4 = Ig(e6, 0, B4 << 1 & -2, 1 & (a4 << 1 | B4 >>> 31))) + n5 | 0, I7 = f3 + h4 | 0, i4[o4 + 16 >> 2] = B4, I7 = B4 >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7, i4[o4 + 20 >> 2] = I7, B4 = UI(B4 ^ t4, I7 ^ y4, 48), i4[o4 + 104 >> 2] = B4, I7 = f3, i4[o4 + 108 >> 2] = I7, a4 = S4, I7 = I7 + r4 | 0, t4 = (h4 = B4 + Q5 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, Q5 = Ig(B4, 0, Q5 << 1 & -2, 1 & (r4 << 1 | Q5 >>> 31)), I7 = f3 + t4 | 0, r4 = B4 = Q5 + h4 | 0, t4 = I7 = B4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, i4[a4 >> 2] = B4, i4[a4 + 4 >> 2] = I7, c4 = UI(E4 ^ J4, c4 ^ X2, 1), I7 = (y4 = f3) + b5 | 0, E4 = (B4 = c4 + F4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = Ig(F4 << 1 & -2, 1 & (b5 << 1 | F4 >>> 31), c4, 0), I7 = f3 + E4 | 0, a4 = UI((B4 = Q5 + B4 | 0) ^ U4, u4 ^ (Q5 = B4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7), 32), I7 = Y4 + (F4 = f3) | 0, h4 = (E4 = a4 + _4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, _4 = Ig(a4, 0, _4 << 1 & -2, 1 & (Y4 << 1 | _4 >>> 31)), I7 = f3 + h4 | 0, c4 = UI((E4 = _4 + E4 | 0) ^ c4, y4 ^ (_4 = E4 >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = Q5 + (b5 = f3) | 0, h4 = (y4 = B4 + c4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = Ig(c4, 0, B4 << 1 & -2, 1 & (Q5 << 1 | B4 >>> 31)), I7 = f3 + h4 | 0, I7 = (B4 = Q5 + y4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, Q5 = B4, B4 ^= a4, a4 = I7, B4 = UI(B4, F4 ^ I7, 48), I7 = _4 + (F4 = f3) | 0, h4 = (y4 = B4 + E4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, E4 = (_4 = Ig(B4, 0, E4 << 1 & -2, 1 & (_4 << 1 | E4 >>> 31))) + y4 | 0, I7 = f3 + h4 | 0, i4[o4 + 72 >> 2] = E4, I7 = E4 >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, i4[o4 + 76 >> 2] = I7, i4[o4 + 112 >> 2] = B4, i4[o4 + 116 >> 2] = F4, i4[o4 + 24 >> 2] = Q5, i4[o4 + 28 >> 2] = a4, W2 = o4, V2 = UI(r4 ^ e6, t4 ^ w4, 1), i4[W2 + 56 >> 2] = V2, i4[o4 + 60 >> 2] = f3, W2 = o4, V2 = UI(E4 ^ c4, I7 ^ b5, 1), i4[W2 + 32 >> 2] = V2, i4[o4 + 36 >> 2] = f3, 8 != (0 | (A8 = A8 + 1 | 0)); ) ;
                      for (A8 = 0; c4 = (Q5 = i4[392 + (o4 = (C4 + 1024 | 0) + (A8 << 4) | 0) >> 2]) + (B4 = i4[o4 + 136 >> 2]) | 0, I7 = (t4 = i4[o4 + 396 >> 2]) + (E4 = i4[o4 + 140 >> 2]) | 0, _4 = B4 >>> 0 > c4 >>> 0 ? I7 + 1 | 0 : I7, E4 = Ig(B4 << 1 & -2, 1 & (E4 << 1 | B4 >>> 31), Q5, 0), I7 = f3 + _4 | 0, _4 = (B4 = E4 + c4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, e6 = (c4 = UI(i4[o4 + 904 >> 2] ^ B4, _4 ^ i4[o4 + 908 >> 2], 32)) + (E4 = i4[o4 + 648 >> 2]) | 0, I7 = (y4 = f3) + (a4 = i4[o4 + 652 >> 2]) | 0, r4 = E4 >>> 0 > e6 >>> 0 ? I7 + 1 | 0 : I7, a4 = Ig(E4 << 1 & -2, 1 & (a4 << 1 | E4 >>> 31), c4, 0), I7 = f3 + r4 | 0, x4 = UI(Q5 ^ (E4 = a4 + e6 | 0), t4 ^ (h4 = E4 >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = _4 + (G4 = f3) | 0, Q5 = (a4 = B4 + x4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(x4, 0, B4 << 1 & -2, 1 & (_4 << 1 | B4 >>> 31)), I7 = f3 + Q5 | 0, H4 = UI(c4 ^ (F4 = B4 + a4 | 0), y4 ^ (b5 = B4 >>> 0 > F4 >>> 0 ? I7 + 1 | 0 : I7), 48), z2 = I7 = f3, p4 = H4, e6 = I7, a4 = (c4 = i4[o4 + 264 >> 2]) + (B4 = i4[o4 + 8 >> 2]) | 0, I7 = (Y4 = i4[o4 + 268 >> 2]) + (_4 = i4[o4 + 12 >> 2]) | 0, Q5 = B4 >>> 0 > a4 >>> 0 ? I7 + 1 | 0 : I7, _4 = Ig(B4 << 1 & -2, 1 & (_4 << 1 | B4 >>> 31), c4, 0), I7 = f3 + Q5 | 0, Q5 = (B4 = _4 + a4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, y4 = (a4 = UI(i4[o4 + 776 >> 2] ^ B4, Q5 ^ i4[o4 + 780 >> 2], 32)) + (_4 = i4[o4 + 520 >> 2]) | 0, I7 = (w4 = f3) + (r4 = i4[o4 + 524 >> 2]) | 0, t4 = _4 >>> 0 > y4 >>> 0 ? I7 + 1 | 0 : I7, r4 = Ig(_4 << 1 & -2, 1 & (r4 << 1 | _4 >>> 31), a4, 0), I7 = f3 + t4 | 0, r4 = UI(t4 = (_4 = r4 + y4 | 0) ^ c4, Y4 ^ (c4 = _4 >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = Q5 + (n5 = f3) | 0, t4 = (y4 = B4 + r4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = Ig(r4, 0, B4 << 1 & -2, 1 & (Q5 << 1 | B4 >>> 31)), I7 = f3 + t4 | 0, v4 = UI((B4 = Q5 + y4 | 0) ^ a4, w4 ^ (y4 = B4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7), 48), I7 = c4 + (j2 = f3) | 0, Q5 = (a4 = _4 + v4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, c4 = Ig(v4, 0, _4 << 1 & -2, 1 & (c4 << 1 | _4 >>> 31)), I7 = f3 + Q5 | 0, M4 = UI((_4 = c4 + a4 | 0) ^ r4, n5 ^ (Y4 = _4 >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7), 1), R4 = I7 = f3, k4 = M4, t4 = I7, w4 = (r4 = i4[o4 + 256 >> 2]) + (Q5 = i4[o4 >> 2]) | 0, I7 = (J4 = i4[o4 + 260 >> 2]) + (c4 = i4[o4 + 4 >> 2]) | 0, a4 = Q5 >>> 0 > w4 >>> 0 ? I7 + 1 | 0 : I7, c4 = Ig(Q5 << 1 & -2, 1 & (c4 << 1 | Q5 >>> 31), r4, 0), I7 = f3 + a4 | 0, a4 = (Q5 = c4 + w4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, D4 = (d5 = UI(i4[o4 + 768 >> 2] ^ Q5, a4 ^ i4[o4 + 772 >> 2], 32)) + (c4 = i4[o4 + 512 >> 2]) | 0, I7 = (L4 = f3) + (w4 = i4[o4 + 516 >> 2]) | 0, n5 = c4 >>> 0 > D4 >>> 0 ? I7 + 1 | 0 : I7, w4 = Ig(c4 << 1 & -2, 1 & (w4 << 1 | c4 >>> 31), d5, 0), I7 = f3 + n5 | 0, J4 = UI((c4 = w4 + D4 | 0) ^ r4, J4 ^ (w4 = c4 >>> 0 < w4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = a4 + (q3 = f3) | 0, r4 = (n5 = Q5 + J4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, a4 = Ig(J4, 0, Q5 << 1 & -2, 1 & (a4 << 1 | Q5 >>> 31)), I7 = f3 + r4 | 0, I7 = (n5 = (Q5 = a4 + n5 | 0) >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7) + t4 | 0, r4 = (a4 = Q5 + k4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, t4 = Ig(k4, 0, Q5 << 1 & -2, 1 & (n5 << 1 | Q5 >>> 31)), I7 = f3 + r4 | 0, m4 = UI((a4 = t4 + a4 | 0) ^ p4, (D4 = a4 >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7) ^ e6, 32), X2 = I7 = f3, N4 = I7, k4 = (p4 = i4[o4 + 384 >> 2]) + (r4 = i4[o4 + 128 >> 2]) | 0, I7 = (P7 = i4[o4 + 388 >> 2]) + (e6 = i4[o4 + 132 >> 2]) | 0, t4 = r4 >>> 0 > k4 >>> 0 ? I7 + 1 | 0 : I7, e6 = Ig(r4 << 1 & -2, 1 & (e6 << 1 | r4 >>> 31), p4, 0), I7 = f3 + t4 | 0, t4 = (r4 = e6 + k4 | 0) >>> 0 < e6 >>> 0 ? I7 + 1 | 0 : I7, S4 = (k4 = UI(i4[o4 + 896 >> 2] ^ r4, t4 ^ i4[o4 + 900 >> 2], 32)) + (e6 = i4[o4 + 640 >> 2]) | 0, I7 = (l4 = f3) + (K4 = i4[o4 + 644 >> 2]) | 0, U4 = e6 >>> 0 > S4 >>> 0 ? I7 + 1 | 0 : I7, K4 = Ig(e6 << 1 & -2, 1 & (K4 << 1 | e6 >>> 31), k4, 0), I7 = f3 + U4 | 0, K4 = UI(S4 = (e6 = K4 + S4 | 0) ^ p4, P7 ^ (p4 = e6 >>> 0 < K4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = t4 + (P7 = f3) | 0, U4 = (S4 = r4 + K4 | 0) >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7, t4 = Ig(K4, 0, r4 << 1 & -2, 1 & (t4 << 1 | r4 >>> 31)), I7 = f3 + U4 | 0, U4 = UI(S4 = (r4 = t4 + S4 | 0) ^ k4, l4 ^ (k4 = t4 >>> 0 > r4 >>> 0 ? I7 + 1 | 0 : I7), 48), I7 = p4 + (l4 = f3) | 0, t4 = (S4 = e6 + U4 | 0) >>> 0 < e6 >>> 0 ? I7 + 1 | 0 : I7, p4 = Ig(U4, 0, e6 << 1 & -2, 1 & (p4 << 1 | e6 >>> 31)), I7 = f3 + t4 | 0, I7 = (p4 = (e6 = p4 + S4 | 0) >>> 0 < p4 >>> 0 ? I7 + 1 | 0 : I7) + N4 | 0, N4 = (t4 = e6 + m4 | 0) >>> 0 < e6 >>> 0 ? I7 + 1 | 0 : I7, S4 = Ig(m4, 0, e6 << 1 & -2, 1 & (p4 << 1 | e6 >>> 31)), I7 = f3 + N4 | 0, N4 = UI(N4 = (t4 = S4 + t4 | 0) ^ M4, R4 ^ (M4 = t4 >>> 0 < S4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = D4 + (R4 = f3) | 0, S4 = (u4 = a4 + N4 | 0) >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7, a4 = (D4 = Ig(N4, 0, a4 << 1 & -2, 1 & (D4 << 1 | a4 >>> 31))) + u4 | 0, I7 = f3 + S4 | 0, i4[o4 >> 2] = a4, I7 = a4 >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7, i4[o4 + 4 >> 2] = I7, a4 = UI(a4 ^ m4, I7 ^ X2, 48), i4[o4 + 904 >> 2] = a4, I7 = f3, i4[o4 + 908 >> 2] = I7, I7 = I7 + M4 | 0, D4 = (m4 = a4 + t4 | 0) >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, a4 = (t4 = Ig(a4, 0, t4 << 1 & -2, 1 & (M4 << 1 | t4 >>> 31))) + m4 | 0, I7 = f3 + D4 | 0, i4[o4 + 640 >> 2] = a4, I7 = a4 >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, i4[o4 + 644 >> 2] = I7, W2 = o4, V2 = UI(a4 ^ N4, I7 ^ R4, 1), i4[W2 + 264 >> 2] = V2, i4[o4 + 268 >> 2] = f3, I7 = h4 + z2 | 0, a4 = (t4 = E4 + H4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, E4 = Ig(H4, 0, E4 << 1 & -2, 1 & (h4 << 1 | E4 >>> 31)), I7 = f3 + a4 | 0, a4 = I7 = E4 >>> 0 > (t4 = E4 + t4 | 0) >>> 0 ? I7 + 1 | 0 : I7, E4 = I7, e6 = UI(e6 ^ K4, p4 ^ P7, 1), I7 = y4 + (p4 = f3) | 0, h4 = (D4 = B4 + e6 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (y4 = Ig(e6, 0, B4 << 1 & -2, 1 & (y4 << 1 | B4 >>> 31))) + D4 | 0, I7 = f3 + h4 | 0, n5 = UI(Q5 ^ d5, n5 ^ L4, 48), y4 = UI(n5 ^ B4, (Q5 = B4 >>> 0 < y4 >>> 0 ? I7 + 1 | 0 : I7) ^ (M4 = f3), 32), I7 = (H4 = f3) + E4 | 0, h4 = y4 >>> 0 > (D4 = y4 + t4 | 0) >>> 0 ? I7 + 1 | 0 : I7, E4 = (I7 = D4) + (D4 = Ig(t4 << 1 & -2, 1 & (E4 << 1 | t4 >>> 31), y4, 0)) | 0, I7 = f3 + h4 | 0, h4 = UI(S4 = E4 ^ e6, p4 ^ (e6 = E4 >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = Q5 + (D4 = f3) | 0, p4 = (d5 = B4 + h4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(h4, 0, B4 << 1 & -2, 1 & (Q5 << 1 | B4 >>> 31)), I7 = f3 + p4 | 0, B4 = UI((Q5 = B4 + d5 | 0) ^ y4, H4 ^ (I7 = B4 >>> 0 > Q5 >>> 0 ? I7 + 1 | 0 : I7), 48), i4[o4 + 768 >> 2] = B4, y4 = f3, i4[o4 + 772 >> 2] = y4, i4[o4 + 8 >> 2] = Q5, i4[o4 + 12 >> 2] = I7, I7 = e6 + y4 | 0, Q5 = (y4 = B4 + E4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, E4 = Ig(B4, 0, E4 << 1 & -2, 1 & (e6 << 1 | E4 >>> 31)), I7 = f3 + Q5 | 0, W2 = o4, V2 = UI((B4 = E4 + y4 | 0) ^ h4, (I7 = B4 >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7) ^ D4, 1), i4[W2 + 384 >> 2] = V2, i4[o4 + 388 >> 2] = f3, i4[o4 + 648 >> 2] = B4, i4[o4 + 652 >> 2] = I7, e6 = UI(t4 ^ x4, a4 ^ G4, 1), I7 = k4 + (h4 = f3) | 0, E4 = (B4 = r4 + e6 | 0) >>> 0 < r4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = Ig(e6, 0, r4 << 1 & -2, 1 & (k4 << 1 | r4 >>> 31)), I7 = f3 + E4 | 0, t4 = UI((B4 = Q5 + B4 | 0) ^ v4, j2 ^ (a4 = B4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7), 32), y4 = I7 = f3, Q5 = I7, I7 = w4 + M4 | 0, r4 = (E4 = c4 + n5 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, c4 = Ig(n5, 0, c4 << 1 & -2, 1 & (w4 << 1 | c4 >>> 31)), I7 = f3 + r4 | 0, I7 = (c4 = (E4 = c4 + E4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7) + Q5 | 0, r4 = (Q5 = E4 + t4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, w4 = Ig(t4, 0, E4 << 1 & -2, 1 & (c4 << 1 | E4 >>> 31)), I7 = f3 + r4 | 0, e6 = UI((Q5 = w4 + Q5 | 0) ^ e6, h4 ^ (r4 = Q5 >>> 0 < w4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = a4 + (w4 = f3) | 0, h4 = (n5 = B4 + e6 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (a4 = Ig(e6, 0, B4 << 1 & -2, 1 & (a4 << 1 | B4 >>> 31))) + n5 | 0, I7 = f3 + h4 | 0, i4[o4 + 128 >> 2] = B4, I7 = B4 >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7, i4[o4 + 132 >> 2] = I7, B4 = UI(B4 ^ t4, I7 ^ y4, 48), i4[o4 + 776 >> 2] = B4, I7 = f3, i4[o4 + 780 >> 2] = I7, I7 = I7 + r4 | 0, a4 = (t4 = B4 + Q5 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, Q5 = Ig(B4, 0, Q5 << 1 & -2, 1 & (r4 << 1 | Q5 >>> 31)), I7 = f3 + a4 | 0, r4 = B4 = Q5 + t4 | 0, t4 = I7 = B4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, i4[o4 + 512 >> 2] = B4, i4[o4 + 516 >> 2] = I7, c4 = UI(E4 ^ J4, c4 ^ q3, 1), I7 = (y4 = f3) + b5 | 0, E4 = (B4 = c4 + F4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = Ig(F4 << 1 & -2, 1 & (b5 << 1 | F4 >>> 31), c4, 0), I7 = f3 + E4 | 0, a4 = UI((B4 = Q5 + B4 | 0) ^ U4, l4 ^ (Q5 = B4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7), 32), I7 = Y4 + (F4 = f3) | 0, h4 = (E4 = a4 + _4 | 0) >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, _4 = Ig(a4, 0, _4 << 1 & -2, 1 & (Y4 << 1 | _4 >>> 31)), I7 = f3 + h4 | 0, c4 = UI((E4 = _4 + E4 | 0) ^ c4, y4 ^ (_4 = E4 >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7), 40), I7 = Q5 + (b5 = f3) | 0, h4 = (y4 = B4 + c4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, Q5 = Ig(c4, 0, B4 << 1 & -2, 1 & (Q5 << 1 | B4 >>> 31)), I7 = f3 + h4 | 0, I7 = (B4 = Q5 + y4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, Q5 = B4, B4 ^= a4, a4 = I7, B4 = UI(B4, F4 ^ I7, 48), I7 = _4 + (F4 = f3) | 0, h4 = (y4 = B4 + E4 | 0) >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, E4 = (_4 = Ig(B4, 0, E4 << 1 & -2, 1 & (_4 << 1 | E4 >>> 31))) + y4 | 0, I7 = f3 + h4 | 0, i4[o4 + 520 >> 2] = E4, I7 = E4 >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, i4[o4 + 524 >> 2] = I7, i4[o4 + 896 >> 2] = B4, i4[o4 + 900 >> 2] = F4, i4[o4 + 136 >> 2] = Q5, i4[o4 + 140 >> 2] = a4, W2 = o4, V2 = UI(r4 ^ e6, t4 ^ w4, 1), i4[W2 + 392 >> 2] = V2, i4[o4 + 396 >> 2] = f3, W2 = o4, V2 = UI(E4 ^ c4, I7 ^ b5, 1), i4[W2 + 256 >> 2] = V2, i4[o4 + 260 >> 2] = f3, 8 != (0 | (A8 = A8 + 1 | 0)); ) ;
                      for (I7 = Ng(g6, C4, 1024), A8 = 0; B4 = i4[(o4 = (g6 = A8 << 3) + I7 | 0) >> 2], Q5 = i4[(_4 = (E4 = a4 = C4 + 1024 | 0) + g6 | 0) >> 2], _4 = i4[o4 + 4 >> 2] ^ i4[_4 + 4 >> 2], i4[o4 >> 2] = B4 ^ Q5, i4[o4 + 4 >> 2] = _4, _4 = i4[(o4 = (B4 = 8 | g6) + I7 | 0) >> 2], E4 = i4[(B4 = B4 + E4 | 0) >> 2], B4 = i4[o4 + 4 >> 2] ^ i4[B4 + 4 >> 2], i4[o4 >> 2] = E4 ^ _4, i4[o4 + 4 >> 2] = B4, E4 = i4[(o4 = (B4 = 16 | g6) + I7 | 0) >> 2], _4 = i4[(B4 = B4 + a4 | 0) >> 2], B4 = i4[o4 + 4 >> 2] ^ i4[B4 + 4 >> 2], i4[o4 >> 2] = E4 ^ _4, i4[o4 + 4 >> 2] = B4, B4 = i4[(g6 = (o4 = 24 | g6) + I7 | 0) >> 2], E4 = i4[(o4 = o4 + a4 | 0) >> 2], o4 = i4[g6 + 4 >> 2] ^ i4[o4 + 4 >> 2], i4[g6 >> 2] = B4 ^ E4, i4[g6 + 4 >> 2] = o4, 128 != (0 | (A8 = A8 + 4 | 0)); ) ;
                      s3 = C4 + 2048 | 0;
                    }
                    function G3(A8, I7, g6) {
                      var C4, B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, f4, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0;
                      for (s3 = C4 = s3 - 800 | 0, k4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, S4 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, G4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, M4 = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, w4 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, K4 = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, U4 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24, Q5 = o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24, E4 = o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24, a4 = o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24, _4 = o3[A8 + 16 | 0] | o3[A8 + 17 | 0] << 8 | o3[A8 + 18 | 0] << 16 | o3[A8 + 19 | 0] << 24, c4 = o3[A8 + 20 | 0] | o3[A8 + 21 | 0] << 8 | o3[A8 + 22 | 0] << 16 | o3[A8 + 23 | 0] << 24, t4 = o3[A8 + 24 | 0] | o3[A8 + 25 | 0] << 8 | o3[A8 + 26 | 0] << 16 | o3[A8 + 27 | 0] << 24, r4 = o3[A8 + 28 | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24, n5 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, I7 = g6 - -64 | 0, e6 = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, i4[I7 >> 2] = 33620224 ^ e6, i4[g6 + 56 >> 2] = 1496785429, i4[g6 + 60 >> 2] = 1652156816, i4[(A8 = g6 + 48 | 0) >> 2] = 33620224, i4[A8 + 4 >> 2] = 218629379, i4[g6 + 40 >> 2] = 1110511904, i4[g6 + 44 >> 2] = -584534669, i4[(B4 = g6 + 32 | 0) >> 2] = 1427652059, i4[B4 + 4 >> 2] = -248528275, y4 = n5 ^ e6, i4[g6 >> 2] = y4, i4[g6 + 92 >> 2] = -584534669 ^ r4, i4[g6 + 88 >> 2] = 1110511904 ^ t4, i4[g6 + 84 >> 2] = -248528275 ^ c4, i4[(n5 = g6 + 80 | 0) >> 2] = 1427652059 ^ _4, i4[g6 + 76 >> 2] = 1652156816 ^ a4, i4[g6 + 72 >> 2] = 1496785429 ^ E4, i4[g6 + 68 >> 2] = 218629379 ^ Q5, U4 ^= r4, i4[g6 + 28 >> 2] = U4, K4 ^= t4, i4[g6 + 24 >> 2] = K4, h4 = w4 ^ c4, i4[g6 + 20 >> 2] = h4, M4 ^= _4, i4[(w4 = g6 + 16 | 0) >> 2] = M4, G4 ^= a4, i4[g6 + 12 >> 2] = G4, D4 = S4 ^ E4, i4[g6 + 8 >> 2] = D4, f4 = k4 ^ Q5, i4[g6 + 4 >> 2] = f4, S4 = 0; k4 = i4[n5 + 12 >> 2], i4[C4 + 792 >> 2] = i4[n5 + 8 >> 2], i4[C4 + 796 >> 2] = k4, k4 = i4[n5 + 4 >> 2], i4[C4 + 784 >> 2] = i4[n5 >> 2], i4[C4 + 788 >> 2] = k4, k4 = i4[I7 + 12 >> 2], i4[C4 + 760 >> 2] = i4[I7 + 8 >> 2], i4[C4 + 764 >> 2] = k4, k4 = i4[I7 + 4 >> 2], i4[C4 + 752 >> 2] = i4[I7 >> 2], i4[C4 + 756 >> 2] = k4, k4 = i4[n5 + 12 >> 2], i4[C4 + 744 >> 2] = i4[n5 + 8 >> 2], i4[C4 + 748 >> 2] = k4, k4 = i4[n5 + 4 >> 2], i4[C4 + 736 >> 2] = i4[n5 >> 2], i4[C4 + 740 >> 2] = k4, AI(k4 = C4 + 768 | 0, C4 + 752 | 0, C4 + 736 | 0), p4 = i4[C4 + 780 >> 2], i4[n5 + 8 >> 2] = i4[C4 + 776 >> 2], i4[n5 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[n5 >> 2] = i4[C4 + 768 >> 2], i4[n5 + 4 >> 2] = p4, p4 = i4[A8 + 12 >> 2], i4[C4 + 728 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 732 >> 2] = p4, p4 = i4[A8 + 4 >> 2], i4[C4 + 720 >> 2] = i4[A8 >> 2], i4[C4 + 724 >> 2] = p4, p4 = i4[I7 + 12 >> 2], i4[C4 + 712 >> 2] = i4[I7 + 8 >> 2], i4[C4 + 716 >> 2] = p4, p4 = i4[I7 + 4 >> 2], i4[C4 + 704 >> 2] = i4[I7 >> 2], i4[C4 + 708 >> 2] = p4, AI(k4, C4 + 720 | 0, C4 + 704 | 0), p4 = i4[C4 + 780 >> 2], i4[I7 + 8 >> 2] = i4[C4 + 776 >> 2], i4[I7 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[I7 >> 2] = i4[C4 + 768 >> 2], i4[I7 + 4 >> 2] = p4, p4 = i4[B4 + 12 >> 2], i4[C4 + 696 >> 2] = i4[B4 + 8 >> 2], i4[C4 + 700 >> 2] = p4, p4 = i4[B4 + 4 >> 2], i4[C4 + 688 >> 2] = i4[B4 >> 2], i4[C4 + 692 >> 2] = p4, p4 = i4[A8 + 12 >> 2], i4[C4 + 680 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 684 >> 2] = p4, p4 = i4[A8 + 4 >> 2], i4[C4 + 672 >> 2] = i4[A8 >> 2], i4[C4 + 676 >> 2] = p4, AI(k4, C4 + 688 | 0, C4 + 672 | 0), p4 = i4[C4 + 780 >> 2], i4[A8 + 8 >> 2] = i4[C4 + 776 >> 2], i4[A8 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[A8 >> 2] = i4[C4 + 768 >> 2], i4[A8 + 4 >> 2] = p4, p4 = i4[w4 + 12 >> 2], i4[C4 + 664 >> 2] = i4[w4 + 8 >> 2], i4[C4 + 668 >> 2] = p4, p4 = i4[w4 + 4 >> 2], i4[C4 + 656 >> 2] = i4[w4 >> 2], i4[C4 + 660 >> 2] = p4, p4 = i4[B4 + 12 >> 2], i4[C4 + 648 >> 2] = i4[B4 + 8 >> 2], i4[C4 + 652 >> 2] = p4, p4 = i4[B4 + 4 >> 2], i4[C4 + 640 >> 2] = i4[B4 >> 2], i4[C4 + 644 >> 2] = p4, AI(k4, C4 + 656 | 0, C4 + 640 | 0), p4 = i4[C4 + 780 >> 2], i4[B4 + 8 >> 2] = i4[C4 + 776 >> 2], i4[B4 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[B4 >> 2] = i4[C4 + 768 >> 2], i4[B4 + 4 >> 2] = p4, p4 = i4[g6 + 12 >> 2], i4[C4 + 632 >> 2] = i4[g6 + 8 >> 2], i4[C4 + 636 >> 2] = p4, p4 = i4[g6 + 4 >> 2], i4[C4 + 624 >> 2] = i4[g6 >> 2], i4[C4 + 628 >> 2] = p4, p4 = i4[w4 + 12 >> 2], i4[C4 + 616 >> 2] = i4[w4 + 8 >> 2], i4[C4 + 620 >> 2] = p4, p4 = i4[w4 + 4 >> 2], i4[C4 + 608 >> 2] = i4[w4 >> 2], i4[C4 + 612 >> 2] = p4, AI(k4, C4 + 624 | 0, C4 + 608 | 0), p4 = i4[C4 + 780 >> 2], i4[w4 + 8 >> 2] = i4[C4 + 776 >> 2], i4[w4 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[w4 >> 2] = i4[C4 + 768 >> 2], i4[w4 + 4 >> 2] = p4, p4 = i4[C4 + 796 >> 2], i4[C4 + 600 >> 2] = i4[C4 + 792 >> 2], i4[C4 + 604 >> 2] = p4, p4 = i4[C4 + 788 >> 2], i4[C4 + 592 >> 2] = i4[C4 + 784 >> 2], i4[C4 + 596 >> 2] = p4, p4 = i4[g6 + 12 >> 2], i4[C4 + 584 >> 2] = i4[g6 + 8 >> 2], i4[C4 + 588 >> 2] = p4, p4 = i4[g6 + 4 >> 2], i4[C4 + 576 >> 2] = i4[g6 >> 2], i4[C4 + 580 >> 2] = p4, AI(k4, C4 + 592 | 0, C4 + 576 | 0), p4 = i4[C4 + 768 >> 2], F4 = i4[C4 + 772 >> 2], N4 = i4[C4 + 776 >> 2], i4[g6 + 12 >> 2] = i4[C4 + 780 >> 2] ^ a4, i4[g6 + 8 >> 2] = N4 ^ E4, i4[g6 + 4 >> 2] = F4 ^ Q5, i4[g6 >> 2] = p4 ^ e6, p4 = i4[n5 + 12 >> 2], i4[C4 + 792 >> 2] = i4[n5 + 8 >> 2], i4[C4 + 796 >> 2] = p4, p4 = i4[n5 + 4 >> 2], i4[C4 + 784 >> 2] = i4[n5 >> 2], i4[C4 + 788 >> 2] = p4, p4 = i4[I7 + 12 >> 2], i4[C4 + 568 >> 2] = i4[I7 + 8 >> 2], i4[C4 + 572 >> 2] = p4, p4 = i4[I7 + 4 >> 2], i4[C4 + 560 >> 2] = i4[I7 >> 2], i4[C4 + 564 >> 2] = p4, p4 = i4[n5 + 12 >> 2], i4[C4 + 552 >> 2] = i4[n5 + 8 >> 2], i4[C4 + 556 >> 2] = p4, p4 = i4[n5 + 4 >> 2], i4[C4 + 544 >> 2] = i4[n5 >> 2], i4[C4 + 548 >> 2] = p4, AI(k4, C4 + 560 | 0, C4 + 544 | 0), p4 = i4[C4 + 780 >> 2], i4[n5 + 8 >> 2] = i4[C4 + 776 >> 2], i4[n5 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[n5 >> 2] = i4[C4 + 768 >> 2], i4[n5 + 4 >> 2] = p4, p4 = i4[A8 + 12 >> 2], i4[C4 + 536 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 540 >> 2] = p4, p4 = i4[A8 + 4 >> 2], i4[C4 + 528 >> 2] = i4[A8 >> 2], i4[C4 + 532 >> 2] = p4, p4 = i4[I7 + 12 >> 2], i4[C4 + 520 >> 2] = i4[I7 + 8 >> 2], i4[C4 + 524 >> 2] = p4, p4 = i4[I7 + 4 >> 2], i4[C4 + 512 >> 2] = i4[I7 >> 2], i4[C4 + 516 >> 2] = p4, AI(k4, C4 + 528 | 0, C4 + 512 | 0), p4 = i4[C4 + 780 >> 2], i4[I7 + 8 >> 2] = i4[C4 + 776 >> 2], i4[I7 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[I7 >> 2] = i4[C4 + 768 >> 2], i4[I7 + 4 >> 2] = p4, p4 = i4[B4 + 12 >> 2], i4[C4 + 504 >> 2] = i4[B4 + 8 >> 2], i4[C4 + 508 >> 2] = p4, p4 = i4[B4 + 4 >> 2], i4[C4 + 496 >> 2] = i4[B4 >> 2], i4[C4 + 500 >> 2] = p4, p4 = i4[A8 + 12 >> 2], i4[C4 + 488 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 492 >> 2] = p4, p4 = i4[A8 + 4 >> 2], i4[C4 + 480 >> 2] = i4[A8 >> 2], i4[C4 + 484 >> 2] = p4, AI(k4, C4 + 496 | 0, C4 + 480 | 0), p4 = i4[C4 + 780 >> 2], i4[A8 + 8 >> 2] = i4[C4 + 776 >> 2], i4[A8 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[A8 >> 2] = i4[C4 + 768 >> 2], i4[A8 + 4 >> 2] = p4, p4 = i4[w4 + 12 >> 2], i4[C4 + 472 >> 2] = i4[w4 + 8 >> 2], i4[C4 + 476 >> 2] = p4, p4 = i4[w4 + 4 >> 2], i4[C4 + 464 >> 2] = i4[w4 >> 2], i4[C4 + 468 >> 2] = p4, p4 = i4[B4 + 12 >> 2], i4[C4 + 456 >> 2] = i4[B4 + 8 >> 2], i4[C4 + 460 >> 2] = p4, p4 = i4[B4 + 4 >> 2], i4[C4 + 448 >> 2] = i4[B4 >> 2], i4[C4 + 452 >> 2] = p4, AI(k4, C4 + 464 | 0, C4 + 448 | 0), p4 = i4[C4 + 780 >> 2], i4[B4 + 8 >> 2] = i4[C4 + 776 >> 2], i4[B4 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[B4 >> 2] = i4[C4 + 768 >> 2], i4[B4 + 4 >> 2] = p4, p4 = i4[g6 + 12 >> 2], i4[C4 + 440 >> 2] = i4[g6 + 8 >> 2], i4[C4 + 444 >> 2] = p4, p4 = i4[g6 + 4 >> 2], i4[C4 + 432 >> 2] = i4[g6 >> 2], i4[C4 + 436 >> 2] = p4, p4 = i4[w4 + 12 >> 2], i4[C4 + 424 >> 2] = i4[w4 + 8 >> 2], i4[C4 + 428 >> 2] = p4, p4 = i4[w4 + 4 >> 2], i4[C4 + 416 >> 2] = i4[w4 >> 2], i4[C4 + 420 >> 2] = p4, AI(k4, C4 + 432 | 0, C4 + 416 | 0), p4 = i4[C4 + 780 >> 2], i4[w4 + 8 >> 2] = i4[C4 + 776 >> 2], i4[w4 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[w4 >> 2] = i4[C4 + 768 >> 2], i4[w4 + 4 >> 2] = p4, p4 = i4[C4 + 796 >> 2], i4[C4 + 408 >> 2] = i4[C4 + 792 >> 2], i4[C4 + 412 >> 2] = p4, p4 = i4[C4 + 788 >> 2], i4[C4 + 400 >> 2] = i4[C4 + 784 >> 2], i4[C4 + 404 >> 2] = p4, p4 = i4[g6 + 12 >> 2], i4[C4 + 392 >> 2] = i4[g6 + 8 >> 2], i4[C4 + 396 >> 2] = p4, p4 = i4[g6 + 4 >> 2], i4[C4 + 384 >> 2] = i4[g6 >> 2], i4[C4 + 388 >> 2] = p4, AI(k4, C4 + 400 | 0, C4 + 384 | 0), p4 = i4[C4 + 768 >> 2], F4 = i4[C4 + 772 >> 2], N4 = i4[C4 + 776 >> 2], i4[g6 + 12 >> 2] = i4[C4 + 780 >> 2] ^ r4, i4[g6 + 8 >> 2] = N4 ^ t4, i4[g6 + 4 >> 2] = F4 ^ c4, i4[g6 >> 2] = p4 ^ _4, p4 = i4[n5 + 12 >> 2], i4[C4 + 792 >> 2] = i4[n5 + 8 >> 2], i4[C4 + 796 >> 2] = p4, p4 = i4[n5 + 4 >> 2], i4[C4 + 784 >> 2] = i4[n5 >> 2], i4[C4 + 788 >> 2] = p4, p4 = i4[I7 + 12 >> 2], i4[C4 + 376 >> 2] = i4[I7 + 8 >> 2], i4[C4 + 380 >> 2] = p4, p4 = i4[I7 + 4 >> 2], i4[C4 + 368 >> 2] = i4[I7 >> 2], i4[C4 + 372 >> 2] = p4, p4 = i4[n5 + 12 >> 2], i4[C4 + 360 >> 2] = i4[n5 + 8 >> 2], i4[C4 + 364 >> 2] = p4, p4 = i4[n5 + 4 >> 2], i4[C4 + 352 >> 2] = i4[n5 >> 2], i4[C4 + 356 >> 2] = p4, AI(k4, C4 + 368 | 0, C4 + 352 | 0), p4 = i4[C4 + 780 >> 2], i4[n5 + 8 >> 2] = i4[C4 + 776 >> 2], i4[n5 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[n5 >> 2] = i4[C4 + 768 >> 2], i4[n5 + 4 >> 2] = p4, p4 = i4[A8 + 12 >> 2], i4[C4 + 344 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 348 >> 2] = p4, p4 = i4[A8 + 4 >> 2], i4[C4 + 336 >> 2] = i4[A8 >> 2], i4[C4 + 340 >> 2] = p4, p4 = i4[I7 + 12 >> 2], i4[C4 + 328 >> 2] = i4[I7 + 8 >> 2], i4[C4 + 332 >> 2] = p4, p4 = i4[I7 + 4 >> 2], i4[C4 + 320 >> 2] = i4[I7 >> 2], i4[C4 + 324 >> 2] = p4, AI(k4, C4 + 336 | 0, C4 + 320 | 0), p4 = i4[C4 + 780 >> 2], i4[I7 + 8 >> 2] = i4[C4 + 776 >> 2], i4[I7 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[I7 >> 2] = i4[C4 + 768 >> 2], i4[I7 + 4 >> 2] = p4, p4 = i4[B4 + 12 >> 2], i4[C4 + 312 >> 2] = i4[B4 + 8 >> 2], i4[C4 + 316 >> 2] = p4, p4 = i4[B4 + 4 >> 2], i4[C4 + 304 >> 2] = i4[B4 >> 2], i4[C4 + 308 >> 2] = p4, p4 = i4[A8 + 12 >> 2], i4[C4 + 296 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 300 >> 2] = p4, p4 = i4[A8 + 4 >> 2], i4[C4 + 288 >> 2] = i4[A8 >> 2], i4[C4 + 292 >> 2] = p4, AI(k4, C4 + 304 | 0, C4 + 288 | 0), p4 = i4[C4 + 780 >> 2], i4[A8 + 8 >> 2] = i4[C4 + 776 >> 2], i4[A8 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[A8 >> 2] = i4[C4 + 768 >> 2], i4[A8 + 4 >> 2] = p4, p4 = i4[w4 + 12 >> 2], i4[C4 + 280 >> 2] = i4[w4 + 8 >> 2], i4[C4 + 284 >> 2] = p4, p4 = i4[w4 + 4 >> 2], i4[C4 + 272 >> 2] = i4[w4 >> 2], i4[C4 + 276 >> 2] = p4, p4 = i4[B4 + 12 >> 2], i4[C4 + 264 >> 2] = i4[B4 + 8 >> 2], i4[C4 + 268 >> 2] = p4, p4 = i4[B4 + 4 >> 2], i4[C4 + 256 >> 2] = i4[B4 >> 2], i4[C4 + 260 >> 2] = p4, AI(k4, C4 + 272 | 0, C4 + 256 | 0), p4 = i4[C4 + 780 >> 2], i4[B4 + 8 >> 2] = i4[C4 + 776 >> 2], i4[B4 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[B4 >> 2] = i4[C4 + 768 >> 2], i4[B4 + 4 >> 2] = p4, p4 = i4[g6 + 12 >> 2], i4[C4 + 248 >> 2] = i4[g6 + 8 >> 2], i4[C4 + 252 >> 2] = p4, p4 = i4[g6 + 4 >> 2], i4[C4 + 240 >> 2] = i4[g6 >> 2], i4[C4 + 244 >> 2] = p4, p4 = i4[w4 + 12 >> 2], i4[C4 + 232 >> 2] = i4[w4 + 8 >> 2], i4[C4 + 236 >> 2] = p4, p4 = i4[w4 + 4 >> 2], i4[C4 + 224 >> 2] = i4[w4 >> 2], i4[C4 + 228 >> 2] = p4, AI(k4, C4 + 240 | 0, C4 + 224 | 0), p4 = i4[C4 + 780 >> 2], i4[w4 + 8 >> 2] = i4[C4 + 776 >> 2], i4[w4 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[w4 >> 2] = i4[C4 + 768 >> 2], i4[w4 + 4 >> 2] = p4, p4 = i4[C4 + 796 >> 2], i4[C4 + 216 >> 2] = i4[C4 + 792 >> 2], i4[C4 + 220 >> 2] = p4, p4 = i4[C4 + 788 >> 2], i4[C4 + 208 >> 2] = i4[C4 + 784 >> 2], i4[C4 + 212 >> 2] = p4, p4 = i4[g6 + 12 >> 2], i4[C4 + 200 >> 2] = i4[g6 + 8 >> 2], i4[C4 + 204 >> 2] = p4, p4 = i4[g6 + 4 >> 2], i4[C4 + 192 >> 2] = i4[g6 >> 2], i4[C4 + 196 >> 2] = p4, AI(k4, C4 + 208 | 0, C4 + 192 | 0), p4 = i4[C4 + 768 >> 2], F4 = i4[C4 + 772 >> 2], N4 = i4[C4 + 776 >> 2], i4[g6 + 12 >> 2] = G4 ^ i4[C4 + 780 >> 2], i4[g6 + 8 >> 2] = N4 ^ D4, i4[g6 + 4 >> 2] = F4 ^ f4, i4[g6 >> 2] = p4 ^ y4, p4 = i4[n5 + 12 >> 2], i4[C4 + 792 >> 2] = i4[n5 + 8 >> 2], i4[C4 + 796 >> 2] = p4, p4 = i4[n5 + 4 >> 2], i4[C4 + 784 >> 2] = i4[n5 >> 2], i4[C4 + 788 >> 2] = p4, p4 = i4[I7 + 12 >> 2], i4[C4 + 184 >> 2] = i4[I7 + 8 >> 2], i4[C4 + 188 >> 2] = p4, p4 = i4[I7 + 4 >> 2], i4[C4 + 176 >> 2] = i4[I7 >> 2], i4[C4 + 180 >> 2] = p4, p4 = i4[n5 + 12 >> 2], i4[C4 + 168 >> 2] = i4[n5 + 8 >> 2], i4[C4 + 172 >> 2] = p4, p4 = i4[n5 + 4 >> 2], i4[C4 + 160 >> 2] = i4[n5 >> 2], i4[C4 + 164 >> 2] = p4, AI(k4, C4 + 176 | 0, C4 + 160 | 0), p4 = i4[C4 + 780 >> 2], i4[n5 + 8 >> 2] = i4[C4 + 776 >> 2], i4[n5 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[n5 >> 2] = i4[C4 + 768 >> 2], i4[n5 + 4 >> 2] = p4, p4 = i4[A8 + 12 >> 2], i4[C4 + 152 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 156 >> 2] = p4, p4 = i4[A8 + 4 >> 2], i4[C4 + 144 >> 2] = i4[A8 >> 2], i4[C4 + 148 >> 2] = p4, p4 = i4[I7 + 12 >> 2], i4[C4 + 136 >> 2] = i4[I7 + 8 >> 2], i4[C4 + 140 >> 2] = p4, p4 = i4[I7 + 4 >> 2], i4[C4 + 128 >> 2] = i4[I7 >> 2], i4[C4 + 132 >> 2] = p4, AI(k4, C4 + 144 | 0, C4 + 128 | 0), p4 = i4[C4 + 780 >> 2], i4[I7 + 8 >> 2] = i4[C4 + 776 >> 2], i4[I7 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[I7 >> 2] = i4[C4 + 768 >> 2], i4[I7 + 4 >> 2] = p4, p4 = i4[B4 + 12 >> 2], i4[C4 + 120 >> 2] = i4[B4 + 8 >> 2], i4[C4 + 124 >> 2] = p4, p4 = i4[B4 + 4 >> 2], i4[C4 + 112 >> 2] = i4[B4 >> 2], i4[C4 + 116 >> 2] = p4, p4 = i4[A8 + 12 >> 2], i4[C4 + 104 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 108 >> 2] = p4, p4 = i4[A8 + 4 >> 2], i4[C4 + 96 >> 2] = i4[A8 >> 2], i4[C4 + 100 >> 2] = p4, AI(k4, C4 + 112 | 0, C4 + 96 | 0), p4 = i4[C4 + 780 >> 2], i4[A8 + 8 >> 2] = i4[C4 + 776 >> 2], i4[A8 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[A8 >> 2] = i4[C4 + 768 >> 2], i4[A8 + 4 >> 2] = p4, p4 = i4[w4 + 12 >> 2], i4[C4 + 88 >> 2] = i4[w4 + 8 >> 2], i4[C4 + 92 >> 2] = p4, p4 = i4[w4 + 4 >> 2], i4[C4 + 80 >> 2] = i4[w4 >> 2], i4[C4 + 84 >> 2] = p4, p4 = i4[B4 + 12 >> 2], i4[C4 + 72 >> 2] = i4[B4 + 8 >> 2], i4[C4 + 76 >> 2] = p4, p4 = i4[B4 + 4 >> 2], i4[C4 + 64 >> 2] = i4[B4 >> 2], i4[C4 + 68 >> 2] = p4, AI(k4, C4 + 80 | 0, C4 - -64 | 0), p4 = i4[C4 + 780 >> 2], i4[B4 + 8 >> 2] = i4[C4 + 776 >> 2], i4[B4 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[B4 >> 2] = i4[C4 + 768 >> 2], i4[B4 + 4 >> 2] = p4, p4 = i4[g6 + 12 >> 2], i4[C4 + 56 >> 2] = i4[g6 + 8 >> 2], i4[C4 + 60 >> 2] = p4, p4 = i4[g6 + 4 >> 2], i4[C4 + 48 >> 2] = i4[g6 >> 2], i4[C4 + 52 >> 2] = p4, p4 = i4[w4 + 12 >> 2], i4[C4 + 40 >> 2] = i4[w4 + 8 >> 2], i4[C4 + 44 >> 2] = p4, p4 = i4[w4 + 4 >> 2], i4[C4 + 32 >> 2] = i4[w4 >> 2], i4[C4 + 36 >> 2] = p4, AI(k4, C4 + 48 | 0, C4 + 32 | 0), p4 = i4[C4 + 780 >> 2], i4[w4 + 8 >> 2] = i4[C4 + 776 >> 2], i4[w4 + 12 >> 2] = p4, p4 = i4[C4 + 772 >> 2], i4[w4 >> 2] = i4[C4 + 768 >> 2], i4[w4 + 4 >> 2] = p4, p4 = i4[C4 + 796 >> 2], i4[C4 + 24 >> 2] = i4[C4 + 792 >> 2], i4[C4 + 28 >> 2] = p4, p4 = i4[C4 + 788 >> 2], i4[C4 + 16 >> 2] = i4[C4 + 784 >> 2], i4[C4 + 20 >> 2] = p4, p4 = i4[g6 + 12 >> 2], i4[C4 + 8 >> 2] = i4[g6 + 8 >> 2], i4[C4 + 12 >> 2] = p4, p4 = i4[g6 + 4 >> 2], i4[C4 >> 2] = i4[g6 >> 2], i4[C4 + 4 >> 2] = p4, AI(k4, C4 + 16 | 0, C4), k4 = i4[C4 + 768 >> 2], p4 = i4[C4 + 772 >> 2], F4 = i4[C4 + 776 >> 2], i4[g6 + 12 >> 2] = U4 ^ i4[C4 + 780 >> 2], i4[g6 + 8 >> 2] = F4 ^ K4, i4[g6 + 4 >> 2] = p4 ^ h4, i4[g6 >> 2] = k4 ^ M4, 4 != (0 | (S4 = S4 + 1 | 0)); ) ;
                      s3 = C4 + 800 | 0;
                    }
                    function M3(A8, I7) {
                      var g6, B4, E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, p4, w4, n5, k4, F4, S4, N4, G4, M4, K4, U4 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, L4 = 0, P7 = 0, q3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, W2 = 0, V2 = 0;
                      for (s3 = g6 = s3 - 48 | 0, Y4 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24, H4 = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, C3[A8 + 24 | 0] = H4, C3[A8 + 25 | 0] = H4 >>> 8, C3[A8 + 26 | 0] = H4 >>> 16, C3[A8 + 27 | 0] = H4 >>> 24, C3[A8 + 28 | 0] = Y4, C3[A8 + 29 | 0] = Y4 >>> 8, C3[A8 + 30 | 0] = Y4 >>> 16, C3[A8 + 31 | 0] = Y4 >>> 24, Y4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, H4 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, C3[0 | A8] = H4, C3[A8 + 1 | 0] = H4 >>> 8, C3[A8 + 2 | 0] = H4 >>> 16, C3[A8 + 3 | 0] = H4 >>> 24, C3[A8 + 4 | 0] = Y4, C3[A8 + 5 | 0] = Y4 >>> 8, C3[A8 + 6 | 0] = Y4 >>> 16, C3[A8 + 7 | 0] = Y4 >>> 24, Y4 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, H4 = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, C3[A8 + 16 | 0] = H4, C3[A8 + 17 | 0] = H4 >>> 8, C3[A8 + 18 | 0] = H4 >>> 16, C3[A8 + 19 | 0] = H4 >>> 24, C3[A8 + 20 | 0] = Y4, C3[A8 + 21 | 0] = Y4 >>> 8, C3[A8 + 22 | 0] = Y4 >>> 16, C3[A8 + 23 | 0] = Y4 >>> 24, H4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, I7 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, C3[A8 + 12 | 0] = H4, C3[A8 + 13 | 0] = H4 >>> 8, C3[A8 + 14 | 0] = H4 >>> 16, C3[A8 + 15 | 0] = H4 >>> 24, I7 = o3[A8 + 31 | 0], C3[A8 + 31 | 0] = 127 & I7, fA(g6, A8), y4 = 128 & I7, s3 = I7 = s3 - 960 | 0, v3(H4 = I7 + 304 | 0, g6), i4[I7 + 304 >> 2] = i4[I7 + 304 >> 2] + 1, LA(H4, H4), Y4 = Ig(H4 = i4[I7 + 340 >> 2], H4 >> 31, 486662, 0), H4 = f3, l4 = (P7 = Y4 + 16777216 | 0) >>> 0 < 16777216 ? H4 + 1 | 0 : H4, x4 = Y4 - (-33554432 & P7) | 0, U4 = Ig(H4 = i4[I7 + 336 >> 2], H4 >> 31, 486662, 0), Y4 = f3, J4 = Ig(H4 = i4[I7 + 332 >> 2], H4 >> 31, 486662, 0), H4 = f3, u4 = U4, U4 = (U4 = (H4 = (m4 = J4 + 16777216 | 0) >>> 0 < 16777216 ? H4 + 1 | 0 : H4) >> 25) + Y4 | 0, H4 = (H4 = (33554431 & H4) << 7 | m4 >>> 25) >>> 0 > (d5 = u4 + H4 | 0) >>> 0 ? U4 + 1 | 0 : U4, B4 = ((67108863 & (H4 = (Y4 = d5 + 33554432 | 0) >>> 0 < 33554432 ? H4 + 1 | 0 : H4)) << 6 | Y4 >>> 26) + x4 | 0, i4[I7 + 292 >> 2] = 0 - B4, W2 = d5 - (-67108864 & Y4) | 0, i4[I7 + 288 >> 2] = 0 - W2, x4 = J4 - (-33554432 & m4) | 0, Y4 = Ig(H4 = i4[I7 + 328 >> 2], H4 >> 31, 486662, 0), H4 = f3, m4 = Ig(U4 = i4[I7 + 324 >> 2], U4 >> 31, 486662, 0), U4 = f3, u4 = Y4, H4 = H4 + (Y4 = (U4 = (d5 = m4 + 16777216 | 0) >>> 0 < 16777216 ? U4 + 1 | 0 : U4) >> 25) | 0, H4 = (U4 = u4 + (J4 = (33554431 & U4) << 7 | d5 >>> 25) | 0) >>> 0 < J4 >>> 0 ? H4 + 1 | 0 : H4, E4 = ((67108863 & (H4 = (Y4 = U4 + 33554432 | 0) >>> 0 < 33554432 ? H4 + 1 | 0 : H4)) << 6 | Y4 >>> 26) + x4 | 0, i4[I7 + 284 >> 2] = 0 - E4, a4 = U4 - (-67108864 & Y4) | 0, i4[I7 + 280 >> 2] = 0 - a4, x4 = m4 - (-33554432 & d5) | 0, U4 = Ig(H4 = i4[I7 + 320 >> 2], H4 >> 31, 486662, 0), H4 = f3, m4 = Ig(Y4 = i4[I7 + 316 >> 2], Y4 >> 31, 486662, 0), Y4 = f3, u4 = U4, H4 = (U4 = (Y4 = (d5 = m4 + 16777216 | 0) >>> 0 < 16777216 ? Y4 + 1 | 0 : Y4) >> 25) + H4 | 0, U4 = H4 = (Y4 = u4 + (J4 = (33554431 & Y4) << 7 | d5 >>> 25) | 0) >>> 0 < J4 >>> 0 ? H4 + 1 | 0 : H4, _4 = ((67108863 & (U4 = (J4 = Y4 + 33554432 | 0) >>> 0 < 33554432 ? U4 + 1 | 0 : U4)) << 6 | J4 >>> 26) + x4 | 0, i4[I7 + 276 >> 2] = 0 - _4, c4 = Y4 - (-67108864 & J4) | 0, i4[I7 + 272 >> 2] = 0 - c4, u4 = m4 - (-33554432 & d5) | 0, H4 = Ig(H4 = i4[I7 + 312 >> 2], H4 >> 31, 486662, 0), x4 = f3, J4 = Ig(Y4 = i4[I7 + 308 >> 2], Y4 >> 31, 486662, 0), U4 = f3, Y4 = (33554431 & (U4 = (m4 = J4 + 16777216 | 0) >>> 0 < 16777216 ? U4 + 1 | 0 : U4)) << 7 | m4 >>> 25, U4 = (U4 >> 25) + x4 | 0, Y4 = Y4 >>> 0 > (d5 = Y4 + H4 | 0) >>> 0 ? U4 + 1 | 0 : U4, t4 = ((67108863 & (Y4 = (H4 = d5 + 33554432 | 0) >>> 0 < 33554432 ? Y4 + 1 | 0 : Y4)) << 6 | H4 >>> 26) + u4 | 0, i4[I7 + 268 >> 2] = 0 - t4, r4 = d5 - (-67108864 & H4) | 0, i4[I7 + 264 >> 2] = 0 - r4, d5 = J4 - (-33554432 & m4) | 0, Y4 = Ig((33554431 & l4) << 7 | P7 >>> 25, l4 >> 25, 19, 0), H4 = f3, J4 = Y4, Y4 = Ig(U4 = i4[I7 + 304 >> 2], U4 >> 31, 486662, 0), H4 = f3 + H4 | 0, Y4 = (U4 = J4 + Y4 | 0) >>> 0 < Y4 >>> 0 ? H4 + 1 | 0 : H4, e6 = ((67108863 & (Y4 = (H4 = U4 + 33554432 | 0) >>> 0 < 33554432 ? Y4 + 1 | 0 : Y4)) << 6 | H4 >>> 26) + d5 | 0, i4[I7 + 260 >> 2] = 0 - e6, L4 = U4 - (-67108864 & H4) | 0, i4[I7 + 256 >> 2] = 0 - L4, R3(Y4 = I7 + 208 | 0, H4 = I7 + 256 | 0), b4(I7 + 160 | 0, H4, Y4), h4 = i4[I7 + 196 >> 2], D4 = i4[I7 + 160 >> 2], q3 = i4[I7 + 208 >> 2], p4 = i4[I7 + 164 >> 2], w4 = i4[I7 + 168 >> 2], z2 = i4[I7 + 212 >> 2], j2 = i4[I7 + 216 >> 2], n5 = i4[I7 + 172 >> 2], k4 = i4[I7 + 176 >> 2], X2 = i4[I7 + 220 >> 2], O2 = i4[I7 + 224 >> 2], F4 = i4[I7 + 180 >> 2], S4 = i4[I7 + 184 >> 2], u4 = i4[I7 + 228 >> 2], x4 = i4[I7 + 232 >> 2], N4 = i4[I7 + 188 >> 2], G4 = i4[I7 + 192 >> 2], Y4 = Ig(H4 = i4[I7 + 244 >> 2], H4 >> 31, 486662, 0), H4 = f3, l4 = (P7 = Y4 + 16777216 | 0) >>> 0 < 16777216 ? H4 + 1 | 0 : H4, M4 = Y4 - (-33554432 & P7) | 0, H4 = Ig(H4 = i4[I7 + 240 >> 2], H4 >> 31, 486662, 0), K4 = f3, J4 = Ig(Y4 = i4[I7 + 236 >> 2], Y4 >> 31, 486662, 0), U4 = f3, Y4 = H4, H4 = (33554431 & (U4 = (m4 = J4 + 16777216 | 0) >>> 0 < 16777216 ? U4 + 1 | 0 : U4)) << 7 | m4 >>> 25, U4 = (U4 >> 25) + K4 | 0, H4 = H4 >>> 0 > (d5 = Y4 + H4 | 0) >>> 0 ? U4 + 1 | 0 : U4, U4 = ((67108863 & (H4 = (Y4 = d5 + 33554432 | 0) >>> 0 < 33554432 ? H4 + 1 | 0 : H4)) << 6 | Y4 >>> 26) + M4 | 0, i4[I7 + 244 >> 2] = U4, i4[I7 + 388 >> 2] = U4 + (h4 - B4 | 0), H4 = d5 - (-67108864 & Y4) | 0, i4[I7 + 240 >> 2] = H4, i4[I7 + 384 >> 2] = H4 + (G4 - W2 | 0), W2 = J4 - (-33554432 & m4) | 0, H4 = Ig(x4, x4 >> 31, 486662, 0), J4 = f3, m4 = Ig(u4, u4 >> 31, 486662, 0), Y4 = f3, u4 = H4, H4 = (H4 = (Y4 = (d5 = m4 + 16777216 | 0) >>> 0 < 16777216 ? Y4 + 1 | 0 : Y4) >> 25) + J4 | 0, U4 = H4 = (U4 = (33554431 & Y4) << 7 | d5 >>> 25) >>> 0 > (Y4 = u4 + U4 | 0) >>> 0 ? H4 + 1 | 0 : H4, J4 = ((67108863 & (U4 = (J4 = Y4 + 33554432 | 0) >>> 0 < 33554432 ? U4 + 1 | 0 : U4)) << 6 | (H4 = J4) >>> 26) + W2 | 0, i4[I7 + 236 >> 2] = J4, i4[I7 + 380 >> 2] = J4 + (N4 - E4 | 0), H4 = Y4 - (-67108864 & H4) | 0, i4[I7 + 232 >> 2] = H4, i4[I7 + 376 >> 2] = H4 + (S4 - a4 | 0), x4 = m4 - (-33554432 & d5) | 0, U4 = Ig(O2, O2 >> 31, 486662, 0), Y4 = f3, J4 = Ig(X2, X2 >> 31, 486662, 0), H4 = f3, u4 = U4, U4 = (U4 = (H4 = (m4 = J4 + 16777216 | 0) >>> 0 < 16777216 ? H4 + 1 | 0 : H4) >> 25) + Y4 | 0, Y4 = (H4 = (33554431 & H4) << 7 | m4 >>> 25) >>> 0 > (d5 = u4 + H4 | 0) >>> 0 ? U4 + 1 | 0 : U4, U4 = ((67108863 & (Y4 = (H4 = d5 + 33554432 | 0) >>> 0 < 33554432 ? Y4 + 1 | 0 : Y4)) << 6 | H4 >>> 26) + x4 | 0, i4[I7 + 228 >> 2] = U4, i4[I7 + 372 >> 2] = U4 + (F4 - _4 | 0), H4 = d5 - (-67108864 & H4) | 0, i4[I7 + 224 >> 2] = H4, i4[I7 + 368 >> 2] = H4 + (k4 - c4 | 0), x4 = J4 - (-33554432 & m4) | 0, H4 = Ig(j2, j2 >> 31, 486662, 0), Y4 = f3, m4 = Ig(z2, z2 >> 31, 486662, 0), U4 = f3, u4 = H4, Y4 = (H4 = (U4 = (d5 = m4 + 16777216 | 0) >>> 0 < 16777216 ? U4 + 1 | 0 : U4) >> 25) + Y4 | 0, H4 = Y4 = (U4 = u4 + (J4 = (33554431 & U4) << 7 | d5 >>> 25) | 0) >>> 0 < J4 >>> 0 ? Y4 + 1 | 0 : Y4, J4 = ((67108863 & (H4 = (J4 = U4 + 33554432 | 0) >>> 0 < 33554432 ? H4 + 1 | 0 : H4)) << 6 | (Y4 = J4) >>> 26) + x4 | 0, i4[I7 + 220 >> 2] = J4, i4[I7 + 364 >> 2] = J4 + (n5 - t4 | 0), H4 = U4 - (-67108864 & Y4) | 0, i4[I7 + 216 >> 2] = H4, i4[I7 + 360 >> 2] = H4 + (w4 - r4 | 0), d5 = m4 - (-33554432 & d5) | 0, Y4 = Ig((33554431 & l4) << 7 | P7 >>> 25, l4 >> 25, 19, 0), H4 = f3, U4 = Y4, Y4 = Ig(q3, q3 >> 31, 486662, 0), H4 = f3 + H4 | 0, H4 = (U4 = U4 + Y4 | 0) >>> 0 < Y4 >>> 0 ? H4 + 1 | 0 : H4, l4 = ((67108863 & (H4 = (Y4 = U4 + 33554432 | 0) >>> 0 < 33554432 ? H4 + 1 | 0 : H4)) << 6 | Y4 >>> 26) + d5 | 0, i4[I7 + 212 >> 2] = l4, i4[I7 + 356 >> 2] = l4 + (p4 - e6 | 0), H4 = U4 - (-67108864 & Y4) | 0, i4[I7 + 208 >> 2] = H4, i4[I7 + 352 >> 2] = H4 + (D4 - L4 | 0), b4(H4 = I7 + 624 | 0, Y4 = I7 + 352 | 0, Y4), b4(I7, Y4, H4), R3(Y4 = I7 + 784 | 0, I7), R3(Y4, Y4), b4(H4 = I7 + 912 | 0, I7, Y4), R3(Y4 = I7 + 576 | 0, H4), R3(Y4, Y4), R3(Y4, Y4), R3(Y4, Y4), b4(U4 = I7 + 528 | 0, H4, Y4), R3(U4, U4), R3(U4, U4), b4(U4, U4, I7), H4 = i4[I7 + 564 >> 2], i4[I7 + 512 >> 2] = i4[I7 + 560 >> 2], i4[I7 + 516 >> 2] = H4, H4 = i4[I7 + 556 >> 2], i4[I7 + 504 >> 2] = i4[I7 + 552 >> 2], i4[I7 + 508 >> 2] = H4, H4 = i4[I7 + 548 >> 2], i4[I7 + 496 >> 2] = i4[I7 + 544 >> 2], i4[I7 + 500 >> 2] = H4, H4 = i4[I7 + 540 >> 2], i4[I7 + 488 >> 2] = i4[I7 + 536 >> 2], i4[I7 + 492 >> 2] = H4, H4 = i4[I7 + 532 >> 2], i4[I7 + 480 >> 2] = i4[I7 + 528 >> 2], i4[I7 + 484 >> 2] = H4, R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), b4(U4, U4, H4 = I7 + 480 | 0), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), b4(U4, U4, H4), H4 = i4[I7 + 564 >> 2], i4[I7 + 464 >> 2] = i4[I7 + 560 >> 2], i4[I7 + 468 >> 2] = H4, H4 = i4[I7 + 556 >> 2], i4[I7 + 456 >> 2] = i4[I7 + 552 >> 2], i4[I7 + 460 >> 2] = H4, H4 = i4[I7 + 548 >> 2], i4[I7 + 448 >> 2] = i4[I7 + 544 >> 2], i4[I7 + 452 >> 2] = H4, H4 = i4[I7 + 540 >> 2], i4[I7 + 440 >> 2] = i4[I7 + 536 >> 2], i4[I7 + 444 >> 2] = H4, H4 = i4[I7 + 532 >> 2], i4[I7 + 432 >> 2] = i4[I7 + 528 >> 2], i4[I7 + 436 >> 2] = H4, R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), b4(U4, U4, Y4 = I7 + 432 | 0), H4 = i4[I7 + 564 >> 2], i4[I7 + 464 >> 2] = i4[I7 + 560 >> 2], i4[I7 + 468 >> 2] = H4, H4 = i4[I7 + 556 >> 2], i4[I7 + 456 >> 2] = i4[I7 + 552 >> 2], i4[I7 + 460 >> 2] = H4, H4 = i4[I7 + 548 >> 2], i4[I7 + 448 >> 2] = i4[I7 + 544 >> 2], i4[I7 + 452 >> 2] = H4, H4 = i4[I7 + 540 >> 2], i4[I7 + 440 >> 2] = i4[I7 + 536 >> 2], i4[I7 + 444 >> 2] = H4, H4 = i4[I7 + 532 >> 2], i4[I7 + 432 >> 2] = i4[I7 + 528 >> 2], i4[I7 + 436 >> 2] = H4, R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), R3(U4, U4), b4(U4, U4, Y4), H4 = i4[I7 + 564 >> 2], i4[I7 + 464 >> 2] = i4[I7 + 560 >> 2], i4[I7 + 468 >> 2] = H4, H4 = i4[I7 + 556 >> 2], i4[I7 + 456 >> 2] = i4[I7 + 552 >> 2], i4[I7 + 460 >> 2] = H4, H4 = i4[I7 + 548 >> 2], i4[I7 + 448 >> 2] = i4[I7 + 544 >> 2], i4[I7 + 452 >> 2] = H4, H4 = i4[I7 + 540 >> 2], i4[I7 + 440 >> 2] = i4[I7 + 536 >> 2], i4[I7 + 444 >> 2] = H4, H4 = i4[I7 + 532 >> 2], i4[I7 + 432 >> 2] = i4[I7 + 528 >> 2], i4[I7 + 436 >> 2] = H4; R3(H4 = I7 + 528 | 0, H4), 120 != (0 | (V2 = V2 + 1 | 0)); ) ;
                      b4(H4, H4, I7 + 432 | 0), R3(H4, H4), R3(H4, H4), R3(H4, H4), R3(H4, H4), R3(H4, H4), R3(H4, H4), R3(H4, H4), R3(H4, H4), R3(H4, H4), R3(H4, H4), b4(H4, H4, I7 + 480 | 0), R3(H4, H4), R3(H4, H4), R3(H4, H4), b4(H4, H4, I7), R3(H4, H4), QI(I7 + 400 | 0, H4), q3 = i4[I7 + 256 >> 2], z2 = i4[I7 + 260 >> 2], j2 = i4[I7 + 264 >> 2], X2 = i4[I7 + 268 >> 2], O2 = i4[I7 + 272 >> 2], d5 = i4[I7 + 276 >> 2], l4 = i4[I7 + 280 >> 2], U4 = i4[I7 + 284 >> 2], Y4 = i4[I7 + 288 >> 2], u4 = (L4 = 0 - (1 & C3[I7 + 401 | 0]) | 0) & (0 - (H4 = i4[I7 + 292 >> 2]) ^ H4) ^ H4, i4[I7 + 660 >> 2] = u4, x4 = Y4 ^ L4 & (Y4 ^ 0 - Y4), i4[I7 + 656 >> 2] = x4, P7 = U4 ^ L4 & (U4 ^ 0 - U4), i4[I7 + 652 >> 2] = P7, J4 = l4 ^ L4 & (l4 ^ 0 - l4), i4[I7 + 648 >> 2] = J4, m4 = d5 ^ L4 & (d5 ^ 0 - d5), i4[I7 + 644 >> 2] = m4, d5 = O2 ^ L4 & (O2 ^ 0 - O2), i4[I7 + 640 >> 2] = d5, l4 = X2 ^ L4 & (X2 ^ 0 - X2), i4[I7 + 636 >> 2] = l4, U4 = j2 ^ L4 & (j2 ^ 0 - j2), i4[I7 + 632 >> 2] = U4, Y4 = z2 ^ L4 & (z2 ^ 0 - z2), i4[I7 + 628 >> 2] = Y4, H4 = (q3 ^ L4 & (q3 ^ 0 - q3)) - (486662 & L4) | 0, i4[I7 + 624 >> 2] = H4 + 1, i4[I7 + 820 >> 2] = u4, i4[I7 + 816 >> 2] = x4, i4[I7 + 812 >> 2] = P7, i4[I7 + 808 >> 2] = J4, i4[I7 + 804 >> 2] = m4, i4[I7 + 800 >> 2] = d5, i4[I7 + 796 >> 2] = l4, i4[I7 + 792 >> 2] = U4, i4[I7 + 788 >> 2] = Y4, i4[I7 + 784 >> 2] = H4 - 1, LA(I7, I7 + 624 | 0), b4(H4 = I7 + 912 | 0, I7 + 784 | 0, I7), QI(A8, H4), C3[A8 + 31 | 0] = o3[A8 + 31 | 0] | y4, MA(I7, A8) && (DB(), Q4()), H4 = i4[I7 + 36 >> 2], i4[I7 + 816 >> 2] = i4[I7 + 32 >> 2], i4[I7 + 820 >> 2] = H4, H4 = i4[I7 + 28 >> 2], i4[I7 + 808 >> 2] = i4[I7 + 24 >> 2], i4[I7 + 812 >> 2] = H4, H4 = i4[I7 + 20 >> 2], i4[I7 + 800 >> 2] = i4[I7 + 16 >> 2], i4[I7 + 804 >> 2] = H4, H4 = i4[I7 + 12 >> 2], i4[I7 + 792 >> 2] = i4[I7 + 8 >> 2], i4[I7 + 796 >> 2] = H4, H4 = i4[I7 + 52 >> 2], i4[I7 + 832 >> 2] = i4[I7 + 48 >> 2], i4[I7 + 836 >> 2] = H4, H4 = i4[I7 + 60 >> 2], i4[I7 + 840 >> 2] = i4[I7 + 56 >> 2], i4[I7 + 844 >> 2] = H4, H4 = i4[4 + (Y4 = I7 - -64 | 0) >> 2], i4[I7 + 848 >> 2] = i4[Y4 >> 2], i4[I7 + 852 >> 2] = H4, H4 = i4[I7 + 76 >> 2], i4[I7 + 856 >> 2] = i4[I7 + 72 >> 2], i4[I7 + 860 >> 2] = H4, H4 = i4[I7 + 4 >> 2], i4[I7 + 784 >> 2] = i4[I7 >> 2], i4[I7 + 788 >> 2] = H4, H4 = i4[I7 + 44 >> 2], i4[I7 + 824 >> 2] = i4[I7 + 40 >> 2], i4[I7 + 828 >> 2] = H4, H4 = i4[I7 + 116 >> 2], i4[I7 + 896 >> 2] = i4[I7 + 112 >> 2], i4[I7 + 900 >> 2] = H4, H4 = i4[I7 + 108 >> 2], i4[I7 + 888 >> 2] = i4[I7 + 104 >> 2], i4[I7 + 892 >> 2] = H4, H4 = i4[I7 + 100 >> 2], i4[I7 + 880 >> 2] = i4[I7 + 96 >> 2], i4[I7 + 884 >> 2] = H4, H4 = i4[I7 + 92 >> 2], i4[I7 + 872 >> 2] = i4[I7 + 88 >> 2], i4[I7 + 876 >> 2] = H4, H4 = i4[I7 + 84 >> 2], i4[I7 + 864 >> 2] = i4[I7 + 80 >> 2], i4[I7 + 868 >> 2] = H4, KA(J4 = I7 + 624 | 0, m4 = I7 + 784 | 0), b4(m4, J4, d5 = I7 + 744 | 0), b4(Y4 = I7 + 824 | 0, U4 = I7 + 664 | 0, l4 = I7 + 704 | 0), b4(H4 = I7 + 864 | 0, l4, d5), KA(J4, m4), b4(m4, J4, d5), b4(Y4, U4, l4), b4(H4, l4, d5), KA(J4, m4), b4(I7, J4, d5), b4(Y4 = I7 + 40 | 0, U4, l4), b4(H4 = I7 + 80 | 0, l4, d5), b4(I7 + 120 | 0, J4, U4), LA(J4, H4), b4(m4, I7, J4), b4(H4 = I7 + 912 | 0, Y4, J4), QI(A8, H4), QI(I7 + 576 | 0, m4), C3[A8 + 31 | 0] = o3[A8 + 31 | 0] ^ o3[I7 + 576 | 0] << 7, s3 = I7 + 960 | 0, s3 = g6 + 48 | 0;
                    }
                    function K3(A8) {
                      var I7, g6 = 0, C4 = 0, B4 = 0, Q5 = 0, a4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0;
                      s3 = I7 = s3 - 16 | 0;
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                Q: {
                                  i: {
                                    o: {
                                      E: {
                                        a: {
                                          if ((A8 |= 0) >>> 0 <= 244) {
                                            if (3 & (g6 = (Q5 = i4[9405]) >>> (A8 = (t4 = A8 >>> 0 < 11 ? 16 : A8 + 11 & 504) >>> 3 | 0) | 0)) {
                                              A8 = 37660 + (g6 = (C4 = A8 + (1 & ~g6) | 0) << 3) | 0, g6 = i4[g6 + 37668 >> 2], (0 | A8) != (0 | (B4 = i4[g6 + 8 >> 2])) ? (i4[B4 + 12 >> 2] = A8, i4[A8 + 8 >> 2] = B4) : (h4 = 37620, D4 = Lg(-2, C4) & Q5, i4[h4 >> 2] = D4), A8 = g6 + 8 | 0, C4 <<= 3, i4[g6 + 4 >> 2] = 3 | C4, i4[4 + (g6 = g6 + C4 | 0) >> 2] = 1 | i4[g6 + 4 >> 2];
                                              break A;
                                            }
                                            if ((r4 = i4[9407]) >>> 0 >= t4 >>> 0) break a;
                                            if (g6) {
                                              g6 = 37660 + (C4 = (A8 = FC((0 - (C4 = 2 << A8) | C4) & g6 << A8)) << 3) | 0, C4 = i4[C4 + 37668 >> 2], (0 | g6) != (0 | (B4 = i4[C4 + 8 >> 2])) ? (i4[B4 + 12 >> 2] = g6, i4[g6 + 8 >> 2] = B4) : (Q5 = Lg(-2, A8) & Q5, i4[9405] = Q5), i4[C4 + 4 >> 2] = 3 | t4, a4 = (A8 <<= 3) - t4 | 0, i4[4 + (c4 = C4 + t4 | 0) >> 2] = 1 | a4, i4[A8 + C4 >> 2] = a4, r4 && (A8 = 37660 + (-8 & r4) | 0, B4 = i4[9410], (g6 = 1 << (r4 >>> 3)) & Q5 ? g6 = i4[A8 + 8 >> 2] : (i4[9405] = g6 | Q5, g6 = A8), i4[A8 + 8 >> 2] = B4, i4[g6 + 12 >> 2] = B4, i4[B4 + 12 >> 2] = A8, i4[B4 + 8 >> 2] = g6), A8 = C4 + 8 | 0, i4[9410] = c4, i4[9407] = a4;
                                              break A;
                                            }
                                            if (!(y4 = i4[9406])) break a;
                                            for (C4 = i4[37924 + (FC(y4) << 2) >> 2], a4 = (-8 & i4[C4 + 4 >> 2]) - t4 | 0, g6 = C4; (A8 = i4[g6 + 16 >> 2]) || (A8 = i4[g6 + 20 >> 2]); ) a4 = (g6 = (B4 = (-8 & i4[A8 + 4 >> 2]) - t4 | 0) >>> 0 < a4 >>> 0) ? B4 : a4, C4 = g6 ? A8 : C4, g6 = A8;
                                            if (e6 = i4[C4 + 24 >> 2], (0 | C4) != (0 | (A8 = i4[C4 + 12 >> 2]))) {
                                              g6 = i4[C4 + 8 >> 2], i4[g6 + 12 >> 2] = A8, i4[A8 + 8 >> 2] = g6;
                                              break I;
                                            }
                                            if (g6 = i4[C4 + 20 >> 2]) B4 = C4 + 20 | 0;
                                            else {
                                              if (!(g6 = i4[C4 + 16 >> 2])) break E;
                                              B4 = C4 + 16 | 0;
                                            }
                                            for (; c4 = B4, B4 = (A8 = g6) + 20 | 0, (g6 = i4[A8 + 20 >> 2]) || (B4 = A8 + 16 | 0, g6 = i4[A8 + 16 >> 2]); ) ;
                                            i4[c4 >> 2] = 0;
                                            break I;
                                          }
                                          if (t4 = -1, !(A8 >>> 0 > 4294967231) && (t4 = -8 & (g6 = A8 + 11 | 0), c4 = i4[9406])) {
                                            r4 = 31, a4 = 0 - t4 | 0, A8 >>> 0 <= 16777204 && (r4 = 62 + ((t4 >>> 38 - (A8 = _3(g6 >>> 8 | 0)) & 1) - (A8 << 1) | 0) | 0);
                                            _: {
                                              c: {
                                                if (g6 = i4[37924 + (r4 << 2) >> 2]) for (A8 = 0, C4 = t4 << (31 != (0 | r4) ? 25 - (r4 >>> 1 | 0) : 0); ; ) {
                                                  if (!((Q5 = (-8 & i4[g6 + 4 >> 2]) - t4 | 0) >>> 0 >= a4 >>> 0 || (B4 = g6, a4 = Q5))) {
                                                    a4 = 0, A8 = g6;
                                                    break c;
                                                  }
                                                  if (Q5 = i4[g6 + 20 >> 2], g6 = i4[16 + ((C4 >>> 29 & 4) + g6 | 0) >> 2], A8 = Q5 ? (0 | Q5) == (0 | g6) ? A8 : Q5 : A8, C4 <<= 1, !g6) break;
                                                }
                                                else A8 = 0;
                                                if (!(A8 | B4)) {
                                                  if (B4 = 0, !(A8 = (0 - (A8 = 2 << r4) | A8) & c4)) break a;
                                                  A8 = i4[37924 + (FC(A8) << 2) >> 2];
                                                }
                                                if (!A8) break _;
                                              }
                                              for (; a4 = (g6 = (C4 = (-8 & i4[A8 + 4 >> 2]) - t4 | 0) >>> 0 < a4 >>> 0) ? C4 : a4, B4 = g6 ? A8 : B4, A8 = (g6 = i4[A8 + 16 >> 2]) || i4[A8 + 20 >> 2]; ) ;
                                            }
                                            if (!(!B4 | i4[9407] - t4 >>> 0 <= a4 >>> 0)) {
                                              if (r4 = i4[B4 + 24 >> 2], (0 | B4) != (0 | (A8 = i4[B4 + 12 >> 2]))) {
                                                g6 = i4[B4 + 8 >> 2], i4[g6 + 12 >> 2] = A8, i4[A8 + 8 >> 2] = g6;
                                                break g;
                                              }
                                              if (g6 = i4[B4 + 20 >> 2]) C4 = B4 + 20 | 0;
                                              else {
                                                if (!(g6 = i4[B4 + 16 >> 2])) break o;
                                                C4 = B4 + 16 | 0;
                                              }
                                              for (; Q5 = C4, C4 = (A8 = g6) + 20 | 0, (g6 = i4[A8 + 20 >> 2]) || (C4 = A8 + 16 | 0, g6 = i4[A8 + 16 >> 2]); ) ;
                                              i4[Q5 >> 2] = 0;
                                              break g;
                                            }
                                          }
                                        }
                                        if ((B4 = i4[9407]) >>> 0 >= t4 >>> 0) {
                                          A8 = i4[9410], (g6 = B4 - t4 | 0) >>> 0 >= 16 ? (i4[4 + (C4 = A8 + t4 | 0) >> 2] = 1 | g6, i4[A8 + B4 >> 2] = g6, i4[A8 + 4 >> 2] = 3 | t4) : (i4[A8 + 4 >> 2] = 3 | B4, i4[4 + (g6 = A8 + B4 | 0) >> 2] = 1 | i4[g6 + 4 >> 2], C4 = 0, g6 = 0), i4[9407] = g6, i4[9410] = C4, A8 = A8 + 8 | 0;
                                          break A;
                                        }
                                        if ((C4 = i4[9408]) >>> 0 > t4 >>> 0) {
                                          g6 = C4 - t4 | 0, i4[9408] = g6, C4 = (A8 = i4[9411]) + t4 | 0, i4[9411] = C4, i4[C4 + 4 >> 2] = 1 | g6, i4[A8 + 4 >> 2] = 3 | t4, A8 = A8 + 8 | 0;
                                          break A;
                                        }
                                        if (A8 = 0, a4 = t4 + 47 | 0, i4[9523] ? g6 = i4[9525] : (i4[9526] = -1, i4[9527] = -1, i4[9524] = 4096, i4[9525] = 4096, i4[9523] = I7 + 12 & -16 ^ 1431655768, i4[9528] = 0, i4[9516] = 0, g6 = 4096), (g6 = (Q5 = a4 + g6 | 0) & (c4 = 0 - g6 | 0)) >>> 0 <= t4 >>> 0) break A;
                                        if ((r4 = i4[9515]) && (B4 = (e6 = i4[9513]) + g6 | 0) >>> 0 <= e6 >>> 0 | B4 >>> 0 > r4 >>> 0) break A;
                                        a: {
                                          if (!(4 & o3[38064])) {
                                            _: {
                                              c: {
                                                t: {
                                                  r: {
                                                    if (B4 = i4[9411]) for (A8 = 38068; ; ) {
                                                      if ((r4 = i4[A8 >> 2]) >>> 0 <= B4 >>> 0 & B4 >>> 0 < r4 + i4[A8 + 4 >> 2] >>> 0) break r;
                                                      if (!(A8 = i4[A8 + 8 >> 2])) break;
                                                    }
                                                    if (-1 == (0 | (C4 = cg(0)))) break _;
                                                    if (Q5 = g6, (B4 = (A8 = i4[9524]) - 1 | 0) & C4 && (Q5 = (g6 - C4 | 0) + (C4 + B4 & 0 - A8) | 0), Q5 >>> 0 <= t4 >>> 0) break _;
                                                    if ((B4 = i4[9515]) && (A8 = (c4 = i4[9513]) + Q5 | 0) >>> 0 <= c4 >>> 0 | A8 >>> 0 > B4 >>> 0) break _;
                                                    if ((0 | C4) != (0 | (A8 = cg(Q5)))) break t;
                                                    break a;
                                                  }
                                                  if ((0 | (C4 = cg(Q5 = c4 & Q5 - C4))) == (i4[A8 >> 2] + i4[A8 + 4 >> 2] | 0)) break c;
                                                  A8 = C4;
                                                }
                                                if (-1 == (0 | A8)) break _;
                                                if (t4 + 48 >>> 0 <= Q5 >>> 0) {
                                                  C4 = A8;
                                                  break a;
                                                }
                                                if (-1 == (0 | cg(C4 = (C4 = i4[9525]) + (a4 - Q5 | 0) & 0 - C4))) break _;
                                                Q5 = C4 + Q5 | 0, C4 = A8;
                                                break a;
                                              }
                                              if (-1 != (0 | C4)) break a;
                                            }
                                            i4[9516] = 4 | i4[9516];
                                          }
                                          if (-1 == (0 | (C4 = cg(g6))) | -1 == (0 | (A8 = cg(0))) | A8 >>> 0 <= C4 >>> 0) break B;
                                          if ((Q5 = A8 - C4 | 0) >>> 0 <= t4 + 40 >>> 0) break B;
                                        }
                                        A8 = i4[9513] + Q5 | 0, i4[9513] = A8, A8 >>> 0 > E3[9514] && (i4[9514] = A8);
                                        a: {
                                          if (a4 = i4[9411]) {
                                            for (A8 = 38068; ; ) {
                                              if (((g6 = i4[A8 >> 2]) + (B4 = i4[A8 + 4 >> 2]) | 0) == (0 | C4)) break a;
                                              if (!(A8 = i4[A8 + 8 >> 2])) break;
                                            }
                                            break i;
                                          }
                                          for ((A8 = i4[9409]) >>> 0 <= C4 >>> 0 && A8 || (i4[9409] = C4), A8 = 0, i4[9518] = Q5, i4[9517] = C4, i4[9413] = -1, i4[9414] = i4[9523], i4[9520] = 0; B4 = 37660 + (g6 = A8 << 3) | 0, i4[g6 + 37668 >> 2] = B4, i4[g6 + 37672 >> 2] = B4, 32 != (0 | (A8 = A8 + 1 | 0)); ) ;
                                          B4 = (A8 = Q5 - 40 | 0) - (g6 = -8 - C4 & 7) | 0, i4[9408] = B4, g6 = g6 + C4 | 0, i4[9411] = g6, i4[g6 + 4 >> 2] = 1 | B4, i4[4 + (A8 + C4 | 0) >> 2] = 40, i4[9412] = i4[9527];
                                          break Q;
                                        }
                                        if (8 & i4[A8 + 12 >> 2] | C4 >>> 0 <= a4 >>> 0 | g6 >>> 0 > a4 >>> 0) break i;
                                        i4[A8 + 4 >> 2] = B4 + Q5, g6 = (A8 = -8 - a4 & 7) + a4 | 0, i4[9411] = g6, A8 = (C4 = i4[9408] + Q5 | 0) - A8 | 0, i4[9408] = A8, i4[g6 + 4 >> 2] = 1 | A8, i4[4 + (C4 + a4 | 0) >> 2] = 40, i4[9412] = i4[9527];
                                        break Q;
                                      }
                                      A8 = 0;
                                      break I;
                                    }
                                    A8 = 0;
                                    break g;
                                  }
                                  E3[9409] > C4 >>> 0 && (i4[9409] = C4), B4 = C4 + Q5 | 0, A8 = 38068;
                                  i: {
                                    for (; ; ) {
                                      if ((0 | (g6 = i4[A8 >> 2])) != (0 | B4)) {
                                        if (A8 = i4[A8 + 8 >> 2]) continue;
                                        break i;
                                      }
                                      break;
                                    }
                                    if (!(8 & o3[A8 + 12 | 0])) break C;
                                  }
                                  for (A8 = 38068; !((g6 = i4[A8 >> 2]) >>> 0 <= a4 >>> 0 && (B4 = g6 + i4[A8 + 4 >> 2] | 0) >>> 0 > a4 >>> 0); ) A8 = i4[A8 + 8 >> 2];
                                  for (c4 = (A8 = Q5 - 40 | 0) - (g6 = -8 - C4 & 7) | 0, i4[9408] = c4, g6 = g6 + C4 | 0, i4[9411] = g6, i4[g6 + 4 >> 2] = 1 | c4, i4[4 + (A8 + C4 | 0) >> 2] = 40, i4[9412] = i4[9527], i4[(g6 = (A8 = (B4 + (39 - B4 & 7) | 0) - 47 | 0) >>> 0 < a4 + 16 >>> 0 ? a4 : A8) + 4 >> 2] = 27, A8 = i4[9520], i4[g6 + 16 >> 2] = i4[9519], i4[g6 + 20 >> 2] = A8, A8 = i4[9518], i4[g6 + 8 >> 2] = i4[9517], i4[g6 + 12 >> 2] = A8, i4[9519] = g6 + 8, i4[9518] = Q5, i4[9517] = C4, i4[9520] = 0, A8 = g6 + 24 | 0; i4[A8 + 4 >> 2] = 7, C4 = A8 + 8 | 0, A8 = A8 + 4 | 0, C4 >>> 0 < B4 >>> 0; ) ;
                                  if ((0 | g6) != (0 | a4)) {
                                    i4[g6 + 4 >> 2] = -2 & i4[g6 + 4 >> 2], C4 = g6 - a4 | 0, i4[a4 + 4 >> 2] = 1 | C4, i4[g6 >> 2] = C4;
                                    i: if (C4 >>> 0 <= 255) A8 = 37660 + (-8 & C4) | 0, (g6 = i4[9405]) & (C4 = 1 << (C4 >>> 3)) ? g6 = i4[A8 + 8 >> 2] : (i4[9405] = g6 | C4, g6 = A8), i4[A8 + 8 >> 2] = a4, i4[g6 + 12 >> 2] = a4, B4 = 8, C4 = 12;
                                    else {
                                      A8 = 31, C4 >>> 0 <= 16777215 && (A8 = 62 + ((C4 >>> 38 - (A8 = _3(C4 >>> 8 | 0)) & 1) - (A8 << 1) | 0) | 0), i4[a4 + 28 >> 2] = A8, i4[a4 + 16 >> 2] = 0, i4[a4 + 20 >> 2] = 0, g6 = 37924 + (A8 << 2) | 0;
                                      o: {
                                        if ((B4 = i4[9406]) & (Q5 = 1 << A8)) {
                                          for (A8 = C4 << (31 != (0 | A8) ? 25 - (A8 >>> 1 | 0) : 0), B4 = i4[g6 >> 2]; ; ) {
                                            if ((0 | C4) == (-8 & i4[(g6 = B4) + 4 >> 2])) break o;
                                            if (B4 = A8 >>> 29 | 0, A8 <<= 1, !(B4 = i4[16 + (Q5 = (4 & B4) + g6 | 0) >> 2])) break;
                                          }
                                          i4[Q5 + 16 >> 2] = a4;
                                        } else i4[9406] = B4 | Q5, i4[g6 >> 2] = a4;
                                        i4[a4 + 24 >> 2] = g6, A8 = g6 = a4, B4 = 12, C4 = 8;
                                        break i;
                                      }
                                      A8 = i4[g6 + 8 >> 2], i4[A8 + 12 >> 2] = a4, i4[g6 + 8 >> 2] = a4, i4[a4 + 8 >> 2] = A8, A8 = 0, B4 = 12, C4 = 24;
                                    }
                                    i4[B4 + a4 >> 2] = g6, i4[C4 + a4 >> 2] = A8;
                                  }
                                }
                                if (!((A8 = i4[9408]) >>> 0 <= t4 >>> 0)) {
                                  g6 = A8 - t4 | 0, i4[9408] = g6, C4 = (A8 = i4[9411]) + t4 | 0, i4[9411] = C4, i4[C4 + 4 >> 2] = 1 | g6, i4[A8 + 4 >> 2] = 3 | t4, A8 = A8 + 8 | 0;
                                  break A;
                                }
                              }
                              i4[9404] = 48, A8 = 0;
                              break A;
                            }
                            i4[A8 >> 2] = C4, i4[A8 + 4 >> 2] = i4[A8 + 4 >> 2] + Q5, i4[4 + (r4 = (-8 - C4 & 7) + C4 | 0) >> 2] = 3 | t4, c4 = (Q5 = g6 + (-8 - g6 & 7) | 0) - (a4 = t4 + r4 | 0) | 0;
                            C: if (i4[9411] != (0 | Q5)) if (i4[9410] != (0 | Q5)) {
                              if (1 == (3 & (A8 = i4[Q5 + 4 >> 2]))) {
                                e6 = -8 & A8, C4 = i4[Q5 + 12 >> 2];
                                B: if (A8 >>> 0 <= 255) {
                                  if ((0 | (g6 = i4[Q5 + 8 >> 2])) == (0 | C4)) {
                                    h4 = 37620, D4 = i4[9405] & Lg(-2, A8 >>> 3 | 0), i4[h4 >> 2] = D4;
                                    break B;
                                  }
                                  i4[g6 + 12 >> 2] = C4, i4[C4 + 8 >> 2] = g6;
                                } else {
                                  t4 = i4[Q5 + 24 >> 2];
                                  Q: if ((0 | C4) == (0 | Q5)) {
                                    i: {
                                      if (A8 = i4[Q5 + 20 >> 2]) g6 = Q5 + 20 | 0;
                                      else {
                                        if (!(A8 = i4[Q5 + 16 >> 2])) break i;
                                        g6 = Q5 + 16 | 0;
                                      }
                                      for (; B4 = g6, C4 = A8, g6 = A8 + 20 | 0, (A8 = i4[A8 + 20 >> 2]) || (g6 = C4 + 16 | 0, A8 = i4[C4 + 16 >> 2]); ) ;
                                      i4[B4 >> 2] = 0;
                                      break Q;
                                    }
                                    C4 = 0;
                                  } else A8 = i4[Q5 + 8 >> 2], i4[A8 + 12 >> 2] = C4, i4[C4 + 8 >> 2] = A8;
                                  if (t4) {
                                    A8 = i4[Q5 + 28 >> 2];
                                    Q: {
                                      if (i4[(g6 = 37924 + (A8 << 2) | 0) >> 2] == (0 | Q5)) {
                                        if (i4[g6 >> 2] = C4, C4) break Q;
                                        h4 = 37624, D4 = i4[9406] & Lg(-2, A8), i4[h4 >> 2] = D4;
                                        break B;
                                      }
                                      if (i4[t4 + (i4[t4 + 16 >> 2] == (0 | Q5) ? 16 : 20) >> 2] = C4, !C4) break B;
                                    }
                                    i4[C4 + 24 >> 2] = t4, (A8 = i4[Q5 + 16 >> 2]) && (i4[C4 + 16 >> 2] = A8, i4[A8 + 24 >> 2] = C4), (A8 = i4[Q5 + 20 >> 2]) && (i4[C4 + 20 >> 2] = A8, i4[A8 + 24 >> 2] = C4);
                                  }
                                }
                                c4 = c4 + e6 | 0, A8 = i4[4 + (Q5 = Q5 + e6 | 0) >> 2];
                              }
                              if (i4[Q5 + 4 >> 2] = -2 & A8, i4[a4 + 4 >> 2] = 1 | c4, i4[a4 + c4 >> 2] = c4, c4 >>> 0 <= 255) A8 = 37660 + (-8 & c4) | 0, (g6 = i4[9405]) & (C4 = 1 << (c4 >>> 3)) ? g6 = i4[A8 + 8 >> 2] : (i4[9405] = g6 | C4, g6 = A8), i4[A8 + 8 >> 2] = a4, i4[g6 + 12 >> 2] = a4, i4[a4 + 12 >> 2] = A8, i4[a4 + 8 >> 2] = g6;
                              else {
                                C4 = 31, c4 >>> 0 <= 16777215 && (C4 = 62 + ((c4 >>> 38 - (A8 = _3(c4 >>> 8 | 0)) & 1) - (A8 << 1) | 0) | 0), i4[a4 + 28 >> 2] = C4, i4[a4 + 16 >> 2] = 0, i4[a4 + 20 >> 2] = 0, A8 = 37924 + (C4 << 2) | 0;
                                B: {
                                  if ((g6 = i4[9406]) & (B4 = 1 << C4)) {
                                    for (C4 = c4 << (31 != (0 | C4) ? 25 - (C4 >>> 1 | 0) : 0), g6 = i4[A8 >> 2]; ; ) {
                                      if ((-8 & i4[(A8 = g6) + 4 >> 2]) == (0 | c4)) break B;
                                      if (g6 = C4 >>> 29 | 0, C4 <<= 1, !(g6 = i4[16 + (B4 = (4 & g6) + A8 | 0) >> 2])) break;
                                    }
                                    i4[B4 + 16 >> 2] = a4;
                                  } else i4[9406] = g6 | B4, i4[A8 >> 2] = a4;
                                  i4[a4 + 24 >> 2] = A8, i4[a4 + 12 >> 2] = a4, i4[a4 + 8 >> 2] = a4;
                                  break C;
                                }
                                g6 = i4[A8 + 8 >> 2], i4[g6 + 12 >> 2] = a4, i4[A8 + 8 >> 2] = a4, i4[a4 + 24 >> 2] = 0, i4[a4 + 12 >> 2] = A8, i4[a4 + 8 >> 2] = g6;
                              }
                            } else i4[9410] = a4, A8 = i4[9407] + c4 | 0, i4[9407] = A8, i4[a4 + 4 >> 2] = 1 | A8, i4[A8 + a4 >> 2] = A8;
                            else i4[9411] = a4, A8 = i4[9408] + c4 | 0, i4[9408] = A8, i4[a4 + 4 >> 2] = 1 | A8;
                            A8 = r4 + 8 | 0;
                            break A;
                          }
                          g: if (r4) {
                            g6 = i4[B4 + 28 >> 2];
                            C: {
                              if (i4[(C4 = 37924 + (g6 << 2) | 0) >> 2] == (0 | B4)) {
                                if (i4[C4 >> 2] = A8, A8) break C;
                                c4 = Lg(-2, g6) & c4, i4[9406] = c4;
                                break g;
                              }
                              if (i4[r4 + (i4[r4 + 16 >> 2] == (0 | B4) ? 16 : 20) >> 2] = A8, !A8) break g;
                            }
                            i4[A8 + 24 >> 2] = r4, (g6 = i4[B4 + 16 >> 2]) && (i4[A8 + 16 >> 2] = g6, i4[g6 + 24 >> 2] = A8), (g6 = i4[B4 + 20 >> 2]) && (i4[A8 + 20 >> 2] = g6, i4[g6 + 24 >> 2] = A8);
                          }
                          g: if (a4 >>> 0 <= 15) A8 = a4 + t4 | 0, i4[B4 + 4 >> 2] = 3 | A8, i4[4 + (A8 = A8 + B4 | 0) >> 2] = 1 | i4[A8 + 4 >> 2];
                          else if (i4[B4 + 4 >> 2] = 3 | t4, i4[4 + (Q5 = B4 + t4 | 0) >> 2] = 1 | a4, i4[a4 + Q5 >> 2] = a4, a4 >>> 0 <= 255) A8 = 37660 + (-8 & a4) | 0, (g6 = i4[9405]) & (C4 = 1 << (a4 >>> 3)) ? g6 = i4[A8 + 8 >> 2] : (i4[9405] = g6 | C4, g6 = A8), i4[A8 + 8 >> 2] = Q5, i4[g6 + 12 >> 2] = Q5, i4[Q5 + 12 >> 2] = A8, i4[Q5 + 8 >> 2] = g6;
                          else {
                            A8 = 31, a4 >>> 0 <= 16777215 && (A8 = 62 + ((a4 >>> 38 - (A8 = _3(a4 >>> 8 | 0)) & 1) - (A8 << 1) | 0) | 0), i4[Q5 + 28 >> 2] = A8, i4[Q5 + 16 >> 2] = 0, i4[Q5 + 20 >> 2] = 0, g6 = 37924 + (A8 << 2) | 0;
                            C: {
                              if ((C4 = 1 << A8) & c4) {
                                for (A8 = a4 << (31 != (0 | A8) ? 25 - (A8 >>> 1 | 0) : 0), g6 = i4[g6 >> 2]; ; ) {
                                  if (C4 = g6, (-8 & i4[g6 + 4 >> 2]) == (0 | a4)) break C;
                                  if (c4 = A8 >>> 29 | 0, A8 <<= 1, !(g6 = i4[16 + (c4 = g6 + (4 & c4) | 0) >> 2])) break;
                                }
                                i4[c4 + 16 >> 2] = Q5, i4[Q5 + 24 >> 2] = C4;
                              } else i4[9406] = C4 | c4, i4[g6 >> 2] = Q5, i4[Q5 + 24 >> 2] = g6;
                              i4[Q5 + 12 >> 2] = Q5, i4[Q5 + 8 >> 2] = Q5;
                              break g;
                            }
                            A8 = i4[C4 + 8 >> 2], i4[A8 + 12 >> 2] = Q5, i4[C4 + 8 >> 2] = Q5, i4[Q5 + 24 >> 2] = 0, i4[Q5 + 12 >> 2] = C4, i4[Q5 + 8 >> 2] = A8;
                          }
                          A8 = B4 + 8 | 0;
                          break A;
                        }
                        I: if (e6) {
                          g6 = i4[C4 + 28 >> 2];
                          g: {
                            if (i4[(B4 = 37924 + (g6 << 2) | 0) >> 2] == (0 | C4)) {
                              if (i4[B4 >> 2] = A8, A8) break g;
                              h4 = 37624, D4 = Lg(-2, g6) & y4, i4[h4 >> 2] = D4;
                              break I;
                            }
                            if (i4[e6 + (i4[e6 + 16 >> 2] == (0 | C4) ? 16 : 20) >> 2] = A8, !A8) break I;
                          }
                          i4[A8 + 24 >> 2] = e6, (g6 = i4[C4 + 16 >> 2]) && (i4[A8 + 16 >> 2] = g6, i4[g6 + 24 >> 2] = A8), (g6 = i4[C4 + 20 >> 2]) && (i4[A8 + 20 >> 2] = g6, i4[g6 + 24 >> 2] = A8);
                        }
                        a4 >>> 0 <= 15 ? (A8 = a4 + t4 | 0, i4[C4 + 4 >> 2] = 3 | A8, i4[4 + (A8 = A8 + C4 | 0) >> 2] = 1 | i4[A8 + 4 >> 2]) : (i4[C4 + 4 >> 2] = 3 | t4, i4[4 + (c4 = C4 + t4 | 0) >> 2] = 1 | a4, i4[a4 + c4 >> 2] = a4, r4 && (A8 = 37660 + (-8 & r4) | 0, B4 = i4[9410], (g6 = 1 << (r4 >>> 3)) & Q5 ? g6 = i4[A8 + 8 >> 2] : (i4[9405] = g6 | Q5, g6 = A8), i4[A8 + 8 >> 2] = B4, i4[g6 + 12 >> 2] = B4, i4[B4 + 12 >> 2] = A8, i4[B4 + 8 >> 2] = g6), i4[9410] = c4, i4[9407] = a4), A8 = C4 + 8 | 0;
                      }
                      return s3 = I7 + 16 | 0, 0 | A8;
                    }
                    function U3(A8, I7, g6, B4, Q5, E4) {
                      var _4, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, v4 = 0, R4 = 0, L4 = 0, P7 = 0, q3 = 0, z2 = 0, X2 = 0, O2 = 0, W2 = 0, V2 = 0, Z2 = 0, T2 = 0;
                      if (s3 = _4 = s3 - 592 | 0, r4 = -1, ZI(t4 = A8 + 32 | 0) && !KI(A8) && NI(Q5) && !KI(Q5) && !qA(y4 = _4 + 128 | 0, Q5)) {
                        for (SI(r4 = _4 + 384 | 0), E4 && SA(r4, 35600, 34, 0), SA(r4, A8, 32, 0), SA(r4, Q5, 32, 0), SA(r4, I7, g6, B4), j(I7 = r4, r4 = _4 + 320 | 0), S3(r4), B4 = _4 + 8 | 0, g6 = t4, Q5 = 0, I7 = 0, s3 = c4 = s3 - 2272 | 0; E4 = c4 + 2016 | 0, t4 = o3[r4 + (Q5 >>> 3 | 0) | 0], C3[E4 + Q5 | 0] = t4 >>> (6 & Q5) & 1, C3[(e6 = E4) + (E4 = 1 | Q5) | 0] = t4 >>> (7 & E4) & 1, 256 != (0 | (Q5 = Q5 + 2 | 0)); ) ;
                        for (; ; ) {
                          I7 = (E4 = I7) + 1 | 0;
                          A: if (!(E4 >>> 0 > 254) && o3[0 | (D4 = (Q5 = c4 + 2016 | 0) + E4 | 0)]) {
                            I: if (Q5 = C3[0 | (h4 = I7 + Q5 | 0)]) if ((0 | (Q5 = (r4 = Q5 << 1) + (t4 = C3[0 | D4]) | 0)) <= 15) C3[0 | D4] = Q5, C3[0 | h4] = 0;
                            else {
                              if ((0 | (Q5 = t4 - r4 | 0)) < -15) break A;
                              for (C3[0 | D4] = Q5, Q5 = I7; ; ) {
                                if (!o3[0 | (t4 = (c4 + 2016 | 0) + Q5 | 0)]) {
                                  C3[0 | t4] = 1;
                                  break I;
                                }
                                if (C3[0 | t4] = 0, t4 = Q5 >>> 0 < 255, Q5 = Q5 + 1 | 0, !t4) break;
                              }
                            }
                            if (!(E4 >>> 0 > 253)) {
                              I: if (t4 = C3[0 | (e6 = (Q5 = E4 + 2 | 0) + (c4 + 2016 | 0) | 0)]) if ((0 | (t4 = (h4 = t4 << 2) + (r4 = C3[0 | D4]) | 0)) >= 16) {
                                if ((0 | (t4 = r4 - h4 | 0)) < -15) break A;
                                for (C3[0 | D4] = t4; ; ) {
                                  if (o3[0 | (t4 = (c4 + 2016 | 0) + Q5 | 0)]) {
                                    if (C3[0 | t4] = 0, t4 = Q5 >>> 0 < 255, Q5 = Q5 + 1 | 0, t4) continue;
                                    break I;
                                  }
                                  break;
                                }
                                C3[0 | t4] = 1;
                              } else C3[0 | D4] = t4, C3[0 | e6] = 0;
                              if (253 != (0 | E4)) {
                                I: if (t4 = C3[0 | (e6 = (Q5 = E4 + 3 | 0) + (c4 + 2016 | 0) | 0)]) if ((0 | (t4 = (h4 = t4 << 3) + (r4 = C3[0 | D4]) | 0)) >= 16) {
                                  if ((0 | (t4 = r4 - h4 | 0)) < -15) break A;
                                  for (C3[0 | D4] = t4; ; ) {
                                    if (o3[0 | (t4 = (c4 + 2016 | 0) + Q5 | 0)]) {
                                      if (C3[0 | t4] = 0, t4 = Q5 >>> 0 < 255, Q5 = Q5 + 1 | 0, t4) continue;
                                      break I;
                                    }
                                    break;
                                  }
                                  C3[0 | t4] = 1;
                                } else C3[0 | D4] = t4, C3[0 | e6] = 0;
                                if (!(E4 >>> 0 > 251)) {
                                  I: if (t4 = C3[0 | (e6 = (Q5 = E4 + 4 | 0) + (c4 + 2016 | 0) | 0)]) if ((0 | (t4 = (h4 = t4 << 4) + (r4 = C3[0 | D4]) | 0)) >= 16) {
                                    if ((0 | (t4 = r4 - h4 | 0)) < -15) break A;
                                    for (C3[0 | D4] = t4; ; ) {
                                      if (o3[0 | (t4 = (c4 + 2016 | 0) + Q5 | 0)]) {
                                        if (C3[0 | t4] = 0, t4 = Q5 >>> 0 < 255, Q5 = Q5 + 1 | 0, t4) continue;
                                        break I;
                                      }
                                      break;
                                    }
                                    C3[0 | t4] = 1;
                                  } else C3[0 | D4] = t4, C3[0 | e6] = 0;
                                  if (251 != (0 | E4)) {
                                    I: if (t4 = C3[0 | (e6 = (Q5 = E4 + 5 | 0) + (c4 + 2016 | 0) | 0)]) if ((0 | (t4 = (h4 = t4 << 5) + (r4 = C3[0 | D4]) | 0)) >= 16) {
                                      if ((0 | (t4 = r4 - h4 | 0)) < -15) break A;
                                      for (C3[0 | D4] = t4; ; ) {
                                        if (o3[0 | (t4 = (c4 + 2016 | 0) + Q5 | 0)]) {
                                          if (C3[0 | t4] = 0, t4 = Q5 >>> 0 < 255, Q5 = Q5 + 1 | 0, t4) continue;
                                          break I;
                                        }
                                        break;
                                      }
                                      C3[0 | t4] = 1;
                                    } else C3[0 | D4] = t4, C3[0 | e6] = 0;
                                    if (!(E4 >>> 0 > 249) && (E4 = C3[0 | (h4 = (Q5 = E4 + 6 | 0) + (c4 + 2016 | 0) | 0)])) if ((0 | (E4 = (r4 = E4 << 6) + (t4 = C3[0 | D4]) | 0)) >= 16) {
                                      if ((0 | (E4 = t4 - r4 | 0)) < -15) break A;
                                      for (C3[0 | D4] = E4; ; ) {
                                        if (o3[0 | (E4 = (c4 + 2016 | 0) + Q5 | 0)]) {
                                          if (C3[0 | E4] = 0, E4 = Q5 >>> 0 < 255, Q5 = Q5 + 1 | 0, E4) continue;
                                          break A;
                                        }
                                        break;
                                      }
                                      C3[0 | E4] = 1;
                                    } else C3[0 | D4] = E4, C3[0 | h4] = 0;
                                  }
                                }
                              }
                            }
                          }
                          if (256 == (0 | I7)) break;
                        }
                        for (Q5 = 0; I7 = c4 + 1760 | 0, E4 = o3[g6 + (Q5 >>> 3 | 0) | 0], C3[I7 + Q5 | 0] = E4 >>> (6 & Q5) & 1, C3[(t4 = I7) + (I7 = 1 | Q5) | 0] = E4 >>> (7 & I7) & 1, 256 != (0 | (Q5 = Q5 + 2 | 0)); ) ;
                        for (I7 = 0; ; ) {
                          g6 = I7, I7 = I7 + 1 | 0;
                          A: if (!(g6 >>> 0 > 254) && o3[0 | (e6 = (Q5 = c4 + 1760 | 0) + g6 | 0)]) {
                            I: if (Q5 = C3[0 | (r4 = I7 + Q5 | 0)]) if ((0 | (Q5 = (t4 = Q5 << 1) + (E4 = C3[0 | e6]) | 0)) <= 15) C3[0 | e6] = Q5, C3[0 | r4] = 0;
                            else {
                              if ((0 | (Q5 = E4 - t4 | 0)) < -15) break A;
                              for (C3[0 | e6] = Q5, Q5 = I7; ; ) {
                                if (!o3[0 | (E4 = (c4 + 1760 | 0) + Q5 | 0)]) {
                                  C3[0 | E4] = 1;
                                  break I;
                                }
                                if (C3[0 | E4] = 0, E4 = Q5 >>> 0 < 255, Q5 = Q5 + 1 | 0, !E4) break;
                              }
                            }
                            if (!(g6 >>> 0 > 253)) {
                              I: if (E4 = C3[0 | (h4 = (Q5 = g6 + 2 | 0) + (c4 + 1760 | 0) | 0)]) if ((0 | (E4 = (r4 = E4 << 2) + (t4 = C3[0 | e6]) | 0)) >= 16) {
                                if ((0 | (E4 = t4 - r4 | 0)) < -15) break A;
                                for (C3[0 | e6] = E4; ; ) {
                                  if (o3[0 | (E4 = (c4 + 1760 | 0) + Q5 | 0)]) {
                                    if (C3[0 | E4] = 0, E4 = Q5 >>> 0 < 255, Q5 = Q5 + 1 | 0, E4) continue;
                                    break I;
                                  }
                                  break;
                                }
                                C3[0 | E4] = 1;
                              } else C3[0 | e6] = E4, C3[0 | h4] = 0;
                              if (253 != (0 | g6)) {
                                I: if (E4 = C3[0 | (h4 = (Q5 = g6 + 3 | 0) + (c4 + 1760 | 0) | 0)]) if ((0 | (E4 = (r4 = E4 << 3) + (t4 = C3[0 | e6]) | 0)) >= 16) {
                                  if ((0 | (E4 = t4 - r4 | 0)) < -15) break A;
                                  for (C3[0 | e6] = E4; ; ) {
                                    if (o3[0 | (E4 = (c4 + 1760 | 0) + Q5 | 0)]) {
                                      if (C3[0 | E4] = 0, E4 = Q5 >>> 0 < 255, Q5 = Q5 + 1 | 0, E4) continue;
                                      break I;
                                    }
                                    break;
                                  }
                                  C3[0 | E4] = 1;
                                } else C3[0 | e6] = E4, C3[0 | h4] = 0;
                                if (!(g6 >>> 0 > 251)) {
                                  I: if (E4 = C3[0 | (h4 = (Q5 = g6 + 4 | 0) + (c4 + 1760 | 0) | 0)]) if ((0 | (E4 = (r4 = E4 << 4) + (t4 = C3[0 | e6]) | 0)) >= 16) {
                                    if ((0 | (E4 = t4 - r4 | 0)) < -15) break A;
                                    for (C3[0 | e6] = E4; ; ) {
                                      if (o3[0 | (E4 = (c4 + 1760 | 0) + Q5 | 0)]) {
                                        if (C3[0 | E4] = 0, E4 = Q5 >>> 0 < 255, Q5 = Q5 + 1 | 0, E4) continue;
                                        break I;
                                      }
                                      break;
                                    }
                                    C3[0 | E4] = 1;
                                  } else C3[0 | e6] = E4, C3[0 | h4] = 0;
                                  if (251 != (0 | g6)) {
                                    I: if (E4 = C3[0 | (h4 = (Q5 = g6 + 5 | 0) + (c4 + 1760 | 0) | 0)]) if ((0 | (E4 = (r4 = E4 << 5) + (t4 = C3[0 | e6]) | 0)) >= 16) {
                                      if ((0 | (E4 = t4 - r4 | 0)) < -15) break A;
                                      for (C3[0 | e6] = E4; ; ) {
                                        if (o3[0 | (E4 = (c4 + 1760 | 0) + Q5 | 0)]) {
                                          if (C3[0 | E4] = 0, E4 = Q5 >>> 0 < 255, Q5 = Q5 + 1 | 0, E4) continue;
                                          break I;
                                        }
                                        break;
                                      }
                                      C3[0 | E4] = 1;
                                    } else C3[0 | e6] = E4, C3[0 | h4] = 0;
                                    if (!(g6 >>> 0 > 249) && (g6 = C3[0 | (r4 = (Q5 = g6 + 6 | 0) + (c4 + 1760 | 0) | 0)])) if ((0 | (g6 = (t4 = g6 << 6) + (E4 = C3[0 | e6]) | 0)) >= 16) {
                                      if ((0 | (g6 = E4 - t4 | 0)) < -15) break A;
                                      for (C3[0 | e6] = g6; ; ) {
                                        if (o3[0 | (g6 = (c4 + 1760 | 0) + Q5 | 0)]) {
                                          if (C3[0 | g6] = 0, g6 = Q5 >>> 0 < 255, Q5 = Q5 + 1 | 0, g6) continue;
                                          break A;
                                        }
                                        break;
                                      }
                                      C3[0 | g6] = 1;
                                    } else C3[0 | e6] = g6, C3[0 | r4] = 0;
                                  }
                                }
                              }
                            }
                          }
                          if (256 == (0 | I7)) break;
                        }
                        for ($A(Q5 = c4 + 480 | 0, y4), I7 = i4[y4 + 36 >> 2], i4[c4 + 192 >> 2] = i4[y4 + 32 >> 2], i4[c4 + 196 >> 2] = I7, I7 = i4[y4 + 28 >> 2], i4[c4 + 184 >> 2] = i4[y4 + 24 >> 2], i4[c4 + 188 >> 2] = I7, I7 = i4[y4 + 20 >> 2], i4[c4 + 176 >> 2] = i4[y4 + 16 >> 2], i4[c4 + 180 >> 2] = I7, I7 = i4[y4 + 12 >> 2], i4[c4 + 168 >> 2] = i4[y4 + 8 >> 2], i4[c4 + 172 >> 2] = I7, I7 = i4[y4 + 4 >> 2], i4[c4 + 160 >> 2] = i4[y4 >> 2], i4[c4 + 164 >> 2] = I7, I7 = i4[y4 + 52 >> 2], i4[c4 + 208 >> 2] = i4[y4 + 48 >> 2], i4[c4 + 212 >> 2] = I7, I7 = i4[y4 + 60 >> 2], i4[c4 + 216 >> 2] = i4[y4 + 56 >> 2], i4[c4 + 220 >> 2] = I7, I7 = i4[4 + (g6 = y4 - -64 | 0) >> 2], i4[c4 + 224 >> 2] = i4[g6 >> 2], i4[c4 + 228 >> 2] = I7, I7 = i4[y4 + 76 >> 2], i4[c4 + 232 >> 2] = i4[y4 + 72 >> 2], i4[c4 + 236 >> 2] = I7, I7 = i4[y4 + 44 >> 2], i4[c4 + 200 >> 2] = i4[y4 + 40 >> 2], i4[c4 + 204 >> 2] = I7, I7 = i4[y4 + 92 >> 2], i4[c4 + 248 >> 2] = i4[y4 + 88 >> 2], i4[c4 + 252 >> 2] = I7, I7 = i4[y4 + 100 >> 2], i4[c4 + 256 >> 2] = i4[y4 + 96 >> 2], i4[c4 + 260 >> 2] = I7, I7 = i4[y4 + 108 >> 2], i4[c4 + 264 >> 2] = i4[y4 + 104 >> 2], i4[c4 + 268 >> 2] = I7, I7 = i4[y4 + 116 >> 2], i4[c4 + 272 >> 2] = i4[y4 + 112 >> 2], i4[c4 + 276 >> 2] = I7, I7 = i4[y4 + 84 >> 2], i4[c4 + 240 >> 2] = i4[y4 + 80 >> 2], i4[c4 + 244 >> 2] = I7, KA(E4 = c4 + 320 | 0, g6 = c4 + 160 | 0), b4(c4, E4, f4 = c4 + 440 | 0), b4(c4 + 40 | 0, p4 = c4 + 360 | 0, w4 = c4 + 400 | 0), b4(c4 + 80 | 0, w4, f4), b4(c4 + 120 | 0, E4, p4), sA(E4, c4, Q5), b4(g6, E4, f4), b4(k4 = c4 + 200 | 0, p4, w4), b4(F4 = c4 + 240 | 0, w4, f4), b4(n5 = c4 + 280 | 0, E4, p4), $A(I7 = c4 + 640 | 0, g6), sA(E4, c4, I7), b4(g6, E4, f4), b4(k4, p4, w4), b4(F4, w4, f4), b4(n5, E4, p4), $A(I7 = c4 + 800 | 0, g6), sA(E4, c4, I7), b4(g6, E4, f4), b4(k4, p4, w4), b4(F4, w4, f4), b4(n5, E4, p4), $A(I7 = c4 + 960 | 0, g6), sA(E4, c4, I7), b4(g6, E4, f4), b4(k4, p4, w4), b4(F4, w4, f4), b4(n5, E4, p4), $A(I7 = c4 + 1120 | 0, g6), sA(E4, c4, I7), b4(g6, E4, f4), b4(k4, p4, w4), b4(F4, w4, f4), b4(n5, E4, p4), $A(I7 = c4 + 1280 | 0, g6), sA(E4, c4, I7), b4(g6, E4, f4), b4(k4, p4, w4), b4(F4, w4, f4), b4(n5, E4, p4), $A(I7 = c4 + 1440 | 0, g6), sA(E4, c4, I7), b4(g6, E4, f4), b4(k4, p4, w4), b4(F4, w4, f4), b4(n5, E4, p4), $A(c4 + 1600 | 0, g6), i4[B4 + 32 >> 2] = 0, i4[B4 + 36 >> 2] = 0, i4[B4 + 24 >> 2] = 0, i4[B4 + 28 >> 2] = 0, i4[B4 + 16 >> 2] = 0, i4[B4 + 20 >> 2] = 0, i4[B4 + 8 >> 2] = 0, i4[B4 + 12 >> 2] = 0, i4[B4 >> 2] = 0, i4[B4 + 4 >> 2] = 0, i4[B4 + 44 >> 2] = 0, i4[B4 + 48 >> 2] = 0, i4[B4 + 40 >> 2] = 1, i4[B4 + 52 >> 2] = 0, i4[B4 + 56 >> 2] = 0, i4[B4 + 60 >> 2] = 0, i4[B4 + 64 >> 2] = 0, i4[B4 + 68 >> 2] = 0, i4[B4 + 72 >> 2] = 0, i4[B4 + 84 >> 2] = 0, i4[B4 + 88 >> 2] = 0, i4[B4 + 76 >> 2] = 0, i4[B4 + 80 >> 2] = 1, i4[B4 + 92 >> 2] = 0, i4[B4 + 96 >> 2] = 0, i4[B4 + 100 >> 2] = 0, i4[B4 + 104 >> 2] = 0, i4[B4 + 108 >> 2] = 0, i4[B4 + 112 >> 2] = 0, i4[B4 + 116 >> 2] = 0, X2 = B4 + 80 | 0, O2 = B4 + 40 | 0, I7 = 255; ; ) {
                          A: {
                            I: {
                              if (!o3[(g6 = c4 + 2016 | 0) + I7 | 0] && !o3[(Q5 = c4 + 1760 | 0) + I7 | 0]) {
                                if (!(o3[(E4 = g6) + (g6 = I7 - 1 | 0) | 0] | o3[g6 + Q5 | 0])) break I;
                                I7 = g6;
                              }
                              if ((0 | I7) < 0) break A;
                              for (; KA(Q5 = c4 + 320 | 0, B4), g6 = I7, (0 | (E4 = C3[I7 + (c4 + 2016 | 0) | 0])) > 0 ? (b4(I7 = c4 + 160 | 0, Q5, f4), b4(k4, p4, w4), b4(F4, w4, f4), b4(n5, Q5, p4), sA(Q5, I7, (c4 + 480 | 0) + a3((254 & E4) >>> 1 | 0, 160) | 0)) : (0 | E4) >= 0 || (b4(I7 = c4 + 160 | 0, Q5 = c4 + 320 | 0, f4), b4(k4, p4, w4), b4(F4, w4, f4), b4(n5, Q5, p4), hA(Q5, I7, (c4 + 480 | 0) + a3((0 - E4 & 254) >>> 1 | 0, 160) | 0)), (0 | (u4 = C3[g6 + (c4 + 1760 | 0) | 0])) > 0 ? (b4(I7 = c4 + 160 | 0, Q5 = c4 + 320 | 0, f4), b4(k4, p4, w4), b4(F4, w4, f4), b4(n5, Q5, p4), DA(Q5, I7, a3((254 & u4) >>> 1 | 0, 120) + 1728 | 0)) : (0 | u4) >= 0 || (b4(c4 + 160 | 0, x4 = c4 + 320 | 0, f4), b4(k4, p4, w4), b4(F4, w4, f4), b4(n5, x4, p4), N4 = i4[c4 + 160 >> 2], G4 = i4[c4 + 200 >> 2], M4 = i4[c4 + 164 >> 2], K4 = i4[c4 + 204 >> 2], U4 = i4[c4 + 168 >> 2], H4 = i4[c4 + 208 >> 2], Y4 = i4[c4 + 172 >> 2], J4 = i4[c4 + 212 >> 2], d5 = i4[c4 + 176 >> 2], m4 = i4[c4 + 216 >> 2], l4 = i4[c4 + 180 >> 2], D4 = i4[c4 + 220 >> 2], e6 = i4[c4 + 184 >> 2], h4 = i4[c4 + 224 >> 2], r4 = i4[c4 + 188 >> 2], y4 = i4[c4 + 228 >> 2], t4 = i4[c4 + 192 >> 2], E4 = i4[c4 + 232 >> 2], Q5 = i4[c4 + 236 >> 2], I7 = i4[c4 + 196 >> 2], i4[c4 + 396 >> 2] = Q5 - I7, i4[c4 + 392 >> 2] = E4 - t4, i4[c4 + 388 >> 2] = y4 - r4, i4[c4 + 384 >> 2] = h4 - e6, i4[c4 + 380 >> 2] = D4 - l4, i4[c4 + 376 >> 2] = m4 - d5, i4[c4 + 372 >> 2] = J4 - Y4, i4[c4 + 368 >> 2] = H4 - U4, i4[c4 + 364 >> 2] = K4 - M4, i4[c4 + 360 >> 2] = G4 - N4, i4[c4 + 356 >> 2] = I7 + Q5, i4[c4 + 352 >> 2] = E4 + t4, i4[c4 + 348 >> 2] = r4 + y4, i4[c4 + 344 >> 2] = e6 + h4, i4[c4 + 340 >> 2] = D4 + l4, i4[c4 + 336 >> 2] = d5 + m4, i4[c4 + 332 >> 2] = Y4 + J4, i4[c4 + 328 >> 2] = U4 + H4, i4[c4 + 324 >> 2] = M4 + K4, i4[c4 + 320 >> 2] = N4 + G4, b4(w4, x4, 40 + (I7 = a3((0 - u4 & 254) >>> 1 | 0, 120) + 1728 | 0) | 0), b4(p4, p4, I7), b4(f4, I7 + 80 | 0, n5), W2 = i4[c4 + 276 >> 2], V2 = i4[c4 + 272 >> 2], u4 = i4[c4 + 268 >> 2], x4 = i4[c4 + 264 >> 2], e6 = i4[c4 + 260 >> 2], h4 = i4[c4 + 256 >> 2], r4 = i4[c4 + 252 >> 2], y4 = i4[c4 + 248 >> 2], t4 = i4[c4 + 244 >> 2], E4 = i4[c4 + 240 >> 2], v4 = i4[c4 + 360 >> 2], R4 = i4[c4 + 400 >> 2], L4 = i4[c4 + 364 >> 2], P7 = i4[c4 + 404 >> 2], q3 = i4[c4 + 368 >> 2], z2 = i4[c4 + 408 >> 2], N4 = i4[c4 + 372 >> 2], G4 = i4[c4 + 412 >> 2], M4 = i4[c4 + 376 >> 2], K4 = i4[c4 + 416 >> 2], U4 = i4[c4 + 380 >> 2], H4 = i4[c4 + 420 >> 2], Y4 = i4[c4 + 384 >> 2], J4 = i4[c4 + 424 >> 2], d5 = i4[c4 + 388 >> 2], m4 = i4[c4 + 428 >> 2], l4 = i4[c4 + 392 >> 2], D4 = i4[c4 + 432 >> 2], Q5 = i4[c4 + 396 >> 2], I7 = i4[c4 + 436 >> 2], i4[c4 + 396 >> 2] = Q5 + I7, i4[c4 + 392 >> 2] = D4 + l4, i4[c4 + 388 >> 2] = d5 + m4, i4[c4 + 384 >> 2] = Y4 + J4, i4[c4 + 380 >> 2] = U4 + H4, i4[c4 + 376 >> 2] = M4 + K4, i4[c4 + 372 >> 2] = N4 + G4, i4[c4 + 368 >> 2] = q3 + z2, i4[c4 + 364 >> 2] = L4 + P7, i4[c4 + 360 >> 2] = v4 + R4, i4[c4 + 356 >> 2] = I7 - Q5, i4[c4 + 352 >> 2] = D4 - l4, i4[c4 + 348 >> 2] = m4 - d5, i4[c4 + 344 >> 2] = J4 - Y4, i4[c4 + 340 >> 2] = H4 - U4, i4[c4 + 336 >> 2] = K4 - M4, i4[c4 + 332 >> 2] = G4 - N4, i4[c4 + 328 >> 2] = z2 - q3, i4[c4 + 324 >> 2] = P7 - L4, i4[c4 + 320 >> 2] = R4 - v4, N4 = E4 << 1, G4 = i4[c4 + 440 >> 2], i4[c4 + 400 >> 2] = N4 - G4, M4 = t4 << 1, K4 = i4[c4 + 444 >> 2], i4[c4 + 404 >> 2] = M4 - K4, U4 = y4 << 1, H4 = i4[c4 + 448 >> 2], i4[c4 + 408 >> 2] = U4 - H4, Y4 = r4 << 1, J4 = i4[c4 + 452 >> 2], i4[c4 + 412 >> 2] = Y4 - J4, d5 = h4 << 1, m4 = i4[c4 + 456 >> 2], i4[c4 + 416 >> 2] = d5 - m4, l4 = e6 << 1, D4 = i4[c4 + 460 >> 2], i4[c4 + 420 >> 2] = l4 - D4, e6 = x4 << 1, h4 = i4[c4 + 464 >> 2], i4[c4 + 424 >> 2] = e6 - h4, r4 = u4 << 1, y4 = i4[c4 + 468 >> 2], i4[c4 + 428 >> 2] = r4 - y4, t4 = V2 << 1, E4 = i4[c4 + 472 >> 2], i4[c4 + 432 >> 2] = t4 - E4, Q5 = W2 << 1, I7 = i4[c4 + 476 >> 2], i4[c4 + 436 >> 2] = Q5 - I7, i4[c4 + 440 >> 2] = N4 + G4, i4[c4 + 444 >> 2] = M4 + K4, i4[c4 + 448 >> 2] = U4 + H4, i4[c4 + 452 >> 2] = Y4 + J4, i4[c4 + 456 >> 2] = d5 + m4, i4[c4 + 460 >> 2] = D4 + l4, i4[c4 + 464 >> 2] = e6 + h4, i4[c4 + 468 >> 2] = r4 + y4, i4[c4 + 472 >> 2] = E4 + t4, i4[c4 + 476 >> 2] = I7 + Q5), b4(B4, c4 + 320 | 0, f4), b4(O2, p4, w4), b4(X2, w4, f4), I7 = g6 - 1 | 0, (0 | g6) > 0; ) ;
                              break A;
                            }
                            if (I7 = I7 - 2 | 0, g6) continue;
                          }
                          break;
                        }
                        s3 = c4 + 2272 | 0, tg(I7 = _4 + 288 | 0, B4), Z2 = -1, T2 = NC(I7, A8), r4 = ((0 | A8) == (0 | I7) ? Z2 : T2) | MI(A8, I7, 32);
                      }
                      return s3 = _4 + 592 | 0, r4;
                    }
                    function b4(A8, I7, g6) {
                      var C4, B4, Q5, o4, E4, _4, c4, t4, r4, e6, y4, s4, h4, D4, p4, w4, n5, k4, F4, S4, N4, G4, M4, K4, U4, b5, H4, Y4, J4, d5, m4, l4, u4, x4, v4, R4, L4, P7, q3, z2, j2, X2, O2, W2, V2, Z2, T2, $2, AA2, IA2, gA2, CA2, BA2, QA2 = 0, iA2 = 0, oA2 = 0, EA2 = 0, aA2 = 0, _A2 = 0, cA2 = 0, tA2 = 0, rA2 = 0, eA2 = 0, yA2 = 0, sA2 = 0, hA2 = 0, DA2 = 0, fA2 = 0, pA2 = 0, wA2 = 0, nA2 = 0, kA2 = 0, FA2 = 0, SA2 = 0, NA2 = 0, GA2 = 0, MA2 = 0, KA2 = 0;
                      QA2 = Ig(C4 = i4[g6 + 4 >> 2], e6 = C4 >> 31, wA2 = (w4 = i4[I7 + 20 >> 2]) << 1, m4 = wA2 >> 31), oA2 = f3, iA2 = (hA2 = Ig(fA2 = i4[g6 >> 2], Q5 = fA2 >> 31, B4 = i4[I7 + 24 >> 2], o4 = B4 >> 31)) + QA2 | 0, QA2 = f3 + oA2 | 0, QA2 = iA2 >>> 0 < hA2 >>> 0 ? QA2 + 1 | 0 : QA2, rA2 = Ig(E4 = i4[g6 + 8 >> 2], h4 = E4 >> 31, hA2 = i4[I7 + 16 >> 2], _4 = hA2 >> 31), oA2 = f3 + QA2 | 0, oA2 = (iA2 = rA2 + iA2 | 0) >>> 0 < rA2 >>> 0 ? oA2 + 1 | 0 : oA2, QA2 = (rA2 = Ig(y4 = i4[g6 + 12 >> 2], n5 = y4 >> 31, K4 = (k4 = i4[I7 + 12 >> 2]) << 1, l4 = K4 >> 31)) + iA2 | 0, iA2 = f3 + oA2 | 0, iA2 = QA2 >>> 0 < rA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = (DA2 = Ig(D4 = i4[g6 + 16 >> 2], U4 = D4 >> 31, rA2 = i4[I7 + 8 >> 2], c4 = rA2 >> 31)) + QA2 | 0, QA2 = f3 + iA2 | 0, QA2 = oA2 >>> 0 < DA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = oA2, oA2 = Ig(F4 = i4[g6 + 20 >> 2], u4 = F4 >> 31, b5 = (S4 = i4[I7 + 4 >> 2]) << 1, x4 = b5 >> 31), QA2 = f3 + QA2 | 0, QA2 = (iA2 = iA2 + oA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, Z2 = cA2 = i4[g6 + 24 >> 2], oA2 = (eA2 = Ig(cA2, W2 = cA2 >> 31, DA2 = i4[I7 >> 2], t4 = DA2 >> 31)) + iA2 | 0, iA2 = f3 + QA2 | 0, iA2 = oA2 >>> 0 < eA2 >>> 0 ? iA2 + 1 | 0 : iA2, v4 = i4[g6 + 28 >> 2], QA2 = (eA2 = Ig(sA2 = a3(v4, 19), N4 = sA2 >> 31, H4 = (G4 = i4[I7 + 36 >> 2]) << 1, R4 = H4 >> 31)) + oA2 | 0, oA2 = f3 + iA2 | 0, oA2 = QA2 >>> 0 < eA2 >>> 0 ? oA2 + 1 | 0 : oA2, SA2 = i4[g6 + 32 >> 2], iA2 = (tA2 = Ig(EA2 = a3(SA2, 19), p4 = EA2 >> 31, eA2 = i4[I7 + 32 >> 2], r4 = eA2 >> 31)) + QA2 | 0, QA2 = f3 + oA2 | 0, QA2 = iA2 >>> 0 < tA2 >>> 0 ? QA2 + 1 | 0 : QA2, T2 = i4[g6 + 36 >> 2], g6 = Ig(tA2 = a3(T2, 19), s4 = tA2 >> 31, Y4 = (M4 = i4[I7 + 28 >> 2]) << 1, L4 = Y4 >> 31), QA2 = f3 + QA2 | 0, aA2 = I7 = g6 + iA2 | 0, g6 = I7 >>> 0 < g6 >>> 0 ? QA2 + 1 | 0 : QA2, I7 = Ig(hA2, _4, C4, e6), QA2 = f3, iA2 = Ig(fA2, Q5, w4, P7 = w4 >> 31), oA2 = f3 + QA2 | 0, oA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? oA2 + 1 | 0 : oA2, QA2 = Ig(E4, h4, k4, q3 = k4 >> 31), iA2 = f3 + oA2 | 0, iA2 = (I7 = QA2 + I7 | 0) >>> 0 < QA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = Ig(rA2, c4, y4, n5), QA2 = f3 + iA2 | 0, QA2 = (I7 = oA2 + I7 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = Ig(D4, U4, S4, z2 = S4 >> 31), QA2 = f3 + QA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = Ig(DA2, t4, F4, u4), QA2 = f3 + QA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = Ig(cA2 = a3(cA2, 19), J4 = cA2 >> 31, G4, j2 = G4 >> 31), oA2 = f3 + QA2 | 0, oA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? oA2 + 1 | 0 : oA2, QA2 = Ig(eA2, r4, sA2, N4), iA2 = f3 + oA2 | 0, iA2 = (I7 = QA2 + I7 | 0) >>> 0 < QA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = Ig(EA2, p4, M4, X2 = M4 >> 31), QA2 = f3 + iA2 | 0, QA2 = (I7 = oA2 + I7 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = Ig(tA2, s4, B4, o4), QA2 = f3 + QA2 | 0, GA2 = I7 = iA2 + I7 | 0, nA2 = I7 >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, I7 = Ig(C4, e6, K4, l4), QA2 = f3, iA2 = Ig(fA2, Q5, hA2, _4), QA2 = f3 + QA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = Ig(rA2, c4, E4, h4), oA2 = f3 + QA2 | 0, oA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? oA2 + 1 | 0 : oA2, QA2 = Ig(y4, n5, b5, x4), iA2 = f3 + oA2 | 0, iA2 = (I7 = QA2 + I7 | 0) >>> 0 < QA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = Ig(DA2, t4, D4, U4), QA2 = f3 + iA2 | 0, QA2 = (I7 = oA2 + I7 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = Ig(d5 = a3(F4, 19), O2 = d5 >> 31, H4, R4), QA2 = f3 + QA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = Ig(eA2, r4, cA2, J4), QA2 = f3 + QA2 | 0, QA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = Ig(sA2, N4, Y4, L4), oA2 = f3 + QA2 | 0, oA2 = (I7 = iA2 + I7 | 0) >>> 0 < iA2 >>> 0 ? oA2 + 1 | 0 : oA2, QA2 = Ig(EA2, p4, B4, o4), iA2 = f3 + oA2 | 0, iA2 = (I7 = QA2 + I7 | 0) >>> 0 < QA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = Ig(tA2, s4, wA2, m4), QA2 = f3 + iA2 | 0, $2 = I7 = oA2 + I7 | 0, AA2 = QA2 = I7 >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, IA2 = I7 = I7 + 33554432 | 0, gA2 = QA2 = I7 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, oA2 = (67108863 & QA2) << 6 | I7 >>> 26, QA2 = (QA2 >> 26) + nA2 | 0, GA2 = I7 = oA2 + GA2 | 0, QA2 = I7 >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, CA2 = I7 = I7 + 16777216 | 0, QA2 = g6 + (iA2 = (oA2 = I7 >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2) >> 25) | 0, QA2 = (I7 = (oA2 = (33554431 & oA2) << 7 | I7 >>> 25) + aA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, kA2 = g6 = (iA2 = I7) + 33554432 | 0, I7 = QA2 = g6 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, i4[A8 + 24 >> 2] = iA2 - (-67108864 & g6), g6 = Ig(C4, e6, b5, x4), QA2 = f3, iA2 = Ig(fA2, Q5, rA2, c4), oA2 = f3 + QA2 | 0, oA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? oA2 + 1 | 0 : oA2, iA2 = (QA2 = g6) + (g6 = Ig(DA2, t4, E4, h4)) | 0, QA2 = f3 + oA2 | 0, QA2 = g6 >>> 0 > iA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(g6 = a3(y4, 19), FA2 = g6 >> 31, H4, R4), QA2 = f3 + QA2 | 0, QA2 = (iA2 = oA2 + iA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = (aA2 = Ig(eA2, r4, nA2 = a3(D4, 19), V2 = nA2 >> 31)) + iA2 | 0, iA2 = f3 + QA2 | 0, iA2 = oA2 >>> 0 < aA2 >>> 0 ? iA2 + 1 | 0 : iA2, aA2 = Ig(Y4, L4, d5, O2), QA2 = f3 + iA2 | 0, QA2 = (oA2 = aA2 + oA2 | 0) >>> 0 < aA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = (aA2 = Ig(B4, o4, cA2, J4)) + oA2 | 0, oA2 = f3 + QA2 | 0, oA2 = iA2 >>> 0 < aA2 >>> 0 ? oA2 + 1 | 0 : oA2, aA2 = Ig(sA2, N4, wA2, m4), QA2 = f3 + oA2 | 0, QA2 = (iA2 = aA2 + iA2 | 0) >>> 0 < aA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(EA2, p4, hA2, _4), QA2 = f3 + QA2 | 0, QA2 = (iA2 = oA2 + iA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = (aA2 = Ig(tA2, s4, K4, l4)) + iA2 | 0, iA2 = f3 + QA2 | 0, yA2 = oA2, MA2 = oA2 >>> 0 < aA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = Ig(DA2, t4, C4, e6), iA2 = f3, oA2 = (aA2 = Ig(fA2, Q5, S4, z2)) + QA2 | 0, QA2 = f3 + iA2 | 0, QA2 = oA2 >>> 0 < aA2 >>> 0 ? QA2 + 1 | 0 : QA2, aA2 = iA2 = a3(E4, 19), iA2 = (_A2 = Ig(iA2, NA2 = iA2 >> 31, G4, j2)) + oA2 | 0, oA2 = f3 + QA2 | 0, oA2 = iA2 >>> 0 < _A2 >>> 0 ? oA2 + 1 | 0 : oA2, _A2 = Ig(eA2, r4, g6, FA2), QA2 = f3 + oA2 | 0, QA2 = (iA2 = _A2 + iA2 | 0) >>> 0 < _A2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(nA2, V2, M4, X2), QA2 = f3 + QA2 | 0, QA2 = (iA2 = oA2 + iA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = (_A2 = Ig(B4, o4, d5, O2)) + iA2 | 0, iA2 = f3 + QA2 | 0, iA2 = oA2 >>> 0 < _A2 >>> 0 ? iA2 + 1 | 0 : iA2, _A2 = Ig(cA2, J4, w4, P7), QA2 = f3 + iA2 | 0, QA2 = (oA2 = _A2 + oA2 | 0) >>> 0 < _A2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = (_A2 = Ig(hA2, _4, sA2, N4)) + oA2 | 0, oA2 = f3 + QA2 | 0, oA2 = iA2 >>> 0 < _A2 >>> 0 ? oA2 + 1 | 0 : oA2, _A2 = Ig(EA2, p4, k4, q3), QA2 = f3 + oA2 | 0, QA2 = (iA2 = _A2 + iA2 | 0) >>> 0 < _A2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(tA2, s4, rA2, c4), QA2 = f3 + QA2 | 0, KA2 = iA2 = oA2 + iA2 | 0, _A2 = iA2 >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, QA2 = Ig(QA2 = a3(C4, 19), QA2 >> 31, H4, R4), iA2 = f3, oA2 = Ig(fA2, Q5, DA2, t4), iA2 = f3 + iA2 | 0, iA2 = (QA2 = oA2 + QA2 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = (aA2 = Ig(eA2, r4, aA2, NA2)) + QA2 | 0, QA2 = f3 + iA2 | 0, g6 = (iA2 = Ig(g6, FA2, Y4, L4)) + oA2 | 0, oA2 = f3 + (oA2 >>> 0 < aA2 >>> 0 ? QA2 + 1 | 0 : QA2) | 0, oA2 = g6 >>> 0 < iA2 >>> 0 ? oA2 + 1 | 0 : oA2, iA2 = Ig(B4, o4, nA2, V2), QA2 = f3 + oA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = Ig(wA2, m4, d5, O2), QA2 = f3 + QA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(hA2, _4, cA2, J4), iA2 = f3 + QA2 | 0, iA2 = (g6 = oA2 + g6 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = Ig(sA2, N4, K4, l4), QA2 = f3 + iA2 | 0, QA2 = (g6 = oA2 + g6 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = Ig(EA2, p4, rA2, c4), oA2 = f3 + QA2 | 0, oA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? oA2 + 1 | 0 : oA2, iA2 = Ig(tA2, s4, b5, x4), QA2 = f3 + oA2 | 0, aA2 = g6 = iA2 + g6 | 0, FA2 = QA2 = g6 >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, NA2 = g6 = g6 + 33554432 | 0, BA2 = QA2 = g6 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, iA2 = (oA2 = QA2 >> 26) + _A2 | 0, _A2 = g6 = (QA2 = (67108863 & QA2) << 6 | g6 >>> 26) + KA2 | 0, QA2 = g6 >>> 0 < QA2 >>> 0 ? iA2 + 1 | 0 : iA2, KA2 = g6 = g6 + 16777216 | 0, iA2 = (33554431 & (QA2 = g6 >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2)) << 7 | g6 >>> 25, QA2 = (QA2 >> 25) + MA2 | 0, QA2 = (g6 = iA2 + yA2 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, MA2 = iA2 = (oA2 = g6) + 33554432 | 0, g6 = QA2 = iA2 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, i4[A8 + 8 >> 2] = oA2 - (-67108864 & iA2), QA2 = Ig(B4, o4, C4, e6), oA2 = f3, iA2 = (yA2 = Ig(fA2, Q5, M4, X2)) + QA2 | 0, QA2 = f3 + oA2 | 0, QA2 = iA2 >>> 0 < yA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(E4, h4, w4, P7), QA2 = f3 + QA2 | 0, QA2 = (iA2 = oA2 + iA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(hA2, _4, y4, n5), QA2 = f3 + QA2 | 0, QA2 = (iA2 = oA2 + iA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, yA2 = Ig(D4, U4, k4, q3), oA2 = f3 + QA2 | 0, oA2 = (iA2 = yA2 + iA2 | 0) >>> 0 < yA2 >>> 0 ? oA2 + 1 | 0 : oA2, QA2 = (yA2 = Ig(rA2, c4, F4, u4)) + iA2 | 0, iA2 = f3 + oA2 | 0, iA2 = QA2 >>> 0 < yA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = (yA2 = Ig(S4, z2, Z2, W2)) + QA2 | 0, QA2 = f3 + iA2 | 0, QA2 = oA2 >>> 0 < yA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = oA2, oA2 = Ig(DA2, t4, v4, yA2 = v4 >> 31), QA2 = f3 + QA2 | 0, QA2 = (iA2 = iA2 + oA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(EA2, p4, G4, j2), QA2 = f3 + QA2 | 0, QA2 = (iA2 = oA2 + iA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, pA2 = Ig(tA2, s4, eA2, r4), oA2 = f3 + QA2 | 0, QA2 = I7 >> 26, I7 = (kA2 = (67108863 & I7) << 6 | kA2 >>> 26) + (iA2 = pA2 + iA2 | 0) | 0, iA2 = QA2 + (iA2 >>> 0 < pA2 >>> 0 ? oA2 + 1 | 0 : oA2) | 0, QA2 = (oA2 = I7) >>> 0 < kA2 >>> 0 ? iA2 + 1 | 0 : iA2, kA2 = iA2 = oA2 + 16777216 | 0, I7 = QA2 = iA2 >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2, i4[A8 + 28 >> 2] = oA2 - (-33554432 & iA2), QA2 = Ig(rA2, c4, C4, e6), iA2 = f3, pA2 = Ig(fA2, Q5, k4, q3), oA2 = f3 + iA2 | 0, oA2 = (QA2 = pA2 + QA2 | 0) >>> 0 < pA2 >>> 0 ? oA2 + 1 | 0 : oA2, pA2 = Ig(E4, h4, S4, z2), iA2 = f3 + oA2 | 0, iA2 = (QA2 = pA2 + QA2 | 0) >>> 0 < pA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = (pA2 = Ig(DA2, t4, y4, n5)) + QA2 | 0, QA2 = f3 + iA2 | 0, QA2 = oA2 >>> 0 < pA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = oA2, oA2 = Ig(nA2, V2, G4, j2), QA2 = f3 + QA2 | 0, QA2 = (iA2 = iA2 + oA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(eA2, r4, d5, O2), QA2 = f3 + QA2 | 0, QA2 = (iA2 = oA2 + iA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = (cA2 = Ig(cA2, J4, M4, X2)) + iA2 | 0, oA2 = f3 + QA2 | 0, QA2 = (sA2 = Ig(B4, o4, sA2, N4)) + iA2 | 0, iA2 = f3 + (iA2 >>> 0 < cA2 >>> 0 ? oA2 + 1 | 0 : oA2) | 0, oA2 = (EA2 = Ig(EA2, p4, w4, P7)) + QA2 | 0, QA2 = f3 + (QA2 >>> 0 < sA2 >>> 0 ? iA2 + 1 | 0 : iA2) | 0, QA2 = oA2 >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = oA2, oA2 = Ig(tA2, s4, hA2, _4), QA2 = f3 + QA2 | 0, EA2 = iA2 = iA2 + oA2 | 0, QA2 = (QA2 = iA2 >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2) + (iA2 = g6 >> 26) | 0, EA2 = g6 = EA2 + (oA2 = (67108863 & g6) << 6 | MA2 >>> 26) | 0, QA2 = g6 >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, sA2 = iA2 = g6 + 16777216 | 0, g6 = oA2 = iA2 >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2, i4[A8 + 12 >> 2] = EA2 - (-33554432 & iA2), QA2 = Ig(C4, e6, Y4, L4), oA2 = f3, iA2 = (EA2 = Ig(fA2, Q5, eA2, r4)) + QA2 | 0, QA2 = f3 + oA2 | 0, QA2 = iA2 >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(B4, o4, E4, h4), QA2 = f3 + QA2 | 0, QA2 = (iA2 = oA2 + iA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, EA2 = Ig(y4, n5, wA2, m4), oA2 = f3 + QA2 | 0, oA2 = (iA2 = EA2 + iA2 | 0) >>> 0 < EA2 >>> 0 ? oA2 + 1 | 0 : oA2, QA2 = (EA2 = Ig(hA2, _4, D4, U4)) + iA2 | 0, iA2 = f3 + oA2 | 0, iA2 = QA2 >>> 0 < EA2 >>> 0 ? iA2 + 1 | 0 : iA2, oA2 = (EA2 = Ig(K4, l4, F4, u4)) + QA2 | 0, QA2 = f3 + iA2 | 0, QA2 = oA2 >>> 0 < EA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = oA2, oA2 = Ig(rA2, c4, Z2, W2), QA2 = f3 + QA2 | 0, QA2 = (iA2 = iA2 + oA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(v4, yA2, b5, x4), QA2 = f3 + QA2 | 0, QA2 = (iA2 = oA2 + iA2 | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = (wA2 = Ig(DA2, t4, EA2 = SA2, cA2 = EA2 >> 31)) + iA2 | 0, oA2 = f3 + QA2 | 0, QA2 = (tA2 = Ig(tA2, s4, H4, R4)) + iA2 | 0, iA2 = f3 + (iA2 >>> 0 < wA2 >>> 0 ? oA2 + 1 | 0 : oA2) | 0, iA2 = QA2 >>> 0 < tA2 >>> 0 ? iA2 + 1 | 0 : iA2, SA2 = QA2, QA2 = (QA2 = I7 >> 25) + iA2 | 0, QA2 = (I7 = SA2 + (oA2 = (33554431 & I7) << 7 | kA2 >>> 25) | 0) >>> 0 < oA2 >>> 0 ? QA2 + 1 | 0 : QA2, tA2 = iA2 = (oA2 = I7) + 33554432 | 0, I7 = QA2 = iA2 >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2, i4[A8 + 32 >> 2] = oA2 - (-67108864 & iA2), iA2 = g6 >> 25, g6 = (sA2 = (33554431 & g6) << 7 | sA2 >>> 25) + ($2 - (QA2 = -67108864 & IA2) | 0) | 0, QA2 = iA2 + (AA2 - ((QA2 >>> 0 > $2 >>> 0) + gA2 | 0) | 0) | 0, QA2 = g6 >>> 0 < sA2 >>> 0 ? QA2 + 1 | 0 : QA2, QA2 = ((67108863 & (QA2 = (g6 = (iA2 = g6) + 33554432 | 0) >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2)) << 6 | g6 >>> 26) + (oA2 = GA2 - (-33554432 & CA2) | 0) | 0, i4[A8 + 20 >> 2] = QA2, i4[A8 + 16 >> 2] = iA2 - (-67108864 & g6), g6 = Ig(eA2, r4, C4, e6), QA2 = f3, iA2 = Ig(fA2, Q5, G4, j2), QA2 = f3 + QA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(E4, h4, M4, X2), iA2 = f3 + QA2 | 0, iA2 = (g6 = oA2 + g6 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = Ig(B4, o4, y4, n5), oA2 = f3 + iA2 | 0, oA2 = (g6 = QA2 + g6 | 0) >>> 0 < QA2 >>> 0 ? oA2 + 1 | 0 : oA2, iA2 = Ig(D4, U4, w4, P7), QA2 = f3 + oA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = Ig(hA2, _4, F4, u4), QA2 = f3 + QA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, iA2 = Ig(k4, q3, Z2, W2), QA2 = f3 + QA2 | 0, QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2, oA2 = Ig(rA2, c4, v4, yA2), iA2 = f3 + QA2 | 0, iA2 = (g6 = oA2 + g6 | 0) >>> 0 < oA2 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = Ig(EA2, cA2, S4, z2), oA2 = f3 + iA2 | 0, oA2 = (g6 = QA2 + g6 | 0) >>> 0 < QA2 >>> 0 ? oA2 + 1 | 0 : oA2, iA2 = Ig(DA2, t4, T2, T2 >> 31), QA2 = f3 + oA2 | 0, QA2 = (QA2 = (g6 = iA2 + g6 | 0) >>> 0 < iA2 >>> 0 ? QA2 + 1 | 0 : QA2) + (iA2 = I7 >> 26) | 0, QA2 = (I7 = (oA2 = g6) + (g6 = (67108863 & I7) << 6 | tA2 >>> 26) | 0) >>> 0 < g6 >>> 0 ? QA2 + 1 | 0 : QA2, QA2 = (I7 = (g6 = I7) + 16777216 | 0) >>> 0 < 16777216 ? QA2 + 1 | 0 : QA2, i4[A8 + 36 >> 2] = g6 - (-33554432 & I7), oA2 = _A2 - (-33554432 & KA2) | 0, iA2 = aA2 - (g6 = -67108864 & NA2) | 0, fA2 = FA2 - ((g6 >>> 0 > aA2 >>> 0) + BA2 | 0) | 0, I7 = (g6 = Ig((33554431 & (g6 = QA2)) << 7 | I7 >>> 25, QA2 >>= 25, 19, 0)) + iA2 | 0, iA2 = f3 + fA2 | 0, QA2 = I7 >>> 0 < g6 >>> 0 ? iA2 + 1 | 0 : iA2, QA2 = ((67108863 & (QA2 = (I7 = (g6 = I7) + 33554432 | 0) >>> 0 < 33554432 ? QA2 + 1 | 0 : QA2)) << 6 | I7 >>> 26) + oA2 | 0, i4[A8 + 4 >> 2] = QA2, i4[A8 >> 2] = g6 - (-67108864 & I7);
                    }
                    function H3(A8, I7) {
                      var g6, C4, B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, f4, p4, w4 = 0, n5 = 0, k4 = 0;
                      s3 = g6 = s3 - 544 | 0, C4 = o3[A8 + 60 | 0] | o3[A8 + 61 | 0] << 8 | o3[A8 + 62 | 0] << 16 | o3[A8 + 63 | 0] << 24, B4 = o3[A8 + 56 | 0] | o3[A8 + 57 | 0] << 8 | o3[A8 + 58 | 0] << 16 | o3[A8 + 59 | 0] << 24, Q5 = o3[A8 + 52 | 0] | o3[A8 + 53 | 0] << 8 | o3[A8 + 54 | 0] << 16 | o3[A8 + 55 | 0] << 24, E4 = o3[A8 + 48 | 0] | o3[A8 + 49 | 0] << 8 | o3[A8 + 50 | 0] << 16 | o3[A8 + 51 | 0] << 24, a4 = o3[A8 + 32 | 0] | o3[A8 + 33 | 0] << 8 | o3[A8 + 34 | 0] << 16 | o3[A8 + 35 | 0] << 24, _4 = o3[A8 + 36 | 0] | o3[A8 + 37 | 0] << 8 | o3[A8 + 38 | 0] << 16 | o3[A8 + 39 | 0] << 24, c4 = o3[A8 + 40 | 0] | o3[A8 + 41 | 0] << 8 | o3[A8 + 42 | 0] << 16 | o3[A8 + 43 | 0] << 24, t4 = o3[A8 + 44 | 0] | o3[A8 + 45 | 0] << 8 | o3[A8 + 46 | 0] << 16 | o3[A8 + 47 | 0] << 24, w4 = o3[A8 + 28 | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24, r4 = o3[A8 + 24 | 0] | o3[A8 + 25 | 0] << 8 | o3[A8 + 26 | 0] << 16 | o3[A8 + 27 | 0] << 24, e6 = o3[A8 + 20 | 0] | o3[A8 + 21 | 0] << 8 | o3[A8 + 22 | 0] << 16 | o3[A8 + 23 | 0] << 24, y4 = o3[A8 + 16 | 0] | o3[A8 + 17 | 0] << 8 | o3[A8 + 18 | 0] << 16 | o3[A8 + 19 | 0] << 24, h4 = o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24, D4 = o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24, f4 = o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24, p4 = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, A8 = i4[I7 + 124 >> 2], i4[g6 + 536 >> 2] = i4[I7 + 120 >> 2], i4[g6 + 540 >> 2] = A8, A8 = i4[I7 + 116 >> 2], i4[g6 + 528 >> 2] = i4[I7 + 112 >> 2], i4[g6 + 532 >> 2] = A8, A8 = i4[I7 + 108 >> 2], i4[g6 + 504 >> 2] = i4[I7 + 104 >> 2], i4[g6 + 508 >> 2] = A8, A8 = i4[I7 + 100 >> 2], i4[g6 + 496 >> 2] = i4[I7 + 96 >> 2], i4[g6 + 500 >> 2] = A8, A8 = i4[I7 + 124 >> 2], i4[g6 + 488 >> 2] = i4[I7 + 120 >> 2], i4[g6 + 492 >> 2] = A8, A8 = i4[I7 + 116 >> 2], i4[g6 + 480 >> 2] = i4[I7 + 112 >> 2], i4[g6 + 484 >> 2] = A8, AI(k4 = g6 + 512 | 0, g6 + 496 | 0, g6 + 480 | 0), A8 = i4[g6 + 524 >> 2], i4[I7 + 120 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 124 >> 2] = A8, A8 = i4[g6 + 516 >> 2], i4[I7 + 112 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 116 >> 2] = A8, A8 = i4[I7 + 92 >> 2], i4[g6 + 472 >> 2] = i4[I7 + 88 >> 2], i4[g6 + 476 >> 2] = A8, A8 = i4[I7 + 84 >> 2], i4[g6 + 464 >> 2] = i4[I7 + 80 >> 2], i4[g6 + 468 >> 2] = A8, A8 = i4[I7 + 108 >> 2], i4[g6 + 456 >> 2] = i4[I7 + 104 >> 2], i4[g6 + 460 >> 2] = A8, A8 = i4[I7 + 100 >> 2], i4[g6 + 448 >> 2] = i4[I7 + 96 >> 2], i4[g6 + 452 >> 2] = A8, AI(k4, g6 + 464 | 0, g6 + 448 | 0), A8 = i4[g6 + 524 >> 2], i4[I7 + 104 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 108 >> 2] = A8, A8 = i4[g6 + 516 >> 2], i4[I7 + 96 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 100 >> 2] = A8, A8 = i4[I7 + 76 >> 2], i4[g6 + 440 >> 2] = i4[I7 + 72 >> 2], i4[g6 + 444 >> 2] = A8, n5 = i4[4 + (A8 = I7 - -64 | 0) >> 2], i4[g6 + 432 >> 2] = i4[A8 >> 2], i4[g6 + 436 >> 2] = n5, n5 = i4[I7 + 92 >> 2], i4[g6 + 424 >> 2] = i4[I7 + 88 >> 2], i4[g6 + 428 >> 2] = n5, n5 = i4[I7 + 84 >> 2], i4[g6 + 416 >> 2] = i4[I7 + 80 >> 2], i4[g6 + 420 >> 2] = n5, AI(k4, g6 + 432 | 0, g6 + 416 | 0), n5 = i4[g6 + 524 >> 2], i4[I7 + 88 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 92 >> 2] = n5, n5 = i4[g6 + 516 >> 2], i4[I7 + 80 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 84 >> 2] = n5, n5 = i4[I7 + 60 >> 2], i4[g6 + 408 >> 2] = i4[I7 + 56 >> 2], i4[g6 + 412 >> 2] = n5, n5 = i4[I7 + 52 >> 2], i4[g6 + 400 >> 2] = i4[I7 + 48 >> 2], i4[g6 + 404 >> 2] = n5, n5 = i4[I7 + 76 >> 2], i4[g6 + 392 >> 2] = i4[I7 + 72 >> 2], i4[g6 + 396 >> 2] = n5, n5 = i4[A8 + 4 >> 2], i4[g6 + 384 >> 2] = i4[A8 >> 2], i4[g6 + 388 >> 2] = n5, AI(k4, g6 + 400 | 0, g6 + 384 | 0), n5 = i4[g6 + 524 >> 2], i4[I7 + 72 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 76 >> 2] = n5, n5 = i4[g6 + 516 >> 2], i4[A8 >> 2] = i4[g6 + 512 >> 2], i4[A8 + 4 >> 2] = n5, n5 = i4[I7 + 44 >> 2], i4[g6 + 376 >> 2] = i4[I7 + 40 >> 2], i4[g6 + 380 >> 2] = n5, n5 = i4[I7 + 36 >> 2], i4[g6 + 368 >> 2] = i4[I7 + 32 >> 2], i4[g6 + 372 >> 2] = n5, n5 = i4[I7 + 60 >> 2], i4[g6 + 360 >> 2] = i4[I7 + 56 >> 2], i4[g6 + 364 >> 2] = n5, n5 = i4[I7 + 52 >> 2], i4[g6 + 352 >> 2] = i4[I7 + 48 >> 2], i4[g6 + 356 >> 2] = n5, AI(k4, g6 + 368 | 0, g6 + 352 | 0), n5 = i4[g6 + 524 >> 2], i4[I7 + 56 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 60 >> 2] = n5, n5 = i4[g6 + 516 >> 2], i4[I7 + 48 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 52 >> 2] = n5, n5 = i4[I7 + 28 >> 2], i4[g6 + 344 >> 2] = i4[I7 + 24 >> 2], i4[g6 + 348 >> 2] = n5, n5 = i4[I7 + 20 >> 2], i4[g6 + 336 >> 2] = i4[I7 + 16 >> 2], i4[g6 + 340 >> 2] = n5, n5 = i4[I7 + 44 >> 2], i4[g6 + 328 >> 2] = i4[I7 + 40 >> 2], i4[g6 + 332 >> 2] = n5, n5 = i4[I7 + 36 >> 2], i4[g6 + 320 >> 2] = i4[I7 + 32 >> 2], i4[g6 + 324 >> 2] = n5, AI(k4, g6 + 336 | 0, g6 + 320 | 0), n5 = i4[g6 + 524 >> 2], i4[I7 + 40 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 44 >> 2] = n5, n5 = i4[g6 + 516 >> 2], i4[I7 + 32 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 36 >> 2] = n5, n5 = i4[I7 + 12 >> 2], i4[g6 + 312 >> 2] = i4[I7 + 8 >> 2], i4[g6 + 316 >> 2] = n5, n5 = i4[I7 + 4 >> 2], i4[g6 + 304 >> 2] = i4[I7 >> 2], i4[g6 + 308 >> 2] = n5, n5 = i4[I7 + 28 >> 2], i4[g6 + 296 >> 2] = i4[I7 + 24 >> 2], i4[g6 + 300 >> 2] = n5, n5 = i4[I7 + 20 >> 2], i4[g6 + 288 >> 2] = i4[I7 + 16 >> 2], i4[g6 + 292 >> 2] = n5, AI(k4, g6 + 304 | 0, g6 + 288 | 0), n5 = i4[g6 + 524 >> 2], i4[I7 + 24 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 28 >> 2] = n5, n5 = i4[g6 + 516 >> 2], i4[I7 + 16 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 20 >> 2] = n5, n5 = i4[g6 + 540 >> 2], i4[g6 + 280 >> 2] = i4[g6 + 536 >> 2], i4[g6 + 284 >> 2] = n5, n5 = i4[g6 + 532 >> 2], i4[g6 + 272 >> 2] = i4[g6 + 528 >> 2], i4[g6 + 276 >> 2] = n5, n5 = i4[I7 + 12 >> 2], i4[g6 + 264 >> 2] = i4[I7 + 8 >> 2], i4[g6 + 268 >> 2] = n5, n5 = i4[I7 + 4 >> 2], i4[g6 + 256 >> 2] = i4[I7 >> 2], i4[g6 + 260 >> 2] = n5, AI(k4, g6 + 272 | 0, g6 + 256 | 0), n5 = i4[g6 + 524 >> 2], i4[I7 + 8 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 12 >> 2] = n5, n5 = i4[g6 + 516 >> 2], i4[I7 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 4 >> 2] = n5, i4[I7 + 12 >> 2] = (o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24) ^ f4, i4[I7 + 8 >> 2] = (o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24) ^ D4, i4[I7 + 4 >> 2] = (o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24) ^ h4, i4[I7 >> 2] = (o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24) ^ p4, i4[A8 >> 2] = (o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24) ^ y4, i4[I7 + 68 >> 2] = (o3[I7 + 68 | 0] | o3[I7 + 69 | 0] << 8 | o3[I7 + 70 | 0] << 16 | o3[I7 + 71 | 0] << 24) ^ e6, i4[I7 + 72 >> 2] = (o3[I7 + 72 | 0] | o3[I7 + 73 | 0] << 8 | o3[I7 + 74 | 0] << 16 | o3[I7 + 75 | 0] << 24) ^ r4, i4[I7 + 76 >> 2] = (o3[I7 + 76 | 0] | o3[I7 + 77 | 0] << 8 | o3[I7 + 78 | 0] << 16 | o3[I7 + 79 | 0] << 24) ^ w4, w4 = i4[I7 + 124 >> 2], i4[g6 + 536 >> 2] = i4[I7 + 120 >> 2], i4[g6 + 540 >> 2] = w4, w4 = i4[I7 + 116 >> 2], i4[g6 + 528 >> 2] = i4[I7 + 112 >> 2], i4[g6 + 532 >> 2] = w4, w4 = i4[I7 + 108 >> 2], i4[g6 + 248 >> 2] = i4[I7 + 104 >> 2], i4[g6 + 252 >> 2] = w4, w4 = i4[I7 + 100 >> 2], i4[g6 + 240 >> 2] = i4[I7 + 96 >> 2], i4[g6 + 244 >> 2] = w4, w4 = i4[I7 + 124 >> 2], i4[g6 + 232 >> 2] = i4[I7 + 120 >> 2], i4[g6 + 236 >> 2] = w4, w4 = i4[I7 + 116 >> 2], i4[g6 + 224 >> 2] = i4[I7 + 112 >> 2], i4[g6 + 228 >> 2] = w4, AI(k4, g6 + 240 | 0, g6 + 224 | 0), w4 = i4[g6 + 524 >> 2], i4[I7 + 120 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 124 >> 2] = w4, w4 = i4[g6 + 516 >> 2], i4[I7 + 112 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 116 >> 2] = w4, w4 = i4[I7 + 92 >> 2], i4[g6 + 216 >> 2] = i4[I7 + 88 >> 2], i4[g6 + 220 >> 2] = w4, w4 = i4[I7 + 84 >> 2], i4[g6 + 208 >> 2] = i4[I7 + 80 >> 2], i4[g6 + 212 >> 2] = w4, w4 = i4[I7 + 108 >> 2], i4[g6 + 200 >> 2] = i4[I7 + 104 >> 2], i4[g6 + 204 >> 2] = w4, w4 = i4[I7 + 100 >> 2], i4[g6 + 192 >> 2] = i4[I7 + 96 >> 2], i4[g6 + 196 >> 2] = w4, AI(k4, g6 + 208 | 0, g6 + 192 | 0), w4 = i4[g6 + 524 >> 2], i4[I7 + 104 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 108 >> 2] = w4, w4 = i4[g6 + 516 >> 2], i4[I7 + 96 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 100 >> 2] = w4, w4 = i4[I7 + 76 >> 2], i4[g6 + 184 >> 2] = i4[I7 + 72 >> 2], i4[g6 + 188 >> 2] = w4, w4 = i4[A8 + 4 >> 2], i4[g6 + 176 >> 2] = i4[A8 >> 2], i4[g6 + 180 >> 2] = w4, w4 = i4[I7 + 92 >> 2], i4[g6 + 168 >> 2] = i4[I7 + 88 >> 2], i4[g6 + 172 >> 2] = w4, w4 = i4[I7 + 84 >> 2], i4[g6 + 160 >> 2] = i4[I7 + 80 >> 2], i4[g6 + 164 >> 2] = w4, AI(k4, g6 + 176 | 0, g6 + 160 | 0), w4 = i4[g6 + 524 >> 2], i4[I7 + 88 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 92 >> 2] = w4, w4 = i4[g6 + 516 >> 2], i4[I7 + 80 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 84 >> 2] = w4, w4 = i4[I7 + 60 >> 2], i4[g6 + 152 >> 2] = i4[I7 + 56 >> 2], i4[g6 + 156 >> 2] = w4, w4 = i4[I7 + 52 >> 2], i4[g6 + 144 >> 2] = i4[I7 + 48 >> 2], i4[g6 + 148 >> 2] = w4, w4 = i4[I7 + 76 >> 2], i4[g6 + 136 >> 2] = i4[I7 + 72 >> 2], i4[g6 + 140 >> 2] = w4, w4 = i4[A8 + 4 >> 2], i4[g6 + 128 >> 2] = i4[A8 >> 2], i4[g6 + 132 >> 2] = w4, AI(k4, g6 + 144 | 0, g6 + 128 | 0), w4 = i4[g6 + 524 >> 2], i4[I7 + 72 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 76 >> 2] = w4, w4 = i4[g6 + 516 >> 2], i4[A8 >> 2] = i4[g6 + 512 >> 2], i4[A8 + 4 >> 2] = w4, w4 = i4[I7 + 44 >> 2], i4[g6 + 120 >> 2] = i4[I7 + 40 >> 2], i4[g6 + 124 >> 2] = w4, w4 = i4[I7 + 36 >> 2], i4[g6 + 112 >> 2] = i4[I7 + 32 >> 2], i4[g6 + 116 >> 2] = w4, w4 = i4[I7 + 60 >> 2], i4[g6 + 104 >> 2] = i4[I7 + 56 >> 2], i4[g6 + 108 >> 2] = w4, w4 = i4[I7 + 52 >> 2], i4[g6 + 96 >> 2] = i4[I7 + 48 >> 2], i4[g6 + 100 >> 2] = w4, AI(k4, g6 + 112 | 0, g6 + 96 | 0), w4 = i4[g6 + 524 >> 2], i4[I7 + 56 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 60 >> 2] = w4, w4 = i4[g6 + 516 >> 2], i4[I7 + 48 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 52 >> 2] = w4, w4 = i4[I7 + 28 >> 2], i4[g6 + 88 >> 2] = i4[I7 + 24 >> 2], i4[g6 + 92 >> 2] = w4, w4 = i4[I7 + 20 >> 2], i4[g6 + 80 >> 2] = i4[I7 + 16 >> 2], i4[g6 + 84 >> 2] = w4, w4 = i4[I7 + 44 >> 2], i4[g6 + 72 >> 2] = i4[I7 + 40 >> 2], i4[g6 + 76 >> 2] = w4, w4 = i4[I7 + 36 >> 2], i4[g6 + 64 >> 2] = i4[I7 + 32 >> 2], i4[g6 + 68 >> 2] = w4, AI(k4, g6 + 80 | 0, g6 - -64 | 0), w4 = i4[g6 + 524 >> 2], i4[I7 + 40 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 44 >> 2] = w4, w4 = i4[g6 + 516 >> 2], i4[I7 + 32 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 36 >> 2] = w4, w4 = i4[I7 + 12 >> 2], i4[g6 + 56 >> 2] = i4[I7 + 8 >> 2], i4[g6 + 60 >> 2] = w4, w4 = i4[I7 + 4 >> 2], i4[g6 + 48 >> 2] = i4[I7 >> 2], i4[g6 + 52 >> 2] = w4, w4 = i4[I7 + 28 >> 2], i4[g6 + 40 >> 2] = i4[I7 + 24 >> 2], i4[g6 + 44 >> 2] = w4, w4 = i4[I7 + 20 >> 2], i4[g6 + 32 >> 2] = i4[I7 + 16 >> 2], i4[g6 + 36 >> 2] = w4, AI(k4, g6 + 48 | 0, g6 + 32 | 0), w4 = i4[g6 + 524 >> 2], i4[I7 + 24 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 28 >> 2] = w4, w4 = i4[g6 + 516 >> 2], i4[I7 + 16 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 20 >> 2] = w4, w4 = i4[g6 + 540 >> 2], i4[g6 + 24 >> 2] = i4[g6 + 536 >> 2], i4[g6 + 28 >> 2] = w4, w4 = i4[g6 + 532 >> 2], i4[g6 + 16 >> 2] = i4[g6 + 528 >> 2], i4[g6 + 20 >> 2] = w4, w4 = i4[I7 + 12 >> 2], i4[g6 + 8 >> 2] = i4[I7 + 8 >> 2], i4[g6 + 12 >> 2] = w4, w4 = i4[I7 + 4 >> 2], i4[g6 >> 2] = i4[I7 >> 2], i4[g6 + 4 >> 2] = w4, AI(k4, g6 + 16 | 0, g6), k4 = i4[g6 + 524 >> 2], i4[I7 + 8 >> 2] = i4[g6 + 520 >> 2], i4[I7 + 12 >> 2] = k4, k4 = i4[g6 + 516 >> 2], i4[I7 >> 2] = i4[g6 + 512 >> 2], i4[I7 + 4 >> 2] = k4, i4[I7 + 12 >> 2] = (o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24) ^ t4, i4[I7 + 8 >> 2] = (o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24) ^ c4, i4[I7 + 4 >> 2] = (o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24) ^ _4, i4[I7 >> 2] = (o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24) ^ a4, i4[A8 >> 2] = (o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24) ^ E4, i4[I7 + 68 >> 2] = (o3[I7 + 68 | 0] | o3[I7 + 69 | 0] << 8 | o3[I7 + 70 | 0] << 16 | o3[I7 + 71 | 0] << 24) ^ Q5, i4[I7 + 72 >> 2] = (o3[I7 + 72 | 0] | o3[I7 + 73 | 0] << 8 | o3[I7 + 74 | 0] << 16 | o3[I7 + 75 | 0] << 24) ^ B4, i4[I7 + 76 >> 2] = (o3[I7 + 76 | 0] | o3[I7 + 77 | 0] << 8 | o3[I7 + 78 | 0] << 16 | o3[I7 + 79 | 0] << 24) ^ C4, s3 = g6 + 544 | 0;
                    }
                    function Y3(A8, I7, g6, B4, Q5) {
                      var E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0;
                      for (s3 = E4 = s3 - 288 | 0, D4 = (o3[Q5 + 44 | 0] | o3[Q5 + 45 | 0] << 8 | o3[Q5 + 46 | 0] << 16 | o3[Q5 + 47 | 0] << 24) ^ B4 >>> 29, f4 = (o3[Q5 + 40 | 0] | o3[Q5 + 41 | 0] << 8 | o3[Q5 + 42 | 0] << 16 | o3[Q5 + 43 | 0] << 24) ^ B4 << 3, p4 = (o3[Q5 + 36 | 0] | o3[Q5 + 37 | 0] << 8 | o3[Q5 + 38 | 0] << 16 | o3[Q5 + 39 | 0] << 24) ^ g6 >>> 29, B4 = (o3[0 | (c4 = Q5 + 32 | 0)] | o3[c4 + 1 | 0] << 8 | o3[c4 + 2 | 0] << 16 | o3[c4 + 3 | 0] << 24) ^ g6 << 3, y4 = Q5 + 16 | 0, r4 = Q5 + 48 | 0, _4 = Q5 - -64 | 0, e6 = Q5 + 80 | 0, a4 = Q5 + 96 | 0, t4 = Q5 + 112 | 0; g6 = i4[t4 + 12 >> 2], i4[E4 + 280 >> 2] = i4[t4 + 8 >> 2], i4[E4 + 284 >> 2] = g6, g6 = i4[t4 + 4 >> 2], i4[E4 + 272 >> 2] = i4[t4 >> 2], i4[E4 + 276 >> 2] = g6, g6 = i4[a4 + 12 >> 2], i4[E4 + 248 >> 2] = i4[a4 + 8 >> 2], i4[E4 + 252 >> 2] = g6, g6 = i4[a4 + 4 >> 2], i4[E4 + 240 >> 2] = i4[a4 >> 2], i4[E4 + 244 >> 2] = g6, g6 = i4[t4 + 12 >> 2], i4[E4 + 232 >> 2] = i4[t4 + 8 >> 2], i4[E4 + 236 >> 2] = g6, g6 = i4[t4 + 4 >> 2], i4[E4 + 224 >> 2] = i4[t4 >> 2], i4[E4 + 228 >> 2] = g6, AI(h4 = E4 + 256 | 0, E4 + 240 | 0, E4 + 224 | 0), g6 = i4[E4 + 268 >> 2], i4[t4 + 8 >> 2] = i4[E4 + 264 >> 2], i4[t4 + 12 >> 2] = g6, g6 = i4[E4 + 260 >> 2], i4[t4 >> 2] = i4[E4 + 256 >> 2], i4[t4 + 4 >> 2] = g6, g6 = i4[e6 + 12 >> 2], i4[E4 + 216 >> 2] = i4[e6 + 8 >> 2], i4[E4 + 220 >> 2] = g6, g6 = i4[e6 + 4 >> 2], i4[E4 + 208 >> 2] = i4[e6 >> 2], i4[E4 + 212 >> 2] = g6, g6 = i4[a4 + 12 >> 2], i4[E4 + 200 >> 2] = i4[a4 + 8 >> 2], i4[E4 + 204 >> 2] = g6, g6 = i4[a4 + 4 >> 2], i4[E4 + 192 >> 2] = i4[a4 >> 2], i4[E4 + 196 >> 2] = g6, AI(h4, E4 + 208 | 0, E4 + 192 | 0), g6 = i4[E4 + 268 >> 2], i4[a4 + 8 >> 2] = i4[E4 + 264 >> 2], i4[a4 + 12 >> 2] = g6, g6 = i4[E4 + 260 >> 2], i4[a4 >> 2] = i4[E4 + 256 >> 2], i4[a4 + 4 >> 2] = g6, g6 = i4[_4 + 12 >> 2], i4[E4 + 184 >> 2] = i4[_4 + 8 >> 2], i4[E4 + 188 >> 2] = g6, g6 = i4[_4 + 4 >> 2], i4[E4 + 176 >> 2] = i4[_4 >> 2], i4[E4 + 180 >> 2] = g6, g6 = i4[e6 + 12 >> 2], i4[E4 + 168 >> 2] = i4[e6 + 8 >> 2], i4[E4 + 172 >> 2] = g6, g6 = i4[e6 + 4 >> 2], i4[E4 + 160 >> 2] = i4[e6 >> 2], i4[E4 + 164 >> 2] = g6, AI(h4, E4 + 176 | 0, E4 + 160 | 0), g6 = i4[E4 + 268 >> 2], i4[e6 + 8 >> 2] = i4[E4 + 264 >> 2], i4[e6 + 12 >> 2] = g6, g6 = i4[E4 + 260 >> 2], i4[e6 >> 2] = i4[E4 + 256 >> 2], i4[e6 + 4 >> 2] = g6, g6 = i4[r4 + 12 >> 2], i4[E4 + 152 >> 2] = i4[r4 + 8 >> 2], i4[E4 + 156 >> 2] = g6, g6 = i4[r4 + 4 >> 2], i4[E4 + 144 >> 2] = i4[r4 >> 2], i4[E4 + 148 >> 2] = g6, g6 = i4[_4 + 12 >> 2], i4[E4 + 136 >> 2] = i4[_4 + 8 >> 2], i4[E4 + 140 >> 2] = g6, g6 = i4[_4 + 4 >> 2], i4[E4 + 128 >> 2] = i4[_4 >> 2], i4[E4 + 132 >> 2] = g6, AI(h4, E4 + 144 | 0, E4 + 128 | 0), g6 = i4[E4 + 268 >> 2], i4[_4 + 8 >> 2] = i4[E4 + 264 >> 2], i4[_4 + 12 >> 2] = g6, g6 = i4[E4 + 260 >> 2], i4[_4 >> 2] = i4[E4 + 256 >> 2], i4[_4 + 4 >> 2] = g6, g6 = i4[c4 + 12 >> 2], i4[E4 + 120 >> 2] = i4[c4 + 8 >> 2], i4[E4 + 124 >> 2] = g6, g6 = i4[c4 + 4 >> 2], i4[E4 + 112 >> 2] = i4[c4 >> 2], i4[E4 + 116 >> 2] = g6, g6 = i4[r4 + 12 >> 2], i4[E4 + 104 >> 2] = i4[r4 + 8 >> 2], i4[E4 + 108 >> 2] = g6, g6 = i4[r4 + 4 >> 2], i4[E4 + 96 >> 2] = i4[r4 >> 2], i4[E4 + 100 >> 2] = g6, AI(h4, E4 + 112 | 0, E4 + 96 | 0), g6 = i4[E4 + 268 >> 2], i4[r4 + 8 >> 2] = i4[E4 + 264 >> 2], i4[r4 + 12 >> 2] = g6, g6 = i4[E4 + 260 >> 2], i4[r4 >> 2] = i4[E4 + 256 >> 2], i4[r4 + 4 >> 2] = g6, g6 = i4[y4 + 12 >> 2], i4[E4 + 88 >> 2] = i4[y4 + 8 >> 2], i4[E4 + 92 >> 2] = g6, g6 = i4[y4 + 4 >> 2], i4[E4 + 80 >> 2] = i4[y4 >> 2], i4[E4 + 84 >> 2] = g6, g6 = i4[c4 + 12 >> 2], i4[E4 + 72 >> 2] = i4[c4 + 8 >> 2], i4[E4 + 76 >> 2] = g6, g6 = i4[c4 + 4 >> 2], i4[E4 + 64 >> 2] = i4[c4 >> 2], i4[E4 + 68 >> 2] = g6, AI(h4, E4 + 80 | 0, E4 - -64 | 0), g6 = i4[E4 + 268 >> 2], i4[c4 + 8 >> 2] = i4[E4 + 264 >> 2], i4[c4 + 12 >> 2] = g6, g6 = i4[E4 + 260 >> 2], i4[c4 >> 2] = i4[E4 + 256 >> 2], i4[c4 + 4 >> 2] = g6, g6 = i4[Q5 + 12 >> 2], i4[E4 + 56 >> 2] = i4[Q5 + 8 >> 2], i4[E4 + 60 >> 2] = g6, g6 = i4[Q5 + 4 >> 2], i4[E4 + 48 >> 2] = i4[Q5 >> 2], i4[E4 + 52 >> 2] = g6, g6 = i4[y4 + 12 >> 2], i4[E4 + 40 >> 2] = i4[y4 + 8 >> 2], i4[E4 + 44 >> 2] = g6, g6 = i4[y4 + 4 >> 2], i4[E4 + 32 >> 2] = i4[y4 >> 2], i4[E4 + 36 >> 2] = g6, AI(h4, E4 + 48 | 0, E4 + 32 | 0), g6 = i4[E4 + 268 >> 2], i4[y4 + 8 >> 2] = i4[E4 + 264 >> 2], i4[y4 + 12 >> 2] = g6, g6 = i4[E4 + 260 >> 2], i4[y4 >> 2] = i4[E4 + 256 >> 2], i4[y4 + 4 >> 2] = g6, g6 = i4[E4 + 284 >> 2], i4[E4 + 24 >> 2] = i4[E4 + 280 >> 2], i4[E4 + 28 >> 2] = g6, g6 = i4[E4 + 276 >> 2], i4[E4 + 16 >> 2] = i4[E4 + 272 >> 2], i4[E4 + 20 >> 2] = g6, g6 = i4[Q5 + 12 >> 2], i4[E4 + 8 >> 2] = i4[Q5 + 8 >> 2], i4[E4 + 12 >> 2] = g6, g6 = i4[Q5 + 4 >> 2], i4[E4 >> 2] = i4[Q5 >> 2], i4[E4 + 4 >> 2] = g6, AI(h4, E4 + 16 | 0, E4), g6 = i4[E4 + 268 >> 2], i4[Q5 + 8 >> 2] = i4[E4 + 264 >> 2], i4[Q5 + 12 >> 2] = g6, g6 = i4[E4 + 260 >> 2], i4[Q5 >> 2] = i4[E4 + 256 >> 2], i4[Q5 + 4 >> 2] = g6, n5 = D4 ^ (o3[Q5 + 12 | 0] | o3[Q5 + 13 | 0] << 8 | o3[Q5 + 14 | 0] << 16 | o3[Q5 + 15 | 0] << 24), i4[Q5 + 12 >> 2] = n5, k4 = f4 ^ (o3[Q5 + 8 | 0] | o3[Q5 + 9 | 0] << 8 | o3[Q5 + 10 | 0] << 16 | o3[Q5 + 11 | 0] << 24), i4[Q5 + 8 >> 2] = k4, F4 = p4 ^ (o3[Q5 + 4 | 0] | o3[Q5 + 5 | 0] << 8 | o3[Q5 + 6 | 0] << 16 | o3[Q5 + 7 | 0] << 24), i4[Q5 + 4 >> 2] = F4, S4 = B4 ^ (o3[0 | Q5] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24), i4[Q5 >> 2] = S4, N4 = B4 ^ (o3[0 | _4] | o3[_4 + 1 | 0] << 8 | o3[_4 + 2 | 0] << 16 | o3[_4 + 3 | 0] << 24), i4[_4 >> 2] = N4, G4 = p4 ^ (o3[Q5 + 68 | 0] | o3[Q5 + 69 | 0] << 8 | o3[Q5 + 70 | 0] << 16 | o3[Q5 + 71 | 0] << 24), i4[Q5 + 68 >> 2] = G4, M4 = f4 ^ (o3[Q5 + 72 | 0] | o3[Q5 + 73 | 0] << 8 | o3[Q5 + 74 | 0] << 16 | o3[Q5 + 75 | 0] << 24), i4[Q5 + 72 >> 2] = M4, K4 = D4 ^ (o3[Q5 + 76 | 0] | o3[Q5 + 77 | 0] << 8 | o3[Q5 + 78 | 0] << 16 | o3[Q5 + 79 | 0] << 24), i4[Q5 + 76 >> 2] = K4, 7 != (0 | (w4 = w4 + 1 | 0)); ) ;
                      A: {
                        I: {
                          g: {
                            if (g6 = I7 - 16 | 0) {
                              if (16 == (0 | g6)) break g;
                              break I;
                            }
                            _4 = o3[Q5 + 16 | 0] | o3[Q5 + 17 | 0] << 8 | o3[Q5 + 18 | 0] << 16 | o3[Q5 + 19 | 0] << 24, c4 = o3[Q5 + 48 | 0] | o3[Q5 + 49 | 0] << 8 | o3[Q5 + 50 | 0] << 16 | o3[Q5 + 51 | 0] << 24, y4 = o3[Q5 + 32 | 0] | o3[Q5 + 33 | 0] << 8 | o3[Q5 + 34 | 0] << 16 | o3[Q5 + 35 | 0] << 24, r4 = o3[Q5 + 96 | 0] | o3[Q5 + 97 | 0] << 8 | o3[Q5 + 98 | 0] << 16 | o3[Q5 + 99 | 0] << 24, e6 = o3[Q5 + 80 | 0] | o3[Q5 + 81 | 0] << 8 | o3[Q5 + 82 | 0] << 16 | o3[Q5 + 83 | 0] << 24, a4 = o3[Q5 + 20 | 0] | o3[Q5 + 21 | 0] << 8 | o3[Q5 + 22 | 0] << 16 | o3[Q5 + 23 | 0] << 24, t4 = o3[Q5 + 52 | 0] | o3[Q5 + 53 | 0] << 8 | o3[Q5 + 54 | 0] << 16 | o3[Q5 + 55 | 0] << 24, h4 = o3[Q5 + 36 | 0] | o3[Q5 + 37 | 0] << 8 | o3[Q5 + 38 | 0] << 16 | o3[Q5 + 39 | 0] << 24, D4 = o3[Q5 + 100 | 0] | o3[Q5 + 101 | 0] << 8 | o3[Q5 + 102 | 0] << 16 | o3[Q5 + 103 | 0] << 24, f4 = o3[Q5 + 84 | 0] | o3[Q5 + 85 | 0] << 8 | o3[Q5 + 86 | 0] << 16 | o3[Q5 + 87 | 0] << 24, p4 = o3[Q5 + 24 | 0] | o3[Q5 + 25 | 0] << 8 | o3[Q5 + 26 | 0] << 16 | o3[Q5 + 27 | 0] << 24, w4 = o3[Q5 + 56 | 0] | o3[Q5 + 57 | 0] << 8 | o3[Q5 + 58 | 0] << 16 | o3[Q5 + 59 | 0] << 24, B4 = o3[Q5 + 40 | 0] | o3[Q5 + 41 | 0] << 8 | o3[Q5 + 42 | 0] << 16 | o3[Q5 + 43 | 0] << 24, g6 = o3[Q5 + 104 | 0] | o3[Q5 + 105 | 0] << 8 | o3[Q5 + 106 | 0] << 16 | o3[Q5 + 107 | 0] << 24, I7 = o3[Q5 + 88 | 0] | o3[Q5 + 89 | 0] << 8 | o3[Q5 + 90 | 0] << 16 | o3[Q5 + 91 | 0] << 24, Q5 = n5 ^ (o3[Q5 + 28 | 0] | o3[Q5 + 29 | 0] << 8 | o3[Q5 + 30 | 0] << 16 | o3[Q5 + 31 | 0] << 24) ^ (o3[Q5 + 60 | 0] | o3[Q5 + 61 | 0] << 8 | o3[Q5 + 62 | 0] << 16 | o3[Q5 + 63 | 0] << 24) ^ (o3[Q5 + 44 | 0] | o3[Q5 + 45 | 0] << 8 | o3[Q5 + 46 | 0] << 16 | o3[Q5 + 47 | 0] << 24) ^ (o3[Q5 + 92 | 0] | o3[Q5 + 93 | 0] << 8 | o3[Q5 + 94 | 0] << 16 | o3[Q5 + 95 | 0] << 24) ^ (o3[Q5 + 108 | 0] | o3[Q5 + 109 | 0] << 8 | o3[Q5 + 110 | 0] << 16 | o3[Q5 + 111 | 0] << 24) ^ K4, C3[A8 + 12 | 0] = Q5, C3[A8 + 13 | 0] = Q5 >>> 8, C3[A8 + 14 | 0] = Q5 >>> 16, C3[A8 + 15 | 0] = Q5 >>> 24, I7 = p4 ^ w4 ^ B4 ^ I7 ^ g6 ^ M4 ^ k4, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = a4 ^ t4 ^ h4 ^ D4 ^ f4 ^ G4 ^ F4, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = _4 ^ c4 ^ y4 ^ r4 ^ e6 ^ N4 ^ S4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24;
                            break A;
                          }
                          t4 = o3[Q5 + 16 | 0] | o3[Q5 + 17 | 0] << 8 | o3[Q5 + 18 | 0] << 16 | o3[Q5 + 19 | 0] << 24, h4 = o3[Q5 + 48 | 0] | o3[Q5 + 49 | 0] << 8 | o3[Q5 + 50 | 0] << 16 | o3[Q5 + 51 | 0] << 24, D4 = o3[Q5 + 32 | 0] | o3[Q5 + 33 | 0] << 8 | o3[Q5 + 34 | 0] << 16 | o3[Q5 + 35 | 0] << 24, f4 = o3[Q5 + 20 | 0] | o3[Q5 + 21 | 0] << 8 | o3[Q5 + 22 | 0] << 16 | o3[Q5 + 23 | 0] << 24, p4 = o3[Q5 + 52 | 0] | o3[Q5 + 53 | 0] << 8 | o3[Q5 + 54 | 0] << 16 | o3[Q5 + 55 | 0] << 24, w4 = o3[Q5 + 36 | 0] | o3[Q5 + 37 | 0] << 8 | o3[Q5 + 38 | 0] << 16 | o3[Q5 + 39 | 0] << 24, B4 = o3[Q5 + 24 | 0] | o3[Q5 + 25 | 0] << 8 | o3[Q5 + 26 | 0] << 16 | o3[Q5 + 27 | 0] << 24, g6 = o3[Q5 + 56 | 0] | o3[Q5 + 57 | 0] << 8 | o3[Q5 + 58 | 0] << 16 | o3[Q5 + 59 | 0] << 24, I7 = o3[Q5 + 40 | 0] | o3[Q5 + 41 | 0] << 8 | o3[Q5 + 42 | 0] << 16 | o3[Q5 + 43 | 0] << 24, a4 = n5 ^ (o3[Q5 + 28 | 0] | o3[Q5 + 29 | 0] << 8 | o3[Q5 + 30 | 0] << 16 | o3[Q5 + 31 | 0] << 24) ^ (o3[Q5 + 60 | 0] | o3[Q5 + 61 | 0] << 8 | o3[Q5 + 62 | 0] << 16 | o3[Q5 + 63 | 0] << 24) ^ (o3[Q5 + 44 | 0] | o3[Q5 + 45 | 0] << 8 | o3[Q5 + 46 | 0] << 16 | o3[Q5 + 47 | 0] << 24), C3[A8 + 12 | 0] = a4, C3[A8 + 13 | 0] = a4 >>> 8, C3[A8 + 14 | 0] = a4 >>> 16, C3[A8 + 15 | 0] = a4 >>> 24, I7 = B4 ^ I7 ^ g6 ^ k4, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = f4 ^ p4 ^ w4 ^ F4, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = t4 ^ h4 ^ D4 ^ S4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24, r4 = o3[Q5 + 80 | 0] | o3[Q5 + 81 | 0] << 8 | o3[Q5 + 82 | 0] << 16 | o3[Q5 + 83 | 0] << 24, e6 = o3[0 | (I7 = Q5 - -64 | 0)] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, a4 = o3[Q5 + 112 | 0] | o3[Q5 + 113 | 0] << 8 | o3[Q5 + 114 | 0] << 16 | o3[Q5 + 115 | 0] << 24, t4 = o3[Q5 + 96 | 0] | o3[Q5 + 97 | 0] << 8 | o3[Q5 + 98 | 0] << 16 | o3[Q5 + 99 | 0] << 24, h4 = o3[Q5 + 84 | 0] | o3[Q5 + 85 | 0] << 8 | o3[Q5 + 86 | 0] << 16 | o3[Q5 + 87 | 0] << 24, D4 = o3[Q5 + 68 | 0] | o3[Q5 + 69 | 0] << 8 | o3[Q5 + 70 | 0] << 16 | o3[Q5 + 71 | 0] << 24, f4 = o3[Q5 + 116 | 0] | o3[Q5 + 117 | 0] << 8 | o3[Q5 + 118 | 0] << 16 | o3[Q5 + 119 | 0] << 24, p4 = o3[Q5 + 100 | 0] | o3[Q5 + 101 | 0] << 8 | o3[Q5 + 102 | 0] << 16 | o3[Q5 + 103 | 0] << 24, w4 = o3[Q5 + 88 | 0] | o3[Q5 + 89 | 0] << 8 | o3[Q5 + 90 | 0] << 16 | o3[Q5 + 91 | 0] << 24, B4 = o3[Q5 + 72 | 0] | o3[Q5 + 73 | 0] << 8 | o3[Q5 + 74 | 0] << 16 | o3[Q5 + 75 | 0] << 24, g6 = o3[Q5 + 120 | 0] | o3[Q5 + 121 | 0] << 8 | o3[Q5 + 122 | 0] << 16 | o3[Q5 + 123 | 0] << 24, I7 = o3[Q5 + 104 | 0] | o3[Q5 + 105 | 0] << 8 | o3[Q5 + 106 | 0] << 16 | o3[Q5 + 107 | 0] << 24, Q5 = (o3[Q5 + 92 | 0] | o3[Q5 + 93 | 0] << 8 | o3[Q5 + 94 | 0] << 16 | o3[Q5 + 95 | 0] << 24) ^ (o3[Q5 + 76 | 0] | o3[Q5 + 77 | 0] << 8 | o3[Q5 + 78 | 0] << 16 | o3[Q5 + 79 | 0] << 24) ^ (o3[Q5 + 124 | 0] | o3[Q5 + 125 | 0] << 8 | o3[Q5 + 126 | 0] << 16 | o3[Q5 + 127 | 0] << 24) ^ (o3[Q5 + 108 | 0] | o3[Q5 + 109 | 0] << 8 | o3[Q5 + 110 | 0] << 16 | o3[Q5 + 111 | 0] << 24), C3[A8 + 28 | 0] = Q5, C3[A8 + 29 | 0] = Q5 >>> 8, C3[A8 + 30 | 0] = Q5 >>> 16, C3[A8 + 31 | 0] = Q5 >>> 24, I7 = w4 ^ B4 ^ I7 ^ g6, C3[A8 + 24 | 0] = I7, C3[A8 + 25 | 0] = I7 >>> 8, C3[A8 + 26 | 0] = I7 >>> 16, C3[A8 + 27 | 0] = I7 >>> 24, I7 = h4 ^ D4 ^ f4 ^ p4, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = r4 ^ e6 ^ a4 ^ t4, C3[A8 + 16 | 0] = I7, C3[A8 + 17 | 0] = I7 >>> 8, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 19 | 0] = I7 >>> 24;
                          break A;
                        }
                        bg(A8, 0, I7);
                      }
                      s3 = E4 + 288 | 0;
                    }
                    function J3(A8, I7, g6, C4) {
                      var B4 = 0, Q5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0, H4 = 0;
                      for (B4 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, i4[g6 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, i4[g6 + 4 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, i4[g6 + 8 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, i4[g6 + 12 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, i4[g6 + 16 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, i4[g6 + 20 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, i4[g6 + 24 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24, i4[g6 + 28 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 32 | 0] | o3[I7 + 33 | 0] << 8 | o3[I7 + 34 | 0] << 16 | o3[I7 + 35 | 0] << 24, i4[g6 + 32 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 36 | 0] | o3[I7 + 37 | 0] << 8 | o3[I7 + 38 | 0] << 16 | o3[I7 + 39 | 0] << 24, i4[g6 + 36 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 40 | 0] | o3[I7 + 41 | 0] << 8 | o3[I7 + 42 | 0] << 16 | o3[I7 + 43 | 0] << 24, i4[g6 + 40 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 44 | 0] | o3[I7 + 45 | 0] << 8 | o3[I7 + 46 | 0] << 16 | o3[I7 + 47 | 0] << 24, i4[g6 + 44 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 48 | 0] | o3[I7 + 49 | 0] << 8 | o3[I7 + 50 | 0] << 16 | o3[I7 + 51 | 0] << 24, i4[g6 + 48 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 52 | 0] | o3[I7 + 53 | 0] << 8 | o3[I7 + 54 | 0] << 16 | o3[I7 + 55 | 0] << 24, i4[g6 + 52 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, B4 = o3[I7 + 56 | 0] | o3[I7 + 57 | 0] << 8 | o3[I7 + 58 | 0] << 16 | o3[I7 + 59 | 0] << 24, i4[g6 + 56 >> 2] = B4 << 24 | (65280 & B4) << 8 | B4 >>> 8 & 65280 | B4 >>> 24, I7 = o3[I7 + 60 | 0] | o3[I7 + 61 | 0] << 8 | o3[I7 + 62 | 0] << 16 | o3[I7 + 63 | 0] << 24, i4[g6 + 60 >> 2] = I7 << 24 | (65280 & I7) << 8 | I7 >>> 8 & 65280 | I7 >>> 24, I7 = i4[A8 + 28 >> 2], i4[C4 + 24 >> 2] = i4[A8 + 24 >> 2], i4[C4 + 28 >> 2] = I7, I7 = i4[A8 + 20 >> 2], i4[C4 + 16 >> 2] = i4[A8 + 16 >> 2], i4[C4 + 20 >> 2] = I7, I7 = i4[A8 + 12 >> 2], i4[C4 + 8 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 12 >> 2] = I7, I7 = i4[A8 + 4 >> 2], i4[C4 >> 2] = i4[A8 >> 2], i4[C4 + 4 >> 2] = I7; _4 = i4[C4 + 28 >> 2], B4 = (I7 = n5 << 2) + g6 | 0, E4 = i4[C4 + 16 >> 2], c4 = i4[B4 >> 2] + (Lg(E4, 26) ^ Lg(E4, 21) ^ Lg(E4, 7)) | 0, r4 = (_4 = ((Q5 = i4[I7 + 35264 >> 2] + c4 | 0) + (E4 & ((c4 = i4[C4 + 24 >> 2]) ^ (e6 = i4[C4 + 20 >> 2])) ^ c4) | 0) + _4 | 0) + i4[C4 + 12 >> 2] | 0, i4[C4 + 12 >> 2] = r4, _4 = (s4 = _4 + (Lg(t4 = i4[C4 >> 2], 30) ^ Lg(t4, 19) ^ Lg(t4, 10)) | 0) + (t4 & ((Q5 = i4[C4 + 8 >> 2]) | (a4 = i4[C4 + 4 >> 2])) | Q5 & a4) | 0, i4[C4 + 28 >> 2] = _4, Q5 = (s4 = Q5) + (c4 = (i4[(D4 = (Q5 = 4 | I7) + g6 | 0) >> 2] + ((c4 + (e6 ^ r4 & (E4 ^ e6)) | 0) + (Lg(r4, 26) ^ Lg(r4, 21) ^ Lg(r4, 7)) | 0) | 0) + i4[Q5 + 35264 >> 2] | 0) | 0, i4[C4 + 8 >> 2] = Q5, c4 = (c4 + (_4 & (a4 | t4) | a4 & t4) | 0) + (Lg(_4, 30) ^ Lg(_4, 19) ^ Lg(_4, 10)) | 0, i4[C4 + 24 >> 2] = c4, e6 = (s4 = a4) + (a4 = (((e6 + i4[(w4 = (a4 = 8 | I7) + g6 | 0) >> 2] | 0) + i4[a4 + 35264 >> 2] | 0) + (E4 ^ Q5 & (E4 ^ r4)) | 0) + (Lg(Q5, 26) ^ Lg(Q5, 21) ^ Lg(Q5, 7)) | 0) | 0, i4[C4 + 4 >> 2] = e6, a4 = a4 + ((c4 & (_4 | t4) | _4 & t4) + (Lg(c4, 30) ^ Lg(c4, 19) ^ Lg(c4, 10)) | 0) | 0, i4[C4 + 20 >> 2] = a4, E4 = (s4 = t4) + (t4 = (((E4 + i4[(k4 = (t4 = 12 | I7) + g6 | 0) >> 2] | 0) + i4[t4 + 35264 >> 2] | 0) + (r4 ^ e6 & (Q5 ^ r4)) | 0) + (Lg(e6, 26) ^ Lg(e6, 21) ^ Lg(e6, 7)) | 0) | 0, i4[C4 >> 2] = E4, t4 = t4 + ((a4 & (_4 | c4) | _4 & c4) + (Lg(a4, 30) ^ Lg(a4, 19) ^ Lg(a4, 10)) | 0) | 0, i4[C4 + 16 >> 2] = t4, r4 = (y4 = ((((s4 = r4) + i4[(F4 = (r4 = 16 | I7) + g6 | 0) >> 2] | 0) + i4[r4 + 35264 >> 2] | 0) + (Q5 ^ E4 & (Q5 ^ e6)) | 0) + (Lg(E4, 26) ^ Lg(E4, 21) ^ Lg(E4, 7)) | 0) + ((t4 & (a4 | c4) | a4 & c4) + (Lg(t4, 30) ^ Lg(t4, 19) ^ Lg(t4, 10)) | 0) | 0, i4[C4 + 12 >> 2] = r4, y4 = _4 + y4 | 0, i4[C4 + 28 >> 2] = y4, _4 = (Q5 = (((Q5 + i4[(S4 = (_4 = 20 | I7) + g6 | 0) >> 2] | 0) + i4[_4 + 35264 >> 2] | 0) + (e6 ^ y4 & (E4 ^ e6)) | 0) + (Lg(y4, 26) ^ Lg(y4, 21) ^ Lg(y4, 7)) | 0) + ((r4 & (a4 | t4) | a4 & t4) + (Lg(r4, 30) ^ Lg(r4, 19) ^ Lg(r4, 10)) | 0) | 0, i4[C4 + 8 >> 2] = _4, Q5 = Q5 + c4 | 0, i4[C4 + 24 >> 2] = Q5, c4 = (e6 = (((e6 + i4[(N4 = (c4 = 24 | I7) + g6 | 0) >> 2] | 0) + i4[c4 + 35264 >> 2] | 0) + (E4 ^ Q5 & (E4 ^ y4)) | 0) + (Lg(Q5, 26) ^ Lg(Q5, 21) ^ Lg(Q5, 7)) | 0) + ((_4 & (t4 | r4) | t4 & r4) + (Lg(_4, 30) ^ Lg(_4, 19) ^ Lg(_4, 10)) | 0) | 0, i4[C4 + 4 >> 2] = c4, e6 = a4 + e6 | 0, i4[C4 + 20 >> 2] = e6, a4 = (E4 = (((E4 + i4[(G4 = (a4 = 28 | I7) + g6 | 0) >> 2] | 0) + i4[a4 + 35264 >> 2] | 0) + (y4 ^ e6 & (Q5 ^ y4)) | 0) + (Lg(e6, 26) ^ Lg(e6, 21) ^ Lg(e6, 7)) | 0) + ((c4 & (_4 | r4) | _4 & r4) + (Lg(c4, 30) ^ Lg(c4, 19) ^ Lg(c4, 10)) | 0) | 0, i4[C4 >> 2] = a4, E4 = E4 + t4 | 0, i4[C4 + 16 >> 2] = E4, t4 = (y4 = (((y4 + i4[(M4 = (t4 = 32 | I7) + g6 | 0) >> 2] | 0) + i4[t4 + 35264 >> 2] | 0) + (Q5 ^ E4 & (Q5 ^ e6)) | 0) + (Lg(E4, 26) ^ Lg(E4, 21) ^ Lg(E4, 7)) | 0) + ((a4 & (_4 | c4) | _4 & c4) + (Lg(a4, 30) ^ Lg(a4, 19) ^ Lg(a4, 10)) | 0) | 0, i4[C4 + 28 >> 2] = t4, y4 = r4 + y4 | 0, i4[C4 + 12 >> 2] = y4, r4 = (Q5 = (((Q5 + i4[(K4 = (r4 = 36 | I7) + g6 | 0) >> 2] | 0) + i4[r4 + 35264 >> 2] | 0) + (e6 ^ y4 & (E4 ^ e6)) | 0) + (Lg(y4, 26) ^ Lg(y4, 21) ^ Lg(y4, 7)) | 0) + ((t4 & (a4 | c4) | a4 & c4) + (Lg(t4, 30) ^ Lg(t4, 19) ^ Lg(t4, 10)) | 0) | 0, i4[C4 + 24 >> 2] = r4, Q5 = Q5 + _4 | 0, i4[C4 + 8 >> 2] = Q5, _4 = (e6 = (((e6 + i4[(U4 = (_4 = 40 | I7) + g6 | 0) >> 2] | 0) + i4[_4 + 35264 >> 2] | 0) + (E4 ^ Q5 & (E4 ^ y4)) | 0) + (Lg(Q5, 26) ^ Lg(Q5, 21) ^ Lg(Q5, 7)) | 0) + ((r4 & (a4 | t4) | a4 & t4) + (Lg(r4, 30) ^ Lg(r4, 19) ^ Lg(r4, 10)) | 0) | 0, i4[C4 + 20 >> 2] = _4, e6 = c4 + e6 | 0, i4[C4 + 4 >> 2] = e6, s4 = (c4 = 44 | I7) + g6 | 0, c4 = (E4 = ((E4 + (i4[c4 + 35264 >> 2] + i4[s4 >> 2] | 0) | 0) + (y4 ^ e6 & (Q5 ^ y4)) | 0) + (Lg(e6, 26) ^ Lg(e6, 21) ^ Lg(e6, 7)) | 0) + ((_4 & (t4 | r4) | t4 & r4) + (Lg(_4, 30) ^ Lg(_4, 19) ^ Lg(_4, 10)) | 0) | 0, i4[C4 + 16 >> 2] = c4, a4 = a4 + E4 | 0, i4[C4 >> 2] = a4, p4 = (E4 = 48 | I7) + g6 | 0, E4 = (y4 = ((y4 + (i4[E4 + 35264 >> 2] + i4[p4 >> 2] | 0) | 0) + (Q5 ^ a4 & (Q5 ^ e6)) | 0) + (Lg(a4, 26) ^ Lg(a4, 21) ^ Lg(a4, 7)) | 0) + ((c4 & (_4 | r4) | _4 & r4) + (Lg(c4, 30) ^ Lg(c4, 19) ^ Lg(c4, 10)) | 0) | 0, i4[C4 + 12 >> 2] = E4, t4 = t4 + y4 | 0, i4[C4 + 28 >> 2] = t4, f4 = (y4 = 52 | I7) + g6 | 0, Q5 = (y4 = (((i4[y4 + 35264 >> 2] + i4[f4 >> 2] | 0) + Q5 | 0) + (e6 ^ t4 & (a4 ^ e6)) | 0) + (Lg(t4, 26) ^ Lg(t4, 21) ^ Lg(t4, 7)) | 0) + ((E4 & (_4 | c4) | _4 & c4) + (Lg(E4, 30) ^ Lg(E4, 19) ^ Lg(E4, 10)) | 0) | 0, i4[C4 + 8 >> 2] = Q5, r4 = r4 + y4 | 0, i4[C4 + 24 >> 2] = r4, y4 = (h4 = 56 | I7) + g6 | 0, e6 = (h4 = (((i4[h4 + 35264 >> 2] + i4[y4 >> 2] | 0) + e6 | 0) + (a4 ^ r4 & (a4 ^ t4)) | 0) + (Lg(r4, 26) ^ Lg(r4, 21) ^ Lg(r4, 7)) | 0) + ((Q5 & (c4 | E4) | c4 & E4) + (Lg(Q5, 30) ^ Lg(Q5, 19) ^ Lg(Q5, 10)) | 0) | 0, i4[C4 + 4 >> 2] = e6, _4 = _4 + h4 | 0, i4[C4 + 20 >> 2] = _4, h4 = (I7 |= 60) + g6 | 0, _4 = (I7 = ((a4 + (i4[I7 + 35264 >> 2] + i4[h4 >> 2] | 0) | 0) + (t4 ^ _4 & (t4 ^ r4)) | 0) + (Lg(_4, 26) ^ Lg(_4, 21) ^ Lg(_4, 7)) | 0) + ((e6 & (Q5 | E4) | Q5 & E4) + (Lg(e6, 30) ^ Lg(e6, 19) ^ Lg(e6, 10)) | 0) | 0, i4[C4 >> 2] = _4, i4[C4 + 16 >> 2] = I7 + c4, 48 != (0 | n5); ) a4 = i4[K4 >> 2], n5 = n5 + 16 | 0, I7 = i4[y4 >> 2], _4 = (Q5 = i4[B4 >> 2] + (a4 + (Lg(I7, 15) ^ Lg(I7, 13) ^ I7 >>> 10) | 0) | 0) + (Lg(c4 = i4[D4 >> 2], 25) ^ Lg(c4, 14) ^ c4 >>> 3) | 0, i4[(n5 << 2) + g6 >> 2] = _4, r4 = (E4 = (Q5 = (t4 = i4[U4 >> 2]) + c4 | 0) + (Lg(c4 = i4[h4 >> 2], 15) ^ Lg(c4, 13) ^ c4 >>> 10) | 0) + (Lg(Q5 = i4[w4 >> 2], 25) ^ Lg(Q5, 14) ^ Q5 >>> 3) | 0, i4[B4 + 68 >> 2] = r4, e6 = (s4 = ((E4 = Q5) + (Q5 = i4[s4 >> 2]) | 0) + (Lg(_4, 15) ^ Lg(_4, 13) ^ _4 >>> 10) | 0) + (Lg(E4 = i4[k4 >> 2], 25) ^ Lg(E4, 14) ^ E4 >>> 3) | 0, i4[B4 + 72 >> 2] = e6, y4 = (h4 = ((s4 = E4) + (E4 = i4[p4 >> 2]) | 0) + (Lg(r4, 15) ^ Lg(r4, 13) ^ r4 >>> 10) | 0) + (Lg(s4 = i4[F4 >> 2], 25) ^ Lg(s4, 14) ^ s4 >>> 3) | 0, i4[B4 + 76 >> 2] = y4, p4 = (h4 = ((h4 = s4) + (s4 = i4[f4 >> 2]) | 0) + (Lg(e6, 15) ^ Lg(e6, 13) ^ e6 >>> 10) | 0) + (Lg(f4 = i4[S4 >> 2], 25) ^ Lg(f4, 14) ^ f4 >>> 3) | 0, i4[B4 + 80 >> 2] = p4, f4 = (D4 = (I7 + f4 | 0) + (Lg(y4, 15) ^ Lg(y4, 13) ^ y4 >>> 10) | 0) + (Lg(h4 = i4[N4 >> 2], 25) ^ Lg(h4, 14) ^ h4 >>> 3) | 0, i4[B4 + 84 >> 2] = f4, h4 = ((c4 + h4 | 0) + (Lg(w4 = i4[G4 >> 2], 25) ^ Lg(w4, 14) ^ w4 >>> 3) | 0) + (Lg(p4, 15) ^ Lg(p4, 13) ^ p4 >>> 10) | 0, i4[B4 + 88 >> 2] = h4, r4 = ((D4 = i4[M4 >> 2]) + (r4 + (Lg(a4, 25) ^ Lg(a4, 14) ^ a4 >>> 3) | 0) | 0) + (Lg(h4, 15) ^ Lg(h4, 13) ^ h4 >>> 10) | 0, i4[B4 + 96 >> 2] = r4, D4 = ((_4 + w4 | 0) + (Lg(D4, 25) ^ Lg(D4, 14) ^ D4 >>> 3) | 0) + (Lg(f4, 15) ^ Lg(f4, 13) ^ f4 >>> 10) | 0, i4[B4 + 92 >> 2] = D4, y4 = (y4 + (t4 + (Lg(Q5, 25) ^ Lg(Q5, 14) ^ Q5 >>> 3) | 0) | 0) + (Lg(r4, 15) ^ Lg(r4, 13) ^ r4 >>> 10) | 0, i4[B4 + 104 >> 2] = y4, a4 = (e6 + (a4 + (Lg(t4, 25) ^ Lg(t4, 14) ^ t4 >>> 3) | 0) | 0) + (Lg(D4, 15) ^ Lg(D4, 13) ^ D4 >>> 10) | 0, i4[B4 + 100 >> 2] = a4, t4 = (f4 + (E4 + (Lg(s4, 25) ^ Lg(s4, 14) ^ s4 >>> 3) | 0) | 0) + (Lg(y4, 15) ^ Lg(y4, 13) ^ y4 >>> 10) | 0, i4[B4 + 112 >> 2] = t4, a4 = (p4 + (Q5 + (Lg(E4, 25) ^ Lg(E4, 14) ^ E4 >>> 3) | 0) | 0) + (Lg(a4, 15) ^ Lg(a4, 13) ^ a4 >>> 10) | 0, i4[B4 + 108 >> 2] = a4, b5 = B4, H4 = (D4 + (I7 + (Lg(c4, 25) ^ Lg(c4, 14) ^ c4 >>> 3) | 0) | 0) + (Lg(t4, 15) ^ Lg(t4, 13) ^ t4 >>> 10) | 0, i4[b5 + 120 >> 2] = H4, I7 = (h4 + (s4 + (Lg(I7, 25) ^ Lg(I7, 14) ^ I7 >>> 3) | 0) | 0) + (Lg(a4, 15) ^ Lg(a4, 13) ^ a4 >>> 10) | 0, i4[B4 + 116 >> 2] = I7, b5 = B4, H4 = (r4 + (c4 + (Lg(_4, 25) ^ Lg(_4, 14) ^ _4 >>> 3) | 0) | 0) + (Lg(I7, 15) ^ Lg(I7, 13) ^ I7 >>> 10) | 0, i4[b5 + 124 >> 2] = H4;
                      i4[A8 >> 2] = _4 + i4[A8 >> 2], i4[A8 + 4 >> 2] = i4[A8 + 4 >> 2] + i4[C4 + 4 >> 2], i4[A8 + 8 >> 2] = i4[A8 + 8 >> 2] + i4[C4 + 8 >> 2], i4[A8 + 12 >> 2] = i4[A8 + 12 >> 2] + i4[C4 + 12 >> 2], i4[A8 + 16 >> 2] = i4[A8 + 16 >> 2] + i4[C4 + 16 >> 2], i4[A8 + 20 >> 2] = i4[A8 + 20 >> 2] + i4[C4 + 20 >> 2], i4[A8 + 24 >> 2] = i4[A8 + 24 >> 2] + i4[C4 + 24 >> 2], i4[A8 + 28 >> 2] = i4[A8 + 28 >> 2] + i4[C4 + 28 >> 2];
                    }
                    function d4(A8, I7, g6) {
                      var B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, f4, p4, w4, n5, k4, F4, S4, N4, G4, M4, K4, U4 = 0, b5 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0;
                      s3 = B4 = s3 - 288 | 0, t4 = o3[g6 + 16 | 0] | o3[g6 + 17 | 0] << 8 | o3[g6 + 18 | 0] << 16 | o3[g6 + 19 | 0] << 24, r4 = o3[g6 + 48 | 0] | o3[g6 + 49 | 0] << 8 | o3[g6 + 50 | 0] << 16 | o3[g6 + 51 | 0] << 24, e6 = o3[g6 + 20 | 0] | o3[g6 + 21 | 0] << 8 | o3[g6 + 22 | 0] << 16 | o3[g6 + 23 | 0] << 24, y4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, h4 = o3[g6 + 52 | 0] | o3[g6 + 53 | 0] << 8 | o3[g6 + 54 | 0] << 16 | o3[g6 + 55 | 0] << 24, D4 = o3[g6 + 24 | 0] | o3[g6 + 25 | 0] << 8 | o3[g6 + 26 | 0] << 16 | o3[g6 + 27 | 0] << 24, f4 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, p4 = o3[g6 + 56 | 0] | o3[g6 + 57 | 0] << 8 | o3[g6 + 58 | 0] << 16 | o3[g6 + 59 | 0] << 24, J4 = o3[g6 + 28 | 0] | o3[g6 + 29 | 0] << 8 | o3[g6 + 30 | 0] << 16 | o3[g6 + 31 | 0] << 24, w4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, n5 = o3[g6 + 60 | 0] | o3[g6 + 61 | 0] << 8 | o3[g6 + 62 | 0] << 16 | o3[g6 + 63 | 0] << 24, b5 = o3[g6 + 32 | 0] | o3[g6 + 33 | 0] << 8 | o3[g6 + 34 | 0] << 16 | o3[g6 + 35 | 0] << 24, d5 = o3[g6 + 80 | 0] | o3[g6 + 81 | 0] << 8 | o3[g6 + 82 | 0] << 16 | o3[g6 + 83 | 0] << 24, k4 = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, F4 = o3[g6 + 112 | 0] | o3[g6 + 113 | 0] << 8 | o3[g6 + 114 | 0] << 16 | o3[g6 + 115 | 0] << 24, U4 = o3[g6 + 96 | 0] | o3[g6 + 97 | 0] << 8 | o3[g6 + 98 | 0] << 16 | o3[g6 + 99 | 0] << 24, H4 = o3[g6 + 36 | 0] | o3[g6 + 37 | 0] << 8 | o3[g6 + 38 | 0] << 16 | o3[g6 + 39 | 0] << 24, m4 = o3[g6 + 84 | 0] | o3[g6 + 85 | 0] << 8 | o3[g6 + 86 | 0] << 16 | o3[g6 + 87 | 0] << 24, S4 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, N4 = o3[g6 + 116 | 0] | o3[g6 + 117 | 0] << 8 | o3[g6 + 118 | 0] << 16 | o3[g6 + 119 | 0] << 24, E4 = o3[g6 + 100 | 0] | o3[g6 + 101 | 0] << 8 | o3[g6 + 102 | 0] << 16 | o3[g6 + 103 | 0] << 24, Y4 = o3[g6 + 40 | 0] | o3[g6 + 41 | 0] << 8 | o3[g6 + 42 | 0] << 16 | o3[g6 + 43 | 0] << 24, l4 = o3[g6 + 88 | 0] | o3[g6 + 89 | 0] << 8 | o3[g6 + 90 | 0] << 16 | o3[g6 + 91 | 0] << 24, G4 = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, M4 = o3[g6 + 120 | 0] | o3[g6 + 121 | 0] << 8 | o3[g6 + 122 | 0] << 16 | o3[g6 + 123 | 0] << 24, a4 = o3[g6 + 104 | 0] | o3[g6 + 105 | 0] << 8 | o3[g6 + 106 | 0] << 16 | o3[g6 + 107 | 0] << 24, K4 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, Q5 = (_4 = o3[g6 + 44 | 0] | o3[g6 + 45 | 0] << 8 | o3[g6 + 46 | 0] << 16 | o3[g6 + 47 | 0] << 24) ^ (c4 = o3[g6 + 108 | 0] | o3[g6 + 109 | 0] << 8 | o3[g6 + 110 | 0] << 16 | o3[g6 + 111 | 0] << 24) & (o3[g6 + 124 | 0] | o3[g6 + 125 | 0] << 8 | o3[g6 + 126 | 0] << 16 | o3[g6 + 127 | 0] << 24) ^ (o3[g6 + 92 | 0] | o3[g6 + 93 | 0] << 8 | o3[g6 + 94 | 0] << 16 | o3[g6 + 95 | 0] << 24) ^ (o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24), C3[A8 + 28 | 0] = Q5, C3[A8 + 29 | 0] = Q5 >>> 8, C3[A8 + 30 | 0] = Q5 >>> 16, C3[A8 + 31 | 0] = Q5 >>> 24, l4 = Y4 ^ a4 & M4 ^ l4 ^ G4, C3[A8 + 24 | 0] = l4, C3[A8 + 25 | 0] = l4 >>> 8, C3[A8 + 26 | 0] = l4 >>> 16, C3[A8 + 27 | 0] = l4 >>> 24, m4 = H4 ^ E4 & N4 ^ m4 ^ S4, C3[A8 + 20 | 0] = m4, C3[A8 + 21 | 0] = m4 >>> 8, C3[A8 + 22 | 0] = m4 >>> 16, C3[A8 + 23 | 0] = m4 >>> 24, d5 = b5 ^ U4 & F4 ^ d5 ^ k4, C3[A8 + 16 | 0] = d5, C3[A8 + 17 | 0] = d5 >>> 8, C3[A8 + 18 | 0] = d5 >>> 16, C3[A8 + 19 | 0] = d5 >>> 24, J4 = n5 & _4 ^ J4 ^ w4 ^ c4, C3[A8 + 12 | 0] = J4, C3[A8 + 13 | 0] = J4 >>> 8, C3[A8 + 14 | 0] = J4 >>> 16, C3[A8 + 15 | 0] = J4 >>> 24, Y4 = Y4 & p4 ^ D4 ^ f4 ^ a4, C3[A8 + 8 | 0] = Y4, C3[A8 + 9 | 0] = Y4 >>> 8, C3[A8 + 10 | 0] = Y4 >>> 16, C3[A8 + 11 | 0] = Y4 >>> 24, H4 = H4 & h4 ^ e6 ^ y4 ^ E4, C3[A8 + 4 | 0] = H4, C3[A8 + 5 | 0] = H4 >>> 8, C3[A8 + 6 | 0] = H4 >>> 16, C3[A8 + 7 | 0] = H4 >>> 24, b5 = U4 ^ b5 & r4 ^ t4 ^ K4, C3[0 | A8] = b5, C3[A8 + 1 | 0] = b5 >>> 8, C3[A8 + 2 | 0] = b5 >>> 16, C3[A8 + 3 | 0] = b5 >>> 24, A8 = i4[g6 + 124 >> 2], i4[B4 + 280 >> 2] = i4[g6 + 120 >> 2], i4[B4 + 284 >> 2] = A8, A8 = i4[g6 + 116 >> 2], i4[B4 + 272 >> 2] = i4[g6 + 112 >> 2], i4[B4 + 276 >> 2] = A8, A8 = i4[g6 + 108 >> 2], i4[B4 + 248 >> 2] = i4[g6 + 104 >> 2], i4[B4 + 252 >> 2] = A8, A8 = i4[g6 + 100 >> 2], i4[B4 + 240 >> 2] = i4[g6 + 96 >> 2], i4[B4 + 244 >> 2] = A8, A8 = i4[g6 + 124 >> 2], i4[B4 + 232 >> 2] = i4[g6 + 120 >> 2], i4[B4 + 236 >> 2] = A8, A8 = i4[g6 + 116 >> 2], i4[B4 + 224 >> 2] = i4[g6 + 112 >> 2], i4[B4 + 228 >> 2] = A8, AI(I7 = B4 + 256 | 0, B4 + 240 | 0, B4 + 224 | 0), A8 = i4[B4 + 268 >> 2], i4[g6 + 120 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 124 >> 2] = A8, A8 = i4[B4 + 260 >> 2], i4[g6 + 112 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 116 >> 2] = A8, A8 = i4[g6 + 92 >> 2], i4[B4 + 216 >> 2] = i4[g6 + 88 >> 2], i4[B4 + 220 >> 2] = A8, A8 = i4[g6 + 84 >> 2], i4[B4 + 208 >> 2] = i4[g6 + 80 >> 2], i4[B4 + 212 >> 2] = A8, A8 = i4[g6 + 108 >> 2], i4[B4 + 200 >> 2] = i4[g6 + 104 >> 2], i4[B4 + 204 >> 2] = A8, A8 = i4[g6 + 100 >> 2], i4[B4 + 192 >> 2] = i4[g6 + 96 >> 2], i4[B4 + 196 >> 2] = A8, AI(I7, B4 + 208 | 0, B4 + 192 | 0), A8 = i4[B4 + 268 >> 2], i4[g6 + 104 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 108 >> 2] = A8, A8 = i4[B4 + 260 >> 2], i4[g6 + 96 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 100 >> 2] = A8, A8 = i4[g6 + 76 >> 2], i4[B4 + 184 >> 2] = i4[g6 + 72 >> 2], i4[B4 + 188 >> 2] = A8, U4 = i4[4 + (A8 = g6 - -64 | 0) >> 2], i4[B4 + 176 >> 2] = i4[A8 >> 2], i4[B4 + 180 >> 2] = U4, U4 = i4[g6 + 92 >> 2], i4[B4 + 168 >> 2] = i4[g6 + 88 >> 2], i4[B4 + 172 >> 2] = U4, U4 = i4[g6 + 84 >> 2], i4[B4 + 160 >> 2] = i4[g6 + 80 >> 2], i4[B4 + 164 >> 2] = U4, AI(I7, B4 + 176 | 0, B4 + 160 | 0), U4 = i4[B4 + 268 >> 2], i4[g6 + 88 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 92 >> 2] = U4, U4 = i4[B4 + 260 >> 2], i4[g6 + 80 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 84 >> 2] = U4, U4 = i4[g6 + 60 >> 2], i4[B4 + 152 >> 2] = i4[g6 + 56 >> 2], i4[B4 + 156 >> 2] = U4, U4 = i4[g6 + 52 >> 2], i4[B4 + 144 >> 2] = i4[g6 + 48 >> 2], i4[B4 + 148 >> 2] = U4, U4 = i4[g6 + 76 >> 2], i4[B4 + 136 >> 2] = i4[g6 + 72 >> 2], i4[B4 + 140 >> 2] = U4, U4 = i4[A8 + 4 >> 2], i4[B4 + 128 >> 2] = i4[A8 >> 2], i4[B4 + 132 >> 2] = U4, AI(I7, B4 + 144 | 0, B4 + 128 | 0), U4 = i4[B4 + 268 >> 2], i4[g6 + 72 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 76 >> 2] = U4, U4 = i4[B4 + 260 >> 2], i4[A8 >> 2] = i4[B4 + 256 >> 2], i4[A8 + 4 >> 2] = U4, U4 = i4[g6 + 44 >> 2], i4[B4 + 120 >> 2] = i4[g6 + 40 >> 2], i4[B4 + 124 >> 2] = U4, U4 = i4[g6 + 36 >> 2], i4[B4 + 112 >> 2] = i4[g6 + 32 >> 2], i4[B4 + 116 >> 2] = U4, U4 = i4[g6 + 60 >> 2], i4[B4 + 104 >> 2] = i4[g6 + 56 >> 2], i4[B4 + 108 >> 2] = U4, U4 = i4[g6 + 52 >> 2], i4[B4 + 96 >> 2] = i4[g6 + 48 >> 2], i4[B4 + 100 >> 2] = U4, AI(I7, B4 + 112 | 0, B4 + 96 | 0), U4 = i4[B4 + 268 >> 2], i4[g6 + 56 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 60 >> 2] = U4, U4 = i4[B4 + 260 >> 2], i4[g6 + 48 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 52 >> 2] = U4, U4 = i4[g6 + 28 >> 2], i4[B4 + 88 >> 2] = i4[g6 + 24 >> 2], i4[B4 + 92 >> 2] = U4, U4 = i4[g6 + 20 >> 2], i4[B4 + 80 >> 2] = i4[g6 + 16 >> 2], i4[B4 + 84 >> 2] = U4, U4 = i4[g6 + 44 >> 2], i4[B4 + 72 >> 2] = i4[g6 + 40 >> 2], i4[B4 + 76 >> 2] = U4, U4 = i4[g6 + 36 >> 2], i4[B4 + 64 >> 2] = i4[g6 + 32 >> 2], i4[B4 + 68 >> 2] = U4, AI(I7, B4 + 80 | 0, B4 - -64 | 0), U4 = i4[B4 + 268 >> 2], i4[g6 + 40 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 44 >> 2] = U4, U4 = i4[B4 + 260 >> 2], i4[g6 + 32 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 36 >> 2] = U4, U4 = i4[g6 + 12 >> 2], i4[B4 + 56 >> 2] = i4[g6 + 8 >> 2], i4[B4 + 60 >> 2] = U4, U4 = i4[g6 + 4 >> 2], i4[B4 + 48 >> 2] = i4[g6 >> 2], i4[B4 + 52 >> 2] = U4, U4 = i4[g6 + 28 >> 2], i4[B4 + 40 >> 2] = i4[g6 + 24 >> 2], i4[B4 + 44 >> 2] = U4, U4 = i4[g6 + 20 >> 2], i4[B4 + 32 >> 2] = i4[g6 + 16 >> 2], i4[B4 + 36 >> 2] = U4, AI(I7, B4 + 48 | 0, B4 + 32 | 0), U4 = i4[B4 + 268 >> 2], i4[g6 + 24 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 28 >> 2] = U4, U4 = i4[B4 + 260 >> 2], i4[g6 + 16 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 20 >> 2] = U4, U4 = i4[B4 + 284 >> 2], i4[B4 + 24 >> 2] = i4[B4 + 280 >> 2], i4[B4 + 28 >> 2] = U4, U4 = i4[B4 + 276 >> 2], i4[B4 + 16 >> 2] = i4[B4 + 272 >> 2], i4[B4 + 20 >> 2] = U4, U4 = i4[g6 + 12 >> 2], i4[B4 + 8 >> 2] = i4[g6 + 8 >> 2], i4[B4 + 12 >> 2] = U4, U4 = i4[g6 + 4 >> 2], i4[B4 >> 2] = i4[g6 >> 2], i4[B4 + 4 >> 2] = U4, AI(I7, B4 + 16 | 0, B4), I7 = i4[B4 + 268 >> 2], i4[g6 + 8 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 12 >> 2] = I7, I7 = i4[B4 + 260 >> 2], i4[g6 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 4 >> 2] = I7, i4[g6 + 12 >> 2] = J4 ^ (o3[g6 + 12 | 0] | o3[g6 + 13 | 0] << 8 | o3[g6 + 14 | 0] << 16 | o3[g6 + 15 | 0] << 24), i4[g6 + 8 >> 2] = Y4 ^ (o3[g6 + 8 | 0] | o3[g6 + 9 | 0] << 8 | o3[g6 + 10 | 0] << 16 | o3[g6 + 11 | 0] << 24), i4[g6 + 4 >> 2] = H4 ^ (o3[g6 + 4 | 0] | o3[g6 + 5 | 0] << 8 | o3[g6 + 6 | 0] << 16 | o3[g6 + 7 | 0] << 24), i4[g6 >> 2] = b5 ^ (o3[0 | g6] | o3[g6 + 1 | 0] << 8 | o3[g6 + 2 | 0] << 16 | o3[g6 + 3 | 0] << 24), i4[A8 >> 2] = d5 ^ (o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24), i4[g6 + 68 >> 2] = m4 ^ (o3[g6 + 68 | 0] | o3[g6 + 69 | 0] << 8 | o3[g6 + 70 | 0] << 16 | o3[g6 + 71 | 0] << 24), i4[g6 + 72 >> 2] = l4 ^ (o3[g6 + 72 | 0] | o3[g6 + 73 | 0] << 8 | o3[g6 + 74 | 0] << 16 | o3[g6 + 75 | 0] << 24), i4[g6 + 76 >> 2] = Q5 ^ (o3[g6 + 76 | 0] | o3[g6 + 77 | 0] << 8 | o3[g6 + 78 | 0] << 16 | o3[g6 + 79 | 0] << 24), s3 = B4 + 288 | 0;
                    }
                    function m3(A8, I7, g6) {
                      var B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, f4, p4, w4, n5, k4, F4, S4, N4, G4, M4, K4, U4, b5, H4, Y4, J4, d5, m4, l4 = 0;
                      s3 = B4 = s3 - 288 | 0, k4 = o3[g6 + 16 | 0] | o3[g6 + 17 | 0] << 8 | o3[g6 + 18 | 0] << 16 | o3[g6 + 19 | 0] << 24, F4 = o3[g6 + 48 | 0] | o3[g6 + 49 | 0] << 8 | o3[g6 + 50 | 0] << 16 | o3[g6 + 51 | 0] << 24, Q5 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, S4 = o3[g6 + 20 | 0] | o3[g6 + 21 | 0] << 8 | o3[g6 + 22 | 0] << 16 | o3[g6 + 23 | 0] << 24, N4 = o3[g6 + 52 | 0] | o3[g6 + 53 | 0] << 8 | o3[g6 + 54 | 0] << 16 | o3[g6 + 55 | 0] << 24, E4 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, G4 = o3[g6 + 24 | 0] | o3[g6 + 25 | 0] << 8 | o3[g6 + 26 | 0] << 16 | o3[g6 + 27 | 0] << 24, M4 = o3[g6 + 56 | 0] | o3[g6 + 57 | 0] << 8 | o3[g6 + 58 | 0] << 16 | o3[g6 + 59 | 0] << 24, a4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, K4 = o3[g6 + 28 | 0] | o3[g6 + 29 | 0] << 8 | o3[g6 + 30 | 0] << 16 | o3[g6 + 31 | 0] << 24, U4 = o3[g6 + 60 | 0] | o3[g6 + 61 | 0] << 8 | o3[g6 + 62 | 0] << 16 | o3[g6 + 63 | 0] << 24, l4 = o3[g6 + 32 | 0] | o3[g6 + 33 | 0] << 8 | o3[g6 + 34 | 0] << 16 | o3[g6 + 35 | 0] << 24, _4 = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, b5 = o3[g6 + 80 | 0] | o3[g6 + 81 | 0] << 8 | o3[g6 + 82 | 0] << 16 | o3[g6 + 83 | 0] << 24, H4 = o3[g6 + 112 | 0] | o3[g6 + 113 | 0] << 8 | o3[g6 + 114 | 0] << 16 | o3[g6 + 115 | 0] << 24, c4 = o3[g6 + 96 | 0] | o3[g6 + 97 | 0] << 8 | o3[g6 + 98 | 0] << 16 | o3[g6 + 99 | 0] << 24, t4 = o3[g6 + 36 | 0] | o3[g6 + 37 | 0] << 8 | o3[g6 + 38 | 0] << 16 | o3[g6 + 39 | 0] << 24, r4 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, Y4 = o3[g6 + 84 | 0] | o3[g6 + 85 | 0] << 8 | o3[g6 + 86 | 0] << 16 | o3[g6 + 87 | 0] << 24, J4 = o3[g6 + 116 | 0] | o3[g6 + 117 | 0] << 8 | o3[g6 + 118 | 0] << 16 | o3[g6 + 119 | 0] << 24, e6 = o3[g6 + 100 | 0] | o3[g6 + 101 | 0] << 8 | o3[g6 + 102 | 0] << 16 | o3[g6 + 103 | 0] << 24, y4 = o3[g6 + 40 | 0] | o3[g6 + 41 | 0] << 8 | o3[g6 + 42 | 0] << 16 | o3[g6 + 43 | 0] << 24, h4 = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, d5 = o3[g6 + 88 | 0] | o3[g6 + 89 | 0] << 8 | o3[g6 + 90 | 0] << 16 | o3[g6 + 91 | 0] << 24, m4 = o3[g6 + 120 | 0] | o3[g6 + 121 | 0] << 8 | o3[g6 + 122 | 0] << 16 | o3[g6 + 123 | 0] << 24, D4 = o3[g6 + 104 | 0] | o3[g6 + 105 | 0] << 8 | o3[g6 + 106 | 0] << 16 | o3[g6 + 107 | 0] << 24, f4 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, I7 = (p4 = o3[g6 + 44 | 0] | o3[g6 + 45 | 0] << 8 | o3[g6 + 46 | 0] << 16 | o3[g6 + 47 | 0] << 24) ^ (w4 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24) ^ (n5 = o3[g6 + 108 | 0] | o3[g6 + 109 | 0] << 8 | o3[g6 + 110 | 0] << 16 | o3[g6 + 111 | 0] << 24) & (o3[g6 + 124 | 0] | o3[g6 + 125 | 0] << 8 | o3[g6 + 126 | 0] << 16 | o3[g6 + 127 | 0] << 24) ^ (o3[g6 + 92 | 0] | o3[g6 + 93 | 0] << 8 | o3[g6 + 94 | 0] << 16 | o3[g6 + 95 | 0] << 24), C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = D4 & m4 ^ d5 ^ h4 ^ y4, C3[A8 + 24 | 0] = I7, C3[A8 + 25 | 0] = I7 >>> 8, C3[A8 + 26 | 0] = I7 >>> 16, C3[A8 + 27 | 0] = I7 >>> 24, I7 = e6 & J4 ^ Y4 ^ r4 ^ t4, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = l4 ^ c4 & H4 ^ b5 ^ _4, C3[A8 + 16 | 0] = I7, C3[A8 + 17 | 0] = I7 >>> 8, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 19 | 0] = I7 >>> 24, I7 = U4 & p4 ^ K4 ^ a4 ^ n5, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = y4 & M4 ^ G4 ^ E4 ^ D4, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = t4 & N4 ^ S4 ^ Q5 ^ e6, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = l4 & F4 ^ k4 ^ f4 ^ c4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24, A8 = i4[g6 + 124 >> 2], i4[B4 + 280 >> 2] = i4[g6 + 120 >> 2], i4[B4 + 284 >> 2] = A8, A8 = i4[g6 + 116 >> 2], i4[B4 + 272 >> 2] = i4[g6 + 112 >> 2], i4[B4 + 276 >> 2] = A8, A8 = i4[g6 + 108 >> 2], i4[B4 + 248 >> 2] = i4[g6 + 104 >> 2], i4[B4 + 252 >> 2] = A8, A8 = i4[g6 + 100 >> 2], i4[B4 + 240 >> 2] = i4[g6 + 96 >> 2], i4[B4 + 244 >> 2] = A8, A8 = i4[g6 + 124 >> 2], i4[B4 + 232 >> 2] = i4[g6 + 120 >> 2], i4[B4 + 236 >> 2] = A8, A8 = i4[g6 + 116 >> 2], i4[B4 + 224 >> 2] = i4[g6 + 112 >> 2], i4[B4 + 228 >> 2] = A8, AI(I7 = B4 + 256 | 0, B4 + 240 | 0, B4 + 224 | 0), A8 = i4[B4 + 268 >> 2], i4[g6 + 120 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 124 >> 2] = A8, A8 = i4[B4 + 260 >> 2], i4[g6 + 112 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 116 >> 2] = A8, A8 = i4[g6 + 92 >> 2], i4[B4 + 216 >> 2] = i4[g6 + 88 >> 2], i4[B4 + 220 >> 2] = A8, A8 = i4[g6 + 84 >> 2], i4[B4 + 208 >> 2] = i4[g6 + 80 >> 2], i4[B4 + 212 >> 2] = A8, A8 = i4[g6 + 108 >> 2], i4[B4 + 200 >> 2] = i4[g6 + 104 >> 2], i4[B4 + 204 >> 2] = A8, A8 = i4[g6 + 100 >> 2], i4[B4 + 192 >> 2] = i4[g6 + 96 >> 2], i4[B4 + 196 >> 2] = A8, AI(I7, B4 + 208 | 0, B4 + 192 | 0), A8 = i4[B4 + 268 >> 2], i4[g6 + 104 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 108 >> 2] = A8, A8 = i4[B4 + 260 >> 2], i4[g6 + 96 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 100 >> 2] = A8, A8 = i4[g6 + 76 >> 2], i4[B4 + 184 >> 2] = i4[g6 + 72 >> 2], i4[B4 + 188 >> 2] = A8, l4 = i4[4 + (A8 = g6 - -64 | 0) >> 2], i4[B4 + 176 >> 2] = i4[A8 >> 2], i4[B4 + 180 >> 2] = l4, l4 = i4[g6 + 92 >> 2], i4[B4 + 168 >> 2] = i4[g6 + 88 >> 2], i4[B4 + 172 >> 2] = l4, l4 = i4[g6 + 84 >> 2], i4[B4 + 160 >> 2] = i4[g6 + 80 >> 2], i4[B4 + 164 >> 2] = l4, AI(I7, B4 + 176 | 0, B4 + 160 | 0), l4 = i4[B4 + 268 >> 2], i4[g6 + 88 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 92 >> 2] = l4, l4 = i4[B4 + 260 >> 2], i4[g6 + 80 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 84 >> 2] = l4, l4 = i4[g6 + 60 >> 2], i4[B4 + 152 >> 2] = i4[g6 + 56 >> 2], i4[B4 + 156 >> 2] = l4, l4 = i4[g6 + 52 >> 2], i4[B4 + 144 >> 2] = i4[g6 + 48 >> 2], i4[B4 + 148 >> 2] = l4, l4 = i4[g6 + 76 >> 2], i4[B4 + 136 >> 2] = i4[g6 + 72 >> 2], i4[B4 + 140 >> 2] = l4, l4 = i4[A8 + 4 >> 2], i4[B4 + 128 >> 2] = i4[A8 >> 2], i4[B4 + 132 >> 2] = l4, AI(I7, B4 + 144 | 0, B4 + 128 | 0), l4 = i4[B4 + 268 >> 2], i4[g6 + 72 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 76 >> 2] = l4, l4 = i4[B4 + 260 >> 2], i4[A8 >> 2] = i4[B4 + 256 >> 2], i4[A8 + 4 >> 2] = l4, l4 = i4[g6 + 44 >> 2], i4[B4 + 120 >> 2] = i4[g6 + 40 >> 2], i4[B4 + 124 >> 2] = l4, l4 = i4[g6 + 36 >> 2], i4[B4 + 112 >> 2] = i4[g6 + 32 >> 2], i4[B4 + 116 >> 2] = l4, l4 = i4[g6 + 60 >> 2], i4[B4 + 104 >> 2] = i4[g6 + 56 >> 2], i4[B4 + 108 >> 2] = l4, l4 = i4[g6 + 52 >> 2], i4[B4 + 96 >> 2] = i4[g6 + 48 >> 2], i4[B4 + 100 >> 2] = l4, AI(I7, B4 + 112 | 0, B4 + 96 | 0), l4 = i4[B4 + 268 >> 2], i4[g6 + 56 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 60 >> 2] = l4, l4 = i4[B4 + 260 >> 2], i4[g6 + 48 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 52 >> 2] = l4, l4 = i4[g6 + 28 >> 2], i4[B4 + 88 >> 2] = i4[g6 + 24 >> 2], i4[B4 + 92 >> 2] = l4, l4 = i4[g6 + 20 >> 2], i4[B4 + 80 >> 2] = i4[g6 + 16 >> 2], i4[B4 + 84 >> 2] = l4, l4 = i4[g6 + 44 >> 2], i4[B4 + 72 >> 2] = i4[g6 + 40 >> 2], i4[B4 + 76 >> 2] = l4, l4 = i4[g6 + 36 >> 2], i4[B4 + 64 >> 2] = i4[g6 + 32 >> 2], i4[B4 + 68 >> 2] = l4, AI(I7, B4 + 80 | 0, B4 - -64 | 0), l4 = i4[B4 + 268 >> 2], i4[g6 + 40 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 44 >> 2] = l4, l4 = i4[B4 + 260 >> 2], i4[g6 + 32 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 36 >> 2] = l4, l4 = i4[g6 + 12 >> 2], i4[B4 + 56 >> 2] = i4[g6 + 8 >> 2], i4[B4 + 60 >> 2] = l4, l4 = i4[g6 + 4 >> 2], i4[B4 + 48 >> 2] = i4[g6 >> 2], i4[B4 + 52 >> 2] = l4, l4 = i4[g6 + 28 >> 2], i4[B4 + 40 >> 2] = i4[g6 + 24 >> 2], i4[B4 + 44 >> 2] = l4, l4 = i4[g6 + 20 >> 2], i4[B4 + 32 >> 2] = i4[g6 + 16 >> 2], i4[B4 + 36 >> 2] = l4, AI(I7, B4 + 48 | 0, B4 + 32 | 0), l4 = i4[B4 + 268 >> 2], i4[g6 + 24 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 28 >> 2] = l4, l4 = i4[B4 + 260 >> 2], i4[g6 + 16 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 20 >> 2] = l4, l4 = i4[B4 + 284 >> 2], i4[B4 + 24 >> 2] = i4[B4 + 280 >> 2], i4[B4 + 28 >> 2] = l4, l4 = i4[B4 + 276 >> 2], i4[B4 + 16 >> 2] = i4[B4 + 272 >> 2], i4[B4 + 20 >> 2] = l4, l4 = i4[g6 + 12 >> 2], i4[B4 + 8 >> 2] = i4[g6 + 8 >> 2], i4[B4 + 12 >> 2] = l4, l4 = i4[g6 + 4 >> 2], i4[B4 >> 2] = i4[g6 >> 2], i4[B4 + 4 >> 2] = l4, AI(I7, B4 + 16 | 0, B4), I7 = i4[B4 + 268 >> 2], i4[g6 + 8 >> 2] = i4[B4 + 264 >> 2], i4[g6 + 12 >> 2] = I7, I7 = i4[B4 + 260 >> 2], i4[g6 >> 2] = i4[B4 + 256 >> 2], i4[g6 + 4 >> 2] = I7, i4[g6 + 12 >> 2] = (o3[g6 + 12 | 0] | o3[g6 + 13 | 0] << 8 | o3[g6 + 14 | 0] << 16 | o3[g6 + 15 | 0] << 24) ^ a4, i4[g6 + 8 >> 2] = (o3[g6 + 8 | 0] | o3[g6 + 9 | 0] << 8 | o3[g6 + 10 | 0] << 16 | o3[g6 + 11 | 0] << 24) ^ E4, i4[g6 + 4 >> 2] = (o3[g6 + 4 | 0] | o3[g6 + 5 | 0] << 8 | o3[g6 + 6 | 0] << 16 | o3[g6 + 7 | 0] << 24) ^ Q5, i4[g6 >> 2] = (o3[0 | g6] | o3[g6 + 1 | 0] << 8 | o3[g6 + 2 | 0] << 16 | o3[g6 + 3 | 0] << 24) ^ f4, i4[A8 >> 2] = (o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24) ^ _4, i4[g6 + 68 >> 2] = (o3[g6 + 68 | 0] | o3[g6 + 69 | 0] << 8 | o3[g6 + 70 | 0] << 16 | o3[g6 + 71 | 0] << 24) ^ r4, i4[g6 + 72 >> 2] = (o3[g6 + 72 | 0] | o3[g6 + 73 | 0] << 8 | o3[g6 + 74 | 0] << 16 | o3[g6 + 75 | 0] << 24) ^ h4, i4[g6 + 76 >> 2] = w4 ^ (o3[g6 + 76 | 0] | o3[g6 + 77 | 0] << 8 | o3[g6 + 78 | 0] << 16 | o3[g6 + 79 | 0] << 24), s3 = B4 + 288 | 0;
                    }
                    function l3(A8, I7, g6, B4, Q5) {
                      var E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0;
                      for (s3 = E4 = s3 - 224 | 0, f4 = (o3[Q5 + 60 | 0] | o3[Q5 + 61 | 0] << 8 | o3[Q5 + 62 | 0] << 16 | o3[Q5 + 63 | 0] << 24) ^ B4 >>> 29, p4 = (o3[Q5 + 56 | 0] | o3[Q5 + 57 | 0] << 8 | o3[Q5 + 58 | 0] << 16 | o3[Q5 + 59 | 0] << 24) ^ B4 << 3, e6 = (o3[Q5 + 52 | 0] | o3[Q5 + 53 | 0] << 8 | o3[Q5 + 54 | 0] << 16 | o3[Q5 + 55 | 0] << 24) ^ g6 >>> 29, h4 = (o3[0 | (a4 = Q5 + 48 | 0)] | o3[a4 + 1 | 0] << 8 | o3[a4 + 2 | 0] << 16 | o3[a4 + 3 | 0] << 24) ^ g6 << 3, _4 = Q5 + 16 | 0, c4 = Q5 + 32 | 0, t4 = Q5 - -64 | 0, r4 = Q5 + 80 | 0; g6 = i4[r4 + 12 >> 2], i4[E4 + 216 >> 2] = i4[r4 + 8 >> 2], i4[E4 + 220 >> 2] = g6, g6 = i4[r4 + 4 >> 2], i4[E4 + 208 >> 2] = i4[r4 >> 2], i4[E4 + 212 >> 2] = g6, g6 = i4[t4 + 12 >> 2], i4[E4 + 184 >> 2] = i4[t4 + 8 >> 2], i4[E4 + 188 >> 2] = g6, g6 = i4[t4 + 4 >> 2], i4[E4 + 176 >> 2] = i4[t4 >> 2], i4[E4 + 180 >> 2] = g6, g6 = i4[r4 + 12 >> 2], i4[E4 + 168 >> 2] = i4[r4 + 8 >> 2], i4[E4 + 172 >> 2] = g6, g6 = i4[r4 + 4 >> 2], i4[E4 + 160 >> 2] = i4[r4 >> 2], i4[E4 + 164 >> 2] = g6, AI(B4 = E4 + 192 | 0, E4 + 176 | 0, E4 + 160 | 0), g6 = i4[E4 + 204 >> 2], i4[r4 + 8 >> 2] = i4[E4 + 200 >> 2], i4[r4 + 12 >> 2] = g6, g6 = i4[E4 + 196 >> 2], i4[r4 >> 2] = i4[E4 + 192 >> 2], i4[r4 + 4 >> 2] = g6, g6 = i4[a4 + 12 >> 2], i4[E4 + 152 >> 2] = i4[a4 + 8 >> 2], i4[E4 + 156 >> 2] = g6, g6 = i4[a4 + 4 >> 2], i4[E4 + 144 >> 2] = i4[a4 >> 2], i4[E4 + 148 >> 2] = g6, g6 = i4[t4 + 12 >> 2], i4[E4 + 136 >> 2] = i4[t4 + 8 >> 2], i4[E4 + 140 >> 2] = g6, g6 = i4[t4 + 4 >> 2], i4[E4 + 128 >> 2] = i4[t4 >> 2], i4[E4 + 132 >> 2] = g6, AI(B4, E4 + 144 | 0, E4 + 128 | 0), g6 = i4[E4 + 204 >> 2], i4[t4 + 8 >> 2] = i4[E4 + 200 >> 2], i4[t4 + 12 >> 2] = g6, g6 = i4[E4 + 196 >> 2], i4[t4 >> 2] = i4[E4 + 192 >> 2], i4[t4 + 4 >> 2] = g6, g6 = i4[c4 + 12 >> 2], i4[E4 + 120 >> 2] = i4[c4 + 8 >> 2], i4[E4 + 124 >> 2] = g6, g6 = i4[c4 + 4 >> 2], i4[E4 + 112 >> 2] = i4[c4 >> 2], i4[E4 + 116 >> 2] = g6, g6 = i4[a4 + 12 >> 2], i4[E4 + 104 >> 2] = i4[a4 + 8 >> 2], i4[E4 + 108 >> 2] = g6, g6 = i4[a4 + 4 >> 2], i4[E4 + 96 >> 2] = i4[a4 >> 2], i4[E4 + 100 >> 2] = g6, AI(B4, E4 + 112 | 0, E4 + 96 | 0), g6 = i4[E4 + 204 >> 2], i4[a4 + 8 >> 2] = i4[E4 + 200 >> 2], i4[a4 + 12 >> 2] = g6, g6 = i4[E4 + 196 >> 2], i4[a4 >> 2] = i4[E4 + 192 >> 2], i4[a4 + 4 >> 2] = g6, g6 = i4[_4 + 12 >> 2], i4[E4 + 88 >> 2] = i4[_4 + 8 >> 2], i4[E4 + 92 >> 2] = g6, g6 = i4[_4 + 4 >> 2], i4[E4 + 80 >> 2] = i4[_4 >> 2], i4[E4 + 84 >> 2] = g6, g6 = i4[c4 + 12 >> 2], i4[E4 + 72 >> 2] = i4[c4 + 8 >> 2], i4[E4 + 76 >> 2] = g6, g6 = i4[c4 + 4 >> 2], i4[E4 + 64 >> 2] = i4[c4 >> 2], i4[E4 + 68 >> 2] = g6, AI(B4, E4 + 80 | 0, E4 - -64 | 0), g6 = i4[E4 + 204 >> 2], i4[c4 + 8 >> 2] = i4[E4 + 200 >> 2], i4[c4 + 12 >> 2] = g6, g6 = i4[E4 + 196 >> 2], i4[c4 >> 2] = i4[E4 + 192 >> 2], i4[c4 + 4 >> 2] = g6, g6 = i4[Q5 + 12 >> 2], i4[E4 + 56 >> 2] = i4[Q5 + 8 >> 2], i4[E4 + 60 >> 2] = g6, g6 = i4[Q5 + 4 >> 2], i4[E4 + 48 >> 2] = i4[Q5 >> 2], i4[E4 + 52 >> 2] = g6, g6 = i4[_4 + 12 >> 2], i4[E4 + 40 >> 2] = i4[_4 + 8 >> 2], i4[E4 + 44 >> 2] = g6, g6 = i4[_4 + 4 >> 2], i4[E4 + 32 >> 2] = i4[_4 >> 2], i4[E4 + 36 >> 2] = g6, AI(B4, E4 + 48 | 0, E4 + 32 | 0), g6 = i4[E4 + 204 >> 2], i4[_4 + 8 >> 2] = i4[E4 + 200 >> 2], i4[_4 + 12 >> 2] = g6, g6 = i4[E4 + 196 >> 2], i4[_4 >> 2] = i4[E4 + 192 >> 2], i4[_4 + 4 >> 2] = g6, g6 = i4[E4 + 220 >> 2], i4[E4 + 24 >> 2] = i4[E4 + 216 >> 2], i4[E4 + 28 >> 2] = g6, g6 = i4[E4 + 212 >> 2], i4[E4 + 16 >> 2] = i4[E4 + 208 >> 2], i4[E4 + 20 >> 2] = g6, g6 = i4[Q5 + 12 >> 2], i4[E4 + 8 >> 2] = i4[Q5 + 8 >> 2], i4[E4 + 12 >> 2] = g6, g6 = i4[Q5 + 4 >> 2], i4[E4 >> 2] = i4[Q5 >> 2], i4[E4 + 4 >> 2] = g6, AI(B4, E4 + 16 | 0, E4), D4 = i4[E4 + 192 >> 2], B4 = i4[E4 + 196 >> 2], g6 = i4[E4 + 200 >> 2], w4 = f4 ^ i4[E4 + 204 >> 2], i4[Q5 + 12 >> 2] = w4, n5 = g6 ^ p4, i4[Q5 + 8 >> 2] = n5, k4 = B4 ^ e6, i4[Q5 + 4 >> 2] = k4, F4 = h4 ^ D4, i4[Q5 >> 2] = F4, 7 != (0 | (y4 = y4 + 1 | 0)); ) ;
                      A: {
                        I: {
                          g: {
                            if (g6 = I7 - 16 | 0) {
                              if (16 == (0 | g6)) break g;
                              break I;
                            }
                            S4 = o3[Q5 + 16 | 0] | o3[Q5 + 17 | 0] << 8 | o3[Q5 + 18 | 0] << 16 | o3[Q5 + 19 | 0] << 24, a4 = o3[Q5 + 48 | 0] | o3[Q5 + 49 | 0] << 8 | o3[Q5 + 50 | 0] << 16 | o3[Q5 + 51 | 0] << 24, _4 = o3[Q5 + 32 | 0] | o3[Q5 + 33 | 0] << 8 | o3[Q5 + 34 | 0] << 16 | o3[Q5 + 35 | 0] << 24, c4 = o3[Q5 + 80 | 0] | o3[Q5 + 81 | 0] << 8 | o3[Q5 + 82 | 0] << 16 | o3[Q5 + 83 | 0] << 24, t4 = o3[0 | (I7 = Q5 - -64 | 0)] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, r4 = o3[Q5 + 20 | 0] | o3[Q5 + 21 | 0] << 8 | o3[Q5 + 22 | 0] << 16 | o3[Q5 + 23 | 0] << 24, f4 = o3[Q5 + 52 | 0] | o3[Q5 + 53 | 0] << 8 | o3[Q5 + 54 | 0] << 16 | o3[Q5 + 55 | 0] << 24, p4 = o3[Q5 + 36 | 0] | o3[Q5 + 37 | 0] << 8 | o3[Q5 + 38 | 0] << 16 | o3[Q5 + 39 | 0] << 24, e6 = o3[Q5 + 84 | 0] | o3[Q5 + 85 | 0] << 8 | o3[Q5 + 86 | 0] << 16 | o3[Q5 + 87 | 0] << 24, h4 = o3[Q5 + 68 | 0] | o3[Q5 + 69 | 0] << 8 | o3[Q5 + 70 | 0] << 16 | o3[Q5 + 71 | 0] << 24, D4 = o3[Q5 + 24 | 0] | o3[Q5 + 25 | 0] << 8 | o3[Q5 + 26 | 0] << 16 | o3[Q5 + 27 | 0] << 24, y4 = o3[Q5 + 56 | 0] | o3[Q5 + 57 | 0] << 8 | o3[Q5 + 58 | 0] << 16 | o3[Q5 + 59 | 0] << 24, B4 = o3[Q5 + 40 | 0] | o3[Q5 + 41 | 0] << 8 | o3[Q5 + 42 | 0] << 16 | o3[Q5 + 43 | 0] << 24, g6 = o3[Q5 + 88 | 0] | o3[Q5 + 89 | 0] << 8 | o3[Q5 + 90 | 0] << 16 | o3[Q5 + 91 | 0] << 24, I7 = o3[Q5 + 72 | 0] | o3[Q5 + 73 | 0] << 8 | o3[Q5 + 74 | 0] << 16 | o3[Q5 + 75 | 0] << 24, Q5 = w4 ^ (o3[Q5 + 28 | 0] | o3[Q5 + 29 | 0] << 8 | o3[Q5 + 30 | 0] << 16 | o3[Q5 + 31 | 0] << 24) ^ (o3[Q5 + 60 | 0] | o3[Q5 + 61 | 0] << 8 | o3[Q5 + 62 | 0] << 16 | o3[Q5 + 63 | 0] << 24) ^ (o3[Q5 + 44 | 0] | o3[Q5 + 45 | 0] << 8 | o3[Q5 + 46 | 0] << 16 | o3[Q5 + 47 | 0] << 24) ^ (o3[Q5 + 92 | 0] | o3[Q5 + 93 | 0] << 8 | o3[Q5 + 94 | 0] << 16 | o3[Q5 + 95 | 0] << 24) ^ (o3[Q5 + 76 | 0] | o3[Q5 + 77 | 0] << 8 | o3[Q5 + 78 | 0] << 16 | o3[Q5 + 79 | 0] << 24), C3[A8 + 12 | 0] = Q5, C3[A8 + 13 | 0] = Q5 >>> 8, C3[A8 + 14 | 0] = Q5 >>> 16, C3[A8 + 15 | 0] = Q5 >>> 24, I7 = n5 ^ D4 ^ I7 ^ g6 ^ B4 ^ y4, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = k4 ^ r4 ^ f4 ^ p4 ^ e6 ^ h4, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = F4 ^ S4 ^ a4 ^ _4 ^ c4 ^ t4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24;
                            break A;
                          }
                          h4 = o3[Q5 + 32 | 0] | o3[Q5 + 33 | 0] << 8 | o3[Q5 + 34 | 0] << 16 | o3[Q5 + 35 | 0] << 24, D4 = o3[Q5 + 16 | 0] | o3[Q5 + 17 | 0] << 8 | o3[Q5 + 18 | 0] << 16 | o3[Q5 + 19 | 0] << 24, y4 = o3[Q5 + 36 | 0] | o3[Q5 + 37 | 0] << 8 | o3[Q5 + 38 | 0] << 16 | o3[Q5 + 39 | 0] << 24, B4 = o3[Q5 + 20 | 0] | o3[Q5 + 21 | 0] << 8 | o3[Q5 + 22 | 0] << 16 | o3[Q5 + 23 | 0] << 24, g6 = o3[Q5 + 40 | 0] | o3[Q5 + 41 | 0] << 8 | o3[Q5 + 42 | 0] << 16 | o3[Q5 + 43 | 0] << 24, I7 = o3[Q5 + 24 | 0] | o3[Q5 + 25 | 0] << 8 | o3[Q5 + 26 | 0] << 16 | o3[Q5 + 27 | 0] << 24, e6 = w4 ^ (o3[Q5 + 44 | 0] | o3[Q5 + 45 | 0] << 8 | o3[Q5 + 46 | 0] << 16 | o3[Q5 + 47 | 0] << 24) ^ (o3[Q5 + 28 | 0] | o3[Q5 + 29 | 0] << 8 | o3[Q5 + 30 | 0] << 16 | o3[Q5 + 31 | 0] << 24), C3[A8 + 12 | 0] = e6, C3[A8 + 13 | 0] = e6 >>> 8, C3[A8 + 14 | 0] = e6 >>> 16, C3[A8 + 15 | 0] = e6 >>> 24, I7 = n5 ^ I7 ^ g6, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = k4 ^ B4 ^ y4, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = F4 ^ h4 ^ D4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24, f4 = o3[Q5 + 48 | 0] | o3[Q5 + 49 | 0] << 8 | o3[Q5 + 50 | 0] << 16 | o3[Q5 + 51 | 0] << 24, p4 = o3[Q5 + 80 | 0] | o3[Q5 + 81 | 0] << 8 | o3[Q5 + 82 | 0] << 16 | o3[Q5 + 83 | 0] << 24, e6 = o3[0 | (I7 = Q5 - -64 | 0)] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, h4 = o3[Q5 + 52 | 0] | o3[Q5 + 53 | 0] << 8 | o3[Q5 + 54 | 0] << 16 | o3[Q5 + 55 | 0] << 24, D4 = o3[Q5 + 84 | 0] | o3[Q5 + 85 | 0] << 8 | o3[Q5 + 86 | 0] << 16 | o3[Q5 + 87 | 0] << 24, y4 = o3[Q5 + 68 | 0] | o3[Q5 + 69 | 0] << 8 | o3[Q5 + 70 | 0] << 16 | o3[Q5 + 71 | 0] << 24, B4 = o3[Q5 + 56 | 0] | o3[Q5 + 57 | 0] << 8 | o3[Q5 + 58 | 0] << 16 | o3[Q5 + 59 | 0] << 24, g6 = o3[Q5 + 88 | 0] | o3[Q5 + 89 | 0] << 8 | o3[Q5 + 90 | 0] << 16 | o3[Q5 + 91 | 0] << 24, I7 = o3[Q5 + 72 | 0] | o3[Q5 + 73 | 0] << 8 | o3[Q5 + 74 | 0] << 16 | o3[Q5 + 75 | 0] << 24, Q5 = (o3[Q5 + 60 | 0] | o3[Q5 + 61 | 0] << 8 | o3[Q5 + 62 | 0] << 16 | o3[Q5 + 63 | 0] << 24) ^ (o3[Q5 + 92 | 0] | o3[Q5 + 93 | 0] << 8 | o3[Q5 + 94 | 0] << 16 | o3[Q5 + 95 | 0] << 24) ^ (o3[Q5 + 76 | 0] | o3[Q5 + 77 | 0] << 8 | o3[Q5 + 78 | 0] << 16 | o3[Q5 + 79 | 0] << 24), C3[A8 + 28 | 0] = Q5, C3[A8 + 29 | 0] = Q5 >>> 8, C3[A8 + 30 | 0] = Q5 >>> 16, C3[A8 + 31 | 0] = Q5 >>> 24, I7 = B4 ^ I7 ^ g6, C3[A8 + 24 | 0] = I7, C3[A8 + 25 | 0] = I7 >>> 8, C3[A8 + 26 | 0] = I7 >>> 16, C3[A8 + 27 | 0] = I7 >>> 24, I7 = h4 ^ D4 ^ y4, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = f4 ^ e6 ^ p4, C3[A8 + 16 | 0] = I7, C3[A8 + 17 | 0] = I7 >>> 8, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 19 | 0] = I7 >>> 24;
                          break A;
                        }
                        bg(A8, 0, I7);
                      }
                      s3 = E4 + 224 | 0;
                    }
                    function u3(A8, I7, g6) {
                      var B4, Q5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0;
                      for (s3 = B4 = s3 - 4032 | 0, $A(B4 + 160 | 0, g6), _4 = i4[g6 + 36 >> 2], i4[(a4 = B4 + 3840 | 0) >> 2] = i4[g6 + 32 >> 2], i4[a4 + 4 >> 2] = _4, c4 = i4[g6 + 28 >> 2], i4[(_4 = B4 + 3832 | 0) >> 2] = i4[g6 + 24 >> 2], i4[_4 + 4 >> 2] = c4, r4 = i4[g6 + 20 >> 2], i4[(c4 = B4 + 3824 | 0) >> 2] = i4[g6 + 16 >> 2], i4[c4 + 4 >> 2] = r4, e6 = i4[g6 + 12 >> 2], i4[(r4 = B4 + 3816 | 0) >> 2] = i4[g6 + 8 >> 2], i4[r4 + 4 >> 2] = e6, e6 = i4[g6 + 4 >> 2], i4[B4 + 3808 >> 2] = i4[g6 >> 2], i4[B4 + 3812 >> 2] = e6, D4 = i4[g6 + 52 >> 2], i4[(e6 = B4 + 3856 | 0) >> 2] = i4[g6 + 48 >> 2], i4[e6 + 4 >> 2] = D4, w4 = i4[g6 + 60 >> 2], i4[(D4 = B4 + 3864 | 0) >> 2] = i4[g6 + 56 >> 2], i4[D4 + 4 >> 2] = w4, y4 = i4[4 + (f4 = g6 - -64 | 0) >> 2], i4[(w4 = B4 + 3872 | 0) >> 2] = i4[f4 >> 2], i4[w4 + 4 >> 2] = y4, y4 = i4[g6 + 76 >> 2], i4[(f4 = B4 + 3880 | 0) >> 2] = i4[g6 + 72 >> 2], i4[f4 + 4 >> 2] = y4, y4 = i4[g6 + 44 >> 2], i4[B4 + 3848 >> 2] = i4[g6 + 40 >> 2], i4[B4 + 3852 >> 2] = y4, n5 = i4[g6 + 92 >> 2], i4[(y4 = B4 + 3896 | 0) >> 2] = i4[g6 + 88 >> 2], i4[y4 + 4 >> 2] = n5, k4 = i4[g6 + 100 >> 2], i4[(n5 = B4 + 3904 | 0) >> 2] = i4[g6 + 96 >> 2], i4[n5 + 4 >> 2] = k4, F4 = i4[g6 + 108 >> 2], i4[(k4 = B4 + 3912 | 0) >> 2] = i4[g6 + 104 >> 2], i4[k4 + 4 >> 2] = F4, S4 = i4[g6 + 116 >> 2], i4[(F4 = B4 + 3920 | 0) >> 2] = i4[g6 + 112 >> 2], i4[F4 + 4 >> 2] = S4, S4 = i4[g6 + 84 >> 2], i4[B4 + 3888 >> 2] = i4[g6 + 80 >> 2], i4[B4 + 3892 >> 2] = S4, KA(Q5 = B4 + 3528 | 0, S4 = B4 + 3808 | 0), b4(E4 = B4 + 2408 | 0, Q5, t4 = B4 + 3648 | 0), b4(B4 + 2448 | 0, h4 = B4 + 3568 | 0, p4 = B4 + 3608 | 0), b4(B4 + 2488 | 0, p4, t4), b4(B4 + 2528 | 0, Q5, h4), $A(t4 = B4 + 320 | 0, E4), sA(Q5 = B4 + 3368 | 0, g6, t4), b4(E4 = B4 + 2248 | 0, Q5, t4 = B4 + 3488 | 0), b4(B4 + 2288 | 0, h4 = B4 + 3408 | 0, p4 = B4 + 3448 | 0), b4(B4 + 2328 | 0, p4, t4), b4(B4 + 2368 | 0, Q5, h4), $A(B4 + 480 | 0, E4), E4 = i4[4 + (Q5 = B4 + 2440 | 0) >> 2], i4[a4 >> 2] = i4[Q5 >> 2], i4[a4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2432 | 0) >> 2], i4[_4 >> 2] = i4[Q5 >> 2], i4[_4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2424 | 0) >> 2], i4[c4 >> 2] = i4[Q5 >> 2], i4[c4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2416 | 0) >> 2], i4[r4 >> 2] = i4[Q5 >> 2], i4[r4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2456 | 0) >> 2], i4[e6 >> 2] = i4[Q5 >> 2], i4[e6 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2464 | 0) >> 2], i4[D4 >> 2] = i4[Q5 >> 2], i4[D4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2472 | 0) >> 2], i4[w4 >> 2] = i4[Q5 >> 2], i4[w4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2480 | 0) >> 2], i4[f4 >> 2] = i4[Q5 >> 2], i4[f4 + 4 >> 2] = E4, Q5 = i4[B4 + 2412 >> 2], i4[B4 + 3808 >> 2] = i4[B4 + 2408 >> 2], i4[B4 + 3812 >> 2] = Q5, Q5 = i4[B4 + 2452 >> 2], i4[B4 + 3848 >> 2] = i4[B4 + 2448 >> 2], i4[B4 + 3852 >> 2] = Q5, E4 = i4[4 + (Q5 = B4 + 2520 | 0) >> 2], i4[F4 >> 2] = i4[Q5 >> 2], i4[F4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2512 | 0) >> 2], i4[k4 >> 2] = i4[Q5 >> 2], i4[k4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2504 | 0) >> 2], i4[n5 >> 2] = i4[Q5 >> 2], i4[n5 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2496 | 0) >> 2], i4[y4 >> 2] = i4[Q5 >> 2], i4[y4 + 4 >> 2] = E4, Q5 = i4[B4 + 2492 >> 2], i4[B4 + 3888 >> 2] = i4[B4 + 2488 >> 2], i4[B4 + 3892 >> 2] = Q5, KA(Q5 = B4 + 3208 | 0, S4), b4(E4 = B4 + 2088 | 0, Q5, t4 = B4 + 3328 | 0), b4(B4 + 2128 | 0, h4 = B4 + 3248 | 0, p4 = B4 + 3288 | 0), b4(B4 + 2168 | 0, p4, t4), b4(B4 + 2208 | 0, Q5, h4), $A(t4 = B4 + 640 | 0, E4), sA(Q5 = B4 + 3048 | 0, g6, t4), b4(E4 = B4 + 1928 | 0, Q5, t4 = B4 + 3168 | 0), b4(B4 + 1968 | 0, h4 = B4 + 3088 | 0, p4 = B4 + 3128 | 0), b4(B4 + 2008 | 0, p4, t4), b4(B4 + 2048 | 0, Q5, h4), $A(B4 + 800 | 0, E4), E4 = i4[4 + (Q5 = B4 + 2280 | 0) >> 2], i4[a4 >> 2] = i4[Q5 >> 2], i4[a4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2272 | 0) >> 2], i4[_4 >> 2] = i4[Q5 >> 2], i4[_4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2264 | 0) >> 2], i4[c4 >> 2] = i4[Q5 >> 2], i4[c4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2256 | 0) >> 2], i4[r4 >> 2] = i4[Q5 >> 2], i4[r4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2296 | 0) >> 2], i4[e6 >> 2] = i4[Q5 >> 2], i4[e6 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2304 | 0) >> 2], i4[D4 >> 2] = i4[Q5 >> 2], i4[D4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2312 | 0) >> 2], i4[w4 >> 2] = i4[Q5 >> 2], i4[w4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2320 | 0) >> 2], i4[f4 >> 2] = i4[Q5 >> 2], i4[f4 + 4 >> 2] = E4, Q5 = i4[B4 + 2252 >> 2], i4[B4 + 3808 >> 2] = i4[B4 + 2248 >> 2], i4[B4 + 3812 >> 2] = Q5, Q5 = i4[B4 + 2292 >> 2], i4[B4 + 3848 >> 2] = i4[B4 + 2288 >> 2], i4[B4 + 3852 >> 2] = Q5, E4 = i4[4 + (Q5 = B4 + 2360 | 0) >> 2], i4[F4 >> 2] = i4[Q5 >> 2], i4[F4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2352 | 0) >> 2], i4[k4 >> 2] = i4[Q5 >> 2], i4[k4 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2344 | 0) >> 2], i4[n5 >> 2] = i4[Q5 >> 2], i4[n5 + 4 >> 2] = E4, E4 = i4[4 + (Q5 = B4 + 2336 | 0) >> 2], i4[y4 >> 2] = i4[Q5 >> 2], i4[y4 + 4 >> 2] = E4, Q5 = i4[B4 + 2332 >> 2], i4[B4 + 3888 >> 2] = i4[B4 + 2328 >> 2], i4[B4 + 3892 >> 2] = Q5, KA(Q5 = B4 + 2888 | 0, S4), b4(E4 = B4 + 1768 | 0, Q5, t4 = B4 + 3008 | 0), b4(B4 + 1808 | 0, h4 = B4 + 2928 | 0, p4 = B4 + 2968 | 0), b4(B4 + 1848 | 0, p4, t4), b4(B4 + 1888 | 0, Q5, h4), $A(t4 = B4 + 960 | 0, E4), sA(Q5 = B4 + 2728 | 0, g6, t4), b4(g6 = B4 + 1608 | 0, Q5, E4 = B4 + 2848 | 0), b4(B4 + 1648 | 0, t4 = B4 + 2768 | 0, h4 = B4 + 2808 | 0), b4(B4 + 1688 | 0, h4, E4), b4(B4 + 1728 | 0, Q5, t4), $A(B4 + 1120 | 0, g6), Q5 = i4[4 + (g6 = B4 + 2120 | 0) >> 2], i4[a4 >> 2] = i4[g6 >> 2], i4[a4 + 4 >> 2] = Q5, a4 = i4[4 + (g6 = B4 + 2112 | 0) >> 2], i4[_4 >> 2] = i4[g6 >> 2], i4[_4 + 4 >> 2] = a4, a4 = i4[4 + (g6 = B4 + 2104 | 0) >> 2], i4[c4 >> 2] = i4[g6 >> 2], i4[c4 + 4 >> 2] = a4, a4 = i4[4 + (g6 = B4 + 2096 | 0) >> 2], i4[r4 >> 2] = i4[g6 >> 2], i4[r4 + 4 >> 2] = a4, a4 = i4[4 + (g6 = B4 + 2136 | 0) >> 2], i4[e6 >> 2] = i4[g6 >> 2], i4[e6 + 4 >> 2] = a4, a4 = i4[4 + (g6 = B4 + 2144 | 0) >> 2], i4[D4 >> 2] = i4[g6 >> 2], i4[D4 + 4 >> 2] = a4, a4 = i4[4 + (g6 = B4 + 2152 | 0) >> 2], i4[w4 >> 2] = i4[g6 >> 2], i4[w4 + 4 >> 2] = a4, a4 = i4[4 + (g6 = B4 + 2160 | 0) >> 2], i4[f4 >> 2] = i4[g6 >> 2], i4[f4 + 4 >> 2] = a4, g6 = i4[B4 + 2092 >> 2], i4[B4 + 3808 >> 2] = i4[B4 + 2088 >> 2], i4[B4 + 3812 >> 2] = g6, g6 = i4[B4 + 2132 >> 2], i4[B4 + 3848 >> 2] = i4[B4 + 2128 >> 2], i4[B4 + 3852 >> 2] = g6, a4 = i4[4 + (g6 = B4 + 2200 | 0) >> 2], i4[F4 >> 2] = i4[g6 >> 2], i4[F4 + 4 >> 2] = a4, a4 = i4[4 + (g6 = B4 + 2192 | 0) >> 2], i4[k4 >> 2] = i4[g6 >> 2], i4[k4 + 4 >> 2] = a4, a4 = i4[4 + (g6 = B4 + 2184 | 0) >> 2], i4[n5 >> 2] = i4[g6 >> 2], i4[n5 + 4 >> 2] = a4, a4 = i4[4 + (g6 = B4 + 2176 | 0) >> 2], i4[y4 >> 2] = i4[g6 >> 2], i4[y4 + 4 >> 2] = a4, g6 = i4[B4 + 2172 >> 2], i4[B4 + 3888 >> 2] = i4[B4 + 2168 >> 2], i4[B4 + 3892 >> 2] = g6, KA(g6 = B4 + 2568 | 0, S4), b4(a4 = B4 + 1448 | 0, g6, _4 = B4 + 2688 | 0), b4(B4 + 1488 | 0, c4 = B4 + 2608 | 0, r4 = B4 + 2648 | 0), b4(B4 + 1528 | 0, r4, _4), b4(B4 + 1568 | 0, g6, c4), $A(B4 + 1280 | 0, a4), a4 = 0, g6 = 0; c4 = (_4 = B4 + 3968 | 0) + (g6 << 1) | 0, r4 = o3[I7 + g6 | 0], C3[c4 + 1 | 0] = r4 >>> 4, C3[0 | c4] = 15 & r4, _4 = _4 + ((c4 = 1 | g6) << 1) | 0, c4 = o3[I7 + c4 | 0], C3[_4 + 1 | 0] = c4 >>> 4, C3[0 | _4] = 15 & c4, 32 != (0 | (g6 = g6 + 2 | 0)); ) ;
                      for (I7 = 0; g6 = 8 + (_4 = (g6 = I7) + o3[0 | (I7 = (B4 + 3968 | 0) + a4 | 0)] | 0) | 0, C3[0 | I7] = _4 - (240 & g6), g6 = 8 + (_4 = o3[I7 + 1 | 0] + (g6 << 24 >> 24 >> 4) | 0) | 0, C3[I7 + 1 | 0] = _4 - (240 & g6), g6 = 8 + (_4 = o3[I7 + 2 | 0] + (g6 << 24 >> 24 >> 4) | 0) | 0, C3[I7 + 2 | 0] = _4 - (240 & g6), I7 = g6 << 24 >> 24 >> 4, 63 != (0 | (a4 = a4 + 3 | 0)); ) ;
                      for (C3[B4 + 4031 | 0] = o3[B4 + 4031 | 0] + I7, i4[A8 + 32 >> 2] = 0, i4[A8 + 36 >> 2] = 0, i4[A8 + 24 >> 2] = 0, i4[A8 + 28 >> 2] = 0, i4[A8 + 16 >> 2] = 0, i4[A8 + 20 >> 2] = 0, i4[A8 + 8 >> 2] = 0, i4[A8 + 12 >> 2] = 0, i4[A8 >> 2] = 0, i4[A8 + 4 >> 2] = 0, i4[A8 + 44 >> 2] = 0, i4[A8 + 48 >> 2] = 0, i4[A8 + 40 >> 2] = 1, i4[A8 + 52 >> 2] = 0, i4[A8 + 56 >> 2] = 0, i4[A8 + 60 >> 2] = 0, i4[A8 + 64 >> 2] = 0, i4[A8 + 68 >> 2] = 0, i4[A8 + 72 >> 2] = 0, i4[A8 + 76 >> 2] = 0, i4[A8 + 80 >> 2] = 1, bg(A8 + 84 | 0, 0, 76), w4 = A8 + 120 | 0, f4 = A8 + 80 | 0, y4 = A8 + 40 | 0, r4 = B4 + 3768 | 0, g6 = B4 + 3888 | 0, _4 = B4 + 3848 | 0, e6 = B4 + 3728 | 0, a4 = B4 + 3928 | 0, D4 = 63; HA(B4, n5 = B4 + 160 | 0, C3[(B4 + 3968 | 0) + D4 | 0]), sA(I7 = B4 + 3808 | 0, A8, B4), b4(c4 = B4 + 3688 | 0, I7, a4), b4(e6, _4, g6), b4(r4, g6, a4), KA(I7, c4), b4(c4, I7, a4), b4(e6, _4, g6), b4(r4, g6, a4), KA(I7, c4), b4(c4, I7, a4), b4(e6, _4, g6), b4(r4, g6, a4), KA(I7, c4), b4(c4, I7, a4), b4(e6, _4, g6), b4(r4, g6, a4), KA(I7, c4), b4(A8, I7, a4), b4(y4, _4, g6), b4(f4, g6, a4), b4(w4, I7, _4), D4 = D4 - 1 | 0; ) ;
                      HA(B4, n5, C3[B4 + 3968 | 0]), sA(I7, A8, B4), b4(A8, I7, a4), b4(y4, _4, g6), b4(f4, g6, a4), b4(w4, I7, _4), s3 = B4 + 4032 | 0;
                    }
                    function x3(A8, I7, g6, C4) {
                      var B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, f4, p4, w4, n5, k4, F4, S4, N4, G4, M4, K4 = 0, U4 = 0, b5 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0;
                      s3 = B4 = s3 - 320 | 0, i4[B4 + 280 >> 2] = 0, i4[B4 + 284 >> 2] = 0, i4[B4 + 272 >> 2] = 0, i4[B4 + 276 >> 2] = 0, i4[B4 + 264 >> 2] = 0, i4[B4 + 268 >> 2] = 0, i4[B4 + 256 >> 2] = 0, i4[B4 + 260 >> 2] = 0, Ng(U4 = B4 + 256 | 0, I7, g6), m4 = o3[C4 + 16 | 0] | o3[C4 + 17 | 0] << 8 | o3[C4 + 18 | 0] << 16 | o3[C4 + 19 | 0] << 24, K4 = o3[C4 + 48 | 0] | o3[C4 + 49 | 0] << 8 | o3[C4 + 50 | 0] << 16 | o3[C4 + 51 | 0] << 24, a4 = o3[C4 + 20 | 0] | o3[C4 + 21 | 0] << 8 | o3[C4 + 22 | 0] << 16 | o3[C4 + 23 | 0] << 24, _4 = o3[C4 + 52 | 0] | o3[C4 + 53 | 0] << 8 | o3[C4 + 54 | 0] << 16 | o3[C4 + 55 | 0] << 24, c4 = o3[C4 + 24 | 0] | o3[C4 + 25 | 0] << 8 | o3[C4 + 26 | 0] << 16 | o3[C4 + 27 | 0] << 24, t4 = o3[C4 + 56 | 0] | o3[C4 + 57 | 0] << 8 | o3[C4 + 58 | 0] << 16 | o3[C4 + 59 | 0] << 24, r4 = o3[C4 + 28 | 0] | o3[C4 + 29 | 0] << 8 | o3[C4 + 30 | 0] << 16 | o3[C4 + 31 | 0] << 24, e6 = o3[C4 + 60 | 0] | o3[C4 + 61 | 0] << 8 | o3[C4 + 62 | 0] << 16 | o3[C4 + 63 | 0] << 24, I7 = o3[C4 + 36 | 0] | o3[C4 + 37 | 0] << 8 | o3[C4 + 38 | 0] << 16 | o3[C4 + 39 | 0] << 24, y4 = o3[C4 + 84 | 0] | o3[C4 + 85 | 0] << 8 | o3[C4 + 86 | 0] << 16 | o3[C4 + 87 | 0] << 24, h4 = o3[C4 + 116 | 0] | o3[C4 + 117 | 0] << 8 | o3[C4 + 118 | 0] << 16 | o3[C4 + 119 | 0] << 24, b5 = o3[C4 + 100 | 0] | o3[C4 + 101 | 0] << 8 | o3[C4 + 102 | 0] << 16 | o3[C4 + 103 | 0] << 24, H4 = o3[C4 + 44 | 0] | o3[C4 + 45 | 0] << 8 | o3[C4 + 46 | 0] << 16 | o3[C4 + 47 | 0] << 24, D4 = o3[C4 + 92 | 0] | o3[C4 + 93 | 0] << 8 | o3[C4 + 94 | 0] << 16 | o3[C4 + 95 | 0] << 24, f4 = o3[C4 + 124 | 0] | o3[C4 + 125 | 0] << 8 | o3[C4 + 126 | 0] << 16 | o3[C4 + 127 | 0] << 24, Y4 = o3[C4 + 108 | 0] | o3[C4 + 109 | 0] << 8 | o3[C4 + 110 | 0] << 16 | o3[C4 + 111 | 0] << 24, J4 = o3[C4 + 32 | 0] | o3[C4 + 33 | 0] << 8 | o3[C4 + 34 | 0] << 16 | o3[C4 + 35 | 0] << 24, p4 = o3[C4 + 80 | 0] | o3[C4 + 81 | 0] << 8 | o3[C4 + 82 | 0] << 16 | o3[C4 + 83 | 0] << 24, w4 = o3[C4 + 112 | 0] | o3[C4 + 113 | 0] << 8 | o3[C4 + 114 | 0] << 16 | o3[C4 + 115 | 0] << 24, d5 = o3[C4 + 96 | 0] | o3[C4 + 97 | 0] << 8 | o3[C4 + 98 | 0] << 16 | o3[C4 + 99 | 0] << 24, n5 = i4[B4 + 272 >> 2], k4 = i4[B4 + 256 >> 2], F4 = i4[B4 + 260 >> 2], S4 = i4[B4 + 264 >> 2], N4 = i4[B4 + 268 >> 2], G4 = i4[B4 + 276 >> 2], M4 = i4[B4 + 284 >> 2], Q5 = o3[C4 + 40 | 0] | o3[C4 + 41 | 0] << 8 | o3[C4 + 42 | 0] << 16 | o3[C4 + 43 | 0] << 24, E4 = o3[C4 + 104 | 0] | o3[C4 + 105 | 0] << 8 | o3[C4 + 106 | 0] << 16 | o3[C4 + 107 | 0] << 24, i4[B4 + 280 >> 2] = Q5 ^ E4 & (o3[C4 + 120 | 0] | o3[C4 + 121 | 0] << 8 | o3[C4 + 122 | 0] << 16 | o3[C4 + 123 | 0] << 24) ^ i4[B4 + 280 >> 2] ^ (o3[C4 + 88 | 0] | o3[C4 + 89 | 0] << 8 | o3[C4 + 90 | 0] << 16 | o3[C4 + 91 | 0] << 24), i4[B4 + 272 >> 2] = J4 ^ d5 & w4 ^ p4 ^ n5, i4[B4 + 284 >> 2] = H4 ^ Y4 & f4 ^ D4 ^ M4, i4[B4 + 276 >> 2] = I7 ^ b5 & h4 ^ y4 ^ G4, i4[B4 + 268 >> 2] = Y4 ^ H4 & e6 ^ r4 ^ N4, i4[B4 + 264 >> 2] = t4 & Q5 ^ c4 ^ S4 ^ E4, i4[B4 + 260 >> 2] = b5 ^ I7 & _4 ^ a4 ^ F4, i4[B4 + 256 >> 2] = d5 ^ K4 & J4 ^ m4 ^ k4, bg(g6 + U4 | 0, 0, 32 - g6 | 0), Ng(A8, U4, g6), g6 = i4[B4 + 280 >> 2], U4 = i4[B4 + 272 >> 2], b5 = i4[B4 + 284 >> 2], H4 = i4[B4 + 276 >> 2], Y4 = i4[B4 + 256 >> 2], J4 = i4[B4 + 260 >> 2], d5 = i4[B4 + 264 >> 2], m4 = i4[B4 + 268 >> 2], A8 = i4[C4 + 124 >> 2], i4[B4 + 312 >> 2] = i4[C4 + 120 >> 2], i4[B4 + 316 >> 2] = A8, A8 = i4[C4 + 116 >> 2], i4[B4 + 304 >> 2] = i4[C4 + 112 >> 2], i4[B4 + 308 >> 2] = A8, A8 = i4[C4 + 108 >> 2], i4[B4 + 248 >> 2] = i4[C4 + 104 >> 2], i4[B4 + 252 >> 2] = A8, A8 = i4[C4 + 100 >> 2], i4[B4 + 240 >> 2] = i4[C4 + 96 >> 2], i4[B4 + 244 >> 2] = A8, A8 = i4[C4 + 124 >> 2], i4[B4 + 232 >> 2] = i4[C4 + 120 >> 2], i4[B4 + 236 >> 2] = A8, A8 = i4[C4 + 116 >> 2], i4[B4 + 224 >> 2] = i4[C4 + 112 >> 2], i4[B4 + 228 >> 2] = A8, AI(I7 = B4 + 288 | 0, B4 + 240 | 0, B4 + 224 | 0), A8 = i4[B4 + 300 >> 2], i4[C4 + 120 >> 2] = i4[B4 + 296 >> 2], i4[C4 + 124 >> 2] = A8, A8 = i4[B4 + 292 >> 2], i4[C4 + 112 >> 2] = i4[B4 + 288 >> 2], i4[C4 + 116 >> 2] = A8, A8 = i4[C4 + 92 >> 2], i4[B4 + 216 >> 2] = i4[C4 + 88 >> 2], i4[B4 + 220 >> 2] = A8, A8 = i4[C4 + 84 >> 2], i4[B4 + 208 >> 2] = i4[C4 + 80 >> 2], i4[B4 + 212 >> 2] = A8, A8 = i4[C4 + 108 >> 2], i4[B4 + 200 >> 2] = i4[C4 + 104 >> 2], i4[B4 + 204 >> 2] = A8, A8 = i4[C4 + 100 >> 2], i4[B4 + 192 >> 2] = i4[C4 + 96 >> 2], i4[B4 + 196 >> 2] = A8, AI(I7, B4 + 208 | 0, B4 + 192 | 0), A8 = i4[B4 + 300 >> 2], i4[C4 + 104 >> 2] = i4[B4 + 296 >> 2], i4[C4 + 108 >> 2] = A8, A8 = i4[B4 + 292 >> 2], i4[C4 + 96 >> 2] = i4[B4 + 288 >> 2], i4[C4 + 100 >> 2] = A8, A8 = i4[C4 + 76 >> 2], i4[B4 + 184 >> 2] = i4[C4 + 72 >> 2], i4[B4 + 188 >> 2] = A8, K4 = i4[4 + (A8 = C4 - -64 | 0) >> 2], i4[B4 + 176 >> 2] = i4[A8 >> 2], i4[B4 + 180 >> 2] = K4, K4 = i4[C4 + 92 >> 2], i4[B4 + 168 >> 2] = i4[C4 + 88 >> 2], i4[B4 + 172 >> 2] = K4, K4 = i4[C4 + 84 >> 2], i4[B4 + 160 >> 2] = i4[C4 + 80 >> 2], i4[B4 + 164 >> 2] = K4, AI(I7, B4 + 176 | 0, B4 + 160 | 0), K4 = i4[B4 + 300 >> 2], i4[C4 + 88 >> 2] = i4[B4 + 296 >> 2], i4[C4 + 92 >> 2] = K4, K4 = i4[B4 + 292 >> 2], i4[C4 + 80 >> 2] = i4[B4 + 288 >> 2], i4[C4 + 84 >> 2] = K4, K4 = i4[C4 + 60 >> 2], i4[B4 + 152 >> 2] = i4[C4 + 56 >> 2], i4[B4 + 156 >> 2] = K4, K4 = i4[C4 + 52 >> 2], i4[B4 + 144 >> 2] = i4[C4 + 48 >> 2], i4[B4 + 148 >> 2] = K4, K4 = i4[C4 + 76 >> 2], i4[B4 + 136 >> 2] = i4[C4 + 72 >> 2], i4[B4 + 140 >> 2] = K4, K4 = i4[A8 + 4 >> 2], i4[B4 + 128 >> 2] = i4[A8 >> 2], i4[B4 + 132 >> 2] = K4, AI(I7, B4 + 144 | 0, B4 + 128 | 0), K4 = i4[B4 + 300 >> 2], i4[C4 + 72 >> 2] = i4[B4 + 296 >> 2], i4[C4 + 76 >> 2] = K4, K4 = i4[B4 + 292 >> 2], i4[A8 >> 2] = i4[B4 + 288 >> 2], i4[A8 + 4 >> 2] = K4, K4 = i4[C4 + 44 >> 2], i4[B4 + 120 >> 2] = i4[C4 + 40 >> 2], i4[B4 + 124 >> 2] = K4, K4 = i4[C4 + 36 >> 2], i4[B4 + 112 >> 2] = i4[C4 + 32 >> 2], i4[B4 + 116 >> 2] = K4, K4 = i4[C4 + 60 >> 2], i4[B4 + 104 >> 2] = i4[C4 + 56 >> 2], i4[B4 + 108 >> 2] = K4, K4 = i4[C4 + 52 >> 2], i4[B4 + 96 >> 2] = i4[C4 + 48 >> 2], i4[B4 + 100 >> 2] = K4, AI(I7, B4 + 112 | 0, B4 + 96 | 0), K4 = i4[B4 + 300 >> 2], i4[C4 + 56 >> 2] = i4[B4 + 296 >> 2], i4[C4 + 60 >> 2] = K4, K4 = i4[B4 + 292 >> 2], i4[C4 + 48 >> 2] = i4[B4 + 288 >> 2], i4[C4 + 52 >> 2] = K4, K4 = i4[C4 + 28 >> 2], i4[B4 + 88 >> 2] = i4[C4 + 24 >> 2], i4[B4 + 92 >> 2] = K4, K4 = i4[C4 + 20 >> 2], i4[B4 + 80 >> 2] = i4[C4 + 16 >> 2], i4[B4 + 84 >> 2] = K4, K4 = i4[C4 + 44 >> 2], i4[B4 + 72 >> 2] = i4[C4 + 40 >> 2], i4[B4 + 76 >> 2] = K4, K4 = i4[C4 + 36 >> 2], i4[B4 + 64 >> 2] = i4[C4 + 32 >> 2], i4[B4 + 68 >> 2] = K4, AI(I7, B4 + 80 | 0, B4 - -64 | 0), K4 = i4[B4 + 300 >> 2], i4[C4 + 40 >> 2] = i4[B4 + 296 >> 2], i4[C4 + 44 >> 2] = K4, K4 = i4[B4 + 292 >> 2], i4[C4 + 32 >> 2] = i4[B4 + 288 >> 2], i4[C4 + 36 >> 2] = K4, K4 = i4[C4 + 12 >> 2], i4[B4 + 56 >> 2] = i4[C4 + 8 >> 2], i4[B4 + 60 >> 2] = K4, K4 = i4[C4 + 4 >> 2], i4[B4 + 48 >> 2] = i4[C4 >> 2], i4[B4 + 52 >> 2] = K4, K4 = i4[C4 + 28 >> 2], i4[B4 + 40 >> 2] = i4[C4 + 24 >> 2], i4[B4 + 44 >> 2] = K4, K4 = i4[C4 + 20 >> 2], i4[B4 + 32 >> 2] = i4[C4 + 16 >> 2], i4[B4 + 36 >> 2] = K4, AI(I7, B4 + 48 | 0, B4 + 32 | 0), K4 = i4[B4 + 300 >> 2], i4[C4 + 24 >> 2] = i4[B4 + 296 >> 2], i4[C4 + 28 >> 2] = K4, K4 = i4[B4 + 292 >> 2], i4[C4 + 16 >> 2] = i4[B4 + 288 >> 2], i4[C4 + 20 >> 2] = K4, K4 = i4[B4 + 316 >> 2], i4[B4 + 24 >> 2] = i4[B4 + 312 >> 2], i4[B4 + 28 >> 2] = K4, K4 = i4[B4 + 308 >> 2], i4[B4 + 16 >> 2] = i4[B4 + 304 >> 2], i4[B4 + 20 >> 2] = K4, K4 = i4[C4 + 12 >> 2], i4[B4 + 8 >> 2] = i4[C4 + 8 >> 2], i4[B4 + 12 >> 2] = K4, K4 = i4[C4 + 4 >> 2], i4[B4 >> 2] = i4[C4 >> 2], i4[B4 + 4 >> 2] = K4, AI(I7, B4 + 16 | 0, B4), I7 = i4[B4 + 300 >> 2], i4[C4 + 8 >> 2] = i4[B4 + 296 >> 2], i4[C4 + 12 >> 2] = I7, I7 = i4[B4 + 292 >> 2], i4[C4 >> 2] = i4[B4 + 288 >> 2], i4[C4 + 4 >> 2] = I7, i4[C4 + 12 >> 2] = m4 ^ (o3[C4 + 12 | 0] | o3[C4 + 13 | 0] << 8 | o3[C4 + 14 | 0] << 16 | o3[C4 + 15 | 0] << 24), i4[C4 + 8 >> 2] = d5 ^ (o3[C4 + 8 | 0] | o3[C4 + 9 | 0] << 8 | o3[C4 + 10 | 0] << 16 | o3[C4 + 11 | 0] << 24), i4[C4 + 4 >> 2] = J4 ^ (o3[C4 + 4 | 0] | o3[C4 + 5 | 0] << 8 | o3[C4 + 6 | 0] << 16 | o3[C4 + 7 | 0] << 24), i4[C4 >> 2] = Y4 ^ (o3[0 | C4] | o3[C4 + 1 | 0] << 8 | o3[C4 + 2 | 0] << 16 | o3[C4 + 3 | 0] << 24), i4[A8 >> 2] = U4 ^ (o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24), i4[C4 + 68 >> 2] = H4 ^ (o3[C4 + 68 | 0] | o3[C4 + 69 | 0] << 8 | o3[C4 + 70 | 0] << 16 | o3[C4 + 71 | 0] << 24), i4[C4 + 72 >> 2] = g6 ^ (o3[C4 + 72 | 0] | o3[C4 + 73 | 0] << 8 | o3[C4 + 74 | 0] << 16 | o3[C4 + 75 | 0] << 24), i4[C4 + 76 >> 2] = b5 ^ (o3[C4 + 76 | 0] | o3[C4 + 77 | 0] << 8 | o3[C4 + 78 | 0] << 16 | o3[C4 + 79 | 0] << 24), s3 = B4 + 320 | 0;
                    }
                    function v3(A8, I7) {
                      var g6, C4, B4, Q5, o4, E4, _4, c4, t4, r4, e6, y4, s4, h4, D4, p4, w4, n5, k4, F4, S4, N4, G4, M4, K4, U4, b5, H4, Y4, J4, d5, m4, l4, u4, x4, v4, R4 = 0, L4 = 0, P7 = 0, q3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, W2 = 0, V2 = 0, Z2 = 0, T2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, oA2 = 0;
                      R4 = Ig(C4 = (D4 = i4[I7 + 12 >> 2]) << 1, E4 = C4 >> 31, $2 = (q3 = i4[I7 + 4 >> 2]) << 1, B4 = $2 >> 31), P7 = f3, F4 = V2 = i4[I7 + 8 >> 2], L4 = (Z2 = Ig(V2, p4 = V2 >> 31, V2, p4)) + R4 | 0, R4 = f3 + P7 | 0, R4 = L4 >>> 0 < Z2 >>> 0 ? R4 + 1 | 0 : R4, P7 = Ig(j2 = i4[I7 + 16 >> 2], _4 = j2 >> 31, Z2 = (z2 = i4[I7 >> 2]) << 1, Q5 = Z2 >> 31), R4 = f3 + R4 | 0, R4 = (L4 = P7 + L4 | 0) >>> 0 < P7 >>> 0 ? R4 + 1 | 0 : R4, e6 = i4[I7 + 28 >> 2], P7 = Ig(BA2 = a3(e6, 38), w4 = BA2 >> 31, e6, S4 = e6 >> 31), R4 = f3 + R4 | 0, R4 = (L4 = P7 + L4 | 0) >>> 0 < P7 >>> 0 ? R4 + 1 | 0 : R4, P7 = L4, y4 = i4[I7 + 32 >> 2], X2 = Ig(O2 = a3(y4, 19), c4 = O2 >> 31, L4 = (g6 = i4[I7 + 24 >> 2]) << 1, L4 >> 31), L4 = f3 + R4 | 0, L4 = (P7 = P7 + X2 | 0) >>> 0 < X2 >>> 0 ? L4 + 1 | 0 : L4, H4 = i4[I7 + 36 >> 2], R4 = Ig(X2 = a3(H4, 38), o4 = X2 >> 31, AA2 = (t4 = i4[I7 + 20 >> 2]) << 1, s4 = AA2 >> 31), I7 = f3 + L4 | 0, J4 = R4 = (R4 >>> 0 > (P7 = R4 + P7 | 0) >>> 0 ? I7 + 1 : I7) << 1 | P7 >>> 31, d5 = L4 = 33554432 + (N4 = P7 << 1) | 0, m4 = R4 = L4 >>> 0 < 33554432 ? R4 + 1 | 0 : R4, I7 = R4 >> 26, T2 = (67108863 & R4) << 6 | L4 >>> 26, R4 = Ig($2, B4, j2, _4), P7 = f3, L4 = (IA2 = Ig(V2 <<= 1, h4 = V2 >> 31, D4, G4 = D4 >> 31)) + R4 | 0, R4 = f3 + P7 | 0, R4 = L4 >>> 0 < IA2 >>> 0 ? R4 + 1 | 0 : R4, P7 = (IA2 = Ig(t4, n5 = t4 >> 31, Z2, Q5)) + L4 | 0, L4 = f3 + R4 | 0, L4 = P7 >>> 0 < IA2 >>> 0 ? L4 + 1 | 0 : L4, iA2 = Ig(O2, c4, IA2 = e6 << 1, M4 = IA2 >> 31), R4 = f3 + L4 | 0, R4 = (P7 = iA2 + P7 | 0) >>> 0 < iA2 >>> 0 ? R4 + 1 | 0 : R4, L4 = Ig(X2, o4, g6, r4 = g6 >> 31), R4 = f3 + R4 | 0, I7 = I7 + (L4 = (L4 >>> 0 > (P7 = L4 + P7 | 0) >>> 0 ? R4 + 1 : R4) << 1 | P7 >>> 31) | 0, iA2 = P7 = (R4 = P7 << 1) + T2 | 0, R4 = I7 = R4 >>> 0 > P7 >>> 0 ? I7 + 1 | 0 : I7, l4 = P7 = P7 + 16777216 | 0, T2 = (33554431 & (R4 = P7 >>> 0 < 16777216 ? R4 + 1 | 0 : R4)) << 7 | P7 >>> 25, P7 = R4 >> 25, I7 = Ig(C4, E4, D4, G4), R4 = f3, L4 = Ig(j2, _4, V2, h4), R4 = f3 + R4 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, L4 = Ig($2, B4, AA2, s4), R4 = f3 + R4 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, L4 = (gA2 = Ig(Z2, Q5, g6, r4)) + I7 | 0, I7 = f3 + R4 | 0, I7 = L4 >>> 0 < gA2 >>> 0 ? I7 + 1 | 0 : I7, gA2 = Ig(O2, c4, y4, k4 = y4 >> 31), R4 = f3 + I7 | 0, R4 = (L4 = gA2 + L4 | 0) >>> 0 < gA2 >>> 0 ? R4 + 1 | 0 : R4, I7 = (gA2 = Ig(X2, o4, IA2, M4)) + L4 | 0, L4 = f3 + R4 | 0, I7 = ((R4 = I7) >>> 0 < gA2 >>> 0 ? L4 + 1 : L4) << 1 | R4 >>> 31, L4 = T2, T2 = R4 << 1, R4 = I7 + P7 | 0, R4 = (L4 = L4 + T2 | 0) >>> 0 < T2 >>> 0 ? R4 + 1 | 0 : R4, gA2 = I7 = L4 + 33554432 | 0, P7 = R4 = I7 >>> 0 < 33554432 ? R4 + 1 | 0 : R4, i4[A8 + 24 >> 2] = L4 - (-67108864 & I7), L4 = Ig(I7 = a3(t4, 38), I7 >> 31, t4, n5), T2 = f3, I7 = (R4 = Ig(I7 = z2, R4 = I7 >> 31, I7, R4)) + L4 | 0, L4 = f3 + T2 | 0, L4 = I7 >>> 0 < R4 >>> 0 ? L4 + 1 | 0 : L4, CA2 = Ig(z2 = a3(g6, 19), K4 = z2 >> 31, T2 = j2 << 1, U4 = T2 >> 31), R4 = f3 + L4 | 0, R4 = (I7 = CA2 + I7 | 0) >>> 0 < CA2 >>> 0 ? R4 + 1 | 0 : R4, L4 = Ig(C4, E4, BA2, w4), R4 = f3 + R4 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, L4 = (CA2 = Ig(O2, c4, V2, h4)) + I7 | 0, I7 = f3 + R4 | 0, I7 = L4 >>> 0 < CA2 >>> 0 ? I7 + 1 | 0 : I7, CA2 = Ig($2, B4, X2, o4), R4 = f3 + I7 | 0, CA2 = R4 = ((L4 = CA2 + L4 | 0) >>> 0 < CA2 >>> 0 ? R4 + 1 : R4) << 1 | L4 >>> 31, u4 = I7 = 33554432 + (b5 = L4 << 1) | 0, x4 = L4 = I7 >>> 0 < 33554432 ? R4 + 1 | 0 : R4, QA2 = (67108863 & L4) << 6 | I7 >>> 26, oA2 = L4 >> 26, I7 = Ig(z2, K4, AA2, s4), R4 = f3, L4 = Ig(Z2, Q5, q3, Y4 = q3 >> 31), R4 = f3 + R4 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, L4 = (W2 = Ig(j2, _4, BA2, w4)) + I7 | 0, I7 = f3 + R4 | 0, I7 = L4 >>> 0 < W2 >>> 0 ? I7 + 1 | 0 : I7, W2 = Ig(O2, c4, C4, E4), R4 = f3 + I7 | 0, R4 = (L4 = W2 + L4 | 0) >>> 0 < W2 >>> 0 ? R4 + 1 | 0 : R4, W2 = (I7 = Ig(X2, o4, F4, p4)) + L4 | 0, L4 = f3 + R4 | 0, R4 = (I7 = (I7 >>> 0 > W2 >>> 0 ? L4 + 1 : L4) << 1 | W2 >>> 31) + oA2 | 0, R4 = (L4 = (W2 <<= 1) + QA2 | 0) >>> 0 < W2 >>> 0 ? R4 + 1 | 0 : R4, oA2 = L4, W2 = L4 = L4 + 16777216 | 0, v4 = (33554431 & (R4 = L4 >>> 0 < 16777216 ? R4 + 1 | 0 : R4)) << 7 | L4 >>> 25, QA2 = R4 >> 25, I7 = Ig(Z2, Q5, F4, p4), R4 = f3, L4 = Ig($2, B4, q3, Y4), R4 = f3 + R4 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, q3 = Ig(z2, K4, g6, r4), L4 = f3 + R4 | 0, L4 = (I7 = q3 + I7 | 0) >>> 0 < q3 >>> 0 ? L4 + 1 | 0 : L4, q3 = Ig(AA2, s4, BA2, w4), R4 = f3 + L4 | 0, R4 = (I7 = q3 + I7 | 0) >>> 0 < q3 >>> 0 ? R4 + 1 | 0 : R4, L4 = Ig(O2, c4, T2, U4), R4 = f3 + R4 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, L4 = (q3 = Ig(X2, o4, C4, E4)) + I7 | 0, I7 = f3 + R4 | 0, R4 = (R4 = (L4 >>> 0 < q3 >>> 0 ? I7 + 1 : I7) << 1 | L4 >>> 31) + QA2 | 0, z2 = I7 = (L4 <<= 1) + v4 | 0, R4 = I7 >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, QA2 = I7 = I7 + 33554432 | 0, q3 = L4 = I7 >>> 0 < 33554432 ? R4 + 1 | 0 : R4, i4[A8 + 8 >> 2] = z2 - (-67108864 & I7), I7 = Ig(V2, h4, t4, n5), L4 = f3, R4 = (z2 = Ig(j2, _4, C4, E4)) + I7 | 0, I7 = f3 + L4 | 0, I7 = R4 >>> 0 < z2 >>> 0 ? I7 + 1 | 0 : I7, L4 = (z2 = Ig($2, B4, g6, r4)) + R4 | 0, R4 = f3 + I7 | 0, R4 = L4 >>> 0 < z2 >>> 0 ? R4 + 1 | 0 : R4, I7 = (z2 = Ig(Z2, Q5, e6, S4)) + L4 | 0, L4 = f3 + R4 | 0, L4 = I7 >>> 0 < z2 >>> 0 ? L4 + 1 | 0 : L4, z2 = Ig(X2, o4, y4, k4), R4 = f3 + L4 | 0, R4 = (R4 = ((I7 = z2 + I7 | 0) >>> 0 < z2 >>> 0 ? R4 + 1 : R4) << 1 | I7 >>> 31) + (L4 = P7 >> 26) | 0, I7 = (L4 = P7 = (z2 = I7 << 1) + (I7 = (67108863 & P7) << 6 | gA2 >>> 26) | 0) >>> 0 < I7 >>> 0 ? R4 + 1 | 0 : R4, z2 = R4 = L4 + 16777216 | 0, P7 = I7 = R4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7, i4[A8 + 28 >> 2] = L4 - (-33554432 & R4), I7 = Ig(Z2, Q5, D4, G4), R4 = f3, L4 = Ig($2, B4, F4, p4), R4 = f3 + R4 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, L4 = Ig(g6, r4, BA2, w4), R4 = f3 + R4 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, L4 = (O2 = Ig(O2, c4, AA2, s4)) + I7 | 0, I7 = f3 + R4 | 0, I7 = L4 >>> 0 < O2 >>> 0 ? I7 + 1 | 0 : I7, R4 = (O2 = Ig(X2, o4, j2, _4)) + L4 | 0, L4 = f3 + I7 | 0, I7 = R4, R4 = (R4 >>> 0 < O2 >>> 0 ? L4 + 1 : L4) << 1 | R4 >>> 31, L4 = I7 << 1, R4 = (I7 = q3 >> 26) + R4 | 0, R4 = (L4 = L4 + (q3 = (67108863 & q3) << 6 | QA2 >>> 26) | 0) >>> 0 < q3 >>> 0 ? R4 + 1 | 0 : R4, O2 = I7 = L4 + 16777216 | 0, q3 = R4 = I7 >>> 0 < 16777216 ? R4 + 1 | 0 : R4, i4[A8 + 12 >> 2] = L4 - (-33554432 & I7), I7 = Ig(g6, r4, V2, h4), R4 = f3, L4 = Ig(j2, _4, j2, _4), R4 = f3 + R4 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, L4 = Ig(C4, E4, AA2, s4), R4 = f3 + R4 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, L4 = Ig($2, B4, IA2, M4), R4 = f3 + R4 | 0, R4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? R4 + 1 | 0 : R4, L4 = (j2 = Ig(Z2, Q5, y4, k4)) + I7 | 0, I7 = f3 + R4 | 0, I7 = L4 >>> 0 < j2 >>> 0 ? I7 + 1 | 0 : I7, R4 = (j2 = Ig(R4 = X2, o4, X2 = H4, AA2 = X2 >> 31)) + L4 | 0, L4 = f3 + I7 | 0, I7 = R4, R4 = (R4 >>> 0 < j2 >>> 0 ? L4 + 1 : L4) << 1 | R4 >>> 31, L4 = I7 << 1, R4 = (I7 = P7 >> 25) + R4 | 0, R4 = (L4 = L4 + (P7 = (33554431 & P7) << 7 | z2 >>> 25) | 0) >>> 0 < P7 >>> 0 ? R4 + 1 | 0 : R4, j2 = I7 = L4 + 33554432 | 0, P7 = R4 = I7 >>> 0 < 33554432 ? R4 + 1 | 0 : R4, i4[A8 + 32 >> 2] = L4 - (-67108864 & I7), R4 = q3 >> 25, L4 = (q3 = (33554431 & q3) << 7 | O2 >>> 25) + (N4 - (I7 = -67108864 & d5) | 0) | 0, I7 = R4 + (J4 - ((I7 >>> 0 > N4 >>> 0) + m4 | 0) | 0) | 0, I7 = L4 >>> 0 < q3 >>> 0 ? I7 + 1 | 0 : I7, q3 = L4, R4 = I7, I7 = ((67108863 & (R4 = (L4 = L4 + 33554432 | 0) >>> 0 < 33554432 ? R4 + 1 | 0 : R4)) << 6 | L4 >>> 26) + (BA2 = iA2 - (-33554432 & l4) | 0) | 0, i4[A8 + 20 >> 2] = I7, i4[A8 + 16 >> 2] = q3 - (-67108864 & L4), I7 = Ig(C4, E4, g6, r4), L4 = f3, R4 = (q3 = Ig(t4, n5, T2, U4)) + I7 | 0, I7 = f3 + L4 | 0, I7 = R4 >>> 0 < q3 >>> 0 ? I7 + 1 | 0 : I7, L4 = (q3 = Ig(V2, h4, e6, S4)) + R4 | 0, R4 = f3 + I7 | 0, R4 = L4 >>> 0 < q3 >>> 0 ? R4 + 1 | 0 : R4, I7 = (q3 = Ig($2, B4, y4, k4)) + L4 | 0, L4 = f3 + R4 | 0, L4 = I7 >>> 0 < q3 >>> 0 ? L4 + 1 | 0 : L4, q3 = Ig(Z2, Q5, X2, AA2), R4 = f3 + L4 | 0, R4 = ((I7 = q3 + I7 | 0) >>> 0 < q3 >>> 0 ? R4 + 1 : R4) << 1 | I7 >>> 31, q3 = I7 << 1, R4 = R4 + (L4 = P7 >> 26) | 0, I7 = (I7 = (67108863 & P7) << 6 | j2 >>> 26) >>> 0 > (P7 = q3 + I7 | 0) >>> 0 ? R4 + 1 | 0 : R4, I7 = (R4 = P7 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, i4[A8 + 36 >> 2] = P7 - (-33554432 & R4), q3 = oA2 - (-33554432 & W2) | 0, P7 = b5 - (L4 = -67108864 & u4) | 0, $2 = CA2 - ((L4 >>> 0 > b5 >>> 0) + x4 | 0) | 0, I7 = Ig((33554431 & I7) << 7 | R4 >>> 25, I7 >> 25, 19, 0), L4 = f3 + $2 | 0, P7 = R4 = I7 + P7 | 0, I7 = I7 >>> 0 > R4 >>> 0 ? L4 + 1 | 0 : L4, I7 = ((67108863 & (I7 = (R4 = R4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | R4 >>> 26) + q3 | 0, i4[A8 + 4 >> 2] = I7, i4[A8 >> 2] = P7 - (-67108864 & R4);
                    }
                    function R3(A8, I7) {
                      var g6, C4, B4, Q5, o4, E4, _4, c4, t4, r4, e6, y4, s4, h4, D4, p4, w4, n5, k4, F4, S4, N4, G4, M4, K4, U4, b5, H4, Y4, J4, d5, m4, l4 = 0, u4 = 0, x4 = 0, v4 = 0, R4 = 0, L4 = 0, P7 = 0, q3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, W2 = 0, V2 = 0, Z2 = 0, T2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0;
                      l4 = Ig(C4 = (p4 = i4[I7 + 12 >> 2]) << 1, E4 = C4 >> 31, p4, S4 = p4 >> 31), x4 = f3, u4 = (z2 = Ig(R4 = i4[I7 + 16 >> 2], _4 = R4 >> 31, c4 = (v4 = i4[I7 + 8 >> 2]) << 1, y4 = c4 >> 31)) + l4 | 0, l4 = f3 + x4 | 0, l4 = u4 >>> 0 < z2 >>> 0 ? l4 + 1 | 0 : l4, x4 = (j2 = Ig(W2 = (t4 = i4[I7 + 20 >> 2]) << 1, s4 = W2 >> 31, z2 = (L4 = i4[I7 + 4 >> 2]) << 1, B4 = z2 >> 31)) + u4 | 0, u4 = f3 + l4 | 0, u4 = x4 >>> 0 < j2 >>> 0 ? u4 + 1 | 0 : u4, P7 = Ig(g6 = i4[I7 + 24 >> 2], r4 = g6 >> 31, j2 = (T2 = i4[I7 >> 2]) << 1, Q5 = j2 >> 31), l4 = f3 + u4 | 0, l4 = (x4 = P7 + x4 | 0) >>> 0 < P7 >>> 0 ? l4 + 1 | 0 : l4, u4 = x4, h4 = i4[I7 + 32 >> 2], x4 = Ig(X2 = a3(h4, 19), e6 = X2 >> 31, h4, n5 = h4 >> 31), l4 = f3 + l4 | 0, l4 = (u4 = u4 + x4 | 0) >>> 0 < x4 >>> 0 ? l4 + 1 | 0 : l4, U4 = i4[I7 + 36 >> 2], x4 = Ig(P7 = a3(U4, 38), o4 = P7 >> 31, k4 = (D4 = i4[I7 + 28 >> 2]) << 1, N4 = k4 >> 31), I7 = f3 + l4 | 0, Z2 = u4 = x4 + u4 | 0, x4 = u4 >>> 0 < x4 >>> 0 ? I7 + 1 | 0 : I7, I7 = Ig(z2, B4, R4, _4), l4 = f3, u4 = Ig(c4, y4, p4, S4), l4 = f3 + l4 | 0, l4 = (I7 = u4 + I7 | 0) >>> 0 < u4 >>> 0 ? l4 + 1 | 0 : l4, q3 = Ig(t4, F4 = t4 >> 31, j2, Q5), u4 = f3 + l4 | 0, u4 = (I7 = q3 + I7 | 0) >>> 0 < q3 >>> 0 ? u4 + 1 | 0 : u4, q3 = Ig(X2, e6, k4, N4), l4 = f3 + u4 | 0, l4 = (I7 = q3 + I7 | 0) >>> 0 < q3 >>> 0 ? l4 + 1 | 0 : l4, u4 = Ig(P7, o4, g6, r4), l4 = f3 + l4 | 0, CA2 = I7 = u4 + I7 | 0, O2 = I7 >>> 0 < u4 >>> 0 ? l4 + 1 | 0 : l4, l4 = Ig(z2, B4, C4, E4), u4 = f3, G4 = I7 = v4, v4 = Ig(I7, V2 = I7 >> 31, I7, V2), I7 = f3 + u4 | 0, I7 = (l4 = v4 + l4 | 0) >>> 0 < v4 >>> 0 ? I7 + 1 | 0 : I7, u4 = (v4 = Ig(j2, Q5, R4, _4)) + l4 | 0, l4 = f3 + I7 | 0, l4 = u4 >>> 0 < v4 >>> 0 ? l4 + 1 | 0 : l4, I7 = (v4 = Ig(q3 = a3(D4, 38), w4 = q3 >> 31, D4, M4 = D4 >> 31)) + u4 | 0, u4 = f3 + l4 | 0, u4 = I7 >>> 0 < v4 >>> 0 ? u4 + 1 | 0 : u4, I7 = (l4 = I7) + (v4 = Ig(X2, e6, I7 = g6 << 1, I7 >> 31)) | 0, l4 = f3 + u4 | 0, l4 = I7 >>> 0 < v4 >>> 0 ? l4 + 1 | 0 : l4, u4 = I7, I7 = Ig(P7, o4, W2, s4), l4 = f3 + l4 | 0, b5 = u4 = u4 + I7 | 0, H4 = l4 = I7 >>> 0 > u4 >>> 0 ? l4 + 1 | 0 : l4, I7 = l4, Y4 = u4 = u4 + 33554432 | 0, J4 = I7 = u4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, l4 = (l4 = I7 >> 26) + O2 | 0, CA2 = I7 = (u4 = (67108863 & I7) << 6 | u4 >>> 26) + CA2 | 0, l4 = I7 >>> 0 < u4 >>> 0 ? l4 + 1 | 0 : l4, d5 = I7 = I7 + 16777216 | 0, l4 = (l4 = (u4 = I7 >>> 0 < 16777216 ? l4 + 1 | 0 : l4) >> 25) + x4 | 0, I7 = (I7 = (33554431 & u4) << 7 | I7 >>> 25) >>> 0 > (u4 = I7 + Z2 | 0) >>> 0 ? l4 + 1 | 0 : l4, Z2 = l4 = u4 + 33554432 | 0, v4 = I7 = l4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, i4[A8 + 24 >> 2] = u4 - (-67108864 & l4), I7 = Ig(j2, Q5, G4, V2), l4 = f3, x4 = Ig(z2, B4, L4, $2 = L4 >> 31), u4 = f3 + l4 | 0, u4 = (I7 = x4 + I7 | 0) >>> 0 < x4 >>> 0 ? u4 + 1 | 0 : u4, O2 = Ig(x4 = a3(g6, 19), gA2 = x4 >> 31, g6, r4), l4 = f3 + u4 | 0, l4 = (I7 = O2 + I7 | 0) >>> 0 < O2 >>> 0 ? l4 + 1 | 0 : l4, u4 = (O2 = Ig(W2, s4, q3, w4)) + I7 | 0, I7 = f3 + l4 | 0, I7 = u4 >>> 0 < O2 >>> 0 ? I7 + 1 | 0 : I7, AA2 = Ig(X2, e6, O2 = R4 << 1, K4 = O2 >> 31), l4 = f3 + I7 | 0, l4 = (u4 = AA2 + u4 | 0) >>> 0 < AA2 >>> 0 ? l4 + 1 | 0 : l4, I7 = u4, u4 = Ig(P7, o4, C4, E4), l4 = f3 + l4 | 0, IA2 = I7 = I7 + u4 | 0, AA2 = I7 >>> 0 < u4 >>> 0 ? l4 + 1 | 0 : l4, I7 = Ig(W2, s4, x4, gA2), l4 = f3, L4 = Ig(j2, Q5, L4, $2), u4 = f3 + l4 | 0, u4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? u4 + 1 | 0 : u4, L4 = Ig(R4, _4, q3, w4), l4 = f3 + u4 | 0, l4 = (I7 = L4 + I7 | 0) >>> 0 < L4 >>> 0 ? l4 + 1 | 0 : l4, u4 = (L4 = Ig(X2, e6, C4, E4)) + I7 | 0, I7 = f3 + l4 | 0, I7 = u4 >>> 0 < L4 >>> 0 ? I7 + 1 | 0 : I7, L4 = Ig(P7, o4, G4, V2), l4 = f3 + I7 | 0, BA2 = u4 = L4 + u4 | 0, $2 = u4 >>> 0 < L4 >>> 0 ? l4 + 1 | 0 : l4, u4 = Ig(I7 = a3(t4, 38), I7 >> 31, t4, F4), L4 = f3, I7 = T2, T2 = u4, u4 = Ig(I7, l4 = I7 >> 31, I7, l4), l4 = f3 + L4 | 0, l4 = (I7 = T2 + u4 | 0) >>> 0 < u4 >>> 0 ? l4 + 1 | 0 : l4, x4 = Ig(x4, gA2, O2, K4), u4 = f3 + l4 | 0, u4 = (I7 = x4 + I7 | 0) >>> 0 < x4 >>> 0 ? u4 + 1 | 0 : u4, x4 = Ig(C4, E4, q3, w4), l4 = f3 + u4 | 0, l4 = (I7 = x4 + I7 | 0) >>> 0 < x4 >>> 0 ? l4 + 1 | 0 : l4, u4 = (x4 = Ig(X2, e6, c4, y4)) + I7 | 0, I7 = f3 + l4 | 0, I7 = u4 >>> 0 < x4 >>> 0 ? I7 + 1 | 0 : I7, x4 = Ig(z2, B4, P7, o4), l4 = f3 + I7 | 0, L4 = u4 = x4 + u4 | 0, T2 = l4 = u4 >>> 0 < x4 >>> 0 ? l4 + 1 | 0 : l4, gA2 = u4 = u4 + 33554432 | 0, m4 = l4 = u4 >>> 0 < 33554432 ? l4 + 1 | 0 : l4, I7 = l4 >> 26, l4 = (67108863 & l4) << 6 | u4 >>> 26, u4 = I7 + $2 | 0, $2 = x4 = l4 + BA2 | 0, l4 = l4 >>> 0 > x4 >>> 0 ? u4 + 1 | 0 : u4, BA2 = u4 = x4 + 16777216 | 0, x4 = (33554431 & (l4 = u4 >>> 0 < 16777216 ? l4 + 1 | 0 : l4)) << 7 | u4 >>> 25, l4 = (l4 >> 25) + AA2 | 0, l4 = (u4 = x4 + IA2 | 0) >>> 0 < x4 >>> 0 ? l4 + 1 | 0 : l4, AA2 = I7 = u4 + 33554432 | 0, x4 = l4 = I7 >>> 0 < 33554432 ? l4 + 1 | 0 : l4, i4[A8 + 8 >> 2] = u4 - (-67108864 & I7), I7 = Ig(c4, y4, t4, F4), l4 = f3, u4 = Ig(R4, _4, C4, E4), l4 = f3 + l4 | 0, l4 = (I7 = u4 + I7 | 0) >>> 0 < u4 >>> 0 ? l4 + 1 | 0 : l4, u4 = Ig(z2, B4, g6, r4), l4 = f3 + l4 | 0, l4 = (I7 = u4 + I7 | 0) >>> 0 < u4 >>> 0 ? l4 + 1 | 0 : l4, u4 = Ig(j2, Q5, D4, M4), l4 = f3 + l4 | 0, l4 = (I7 = u4 + I7 | 0) >>> 0 < u4 >>> 0 ? l4 + 1 | 0 : l4, IA2 = (u4 = Ig(P7, o4, h4, n5)) + I7 | 0, I7 = f3 + l4 | 0, u4 = (l4 = v4 >> 26) + (u4 = u4 >>> 0 > IA2 >>> 0 ? I7 + 1 | 0 : I7) | 0, Z2 = I7 = (v4 = (67108863 & v4) << 6 | Z2 >>> 26) + IA2 | 0, l4 = I7 >>> 0 < v4 >>> 0 ? u4 + 1 | 0 : u4, IA2 = I7 = I7 + 16777216 | 0, v4 = l4 = I7 >>> 0 < 16777216 ? l4 + 1 | 0 : l4, i4[A8 + 28 >> 2] = Z2 - (-33554432 & I7), I7 = Ig(j2, Q5, p4, S4), u4 = f3, l4 = (V2 = Ig(z2, B4, G4, V2)) + I7 | 0, I7 = f3 + u4 | 0, I7 = l4 >>> 0 < V2 >>> 0 ? I7 + 1 | 0 : I7, l4 = (q3 = Ig(g6, r4, q3, w4)) + l4 | 0, u4 = f3 + I7 | 0, I7 = (X2 = Ig(X2, e6, W2, s4)) + l4 | 0, l4 = f3 + (l4 >>> 0 < q3 >>> 0 ? u4 + 1 | 0 : u4) | 0, l4 = I7 >>> 0 < X2 >>> 0 ? l4 + 1 | 0 : l4, u4 = Ig(P7, o4, R4, _4), l4 = f3 + l4 | 0, l4 = (l4 = (I7 = u4 + I7 | 0) >>> 0 < u4 >>> 0 ? l4 + 1 | 0 : l4) + (u4 = x4 >> 26) | 0, I7 = (u4 = x4 = (Z2 = I7) + (I7 = (67108863 & x4) << 6 | AA2 >>> 26) | 0) >>> 0 < I7 >>> 0 ? l4 + 1 | 0 : l4, X2 = l4 = u4 + 16777216 | 0, x4 = I7 = l4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7, i4[A8 + 12 >> 2] = u4 - (-33554432 & l4), I7 = Ig(g6, r4, c4, y4), l4 = f3, u4 = Ig(R4, _4, R4, _4), l4 = f3 + l4 | 0, l4 = (I7 = u4 + I7 | 0) >>> 0 < u4 >>> 0 ? l4 + 1 | 0 : l4, u4 = Ig(C4, E4, W2, s4), l4 = f3 + l4 | 0, l4 = (I7 = u4 + I7 | 0) >>> 0 < u4 >>> 0 ? l4 + 1 | 0 : l4, u4 = (R4 = Ig(z2, B4, k4, N4)) + I7 | 0, I7 = f3 + l4 | 0, I7 = u4 >>> 0 < R4 >>> 0 ? I7 + 1 | 0 : I7, l4 = (R4 = Ig(j2, Q5, h4, n5)) + u4 | 0, u4 = f3 + I7 | 0, u4 = l4 >>> 0 < R4 >>> 0 ? u4 + 1 | 0 : u4, I7 = (R4 = Ig(I7 = P7, o4, P7 = U4, W2 = P7 >> 31)) + l4 | 0, l4 = f3 + u4 | 0, l4 = I7 >>> 0 < R4 >>> 0 ? l4 + 1 | 0 : l4, u4 = I7, l4 = (I7 = v4 >> 25) + l4 | 0, l4 = (u4 = u4 + (v4 = (33554431 & v4) << 7 | IA2 >>> 25) | 0) >>> 0 < v4 >>> 0 ? l4 + 1 | 0 : l4, R4 = I7 = u4 + 33554432 | 0, v4 = l4 = I7 >>> 0 < 33554432 ? l4 + 1 | 0 : l4, i4[A8 + 32 >> 2] = u4 - (-67108864 & I7), l4 = x4 >> 25, u4 = (x4 = (33554431 & x4) << 7 | X2 >>> 25) + (b5 - (I7 = -67108864 & Y4) | 0) | 0, I7 = l4 + (H4 - ((I7 >>> 0 > b5 >>> 0) + J4 | 0) | 0) | 0, I7 = u4 >>> 0 < x4 >>> 0 ? I7 + 1 | 0 : I7, x4 = u4, I7 = ((67108863 & (l4 = (u4 = u4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | u4 >>> 26) + (q3 = CA2 - (-33554432 & d5) | 0) | 0, i4[A8 + 20 >> 2] = I7, i4[A8 + 16 >> 2] = x4 - (-67108864 & u4), I7 = Ig(C4, E4, g6, r4), u4 = f3, l4 = (x4 = Ig(t4, F4, O2, K4)) + I7 | 0, I7 = f3 + u4 | 0, I7 = l4 >>> 0 < x4 >>> 0 ? I7 + 1 | 0 : I7, u4 = (x4 = Ig(c4, y4, D4, M4)) + l4 | 0, l4 = f3 + I7 | 0, l4 = u4 >>> 0 < x4 >>> 0 ? l4 + 1 | 0 : l4, I7 = (x4 = Ig(z2, B4, h4, n5)) + u4 | 0, u4 = f3 + l4 | 0, u4 = I7 >>> 0 < x4 >>> 0 ? u4 + 1 | 0 : u4, x4 = (l4 = I7) + (I7 = Ig(j2, Q5, P7, W2)) | 0, l4 = f3 + u4 | 0, l4 = (I7 = I7 >>> 0 > x4 >>> 0 ? l4 + 1 | 0 : l4) + (l4 = v4 >> 26) | 0, I7 = (u4 = (v4 = (67108863 & v4) << 6 | R4 >>> 26) + x4 | 0) >>> 0 < v4 >>> 0 ? l4 + 1 | 0 : l4, I7 = (l4 = u4 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, i4[A8 + 36 >> 2] = u4 - (-33554432 & l4), v4 = $2 - (-33554432 & BA2) | 0, x4 = L4 - (u4 = -67108864 & gA2) | 0, z2 = T2 - ((u4 >>> 0 > L4 >>> 0) + m4 | 0) | 0, I7 = Ig((33554431 & I7) << 7 | l4 >>> 25, I7 >> 25, 19, 0), l4 = f3 + z2 | 0, I7 = I7 >>> 0 > (u4 = I7 + x4 | 0) >>> 0 ? l4 + 1 | 0 : l4, I7 = ((67108863 & (I7 = (l4 = u4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | l4 >>> 26) + v4 | 0, i4[A8 + 4 >> 2] = I7, i4[A8 >> 2] = u4 - (-67108864 & l4);
                    }
                    function L3(A8, I7) {
                      var g6, C4, B4, Q5, E4, a4, _4, c4, t4, r4, e6 = 0, y4 = 0, h4 = 0;
                      s3 = g6 = s3 - 416 | 0, C4 = o3[A8 + 16 | 0] | o3[A8 + 17 | 0] << 8 | o3[A8 + 18 | 0] << 16 | o3[A8 + 19 | 0] << 24, B4 = o3[A8 + 20 | 0] | o3[A8 + 21 | 0] << 8 | o3[A8 + 22 | 0] << 16 | o3[A8 + 23 | 0] << 24, Q5 = o3[A8 + 24 | 0] | o3[A8 + 25 | 0] << 8 | o3[A8 + 26 | 0] << 16 | o3[A8 + 27 | 0] << 24, E4 = o3[A8 + 28 | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24, h4 = o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24, a4 = o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24, _4 = o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24, c4 = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, A8 = i4[I7 + 92 >> 2], i4[g6 + 408 >> 2] = i4[I7 + 88 >> 2], i4[g6 + 412 >> 2] = A8, A8 = i4[I7 + 84 >> 2], i4[g6 + 400 >> 2] = i4[I7 + 80 >> 2], i4[g6 + 404 >> 2] = A8, A8 = i4[I7 + 76 >> 2], i4[g6 + 376 >> 2] = i4[I7 + 72 >> 2], i4[g6 + 380 >> 2] = A8, e6 = i4[4 + (A8 = y4 = I7 - -64 | 0) >> 2], i4[g6 + 368 >> 2] = i4[A8 >> 2], i4[g6 + 372 >> 2] = e6, A8 = i4[I7 + 92 >> 2], i4[g6 + 360 >> 2] = i4[I7 + 88 >> 2], i4[g6 + 364 >> 2] = A8, A8 = i4[I7 + 84 >> 2], i4[g6 + 352 >> 2] = i4[I7 + 80 >> 2], i4[g6 + 356 >> 2] = A8, AI(A8 = g6 + 384 | 0, g6 + 368 | 0, g6 + 352 | 0), e6 = i4[g6 + 396 >> 2], i4[I7 + 88 >> 2] = i4[g6 + 392 >> 2], i4[I7 + 92 >> 2] = e6, e6 = i4[g6 + 388 >> 2], i4[I7 + 80 >> 2] = i4[g6 + 384 >> 2], i4[I7 + 84 >> 2] = e6, e6 = i4[I7 + 60 >> 2], i4[g6 + 344 >> 2] = i4[I7 + 56 >> 2], i4[g6 + 348 >> 2] = e6, e6 = i4[I7 + 52 >> 2], i4[g6 + 336 >> 2] = i4[I7 + 48 >> 2], i4[g6 + 340 >> 2] = e6, e6 = i4[I7 + 76 >> 2], i4[g6 + 328 >> 2] = i4[I7 + 72 >> 2], i4[g6 + 332 >> 2] = e6, e6 = i4[y4 + 4 >> 2], i4[g6 + 320 >> 2] = i4[y4 >> 2], i4[g6 + 324 >> 2] = e6, AI(A8, g6 + 336 | 0, g6 + 320 | 0), e6 = i4[g6 + 396 >> 2], i4[I7 + 72 >> 2] = i4[g6 + 392 >> 2], i4[I7 + 76 >> 2] = e6, e6 = i4[g6 + 388 >> 2], i4[y4 >> 2] = i4[g6 + 384 >> 2], i4[y4 + 4 >> 2] = e6, e6 = i4[I7 + 44 >> 2], i4[g6 + 312 >> 2] = i4[I7 + 40 >> 2], i4[g6 + 316 >> 2] = e6, e6 = i4[I7 + 36 >> 2], i4[g6 + 304 >> 2] = i4[I7 + 32 >> 2], i4[g6 + 308 >> 2] = e6, e6 = i4[I7 + 60 >> 2], i4[g6 + 296 >> 2] = i4[I7 + 56 >> 2], i4[g6 + 300 >> 2] = e6, e6 = i4[I7 + 52 >> 2], i4[g6 + 288 >> 2] = i4[I7 + 48 >> 2], i4[g6 + 292 >> 2] = e6, AI(A8, g6 + 304 | 0, g6 + 288 | 0), e6 = i4[g6 + 396 >> 2], i4[I7 + 56 >> 2] = i4[g6 + 392 >> 2], i4[I7 + 60 >> 2] = e6, e6 = i4[g6 + 388 >> 2], i4[I7 + 48 >> 2] = i4[g6 + 384 >> 2], i4[I7 + 52 >> 2] = e6, e6 = i4[I7 + 28 >> 2], i4[g6 + 280 >> 2] = i4[I7 + 24 >> 2], i4[g6 + 284 >> 2] = e6, e6 = i4[I7 + 20 >> 2], i4[g6 + 272 >> 2] = i4[I7 + 16 >> 2], i4[g6 + 276 >> 2] = e6, e6 = i4[I7 + 44 >> 2], i4[g6 + 264 >> 2] = i4[I7 + 40 >> 2], i4[g6 + 268 >> 2] = e6, e6 = i4[I7 + 36 >> 2], i4[g6 + 256 >> 2] = i4[I7 + 32 >> 2], i4[g6 + 260 >> 2] = e6, AI(A8, g6 + 272 | 0, g6 + 256 | 0), e6 = i4[g6 + 396 >> 2], i4[I7 + 40 >> 2] = i4[g6 + 392 >> 2], i4[I7 + 44 >> 2] = e6, e6 = i4[g6 + 388 >> 2], i4[I7 + 32 >> 2] = i4[g6 + 384 >> 2], i4[I7 + 36 >> 2] = e6, e6 = i4[I7 + 12 >> 2], i4[g6 + 248 >> 2] = i4[I7 + 8 >> 2], i4[g6 + 252 >> 2] = e6, e6 = i4[I7 + 4 >> 2], i4[g6 + 240 >> 2] = i4[I7 >> 2], i4[g6 + 244 >> 2] = e6, e6 = i4[I7 + 28 >> 2], i4[g6 + 232 >> 2] = i4[I7 + 24 >> 2], i4[g6 + 236 >> 2] = e6, e6 = i4[I7 + 20 >> 2], i4[g6 + 224 >> 2] = i4[I7 + 16 >> 2], i4[g6 + 228 >> 2] = e6, AI(A8, g6 + 240 | 0, g6 + 224 | 0), e6 = i4[g6 + 396 >> 2], i4[I7 + 24 >> 2] = i4[g6 + 392 >> 2], i4[I7 + 28 >> 2] = e6, e6 = i4[g6 + 388 >> 2], i4[I7 + 16 >> 2] = i4[g6 + 384 >> 2], i4[I7 + 20 >> 2] = e6, e6 = i4[g6 + 412 >> 2], i4[g6 + 216 >> 2] = i4[g6 + 408 >> 2], i4[g6 + 220 >> 2] = e6, e6 = i4[g6 + 404 >> 2], i4[g6 + 208 >> 2] = i4[g6 + 400 >> 2], i4[g6 + 212 >> 2] = e6, e6 = i4[I7 + 12 >> 2], i4[g6 + 200 >> 2] = i4[I7 + 8 >> 2], i4[g6 + 204 >> 2] = e6, e6 = i4[I7 + 4 >> 2], i4[g6 + 192 >> 2] = i4[I7 >> 2], i4[g6 + 196 >> 2] = e6, AI(A8, g6 + 208 | 0, g6 + 192 | 0), e6 = i4[g6 + 384 >> 2], t4 = i4[g6 + 388 >> 2], r4 = i4[g6 + 392 >> 2], i4[I7 + 12 >> 2] = i4[g6 + 396 >> 2] ^ _4, i4[I7 + 8 >> 2] = a4 ^ r4, i4[I7 + 4 >> 2] = h4 ^ t4, i4[I7 >> 2] = e6 ^ c4, h4 = i4[I7 + 92 >> 2], i4[g6 + 408 >> 2] = i4[I7 + 88 >> 2], i4[g6 + 412 >> 2] = h4, h4 = i4[I7 + 84 >> 2], i4[g6 + 400 >> 2] = i4[I7 + 80 >> 2], i4[g6 + 404 >> 2] = h4, h4 = i4[I7 + 76 >> 2], i4[g6 + 184 >> 2] = i4[I7 + 72 >> 2], i4[g6 + 188 >> 2] = h4, h4 = i4[y4 + 4 >> 2], i4[g6 + 176 >> 2] = i4[y4 >> 2], i4[g6 + 180 >> 2] = h4, h4 = i4[I7 + 92 >> 2], i4[g6 + 168 >> 2] = i4[I7 + 88 >> 2], i4[g6 + 172 >> 2] = h4, h4 = i4[I7 + 84 >> 2], i4[g6 + 160 >> 2] = i4[I7 + 80 >> 2], i4[g6 + 164 >> 2] = h4, AI(A8, g6 + 176 | 0, g6 + 160 | 0), h4 = i4[g6 + 396 >> 2], i4[I7 + 88 >> 2] = i4[g6 + 392 >> 2], i4[I7 + 92 >> 2] = h4, h4 = i4[g6 + 388 >> 2], i4[I7 + 80 >> 2] = i4[g6 + 384 >> 2], i4[I7 + 84 >> 2] = h4, h4 = i4[I7 + 60 >> 2], i4[g6 + 152 >> 2] = i4[I7 + 56 >> 2], i4[g6 + 156 >> 2] = h4, h4 = i4[I7 + 52 >> 2], i4[g6 + 144 >> 2] = i4[I7 + 48 >> 2], i4[g6 + 148 >> 2] = h4, h4 = i4[I7 + 76 >> 2], i4[g6 + 136 >> 2] = i4[I7 + 72 >> 2], i4[g6 + 140 >> 2] = h4, h4 = i4[y4 + 4 >> 2], i4[g6 + 128 >> 2] = i4[y4 >> 2], i4[g6 + 132 >> 2] = h4, AI(A8, g6 + 144 | 0, g6 + 128 | 0), h4 = i4[g6 + 396 >> 2], i4[I7 + 72 >> 2] = i4[g6 + 392 >> 2], i4[I7 + 76 >> 2] = h4, h4 = i4[g6 + 388 >> 2], i4[y4 >> 2] = i4[g6 + 384 >> 2], i4[y4 + 4 >> 2] = h4, y4 = i4[I7 + 44 >> 2], i4[g6 + 120 >> 2] = i4[I7 + 40 >> 2], i4[g6 + 124 >> 2] = y4, y4 = i4[I7 + 36 >> 2], i4[g6 + 112 >> 2] = i4[I7 + 32 >> 2], i4[g6 + 116 >> 2] = y4, y4 = i4[I7 + 60 >> 2], i4[g6 + 104 >> 2] = i4[I7 + 56 >> 2], i4[g6 + 108 >> 2] = y4, y4 = i4[I7 + 52 >> 2], i4[g6 + 96 >> 2] = i4[I7 + 48 >> 2], i4[g6 + 100 >> 2] = y4, AI(A8, g6 + 112 | 0, g6 + 96 | 0), y4 = i4[g6 + 396 >> 2], i4[I7 + 56 >> 2] = i4[g6 + 392 >> 2], i4[I7 + 60 >> 2] = y4, y4 = i4[g6 + 388 >> 2], i4[I7 + 48 >> 2] = i4[g6 + 384 >> 2], i4[I7 + 52 >> 2] = y4, y4 = i4[I7 + 28 >> 2], i4[g6 + 88 >> 2] = i4[I7 + 24 >> 2], i4[g6 + 92 >> 2] = y4, y4 = i4[I7 + 20 >> 2], i4[g6 + 80 >> 2] = i4[I7 + 16 >> 2], i4[g6 + 84 >> 2] = y4, y4 = i4[I7 + 44 >> 2], i4[g6 + 72 >> 2] = i4[I7 + 40 >> 2], i4[g6 + 76 >> 2] = y4, y4 = i4[I7 + 36 >> 2], i4[g6 + 64 >> 2] = i4[I7 + 32 >> 2], i4[g6 + 68 >> 2] = y4, AI(A8, g6 + 80 | 0, g6 - -64 | 0), y4 = i4[g6 + 396 >> 2], i4[I7 + 40 >> 2] = i4[g6 + 392 >> 2], i4[I7 + 44 >> 2] = y4, y4 = i4[g6 + 388 >> 2], i4[I7 + 32 >> 2] = i4[g6 + 384 >> 2], i4[I7 + 36 >> 2] = y4, y4 = i4[I7 + 12 >> 2], i4[g6 + 56 >> 2] = i4[I7 + 8 >> 2], i4[g6 + 60 >> 2] = y4, y4 = i4[I7 + 4 >> 2], i4[g6 + 48 >> 2] = i4[I7 >> 2], i4[g6 + 52 >> 2] = y4, y4 = i4[I7 + 28 >> 2], i4[g6 + 40 >> 2] = i4[I7 + 24 >> 2], i4[g6 + 44 >> 2] = y4, y4 = i4[I7 + 20 >> 2], i4[g6 + 32 >> 2] = i4[I7 + 16 >> 2], i4[g6 + 36 >> 2] = y4, AI(A8, g6 + 48 | 0, g6 + 32 | 0), y4 = i4[g6 + 396 >> 2], i4[I7 + 24 >> 2] = i4[g6 + 392 >> 2], i4[I7 + 28 >> 2] = y4, y4 = i4[g6 + 388 >> 2], i4[I7 + 16 >> 2] = i4[g6 + 384 >> 2], i4[I7 + 20 >> 2] = y4, y4 = i4[g6 + 412 >> 2], i4[g6 + 24 >> 2] = i4[g6 + 408 >> 2], i4[g6 + 28 >> 2] = y4, y4 = i4[g6 + 404 >> 2], i4[g6 + 16 >> 2] = i4[g6 + 400 >> 2], i4[g6 + 20 >> 2] = y4, y4 = i4[I7 + 12 >> 2], i4[g6 + 8 >> 2] = i4[I7 + 8 >> 2], i4[g6 + 12 >> 2] = y4, y4 = i4[I7 + 4 >> 2], i4[g6 >> 2] = i4[I7 >> 2], i4[g6 + 4 >> 2] = y4, AI(A8, g6 + 16 | 0, g6), A8 = i4[g6 + 384 >> 2], y4 = i4[g6 + 388 >> 2], h4 = i4[g6 + 392 >> 2], i4[I7 + 12 >> 2] = i4[g6 + 396 >> 2] ^ E4, i4[I7 + 8 >> 2] = h4 ^ Q5, i4[I7 + 4 >> 2] = y4 ^ B4, i4[I7 >> 2] = A8 ^ C4, s3 = g6 + 416 | 0;
                    }
                    function P6(A8, I7, g6) {
                      var C4, B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, f4, p4 = 0, w4 = 0, n5 = 0;
                      for (s3 = C4 = s3 - 288 | 0, y4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, h4 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, D4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, c4 = o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24, t4 = o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24, r4 = o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24, f4 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, I7 = g6 + 112 | 0, A8 = 33620224 ^ (e6 = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24), i4[I7 >> 2] = A8, i4[(a4 = g6 + 96 | 0) >> 2] = 1427652059 ^ e6, i4[(_4 = g6 + 80 | 0) >> 2] = A8, w4 = e6 ^ f4, i4[(A8 = g6 - -64 | 0) >> 2] = w4, i4[g6 + 56 >> 2] = 1110511904, i4[g6 + 60 >> 2] = -584534669, i4[(B4 = g6 + 48 | 0) >> 2] = 1427652059, i4[B4 + 4 >> 2] = -248528275, i4[g6 + 40 >> 2] = 1496785429, i4[g6 + 44 >> 2] = 1652156816, i4[(Q5 = g6 + 32 | 0) >> 2] = 33620224, i4[Q5 + 4 >> 2] = 218629379, i4[g6 + 24 >> 2] = 1110511904, i4[g6 + 28 >> 2] = -584534669, i4[(E4 = g6 + 16 | 0) >> 2] = 1427652059, i4[E4 + 4 >> 2] = -248528275, i4[g6 >> 2] = w4, w4 = 1652156816 ^ r4, i4[g6 + 124 >> 2] = w4, n5 = 1496785429 ^ t4, i4[g6 + 120 >> 2] = n5, p4 = 218629379 ^ c4, i4[g6 + 116 >> 2] = p4, i4[g6 + 108 >> 2] = -584534669 ^ r4, i4[g6 + 104 >> 2] = 1110511904 ^ t4, i4[g6 + 100 >> 2] = -248528275 ^ c4, i4[g6 + 92 >> 2] = w4, i4[g6 + 88 >> 2] = n5, i4[g6 + 84 >> 2] = p4, w4 = r4 ^ D4, i4[g6 + 76 >> 2] = w4, n5 = t4 ^ h4, i4[g6 + 72 >> 2] = n5, p4 = c4 ^ y4, i4[g6 + 68 >> 2] = p4, i4[g6 + 12 >> 2] = w4, i4[g6 + 8 >> 2] = n5, i4[g6 + 4 >> 2] = p4, n5 = 0; w4 = i4[I7 + 12 >> 2], i4[C4 + 280 >> 2] = i4[I7 + 8 >> 2], i4[C4 + 284 >> 2] = w4, w4 = i4[I7 + 4 >> 2], i4[C4 + 272 >> 2] = i4[I7 >> 2], i4[C4 + 276 >> 2] = w4, w4 = i4[a4 + 12 >> 2], i4[C4 + 248 >> 2] = i4[a4 + 8 >> 2], i4[C4 + 252 >> 2] = w4, w4 = i4[a4 + 4 >> 2], i4[C4 + 240 >> 2] = i4[a4 >> 2], i4[C4 + 244 >> 2] = w4, w4 = i4[I7 + 12 >> 2], i4[C4 + 232 >> 2] = i4[I7 + 8 >> 2], i4[C4 + 236 >> 2] = w4, w4 = i4[I7 + 4 >> 2], i4[C4 + 224 >> 2] = i4[I7 >> 2], i4[C4 + 228 >> 2] = w4, AI(w4 = C4 + 256 | 0, C4 + 240 | 0, C4 + 224 | 0), p4 = i4[C4 + 268 >> 2], i4[I7 + 8 >> 2] = i4[C4 + 264 >> 2], i4[I7 + 12 >> 2] = p4, p4 = i4[C4 + 260 >> 2], i4[I7 >> 2] = i4[C4 + 256 >> 2], i4[I7 + 4 >> 2] = p4, p4 = i4[_4 + 12 >> 2], i4[C4 + 216 >> 2] = i4[_4 + 8 >> 2], i4[C4 + 220 >> 2] = p4, p4 = i4[_4 + 4 >> 2], i4[C4 + 208 >> 2] = i4[_4 >> 2], i4[C4 + 212 >> 2] = p4, p4 = i4[a4 + 12 >> 2], i4[C4 + 200 >> 2] = i4[a4 + 8 >> 2], i4[C4 + 204 >> 2] = p4, p4 = i4[a4 + 4 >> 2], i4[C4 + 192 >> 2] = i4[a4 >> 2], i4[C4 + 196 >> 2] = p4, AI(w4, C4 + 208 | 0, C4 + 192 | 0), p4 = i4[C4 + 268 >> 2], i4[a4 + 8 >> 2] = i4[C4 + 264 >> 2], i4[a4 + 12 >> 2] = p4, p4 = i4[C4 + 260 >> 2], i4[a4 >> 2] = i4[C4 + 256 >> 2], i4[a4 + 4 >> 2] = p4, p4 = i4[A8 + 12 >> 2], i4[C4 + 184 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 188 >> 2] = p4, p4 = i4[A8 + 4 >> 2], i4[C4 + 176 >> 2] = i4[A8 >> 2], i4[C4 + 180 >> 2] = p4, p4 = i4[_4 + 12 >> 2], i4[C4 + 168 >> 2] = i4[_4 + 8 >> 2], i4[C4 + 172 >> 2] = p4, p4 = i4[_4 + 4 >> 2], i4[C4 + 160 >> 2] = i4[_4 >> 2], i4[C4 + 164 >> 2] = p4, AI(w4, C4 + 176 | 0, C4 + 160 | 0), p4 = i4[C4 + 268 >> 2], i4[_4 + 8 >> 2] = i4[C4 + 264 >> 2], i4[_4 + 12 >> 2] = p4, p4 = i4[C4 + 260 >> 2], i4[_4 >> 2] = i4[C4 + 256 >> 2], i4[_4 + 4 >> 2] = p4, p4 = i4[B4 + 12 >> 2], i4[C4 + 152 >> 2] = i4[B4 + 8 >> 2], i4[C4 + 156 >> 2] = p4, p4 = i4[B4 + 4 >> 2], i4[C4 + 144 >> 2] = i4[B4 >> 2], i4[C4 + 148 >> 2] = p4, p4 = i4[A8 + 12 >> 2], i4[C4 + 136 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 140 >> 2] = p4, p4 = i4[A8 + 4 >> 2], i4[C4 + 128 >> 2] = i4[A8 >> 2], i4[C4 + 132 >> 2] = p4, AI(w4, C4 + 144 | 0, C4 + 128 | 0), p4 = i4[C4 + 268 >> 2], i4[A8 + 8 >> 2] = i4[C4 + 264 >> 2], i4[A8 + 12 >> 2] = p4, p4 = i4[C4 + 260 >> 2], i4[A8 >> 2] = i4[C4 + 256 >> 2], i4[A8 + 4 >> 2] = p4, p4 = i4[Q5 + 12 >> 2], i4[C4 + 120 >> 2] = i4[Q5 + 8 >> 2], i4[C4 + 124 >> 2] = p4, p4 = i4[Q5 + 4 >> 2], i4[C4 + 112 >> 2] = i4[Q5 >> 2], i4[C4 + 116 >> 2] = p4, p4 = i4[B4 + 12 >> 2], i4[C4 + 104 >> 2] = i4[B4 + 8 >> 2], i4[C4 + 108 >> 2] = p4, p4 = i4[B4 + 4 >> 2], i4[C4 + 96 >> 2] = i4[B4 >> 2], i4[C4 + 100 >> 2] = p4, AI(w4, C4 + 112 | 0, C4 + 96 | 0), p4 = i4[C4 + 268 >> 2], i4[B4 + 8 >> 2] = i4[C4 + 264 >> 2], i4[B4 + 12 >> 2] = p4, p4 = i4[C4 + 260 >> 2], i4[B4 >> 2] = i4[C4 + 256 >> 2], i4[B4 + 4 >> 2] = p4, p4 = i4[E4 + 12 >> 2], i4[C4 + 88 >> 2] = i4[E4 + 8 >> 2], i4[C4 + 92 >> 2] = p4, p4 = i4[E4 + 4 >> 2], i4[C4 + 80 >> 2] = i4[E4 >> 2], i4[C4 + 84 >> 2] = p4, p4 = i4[Q5 + 12 >> 2], i4[C4 + 72 >> 2] = i4[Q5 + 8 >> 2], i4[C4 + 76 >> 2] = p4, p4 = i4[Q5 + 4 >> 2], i4[C4 + 64 >> 2] = i4[Q5 >> 2], i4[C4 + 68 >> 2] = p4, AI(w4, C4 + 80 | 0, C4 - -64 | 0), p4 = i4[C4 + 268 >> 2], i4[Q5 + 8 >> 2] = i4[C4 + 264 >> 2], i4[Q5 + 12 >> 2] = p4, p4 = i4[C4 + 260 >> 2], i4[Q5 >> 2] = i4[C4 + 256 >> 2], i4[Q5 + 4 >> 2] = p4, p4 = i4[g6 + 12 >> 2], i4[C4 + 56 >> 2] = i4[g6 + 8 >> 2], i4[C4 + 60 >> 2] = p4, p4 = i4[g6 + 4 >> 2], i4[C4 + 48 >> 2] = i4[g6 >> 2], i4[C4 + 52 >> 2] = p4, p4 = i4[E4 + 12 >> 2], i4[C4 + 40 >> 2] = i4[E4 + 8 >> 2], i4[C4 + 44 >> 2] = p4, p4 = i4[E4 + 4 >> 2], i4[C4 + 32 >> 2] = i4[E4 >> 2], i4[C4 + 36 >> 2] = p4, AI(w4, C4 + 48 | 0, C4 + 32 | 0), p4 = i4[C4 + 268 >> 2], i4[E4 + 8 >> 2] = i4[C4 + 264 >> 2], i4[E4 + 12 >> 2] = p4, p4 = i4[C4 + 260 >> 2], i4[E4 >> 2] = i4[C4 + 256 >> 2], i4[E4 + 4 >> 2] = p4, p4 = i4[C4 + 284 >> 2], i4[C4 + 24 >> 2] = i4[C4 + 280 >> 2], i4[C4 + 28 >> 2] = p4, p4 = i4[C4 + 276 >> 2], i4[C4 + 16 >> 2] = i4[C4 + 272 >> 2], i4[C4 + 20 >> 2] = p4, p4 = i4[g6 + 12 >> 2], i4[C4 + 8 >> 2] = i4[g6 + 8 >> 2], i4[C4 + 12 >> 2] = p4, p4 = i4[g6 + 4 >> 2], i4[C4 >> 2] = i4[g6 >> 2], i4[C4 + 4 >> 2] = p4, AI(w4, C4 + 16 | 0, C4), w4 = i4[C4 + 268 >> 2], i4[g6 + 8 >> 2] = i4[C4 + 264 >> 2], i4[g6 + 12 >> 2] = w4, w4 = i4[C4 + 260 >> 2], i4[g6 >> 2] = i4[C4 + 256 >> 2], i4[g6 + 4 >> 2] = w4, i4[g6 + 12 >> 2] = (o3[g6 + 12 | 0] | o3[g6 + 13 | 0] << 8 | o3[g6 + 14 | 0] << 16 | o3[g6 + 15 | 0] << 24) ^ D4, i4[g6 + 8 >> 2] = (o3[g6 + 8 | 0] | o3[g6 + 9 | 0] << 8 | o3[g6 + 10 | 0] << 16 | o3[g6 + 11 | 0] << 24) ^ h4, i4[g6 + 4 >> 2] = (o3[g6 + 4 | 0] | o3[g6 + 5 | 0] << 8 | o3[g6 + 6 | 0] << 16 | o3[g6 + 7 | 0] << 24) ^ y4, i4[g6 >> 2] = (o3[0 | g6] | o3[g6 + 1 | 0] << 8 | o3[g6 + 2 | 0] << 16 | o3[g6 + 3 | 0] << 24) ^ f4, i4[A8 >> 2] = (o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24) ^ e6, i4[g6 + 68 >> 2] = (o3[g6 + 68 | 0] | o3[g6 + 69 | 0] << 8 | o3[g6 + 70 | 0] << 16 | o3[g6 + 71 | 0] << 24) ^ c4, i4[g6 + 72 >> 2] = (o3[g6 + 72 | 0] | o3[g6 + 73 | 0] << 8 | o3[g6 + 74 | 0] << 16 | o3[g6 + 75 | 0] << 24) ^ t4, i4[g6 + 76 >> 2] = (o3[g6 + 76 | 0] | o3[g6 + 77 | 0] << 8 | o3[g6 + 78 | 0] << 16 | o3[g6 + 79 | 0] << 24) ^ r4, 10 != (0 | (n5 = n5 + 1 | 0)); ) ;
                      s3 = C4 + 288 | 0;
                    }
                    function q2(A8, I7) {
                      var g6, B4 = 0, Q5 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0;
                      if (s3 = g6 = s3 - 48 | 0, !((B4 = nI(A8)) || (B4 = -26, I7 - 3 >>> 0 < 4294967294))) {
                        _4 = i4[A8 + 44 >> 2], B4 = i4[A8 + 48 >> 2], i4[g6 + 4 >> 2] = 0, Q5 = i4[A8 + 40 >> 2], i4[g6 + 32 >> 2] = B4, i4[g6 + 16 >> 2] = -1, i4[g6 + 12 >> 2] = Q5, B4 = ((e6 = (Q5 = B4 << 3) >>> 0 < _4 >>> 0 ? _4 : Q5) >>> 0) / ((_4 = B4 << 2) >>> 0) | 0, i4[g6 + 24 >> 2] = B4, i4[g6 + 28 >> 2] = B4 << 2, i4[g6 + 20 >> 2] = a3(B4, _4), B4 = i4[A8 + 52 >> 2], i4[g6 + 40 >> 2] = I7, i4[g6 + 36 >> 2] = B4, h4 = I7 = s3, s3 = B4 = I7 - 1152 & -64, I7 = -25;
                        A: {
                          if (!(!(_4 = g6 + 4 | 0) | !A8) && (Q5 = K3(i4[_4 + 20 >> 2] << 3), i4[_4 + 4 >> 2] = Q5, I7 = -22, Q5)) {
                            I: {
                              if ((I7 = i4[_4 + 16 >> 2]) && 1024 == (((Q5 = I7 << 10) >>> 0) / (I7 >>> 0) | 0) && (I7 = K3(12), i4[_4 >> 2] = I7, I7)) {
                                if (i4[I7 >> 2] = 0, i4[I7 + 4 >> 2] = 0, I7 = tI(B4 + 128 | 0, Q5), i4[9404] = I7, I7) i4[B4 + 128 >> 2] = 0;
                                else if (I7 = i4[B4 + 128 >> 2]) break I;
                                BA(i4[_4 >> 2]), i4[_4 >> 2] = 0;
                              }
                              WI(_4, i4[A8 + 56 >> 2]), s3 = h4, I7 = -22;
                              break A;
                            }
                            if (i4[i4[_4 >> 2] >> 2] = I7, i4[i4[_4 >> 2] + 4 >> 2] = I7, i4[i4[_4 >> 2] + 8 >> 2] = Q5, D4 = i4[_4 + 36 >> 2], eA(I7 = B4 + 128 | 0, 0, 0, 64), i4[B4 + 124 >> 2] = i4[A8 + 48 >> 2], WA(I7, Q5 = B4 + 124 | 0, 4, 0), i4[B4 + 124 >> 2] = i4[A8 + 4 >> 2], WA(I7, Q5, 4, 0), i4[B4 + 124 >> 2] = i4[A8 + 44 >> 2], WA(I7, Q5, 4, 0), i4[B4 + 124 >> 2] = i4[A8 + 40 >> 2], WA(I7, Q5, 4, 0), i4[B4 + 124 >> 2] = 19, WA(I7, Q5, 4, 0), i4[B4 + 124 >> 2] = D4, WA(I7, Q5, 4, 0), i4[B4 + 124 >> 2] = i4[A8 + 12 >> 2], WA(I7, Q5, 4, 0), (Q5 = i4[A8 + 8 >> 2]) && (WA(I7, Q5, i4[A8 + 12 >> 2], 0), 1 & C3[A8 + 56 | 0] && (XC(i4[A8 + 8 >> 2], i4[A8 + 12 >> 2]), i4[A8 + 12 >> 2] = 0)), i4[B4 + 124 >> 2] = i4[A8 + 20 >> 2], WA(I7 = B4 + 128 | 0, B4 + 124 | 0, 4, 0), (Q5 = i4[A8 + 16 >> 2]) && WA(I7, Q5, i4[A8 + 20 >> 2], 0), i4[B4 + 124 >> 2] = i4[A8 + 28 >> 2], WA(I7 = B4 + 128 | 0, B4 + 124 | 0, 4, 0), (Q5 = i4[A8 + 24 >> 2]) && (WA(I7, Q5, i4[A8 + 28 >> 2], 0), 2 & o3[A8 + 56 | 0] && (XC(i4[A8 + 24 >> 2], i4[A8 + 28 >> 2]), i4[A8 + 28 >> 2] = 0)), i4[B4 + 124 >> 2] = i4[A8 + 36 >> 2], WA(I7 = B4 + 128 | 0, B4 + 124 | 0, 4, 0), (Q5 = i4[A8 + 32 >> 2]) && WA(I7, Q5, i4[A8 + 36 >> 2], 0), Hg(B4 + 128 | 0, B4 + 48 | 0, 64), XC(B4 + 112 | 0, 8), i4[_4 + 28 >> 2]) for (Q5 = 0; ; ) {
                              for (i4[B4 + 112 >> 2] = 0, i4[B4 + 116 >> 2] = Q5, aA(B4 + 128 | 0, 1024, B4 + 48 | 0, 72), D4 = i4[i4[_4 >> 2] + 4 >> 2] + (a3(i4[_4 + 24 >> 2], Q5) << 10) | 0, I7 = 0; c4 = (r4 = I7 << 3) + D4 | 0, t4 = i4[4 + (y4 = (e6 = B4 + 128 | 0) + r4 | 0) >> 2], i4[c4 >> 2] = i4[y4 >> 2], i4[c4 + 4 >> 2] = t4, y4 = (c4 = 8 | r4) + D4 | 0, t4 = i4[4 + (c4 = c4 + e6 | 0) >> 2], i4[y4 >> 2] = i4[c4 >> 2], i4[y4 + 4 >> 2] = t4, y4 = (c4 = 16 | r4) + D4 | 0, t4 = i4[4 + (c4 = c4 + e6 | 0) >> 2], i4[y4 >> 2] = i4[c4 >> 2], i4[y4 + 4 >> 2] = t4, c4 = (r4 |= 24) + D4 | 0, y4 = i4[4 + (r4 = r4 + e6 | 0) >> 2], i4[c4 >> 2] = i4[r4 >> 2], i4[c4 + 4 >> 2] = y4, 128 != (0 | (I7 = I7 + 4 | 0)); ) ;
                              for (i4[B4 + 112 >> 2] = 1, aA(e6, 1024, B4 + 48 | 0, 72), D4 = 1024 + (i4[i4[_4 >> 2] + 4 >> 2] + (a3(i4[_4 + 24 >> 2], Q5) << 10) | 0) | 0, I7 = 0; c4 = (r4 = I7 << 3) + D4 | 0, t4 = i4[4 + (y4 = (e6 = B4 + 128 | 0) + r4 | 0) >> 2], i4[c4 >> 2] = i4[y4 >> 2], i4[c4 + 4 >> 2] = t4, y4 = (c4 = 8 | r4) + D4 | 0, t4 = i4[4 + (c4 = c4 + e6 | 0) >> 2], i4[y4 >> 2] = i4[c4 >> 2], i4[y4 + 4 >> 2] = t4, y4 = (c4 = 16 | r4) + D4 | 0, t4 = i4[4 + (c4 = c4 + e6 | 0) >> 2], i4[y4 >> 2] = i4[c4 >> 2], i4[y4 + 4 >> 2] = t4, c4 = (r4 |= 24) + D4 | 0, e6 = i4[4 + (r4 = r4 + e6 | 0) >> 2], i4[c4 >> 2] = i4[r4 >> 2], i4[c4 + 4 >> 2] = e6, 128 != (0 | (I7 = I7 + 4 | 0)); ) ;
                              if (!((Q5 = Q5 + 1 | 0) >>> 0 < E3[_4 + 28 >> 2])) break;
                            }
                            XC(B4 + 128 | 0, 1024), XC(B4 + 48 | 0, 72), I7 = 0;
                          }
                          s3 = h4;
                        }
                        if (B4 = I7, !I7) {
                          if (i4[g6 + 12 >> 2]) for (; ; ) {
                            if (s3 = I7 = s3 - 80 | 0, !(!(_4 = g6 + 4 | 0) | !i4[_4 + 28 >> 2])) {
                              for (C3[I7 + 72 | 0] = 0, i4[I7 + 64 >> 2] = p4, B4 = 0; i4[I7 + 76 >> 2] = 0, Q5 = i4[I7 + 76 >> 2], i4[I7 + 56 >> 2] = i4[I7 + 72 >> 2], i4[I7 + 60 >> 2] = Q5, i4[I7 + 68 >> 2] = B4, Q5 = i4[I7 + 68 >> 2], i4[I7 + 48 >> 2] = i4[I7 + 64 >> 2], i4[I7 + 52 >> 2] = Q5, F3(_4, I7 + 48 | 0), (B4 = B4 + 1 | 0) >>> 0 < (Q5 = i4[_4 + 28 >> 2]) >>> 0; ) ;
                              if (C3[I7 + 72 | 0] = 1, Q5) {
                                for (B4 = 0; i4[I7 + 76 >> 2] = 0, Q5 = i4[I7 + 76 >> 2], i4[I7 + 40 >> 2] = i4[I7 + 72 >> 2], i4[I7 + 44 >> 2] = Q5, i4[I7 + 68 >> 2] = B4, Q5 = i4[I7 + 68 >> 2], i4[I7 + 32 >> 2] = i4[I7 + 64 >> 2], i4[I7 + 36 >> 2] = Q5, F3(_4, I7 + 32 | 0), (B4 = B4 + 1 | 0) >>> 0 < (Q5 = i4[_4 + 28 >> 2]) >>> 0; ) ;
                                if (C3[I7 + 72 | 0] = 2, Q5) {
                                  for (B4 = 0; i4[I7 + 76 >> 2] = 0, Q5 = i4[I7 + 76 >> 2], i4[I7 + 24 >> 2] = i4[I7 + 72 >> 2], i4[I7 + 28 >> 2] = Q5, i4[I7 + 68 >> 2] = B4, Q5 = i4[I7 + 68 >> 2], i4[I7 + 16 >> 2] = i4[I7 + 64 >> 2], i4[I7 + 20 >> 2] = Q5, F3(_4, I7 + 16 | 0), (B4 = B4 + 1 | 0) >>> 0 < (Q5 = i4[_4 + 28 >> 2]) >>> 0; ) ;
                                  if (C3[I7 + 72 | 0] = 3, Q5) for (B4 = 0; i4[I7 + 76 >> 2] = 0, Q5 = i4[I7 + 76 >> 2], i4[I7 + 8 >> 2] = i4[I7 + 72 >> 2], i4[I7 + 12 >> 2] = Q5, i4[I7 + 68 >> 2] = B4, Q5 = i4[I7 + 68 >> 2], i4[I7 >> 2] = i4[I7 + 64 >> 2], i4[I7 + 4 >> 2] = Q5, F3(_4, I7), (B4 = B4 + 1 | 0) >>> 0 < E3[_4 + 28 >> 2]; ) ;
                                }
                              }
                            }
                            if (s3 = I7 + 80 | 0, !((p4 = p4 + 1 | 0) >>> 0 < E3[g6 + 12 >> 2])) break;
                          }
                          if (s3 = I7 = s3 - 2048 | 0, !(!A8 | !(B4 = g6 + 4 | 0))) {
                            if (p4 = i4[B4 + 24 >> 2], Ng(I7 + 1024 | 0, c4 = (i4[i4[B4 >> 2] + 4 >> 2] + (p4 << 10) | 0) - 1024 | 0, 1024), (y4 = i4[B4 + 28 >> 2]) >>> 0 >= 2) for (D4 = 1; ; ) {
                              for (_4 = c4 + (a3(D4, p4) << 10) | 0, r4 = 0; t4 = i4[(h4 = (Q5 = r4 << 3) + (e6 = I7 + 1024 | 0) | 0) >> 2], w4 = i4[(f4 = Q5 + _4 | 0) >> 2], f4 = i4[h4 + 4 >> 2] ^ i4[f4 + 4 >> 2], i4[h4 >> 2] = t4 ^ w4, i4[h4 + 4 >> 2] = f4, f4 = i4[(h4 = (t4 = 8 | Q5) + e6 | 0) >> 2], w4 = i4[(t4 = _4 + t4 | 0) >> 2], t4 = i4[h4 + 4 >> 2] ^ i4[t4 + 4 >> 2], i4[h4 >> 2] = f4 ^ w4, i4[h4 + 4 >> 2] = t4, f4 = i4[(h4 = (t4 = 16 | Q5) + e6 | 0) >> 2], w4 = i4[(t4 = _4 + t4 | 0) >> 2], t4 = i4[h4 + 4 >> 2] ^ i4[t4 + 4 >> 2], i4[h4 >> 2] = f4 ^ w4, i4[h4 + 4 >> 2] = t4, h4 = i4[(Q5 = (h4 = e6) + (e6 = 24 | Q5) | 0) >> 2], t4 = i4[(e6 = _4 + e6 | 0) >> 2], e6 = i4[Q5 + 4 >> 2] ^ i4[e6 + 4 >> 2], i4[Q5 >> 2] = t4 ^ h4, i4[Q5 + 4 >> 2] = e6, 128 != (0 | (r4 = r4 + 4 | 0)); ) ;
                              if ((0 | y4) == (0 | (D4 = D4 + 1 | 0))) break;
                            }
                            _4 = Ng(I7, I7 + 1024 | 0, 1024), aA(i4[A8 >> 2], i4[A8 + 4 >> 2], _4, 1024), XC(_4 + 1024 | 0, 1024), XC(_4, 1024), WI(B4, i4[A8 + 56 >> 2]);
                          }
                          s3 = I7 + 2048 | 0, B4 = 0;
                        }
                      }
                      return s3 = g6 + 48 | 0, B4;
                    }
                    function z(A8, I7, g6, B4, Q5) {
                      var E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, f4, p4, w4, n5, k4, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, v4 = 0, R4 = 0, L4 = 0, P7 = 0, q3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, W2 = 0, V2 = 0, Z2 = 0, T2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0;
                      for (E4 = s3 + -64 | 0, a4 = i4[A8 + 60 >> 2], _4 = i4[A8 + 56 >> 2], P7 = i4[A8 + 52 >> 2], L4 = i4[A8 + 48 >> 2], c4 = i4[A8 + 44 >> 2], t4 = i4[A8 + 40 >> 2], r4 = i4[A8 + 36 >> 2], e6 = i4[A8 + 32 >> 2], y4 = i4[A8 + 28 >> 2], h4 = i4[A8 + 24 >> 2], D4 = i4[A8 + 20 >> 2], f4 = i4[A8 + 16 >> 2], p4 = i4[A8 + 12 >> 2], w4 = i4[A8 + 8 >> 2], n5 = i4[A8 + 4 >> 2], k4 = i4[A8 >> 2]; ; ) {
                        if (!Q5 & B4 >>> 0 > 63 | Q5) F4 = g6;
                        else {
                          if (i4[E4 + 56 >> 2] = 0, i4[E4 + 60 >> 2] = 0, i4[E4 + 48 >> 2] = 0, i4[E4 + 52 >> 2] = 0, i4[E4 + 40 >> 2] = 0, i4[E4 + 44 >> 2] = 0, i4[E4 + 32 >> 2] = 0, i4[E4 + 36 >> 2] = 0, i4[E4 + 24 >> 2] = 0, i4[E4 + 28 >> 2] = 0, i4[E4 + 16 >> 2] = 0, i4[E4 + 20 >> 2] = 0, i4[E4 + 8 >> 2] = 0, i4[E4 + 12 >> 2] = 0, i4[E4 >> 2] = 0, i4[E4 + 4 >> 2] = 0, N4 = 0, B4 | Q5) for (; C3[N4 + E4 | 0] = o3[I7 + N4 | 0], !Q5 & (N4 = N4 + 1 | 0) >>> 0 < B4 >>> 0 | Q5; ) ;
                          I7 = F4 = E4, O2 = g6;
                        }
                        for (q3 = 20, S4 = k4, Y4 = n5, J4 = w4, l4 = p4, N4 = f4, g6 = D4, M4 = h4, K4 = y4, U4 = e6, x4 = r4, d5 = t4, G4 = a4, v4 = _4, u4 = P7, m4 = L4, b5 = c4; H4 = N4, S4 = Lg((N4 = S4 + N4 | 0) ^ m4, 16), H4 = m4 = Lg(H4 ^ (U4 = S4 + U4 | 0), 12), m4 = Lg((R4 = N4 + m4 | 0) ^ S4, 8), N4 = Lg(H4 ^ (U4 = m4 + U4 | 0), 7), G4 = Lg((S4 = K4 + l4 | 0) ^ G4, 16), K4 = Lg((b5 = G4 + b5 | 0) ^ K4, 12), l4 = Lg((J4 = M4 + J4 | 0) ^ v4, 16), M4 = Lg((d5 = l4 + d5 | 0) ^ M4, 12), v4 = (z2 = S4 + K4 | 0) + N4 | 0, j2 = Lg((J4 = M4 + J4 | 0) ^ l4, 8), S4 = Lg(v4 ^ j2, 16), l4 = Lg((Y4 = g6 + Y4 | 0) ^ u4, 16), g6 = Lg((x4 = l4 + x4 | 0) ^ g6, 12), H4 = N4, u4 = Lg((Y4 = g6 + Y4 | 0) ^ l4, 8), H4 = Lg(H4 ^ (N4 = (X2 = u4 + x4 | 0) + S4 | 0), 12), v4 = Lg(S4 ^ (l4 = H4 + v4 | 0), 8), N4 = Lg((x4 = v4 + N4 | 0) ^ H4, 7), H4 = U4, U4 = J4, S4 = Lg(G4 ^ z2, 8), J4 = Lg((G4 = S4 + b5 | 0) ^ K4, 7), u4 = Lg((U4 = U4 + J4 | 0) ^ u4, 16), b5 = Lg((K4 = H4 + u4 | 0) ^ J4, 12), u4 = Lg(u4 ^ (J4 = b5 + U4 | 0), 8), K4 = Lg((U4 = K4 + u4 | 0) ^ b5, 7), b5 = G4, G4 = Y4, Y4 = Lg((d5 = d5 + j2 | 0) ^ M4, 7), M4 = b5 + (m4 = Lg((G4 = G4 + Y4 | 0) ^ m4, 16)) | 0, b5 = G4, G4 = Lg(M4 ^ Y4, 12), m4 = Lg(m4 ^ (Y4 = b5 + G4 | 0), 8), M4 = Lg((b5 = M4 + m4 | 0) ^ G4, 7), H4 = d5, G4 = S4, S4 = Lg(g6 ^ X2, 7), G4 = Lg(G4 ^ (d5 = S4 + R4 | 0), 16), R4 = Lg((g6 = H4 + G4 | 0) ^ S4, 12), G4 = Lg(G4 ^ (S4 = R4 + d5 | 0), 8), g6 = Lg((d5 = g6 + G4 | 0) ^ R4, 7), q3 = q3 - 2 | 0; ) ;
                        if (q3 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, R4 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, z2 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, j2 = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, X2 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, H4 = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, W2 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24, V2 = o3[I7 + 32 | 0] | o3[I7 + 33 | 0] << 8 | o3[I7 + 34 | 0] << 16 | o3[I7 + 35 | 0] << 24, Z2 = o3[I7 + 36 | 0] | o3[I7 + 37 | 0] << 8 | o3[I7 + 38 | 0] << 16 | o3[I7 + 39 | 0] << 24, T2 = o3[I7 + 40 | 0] | o3[I7 + 41 | 0] << 8 | o3[I7 + 42 | 0] << 16 | o3[I7 + 43 | 0] << 24, $2 = o3[I7 + 44 | 0] | o3[I7 + 45 | 0] << 8 | o3[I7 + 46 | 0] << 16 | o3[I7 + 47 | 0] << 24, AA2 = o3[I7 + 48 | 0] | o3[I7 + 49 | 0] << 8 | o3[I7 + 50 | 0] << 16 | o3[I7 + 51 | 0] << 24, IA2 = o3[I7 + 52 | 0] | o3[I7 + 53 | 0] << 8 | o3[I7 + 54 | 0] << 16 | o3[I7 + 55 | 0] << 24, gA2 = o3[I7 + 56 | 0] | o3[I7 + 57 | 0] << 8 | o3[I7 + 58 | 0] << 16 | o3[I7 + 59 | 0] << 24, CA2 = o3[I7 + 60 | 0] | o3[I7 + 61 | 0] << 8 | o3[I7 + 62 | 0] << 16 | o3[I7 + 63 | 0] << 24, S4 = S4 + k4 ^ (o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24), C3[0 | F4] = S4, C3[F4 + 1 | 0] = S4 >>> 8, C3[F4 + 2 | 0] = S4 >>> 16, C3[F4 + 3 | 0] = S4 >>> 24, S4 = G4 + a4 ^ CA2, C3[F4 + 60 | 0] = S4, C3[F4 + 61 | 0] = S4 >>> 8, C3[F4 + 62 | 0] = S4 >>> 16, C3[F4 + 63 | 0] = S4 >>> 24, S4 = v4 + _4 ^ gA2, C3[F4 + 56 | 0] = S4, C3[F4 + 57 | 0] = S4 >>> 8, C3[F4 + 58 | 0] = S4 >>> 16, C3[F4 + 59 | 0] = S4 >>> 24, S4 = u4 + P7 ^ IA2, C3[F4 + 52 | 0] = S4, C3[F4 + 53 | 0] = S4 >>> 8, C3[F4 + 54 | 0] = S4 >>> 16, C3[F4 + 55 | 0] = S4 >>> 24, S4 = m4 + L4 ^ AA2, C3[F4 + 48 | 0] = S4, C3[F4 + 49 | 0] = S4 >>> 8, C3[F4 + 50 | 0] = S4 >>> 16, C3[F4 + 51 | 0] = S4 >>> 24, S4 = b5 + c4 ^ $2, C3[F4 + 44 | 0] = S4, C3[F4 + 45 | 0] = S4 >>> 8, C3[F4 + 46 | 0] = S4 >>> 16, C3[F4 + 47 | 0] = S4 >>> 24, S4 = d5 + t4 ^ T2, C3[F4 + 40 | 0] = S4, C3[F4 + 41 | 0] = S4 >>> 8, C3[F4 + 42 | 0] = S4 >>> 16, C3[F4 + 43 | 0] = S4 >>> 24, S4 = x4 + r4 ^ Z2, C3[F4 + 36 | 0] = S4, C3[F4 + 37 | 0] = S4 >>> 8, C3[F4 + 38 | 0] = S4 >>> 16, C3[F4 + 39 | 0] = S4 >>> 24, S4 = U4 + e6 ^ V2, C3[F4 + 32 | 0] = S4, C3[F4 + 33 | 0] = S4 >>> 8, C3[F4 + 34 | 0] = S4 >>> 16, C3[F4 + 35 | 0] = S4 >>> 24, K4 = K4 + y4 ^ W2, C3[F4 + 28 | 0] = K4, C3[F4 + 29 | 0] = K4 >>> 8, C3[F4 + 30 | 0] = K4 >>> 16, C3[F4 + 31 | 0] = K4 >>> 24, M4 = H4 ^ M4 + h4, C3[F4 + 24 | 0] = M4, C3[F4 + 25 | 0] = M4 >>> 8, C3[F4 + 26 | 0] = M4 >>> 16, C3[F4 + 27 | 0] = M4 >>> 24, g6 = X2 ^ g6 + D4, C3[F4 + 20 | 0] = g6, C3[F4 + 21 | 0] = g6 >>> 8, C3[F4 + 22 | 0] = g6 >>> 16, C3[F4 + 23 | 0] = g6 >>> 24, g6 = j2 ^ N4 + f4, C3[F4 + 16 | 0] = g6, C3[F4 + 17 | 0] = g6 >>> 8, C3[F4 + 18 | 0] = g6 >>> 16, C3[F4 + 19 | 0] = g6 >>> 24, g6 = z2 ^ l4 + p4, C3[F4 + 12 | 0] = g6, C3[F4 + 13 | 0] = g6 >>> 8, C3[F4 + 14 | 0] = g6 >>> 16, C3[F4 + 15 | 0] = g6 >>> 24, g6 = R4 ^ J4 + w4, C3[F4 + 8 | 0] = g6, C3[F4 + 9 | 0] = g6 >>> 8, C3[F4 + 10 | 0] = g6 >>> 16, C3[F4 + 11 | 0] = g6 >>> 24, g6 = q3 ^ Y4 + n5, C3[F4 + 4 | 0] = g6, C3[F4 + 5 | 0] = g6 >>> 8, C3[F4 + 6 | 0] = g6 >>> 16, C3[F4 + 7 | 0] = g6 >>> 24, P7 = !(L4 = L4 + 1 | 0) + P7 | 0, !Q5 & B4 >>> 0 <= 64) {
                          if (!(!(B4 | Q5) | !Q5 & B4 >>> 0 > 63 | !!(0 | Q5))) for (N4 = 0; C3[N4 + O2 | 0] = o3[F4 + N4 | 0], B4 >>> 0 > (N4 = N4 + 1 | 0) >>> 0; ) ;
                          i4[A8 + 52 >> 2] = P7, i4[A8 + 48 >> 2] = L4;
                          break;
                        }
                        I7 = I7 - -64 | 0, g6 = F4 - -64 | 0, Q5 = Q5 - 1 | 0, Q5 = (B4 = B4 + -64 | 0) >>> 0 < 4294967232 ? Q5 + 1 | 0 : Q5;
                      }
                    }
                    function j(A8, I7) {
                      I7 |= 0;
                      var g6, B4 = 0, Q5 = 0, o4 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0;
                      return s3 = g6 = s3 - 704 | 0, B4 = 80 + ((Q5 = i4[72 + (A8 |= 0) >> 2] >>> 3 & 127) + A8 | 0) | 0, Q5 >>> 0 >= 112 ? (Ng(B4, 35056, 128 - Q5 | 0), k3(A8, Q5 = A8 + 80 | 0, g6, g6 + 640 | 0), bg(Q5, 0, 112)) : Ng(B4, 35056, 112 - Q5 | 0), _4 = (o4 = i4[A8 + 64 >> 2]) << 24 | (65280 & o4) << 8, Q5 = (E4 = 16711680 & o4) >>> 8 | 0, c4 = E4 << 24, E4 = (a4 = -16777216 & o4) >>> 24 | 0, B4 = c4 | a4 << 8 | -16777216 & ((255 & (B4 = i4[A8 + 68 >> 2])) << 24 | o4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | o4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[A8 + 192 | 0] = B4, C3[A8 + 193 | 0] = B4 >>> 8, C3[A8 + 194 | 0] = B4 >>> 16, C3[A8 + 195 | 0] = B4 >>> 24, B4 = Q5 | E4 | _4, Q5 = 0, Q5 |= B4, C3[A8 + 196 | 0] = Q5, C3[A8 + 197 | 0] = Q5 >>> 8, C3[A8 + 198 | 0] = Q5 >>> 16, C3[A8 + 199 | 0] = Q5 >>> 24, _4 = (o4 = i4[A8 + 72 >> 2]) << 24 | (65280 & o4) << 8, Q5 = (E4 = 16711680 & o4) >>> 8 | 0, c4 = E4 << 24, E4 = (a4 = -16777216 & o4) >>> 24 | 0, B4 = c4 | a4 << 8 | -16777216 & ((255 & (B4 = i4[A8 + 76 >> 2])) << 24 | o4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | o4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[A8 + 200 | 0] = B4, C3[A8 + 201 | 0] = B4 >>> 8, C3[A8 + 202 | 0] = B4 >>> 16, C3[A8 + 203 | 0] = B4 >>> 24, B4 = Q5 | E4 | _4, Q5 = 0, Q5 |= B4, C3[A8 + 204 | 0] = Q5, C3[A8 + 205 | 0] = Q5 >>> 8, C3[A8 + 206 | 0] = Q5 >>> 16, C3[A8 + 207 | 0] = Q5 >>> 24, k3(A8, A8 + 80 | 0, g6, g6 + 640 | 0), _4 = (o4 = i4[A8 >> 2]) << 24 | (65280 & o4) << 8, Q5 = (E4 = 16711680 & o4) >>> 8 | 0, c4 = E4 << 24, E4 = (a4 = -16777216 & o4) >>> 24 | 0, B4 = c4 | a4 << 8 | -16777216 & ((255 & (B4 = i4[A8 + 4 >> 2])) << 24 | o4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | o4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[0 | I7] = B4, C3[I7 + 1 | 0] = B4 >>> 8, C3[I7 + 2 | 0] = B4 >>> 16, C3[I7 + 3 | 0] = B4 >>> 24, B4 = Q5 | E4 | _4, Q5 = 0, Q5 |= B4, C3[I7 + 4 | 0] = Q5, C3[I7 + 5 | 0] = Q5 >>> 8, C3[I7 + 6 | 0] = Q5 >>> 16, C3[I7 + 7 | 0] = Q5 >>> 24, _4 = (o4 = i4[A8 + 8 >> 2]) << 24 | (65280 & o4) << 8, Q5 = (E4 = 16711680 & o4) >>> 8 | 0, c4 = E4 << 24, E4 = (a4 = -16777216 & o4) >>> 24 | 0, B4 = c4 | a4 << 8 | -16777216 & ((255 & (B4 = i4[A8 + 12 >> 2])) << 24 | o4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | o4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[I7 + 8 | 0] = B4, C3[I7 + 9 | 0] = B4 >>> 8, C3[I7 + 10 | 0] = B4 >>> 16, C3[I7 + 11 | 0] = B4 >>> 24, B4 = Q5 | E4 | _4, Q5 = 0, Q5 |= B4, C3[I7 + 12 | 0] = Q5, C3[I7 + 13 | 0] = Q5 >>> 8, C3[I7 + 14 | 0] = Q5 >>> 16, C3[I7 + 15 | 0] = Q5 >>> 24, _4 = (o4 = i4[A8 + 16 >> 2]) << 24 | (65280 & o4) << 8, Q5 = (E4 = 16711680 & o4) >>> 8 | 0, c4 = E4 << 24, E4 = (a4 = -16777216 & o4) >>> 24 | 0, B4 = c4 | a4 << 8 | -16777216 & ((255 & (B4 = i4[A8 + 20 >> 2])) << 24 | o4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | o4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[I7 + 16 | 0] = B4, C3[I7 + 17 | 0] = B4 >>> 8, C3[I7 + 18 | 0] = B4 >>> 16, C3[I7 + 19 | 0] = B4 >>> 24, B4 = Q5 | E4 | _4, Q5 = 0, Q5 |= B4, C3[I7 + 20 | 0] = Q5, C3[I7 + 21 | 0] = Q5 >>> 8, C3[I7 + 22 | 0] = Q5 >>> 16, C3[I7 + 23 | 0] = Q5 >>> 24, _4 = (o4 = i4[A8 + 24 >> 2]) << 24 | (65280 & o4) << 8, Q5 = (E4 = 16711680 & o4) >>> 8 | 0, c4 = E4 << 24, E4 = (a4 = -16777216 & o4) >>> 24 | 0, B4 = c4 | a4 << 8 | -16777216 & ((255 & (B4 = i4[A8 + 28 >> 2])) << 24 | o4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | o4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[I7 + 24 | 0] = B4, C3[I7 + 25 | 0] = B4 >>> 8, C3[I7 + 26 | 0] = B4 >>> 16, C3[I7 + 27 | 0] = B4 >>> 24, B4 = Q5 | E4 | _4, Q5 = 0, Q5 |= B4, C3[I7 + 28 | 0] = Q5, C3[I7 + 29 | 0] = Q5 >>> 8, C3[I7 + 30 | 0] = Q5 >>> 16, C3[I7 + 31 | 0] = Q5 >>> 24, _4 = (o4 = i4[A8 + 32 >> 2]) << 24 | (65280 & o4) << 8, Q5 = (E4 = 16711680 & o4) >>> 8 | 0, c4 = E4 << 24, E4 = (a4 = -16777216 & o4) >>> 24 | 0, B4 = c4 | a4 << 8 | -16777216 & ((255 & (B4 = i4[A8 + 36 >> 2])) << 24 | o4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | o4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[I7 + 32 | 0] = B4, C3[I7 + 33 | 0] = B4 >>> 8, C3[I7 + 34 | 0] = B4 >>> 16, C3[I7 + 35 | 0] = B4 >>> 24, B4 = Q5 | E4 | _4, Q5 = 0, Q5 |= B4, C3[I7 + 36 | 0] = Q5, C3[I7 + 37 | 0] = Q5 >>> 8, C3[I7 + 38 | 0] = Q5 >>> 16, C3[I7 + 39 | 0] = Q5 >>> 24, _4 = (o4 = i4[A8 + 40 >> 2]) << 24 | (65280 & o4) << 8, Q5 = (E4 = 16711680 & o4) >>> 8 | 0, c4 = E4 << 24, E4 = (a4 = -16777216 & o4) >>> 24 | 0, B4 = c4 | a4 << 8 | -16777216 & ((255 & (B4 = i4[A8 + 44 >> 2])) << 24 | o4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | o4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[I7 + 40 | 0] = B4, C3[I7 + 41 | 0] = B4 >>> 8, C3[I7 + 42 | 0] = B4 >>> 16, C3[I7 + 43 | 0] = B4 >>> 24, B4 = Q5 | E4 | _4, Q5 = 0, Q5 |= B4, C3[I7 + 44 | 0] = Q5, C3[I7 + 45 | 0] = Q5 >>> 8, C3[I7 + 46 | 0] = Q5 >>> 16, C3[I7 + 47 | 0] = Q5 >>> 24, _4 = (o4 = i4[A8 + 48 >> 2]) << 24 | (65280 & o4) << 8, Q5 = (E4 = 16711680 & o4) >>> 8 | 0, c4 = E4 << 24, E4 = (a4 = -16777216 & o4) >>> 24 | 0, B4 = c4 | a4 << 8 | -16777216 & ((255 & (B4 = i4[A8 + 52 >> 2])) << 24 | o4 >>> 8) | 16711680 & ((16777215 & B4) << 8 | o4 >>> 24) | B4 >>> 8 & 65280 | B4 >>> 24, C3[I7 + 48 | 0] = B4, C3[I7 + 49 | 0] = B4 >>> 8, C3[I7 + 50 | 0] = B4 >>> 16, C3[I7 + 51 | 0] = B4 >>> 24, B4 = Q5 | E4 | _4, Q5 = 0, Q5 |= B4, C3[I7 + 52 | 0] = Q5, C3[I7 + 53 | 0] = Q5 >>> 8, C3[I7 + 54 | 0] = Q5 >>> 16, C3[I7 + 55 | 0] = Q5 >>> 24, _4 = (o4 = i4[A8 + 56 >> 2]) << 24 | (65280 & o4) << 8, Q5 = (E4 = 16711680 & o4) >>> 8 | 0, B4 = I7, c4 = E4 << 24, E4 = (a4 = -16777216 & o4) >>> 24 | 0, I7 = c4 | a4 << 8 | -16777216 & ((255 & (I7 = i4[A8 + 60 >> 2])) << 24 | o4 >>> 8) | 16711680 & ((16777215 & I7) << 8 | o4 >>> 24) | I7 >>> 8 & 65280 | I7 >>> 24, C3[B4 + 56 | 0] = I7, C3[B4 + 57 | 0] = I7 >>> 8, C3[B4 + 58 | 0] = I7 >>> 16, C3[B4 + 59 | 0] = I7 >>> 24, I7 = Q5 | E4 | _4, I7 |= Q5 = 0, C3[B4 + 60 | 0] = I7, C3[B4 + 61 | 0] = I7 >>> 8, C3[B4 + 62 | 0] = I7 >>> 16, C3[B4 + 63 | 0] = I7 >>> 24, XC(g6, 704), XC(A8, 208), s3 = g6 + 704 | 0, 0;
                    }
                    function X(A8, I7, g6) {
                      var B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, f4, p4, w4, n5, k4, F4, S4, N4, G4 = 0;
                      s3 = B4 = s3 - 224 | 0, c4 = o3[g6 + 16 | 0] | o3[g6 + 17 | 0] << 8 | o3[g6 + 18 | 0] << 16 | o3[g6 + 19 | 0] << 24, t4 = o3[0 | (G4 = g6 - -64 | 0)] | o3[G4 + 1 | 0] << 8 | o3[G4 + 2 | 0] << 16 | o3[G4 + 3 | 0] << 24, r4 = o3[g6 + 80 | 0] | o3[g6 + 81 | 0] << 8 | o3[g6 + 82 | 0] << 16 | o3[g6 + 83 | 0] << 24, e6 = o3[g6 + 32 | 0] | o3[g6 + 33 | 0] << 8 | o3[g6 + 34 | 0] << 16 | o3[g6 + 35 | 0] << 24, y4 = o3[g6 + 48 | 0] | o3[g6 + 49 | 0] << 8 | o3[g6 + 50 | 0] << 16 | o3[g6 + 51 | 0] << 24, Q5 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, h4 = o3[g6 + 20 | 0] | o3[g6 + 21 | 0] << 8 | o3[g6 + 22 | 0] << 16 | o3[g6 + 23 | 0] << 24, D4 = o3[g6 + 68 | 0] | o3[g6 + 69 | 0] << 8 | o3[g6 + 70 | 0] << 16 | o3[g6 + 71 | 0] << 24, f4 = o3[g6 + 84 | 0] | o3[g6 + 85 | 0] << 8 | o3[g6 + 86 | 0] << 16 | o3[g6 + 87 | 0] << 24, p4 = o3[g6 + 36 | 0] | o3[g6 + 37 | 0] << 8 | o3[g6 + 38 | 0] << 16 | o3[g6 + 39 | 0] << 24, w4 = o3[g6 + 52 | 0] | o3[g6 + 53 | 0] << 8 | o3[g6 + 54 | 0] << 16 | o3[g6 + 55 | 0] << 24, E4 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, n5 = o3[g6 + 24 | 0] | o3[g6 + 25 | 0] << 8 | o3[g6 + 26 | 0] << 16 | o3[g6 + 27 | 0] << 24, k4 = o3[g6 + 72 | 0] | o3[g6 + 73 | 0] << 8 | o3[g6 + 74 | 0] << 16 | o3[g6 + 75 | 0] << 24, F4 = o3[g6 + 88 | 0] | o3[g6 + 89 | 0] << 8 | o3[g6 + 90 | 0] << 16 | o3[g6 + 91 | 0] << 24, S4 = o3[g6 + 40 | 0] | o3[g6 + 41 | 0] << 8 | o3[g6 + 42 | 0] << 16 | o3[g6 + 43 | 0] << 24, N4 = o3[g6 + 56 | 0] | o3[g6 + 57 | 0] << 8 | o3[g6 + 58 | 0] << 16 | o3[g6 + 59 | 0] << 24, a4 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, I7 = (_4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24) ^ (o3[g6 + 44 | 0] | o3[g6 + 45 | 0] << 8 | o3[g6 + 46 | 0] << 16 | o3[g6 + 47 | 0] << 24) & (o3[g6 + 60 | 0] | o3[g6 + 61 | 0] << 8 | o3[g6 + 62 | 0] << 16 | o3[g6 + 63 | 0] << 24) ^ (o3[g6 + 28 | 0] | o3[g6 + 29 | 0] << 8 | o3[g6 + 30 | 0] << 16 | o3[g6 + 31 | 0] << 24) ^ (o3[g6 + 92 | 0] | o3[g6 + 93 | 0] << 8 | o3[g6 + 94 | 0] << 16 | o3[g6 + 95 | 0] << 24) ^ (o3[g6 + 76 | 0] | o3[g6 + 77 | 0] << 8 | o3[g6 + 78 | 0] << 16 | o3[g6 + 79 | 0] << 24), C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = S4 & N4 ^ k4 ^ F4 ^ n5 ^ E4, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = p4 & w4 ^ D4 ^ f4 ^ h4 ^ Q5, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = e6 & y4 ^ c4 ^ t4 ^ r4 ^ a4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24, A8 = i4[g6 + 92 >> 2], i4[B4 + 216 >> 2] = i4[g6 + 88 >> 2], i4[B4 + 220 >> 2] = A8, A8 = i4[g6 + 84 >> 2], i4[B4 + 208 >> 2] = i4[g6 + 80 >> 2], i4[B4 + 212 >> 2] = A8, A8 = i4[g6 + 76 >> 2], i4[B4 + 184 >> 2] = i4[g6 + 72 >> 2], i4[B4 + 188 >> 2] = A8, A8 = i4[G4 + 4 >> 2], i4[B4 + 176 >> 2] = i4[G4 >> 2], i4[B4 + 180 >> 2] = A8, A8 = i4[g6 + 92 >> 2], i4[B4 + 168 >> 2] = i4[g6 + 88 >> 2], i4[B4 + 172 >> 2] = A8, A8 = i4[g6 + 84 >> 2], i4[B4 + 160 >> 2] = i4[g6 + 80 >> 2], i4[B4 + 164 >> 2] = A8, AI(A8 = B4 + 192 | 0, B4 + 176 | 0, B4 + 160 | 0), I7 = i4[B4 + 204 >> 2], i4[g6 + 88 >> 2] = i4[B4 + 200 >> 2], i4[g6 + 92 >> 2] = I7, I7 = i4[B4 + 196 >> 2], i4[g6 + 80 >> 2] = i4[B4 + 192 >> 2], i4[g6 + 84 >> 2] = I7, I7 = i4[g6 + 60 >> 2], i4[B4 + 152 >> 2] = i4[g6 + 56 >> 2], i4[B4 + 156 >> 2] = I7, I7 = i4[g6 + 52 >> 2], i4[B4 + 144 >> 2] = i4[g6 + 48 >> 2], i4[B4 + 148 >> 2] = I7, I7 = i4[g6 + 76 >> 2], i4[B4 + 136 >> 2] = i4[g6 + 72 >> 2], i4[B4 + 140 >> 2] = I7, I7 = i4[G4 + 4 >> 2], i4[B4 + 128 >> 2] = i4[G4 >> 2], i4[B4 + 132 >> 2] = I7, AI(A8, B4 + 144 | 0, B4 + 128 | 0), I7 = i4[B4 + 204 >> 2], i4[g6 + 72 >> 2] = i4[B4 + 200 >> 2], i4[g6 + 76 >> 2] = I7, I7 = i4[B4 + 196 >> 2], i4[G4 >> 2] = i4[B4 + 192 >> 2], i4[G4 + 4 >> 2] = I7, I7 = i4[g6 + 44 >> 2], i4[B4 + 120 >> 2] = i4[g6 + 40 >> 2], i4[B4 + 124 >> 2] = I7, I7 = i4[g6 + 36 >> 2], i4[B4 + 112 >> 2] = i4[g6 + 32 >> 2], i4[B4 + 116 >> 2] = I7, I7 = i4[g6 + 60 >> 2], i4[B4 + 104 >> 2] = i4[g6 + 56 >> 2], i4[B4 + 108 >> 2] = I7, I7 = i4[g6 + 52 >> 2], i4[B4 + 96 >> 2] = i4[g6 + 48 >> 2], i4[B4 + 100 >> 2] = I7, AI(A8, B4 + 112 | 0, B4 + 96 | 0), I7 = i4[B4 + 204 >> 2], i4[g6 + 56 >> 2] = i4[B4 + 200 >> 2], i4[g6 + 60 >> 2] = I7, I7 = i4[B4 + 196 >> 2], i4[g6 + 48 >> 2] = i4[B4 + 192 >> 2], i4[g6 + 52 >> 2] = I7, I7 = i4[g6 + 28 >> 2], i4[B4 + 88 >> 2] = i4[g6 + 24 >> 2], i4[B4 + 92 >> 2] = I7, I7 = i4[g6 + 20 >> 2], i4[B4 + 80 >> 2] = i4[g6 + 16 >> 2], i4[B4 + 84 >> 2] = I7, I7 = i4[g6 + 44 >> 2], i4[B4 + 72 >> 2] = i4[g6 + 40 >> 2], i4[B4 + 76 >> 2] = I7, I7 = i4[g6 + 36 >> 2], i4[B4 + 64 >> 2] = i4[g6 + 32 >> 2], i4[B4 + 68 >> 2] = I7, AI(A8, B4 + 80 | 0, B4 - -64 | 0), I7 = i4[B4 + 204 >> 2], i4[g6 + 40 >> 2] = i4[B4 + 200 >> 2], i4[g6 + 44 >> 2] = I7, I7 = i4[B4 + 196 >> 2], i4[g6 + 32 >> 2] = i4[B4 + 192 >> 2], i4[g6 + 36 >> 2] = I7, I7 = i4[g6 + 12 >> 2], i4[B4 + 56 >> 2] = i4[g6 + 8 >> 2], i4[B4 + 60 >> 2] = I7, I7 = i4[g6 + 4 >> 2], i4[B4 + 48 >> 2] = i4[g6 >> 2], i4[B4 + 52 >> 2] = I7, I7 = i4[g6 + 28 >> 2], i4[B4 + 40 >> 2] = i4[g6 + 24 >> 2], i4[B4 + 44 >> 2] = I7, I7 = i4[g6 + 20 >> 2], i4[B4 + 32 >> 2] = i4[g6 + 16 >> 2], i4[B4 + 36 >> 2] = I7, AI(A8, B4 + 48 | 0, B4 + 32 | 0), I7 = i4[B4 + 204 >> 2], i4[g6 + 24 >> 2] = i4[B4 + 200 >> 2], i4[g6 + 28 >> 2] = I7, I7 = i4[B4 + 196 >> 2], i4[g6 + 16 >> 2] = i4[B4 + 192 >> 2], i4[g6 + 20 >> 2] = I7, I7 = i4[B4 + 220 >> 2], i4[B4 + 24 >> 2] = i4[B4 + 216 >> 2], i4[B4 + 28 >> 2] = I7, I7 = i4[B4 + 212 >> 2], i4[B4 + 16 >> 2] = i4[B4 + 208 >> 2], i4[B4 + 20 >> 2] = I7, I7 = i4[g6 + 12 >> 2], i4[B4 + 8 >> 2] = i4[g6 + 8 >> 2], i4[B4 + 12 >> 2] = I7, I7 = i4[g6 + 4 >> 2], i4[B4 >> 2] = i4[g6 >> 2], i4[B4 + 4 >> 2] = I7, AI(A8, B4 + 16 | 0, B4), A8 = i4[B4 + 192 >> 2], I7 = i4[B4 + 196 >> 2], G4 = i4[B4 + 200 >> 2], i4[g6 + 12 >> 2] = _4 ^ i4[B4 + 204 >> 2], i4[g6 + 8 >> 2] = G4 ^ E4, i4[g6 + 4 >> 2] = I7 ^ Q5, i4[g6 >> 2] = A8 ^ a4, s3 = B4 + 224 | 0;
                    }
                    function O(A8, I7, g6) {
                      var B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, f4, p4, w4, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0;
                      s3 = B4 = s3 - 224 | 0, F4 = o3[g6 + 16 | 0] | o3[g6 + 17 | 0] << 8 | o3[g6 + 18 | 0] << 16 | o3[g6 + 19 | 0] << 24, k4 = o3[0 | (n5 = g6 - -64 | 0)] | o3[n5 + 1 | 0] << 8 | o3[n5 + 2 | 0] << 16 | o3[n5 + 3 | 0] << 24, Q5 = o3[g6 + 80 | 0] | o3[g6 + 81 | 0] << 8 | o3[g6 + 82 | 0] << 16 | o3[g6 + 83 | 0] << 24, E4 = o3[g6 + 32 | 0] | o3[g6 + 33 | 0] << 8 | o3[g6 + 34 | 0] << 16 | o3[g6 + 35 | 0] << 24, a4 = o3[g6 + 48 | 0] | o3[g6 + 49 | 0] << 8 | o3[g6 + 50 | 0] << 16 | o3[g6 + 51 | 0] << 24, S4 = o3[g6 + 20 | 0] | o3[g6 + 21 | 0] << 8 | o3[g6 + 22 | 0] << 16 | o3[g6 + 23 | 0] << 24, _4 = o3[g6 + 68 | 0] | o3[g6 + 69 | 0] << 8 | o3[g6 + 70 | 0] << 16 | o3[g6 + 71 | 0] << 24, c4 = o3[g6 + 84 | 0] | o3[g6 + 85 | 0] << 8 | o3[g6 + 86 | 0] << 16 | o3[g6 + 87 | 0] << 24, t4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, r4 = o3[g6 + 36 | 0] | o3[g6 + 37 | 0] << 8 | o3[g6 + 38 | 0] << 16 | o3[g6 + 39 | 0] << 24, e6 = o3[g6 + 52 | 0] | o3[g6 + 53 | 0] << 8 | o3[g6 + 54 | 0] << 16 | o3[g6 + 55 | 0] << 24, N4 = o3[g6 + 24 | 0] | o3[g6 + 25 | 0] << 8 | o3[g6 + 26 | 0] << 16 | o3[g6 + 27 | 0] << 24, y4 = o3[g6 + 72 | 0] | o3[g6 + 73 | 0] << 8 | o3[g6 + 74 | 0] << 16 | o3[g6 + 75 | 0] << 24, h4 = o3[g6 + 88 | 0] | o3[g6 + 89 | 0] << 8 | o3[g6 + 90 | 0] << 16 | o3[g6 + 91 | 0] << 24, D4 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, f4 = o3[g6 + 40 | 0] | o3[g6 + 41 | 0] << 8 | o3[g6 + 42 | 0] << 16 | o3[g6 + 43 | 0] << 24, p4 = o3[g6 + 56 | 0] | o3[g6 + 57 | 0] << 8 | o3[g6 + 58 | 0] << 16 | o3[g6 + 59 | 0] << 24, w4 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, I7 = (o3[g6 + 44 | 0] | o3[g6 + 45 | 0] << 8 | o3[g6 + 46 | 0] << 16 | o3[g6 + 47 | 0] << 24) & (o3[g6 + 60 | 0] | o3[g6 + 61 | 0] << 8 | o3[g6 + 62 | 0] << 16 | o3[g6 + 63 | 0] << 24) ^ (o3[g6 + 28 | 0] | o3[g6 + 29 | 0] << 8 | o3[g6 + 30 | 0] << 16 | o3[g6 + 31 | 0] << 24) ^ (o3[g6 + 76 | 0] | o3[g6 + 77 | 0] << 8 | o3[g6 + 78 | 0] << 16 | o3[g6 + 79 | 0] << 24) ^ (o3[g6 + 92 | 0] | o3[g6 + 93 | 0] << 8 | o3[g6 + 94 | 0] << 16 | o3[g6 + 95 | 0] << 24) ^ (o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24), C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, N4 = f4 & p4 ^ N4 ^ h4 ^ D4 ^ y4, C3[A8 + 8 | 0] = N4, C3[A8 + 9 | 0] = N4 >>> 8, C3[A8 + 10 | 0] = N4 >>> 16, C3[A8 + 11 | 0] = N4 >>> 24, S4 = r4 & e6 ^ S4 ^ c4 ^ t4 ^ _4, C3[A8 + 4 | 0] = S4, C3[A8 + 5 | 0] = S4 >>> 8, C3[A8 + 6 | 0] = S4 >>> 16, C3[A8 + 7 | 0] = S4 >>> 24, F4 = E4 & a4 ^ F4 ^ k4 ^ Q5 ^ w4, C3[0 | A8] = F4, C3[A8 + 1 | 0] = F4 >>> 8, C3[A8 + 2 | 0] = F4 >>> 16, C3[A8 + 3 | 0] = F4 >>> 24, A8 = i4[g6 + 92 >> 2], i4[B4 + 216 >> 2] = i4[g6 + 88 >> 2], i4[B4 + 220 >> 2] = A8, A8 = i4[g6 + 84 >> 2], i4[B4 + 208 >> 2] = i4[g6 + 80 >> 2], i4[B4 + 212 >> 2] = A8, A8 = i4[g6 + 76 >> 2], i4[B4 + 184 >> 2] = i4[g6 + 72 >> 2], i4[B4 + 188 >> 2] = A8, A8 = i4[n5 + 4 >> 2], i4[B4 + 176 >> 2] = i4[n5 >> 2], i4[B4 + 180 >> 2] = A8, A8 = i4[g6 + 92 >> 2], i4[B4 + 168 >> 2] = i4[g6 + 88 >> 2], i4[B4 + 172 >> 2] = A8, A8 = i4[g6 + 84 >> 2], i4[B4 + 160 >> 2] = i4[g6 + 80 >> 2], i4[B4 + 164 >> 2] = A8, AI(A8 = B4 + 192 | 0, B4 + 176 | 0, B4 + 160 | 0), k4 = i4[B4 + 204 >> 2], i4[g6 + 88 >> 2] = i4[B4 + 200 >> 2], i4[g6 + 92 >> 2] = k4, k4 = i4[B4 + 196 >> 2], i4[g6 + 80 >> 2] = i4[B4 + 192 >> 2], i4[g6 + 84 >> 2] = k4, k4 = i4[g6 + 60 >> 2], i4[B4 + 152 >> 2] = i4[g6 + 56 >> 2], i4[B4 + 156 >> 2] = k4, k4 = i4[g6 + 52 >> 2], i4[B4 + 144 >> 2] = i4[g6 + 48 >> 2], i4[B4 + 148 >> 2] = k4, k4 = i4[g6 + 76 >> 2], i4[B4 + 136 >> 2] = i4[g6 + 72 >> 2], i4[B4 + 140 >> 2] = k4, k4 = i4[n5 + 4 >> 2], i4[B4 + 128 >> 2] = i4[n5 >> 2], i4[B4 + 132 >> 2] = k4, AI(A8, B4 + 144 | 0, B4 + 128 | 0), k4 = i4[B4 + 204 >> 2], i4[g6 + 72 >> 2] = i4[B4 + 200 >> 2], i4[g6 + 76 >> 2] = k4, k4 = i4[B4 + 196 >> 2], i4[n5 >> 2] = i4[B4 + 192 >> 2], i4[n5 + 4 >> 2] = k4, n5 = i4[g6 + 44 >> 2], i4[B4 + 120 >> 2] = i4[g6 + 40 >> 2], i4[B4 + 124 >> 2] = n5, n5 = i4[g6 + 36 >> 2], i4[B4 + 112 >> 2] = i4[g6 + 32 >> 2], i4[B4 + 116 >> 2] = n5, n5 = i4[g6 + 60 >> 2], i4[B4 + 104 >> 2] = i4[g6 + 56 >> 2], i4[B4 + 108 >> 2] = n5, n5 = i4[g6 + 52 >> 2], i4[B4 + 96 >> 2] = i4[g6 + 48 >> 2], i4[B4 + 100 >> 2] = n5, AI(A8, B4 + 112 | 0, B4 + 96 | 0), n5 = i4[B4 + 204 >> 2], i4[g6 + 56 >> 2] = i4[B4 + 200 >> 2], i4[g6 + 60 >> 2] = n5, n5 = i4[B4 + 196 >> 2], i4[g6 + 48 >> 2] = i4[B4 + 192 >> 2], i4[g6 + 52 >> 2] = n5, n5 = i4[g6 + 28 >> 2], i4[B4 + 88 >> 2] = i4[g6 + 24 >> 2], i4[B4 + 92 >> 2] = n5, n5 = i4[g6 + 20 >> 2], i4[B4 + 80 >> 2] = i4[g6 + 16 >> 2], i4[B4 + 84 >> 2] = n5, n5 = i4[g6 + 44 >> 2], i4[B4 + 72 >> 2] = i4[g6 + 40 >> 2], i4[B4 + 76 >> 2] = n5, n5 = i4[g6 + 36 >> 2], i4[B4 + 64 >> 2] = i4[g6 + 32 >> 2], i4[B4 + 68 >> 2] = n5, AI(A8, B4 + 80 | 0, B4 - -64 | 0), n5 = i4[B4 + 204 >> 2], i4[g6 + 40 >> 2] = i4[B4 + 200 >> 2], i4[g6 + 44 >> 2] = n5, n5 = i4[B4 + 196 >> 2], i4[g6 + 32 >> 2] = i4[B4 + 192 >> 2], i4[g6 + 36 >> 2] = n5, n5 = i4[g6 + 12 >> 2], i4[B4 + 56 >> 2] = i4[g6 + 8 >> 2], i4[B4 + 60 >> 2] = n5, n5 = i4[g6 + 4 >> 2], i4[B4 + 48 >> 2] = i4[g6 >> 2], i4[B4 + 52 >> 2] = n5, n5 = i4[g6 + 28 >> 2], i4[B4 + 40 >> 2] = i4[g6 + 24 >> 2], i4[B4 + 44 >> 2] = n5, n5 = i4[g6 + 20 >> 2], i4[B4 + 32 >> 2] = i4[g6 + 16 >> 2], i4[B4 + 36 >> 2] = n5, AI(A8, B4 + 48 | 0, B4 + 32 | 0), n5 = i4[B4 + 204 >> 2], i4[g6 + 24 >> 2] = i4[B4 + 200 >> 2], i4[g6 + 28 >> 2] = n5, n5 = i4[B4 + 196 >> 2], i4[g6 + 16 >> 2] = i4[B4 + 192 >> 2], i4[g6 + 20 >> 2] = n5, n5 = i4[B4 + 220 >> 2], i4[B4 + 24 >> 2] = i4[B4 + 216 >> 2], i4[B4 + 28 >> 2] = n5, n5 = i4[B4 + 212 >> 2], i4[B4 + 16 >> 2] = i4[B4 + 208 >> 2], i4[B4 + 20 >> 2] = n5, n5 = i4[g6 + 12 >> 2], i4[B4 + 8 >> 2] = i4[g6 + 8 >> 2], i4[B4 + 12 >> 2] = n5, n5 = i4[g6 + 4 >> 2], i4[B4 >> 2] = i4[g6 >> 2], i4[B4 + 4 >> 2] = n5, AI(A8, B4 + 16 | 0, B4), A8 = i4[B4 + 192 >> 2], n5 = i4[B4 + 196 >> 2], k4 = i4[B4 + 200 >> 2], i4[g6 + 12 >> 2] = I7 ^ i4[B4 + 204 >> 2], i4[g6 + 8 >> 2] = k4 ^ N4, i4[g6 + 4 >> 2] = n5 ^ S4, i4[g6 >> 2] = A8 ^ F4, s3 = B4 + 224 | 0;
                    }
                    function W(A8, I7) {
                      var g6, B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, v4 = 0, L4 = 0, P7 = 0, q3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, W2 = 0, V2 = 0, Z2 = 0;
                      s3 = g6 = s3 - 800 | 0, y4 = i4[I7 + 44 >> 2], D4 = i4[I7 + 84 >> 2], f4 = i4[I7 + 48 >> 2], p4 = i4[I7 + 88 >> 2], w4 = i4[I7 + 52 >> 2], h4 = i4[I7 + 92 >> 2], S4 = i4[I7 + 56 >> 2], n5 = i4[I7 + 96 >> 2], K4 = i4[I7 + 60 >> 2], N4 = i4[I7 + 100 >> 2], H4 = i4[(U4 = I7 - -64 | 0) >> 2], Y4 = i4[I7 + 104 >> 2], J4 = i4[I7 + 68 >> 2], d5 = i4[I7 + 108 >> 2], m4 = i4[I7 + 72 >> 2], l4 = i4[I7 + 112 >> 2], u4 = i4[I7 + 40 >> 2], x4 = i4[I7 + 80 >> 2], k4 = i4[I7 + 76 >> 2], F4 = i4[I7 + 116 >> 2], i4[g6 + 324 >> 2] = k4 + F4, i4[g6 + 320 >> 2] = m4 + l4, i4[g6 + 316 >> 2] = J4 + d5, i4[g6 + 312 >> 2] = H4 + Y4, i4[g6 + 308 >> 2] = N4 + K4, i4[g6 + 304 >> 2] = n5 + S4, i4[g6 + 300 >> 2] = h4 + w4, i4[g6 + 296 >> 2] = f4 + p4, i4[g6 + 292 >> 2] = y4 + D4, i4[g6 + 288 >> 2] = u4 + x4, i4[g6 + 36 >> 2] = F4 - k4, i4[g6 + 32 >> 2] = l4 - m4, i4[g6 + 28 >> 2] = d5 - J4, i4[g6 + 24 >> 2] = Y4 - H4, i4[g6 + 20 >> 2] = N4 - K4, i4[g6 + 16 >> 2] = n5 - S4, i4[g6 + 12 >> 2] = h4 - w4, i4[g6 + 8 >> 2] = p4 - f4, i4[g6 + 4 >> 2] = D4 - y4, i4[g6 >> 2] = x4 - u4, b4(y4 = g6 + 288 | 0, y4, g6), b4(f4 = g6 + 240 | 0, I7, w4 = I7 + 40 | 0), R3(D4 = g6 + 192 | 0, f4), b4(D4, y4, D4), i4[g6 + 452 >> 2] = 0, i4[g6 + 456 >> 2] = 0, i4[g6 + 460 >> 2] = 0, i4[g6 + 464 >> 2] = 0, i4[g6 + 468 >> 2] = 0, i4[g6 + 436 >> 2] = 0, i4[g6 + 440 >> 2] = 0, i4[g6 + 444 >> 2] = 0, i4[g6 + 448 >> 2] = 0, i4[g6 + 432 >> 2] = 1, GA(p4 = g6 + 576 | 0, g6 + 432 | 0, D4), b4(D4 = g6 + 720 | 0, p4, y4), b4(K4 = g6 + 672 | 0, p4, f4), b4(n5 = g6 + 48 | 0, D4, K4), b4(n5, n5, y4 = I7 + 120 | 0), b4(g6 + 528 | 0, I7, 1632), b4(g6 + 480 | 0, w4, 1632), b4(g6 + 624 | 0, D4, 2944), b4(D4 = g6 + 336 | 0, y4, n5), QI(S4 = g6 + 384 | 0, D4), h4 = o3[g6 + 384 | 0], D4 = i4[I7 + 36 >> 2], y4 = i4[I7 + 32 >> 2], i4[g6 + 176 >> 2] = y4, i4[g6 + 180 >> 2] = D4, f4 = i4[I7 + 28 >> 2], D4 = i4[I7 + 24 >> 2], i4[g6 + 168 >> 2] = D4, i4[g6 + 172 >> 2] = f4, p4 = i4[I7 + 20 >> 2], f4 = i4[I7 + 16 >> 2], i4[g6 + 160 >> 2] = f4, i4[g6 + 164 >> 2] = p4, w4 = i4[I7 + 12 >> 2], p4 = i4[I7 + 8 >> 2], i4[g6 + 152 >> 2] = p4, i4[g6 + 156 >> 2] = w4, N4 = i4[I7 + 4 >> 2], w4 = i4[I7 >> 2], i4[g6 + 144 >> 2] = w4, i4[g6 + 148 >> 2] = N4, N4 = i4[I7 + 44 >> 2], H4 = i4[I7 + 48 >> 2], Y4 = i4[I7 + 52 >> 2], J4 = i4[I7 + 56 >> 2], d5 = i4[I7 + 60 >> 2], m4 = i4[U4 >> 2], l4 = i4[I7 + 68 >> 2], u4 = i4[I7 + 72 >> 2], x4 = i4[I7 + 76 >> 2], U4 = i4[I7 + 40 >> 2], P7 = i4[g6 + 484 >> 2], k4 = i4[g6 + 148 >> 2], q3 = i4[g6 + 492 >> 2], F4 = i4[g6 + 156 >> 2], z2 = i4[g6 + 500 >> 2], G4 = i4[g6 + 164 >> 2], j2 = i4[g6 + 508 >> 2], M4 = i4[g6 + 172 >> 2], X2 = i4[g6 + 516 >> 2], v4 = i4[g6 + 180 >> 2], O2 = i4[g6 + 480 >> 2], W2 = i4[g6 + 488 >> 2], V2 = i4[g6 + 496 >> 2], Z2 = i4[g6 + 504 >> 2], h4 = 0 - (1 & h4) | 0, i4[g6 + 176 >> 2] = y4 ^ h4 & (y4 ^ i4[g6 + 512 >> 2]), i4[g6 + 168 >> 2] = D4 ^ h4 & (D4 ^ Z2), i4[g6 + 160 >> 2] = f4 ^ h4 & (f4 ^ V2), i4[g6 + 152 >> 2] = p4 ^ h4 & (p4 ^ W2), i4[g6 + 144 >> 2] = w4 ^ h4 & (w4 ^ O2), i4[g6 + 180 >> 2] = v4 ^ h4 & (v4 ^ X2), i4[g6 + 172 >> 2] = M4 ^ h4 & (M4 ^ j2), i4[g6 + 164 >> 2] = G4 ^ h4 & (G4 ^ z2), i4[g6 + 156 >> 2] = F4 ^ h4 & (F4 ^ q3), i4[g6 + 148 >> 2] = k4 ^ h4 & (k4 ^ P7), v4 = i4[g6 + 528 >> 2], P7 = i4[g6 + 532 >> 2], q3 = i4[g6 + 536 >> 2], z2 = i4[g6 + 540 >> 2], j2 = i4[g6 + 544 >> 2], X2 = i4[g6 + 548 >> 2], O2 = i4[g6 + 552 >> 2], W2 = i4[g6 + 556 >> 2], V2 = i4[g6 + 560 >> 2], Z2 = i4[g6 + 564 >> 2], y4 = i4[g6 + 672 >> 2], B4 = i4[g6 + 624 >> 2], D4 = i4[g6 + 676 >> 2], Q5 = i4[g6 + 628 >> 2], f4 = i4[g6 + 680 >> 2], E4 = i4[g6 + 632 >> 2], p4 = i4[g6 + 684 >> 2], a4 = i4[g6 + 636 >> 2], w4 = i4[g6 + 688 >> 2], _4 = i4[g6 + 640 >> 2], k4 = i4[g6 + 692 >> 2], c4 = i4[g6 + 644 >> 2], F4 = i4[g6 + 696 >> 2], t4 = i4[g6 + 648 >> 2], G4 = i4[g6 + 700 >> 2], r4 = i4[g6 + 652 >> 2], M4 = i4[g6 + 704 >> 2], e6 = i4[g6 + 656 >> 2], L4 = i4[g6 + 708 >> 2], i4[g6 + 708 >> 2] = L4 ^ h4 & (i4[g6 + 660 >> 2] ^ L4), i4[g6 + 704 >> 2] = M4 ^ h4 & (M4 ^ e6), i4[g6 + 700 >> 2] = G4 ^ h4 & (G4 ^ r4), i4[g6 + 696 >> 2] = F4 ^ h4 & (F4 ^ t4), i4[g6 + 692 >> 2] = k4 ^ h4 & (k4 ^ c4), i4[g6 + 688 >> 2] = w4 ^ h4 & (w4 ^ _4), i4[g6 + 684 >> 2] = p4 ^ h4 & (p4 ^ a4), i4[g6 + 680 >> 2] = f4 ^ h4 & (f4 ^ E4), i4[g6 + 676 >> 2] = D4 ^ h4 & (D4 ^ Q5), i4[g6 + 672 >> 2] = y4 ^ h4 & (y4 ^ B4), b4(y4 = g6 + 96 | 0, g6 + 144 | 0, n5), QI(S4, y4), D4 = i4[I7 + 84 >> 2], f4 = i4[I7 + 88 >> 2], p4 = i4[I7 + 92 >> 2], w4 = i4[I7 + 96 >> 2], n5 = i4[I7 + 100 >> 2], k4 = i4[I7 + 104 >> 2], F4 = i4[I7 + 108 >> 2], G4 = i4[I7 + 112 >> 2], M4 = i4[I7 + 80 >> 2], L4 = i4[I7 + 116 >> 2], I7 = 0 - (1 & C3[g6 + 384 | 0]) | 0, y4 = x4 ^ h4 & (x4 ^ Z2), i4[g6 + 420 >> 2] = L4 - (I7 & (0 - y4 ^ y4) ^ y4), y4 = u4 ^ h4 & (u4 ^ V2), i4[g6 + 416 >> 2] = G4 - (I7 & (0 - y4 ^ y4) ^ y4), y4 = l4 ^ h4 & (l4 ^ W2), i4[g6 + 412 >> 2] = F4 - (I7 & (0 - y4 ^ y4) ^ y4), y4 = m4 ^ h4 & (m4 ^ O2), i4[g6 + 408 >> 2] = k4 - (I7 & (0 - y4 ^ y4) ^ y4), y4 = d5 ^ h4 & (d5 ^ X2), i4[g6 + 404 >> 2] = n5 - (I7 & (0 - y4 ^ y4) ^ y4), y4 = J4 ^ h4 & (J4 ^ j2), i4[g6 + 400 >> 2] = w4 - (I7 & (0 - y4 ^ y4) ^ y4), y4 = Y4 ^ h4 & (Y4 ^ z2), i4[g6 + 396 >> 2] = p4 - (I7 & (0 - y4 ^ y4) ^ y4), y4 = H4 ^ h4 & (H4 ^ q3), i4[g6 + 392 >> 2] = f4 - (I7 & (0 - y4 ^ y4) ^ y4), y4 = N4 ^ h4 & (N4 ^ P7), i4[g6 + 388 >> 2] = D4 - (I7 & (0 - y4 ^ y4) ^ y4), y4 = I7, I7 = U4 ^ h4 & (U4 ^ v4), i4[g6 + 384 >> 2] = M4 - (y4 & (0 - I7 ^ I7) ^ I7), b4(S4, K4, S4), QI(g6 + 768 | 0, S4), I7 = 0 - (1 & C3[g6 + 768 | 0]) | 0, y4 = i4[g6 + 384 >> 2], i4[g6 + 384 >> 2] = I7 & (0 - y4 ^ y4) ^ y4, y4 = i4[g6 + 388 >> 2], i4[g6 + 388 >> 2] = I7 & (0 - y4 ^ y4) ^ y4, y4 = i4[g6 + 392 >> 2], i4[g6 + 392 >> 2] = I7 & (0 - y4 ^ y4) ^ y4, y4 = i4[g6 + 396 >> 2], i4[g6 + 396 >> 2] = I7 & (0 - y4 ^ y4) ^ y4, y4 = i4[g6 + 400 >> 2], i4[g6 + 400 >> 2] = I7 & (0 - y4 ^ y4) ^ y4, y4 = i4[g6 + 404 >> 2], i4[g6 + 404 >> 2] = I7 & (0 - y4 ^ y4) ^ y4, y4 = i4[g6 + 408 >> 2], i4[g6 + 408 >> 2] = I7 & (0 - y4 ^ y4) ^ y4, y4 = i4[g6 + 412 >> 2], i4[g6 + 412 >> 2] = I7 & (0 - y4 ^ y4) ^ y4, y4 = i4[g6 + 416 >> 2], i4[g6 + 416 >> 2] = I7 & (0 - y4 ^ y4) ^ y4, y4 = I7, I7 = i4[g6 + 420 >> 2], i4[g6 + 420 >> 2] = y4 & (0 - I7 ^ I7) ^ I7, QI(A8, S4), s3 = g6 + 800 | 0;
                    }
                    function V(A8, I7) {
                      var g6, C4, B4, Q5, E4, a4, _4, c4, t4, r4 = 0, e6 = 0;
                      s3 = g6 = s3 - 288 | 0, C4 = o3[A8 + 28 | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24, B4 = o3[A8 + 24 | 0] | o3[A8 + 25 | 0] << 8 | o3[A8 + 26 | 0] << 16 | o3[A8 + 27 | 0] << 24, Q5 = o3[A8 + 20 | 0] | o3[A8 + 21 | 0] << 8 | o3[A8 + 22 | 0] << 16 | o3[A8 + 23 | 0] << 24, E4 = o3[A8 + 16 | 0] | o3[A8 + 17 | 0] << 8 | o3[A8 + 18 | 0] << 16 | o3[A8 + 19 | 0] << 24, a4 = o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24, _4 = o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24, c4 = o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24, t4 = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, A8 = i4[I7 + 124 >> 2], i4[g6 + 280 >> 2] = i4[I7 + 120 >> 2], i4[g6 + 284 >> 2] = A8, A8 = i4[I7 + 116 >> 2], i4[g6 + 272 >> 2] = i4[I7 + 112 >> 2], i4[g6 + 276 >> 2] = A8, A8 = i4[I7 + 108 >> 2], i4[g6 + 248 >> 2] = i4[I7 + 104 >> 2], i4[g6 + 252 >> 2] = A8, A8 = i4[I7 + 100 >> 2], i4[g6 + 240 >> 2] = i4[I7 + 96 >> 2], i4[g6 + 244 >> 2] = A8, A8 = i4[I7 + 124 >> 2], i4[g6 + 232 >> 2] = i4[I7 + 120 >> 2], i4[g6 + 236 >> 2] = A8, A8 = i4[I7 + 116 >> 2], i4[g6 + 224 >> 2] = i4[I7 + 112 >> 2], i4[g6 + 228 >> 2] = A8, AI(e6 = g6 + 256 | 0, g6 + 240 | 0, g6 + 224 | 0), A8 = i4[g6 + 268 >> 2], i4[I7 + 120 >> 2] = i4[g6 + 264 >> 2], i4[I7 + 124 >> 2] = A8, A8 = i4[g6 + 260 >> 2], i4[I7 + 112 >> 2] = i4[g6 + 256 >> 2], i4[I7 + 116 >> 2] = A8, A8 = i4[I7 + 92 >> 2], i4[g6 + 216 >> 2] = i4[I7 + 88 >> 2], i4[g6 + 220 >> 2] = A8, A8 = i4[I7 + 84 >> 2], i4[g6 + 208 >> 2] = i4[I7 + 80 >> 2], i4[g6 + 212 >> 2] = A8, A8 = i4[I7 + 108 >> 2], i4[g6 + 200 >> 2] = i4[I7 + 104 >> 2], i4[g6 + 204 >> 2] = A8, A8 = i4[I7 + 100 >> 2], i4[g6 + 192 >> 2] = i4[I7 + 96 >> 2], i4[g6 + 196 >> 2] = A8, AI(e6, g6 + 208 | 0, g6 + 192 | 0), A8 = i4[g6 + 268 >> 2], i4[I7 + 104 >> 2] = i4[g6 + 264 >> 2], i4[I7 + 108 >> 2] = A8, A8 = i4[g6 + 260 >> 2], i4[I7 + 96 >> 2] = i4[g6 + 256 >> 2], i4[I7 + 100 >> 2] = A8, A8 = i4[I7 + 76 >> 2], i4[g6 + 184 >> 2] = i4[I7 + 72 >> 2], i4[g6 + 188 >> 2] = A8, r4 = i4[4 + (A8 = I7 - -64 | 0) >> 2], i4[g6 + 176 >> 2] = i4[A8 >> 2], i4[g6 + 180 >> 2] = r4, r4 = i4[I7 + 92 >> 2], i4[g6 + 168 >> 2] = i4[I7 + 88 >> 2], i4[g6 + 172 >> 2] = r4, r4 = i4[I7 + 84 >> 2], i4[g6 + 160 >> 2] = i4[I7 + 80 >> 2], i4[g6 + 164 >> 2] = r4, AI(e6, g6 + 176 | 0, g6 + 160 | 0), r4 = i4[g6 + 268 >> 2], i4[I7 + 88 >> 2] = i4[g6 + 264 >> 2], i4[I7 + 92 >> 2] = r4, r4 = i4[g6 + 260 >> 2], i4[I7 + 80 >> 2] = i4[g6 + 256 >> 2], i4[I7 + 84 >> 2] = r4, r4 = i4[I7 + 60 >> 2], i4[g6 + 152 >> 2] = i4[I7 + 56 >> 2], i4[g6 + 156 >> 2] = r4, r4 = i4[I7 + 52 >> 2], i4[g6 + 144 >> 2] = i4[I7 + 48 >> 2], i4[g6 + 148 >> 2] = r4, r4 = i4[I7 + 76 >> 2], i4[g6 + 136 >> 2] = i4[I7 + 72 >> 2], i4[g6 + 140 >> 2] = r4, r4 = i4[A8 + 4 >> 2], i4[g6 + 128 >> 2] = i4[A8 >> 2], i4[g6 + 132 >> 2] = r4, AI(e6, g6 + 144 | 0, g6 + 128 | 0), r4 = i4[g6 + 268 >> 2], i4[I7 + 72 >> 2] = i4[g6 + 264 >> 2], i4[I7 + 76 >> 2] = r4, r4 = i4[g6 + 260 >> 2], i4[A8 >> 2] = i4[g6 + 256 >> 2], i4[A8 + 4 >> 2] = r4, r4 = i4[I7 + 44 >> 2], i4[g6 + 120 >> 2] = i4[I7 + 40 >> 2], i4[g6 + 124 >> 2] = r4, r4 = i4[I7 + 36 >> 2], i4[g6 + 112 >> 2] = i4[I7 + 32 >> 2], i4[g6 + 116 >> 2] = r4, r4 = i4[I7 + 60 >> 2], i4[g6 + 104 >> 2] = i4[I7 + 56 >> 2], i4[g6 + 108 >> 2] = r4, r4 = i4[I7 + 52 >> 2], i4[g6 + 96 >> 2] = i4[I7 + 48 >> 2], i4[g6 + 100 >> 2] = r4, AI(e6, g6 + 112 | 0, g6 + 96 | 0), r4 = i4[g6 + 268 >> 2], i4[I7 + 56 >> 2] = i4[g6 + 264 >> 2], i4[I7 + 60 >> 2] = r4, r4 = i4[g6 + 260 >> 2], i4[I7 + 48 >> 2] = i4[g6 + 256 >> 2], i4[I7 + 52 >> 2] = r4, r4 = i4[I7 + 28 >> 2], i4[g6 + 88 >> 2] = i4[I7 + 24 >> 2], i4[g6 + 92 >> 2] = r4, r4 = i4[I7 + 20 >> 2], i4[g6 + 80 >> 2] = i4[I7 + 16 >> 2], i4[g6 + 84 >> 2] = r4, r4 = i4[I7 + 44 >> 2], i4[g6 + 72 >> 2] = i4[I7 + 40 >> 2], i4[g6 + 76 >> 2] = r4, r4 = i4[I7 + 36 >> 2], i4[g6 + 64 >> 2] = i4[I7 + 32 >> 2], i4[g6 + 68 >> 2] = r4, AI(e6, g6 + 80 | 0, g6 - -64 | 0), r4 = i4[g6 + 268 >> 2], i4[I7 + 40 >> 2] = i4[g6 + 264 >> 2], i4[I7 + 44 >> 2] = r4, r4 = i4[g6 + 260 >> 2], i4[I7 + 32 >> 2] = i4[g6 + 256 >> 2], i4[I7 + 36 >> 2] = r4, r4 = i4[I7 + 12 >> 2], i4[g6 + 56 >> 2] = i4[I7 + 8 >> 2], i4[g6 + 60 >> 2] = r4, r4 = i4[I7 + 4 >> 2], i4[g6 + 48 >> 2] = i4[I7 >> 2], i4[g6 + 52 >> 2] = r4, r4 = i4[I7 + 28 >> 2], i4[g6 + 40 >> 2] = i4[I7 + 24 >> 2], i4[g6 + 44 >> 2] = r4, r4 = i4[I7 + 20 >> 2], i4[g6 + 32 >> 2] = i4[I7 + 16 >> 2], i4[g6 + 36 >> 2] = r4, AI(e6, g6 + 48 | 0, g6 + 32 | 0), r4 = i4[g6 + 268 >> 2], i4[I7 + 24 >> 2] = i4[g6 + 264 >> 2], i4[I7 + 28 >> 2] = r4, r4 = i4[g6 + 260 >> 2], i4[I7 + 16 >> 2] = i4[g6 + 256 >> 2], i4[I7 + 20 >> 2] = r4, r4 = i4[g6 + 284 >> 2], i4[g6 + 24 >> 2] = i4[g6 + 280 >> 2], i4[g6 + 28 >> 2] = r4, r4 = i4[g6 + 276 >> 2], i4[g6 + 16 >> 2] = i4[g6 + 272 >> 2], i4[g6 + 20 >> 2] = r4, r4 = i4[I7 + 12 >> 2], i4[g6 + 8 >> 2] = i4[I7 + 8 >> 2], i4[g6 + 12 >> 2] = r4, r4 = i4[I7 + 4 >> 2], i4[g6 >> 2] = i4[I7 >> 2], i4[g6 + 4 >> 2] = r4, AI(e6, g6 + 16 | 0, g6), e6 = i4[g6 + 268 >> 2], i4[I7 + 8 >> 2] = i4[g6 + 264 >> 2], i4[I7 + 12 >> 2] = e6, e6 = i4[g6 + 260 >> 2], i4[I7 >> 2] = i4[g6 + 256 >> 2], i4[I7 + 4 >> 2] = e6, i4[I7 + 12 >> 2] = (o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24) ^ c4, i4[I7 + 8 >> 2] = (o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24) ^ _4, i4[I7 + 4 >> 2] = (o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24) ^ a4, i4[I7 >> 2] = (o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24) ^ t4, i4[A8 >> 2] = (o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24) ^ E4, i4[I7 + 68 >> 2] = (o3[I7 + 68 | 0] | o3[I7 + 69 | 0] << 8 | o3[I7 + 70 | 0] << 16 | o3[I7 + 71 | 0] << 24) ^ Q5, i4[I7 + 72 >> 2] = (o3[I7 + 72 | 0] | o3[I7 + 73 | 0] << 8 | o3[I7 + 74 | 0] << 16 | o3[I7 + 75 | 0] << 24) ^ B4, i4[I7 + 76 >> 2] = (o3[I7 + 76 | 0] | o3[I7 + 77 | 0] << 8 | o3[I7 + 78 | 0] << 16 | o3[I7 + 79 | 0] << 24) ^ C4, s3 = g6 + 288 | 0;
                    }
                    function Z(A8, I7, g6, C4) {
                      var B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, f4, p4, w4, n5, k4 = 0, F4 = 0, S4 = 0, N4 = 0;
                      s3 = B4 = s3 - 240 | 0, i4[B4 + 200 >> 2] = 0, i4[B4 + 204 >> 2] = 0, i4[B4 + 192 >> 2] = 0, i4[B4 + 196 >> 2] = 0, Ng(F4 = B4 + 192 | 0, I7, g6), S4 = o3[C4 + 16 | 0] | o3[C4 + 17 | 0] << 8 | o3[C4 + 18 | 0] << 16 | o3[C4 + 19 | 0] << 24, N4 = o3[0 | (I7 = C4 - -64 | 0)] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, k4 = o3[C4 + 80 | 0] | o3[C4 + 81 | 0] << 8 | o3[C4 + 82 | 0] << 16 | o3[C4 + 83 | 0] << 24, Q5 = o3[C4 + 32 | 0] | o3[C4 + 33 | 0] << 8 | o3[C4 + 34 | 0] << 16 | o3[C4 + 35 | 0] << 24, E4 = o3[C4 + 48 | 0] | o3[C4 + 49 | 0] << 8 | o3[C4 + 50 | 0] << 16 | o3[C4 + 51 | 0] << 24, a4 = o3[C4 + 20 | 0] | o3[C4 + 21 | 0] << 8 | o3[C4 + 22 | 0] << 16 | o3[C4 + 23 | 0] << 24, _4 = o3[C4 + 68 | 0] | o3[C4 + 69 | 0] << 8 | o3[C4 + 70 | 0] << 16 | o3[C4 + 71 | 0] << 24, c4 = o3[C4 + 84 | 0] | o3[C4 + 85 | 0] << 8 | o3[C4 + 86 | 0] << 16 | o3[C4 + 87 | 0] << 24, t4 = o3[C4 + 36 | 0] | o3[C4 + 37 | 0] << 8 | o3[C4 + 38 | 0] << 16 | o3[C4 + 39 | 0] << 24, r4 = o3[C4 + 52 | 0] | o3[C4 + 53 | 0] << 8 | o3[C4 + 54 | 0] << 16 | o3[C4 + 55 | 0] << 24, e6 = o3[C4 + 24 | 0] | o3[C4 + 25 | 0] << 8 | o3[C4 + 26 | 0] << 16 | o3[C4 + 27 | 0] << 24, y4 = o3[C4 + 72 | 0] | o3[C4 + 73 | 0] << 8 | o3[C4 + 74 | 0] << 16 | o3[C4 + 75 | 0] << 24, h4 = o3[C4 + 88 | 0] | o3[C4 + 89 | 0] << 8 | o3[C4 + 90 | 0] << 16 | o3[C4 + 91 | 0] << 24, D4 = o3[C4 + 40 | 0] | o3[C4 + 41 | 0] << 8 | o3[C4 + 42 | 0] << 16 | o3[C4 + 43 | 0] << 24, f4 = o3[C4 + 56 | 0] | o3[C4 + 57 | 0] << 8 | o3[C4 + 58 | 0] << 16 | o3[C4 + 59 | 0] << 24, p4 = i4[B4 + 192 >> 2], w4 = i4[B4 + 196 >> 2], n5 = i4[B4 + 200 >> 2], i4[B4 + 204 >> 2] = (o3[C4 + 44 | 0] | o3[C4 + 45 | 0] << 8 | o3[C4 + 46 | 0] << 16 | o3[C4 + 47 | 0] << 24) & (o3[C4 + 60 | 0] | o3[C4 + 61 | 0] << 8 | o3[C4 + 62 | 0] << 16 | o3[C4 + 63 | 0] << 24) ^ (o3[C4 + 28 | 0] | o3[C4 + 29 | 0] << 8 | o3[C4 + 30 | 0] << 16 | o3[C4 + 31 | 0] << 24) ^ (o3[C4 + 76 | 0] | o3[C4 + 77 | 0] << 8 | o3[C4 + 78 | 0] << 16 | o3[C4 + 79 | 0] << 24) ^ i4[B4 + 204 >> 2] ^ (o3[C4 + 92 | 0] | o3[C4 + 93 | 0] << 8 | o3[C4 + 94 | 0] << 16 | o3[C4 + 95 | 0] << 24), i4[B4 + 200 >> 2] = D4 & f4 ^ h4 ^ n5 ^ y4 ^ e6, i4[B4 + 196 >> 2] = t4 & r4 ^ c4 ^ w4 ^ _4 ^ a4, i4[B4 + 192 >> 2] = Q5 & E4 ^ S4 ^ N4 ^ k4 ^ p4, bg(g6 + F4 | 0, 0, 16 - g6 | 0), Ng(A8, F4, g6), g6 = i4[B4 + 192 >> 2], F4 = i4[B4 + 196 >> 2], S4 = i4[B4 + 200 >> 2], N4 = i4[B4 + 204 >> 2], A8 = i4[C4 + 92 >> 2], i4[B4 + 232 >> 2] = i4[C4 + 88 >> 2], i4[B4 + 236 >> 2] = A8, A8 = i4[C4 + 84 >> 2], i4[B4 + 224 >> 2] = i4[C4 + 80 >> 2], i4[B4 + 228 >> 2] = A8, A8 = i4[C4 + 76 >> 2], i4[B4 + 184 >> 2] = i4[C4 + 72 >> 2], i4[B4 + 188 >> 2] = A8, A8 = i4[I7 + 4 >> 2], i4[B4 + 176 >> 2] = i4[I7 >> 2], i4[B4 + 180 >> 2] = A8, A8 = i4[C4 + 92 >> 2], i4[B4 + 168 >> 2] = i4[C4 + 88 >> 2], i4[B4 + 172 >> 2] = A8, A8 = i4[C4 + 84 >> 2], i4[B4 + 160 >> 2] = i4[C4 + 80 >> 2], i4[B4 + 164 >> 2] = A8, AI(A8 = B4 + 208 | 0, B4 + 176 | 0, B4 + 160 | 0), k4 = i4[B4 + 220 >> 2], i4[C4 + 88 >> 2] = i4[B4 + 216 >> 2], i4[C4 + 92 >> 2] = k4, k4 = i4[B4 + 212 >> 2], i4[C4 + 80 >> 2] = i4[B4 + 208 >> 2], i4[C4 + 84 >> 2] = k4, k4 = i4[C4 + 60 >> 2], i4[B4 + 152 >> 2] = i4[C4 + 56 >> 2], i4[B4 + 156 >> 2] = k4, k4 = i4[C4 + 52 >> 2], i4[B4 + 144 >> 2] = i4[C4 + 48 >> 2], i4[B4 + 148 >> 2] = k4, k4 = i4[C4 + 76 >> 2], i4[B4 + 136 >> 2] = i4[C4 + 72 >> 2], i4[B4 + 140 >> 2] = k4, k4 = i4[I7 + 4 >> 2], i4[B4 + 128 >> 2] = i4[I7 >> 2], i4[B4 + 132 >> 2] = k4, AI(A8, B4 + 144 | 0, B4 + 128 | 0), k4 = i4[B4 + 220 >> 2], i4[C4 + 72 >> 2] = i4[B4 + 216 >> 2], i4[C4 + 76 >> 2] = k4, k4 = i4[B4 + 212 >> 2], i4[I7 >> 2] = i4[B4 + 208 >> 2], i4[I7 + 4 >> 2] = k4, I7 = i4[C4 + 44 >> 2], i4[B4 + 120 >> 2] = i4[C4 + 40 >> 2], i4[B4 + 124 >> 2] = I7, I7 = i4[C4 + 36 >> 2], i4[B4 + 112 >> 2] = i4[C4 + 32 >> 2], i4[B4 + 116 >> 2] = I7, I7 = i4[C4 + 60 >> 2], i4[B4 + 104 >> 2] = i4[C4 + 56 >> 2], i4[B4 + 108 >> 2] = I7, I7 = i4[C4 + 52 >> 2], i4[B4 + 96 >> 2] = i4[C4 + 48 >> 2], i4[B4 + 100 >> 2] = I7, AI(A8, B4 + 112 | 0, B4 + 96 | 0), I7 = i4[B4 + 220 >> 2], i4[C4 + 56 >> 2] = i4[B4 + 216 >> 2], i4[C4 + 60 >> 2] = I7, I7 = i4[B4 + 212 >> 2], i4[C4 + 48 >> 2] = i4[B4 + 208 >> 2], i4[C4 + 52 >> 2] = I7, I7 = i4[C4 + 28 >> 2], i4[B4 + 88 >> 2] = i4[C4 + 24 >> 2], i4[B4 + 92 >> 2] = I7, I7 = i4[C4 + 20 >> 2], i4[B4 + 80 >> 2] = i4[C4 + 16 >> 2], i4[B4 + 84 >> 2] = I7, I7 = i4[C4 + 44 >> 2], i4[B4 + 72 >> 2] = i4[C4 + 40 >> 2], i4[B4 + 76 >> 2] = I7, I7 = i4[C4 + 36 >> 2], i4[B4 + 64 >> 2] = i4[C4 + 32 >> 2], i4[B4 + 68 >> 2] = I7, AI(A8, B4 + 80 | 0, B4 - -64 | 0), I7 = i4[B4 + 220 >> 2], i4[C4 + 40 >> 2] = i4[B4 + 216 >> 2], i4[C4 + 44 >> 2] = I7, I7 = i4[B4 + 212 >> 2], i4[C4 + 32 >> 2] = i4[B4 + 208 >> 2], i4[C4 + 36 >> 2] = I7, I7 = i4[C4 + 12 >> 2], i4[B4 + 56 >> 2] = i4[C4 + 8 >> 2], i4[B4 + 60 >> 2] = I7, I7 = i4[C4 + 4 >> 2], i4[B4 + 48 >> 2] = i4[C4 >> 2], i4[B4 + 52 >> 2] = I7, I7 = i4[C4 + 28 >> 2], i4[B4 + 40 >> 2] = i4[C4 + 24 >> 2], i4[B4 + 44 >> 2] = I7, I7 = i4[C4 + 20 >> 2], i4[B4 + 32 >> 2] = i4[C4 + 16 >> 2], i4[B4 + 36 >> 2] = I7, AI(A8, B4 + 48 | 0, B4 + 32 | 0), I7 = i4[B4 + 220 >> 2], i4[C4 + 24 >> 2] = i4[B4 + 216 >> 2], i4[C4 + 28 >> 2] = I7, I7 = i4[B4 + 212 >> 2], i4[C4 + 16 >> 2] = i4[B4 + 208 >> 2], i4[C4 + 20 >> 2] = I7, I7 = i4[B4 + 236 >> 2], i4[B4 + 24 >> 2] = i4[B4 + 232 >> 2], i4[B4 + 28 >> 2] = I7, I7 = i4[B4 + 228 >> 2], i4[B4 + 16 >> 2] = i4[B4 + 224 >> 2], i4[B4 + 20 >> 2] = I7, I7 = i4[C4 + 12 >> 2], i4[B4 + 8 >> 2] = i4[C4 + 8 >> 2], i4[B4 + 12 >> 2] = I7, I7 = i4[C4 + 4 >> 2], i4[B4 >> 2] = i4[C4 >> 2], i4[B4 + 4 >> 2] = I7, AI(A8, B4 + 16 | 0, B4), A8 = i4[B4 + 208 >> 2], I7 = i4[B4 + 212 >> 2], k4 = i4[B4 + 216 >> 2], i4[C4 + 12 >> 2] = N4 ^ i4[B4 + 220 >> 2], i4[C4 + 8 >> 2] = k4 ^ S4, i4[C4 + 4 >> 2] = I7 ^ F4, i4[C4 >> 2] = A8 ^ g6, s3 = B4 + 240 | 0;
                    }
                    function T(A8, I7, g6, B4, Q5) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0;
                      var i5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0;
                      if (a4 = 1886610805 ^ (B4 = o3[0 | (Q5 |= 0)] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24), E4 = 1936682341 ^ (i5 = o3[Q5 + 4 | 0] | o3[Q5 + 5 | 0] << 8 | o3[Q5 + 6 | 0] << 16 | o3[Q5 + 7 | 0] << 24), c4 = 1852142177 ^ B4, _4 = 1819895653 ^ i5, i5 = 1852075885 ^ (B4 = o3[Q5 + 8 | 0] | o3[Q5 + 9 | 0] << 8 | o3[Q5 + 10 | 0] << 16 | o3[Q5 + 11 | 0] << 24), Q5 = 1685025377 ^ (r4 = o3[Q5 + 12 | 0] | o3[Q5 + 13 | 0] << 8 | o3[Q5 + 14 | 0] << 16 | o3[Q5 + 15 | 0] << 24), t4 = 2037671283 ^ B4, r4 ^= 1952801890, (0 | (h4 = (I7 + g6 | 0) - (y4 = 7 & g6) | 0)) != (0 | I7)) for (; t4 = c4 = c4 + (B4 = t4 ^ (w4 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24)) | 0, _4 = _4 + (r4 ^= n5 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24) | 0, _4 = B4 >>> 0 > c4 >>> 0 ? _4 + 1 | 0 : _4, E4 = Q5 + E4 | 0, E4 = (s4 = a4) >>> 0 > (a4 = i5 + a4 | 0) >>> 0 ? E4 + 1 | 0 : E4, Q5 = c4 + (i5 = UI(i5, Q5, 13) ^ a4) | 0, c4 = _4 + (e6 = f3 ^ E4) | 0, e6 = UI(i5, e6, 17) ^ Q5, D4 = UI(e6, c4 = (s4 = Q5 >>> 0 < i5 >>> 0 ? c4 + 1 | 0 : c4) ^ f3, 13), p4 = f3, B4 = UI(B4, r4, 16), i5 = _4 ^ f3, _4 = B4 ^ t4, a4 = UI(a4, E4, 32), t4 = c4, c4 = f3 + i5 | 0, t4 = 1 + (a4 = t4 + (E4 = (B4 = _4 + a4 | 0) >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4) | 0) | 0, c4 = a4, c4 = (a4 = B4 + e6 | 0) >>> 0 < B4 >>> 0 ? t4 : c4, D4 = UI(t4 = a4 ^ D4, r4 = c4 ^ p4, 17), p4 = f3, i5 = UI(_4, i5, 21), E4 ^= f3, k4 = B4 ^ i5, Q5 = UI(Q5, s4, 32), i5 = f3 + E4 | 0, Q5 = r4 + (s4 = (B4 = k4 + Q5 | 0) >>> 0 < Q5 >>> 0 ? i5 + 1 | 0 : i5) | 0, i5 = (_4 = B4 + t4 | 0) ^ D4, Q5 = (e6 = _4 >>> 0 < B4 >>> 0 ? Q5 + 1 | 0 : Q5) ^ p4, E4 = UI(k4, E4, 16), r4 = t4 = s4 ^ f3, E4 = UI(B4 ^= E4, t4, 21), s4 = f3, t4 = (B4 = (a4 = UI(a4, c4, 32)) + B4 | 0) ^ E4, c4 = f3 + r4 | 0, r4 = (E4 = B4 >>> 0 < a4 >>> 0 ? c4 + 1 | 0 : c4) ^ s4, c4 = UI(_4, e6, 32), _4 = f3, a4 = B4 ^ w4, E4 ^= n5, (0 | h4) != (0 | (I7 = I7 + 8 | 0)); ) ;
                      switch (g6 <<= 24, B4 = 0, y4 - 1 | 0) {
                        case 6:
                          g6 |= o3[I7 + 6 | 0] << 16;
                        case 5:
                          g6 |= o3[I7 + 5 | 0] << 8;
                        case 4:
                          g6 |= o3[I7 + 4 | 0];
                        case 3:
                          e6 = (B4 = o3[I7 + 3 | 0]) >>> 8 | 0, B4 <<= 24, g6 |= e6;
                        case 2:
                          B4 |= (e6 = o3[I7 + 2 | 0]) << 16, g6 |= y4 = e6 >>> 16 | 0;
                        case 1:
                          B4 |= (e6 = o3[I7 + 1 | 0]) << 8, g6 |= y4 = e6 >>> 24 | 0;
                        case 0:
                          B4 = o3[0 | I7] | B4;
                      }
                      return r4 = UI(I7 = B4 ^ t4, t4 = g6 ^ r4, 16), _4 = _4 + t4 | 0, c4 = (I7 = I7 + c4 | 0) >>> 0 < c4 >>> 0 ? _4 + 1 | 0 : _4, r4 = UI(_4 = I7 ^ r4, t4 = c4 ^ f3, 21), e6 = f3, s4 = 1 + (E4 = Q5 + E4 | 0) | 0, y4 = E4, y4 = a4 = a4 >>> 0 > (E4 = i5 + a4 | 0) >>> 0 ? s4 : y4, h4 = UI(E4, a4, 32), t4 = f3 + t4 | 0, e6 = UI(_4 = r4 ^ (a4 = _4 + h4 | 0), r4 = e6 ^ (t4 = a4 >>> 0 < h4 >>> 0 ? t4 + 1 | 0 : t4), 16), h4 = f3, Q5 = UI(i5, Q5, 13) ^ E4, i5 = (i5 = c4) + (c4 = f3 ^ y4) | 0, y4 = UI(I7 = I7 + Q5 | 0, E4 = I7 >>> 0 < Q5 >>> 0 ? i5 + 1 | 0 : i5, 32), r4 = f3 + r4 | 0, y4 = UI(_4 = e6 ^ (i5 = _4 + y4 | 0), e6 = (r4 = i5 >>> 0 < y4 >>> 0 ? r4 + 1 | 0 : r4) ^ h4, 21), h4 = f3, I7 = a4 + (Q5 = c4 = UI(Q5, c4, 17) ^ I7) | 0, a4 = (E4 ^= f3) + t4 | 0, t4 = Q5 = I7 >>> 0 < Q5 >>> 0 ? a4 + 1 | 0 : a4, s4 = y4, a4 = _4 + (y4 = UI(I7, Q5, 32)) | 0, _4 = f3 + e6 | 0, y4 = UI(Q5 = s4 ^ a4, e6 = (_4 = a4 >>> 0 < y4 >>> 0 ? _4 + 1 | 0 : _4) ^ h4, 16), h4 = f3, s4 = i5, E4 = UI(c4, E4, 13) ^ I7, c4 = (t4 ^= f3) + r4 | 0, r4 = i5 = (I7 = s4 + (i5 = E4) | 0) >>> 0 < i5 >>> 0 ? c4 + 1 | 0 : c4, i5 = UI(I7, i5, 32), c4 = e6 + f3 | 0, e6 = (s4 = Q5) >>> 0 > (Q5 = Q5 + (255 ^ i5) | 0) >>> 0 ? c4 + 1 | 0 : c4, y4 = UI(c4 = Q5 ^ y4, i5 = h4 ^ e6, 21), h4 = f3, E4 = UI(E4, t4, 17) ^ I7, g6 = (t4 = r4 ^ f3) + (g6 ^ _4) | 0, _4 = g6 = (I7 = E4 + (B4 ^= a4) | 0) >>> 0 < B4 >>> 0 ? g6 + 1 | 0 : g6, g6 = UI(I7, g6, 32), B4 = i5 + f3 | 0, c4 = UI(a4 = (g6 = g6 + c4 | 0) ^ y4, B4 = (i5 = g6 >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4) ^ h4, 16), r4 = f3, E4 = UI(E4, t4, 13) ^ I7, t4 = e6 + (_4 ^= f3) | 0, t4 = Q5 = (I7 = Q5 + E4 | 0) >>> 0 < Q5 >>> 0 ? t4 + 1 | 0 : t4, Q5 = UI(I7, Q5, 32), y4 = r4, s4 = 1 + (B4 = B4 + f3 | 0) | 0, r4 = B4, r4 = (B4 = Q5 + a4 | 0) >>> 0 < a4 >>> 0 ? s4 : r4, c4 = UI(a4 = B4 ^ c4, Q5 = y4 ^ r4, 21), e6 = f3, E4 = UI(E4, _4, 17), s4 = 1 + (i5 = i5 + (_4 = t4 ^ f3) | 0) | 0, t4 = i5, E4 = I7 = (y4 = g6) >>> 0 > (g6 = g6 + (i5 = I7 ^ E4) | 0) >>> 0 ? s4 : t4, I7 = UI(g6, I7, 32), Q5 = Q5 + f3 | 0, t4 = (I7 = I7 + a4 | 0) >>> 0 < a4 >>> 0 ? Q5 + 1 | 0 : Q5, c4 = UI(a4 = I7 ^ c4, Q5 = t4 ^ e6, 16), e6 = f3, i5 = UI(i5, _4, 13), _4 = r4 + (E4 ^= f3) | 0, _4 = g6 = (r4 = B4) >>> 0 > (B4 = B4 + (i5 ^= g6) | 0) >>> 0 ? _4 + 1 | 0 : _4, g6 = UI(B4, g6, 32), Q5 = Q5 + f3 | 0, r4 = (g6 = g6 + a4 | 0) >>> 0 < a4 >>> 0 ? Q5 + 1 | 0 : Q5, c4 = UI(a4 = g6 ^ c4, Q5 = r4 ^ e6, 21), e6 = f3, i5 = UI(i5, E4, 17), y4 = 1 + (_4 = t4 + (E4 = _4 ^ f3) | 0) | 0, t4 = _4, I7 = UI(B4 = I7 + (_4 = B4 ^ i5) | 0, i5 = B4 >>> 0 < I7 >>> 0 ? y4 : t4, 32), Q5 = Q5 + f3 | 0, t4 = (I7 = I7 + a4 | 0) >>> 0 < a4 >>> 0 ? Q5 + 1 | 0 : Q5, c4 = UI(a4 = I7 ^ c4, Q5 = t4 ^ e6, 16), e6 = f3, E4 = UI(_4, E4, 13), _4 = r4 + (i5 ^= f3) | 0, _4 = g6 = (B4 = g6 + (E4 ^= B4) | 0) >>> 0 < g6 >>> 0 ? _4 + 1 | 0 : _4, g6 = UI(B4, g6, 32), Q5 = Q5 + f3 | 0, a4 = UI((g6 = g6 + a4 | 0) ^ c4, (Q5 = g6 >>> 0 < a4 >>> 0 ? Q5 + 1 | 0 : Q5) ^ e6, 21), c4 = f3, B4 = UI(E4, i5, 17) ^ B4, E4 = UI(B4, i5 = _4 ^ f3, 13), i5 = i5 + t4 | 0, I7 = f3 ^ (I7 >>> 0 > (B4 = I7 + B4 | 0) >>> 0 ? i5 + 1 : i5), a4 = UI(B4 ^= E4, I7, 17) ^ a4, i5 = f3 ^ c4, _4 = 1 + (I7 = I7 + Q5 | 0) | 0, Q5 = I7, I7 = UI(I7 = g6 + B4 | 0, g6 = g6 >>> 0 > I7 >>> 0 ? _4 : Q5, 32) ^ a4 ^ I7, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24, I7 = g6 ^ f3 ^ i5, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, 0;
                    }
                    function $(A8, I7) {
                      var g6, C4, B4, Q5, E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, v4 = 0, L4 = 0;
                      s3 = g6 = s3 - 624 | 0, R3(a4 = g6 + 480 | 0, I7), b4(a4, 1632, a4), c4 = i4[g6 + 516 >> 2], i4[g6 + 276 >> 2] = c4, t4 = i4[g6 + 512 >> 2], i4[g6 + 272 >> 2] = t4, r4 = i4[g6 + 508 >> 2], i4[g6 + 268 >> 2] = r4, e6 = i4[g6 + 504 >> 2], i4[g6 + 264 >> 2] = e6, y4 = i4[g6 + 500 >> 2], i4[g6 + 260 >> 2] = y4, h4 = i4[g6 + 496 >> 2], i4[g6 + 256 >> 2] = h4, D4 = i4[g6 + 492 >> 2], i4[g6 + 252 >> 2] = D4, f4 = i4[g6 + 488 >> 2], i4[g6 + 248 >> 2] = f4, p4 = i4[g6 + 484 >> 2], i4[g6 + 244 >> 2] = p4, n5 = i4[g6 + 480 >> 2], i4[g6 + 240 >> 2] = n5 + 1, b4(_4 = g6 + 240 | 0, _4, 33968), i4[g6 + 468 >> 2] = c4 - 12055116, i4[g6 + 464 >> 2] = t4 - 18696448, i4[g6 + 460 >> 2] = r4 - 3247719, i4[g6 + 456 >> 2] = e6 - 6275908, i4[g6 + 452 >> 2] = y4 - 8787816, i4[g6 + 448 >> 2] = h4 + 114729, i4[g6 + 444 >> 2] = D4 + 6949391, i4[g6 + 440 >> 2] = f4 - 15372611, i4[g6 + 436 >> 2] = p4 + 13857413, i4[g6 + 432 >> 2] = n5 - 10913610, b4(w4 = g6 + 192 | 0, a4, 1584), i4[g6 + 228 >> 2] = 0 - i4[g6 + 228 >> 2], i4[g6 + 224 >> 2] = 0 - i4[g6 + 224 >> 2], i4[g6 + 220 >> 2] = 0 - i4[g6 + 220 >> 2], i4[g6 + 216 >> 2] = 0 - i4[g6 + 216 >> 2], i4[g6 + 212 >> 2] = 0 - i4[g6 + 212 >> 2], i4[g6 + 208 >> 2] = 0 - i4[g6 + 208 >> 2], i4[g6 + 204 >> 2] = 0 - i4[g6 + 204 >> 2], i4[g6 + 200 >> 2] = 0 - i4[g6 + 200 >> 2], i4[g6 + 196 >> 2] = 0 - i4[g6 + 196 >> 2], i4[g6 + 192 >> 2] = ~i4[g6 + 192 >> 2], b4(w4, w4, g6 + 432 | 0), a4 = GA(C4 = g6 + 384 | 0, _4, w4), b4(_4 = g6 + 336 | 0, C4, I7), QI(B4 = g6 + 576 | 0, _4), E4 = o3[g6 + 576 | 0], Y4 = i4[g6 + 420 >> 2], _4 = i4[g6 + 372 >> 2], J4 = i4[g6 + 416 >> 2], k4 = i4[g6 + 368 >> 2], d5 = i4[g6 + 412 >> 2], F4 = i4[g6 + 364 >> 2], m4 = i4[g6 + 408 >> 2], S4 = i4[g6 + 360 >> 2], l4 = i4[g6 + 404 >> 2], N4 = i4[g6 + 356 >> 2], u4 = i4[g6 + 400 >> 2], G4 = i4[g6 + 352 >> 2], x4 = i4[g6 + 396 >> 2], M4 = i4[g6 + 348 >> 2], v4 = i4[g6 + 392 >> 2], K4 = i4[g6 + 344 >> 2], L4 = i4[g6 + 388 >> 2], U4 = i4[g6 + 340 >> 2], Q5 = i4[g6 + 384 >> 2], H4 = i4[g6 + 336 >> 2], I7 = a4 - 1 | 0, i4[g6 + 612 >> 2] = I7 & c4, i4[g6 + 608 >> 2] = I7 & t4, i4[g6 + 604 >> 2] = I7 & r4, i4[g6 + 600 >> 2] = I7 & e6, i4[g6 + 596 >> 2] = I7 & y4, i4[g6 + 592 >> 2] = I7 & h4, i4[g6 + 588 >> 2] = I7 & D4, i4[g6 + 584 >> 2] = I7 & f4, i4[g6 + 580 >> 2] = I7 & p4, i4[g6 + 576 >> 2] = n5 | 0 - a4, H4 = I7 & (0 - (H4 ^ (a4 = 0 - (1 & E4) | 0) & (H4 ^ 0 - H4)) ^ Q5) ^ Q5, i4[g6 + 384 >> 2] = H4, U4 = L4 ^ I7 & (L4 ^ 0 - (U4 ^ a4 & (U4 ^ 0 - U4))), i4[g6 + 388 >> 2] = U4, K4 = v4 ^ I7 & (v4 ^ 0 - (K4 ^ a4 & (K4 ^ 0 - K4))), i4[g6 + 392 >> 2] = K4, M4 = x4 ^ I7 & (x4 ^ 0 - (M4 ^ a4 & (M4 ^ 0 - M4))), i4[g6 + 396 >> 2] = M4, G4 = u4 ^ I7 & (u4 ^ 0 - (G4 ^ a4 & (G4 ^ 0 - G4))), i4[g6 + 400 >> 2] = G4, N4 = l4 ^ I7 & (l4 ^ 0 - (N4 ^ a4 & (N4 ^ 0 - N4))), i4[g6 + 404 >> 2] = N4, S4 = m4 ^ I7 & (m4 ^ 0 - (S4 ^ a4 & (S4 ^ 0 - S4))), i4[g6 + 408 >> 2] = S4, F4 = d5 ^ I7 & (d5 ^ 0 - (F4 ^ a4 & (F4 ^ 0 - F4))), i4[g6 + 412 >> 2] = F4, k4 = J4 ^ I7 & (J4 ^ 0 - (k4 ^ a4 & (k4 ^ 0 - k4))), i4[g6 + 416 >> 2] = k4, a4 = Y4 ^ I7 & (Y4 ^ 0 - (_4 ^ a4 & (_4 ^ 0 - _4))), i4[g6 + 420 >> 2] = a4, i4[g6 + 564 >> 2] = c4, i4[g6 + 560 >> 2] = t4, i4[g6 + 556 >> 2] = r4, i4[g6 + 552 >> 2] = e6, i4[g6 + 548 >> 2] = y4, i4[g6 + 544 >> 2] = h4, i4[g6 + 540 >> 2] = D4, i4[g6 + 536 >> 2] = f4, i4[g6 + 532 >> 2] = p4, i4[g6 + 528 >> 2] = n5 - 1, b4(I7 = g6 + 528 | 0, I7, B4), b4(I7, I7, 34016), c4 = i4[g6 + 192 >> 2], t4 = i4[g6 + 528 >> 2], r4 = i4[g6 + 196 >> 2], e6 = i4[g6 + 532 >> 2], y4 = i4[g6 + 200 >> 2], h4 = i4[g6 + 536 >> 2], D4 = i4[g6 + 204 >> 2], f4 = i4[g6 + 540 >> 2], p4 = i4[g6 + 208 >> 2], n5 = i4[g6 + 544 >> 2], _4 = i4[g6 + 212 >> 2], Y4 = i4[g6 + 548 >> 2], J4 = i4[g6 + 216 >> 2], d5 = i4[g6 + 552 >> 2], m4 = i4[g6 + 220 >> 2], l4 = i4[g6 + 556 >> 2], u4 = i4[g6 + 224 >> 2], x4 = i4[g6 + 560 >> 2], v4 = i4[g6 + 228 >> 2], L4 = i4[g6 + 564 >> 2], i4[g6 + 180 >> 2] = a4 << 1, i4[g6 + 176 >> 2] = k4 << 1, i4[g6 + 172 >> 2] = F4 << 1, i4[g6 + 168 >> 2] = S4 << 1, i4[g6 + 164 >> 2] = N4 << 1, i4[g6 + 160 >> 2] = G4 << 1, i4[g6 + 156 >> 2] = M4 << 1, i4[g6 + 152 >> 2] = K4 << 1, i4[g6 + 148 >> 2] = U4 << 1, i4[g6 + 144 >> 2] = H4 << 1, i4[g6 + 564 >> 2] = L4 - v4, i4[g6 + 560 >> 2] = x4 - u4, i4[g6 + 556 >> 2] = l4 - m4, i4[g6 + 552 >> 2] = d5 - J4, i4[g6 + 548 >> 2] = Y4 - _4, i4[g6 + 544 >> 2] = n5 - p4, i4[g6 + 540 >> 2] = f4 - D4, i4[g6 + 536 >> 2] = h4 - y4, i4[g6 + 532 >> 2] = e6 - r4, i4[g6 + 528 >> 2] = t4 - c4, b4(a4 = g6 + 144 | 0, a4, w4), b4(w4 = g6 + 96 | 0, I7, 34064), R3(g6 + 288 | 0, C4), I7 = i4[g6 + 324 >> 2], i4[g6 + 84 >> 2] = 0 - I7, c4 = i4[g6 + 320 >> 2], i4[g6 + 80 >> 2] = 0 - c4, t4 = i4[g6 + 316 >> 2], i4[g6 + 76 >> 2] = 0 - t4, r4 = i4[g6 + 312 >> 2], i4[g6 + 72 >> 2] = 0 - r4, e6 = i4[g6 + 308 >> 2], i4[g6 + 68 >> 2] = 0 - e6, y4 = i4[g6 + 304 >> 2], i4[g6 + 64 >> 2] = 0 - y4, h4 = i4[g6 + 300 >> 2], i4[g6 + 60 >> 2] = 0 - h4, D4 = i4[g6 + 296 >> 2], i4[g6 + 56 >> 2] = 0 - D4, f4 = i4[g6 + 292 >> 2], i4[g6 + 52 >> 2] = 0 - f4, p4 = i4[g6 + 288 >> 2], i4[g6 + 48 >> 2] = 1 - p4, i4[g6 + 36 >> 2] = I7, i4[g6 + 32 >> 2] = c4, i4[g6 + 28 >> 2] = t4, i4[g6 + 24 >> 2] = r4, i4[g6 + 20 >> 2] = e6, i4[g6 + 16 >> 2] = y4, i4[g6 + 12 >> 2] = h4, i4[g6 + 8 >> 2] = D4, i4[g6 + 4 >> 2] = f4, i4[g6 >> 2] = p4 + 1, b4(A8, a4, g6), b4(A8 + 40 | 0, I7 = g6 + 48 | 0, w4), b4(A8 + 80 | 0, w4, g6), b4(A8 + 120 | 0, a4, I7), s3 = g6 + 624 | 0;
                    }
                    function AA(A8, I7, g6) {
                      var B4, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0;
                      s3 = B4 = s3 + -64 | 0;
                      A: {
                        if ((g6 - 65 & 255) >>> 0 > 191) {
                          if (a4 = -1, !(o3[A8 + 80 | 0] | o3[A8 + 81 | 0] << 8 | o3[A8 + 82 | 0] << 16 | o3[A8 + 83 | 0] << 24 | o3[A8 + 84 | 0] | o3[A8 + 85 | 0] << 8 | o3[A8 + 86 | 0] << 16 | o3[A8 + 87 | 0] << 24)) {
                            if ((_4 = o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) >>> 0 >= 129) {
                              if (c4 = E4 = o3[A8 + 68 | 0] | o3[A8 + 69 | 0] << 8 | o3[A8 + 70 | 0] << 16 | o3[A8 + 71 | 0] << 24, E4 = (_4 = 128 + (a4 = o3[A8 + 64 | 0] | o3[A8 + 65 | 0] << 8 | o3[A8 + 66 | 0] << 16 | o3[A8 + 67 | 0] << 24) | 0) >>> 0 < 128 ? E4 + 1 | 0 : E4, C3[A8 + 64 | 0] = _4, C3[A8 + 65 | 0] = _4 >>> 8, C3[A8 + 66 | 0] = _4 >>> 16, C3[A8 + 67 | 0] = _4 >>> 24, C3[A8 + 68 | 0] = E4, C3[A8 + 69 | 0] = E4 >>> 8, C3[A8 + 70 | 0] = E4 >>> 16, C3[A8 + 71 | 0] = E4 >>> 24, E4 = o3[A8 + 76 | 0] | o3[A8 + 77 | 0] << 8 | o3[A8 + 78 | 0] << 16 | o3[A8 + 79 | 0] << 24, E4 = (t4 = a4 = -1 == (0 | c4) & a4 >>> 0 > 4294967167) >>> 0 > (a4 = a4 + (o3[A8 + 72 | 0] | o3[A8 + 73 | 0] << 8 | o3[A8 + 74 | 0] << 16 | o3[A8 + 75 | 0] << 24) | 0) >>> 0 ? E4 + 1 | 0 : E4, C3[A8 + 72 | 0] = a4, C3[A8 + 73 | 0] = a4 >>> 8, C3[A8 + 74 | 0] = a4 >>> 16, C3[A8 + 75 | 0] = a4 >>> 24, C3[A8 + 76 | 0] = E4, C3[A8 + 77 | 0] = E4 >>> 8, C3[A8 + 78 | 0] = E4 >>> 16, C3[A8 + 79 | 0] = E4 >>> 24, p3(A8, E4 = A8 + 96 | 0), a4 = (o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) - 128 | 0, C3[A8 + 352 | 0] = a4, C3[A8 + 353 | 0] = a4 >>> 8, C3[A8 + 354 | 0] = a4 >>> 16, C3[A8 + 355 | 0] = a4 >>> 24, a4 >>> 0 >= 129) break A;
                              Ng(E4, A8 + 224 | 0, a4), _4 = o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24;
                            }
                            a4 = t4 = o3[A8 + 68 | 0] | o3[A8 + 69 | 0] << 8 | o3[A8 + 70 | 0] << 16 | o3[A8 + 71 | 0] << 24, a4 = (c4 = _4 + (E4 = o3[A8 + 64 | 0] | o3[A8 + 65 | 0] << 8 | o3[A8 + 66 | 0] << 16 | o3[A8 + 67 | 0] << 24) | 0) >>> 0 < _4 >>> 0 ? a4 + 1 | 0 : a4, C3[A8 + 64 | 0] = c4, C3[A8 + 65 | 0] = c4 >>> 8, C3[A8 + 66 | 0] = c4 >>> 16, C3[A8 + 67 | 0] = c4 >>> 24, C3[A8 + 68 | 0] = a4, C3[A8 + 69 | 0] = a4 >>> 8, C3[A8 + 70 | 0] = a4 >>> 16, C3[A8 + 71 | 0] = a4 >>> 24, a4 = (0 | a4) == (0 | t4) & E4 >>> 0 > c4 >>> 0 | a4 >>> 0 < t4 >>> 0, E4 = o3[A8 + 76 | 0] | o3[A8 + 77 | 0] << 8 | o3[A8 + 78 | 0] << 16 | o3[A8 + 79 | 0] << 24, E4 = (t4 = a4) >>> 0 > (a4 = a4 + (o3[A8 + 72 | 0] | o3[A8 + 73 | 0] << 8 | o3[A8 + 74 | 0] << 16 | o3[A8 + 75 | 0] << 24) | 0) >>> 0 ? E4 + 1 | 0 : E4, C3[A8 + 72 | 0] = a4, C3[A8 + 73 | 0] = a4 >>> 8, C3[A8 + 74 | 0] = a4 >>> 16, C3[A8 + 75 | 0] = a4 >>> 24, C3[A8 + 76 | 0] = E4, C3[A8 + 77 | 0] = E4 >>> 8, C3[A8 + 78 | 0] = E4 >>> 16, C3[A8 + 79 | 0] = E4 >>> 24, o3[A8 + 356 | 0] && (C3[A8 + 88 | 0] = 255, C3[A8 + 89 | 0] = 255, C3[A8 + 90 | 0] = 255, C3[A8 + 91 | 0] = 255, C3[A8 + 92 | 0] = 255, C3[A8 + 93 | 0] = 255, C3[A8 + 94 | 0] = 255, C3[A8 + 95 | 0] = 255), C3[A8 + 80 | 0] = 255, C3[A8 + 81 | 0] = 255, C3[A8 + 82 | 0] = 255, C3[A8 + 83 | 0] = 255, C3[A8 + 84 | 0] = 255, C3[A8 + 85 | 0] = 255, C3[A8 + 86 | 0] = 255, C3[A8 + 87 | 0] = 255, bg((a4 = A8 + 96 | 0) + _4 | 0, 0, 256 - _4 | 0), p3(A8, a4), E4 = o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24, i4[B4 >> 2] = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, i4[B4 + 4 >> 2] = E4, E4 = o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24, i4[B4 + 8 >> 2] = o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24, i4[B4 + 12 >> 2] = E4, E4 = o3[A8 + 20 | 0] | o3[A8 + 21 | 0] << 8 | o3[A8 + 22 | 0] << 16 | o3[A8 + 23 | 0] << 24, i4[B4 + 16 >> 2] = o3[A8 + 16 | 0] | o3[A8 + 17 | 0] << 8 | o3[A8 + 18 | 0] << 16 | o3[A8 + 19 | 0] << 24, i4[B4 + 20 >> 2] = E4, E4 = o3[A8 + 28 | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24, i4[B4 + 24 >> 2] = o3[A8 + 24 | 0] | o3[A8 + 25 | 0] << 8 | o3[A8 + 26 | 0] << 16 | o3[A8 + 27 | 0] << 24, i4[B4 + 28 >> 2] = E4, E4 = o3[A8 + 36 | 0] | o3[A8 + 37 | 0] << 8 | o3[A8 + 38 | 0] << 16 | o3[A8 + 39 | 0] << 24, i4[B4 + 32 >> 2] = o3[A8 + 32 | 0] | o3[A8 + 33 | 0] << 8 | o3[A8 + 34 | 0] << 16 | o3[A8 + 35 | 0] << 24, i4[B4 + 36 >> 2] = E4, E4 = o3[A8 + 44 | 0] | o3[A8 + 45 | 0] << 8 | o3[A8 + 46 | 0] << 16 | o3[A8 + 47 | 0] << 24, i4[B4 + 40 >> 2] = o3[A8 + 40 | 0] | o3[A8 + 41 | 0] << 8 | o3[A8 + 42 | 0] << 16 | o3[A8 + 43 | 0] << 24, i4[B4 + 44 >> 2] = E4, E4 = o3[A8 + 52 | 0] | o3[A8 + 53 | 0] << 8 | o3[A8 + 54 | 0] << 16 | o3[A8 + 55 | 0] << 24, i4[B4 + 48 >> 2] = o3[A8 + 48 | 0] | o3[A8 + 49 | 0] << 8 | o3[A8 + 50 | 0] << 16 | o3[A8 + 51 | 0] << 24, i4[B4 + 52 >> 2] = E4, E4 = o3[A8 + 60 | 0] | o3[A8 + 61 | 0] << 8 | o3[A8 + 62 | 0] << 16 | o3[A8 + 63 | 0] << 24, i4[B4 + 56 >> 2] = o3[A8 + 56 | 0] | o3[A8 + 57 | 0] << 8 | o3[A8 + 58 | 0] << 16 | o3[A8 + 59 | 0] << 24, i4[B4 + 60 >> 2] = E4, Ng(I7, B4, g6), XC(A8, 64), XC(a4, 256), a4 = 0;
                          }
                          return s3 = B4 - -64 | 0, a4;
                        }
                        rC(), Q4();
                      }
                      r3(1386, 1234, 306, 1142), Q4();
                    }
                    function IA(A8, I7, g6) {
                      A8 |= 0, I7 |= 0, g6 |= 0;
                      var B4, Q5, E4, a4 = 0, _4 = 0;
                      s3 = B4 = s3 - 192 | 0, i4[B4 + 144 >> 2] = 0, i4[B4 + 148 >> 2] = 0, i4[B4 + 152 >> 2] = 0, i4[B4 + 156 >> 2] = 0, i4[B4 + 104 >> 2] = 0, i4[B4 + 108 >> 2] = 0, i4[B4 + 112 >> 2] = 0, i4[B4 + 116 >> 2] = 0, i4[B4 + 120 >> 2] = 0, i4[B4 + 124 >> 2] = 0, a4 = i4[8799], i4[B4 + 168 >> 2] = i4[8798], i4[B4 + 172 >> 2] = a4, a4 = i4[8801], i4[B4 + 176 >> 2] = i4[8800], i4[B4 + 180 >> 2] = a4, a4 = i4[8803], i4[B4 + 184 >> 2] = i4[8802], i4[B4 + 188 >> 2] = a4, i4[B4 + 128 >> 2] = 0, i4[B4 + 132 >> 2] = 0, i4[B4 + 136 >> 2] = 0, i4[B4 + 140 >> 2] = 0, i4[B4 + 96 >> 2] = 0, i4[B4 + 100 >> 2] = 0, a4 = i4[8797], i4[B4 + 160 >> 2] = i4[8796], i4[B4 + 164 >> 2] = a4, a4 = o3[g6 + 20 | 0] | o3[g6 + 21 | 0] << 8 | o3[g6 + 22 | 0] << 16 | o3[g6 + 23 | 0] << 24, i4[B4 + 80 >> 2] = o3[g6 + 16 | 0] | o3[g6 + 17 | 0] << 8 | o3[g6 + 18 | 0] << 16 | o3[g6 + 19 | 0] << 24, i4[B4 + 84 >> 2] = a4, a4 = o3[g6 + 28 | 0] | o3[g6 + 29 | 0] << 8 | o3[g6 + 30 | 0] << 16 | o3[g6 + 31 | 0] << 24, i4[B4 + 88 >> 2] = o3[g6 + 24 | 0] | o3[g6 + 25 | 0] << 8 | o3[g6 + 26 | 0] << 16 | o3[g6 + 27 | 0] << 24, i4[B4 + 92 >> 2] = a4, a4 = o3[g6 + 4 | 0] | o3[g6 + 5 | 0] << 8 | o3[g6 + 6 | 0] << 16 | o3[g6 + 7 | 0] << 24, i4[B4 + 64 >> 2] = o3[0 | g6] | o3[g6 + 1 | 0] << 8 | o3[g6 + 2 | 0] << 16 | o3[g6 + 3 | 0] << 24, i4[B4 + 68 >> 2] = a4, a4 = o3[g6 + 12 | 0] | o3[g6 + 13 | 0] << 8 | o3[g6 + 14 | 0] << 16 | o3[g6 + 15 | 0] << 24, i4[B4 + 72 >> 2] = o3[g6 + 8 | 0] | o3[g6 + 9 | 0] << 8 | o3[g6 + 10 | 0] << 16 | o3[g6 + 11 | 0] << 24, i4[B4 + 76 >> 2] = a4, Eg(g6 = B4 + 128 | 0, a4 = B4 - -64 | 0), S3(g6), _4 = i4[B4 + 156 >> 2], i4[B4 + 24 >> 2] = i4[B4 + 152 >> 2], i4[B4 + 28 >> 2] = _4, _4 = i4[B4 + 148 >> 2], i4[B4 + 16 >> 2] = i4[B4 + 144 >> 2], i4[B4 + 20 >> 2] = _4, _4 = i4[B4 + 140 >> 2], i4[B4 + 8 >> 2] = i4[B4 + 136 >> 2], i4[B4 + 12 >> 2] = _4, _4 = i4[B4 + 132 >> 2], i4[B4 >> 2] = i4[B4 + 128 >> 2], i4[B4 + 4 >> 2] = _4, i4[B4 + 120 >> 2] = 0, i4[B4 + 124 >> 2] = 0, i4[B4 + 112 >> 2] = 0, i4[B4 + 116 >> 2] = 0, i4[B4 + 104 >> 2] = 0, i4[B4 + 108 >> 2] = 0, i4[B4 + 96 >> 2] = 0, i4[B4 + 100 >> 2] = 0, _4 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, i4[B4 + 80 >> 2] = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, i4[B4 + 84 >> 2] = _4, _4 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24, i4[B4 + 88 >> 2] = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, i4[B4 + 92 >> 2] = _4, _4 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, Q5 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, E4 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, I7 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, i4[B4 + 56 >> 2] = 0, i4[B4 + 60 >> 2] = 0, i4[B4 + 48 >> 2] = 0, i4[B4 + 52 >> 2] = 0, i4[B4 + 40 >> 2] = 0, i4[B4 + 44 >> 2] = 0, i4[B4 + 64 >> 2] = E4, i4[B4 + 68 >> 2] = I7, i4[B4 + 72 >> 2] = _4, i4[B4 + 76 >> 2] = Q5, i4[B4 + 32 >> 2] = 0, i4[B4 + 36 >> 2] = 0, og(a4, B4), I7 = i4[B4 + 124 >> 2], i4[B4 + 184 >> 2] = i4[B4 + 120 >> 2], i4[B4 + 188 >> 2] = I7, I7 = i4[B4 + 116 >> 2], i4[B4 + 176 >> 2] = i4[B4 + 112 >> 2], i4[B4 + 180 >> 2] = I7, I7 = i4[B4 + 108 >> 2], i4[B4 + 168 >> 2] = i4[B4 + 104 >> 2], i4[B4 + 172 >> 2] = I7, I7 = i4[B4 + 100 >> 2], i4[B4 + 160 >> 2] = i4[B4 + 96 >> 2], i4[B4 + 164 >> 2] = I7, I7 = i4[B4 + 92 >> 2], i4[B4 + 152 >> 2] = i4[B4 + 88 >> 2], i4[B4 + 156 >> 2] = I7, I7 = i4[B4 + 84 >> 2], i4[B4 + 144 >> 2] = i4[B4 + 80 >> 2], i4[B4 + 148 >> 2] = I7, I7 = i4[B4 + 76 >> 2], i4[B4 + 136 >> 2] = i4[B4 + 72 >> 2], i4[B4 + 140 >> 2] = I7, I7 = i4[B4 + 68 >> 2], i4[B4 + 128 >> 2] = i4[B4 + 64 >> 2], i4[B4 + 132 >> 2] = I7, S3(g6), I7 = i4[B4 + 156 >> 2], a4 = i4[B4 + 152 >> 2], C3[A8 + 24 | 0] = a4, C3[A8 + 25 | 0] = a4 >>> 8, C3[A8 + 26 | 0] = a4 >>> 16, C3[A8 + 27 | 0] = a4 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = i4[B4 + 148 >> 2], a4 = i4[B4 + 144 >> 2], C3[A8 + 16 | 0] = a4, C3[A8 + 17 | 0] = a4 >>> 8, C3[A8 + 18 | 0] = a4 >>> 16, C3[A8 + 19 | 0] = a4 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = i4[B4 + 140 >> 2], a4 = i4[B4 + 136 >> 2], C3[A8 + 8 | 0] = a4, C3[A8 + 9 | 0] = a4 >>> 8, C3[A8 + 10 | 0] = a4 >>> 16, C3[A8 + 11 | 0] = a4 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = i4[B4 + 132 >> 2], a4 = i4[B4 + 128 >> 2], C3[0 | A8] = a4, C3[A8 + 1 | 0] = a4 >>> 8, C3[A8 + 2 | 0] = a4 >>> 16, C3[A8 + 3 | 0] = a4 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, XC(g6, 64), s3 = B4 + 192 | 0;
                    }
                    function gA(A8) {
                      var I7, g6, B4, Q5, o4, E4, _4, c4, t4, r4, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0;
                      for (s3 = I7 = s3 - 2048 | 0, $A(D4 = I7 + 640 | 0, A8), e6 = i4[A8 + 36 >> 2], i4[I7 + 352 >> 2] = i4[A8 + 32 >> 2], i4[I7 + 356 >> 2] = e6, e6 = i4[A8 + 28 >> 2], i4[I7 + 344 >> 2] = i4[A8 + 24 >> 2], i4[I7 + 348 >> 2] = e6, e6 = i4[A8 + 20 >> 2], i4[I7 + 336 >> 2] = i4[A8 + 16 >> 2], i4[I7 + 340 >> 2] = e6, e6 = i4[A8 + 12 >> 2], i4[I7 + 328 >> 2] = i4[A8 + 8 >> 2], i4[I7 + 332 >> 2] = e6, e6 = i4[A8 + 4 >> 2], i4[I7 + 320 >> 2] = i4[A8 >> 2], i4[I7 + 324 >> 2] = e6, e6 = i4[A8 + 52 >> 2], i4[I7 + 368 >> 2] = i4[A8 + 48 >> 2], i4[I7 + 372 >> 2] = e6, e6 = i4[A8 + 60 >> 2], i4[I7 + 376 >> 2] = i4[A8 + 56 >> 2], i4[I7 + 380 >> 2] = e6, e6 = i4[4 + (h4 = A8 - -64 | 0) >> 2], i4[I7 + 384 >> 2] = i4[h4 >> 2], i4[I7 + 388 >> 2] = e6, e6 = i4[A8 + 76 >> 2], i4[I7 + 392 >> 2] = i4[A8 + 72 >> 2], i4[I7 + 396 >> 2] = e6, e6 = i4[A8 + 44 >> 2], i4[I7 + 360 >> 2] = i4[A8 + 40 >> 2], i4[I7 + 364 >> 2] = e6, e6 = i4[A8 + 92 >> 2], i4[I7 + 408 >> 2] = i4[A8 + 88 >> 2], i4[I7 + 412 >> 2] = e6, e6 = i4[A8 + 100 >> 2], i4[I7 + 416 >> 2] = i4[A8 + 96 >> 2], i4[I7 + 420 >> 2] = e6, e6 = i4[A8 + 108 >> 2], i4[I7 + 424 >> 2] = i4[A8 + 104 >> 2], i4[I7 + 428 >> 2] = e6, e6 = i4[A8 + 116 >> 2], i4[I7 + 432 >> 2] = i4[A8 + 112 >> 2], i4[I7 + 436 >> 2] = e6, e6 = i4[A8 + 84 >> 2], i4[I7 + 400 >> 2] = i4[A8 + 80 >> 2], i4[I7 + 404 >> 2] = e6, KA(y4 = I7 + 480 | 0, h4 = I7 + 320 | 0), b4(e6 = I7 + 160 | 0, y4, g6 = I7 + 600 | 0), b4(I7 + 200 | 0, B4 = I7 + 520 | 0, Q5 = I7 + 560 | 0), b4(I7 + 240 | 0, Q5, g6), b4(I7 + 280 | 0, y4, B4), sA(y4, e6, D4), b4(h4, y4, g6), b4(_4 = I7 + 360 | 0, B4, Q5), b4(c4 = I7 + 400 | 0, Q5, g6), b4(t4 = I7 + 440 | 0, y4, B4), $A(A8 = I7 + 800 | 0, h4), sA(y4, e6, A8), b4(h4, y4, g6), b4(_4, B4, Q5), b4(c4, Q5, g6), b4(t4, y4, B4), $A(A8 = I7 + 960 | 0, h4), sA(y4, e6, A8), b4(h4, y4, g6), b4(_4, B4, Q5), b4(c4, Q5, g6), b4(t4, y4, B4), $A(A8 = I7 + 1120 | 0, h4), sA(y4, e6, A8), b4(h4, y4, g6), b4(_4, B4, Q5), b4(c4, Q5, g6), b4(t4, y4, B4), $A(A8 = I7 + 1280 | 0, h4), sA(y4, e6, A8), b4(h4, y4, g6), b4(_4, B4, Q5), b4(c4, Q5, g6), b4(t4, y4, B4), $A(A8 = I7 + 1440 | 0, h4), sA(y4, e6, A8), b4(h4, y4, g6), b4(_4, B4, Q5), b4(c4, Q5, g6), b4(t4, y4, B4), $A(A8 = I7 + 1600 | 0, h4), sA(y4, e6, A8), b4(h4, y4, g6), b4(_4, B4, Q5), b4(c4, Q5, g6), b4(t4, y4, B4), $A(I7 + 1760 | 0, h4), i4[I7 + 32 >> 2] = 0, i4[I7 + 36 >> 2] = 0, i4[I7 + 24 >> 2] = 0, i4[I7 + 28 >> 2] = 0, i4[I7 + 16 >> 2] = 0, i4[I7 + 20 >> 2] = 0, i4[I7 + 8 >> 2] = 0, i4[I7 + 12 >> 2] = 0, i4[I7 + 52 >> 2] = 0, i4[I7 + 56 >> 2] = 0, i4[I7 + 60 >> 2] = 0, i4[I7 + 64 >> 2] = 0, i4[I7 + 68 >> 2] = 0, i4[I7 + 72 >> 2] = 0, i4[I7 + 76 >> 2] = 0, i4[I7 + 80 >> 2] = 1, i4[I7 >> 2] = 0, i4[I7 + 4 >> 2] = 0, i4[I7 + 44 >> 2] = 0, i4[I7 + 48 >> 2] = 0, i4[I7 + 40 >> 2] = 1, bg(I7 + 84 | 0, 0, 76), r4 = I7 + 120 | 0, o4 = I7 + 2008 | 0, E4 = I7 + 1968 | 0, D4 = I7 + 80 | 0, h4 = I7 + 40 | 0, A8 = 252; e6 = i4[I7 + 36 >> 2], i4[(y4 = I7 + 1960 | 0) >> 2] = i4[I7 + 32 >> 2], i4[y4 + 4 >> 2] = e6, e6 = i4[I7 + 28 >> 2], i4[(y4 = I7 + 1952 | 0) >> 2] = i4[I7 + 24 >> 2], i4[y4 + 4 >> 2] = e6, e6 = i4[I7 + 20 >> 2], i4[(y4 = I7 + 1944 | 0) >> 2] = i4[I7 + 16 >> 2], i4[y4 + 4 >> 2] = e6, e6 = i4[I7 + 12 >> 2], i4[(y4 = I7 + 1936 | 0) >> 2] = i4[I7 + 8 >> 2], i4[y4 + 4 >> 2] = e6, e6 = i4[I7 + 4 >> 2], i4[I7 + 1928 >> 2] = i4[I7 >> 2], i4[I7 + 1932 >> 2] = e6, e6 = i4[h4 + 36 >> 2], i4[E4 + 32 >> 2] = i4[h4 + 32 >> 2], i4[E4 + 36 >> 2] = e6, e6 = i4[h4 + 28 >> 2], i4[E4 + 24 >> 2] = i4[h4 + 24 >> 2], i4[E4 + 28 >> 2] = e6, e6 = i4[h4 + 20 >> 2], i4[E4 + 16 >> 2] = i4[h4 + 16 >> 2], i4[E4 + 20 >> 2] = e6, e6 = i4[h4 + 12 >> 2], i4[E4 + 8 >> 2] = i4[h4 + 8 >> 2], i4[E4 + 12 >> 2] = e6, e6 = i4[h4 + 4 >> 2], i4[E4 >> 2] = i4[h4 >> 2], i4[E4 + 4 >> 2] = e6, e6 = i4[D4 + 36 >> 2], i4[o4 + 32 >> 2] = i4[D4 + 32 >> 2], i4[o4 + 36 >> 2] = e6, e6 = i4[D4 + 28 >> 2], i4[o4 + 24 >> 2] = i4[D4 + 24 >> 2], i4[o4 + 28 >> 2] = e6, e6 = i4[D4 + 20 >> 2], i4[o4 + 16 >> 2] = i4[D4 + 16 >> 2], i4[o4 + 20 >> 2] = e6, e6 = i4[D4 + 12 >> 2], i4[o4 + 8 >> 2] = i4[D4 + 8 >> 2], i4[o4 + 12 >> 2] = e6, e6 = i4[D4 + 4 >> 2], i4[o4 >> 2] = i4[D4 >> 2], i4[o4 + 4 >> 2] = e6, e6 = A8, f4 = C3[A8 + 33712 | 0], KA(y4 = I7 + 480 | 0, I7 + 1928 | 0), (0 | f4) > 0 ? (b4(A8 = I7 + 320 | 0, y4, g6), b4(_4, B4, Q5), b4(c4, Q5, g6), b4(t4, y4, B4), sA(y4, A8, (I7 + 640 | 0) + a3((254 & f4) >>> 1 | 0, 160) | 0)) : (0 | f4) >= 0 || (b4(A8 = I7 + 320 | 0, y4 = I7 + 480 | 0, g6), b4(_4, B4, Q5), b4(c4, Q5, g6), b4(t4, y4, B4), hA(y4, A8, (I7 + 640 | 0) + a3((0 - f4 & 254) >>> 1 | 0, 160) | 0)), b4(I7, A8 = I7 + 480 | 0, g6), b4(h4, B4, Q5), b4(D4, Q5, g6), b4(r4, A8, B4), A8 = e6 - 1 | 0, e6; ) ;
                      return QI(A8 = I7 + 640 | 0, I7), A8 = GI(A8, 32), s3 = I7 + 2048 | 0, A8;
                    }
                    function CA(A8, I7, g6, B4, Q5) {
                      var i5, E4, a4, _4, c4, t4, r4, e6, y4, s4, h4, D4, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, v4 = 0, R4 = 0, L4 = 0;
                      if (B4 ? (d5 = o3[B4 + 12 | 0] | o3[B4 + 13 | 0] << 8 | o3[B4 + 14 | 0] << 16 | o3[B4 + 15 | 0] << 24, l4 = o3[B4 + 8 | 0] | o3[B4 + 9 | 0] << 8 | o3[B4 + 10 | 0] << 16 | o3[B4 + 11 | 0] << 24, m4 = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, u4 = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24) : (d5 = 1797285236, m4 = 1634760805, l4 = 2036477234, u4 = 857760878), B4 = i5 = o3[g6 + 20 | 0] | o3[g6 + 21 | 0] << 8 | o3[g6 + 22 | 0] << 16 | o3[g6 + 23 | 0] << 24, N4 = E4 = o3[g6 + 24 | 0] | o3[g6 + 25 | 0] << 8 | o3[g6 + 26 | 0] << 16 | o3[g6 + 27 | 0] << 24, U4 = a4 = o3[g6 + 28 | 0] | o3[g6 + 29 | 0] << 8 | o3[g6 + 30 | 0] << 16 | o3[g6 + 31 | 0] << 24, w4 = d5, S4 = _4 = o3[g6 + 16 | 0] | o3[g6 + 17 | 0] << 8 | o3[g6 + 18 | 0] << 16 | o3[g6 + 19 | 0] << 24, G4 = l4, b5 = c4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, M4 = t4 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, n5 = r4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, I7 = e6 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, K4 = u4, f4 = y4 = o3[g6 + 12 | 0] | o3[g6 + 13 | 0] << 8 | o3[g6 + 14 | 0] << 16 | o3[g6 + 15 | 0] << 24, p4 = s4 = o3[g6 + 8 | 0] | o3[g6 + 9 | 0] << 8 | o3[g6 + 10 | 0] << 16 | o3[g6 + 11 | 0] << 24, k4 = h4 = o3[g6 + 4 | 0] | o3[g6 + 5 | 0] << 8 | o3[g6 + 6 | 0] << 16 | o3[g6 + 7 | 0] << 24, g6 = D4 = o3[0 | g6] | o3[g6 + 1 | 0] << 8 | o3[g6 + 2 | 0] << 16 | o3[g6 + 3 | 0] << 24, F4 = m4, (0 | Q5) > 0) for (; H4 = Lg(g6 + K4 | 0, 7) ^ b5, x4 = Lg(H4 + K4 | 0, 9) ^ N4, Y4 = Lg(B4 + F4 | 0, 7) ^ f4, v4 = Lg(Y4 + F4 | 0, 9) ^ M4, R4 = Lg(Y4 + v4 | 0, 13) ^ B4, J4 = Lg(w4 + S4 | 0, 7) ^ p4, n5 = Lg(J4 + w4 | 0, 9) ^ n5, p4 = Lg(n5 + J4 | 0, 13) ^ S4, w4 = Lg(n5 + p4 | 0, 18) ^ w4, f4 = Lg(I7 + G4 | 0, 7) ^ U4, B4 = R4 ^ Lg(w4 + f4 | 0, 7), N4 = Lg(B4 + w4 | 0, 9) ^ x4, U4 = Lg(B4 + N4 | 0, 13) ^ f4, w4 = Lg(N4 + U4 | 0, 18) ^ w4, k4 = Lg(f4 + G4 | 0, 9) ^ k4, f4 = Lg(k4 + f4 | 0, 13) ^ I7, I7 = Lg(f4 + k4 | 0, 18) ^ G4, S4 = Lg(I7 + H4 | 0, 7) ^ p4, M4 = Lg(S4 + I7 | 0, 9) ^ v4, b5 = Lg(S4 + M4 | 0, 13) ^ H4, G4 = Lg(M4 + b5 | 0, 18) ^ I7, g6 = Lg(H4 + x4 | 0, 13) ^ g6, p4 = Lg(g6 + x4 | 0, 18) ^ K4, I7 = Lg(p4 + Y4 | 0, 7) ^ f4, n5 = Lg(I7 + p4 | 0, 9) ^ n5, f4 = Lg(I7 + n5 | 0, 13) ^ Y4, K4 = Lg(n5 + f4 | 0, 18) ^ p4, F4 = Lg(v4 + R4 | 0, 18) ^ F4, g6 = Lg(F4 + J4 | 0, 7) ^ g6, k4 = Lg(g6 + F4 | 0, 9) ^ k4, p4 = Lg(g6 + k4 | 0, 13) ^ J4, F4 = Lg(k4 + p4 | 0, 18) ^ F4, (0 | (L4 = L4 + 2 | 0)) < (0 | Q5); ) ;
                      Q5 = w4 + d5 | 0, C3[A8 + 60 | 0] = Q5, C3[A8 + 61 | 0] = Q5 >>> 8, C3[A8 + 62 | 0] = Q5 >>> 16, C3[A8 + 63 | 0] = Q5 >>> 24, Q5 = U4 + a4 | 0, C3[A8 + 56 | 0] = Q5, C3[A8 + 57 | 0] = Q5 >>> 8, C3[A8 + 58 | 0] = Q5 >>> 16, C3[A8 + 59 | 0] = Q5 >>> 24, Q5 = N4 + E4 | 0, C3[A8 + 52 | 0] = Q5, C3[A8 + 53 | 0] = Q5 >>> 8, C3[A8 + 54 | 0] = Q5 >>> 16, C3[A8 + 55 | 0] = Q5 >>> 24, B4 = B4 + i5 | 0, C3[A8 + 48 | 0] = B4, C3[A8 + 49 | 0] = B4 >>> 8, C3[A8 + 50 | 0] = B4 >>> 16, C3[A8 + 51 | 0] = B4 >>> 24, B4 = S4 + _4 | 0, C3[A8 + 44 | 0] = B4, C3[A8 + 45 | 0] = B4 >>> 8, C3[A8 + 46 | 0] = B4 >>> 16, C3[A8 + 47 | 0] = B4 >>> 24, B4 = G4 + l4 | 0, C3[A8 + 40 | 0] = B4, C3[A8 + 41 | 0] = B4 >>> 8, C3[A8 + 42 | 0] = B4 >>> 16, C3[A8 + 43 | 0] = B4 >>> 24, B4 = b5 + c4 | 0, C3[A8 + 36 | 0] = B4, C3[A8 + 37 | 0] = B4 >>> 8, C3[A8 + 38 | 0] = B4 >>> 16, C3[A8 + 39 | 0] = B4 >>> 24, B4 = M4 + t4 | 0, C3[A8 + 32 | 0] = B4, C3[A8 + 33 | 0] = B4 >>> 8, C3[A8 + 34 | 0] = B4 >>> 16, C3[A8 + 35 | 0] = B4 >>> 24, B4 = n5 + r4 | 0, C3[A8 + 28 | 0] = B4, C3[A8 + 29 | 0] = B4 >>> 8, C3[A8 + 30 | 0] = B4 >>> 16, C3[A8 + 31 | 0] = B4 >>> 24, I7 = I7 + e6 | 0, C3[A8 + 24 | 0] = I7, C3[A8 + 25 | 0] = I7 >>> 8, C3[A8 + 26 | 0] = I7 >>> 16, C3[A8 + 27 | 0] = I7 >>> 24, I7 = K4 + u4 | 0, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = f4 + y4 | 0, C3[A8 + 16 | 0] = I7, C3[A8 + 17 | 0] = I7 >>> 8, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 19 | 0] = I7 >>> 24, I7 = p4 + s4 | 0, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = k4 + h4 | 0, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = g6 + D4 | 0, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = F4 + m4 | 0, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24;
                    }
                    function BA(A8) {
                      var I7 = 0, g6 = 0, C4 = 0, B4 = 0, Q5 = 0, o4 = 0, a4 = 0, c4 = 0, t4 = 0;
                      A: if (A8 |= 0) {
                        Q5 = (C4 = A8 - 8 | 0) + (A8 = -8 & (I7 = i4[A8 - 4 >> 2])) | 0;
                        I: if (!(1 & I7)) {
                          if (!(2 & I7)) break A;
                          if ((C4 = C4 - (I7 = i4[C4 >> 2]) | 0) >>> 0 < E3[9409]) break A;
                          A8 = A8 + I7 | 0;
                          g: {
                            C: {
                              B: {
                                if (i4[9410] != (0 | C4)) {
                                  if (g6 = i4[C4 + 12 >> 2], I7 >>> 0 <= 255) {
                                    if ((0 | (B4 = i4[C4 + 8 >> 2])) != (0 | g6)) break B;
                                    c4 = 37620, t4 = i4[9405] & Lg(-2, I7 >>> 3 | 0), i4[c4 >> 2] = t4;
                                    break I;
                                  }
                                  if (a4 = i4[C4 + 24 >> 2], (0 | g6) != (0 | C4)) {
                                    I7 = i4[C4 + 8 >> 2], i4[I7 + 12 >> 2] = g6, i4[g6 + 8 >> 2] = I7;
                                    break g;
                                  }
                                  if (B4 = i4[C4 + 20 >> 2]) I7 = C4 + 20 | 0;
                                  else {
                                    if (!(B4 = i4[C4 + 16 >> 2])) break C;
                                    I7 = C4 + 16 | 0;
                                  }
                                  for (; o4 = I7, I7 = (g6 = B4) + 20 | 0, (B4 = i4[g6 + 20 >> 2]) || (I7 = g6 + 16 | 0, B4 = i4[g6 + 16 >> 2]); ) ;
                                  i4[o4 >> 2] = 0;
                                  break g;
                                }
                                if (3 & ~(I7 = i4[Q5 + 4 >> 2])) break I;
                                return i4[9407] = A8, i4[Q5 + 4 >> 2] = -2 & I7, i4[C4 + 4 >> 2] = 1 | A8, void (i4[Q5 >> 2] = A8);
                              }
                              i4[B4 + 12 >> 2] = g6, i4[g6 + 8 >> 2] = B4;
                              break I;
                            }
                            g6 = 0;
                          }
                          if (a4) {
                            I7 = i4[C4 + 28 >> 2];
                            g: {
                              if (i4[(B4 = 37924 + (I7 << 2) | 0) >> 2] == (0 | C4)) {
                                if (i4[B4 >> 2] = g6, g6) break g;
                                c4 = 37624, t4 = i4[9406] & Lg(-2, I7), i4[c4 >> 2] = t4;
                                break I;
                              }
                              if (i4[a4 + (i4[a4 + 16 >> 2] == (0 | C4) ? 16 : 20) >> 2] = g6, !g6) break I;
                            }
                            i4[g6 + 24 >> 2] = a4, (I7 = i4[C4 + 16 >> 2]) && (i4[g6 + 16 >> 2] = I7, i4[I7 + 24 >> 2] = g6), (I7 = i4[C4 + 20 >> 2]) && (i4[g6 + 20 >> 2] = I7, i4[I7 + 24 >> 2] = g6);
                          }
                        }
                        if (!(C4 >>> 0 >= Q5 >>> 0) && 1 & (I7 = i4[Q5 + 4 >> 2])) {
                          I: {
                            g: {
                              C: {
                                B: {
                                  if (!(2 & I7)) {
                                    if ((0 | Q5) == i4[9411]) {
                                      if (i4[9411] = C4, A8 = i4[9408] + A8 | 0, i4[9408] = A8, i4[C4 + 4 >> 2] = 1 | A8, i4[9410] != (0 | C4)) break A;
                                      return i4[9407] = 0, void (i4[9410] = 0);
                                    }
                                    if ((0 | Q5) == i4[9410]) return i4[9410] = C4, A8 = i4[9407] + A8 | 0, i4[9407] = A8, i4[C4 + 4 >> 2] = 1 | A8, void (i4[A8 + C4 >> 2] = A8);
                                    if (A8 = (-8 & I7) + A8 | 0, g6 = i4[Q5 + 12 >> 2], I7 >>> 0 <= 255) {
                                      if ((0 | (B4 = i4[Q5 + 8 >> 2])) == (0 | g6)) {
                                        c4 = 37620, t4 = i4[9405] & Lg(-2, I7 >>> 3 | 0), i4[c4 >> 2] = t4;
                                        break g;
                                      }
                                      i4[B4 + 12 >> 2] = g6, i4[g6 + 8 >> 2] = B4;
                                      break g;
                                    }
                                    if (a4 = i4[Q5 + 24 >> 2], (0 | g6) != (0 | Q5)) {
                                      I7 = i4[Q5 + 8 >> 2], i4[I7 + 12 >> 2] = g6, i4[g6 + 8 >> 2] = I7;
                                      break C;
                                    }
                                    if (B4 = i4[Q5 + 20 >> 2]) I7 = Q5 + 20 | 0;
                                    else {
                                      if (!(B4 = i4[Q5 + 16 >> 2])) break B;
                                      I7 = Q5 + 16 | 0;
                                    }
                                    for (; o4 = I7, I7 = (g6 = B4) + 20 | 0, (B4 = i4[g6 + 20 >> 2]) || (I7 = g6 + 16 | 0, B4 = i4[g6 + 16 >> 2]); ) ;
                                    i4[o4 >> 2] = 0;
                                    break C;
                                  }
                                  i4[Q5 + 4 >> 2] = -2 & I7, i4[C4 + 4 >> 2] = 1 | A8, i4[A8 + C4 >> 2] = A8;
                                  break I;
                                }
                                g6 = 0;
                              }
                              if (a4) {
                                I7 = i4[Q5 + 28 >> 2];
                                C: {
                                  if ((0 | Q5) == i4[(B4 = 37924 + (I7 << 2) | 0) >> 2]) {
                                    if (i4[B4 >> 2] = g6, g6) break C;
                                    c4 = 37624, t4 = i4[9406] & Lg(-2, I7), i4[c4 >> 2] = t4;
                                    break g;
                                  }
                                  if (i4[a4 + ((0 | Q5) == i4[a4 + 16 >> 2] ? 16 : 20) >> 2] = g6, !g6) break g;
                                }
                                i4[g6 + 24 >> 2] = a4, (I7 = i4[Q5 + 16 >> 2]) && (i4[g6 + 16 >> 2] = I7, i4[I7 + 24 >> 2] = g6), (I7 = i4[Q5 + 20 >> 2]) && (i4[g6 + 20 >> 2] = I7, i4[I7 + 24 >> 2] = g6);
                              }
                            }
                            if (i4[C4 + 4 >> 2] = 1 | A8, i4[A8 + C4 >> 2] = A8, i4[9410] == (0 | C4)) return void (i4[9407] = A8);
                          }
                          if (A8 >>> 0 <= 255) return I7 = 37660 + (-8 & A8) | 0, (B4 = i4[9405]) & (A8 = 1 << (A8 >>> 3)) ? A8 = i4[I7 + 8 >> 2] : (i4[9405] = A8 | B4, A8 = I7), i4[I7 + 8 >> 2] = C4, i4[A8 + 12 >> 2] = C4, i4[C4 + 12 >> 2] = I7, void (i4[C4 + 8 >> 2] = A8);
                          g6 = 31, A8 >>> 0 <= 16777215 && (g6 = 62 + ((A8 >>> 38 - (I7 = _3(A8 >>> 8 | 0)) & 1) - (I7 << 1) | 0) | 0), i4[C4 + 28 >> 2] = g6, i4[C4 + 16 >> 2] = 0, i4[C4 + 20 >> 2] = 0, o4 = 37924 + (g6 << 2) | 0;
                          I: {
                            g: {
                              if ((I7 = i4[9406]) & (B4 = 1 << g6)) {
                                for (g6 = A8 << (31 != (0 | g6) ? 25 - (g6 >>> 1 | 0) : 0), I7 = i4[o4 >> 2]; ; ) {
                                  if (B4 = I7, (-8 & i4[I7 + 4 >> 2]) == (0 | A8)) break g;
                                  if (I7 = g6 >>> 29 | 0, g6 <<= 1, !(I7 = i4[(o4 = 16 + ((4 & I7) + B4 | 0) | 0) >> 2])) break;
                                }
                                g6 = 24, I7 = B4;
                              } else i4[9406] = I7 | B4, g6 = 24, I7 = o4;
                              B4 = C4, Q5 = C4, A8 = 8;
                              break I;
                            }
                            I7 = i4[B4 + 8 >> 2], i4[I7 + 12 >> 2] = C4, g6 = 8, o4 = B4 + 8 | 0, Q5 = 0, A8 = 24;
                          }
                          i4[o4 >> 2] = C4, i4[g6 + C4 >> 2] = I7, i4[C4 + 12 >> 2] = B4, i4[A8 + C4 >> 2] = Q5, A8 = i4[9413] - 1 | 0, i4[9413] = A8 || -1;
                        }
                      }
                    }
                    function QA(A8, I7, g6, C4, B4, E4, a4, _4, c4) {
                      var t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, w4 = 0;
                      if (I7 - 65 >>> 0 < 4294967232 | a4 >>> 0 > 64) A8 = -1;
                      else {
                        w4 = t4 = s3, s3 = t4 = t4 - 512 & -64;
                        A: {
                          I: if (!(!(!(C4 | B4) | g6) | !A8 | ((D4 = 255 & I7) - 65 & 255) >>> 0 <= 191 | !(!(I7 = 255 & a4) || E4) | I7 >>> 0 >= 65)) {
                            if (I7) {
                              if (!E4) break I;
                              _4 ? (r4 = 725511199 ^ (o3[_4 + 8 | 0] | o3[_4 + 9 | 0] << 8 | o3[_4 + 10 | 0] << 16 | o3[_4 + 11 | 0] << 24), e6 = -1694144372 ^ (o3[_4 + 12 | 0] | o3[_4 + 13 | 0] << 8 | o3[_4 + 14 | 0] << 16 | o3[_4 + 15 | 0] << 24), a4 = -1377402159 ^ (o3[0 | _4] | o3[_4 + 1 | 0] << 8 | o3[_4 + 2 | 0] << 16 | o3[_4 + 3 | 0] << 24), _4 = 1359893119 ^ (o3[_4 + 4 | 0] | o3[_4 + 5 | 0] << 8 | o3[_4 + 6 | 0] << 16 | o3[_4 + 7 | 0] << 24)) : (r4 = 725511199, e6 = -1694144372, a4 = -1377402159, _4 = 1359893119), c4 ? (y4 = 327033209 ^ (o3[c4 + 8 | 0] | o3[c4 + 9 | 0] << 8 | o3[c4 + 10 | 0] << 16 | o3[c4 + 11 | 0] << 24), h4 = 1541459225 ^ (o3[c4 + 12 | 0] | o3[c4 + 13 | 0] << 8 | o3[c4 + 14 | 0] << 16 | o3[c4 + 15 | 0] << 24), f4 = -79577749 ^ (o3[0 | c4] | o3[c4 + 1 | 0] << 8 | o3[c4 + 2 | 0] << 16 | o3[c4 + 3 | 0] << 24), c4 = 528734635 ^ (o3[c4 + 4 | 0] | o3[c4 + 5 | 0] << 8 | o3[c4 + 6 | 0] << 16 | o3[c4 + 7 | 0] << 24)) : (y4 = 327033209, h4 = 1541459225, f4 = -79577749, c4 = 528734635), bg(t4 - -64 | 0, 0, 293), i4[t4 + 56 >> 2] = y4, i4[t4 + 60 >> 2] = h4, i4[t4 + 48 >> 2] = f4, i4[t4 + 52 >> 2] = c4, i4[t4 + 40 >> 2] = r4, i4[t4 + 44 >> 2] = e6, i4[t4 + 32 >> 2] = a4, i4[t4 + 36 >> 2] = _4, i4[t4 + 24 >> 2] = 1595750129, i4[t4 + 28 >> 2] = -1521486534, i4[t4 + 16 >> 2] = -23791573, i4[t4 + 20 >> 2] = 1013904242, i4[t4 + 8 >> 2] = -2067093701, i4[t4 + 12 >> 2] = -1150833019, i4[t4 >> 2] = -222443256 ^ (I7 << 8 | D4), i4[t4 + 4 >> 2] = I7 >>> 24 ^ 1779033703, bg((a4 = t4 + 384 | 0) + I7 | 0, 0, 128 - I7 | 0), Ng(a4, E4, I7), Ng(t4 + 96 | 0, a4, 128), i4[t4 + 352 >> 2] = 128, XC(a4, 128), I7 = 128;
                            } else _4 ? (r4 = 725511199 ^ (o3[_4 + 8 | 0] | o3[_4 + 9 | 0] << 8 | o3[_4 + 10 | 0] << 16 | o3[_4 + 11 | 0] << 24), e6 = -1694144372 ^ (o3[_4 + 12 | 0] | o3[_4 + 13 | 0] << 8 | o3[_4 + 14 | 0] << 16 | o3[_4 + 15 | 0] << 24), E4 = 1359893119 ^ (o3[_4 + 4 | 0] | o3[_4 + 5 | 0] << 8 | o3[_4 + 6 | 0] << 16 | o3[_4 + 7 | 0] << 24), I7 = -1377402159 ^ (o3[0 | _4] | o3[_4 + 1 | 0] << 8 | o3[_4 + 2 | 0] << 16 | o3[_4 + 3 | 0] << 24)) : (r4 = 725511199, e6 = -1694144372, E4 = 1359893119, I7 = -1377402159), c4 ? (y4 = 327033209 ^ (o3[c4 + 8 | 0] | o3[c4 + 9 | 0] << 8 | o3[c4 + 10 | 0] << 16 | o3[c4 + 11 | 0] << 24), h4 = 1541459225 ^ (o3[c4 + 12 | 0] | o3[c4 + 13 | 0] << 8 | o3[c4 + 14 | 0] << 16 | o3[c4 + 15 | 0] << 24), _4 = 528734635 ^ (o3[c4 + 4 | 0] | o3[c4 + 5 | 0] << 8 | o3[c4 + 6 | 0] << 16 | o3[c4 + 7 | 0] << 24), a4 = -79577749 ^ (o3[0 | c4] | o3[c4 + 1 | 0] << 8 | o3[c4 + 2 | 0] << 16 | o3[c4 + 3 | 0] << 24)) : (y4 = 327033209, h4 = 1541459225, _4 = 528734635, a4 = -79577749), bg(t4 - -64 | 0, 0, 293), i4[t4 + 56 >> 2] = y4, i4[t4 + 60 >> 2] = h4, i4[t4 + 48 >> 2] = a4, i4[t4 + 52 >> 2] = _4, i4[t4 + 40 >> 2] = r4, i4[t4 + 44 >> 2] = e6, i4[t4 + 32 >> 2] = I7, i4[t4 + 36 >> 2] = E4, i4[t4 + 24 >> 2] = 1595750129, i4[t4 + 28 >> 2] = -1521486534, i4[t4 + 16 >> 2] = -23791573, i4[t4 + 20 >> 2] = 1013904242, i4[t4 + 8 >> 2] = -2067093701, i4[t4 + 12 >> 2] = -1150833019, i4[t4 >> 2] = -222443256 ^ D4, i4[t4 + 4 >> 2] = 1779033703, I7 = 0;
                            g: if (C4 | B4) for (c4 = t4 + 224 | 0, _4 = t4 + 96 | 0; ; ) {
                              if (a4 = I7 + _4 | 0, !B4 & C4 >>> 0 <= (E4 = 256 - I7 | 0) >>> 0) {
                                Ng(a4, g6, C4), i4[t4 + 352 >> 2] = C4 + i4[t4 + 352 >> 2];
                                break g;
                              }
                              if (Ng(a4, g6, E4), i4[t4 + 352 >> 2] = E4 + i4[t4 + 352 >> 2], r4 = I7 = i4[t4 + 68 >> 2], I7 = (e6 = (a4 = i4[t4 + 64 >> 2]) + 128 | 0) >>> 0 < 128 ? I7 + 1 | 0 : I7, i4[t4 + 64 >> 2] = e6, i4[t4 + 68 >> 2] = I7, I7 = i4[t4 + 76 >> 2], I7 = (r4 = a4 = -1 == (0 | r4) & a4 >>> 0 > 4294967167) >>> 0 > (a4 = a4 + i4[t4 + 72 >> 2] | 0) >>> 0 ? I7 + 1 | 0 : I7, i4[t4 + 72 >> 2] = a4, i4[t4 + 76 >> 2] = I7, p3(t4, _4), Ng(_4, c4, 128), I7 = i4[t4 + 352 >> 2] - 128 | 0, i4[t4 + 352 >> 2] = I7, g6 = g6 + E4 | 0, !((B4 = B4 - (C4 >>> 0 < E4 >>> 0) | 0) | (C4 = C4 - E4 | 0))) break;
                            }
                            AA(t4, A8, D4), s3 = w4;
                            break A;
                          }
                          rC(), Q4();
                        }
                        A8 = 0;
                      }
                      return A8;
                    }
                    function iA(A8, I7, g6, B4, Q5, E4, _4) {
                      var c4, t4, r4 = 0, e6 = 0, y4 = 0;
                      if (s3 = c4 = s3 + -64 | 0, t4 = K3(32)) {
                        i4[c4 + 36 >> 2] = 0, i4[c4 + 40 >> 2] = 0, i4[c4 + 28 >> 2] = 0, i4[c4 + 32 >> 2] = 0, i4[c4 + 24 >> 2] = 16, i4[c4 + 20 >> 2] = Q5, i4[c4 + 16 >> 2] = B4, i4[c4 + 12 >> 2] = g6, i4[c4 + 8 >> 2] = 32, i4[c4 + 4 >> 2] = t4, i4[c4 + 60 >> 2] = 0, i4[c4 + 56 >> 2] = 1, i4[c4 + 52 >> 2] = 1, i4[c4 + 48 >> 2] = I7, i4[c4 + 44 >> 2] = A8;
                        A: if (A8 = q2(c4 + 4 | 0, _4)) XC(t4, 32);
                        else {
                          if (E4) {
                            r4 = c4 + 4 | 0, s3 = Q5 = s3 - 32 | 0, A8 = -31;
                            I: {
                              g: {
                                C: switch (_4 - 1 | 0) {
                                  case 1:
                                    A8 = o3[1434] | o3[1435] << 8 | o3[1436] << 16 | o3[1437] << 24, I7 = o3[1430] | o3[1431] << 8 | o3[1432] << 16 | o3[1433] << 24, C3[0 | E4] = I7, C3[E4 + 1 | 0] = I7 >>> 8, C3[E4 + 2 | 0] = I7 >>> 16, C3[E4 + 3 | 0] = I7 >>> 24, C3[E4 + 4 | 0] = A8, C3[E4 + 5 | 0] = A8 >>> 8, C3[E4 + 6 | 0] = A8 >>> 16, C3[E4 + 7 | 0] = A8 >>> 24, A8 = o3[1439] | o3[1440] << 8 | o3[1441] << 16 | o3[1442] << 24, I7 = o3[1435] | o3[1436] << 8 | o3[1437] << 16 | o3[1438] << 24, C3[E4 + 5 | 0] = I7, C3[E4 + 6 | 0] = I7 >>> 8, C3[E4 + 7 | 0] = I7 >>> 16, C3[E4 + 8 | 0] = I7 >>> 24, C3[E4 + 9 | 0] = A8, C3[E4 + 10 | 0] = A8 >>> 8, C3[E4 + 11 | 0] = A8 >>> 16, C3[E4 + 12 | 0] = A8 >>> 24, g6 = -12, I7 = 12;
                                    break g;
                                  case 0:
                                    break C;
                                  default:
                                    break I;
                                }
                                A8 = o3[1422] | o3[1423] << 8 | o3[1424] << 16 | o3[1425] << 24, I7 = o3[1418] | o3[1419] << 8 | o3[1420] << 16 | o3[1421] << 24, C3[0 | E4] = I7, C3[E4 + 1 | 0] = I7 >>> 8, C3[E4 + 2 | 0] = I7 >>> 16, C3[E4 + 3 | 0] = I7 >>> 24, C3[E4 + 4 | 0] = A8, C3[E4 + 5 | 0] = A8 >>> 8, C3[E4 + 6 | 0] = A8 >>> 16, C3[E4 + 7 | 0] = A8 >>> 24, A8 = o3[1426] | o3[1427] << 8 | o3[1428] << 16 | o3[1429] << 24, C3[E4 + 8 | 0] = A8, C3[E4 + 9 | 0] = A8 >>> 8, C3[E4 + 10 | 0] = A8 >>> 16, C3[E4 + 11 | 0] = A8 >>> 24, g6 = -11, I7 = 11;
                              }
                              if (!(A8 = nI(r4))) if (C3[Q5 + 13 | 0] = 0, C3[Q5 + 11 | 0] = 49, C3[Q5 + 12 | 0] = 57, (g6 = g6 + 128 | 0) >>> 0 <= (A8 = RI(Q5 + 11 | 0)) >>> 0) A8 = -31;
                              else if (I7 = Ng(I7 + E4 | 0, Q5 + 11 | 0, A8 + 1 | 0), (e6 = g6 - A8 | 0) >>> 0 < 4) A8 = -31;
                              else {
                                for (C3[0 | (_4 = A8 + I7 | 0)] = 36, C3[_4 + 1 | 0] = 109, C3[_4 + 2 | 0] = 61, C3[_4 + 3 | 0] = 0, A8 = i4[r4 + 44 >> 2], I7 = 10; g6 = I7, B4 = (A8 >>> 0) / 10 | 0, C3[0 | (y4 = (I7 = I7 - 1 | 0) + (Q5 + 22 | 0) | 0)] = A8 - a3(B4, 10) | 48, !(A8 >>> 0 < 10) && (A8 = B4, I7); ) ;
                                if (Ng(A8 = Q5 + 11 | 0, y4, I7 = 11 - g6 | 0), C3[A8 + I7 | 0] = 0, (I7 = e6 - 3 | 0) >>> 0 <= (A8 = RI(A8)) >>> 0) A8 = -31;
                                else if (g6 = Ng(_4 + 3 | 0, Q5 + 11 | 0, A8 + 1 | 0), (e6 = I7 - A8 | 0) >>> 0 < 4) A8 = -31;
                                else {
                                  for (C3[0 | (_4 = A8 + g6 | 0)] = 44, C3[_4 + 1 | 0] = 116, C3[_4 + 2 | 0] = 61, C3[_4 + 3 | 0] = 0, A8 = i4[r4 + 40 >> 2], I7 = 10; g6 = I7, B4 = (A8 >>> 0) / 10 | 0, C3[0 | (y4 = (I7 = I7 - 1 | 0) + (Q5 + 22 | 0) | 0)] = A8 - a3(B4, 10) | 48, !(A8 >>> 0 < 10) && (A8 = B4, I7); ) ;
                                  if (Ng(A8 = Q5 + 11 | 0, y4, I7 = 11 - g6 | 0), C3[A8 + I7 | 0] = 0, (I7 = e6 - 3 | 0) >>> 0 <= (A8 = RI(A8)) >>> 0) A8 = -31;
                                  else if (g6 = Ng(_4 + 3 | 0, Q5 + 11 | 0, A8 + 1 | 0), (e6 = I7 - A8 | 0) >>> 0 < 4) A8 = -31;
                                  else {
                                    for (C3[0 | (_4 = A8 + g6 | 0)] = 44, C3[_4 + 1 | 0] = 112, C3[_4 + 2 | 0] = 61, C3[_4 + 3 | 0] = 0, A8 = i4[r4 + 48 >> 2], I7 = 10; g6 = I7, B4 = (A8 >>> 0) / 10 | 0, C3[0 | (y4 = (I7 = I7 - 1 | 0) + (Q5 + 22 | 0) | 0)] = A8 - a3(B4, 10) | 48, !(A8 >>> 0 < 10) && (A8 = B4, I7); ) ;
                                    Ng(A8 = Q5 + 11 | 0, y4, I7 = 11 - g6 | 0), C3[A8 + I7 | 0] = 0, (I7 = e6 - 3 | 0) >>> 0 <= (A8 = RI(A8)) >>> 0 ? A8 = -31 : (g6 = Ng(_4 + 3 | 0, Q5 + 11 | 0, A8 + 1 | 0), (B4 = I7 - A8 | 0) >>> 0 < 2 ? A8 = -31 : (C3[0 | (A8 = A8 + g6 | 0)] = 36, C3[A8 + 1 | 0] = 0, XA(I7 = A8 + 1 | 0, g6 = B4 - 1 | 0, i4[r4 + 16 >> 2], i4[r4 + 20 >> 2], 3) ? (A8 = -31, (B4 = (B4 = g6) - (g6 = RI(I7)) | 0) >>> 0 < 2 || (C3[0 | (A8 = I7 + g6 | 0)] = 36, C3[A8 + 1 | 0] = 0, A8 = XA(A8 + 1 | 0, B4 - 1 | 0, i4[r4 >> 2], i4[r4 + 4 >> 2], 3) ? 0 : -31)) : A8 = -31));
                                  }
                                }
                              }
                            }
                            if (s3 = Q5 + 32 | 0, A8) {
                              XC(t4, 32), XC(E4, 128), A8 = -31;
                              break A;
                            }
                          }
                          XC(t4, 32), A8 = 0;
                        }
                        BA(t4);
                      } else A8 = -22;
                      return s3 = c4 - -64 | 0, A8;
                    }
                    function oA(A8, I7) {
                      var g6, C4 = 0, B4 = 0, Q5 = 0, o4 = 0, E4 = 0, a4 = 0, c4 = 0;
                      g6 = A8 + I7 | 0;
                      A: {
                        I: if (!(1 & (C4 = i4[A8 + 4 >> 2]))) {
                          if (!(2 & C4)) break A;
                          I7 = (C4 = i4[A8 >> 2]) + I7 | 0;
                          g: {
                            C: {
                              B: {
                                if ((0 | (A8 = A8 - C4 | 0)) != i4[9410]) {
                                  if (B4 = i4[A8 + 12 >> 2], C4 >>> 0 <= 255) {
                                    if ((0 | (Q5 = i4[A8 + 8 >> 2])) != (0 | B4)) break B;
                                    a4 = 37620, c4 = i4[9405] & Lg(-2, C4 >>> 3 | 0), i4[a4 >> 2] = c4;
                                    break I;
                                  }
                                  if (o4 = i4[A8 + 24 >> 2], (0 | A8) != (0 | B4)) {
                                    C4 = i4[A8 + 8 >> 2], i4[C4 + 12 >> 2] = B4, i4[B4 + 8 >> 2] = C4;
                                    break g;
                                  }
                                  if (Q5 = i4[A8 + 20 >> 2]) C4 = A8 + 20 | 0;
                                  else {
                                    if (!(Q5 = i4[A8 + 16 >> 2])) break C;
                                    C4 = A8 + 16 | 0;
                                  }
                                  for (; E4 = C4, C4 = (B4 = Q5) + 20 | 0, (Q5 = i4[B4 + 20 >> 2]) || (C4 = B4 + 16 | 0, Q5 = i4[B4 + 16 >> 2]); ) ;
                                  i4[E4 >> 2] = 0;
                                  break g;
                                }
                                if (3 & ~(C4 = i4[g6 + 4 >> 2])) break I;
                                return i4[9407] = I7, i4[g6 + 4 >> 2] = -2 & C4, i4[A8 + 4 >> 2] = 1 | I7, void (i4[g6 >> 2] = I7);
                              }
                              i4[Q5 + 12 >> 2] = B4, i4[B4 + 8 >> 2] = Q5;
                              break I;
                            }
                            B4 = 0;
                          }
                          if (o4) {
                            C4 = i4[A8 + 28 >> 2];
                            g: {
                              if (i4[(Q5 = 37924 + (C4 << 2) | 0) >> 2] == (0 | A8)) {
                                if (i4[Q5 >> 2] = B4, B4) break g;
                                a4 = 37624, c4 = i4[9406] & Lg(-2, C4), i4[a4 >> 2] = c4;
                                break I;
                              }
                              if (i4[o4 + (i4[o4 + 16 >> 2] == (0 | A8) ? 16 : 20) >> 2] = B4, !B4) break I;
                            }
                            i4[B4 + 24 >> 2] = o4, (C4 = i4[A8 + 16 >> 2]) && (i4[B4 + 16 >> 2] = C4, i4[C4 + 24 >> 2] = B4), (C4 = i4[A8 + 20 >> 2]) && (i4[B4 + 20 >> 2] = C4, i4[C4 + 24 >> 2] = B4);
                          }
                        }
                        I: {
                          g: {
                            C: {
                              B: {
                                if (!(2 & (C4 = i4[g6 + 4 >> 2]))) {
                                  if (i4[9411] == (0 | g6)) {
                                    if (i4[9411] = A8, I7 = i4[9408] + I7 | 0, i4[9408] = I7, i4[A8 + 4 >> 2] = 1 | I7, i4[9410] != (0 | A8)) break A;
                                    return i4[9407] = 0, void (i4[9410] = 0);
                                  }
                                  if (i4[9410] == (0 | g6)) return i4[9410] = A8, I7 = i4[9407] + I7 | 0, i4[9407] = I7, i4[A8 + 4 >> 2] = 1 | I7, void (i4[A8 + I7 >> 2] = I7);
                                  if (I7 = (-8 & C4) + I7 | 0, B4 = i4[g6 + 12 >> 2], C4 >>> 0 <= 255) {
                                    if ((0 | (Q5 = i4[g6 + 8 >> 2])) == (0 | B4)) {
                                      a4 = 37620, c4 = i4[9405] & Lg(-2, C4 >>> 3 | 0), i4[a4 >> 2] = c4;
                                      break g;
                                    }
                                    i4[Q5 + 12 >> 2] = B4, i4[B4 + 8 >> 2] = Q5;
                                    break g;
                                  }
                                  if (o4 = i4[g6 + 24 >> 2], (0 | B4) != (0 | g6)) {
                                    C4 = i4[g6 + 8 >> 2], i4[C4 + 12 >> 2] = B4, i4[B4 + 8 >> 2] = C4;
                                    break C;
                                  }
                                  if (Q5 = i4[g6 + 20 >> 2]) C4 = g6 + 20 | 0;
                                  else {
                                    if (!(Q5 = i4[g6 + 16 >> 2])) break B;
                                    C4 = g6 + 16 | 0;
                                  }
                                  for (; E4 = C4, C4 = (B4 = Q5) + 20 | 0, (Q5 = i4[B4 + 20 >> 2]) || (C4 = B4 + 16 | 0, Q5 = i4[B4 + 16 >> 2]); ) ;
                                  i4[E4 >> 2] = 0;
                                  break C;
                                }
                                i4[g6 + 4 >> 2] = -2 & C4, i4[A8 + 4 >> 2] = 1 | I7, i4[A8 + I7 >> 2] = I7;
                                break I;
                              }
                              B4 = 0;
                            }
                            if (o4) {
                              C4 = i4[g6 + 28 >> 2];
                              C: {
                                if (i4[(Q5 = 37924 + (C4 << 2) | 0) >> 2] == (0 | g6)) {
                                  if (i4[Q5 >> 2] = B4, B4) break C;
                                  a4 = 37624, c4 = i4[9406] & Lg(-2, C4), i4[a4 >> 2] = c4;
                                  break g;
                                }
                                if (i4[o4 + (i4[o4 + 16 >> 2] == (0 | g6) ? 16 : 20) >> 2] = B4, !B4) break g;
                              }
                              i4[B4 + 24 >> 2] = o4, (C4 = i4[g6 + 16 >> 2]) && (i4[B4 + 16 >> 2] = C4, i4[C4 + 24 >> 2] = B4), (C4 = i4[g6 + 20 >> 2]) && (i4[B4 + 20 >> 2] = C4, i4[C4 + 24 >> 2] = B4);
                            }
                          }
                          if (i4[A8 + 4 >> 2] = 1 | I7, i4[A8 + I7 >> 2] = I7, i4[9410] == (0 | A8)) return void (i4[9407] = I7);
                        }
                        if (I7 >>> 0 <= 255) return C4 = 37660 + (-8 & I7) | 0, (B4 = i4[9405]) & (I7 = 1 << (I7 >>> 3)) ? I7 = i4[C4 + 8 >> 2] : (i4[9405] = I7 | B4, I7 = C4), i4[C4 + 8 >> 2] = A8, i4[I7 + 12 >> 2] = A8, i4[A8 + 12 >> 2] = C4, void (i4[A8 + 8 >> 2] = I7);
                        B4 = 31, I7 >>> 0 <= 16777215 && (B4 = 62 + ((I7 >>> 38 - (C4 = _3(I7 >>> 8 | 0)) & 1) - (C4 << 1) | 0) | 0), i4[A8 + 28 >> 2] = B4, i4[A8 + 16 >> 2] = 0, i4[A8 + 20 >> 2] = 0, C4 = 37924 + (B4 << 2) | 0;
                        I: {
                          if ((Q5 = i4[9406]) & (E4 = 1 << B4)) {
                            for (B4 = I7 << (31 != (0 | B4) ? 25 - (B4 >>> 1 | 0) : 0), C4 = i4[C4 >> 2]; ; ) {
                              if (Q5 = C4, (-8 & i4[C4 + 4 >> 2]) == (0 | I7)) break I;
                              if (C4 = B4 >>> 29 | 0, B4 <<= 1, !(C4 = i4[16 + (E4 = Q5 + (4 & C4) | 0) >> 2])) break;
                            }
                            i4[E4 + 16 >> 2] = A8, i4[A8 + 24 >> 2] = Q5;
                          } else i4[9406] = Q5 | E4, i4[C4 >> 2] = A8, i4[A8 + 24 >> 2] = C4;
                          return i4[A8 + 12 >> 2] = A8, void (i4[A8 + 8 >> 2] = A8);
                        }
                        I7 = i4[Q5 + 8 >> 2], i4[I7 + 12 >> 2] = A8, i4[Q5 + 8 >> 2] = A8, i4[A8 + 24 >> 2] = 0, i4[A8 + 12 >> 2] = Q5, i4[A8 + 8 >> 2] = I7;
                      }
                    }
                    function EA(A8, I7) {
                      var g6, B4 = 0, Q5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0;
                      return s3 = g6 = s3 - 512 | 0, B4 = -1, E4 = o3[I7 + 31 | 0], Q5 = o3[0 | I7], 1 & (((255 & (127 & ~E4 | ~(o3[I7 + 1 | 0] & o3[I7 + 2 | 0] & o3[I7 + 3 | 0] & o3[I7 + 4 | 0] & o3[I7 + 5 | 0] & o3[I7 + 6 | 0] & o3[I7 + 7 | 0] & o3[I7 + 8 | 0] & o3[I7 + 9 | 0] & o3[I7 + 10 | 0] & o3[I7 + 11 | 0] & o3[I7 + 12 | 0] & o3[I7 + 13 | 0] & o3[I7 + 14 | 0] & o3[I7 + 15 | 0] & o3[I7 + 16 | 0] & o3[I7 + 17 | 0] & o3[I7 + 18 | 0] & o3[I7 + 19 | 0] & o3[I7 + 20 | 0] & o3[I7 + 21 | 0] & o3[I7 + 22 | 0] & o3[I7 + 23 | 0] & o3[I7 + 24 | 0] & o3[I7 + 25 | 0] & o3[I7 + 26 | 0] & o3[I7 + 27 | 0] & o3[I7 + 28 | 0] & o3[I7 + 29 | 0] & o3[I7 + 30 | 0]))) - 1 & 236 - Q5) >>> 8 | Q5 | E4 >>> 7) || (fA(E4 = g6 + 336 | 0, I7), R3(g6 + 288 | 0, E4), I7 = i4[g6 + 324 >> 2], i4[g6 + 276 >> 2] = 0 - I7, B4 = i4[g6 + 320 >> 2], i4[g6 + 272 >> 2] = 0 - B4, Q5 = i4[g6 + 316 >> 2], i4[g6 + 268 >> 2] = 0 - Q5, a4 = i4[g6 + 312 >> 2], i4[g6 + 264 >> 2] = 0 - a4, _4 = i4[g6 + 308 >> 2], i4[g6 + 260 >> 2] = 0 - _4, c4 = i4[g6 + 304 >> 2], i4[g6 + 256 >> 2] = 0 - c4, t4 = i4[g6 + 300 >> 2], i4[g6 + 252 >> 2] = 0 - t4, r4 = i4[g6 + 296 >> 2], i4[g6 + 248 >> 2] = 0 - r4, e6 = i4[g6 + 292 >> 2], i4[g6 + 244 >> 2] = 0 - e6, y4 = i4[g6 + 288 >> 2], i4[g6 + 240 >> 2] = 1 - y4, R3(h4 = g6 + 144 | 0, p4 = g6 + 240 | 0), i4[g6 + 228 >> 2] = I7, i4[g6 + 224 >> 2] = B4, i4[g6 + 220 >> 2] = Q5, i4[g6 + 216 >> 2] = a4, i4[g6 + 212 >> 2] = _4, i4[g6 + 208 >> 2] = c4, i4[g6 + 204 >> 2] = t4, i4[g6 + 200 >> 2] = r4, i4[g6 + 196 >> 2] = e6, i4[g6 + 192 >> 2] = y4 + 1, R3(B4 = g6 + 96 | 0, a4 = g6 + 192 | 0), b4(I7 = g6 + 48 | 0, 1584, h4), Q5 = i4[g6 + 96 >> 2], _4 = i4[g6 + 48 >> 2], c4 = i4[g6 + 100 >> 2], t4 = i4[g6 + 52 >> 2], r4 = i4[g6 + 104 >> 2], e6 = i4[g6 + 56 >> 2], y4 = i4[g6 + 108 >> 2], h4 = i4[g6 + 60 >> 2], D4 = i4[g6 + 112 >> 2], f4 = i4[g6 + 64 >> 2], w4 = i4[g6 + 116 >> 2], n5 = i4[g6 + 68 >> 2], k4 = i4[g6 + 120 >> 2], F4 = i4[g6 + 72 >> 2], S4 = i4[g6 + 124 >> 2], N4 = i4[g6 + 76 >> 2], G4 = i4[g6 + 128 >> 2], M4 = i4[g6 + 80 >> 2], i4[g6 + 84 >> 2] = 0 - (i4[g6 + 84 >> 2] + i4[g6 + 132 >> 2] | 0), i4[g6 + 80 >> 2] = 0 - (G4 + M4 | 0), i4[g6 + 76 >> 2] = 0 - (S4 + N4 | 0), i4[g6 + 72 >> 2] = 0 - (k4 + F4 | 0), i4[g6 + 68 >> 2] = 0 - (w4 + n5 | 0), i4[g6 + 64 >> 2] = 0 - (D4 + f4 | 0), i4[g6 + 60 >> 2] = 0 - (y4 + h4 | 0), i4[g6 + 56 >> 2] = 0 - (r4 + e6 | 0), i4[g6 + 52 >> 2] = 0 - (c4 + t4 | 0), i4[g6 + 48 >> 2] = 0 - (Q5 + _4 | 0), b4(g6, I7, B4), i4[g6 + 404 >> 2] = 0, i4[g6 + 408 >> 2] = 0, i4[g6 + 412 >> 2] = 0, i4[g6 + 416 >> 2] = 0, i4[g6 + 420 >> 2] = 0, i4[g6 + 388 >> 2] = 0, i4[g6 + 392 >> 2] = 0, i4[g6 + 384 >> 2] = 1, i4[g6 + 396 >> 2] = 0, i4[g6 + 400 >> 2] = 0, f4 = GA(Q5 = g6 + 432 | 0, g6 + 384 | 0, g6), b4(A8, Q5, a4), b4(B4 = A8 + 40 | 0, Q5, A8), b4(B4, B4, I7), b4(A8, A8, E4), E4 = i4[A8 + 36 >> 2] << 1, i4[A8 + 36 >> 2] = E4, Q5 = i4[A8 + 32 >> 2] << 1, i4[A8 + 32 >> 2] = Q5, a4 = i4[A8 + 28 >> 2] << 1, i4[A8 + 28 >> 2] = a4, _4 = i4[A8 + 24 >> 2] << 1, i4[A8 + 24 >> 2] = _4, c4 = i4[A8 + 20 >> 2] << 1, i4[A8 + 20 >> 2] = c4, t4 = i4[A8 + 16 >> 2] << 1, i4[A8 + 16 >> 2] = t4, r4 = i4[A8 + 12 >> 2] << 1, i4[A8 + 12 >> 2] = r4, e6 = i4[A8 + 8 >> 2] << 1, i4[A8 + 8 >> 2] = e6, y4 = i4[A8 + 4 >> 2] << 1, i4[A8 + 4 >> 2] = y4, h4 = i4[A8 >> 2] << 1, i4[A8 >> 2] = h4, QI(D4 = g6 + 480 | 0, A8), I7 = 0 - (1 & C3[g6 + 480 | 0]) | 0, i4[A8 + 36 >> 2] = E4 ^ I7 & (E4 ^ 0 - E4), i4[A8 + 32 >> 2] = Q5 ^ I7 & (Q5 ^ 0 - Q5), i4[A8 + 28 >> 2] = a4 ^ I7 & (a4 ^ 0 - a4), i4[A8 + 24 >> 2] = _4 ^ I7 & (_4 ^ 0 - _4), i4[A8 + 20 >> 2] = c4 ^ I7 & (c4 ^ 0 - c4), i4[A8 + 16 >> 2] = t4 ^ I7 & (t4 ^ 0 - t4), i4[A8 + 12 >> 2] = r4 ^ I7 & (r4 ^ 0 - r4), i4[A8 + 8 >> 2] = e6 ^ I7 & (e6 ^ 0 - e6), i4[A8 + 4 >> 2] = y4 ^ I7 & (y4 ^ 0 - y4), i4[A8 >> 2] = h4 ^ I7 & (h4 ^ 0 - h4), b4(B4, p4, B4), i4[A8 + 84 >> 2] = 0, i4[A8 + 88 >> 2] = 0, i4[A8 + 80 >> 2] = 1, i4[A8 + 92 >> 2] = 0, i4[A8 + 96 >> 2] = 0, i4[A8 + 100 >> 2] = 0, i4[A8 + 104 >> 2] = 0, i4[A8 + 108 >> 2] = 0, i4[A8 + 112 >> 2] = 0, i4[A8 + 116 >> 2] = 0, b4(I7 = A8 + 120 | 0, A8, B4), QI(D4, I7), A8 = o3[g6 + 480 | 0], QI(D4, B4), B4 = 0 - (GI(D4, 32) | 1 - f4 | 1 & A8) | 0), s3 = g6 + 512 | 0, B4;
                    }
                    function aA(A8, I7, g6, B4) {
                      var Q5, o4 = 0, E4 = 0;
                      Q5 = o4 = s3, s3 = o4 = o4 - 576 & -64, i4[o4 + 188 >> 2] = I7;
                      A: if (I7 >>> 0 <= 64) {
                        if ((0 | eA(E4 = o4 + 192 | 0, 0, 0, I7)) < 0) break A;
                        if ((0 | WA(E4, o4 + 188 | 0, 4, 0)) < 0) break A;
                        if ((0 | WA(E4, g6, B4, 0)) < 0) break A;
                        Hg(E4, A8, I7);
                      } else if (!((0 | eA(E4 = o4 + 192 | 0, 0, 0, 64)) < 0 || (0 | WA(E4, o4 + 188 | 0, 4, 0)) < 0 || (0 | WA(E4, g6, B4, 0)) < 0 || (0 | Hg(E4, o4 + 112 | 0, 64)) < 0)) {
                        if (g6 = i4[o4 + 116 >> 2], B4 = i4[o4 + 112 >> 2], C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 4 | 0] = g6, C3[A8 + 5 | 0] = g6 >>> 8, C3[A8 + 6 | 0] = g6 >>> 16, C3[A8 + 7 | 0] = g6 >>> 24, g6 = i4[o4 + 124 >> 2], B4 = i4[o4 + 120 >> 2], C3[A8 + 8 | 0] = B4, C3[A8 + 9 | 0] = B4 >>> 8, C3[A8 + 10 | 0] = B4 >>> 16, C3[A8 + 11 | 0] = B4 >>> 24, C3[A8 + 12 | 0] = g6, C3[A8 + 13 | 0] = g6 >>> 8, C3[A8 + 14 | 0] = g6 >>> 16, C3[A8 + 15 | 0] = g6 >>> 24, g6 = i4[o4 + 140 >> 2], B4 = i4[o4 + 136 >> 2], C3[A8 + 24 | 0] = B4, C3[A8 + 25 | 0] = B4 >>> 8, C3[A8 + 26 | 0] = B4 >>> 16, C3[A8 + 27 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = g6, C3[A8 + 29 | 0] = g6 >>> 8, C3[A8 + 30 | 0] = g6 >>> 16, C3[A8 + 31 | 0] = g6 >>> 24, g6 = i4[o4 + 132 >> 2], B4 = i4[o4 + 128 >> 2], C3[A8 + 16 | 0] = B4, C3[A8 + 17 | 0] = B4 >>> 8, C3[A8 + 18 | 0] = B4 >>> 16, C3[A8 + 19 | 0] = B4 >>> 24, C3[A8 + 20 | 0] = g6, C3[A8 + 21 | 0] = g6 >>> 8, C3[A8 + 22 | 0] = g6 >>> 16, C3[A8 + 23 | 0] = g6 >>> 24, A8 = A8 + 32 | 0, (I7 = I7 - 32 | 0) >>> 0 >= 65) for (; ; ) {
                          if (g6 = i4[o4 + 172 >> 2], i4[o4 + 104 >> 2] = i4[o4 + 168 >> 2], i4[o4 + 108 >> 2] = g6, g6 = i4[o4 + 164 >> 2], i4[o4 + 96 >> 2] = i4[o4 + 160 >> 2], i4[o4 + 100 >> 2] = g6, g6 = i4[o4 + 156 >> 2], i4[o4 + 88 >> 2] = i4[o4 + 152 >> 2], i4[o4 + 92 >> 2] = g6, g6 = i4[o4 + 148 >> 2], i4[o4 + 80 >> 2] = i4[o4 + 144 >> 2], i4[o4 + 84 >> 2] = g6, g6 = i4[o4 + 140 >> 2], i4[o4 + 72 >> 2] = i4[o4 + 136 >> 2], i4[o4 + 76 >> 2] = g6, B4 = i4[o4 + 132 >> 2], i4[(g6 = o4 - -64 | 0) >> 2] = i4[o4 + 128 >> 2], i4[g6 + 4 >> 2] = B4, g6 = i4[o4 + 124 >> 2], i4[o4 + 56 >> 2] = i4[o4 + 120 >> 2], i4[o4 + 60 >> 2] = g6, g6 = i4[o4 + 116 >> 2], i4[o4 + 48 >> 2] = i4[o4 + 112 >> 2], i4[o4 + 52 >> 2] = g6, (0 | lA(o4 + 112 | 0, 64, o4 + 48 | 0, 64, 0, 0, 0)) < 0) break A;
                          if (g6 = i4[o4 + 116 >> 2], B4 = i4[o4 + 112 >> 2], C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 4 | 0] = g6, C3[A8 + 5 | 0] = g6 >>> 8, C3[A8 + 6 | 0] = g6 >>> 16, C3[A8 + 7 | 0] = g6 >>> 24, g6 = i4[o4 + 124 >> 2], B4 = i4[o4 + 120 >> 2], C3[A8 + 8 | 0] = B4, C3[A8 + 9 | 0] = B4 >>> 8, C3[A8 + 10 | 0] = B4 >>> 16, C3[A8 + 11 | 0] = B4 >>> 24, C3[A8 + 12 | 0] = g6, C3[A8 + 13 | 0] = g6 >>> 8, C3[A8 + 14 | 0] = g6 >>> 16, C3[A8 + 15 | 0] = g6 >>> 24, g6 = i4[o4 + 140 >> 2], B4 = i4[o4 + 136 >> 2], C3[A8 + 24 | 0] = B4, C3[A8 + 25 | 0] = B4 >>> 8, C3[A8 + 26 | 0] = B4 >>> 16, C3[A8 + 27 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = g6, C3[A8 + 29 | 0] = g6 >>> 8, C3[A8 + 30 | 0] = g6 >>> 16, C3[A8 + 31 | 0] = g6 >>> 24, g6 = i4[o4 + 132 >> 2], B4 = i4[o4 + 128 >> 2], C3[A8 + 16 | 0] = B4, C3[A8 + 17 | 0] = B4 >>> 8, C3[A8 + 18 | 0] = B4 >>> 16, C3[A8 + 19 | 0] = B4 >>> 24, C3[A8 + 20 | 0] = g6, C3[A8 + 21 | 0] = g6 >>> 8, C3[A8 + 22 | 0] = g6 >>> 16, C3[A8 + 23 | 0] = g6 >>> 24, A8 = A8 + 32 | 0, !((I7 = I7 - 32 | 0) >>> 0 > 64)) break;
                        }
                        g6 = i4[o4 + 172 >> 2], i4[o4 + 104 >> 2] = i4[o4 + 168 >> 2], i4[o4 + 108 >> 2] = g6, g6 = i4[o4 + 164 >> 2], i4[o4 + 96 >> 2] = i4[o4 + 160 >> 2], i4[o4 + 100 >> 2] = g6, g6 = i4[o4 + 156 >> 2], i4[o4 + 88 >> 2] = i4[o4 + 152 >> 2], i4[o4 + 92 >> 2] = g6, g6 = i4[o4 + 148 >> 2], i4[o4 + 80 >> 2] = i4[o4 + 144 >> 2], i4[o4 + 84 >> 2] = g6, g6 = i4[o4 + 140 >> 2], i4[o4 + 72 >> 2] = i4[o4 + 136 >> 2], i4[o4 + 76 >> 2] = g6, B4 = i4[o4 + 132 >> 2], i4[(g6 = o4 - -64 | 0) >> 2] = i4[o4 + 128 >> 2], i4[g6 + 4 >> 2] = B4, g6 = i4[o4 + 124 >> 2], i4[o4 + 56 >> 2] = i4[o4 + 120 >> 2], i4[o4 + 60 >> 2] = g6, g6 = i4[o4 + 116 >> 2], i4[o4 + 48 >> 2] = i4[o4 + 112 >> 2], i4[o4 + 52 >> 2] = g6, (0 | lA(g6 = o4 + 112 | 0, I7, o4 + 48 | 0, 64, 0, 0, 0)) < 0 || Ng(A8, g6, I7);
                      }
                      XC(o4 + 192 | 0, 384), s3 = Q5;
                    }
                    function _A(A8, I7, g6, B4, Q5, _4, c4, t4, r4, e6, y4) {
                      var h4 = 0, D4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0, H4 = 0, Y4 = 0, J4 = 0;
                      if (h4 = Ig(r4, 0, t4, 0), !(n5 = f3) & h4 >>> 0 >= 1073741824 | n5) return i4[9404] = 22, -1;
                      if (1 == (0 | c4) | c4 >>> 0 > 1) return i4[9404] = 22, -1;
                      if (h4 = c4, !(!(_4 & (n5 = _4 - 1 | 0) | c4 & (h4 = -1 != (0 | n5) ? h4 + 1 | 0 : h4)) & (!c4 & _4 >>> 0 >= 2 | !!(0 | c4)))) return i4[9404] = 28, -1;
                      if (!r4 || !t4) return i4[9404] = 28, -1;
                      if (!(33554431 / (r4 >>> 0) >>> 0 < t4 >>> 0 | t4 >>> 0 > 16777215) && !c4 & 33554431 / (t4 >>> 0) >>> 0 >= _4 >>> 0 && !((M4 = a3(G4 = t4 << 7, r4)) >>> 0 > (h4 = (k4 = a3(_4, G4)) + M4 | 0) >>> 0 || (D4 = h4) >>> 0 > (h4 = ((F4 = t4 << 8) + h4 | 0) - -64 | 0) >>> 0)) {
                        A: {
                          if (h4 >>> 0 > E3[A8 + 8 >> 2]) {
                            if (w4 = -1, Rg(A8)) break A;
                            if (s3 = n5 = s3 - 16 | 0, D4 = tI(n5 + 12 | 0, h4), i4[9404] = D4, D4 = D4 ? 0 : i4[n5 + 12 >> 2], i4[A8 + 4 >> 2] = D4, i4[A8 >> 2] = D4, i4[A8 + 8 >> 2] = D4 ? h4 : 0, s3 = n5 + 16 | 0, !D4) break A;
                          }
                          for (DI(I7, g6, B4, Q5, U4 = i4[A8 + 4 >> 2], M4), Y4 = ((k4 = (D4 = (K4 = M4 + U4 | 0) + k4 | 0) + (t4 << 7) | 0) + G4 | 0) - 64 | 0, Q5 = _4 - 1 | 0, N4 = t4 << 5, b5 = D4 + F4 | 0, J4 = (D4 + G4 | 0) - 64 | 0; ; ) {
                            for (F4 = a3(G4, H4) + U4 | 0, w4 = 0; B4 = (A8 = w4 << 2) + F4 | 0, i4[A8 + D4 >> 2] = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, h4 = (B4 = 4 | A8) + D4 | 0, B4 = B4 + F4 | 0, i4[h4 >> 2] = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, h4 = (B4 = 8 | A8) + D4 | 0, B4 = B4 + F4 | 0, i4[h4 >> 2] = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, B4 = (A8 |= 12) + D4 | 0, A8 = A8 + F4 | 0, i4[B4 >> 2] = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, n5 = 0, h4 = 0, (0 | N4) != (0 | (w4 = w4 + 4 | 0)); ) ;
                            for (B4 = 0, A8 = 0; Ng(K4 + (a3(B4, N4) << 2) | 0, D4, G4), tA(D4, k4, b5, t4), Ng(K4 + (a3(N4, 1 | B4) << 2) | 0, k4, G4), tA(k4, D4, b5, t4), (0 | c4) == (0 | (A8 = (B4 = B4 + 2 | 0) >>> 0 < 2 ? A8 + 1 | 0 : A8)) & B4 >>> 0 < _4 >>> 0 | A8 >>> 0 < c4 >>> 0; ) ;
                            for (; ; ) {
                              for (A8 = K4 + (a3(N4, Q5 & i4[J4 >> 2]) << 2) | 0, w4 = 0; i4[(p4 = (B4 = w4 << 2) + D4 | 0) >> 2] = i4[p4 >> 2] ^ i4[A8 + B4 >> 2], i4[(S4 = (p4 = 4 | B4) + D4 | 0) >> 2] = i4[S4 >> 2] ^ i4[A8 + p4 >> 2], i4[(S4 = (p4 = 8 | B4) + D4 | 0) >> 2] = i4[S4 >> 2] ^ i4[A8 + p4 >> 2], i4[(p4 = (B4 |= 12) + D4 | 0) >> 2] = i4[p4 >> 2] ^ i4[A8 + B4 >> 2], (0 | N4) != (0 | (w4 = w4 + 4 | 0)); ) ;
                              for (tA(D4, k4, b5, t4), A8 = K4 + (a3(N4, Q5 & i4[Y4 >> 2]) << 2) | 0, w4 = 0; i4[(p4 = (B4 = w4 << 2) + k4 | 0) >> 2] = i4[p4 >> 2] ^ i4[A8 + B4 >> 2], i4[(S4 = (p4 = 4 | B4) + k4 | 0) >> 2] = i4[S4 >> 2] ^ i4[A8 + p4 >> 2], i4[(S4 = (p4 = 8 | B4) + k4 | 0) >> 2] = i4[S4 >> 2] ^ i4[A8 + p4 >> 2], i4[(p4 = (B4 |= 12) + k4 | 0) >> 2] = i4[p4 >> 2] ^ i4[A8 + B4 >> 2], (0 | N4) != (0 | (w4 = w4 + 4 | 0)); ) ;
                              if (tA(k4, D4, b5, t4), w4 = 0, !((0 | c4) == (0 | (h4 = (n5 = n5 + 2 | 0) >>> 0 < 2 ? h4 + 1 | 0 : h4)) & _4 >>> 0 > n5 >>> 0 | c4 >>> 0 > h4 >>> 0)) break;
                            }
                            for (; B4 = (A8 = w4 << 2) + F4 | 0, h4 = i4[A8 + D4 >> 2], C3[0 | B4] = h4, C3[B4 + 1 | 0] = h4 >>> 8, C3[B4 + 2 | 0] = h4 >>> 16, C3[B4 + 3 | 0] = h4 >>> 24, B4 = (h4 = 4 | A8) + F4 | 0, h4 = i4[h4 + D4 >> 2], C3[0 | B4] = h4, C3[B4 + 1 | 0] = h4 >>> 8, C3[B4 + 2 | 0] = h4 >>> 16, C3[B4 + 3 | 0] = h4 >>> 24, B4 = (h4 = 8 | A8) + F4 | 0, h4 = i4[h4 + D4 >> 2], C3[0 | B4] = h4, C3[B4 + 1 | 0] = h4 >>> 8, C3[B4 + 2 | 0] = h4 >>> 16, C3[B4 + 3 | 0] = h4 >>> 24, A8 = (B4 = 12 | A8) + F4 | 0, B4 = i4[B4 + D4 >> 2], C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, (0 | N4) != (0 | (w4 = w4 + 4 | 0)); ) ;
                            if ((0 | (H4 = H4 + 1 | 0)) == (0 | r4)) break;
                          }
                          DI(I7, g6, U4, M4, e6, y4), w4 = 0;
                        }
                        return w4;
                      }
                      return i4[9404] = 48, -1;
                    }
                    function cA(A8, I7, g6) {
                      A8 |= 0, I7 |= 0, g6 |= 0;
                      var B4, Q5, E4, a4 = 0;
                      s3 = B4 = s3 - 192 | 0, i4[B4 + 96 >> 2] = 0, i4[B4 + 100 >> 2] = 0, i4[B4 + 104 >> 2] = 0, i4[B4 + 108 >> 2] = 0, i4[B4 + 112 >> 2] = 0, i4[B4 + 116 >> 2] = 0, i4[B4 + 120 >> 2] = 0, i4[B4 + 124 >> 2] = 0, a4 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, i4[B4 + 80 >> 2] = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, i4[B4 + 84 >> 2] = a4, a4 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24, i4[B4 + 88 >> 2] = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, i4[B4 + 92 >> 2] = a4, Q5 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, E4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, a4 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, I7 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, i4[B4 + 40 >> 2] = 0, i4[B4 + 44 >> 2] = 0, i4[B4 + 48 >> 2] = 0, i4[B4 + 52 >> 2] = 0, i4[B4 + 56 >> 2] = 0, i4[B4 + 60 >> 2] = 0, i4[B4 + 64 >> 2] = a4, i4[B4 + 68 >> 2] = I7, i4[B4 + 72 >> 2] = Q5, i4[B4 + 76 >> 2] = E4, i4[B4 + 32 >> 2] = 0, i4[B4 + 36 >> 2] = 0, I7 = o3[g6 + 20 | 0] | o3[g6 + 21 | 0] << 8 | o3[g6 + 22 | 0] << 16 | o3[g6 + 23 | 0] << 24, i4[B4 + 16 >> 2] = o3[g6 + 16 | 0] | o3[g6 + 17 | 0] << 8 | o3[g6 + 18 | 0] << 16 | o3[g6 + 19 | 0] << 24, i4[B4 + 20 >> 2] = I7, I7 = o3[g6 + 28 | 0] | o3[g6 + 29 | 0] << 8 | o3[g6 + 30 | 0] << 16 | o3[g6 + 31 | 0] << 24, i4[B4 + 24 >> 2] = o3[g6 + 24 | 0] | o3[g6 + 25 | 0] << 8 | o3[g6 + 26 | 0] << 16 | o3[g6 + 27 | 0] << 24, i4[B4 + 28 >> 2] = I7, I7 = o3[g6 + 4 | 0] | o3[g6 + 5 | 0] << 8 | o3[g6 + 6 | 0] << 16 | o3[g6 + 7 | 0] << 24, i4[B4 >> 2] = o3[0 | g6] | o3[g6 + 1 | 0] << 8 | o3[g6 + 2 | 0] << 16 | o3[g6 + 3 | 0] << 24, i4[B4 + 4 >> 2] = I7, I7 = o3[g6 + 12 | 0] | o3[g6 + 13 | 0] << 8 | o3[g6 + 14 | 0] << 16 | o3[g6 + 15 | 0] << 24, i4[B4 + 8 >> 2] = o3[g6 + 8 | 0] | o3[g6 + 9 | 0] << 8 | o3[g6 + 10 | 0] << 16 | o3[g6 + 11 | 0] << 24, i4[B4 + 12 >> 2] = I7, og(B4 - -64 | 0, B4), g6 = i4[B4 + 124 >> 2], i4[B4 + 184 >> 2] = i4[B4 + 120 >> 2], i4[B4 + 188 >> 2] = g6, I7 = i4[B4 + 116 >> 2], i4[B4 + 176 >> 2] = i4[B4 + 112 >> 2], i4[B4 + 180 >> 2] = I7, I7 = i4[B4 + 108 >> 2], i4[B4 + 168 >> 2] = i4[B4 + 104 >> 2], i4[B4 + 172 >> 2] = I7, I7 = i4[B4 + 100 >> 2], i4[B4 + 160 >> 2] = i4[B4 + 96 >> 2], i4[B4 + 164 >> 2] = I7, I7 = i4[B4 + 92 >> 2], i4[B4 + 152 >> 2] = i4[B4 + 88 >> 2], i4[B4 + 156 >> 2] = I7, I7 = i4[B4 + 84 >> 2], i4[B4 + 144 >> 2] = i4[B4 + 80 >> 2], i4[B4 + 148 >> 2] = I7, I7 = i4[B4 + 76 >> 2], i4[B4 + 136 >> 2] = i4[B4 + 72 >> 2], i4[B4 + 140 >> 2] = I7, I7 = i4[B4 + 68 >> 2], i4[B4 + 128 >> 2] = i4[B4 + 64 >> 2], i4[B4 + 132 >> 2] = I7, S3(I7 = B4 + 128 | 0), a4 = i4[B4 + 156 >> 2], g6 = i4[B4 + 152 >> 2], C3[A8 + 24 | 0] = g6, C3[A8 + 25 | 0] = g6 >>> 8, C3[A8 + 26 | 0] = g6 >>> 16, C3[A8 + 27 | 0] = g6 >>> 24, C3[A8 + 28 | 0] = a4, C3[A8 + 29 | 0] = a4 >>> 8, C3[A8 + 30 | 0] = a4 >>> 16, C3[A8 + 31 | 0] = a4 >>> 24, a4 = i4[B4 + 148 >> 2], g6 = i4[B4 + 144 >> 2], C3[A8 + 16 | 0] = g6, C3[A8 + 17 | 0] = g6 >>> 8, C3[A8 + 18 | 0] = g6 >>> 16, C3[A8 + 19 | 0] = g6 >>> 24, C3[A8 + 20 | 0] = a4, C3[A8 + 21 | 0] = a4 >>> 8, C3[A8 + 22 | 0] = a4 >>> 16, C3[A8 + 23 | 0] = a4 >>> 24, a4 = i4[B4 + 140 >> 2], g6 = i4[B4 + 136 >> 2], C3[A8 + 8 | 0] = g6, C3[A8 + 9 | 0] = g6 >>> 8, C3[A8 + 10 | 0] = g6 >>> 16, C3[A8 + 11 | 0] = g6 >>> 24, C3[A8 + 12 | 0] = a4, C3[A8 + 13 | 0] = a4 >>> 8, C3[A8 + 14 | 0] = a4 >>> 16, C3[A8 + 15 | 0] = a4 >>> 24, a4 = i4[B4 + 132 >> 2], g6 = i4[B4 + 128 >> 2], C3[0 | A8] = g6, C3[A8 + 1 | 0] = g6 >>> 8, C3[A8 + 2 | 0] = g6 >>> 16, C3[A8 + 3 | 0] = g6 >>> 24, C3[A8 + 4 | 0] = a4, C3[A8 + 5 | 0] = a4 >>> 8, C3[A8 + 6 | 0] = a4 >>> 16, C3[A8 + 7 | 0] = a4 >>> 24, XC(I7, 64), s3 = B4 + 192 | 0;
                    }
                    function tA(A8, I7, g6, C4) {
                      var B4 = 0, Q5 = 0, o4 = 0, E4 = 0, a4 = 0;
                      if (Q5 = i4[4 + (B4 = ((C4 << 7) + A8 | 0) - 64 | 0) >> 2], i4[g6 >> 2] = i4[B4 >> 2], i4[g6 + 4 >> 2] = Q5, Q5 = i4[B4 + 60 >> 2], i4[g6 + 56 >> 2] = i4[B4 + 56 >> 2], i4[g6 + 60 >> 2] = Q5, Q5 = i4[B4 + 52 >> 2], i4[g6 + 48 >> 2] = i4[B4 + 48 >> 2], i4[g6 + 52 >> 2] = Q5, Q5 = i4[B4 + 44 >> 2], i4[g6 + 40 >> 2] = i4[B4 + 40 >> 2], i4[g6 + 44 >> 2] = Q5, Q5 = i4[B4 + 36 >> 2], i4[g6 + 32 >> 2] = i4[B4 + 32 >> 2], i4[g6 + 36 >> 2] = Q5, Q5 = i4[B4 + 28 >> 2], i4[g6 + 24 >> 2] = i4[B4 + 24 >> 2], i4[g6 + 28 >> 2] = Q5, Q5 = i4[B4 + 20 >> 2], i4[g6 + 16 >> 2] = i4[B4 + 16 >> 2], i4[g6 + 20 >> 2] = Q5, Q5 = i4[B4 + 12 >> 2], i4[g6 + 8 >> 2] = i4[B4 + 8 >> 2], i4[g6 + 12 >> 2] = Q5, C4) for (Q5 = C4 << 1, a4 = C4 << 6; C4 = (E4 << 6) + A8 | 0, i4[g6 >> 2] = i4[g6 >> 2] ^ i4[C4 >> 2], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] ^ i4[C4 + 4 >> 2], i4[g6 + 8 >> 2] = i4[g6 + 8 >> 2] ^ i4[C4 + 8 >> 2], i4[g6 + 12 >> 2] = i4[g6 + 12 >> 2] ^ i4[C4 + 12 >> 2], i4[g6 + 16 >> 2] = i4[g6 + 16 >> 2] ^ i4[C4 + 16 >> 2], i4[g6 + 20 >> 2] = i4[g6 + 20 >> 2] ^ i4[C4 + 20 >> 2], i4[g6 + 24 >> 2] = i4[g6 + 24 >> 2] ^ i4[C4 + 24 >> 2], i4[g6 + 28 >> 2] = i4[g6 + 28 >> 2] ^ i4[C4 + 28 >> 2], i4[g6 + 32 >> 2] = i4[g6 + 32 >> 2] ^ i4[C4 + 32 >> 2], i4[g6 + 36 >> 2] = i4[g6 + 36 >> 2] ^ i4[C4 + 36 >> 2], i4[g6 + 40 >> 2] = i4[g6 + 40 >> 2] ^ i4[C4 + 40 >> 2], i4[g6 + 44 >> 2] = i4[g6 + 44 >> 2] ^ i4[C4 + 44 >> 2], i4[g6 + 48 >> 2] = i4[g6 + 48 >> 2] ^ i4[C4 + 48 >> 2], i4[g6 + 52 >> 2] = i4[g6 + 52 >> 2] ^ i4[C4 + 52 >> 2], i4[g6 + 56 >> 2] = i4[g6 + 56 >> 2] ^ i4[C4 + 56 >> 2], i4[g6 + 60 >> 2] = i4[g6 + 60 >> 2] ^ i4[C4 + 60 >> 2], VA(g6), o4 = i4[g6 + 60 >> 2], i4[56 + (B4 = (E4 << 5) + I7 | 0) >> 2] = i4[g6 + 56 >> 2], i4[B4 + 60 >> 2] = o4, o4 = i4[g6 + 52 >> 2], i4[B4 + 48 >> 2] = i4[g6 + 48 >> 2], i4[B4 + 52 >> 2] = o4, o4 = i4[g6 + 44 >> 2], i4[B4 + 40 >> 2] = i4[g6 + 40 >> 2], i4[B4 + 44 >> 2] = o4, o4 = i4[g6 + 36 >> 2], i4[B4 + 32 >> 2] = i4[g6 + 32 >> 2], i4[B4 + 36 >> 2] = o4, o4 = i4[g6 + 28 >> 2], i4[B4 + 24 >> 2] = i4[g6 + 24 >> 2], i4[B4 + 28 >> 2] = o4, o4 = i4[g6 + 20 >> 2], i4[B4 + 16 >> 2] = i4[g6 + 16 >> 2], i4[B4 + 20 >> 2] = o4, o4 = i4[g6 + 12 >> 2], i4[B4 + 8 >> 2] = i4[g6 + 8 >> 2], i4[B4 + 12 >> 2] = o4, o4 = i4[g6 + 4 >> 2], i4[B4 >> 2] = i4[g6 >> 2], i4[B4 + 4 >> 2] = o4, i4[g6 >> 2] = i4[g6 >> 2] ^ i4[C4 - -64 >> 2], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] ^ i4[C4 + 68 >> 2], i4[g6 + 8 >> 2] = i4[g6 + 8 >> 2] ^ i4[C4 + 72 >> 2], i4[g6 + 12 >> 2] = i4[g6 + 12 >> 2] ^ i4[C4 + 76 >> 2], i4[g6 + 16 >> 2] = i4[g6 + 16 >> 2] ^ i4[C4 + 80 >> 2], i4[g6 + 20 >> 2] = i4[g6 + 20 >> 2] ^ i4[C4 + 84 >> 2], i4[g6 + 24 >> 2] = i4[g6 + 24 >> 2] ^ i4[C4 + 88 >> 2], i4[g6 + 28 >> 2] = i4[g6 + 28 >> 2] ^ i4[C4 + 92 >> 2], i4[g6 + 32 >> 2] = i4[g6 + 32 >> 2] ^ i4[C4 + 96 >> 2], i4[g6 + 36 >> 2] = i4[g6 + 36 >> 2] ^ i4[C4 + 100 >> 2], i4[g6 + 40 >> 2] = i4[g6 + 40 >> 2] ^ i4[C4 + 104 >> 2], i4[g6 + 44 >> 2] = i4[g6 + 44 >> 2] ^ i4[C4 + 108 >> 2], i4[g6 + 48 >> 2] = i4[g6 + 48 >> 2] ^ i4[C4 + 112 >> 2], i4[g6 + 52 >> 2] = i4[g6 + 52 >> 2] ^ i4[C4 + 116 >> 2], i4[g6 + 56 >> 2] = i4[g6 + 56 >> 2] ^ i4[C4 + 120 >> 2], i4[g6 + 60 >> 2] = i4[g6 + 60 >> 2] ^ i4[C4 + 124 >> 2], VA(g6), C4 = B4 + a4 | 0, B4 = i4[g6 + 60 >> 2], i4[C4 + 56 >> 2] = i4[g6 + 56 >> 2], i4[C4 + 60 >> 2] = B4, B4 = i4[g6 + 52 >> 2], i4[C4 + 48 >> 2] = i4[g6 + 48 >> 2], i4[C4 + 52 >> 2] = B4, B4 = i4[g6 + 44 >> 2], i4[C4 + 40 >> 2] = i4[g6 + 40 >> 2], i4[C4 + 44 >> 2] = B4, B4 = i4[g6 + 36 >> 2], i4[C4 + 32 >> 2] = i4[g6 + 32 >> 2], i4[C4 + 36 >> 2] = B4, B4 = i4[g6 + 28 >> 2], i4[C4 + 24 >> 2] = i4[g6 + 24 >> 2], i4[C4 + 28 >> 2] = B4, B4 = i4[g6 + 20 >> 2], i4[C4 + 16 >> 2] = i4[g6 + 16 >> 2], i4[C4 + 20 >> 2] = B4, B4 = i4[g6 + 12 >> 2], i4[C4 + 8 >> 2] = i4[g6 + 8 >> 2], i4[C4 + 12 >> 2] = B4, B4 = i4[g6 + 4 >> 2], i4[C4 >> 2] = i4[g6 >> 2], i4[C4 + 4 >> 2] = B4, Q5 >>> 0 > (E4 = E4 + 2 | 0) >>> 0; ) ;
                    }
                    function rA(A8, I7, g6, C4) {
                      var B4 = 0, Q5 = 0, E4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0, H4 = 0;
                      if (h4 = i4[A8 + 36 >> 2], y4 = i4[A8 + 32 >> 2], s4 = i4[A8 + 28 >> 2], r4 = i4[A8 + 24 >> 2], e6 = i4[A8 + 20 >> 2], !C4 & g6 >>> 0 >= 16 | C4) for (M4 = !o3[A8 + 80 | 0] << 24, p4 = i4[A8 + 4 >> 2], K4 = a3(p4, 5), n5 = i4[A8 + 8 >> 2], N4 = a3(n5, 5), F4 = i4[A8 + 12 >> 2], S4 = a3(F4, 5), G4 = i4[A8 + 16 >> 2], k4 = a3(G4, 5), w4 = i4[A8 >> 2]; B4 = Ig(E4 = ((o3[I7 + 3 | 0] | o3[I7 + 4 | 0] << 8 | o3[I7 + 5 | 0] << 16 | o3[I7 + 6 | 0] << 24) >>> 2 & 67108863) + r4 | 0, 0, F4, 0), c4 = f3, e6 = (_4 = Ig(r4 = (67108863 & (o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24)) + e6 | 0, 0, G4, 0)) + B4 | 0, B4 = f3 + c4 | 0, B4 = _4 >>> 0 > e6 >>> 0 ? B4 + 1 | 0 : B4, c4 = Ig(s4 = ((o3[I7 + 6 | 0] | o3[I7 + 7 | 0] << 8 | o3[I7 + 8 | 0] << 16 | o3[I7 + 9 | 0] << 24) >>> 4 & 67108863) + s4 | 0, 0, n5, 0), B4 = f3 + B4 | 0, B4 = c4 >>> 0 > (e6 = c4 + e6 | 0) >>> 0 ? B4 + 1 | 0 : B4, c4 = Ig(y4 = ((o3[I7 + 9 | 0] | o3[I7 + 10 | 0] << 8 | o3[I7 + 11 | 0] << 16 | o3[I7 + 12 | 0] << 24) >>> 6 | 0) + y4 | 0, 0, p4, 0), B4 = f3 + B4 | 0, B4 = c4 >>> 0 > (e6 = c4 + e6 | 0) >>> 0 ? B4 + 1 | 0 : B4, c4 = Ig(h4 = h4 + M4 + ((o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24) >>> 8) | 0, 0, w4, 0), B4 = f3 + B4 | 0, U4 = e6 = c4 + e6 | 0, e6 = c4 >>> 0 > e6 >>> 0 ? B4 + 1 | 0 : B4, B4 = Ig(E4, 0, n5, 0), c4 = f3, _4 = Ig(r4, 0, F4, 0), Q5 = f3 + c4 | 0, Q5 = (B4 = _4 + B4 | 0) >>> 0 < _4 >>> 0 ? Q5 + 1 | 0 : Q5, c4 = (_4 = Ig(s4, 0, p4, 0)) + B4 | 0, B4 = f3 + Q5 | 0, B4 = _4 >>> 0 > c4 >>> 0 ? B4 + 1 | 0 : B4, _4 = Ig(y4, 0, w4, 0), B4 = f3 + B4 | 0, B4 = _4 >>> 0 > (c4 = _4 + c4 | 0) >>> 0 ? B4 + 1 | 0 : B4, _4 = Ig(h4, 0, k4, 0), B4 = f3 + B4 | 0, b5 = c4 = _4 + c4 | 0, c4 = _4 >>> 0 > c4 >>> 0 ? B4 + 1 | 0 : B4, B4 = Ig(E4, 0, p4, 0), t4 = f3, _4 = (Q5 = Ig(r4, 0, n5, 0)) + B4 | 0, B4 = f3 + t4 | 0, B4 = Q5 >>> 0 > _4 >>> 0 ? B4 + 1 | 0 : B4, t4 = Ig(s4, 0, w4, 0), Q5 = f3 + B4 | 0, Q5 = (_4 = t4 + _4 | 0) >>> 0 < t4 >>> 0 ? Q5 + 1 | 0 : Q5, t4 = Ig(y4, 0, k4, 0), B4 = f3 + Q5 | 0, B4 = (_4 = t4 + _4 | 0) >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4, t4 = Ig(h4, 0, S4, 0), B4 = f3 + B4 | 0, H4 = _4 = t4 + _4 | 0, _4 = _4 >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4, B4 = Ig(E4, 0, w4, 0), Q5 = f3, t4 = (D4 = Ig(r4, 0, p4, 0)) + B4 | 0, B4 = f3 + Q5 | 0, B4 = t4 >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4, Q5 = Ig(s4, 0, k4, 0), B4 = f3 + B4 | 0, B4 = Q5 >>> 0 > (t4 = Q5 + t4 | 0) >>> 0 ? B4 + 1 | 0 : B4, D4 = Ig(y4, 0, S4, 0), Q5 = f3 + B4 | 0, Q5 = (t4 = D4 + t4 | 0) >>> 0 < D4 >>> 0 ? Q5 + 1 | 0 : Q5, D4 = Ig(h4, 0, N4, 0), B4 = f3 + Q5 | 0, B4 = (t4 = D4 + t4 | 0) >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4, D4 = t4, t4 = B4, B4 = Ig(E4, 0, k4, 0), Q5 = f3, E4 = (r4 = Ig(r4, 0, w4, 0)) + B4 | 0, B4 = f3 + Q5 | 0, B4 = E4 >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4, r4 = Ig(s4, 0, S4, 0), B4 = f3 + B4 | 0, B4 = (E4 = r4 + E4 | 0) >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4, r4 = Ig(y4, 0, N4, 0), B4 = f3 + B4 | 0, B4 = (E4 = r4 + E4 | 0) >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4, r4 = Ig(h4, 0, K4, 0), Q5 = f3 + B4 | 0, Q5 = (E4 = r4 + E4 | 0) >>> 0 < r4 >>> 0 ? Q5 + 1 | 0 : Q5, r4 = E4, B4 = t4, B4 = (E4 = (s4 = (67108863 & Q5) << 6 | E4 >>> 26) + D4 | 0) >>> 0 < s4 >>> 0 ? B4 + 1 | 0 : B4, s4 = E4, y4 = (67108863 & B4) << 6 | E4 >>> 26, B4 = _4, B4 = (E4 = y4 + H4 | 0) >>> 0 < y4 >>> 0 ? B4 + 1 | 0 : B4, y4 = E4, Q5 = c4, h4 = B4 = (E4 = (67108863 & B4) << 6 | E4 >>> 26) + b5 | 0, c4 = (67108863 & (Q5 = B4 >>> 0 < E4 >>> 0 ? Q5 + 1 | 0 : Q5)) << 6 | B4 >>> 26, B4 = e6, r4 = (67108863 & s4) + ((B4 = a3((67108863 & ((E4 = c4 + U4 | 0) >>> 0 < c4 >>> 0 ? B4 + 1 : B4)) << 6 | E4 >>> 26, 5) + (67108863 & r4) | 0) >>> 26 | 0) | 0, s4 = 67108863 & y4, y4 = 67108863 & h4, h4 = 67108863 & E4, e6 = 67108863 & B4, I7 = I7 + 16 | 0, !(C4 = C4 - (g6 >>> 0 < 16) | 0) & (g6 = g6 - 16 | 0) >>> 0 > 15 | C4; ) ;
                      i4[A8 + 20 >> 2] = e6, i4[A8 + 36 >> 2] = h4, i4[A8 + 32 >> 2] = y4, i4[A8 + 28 >> 2] = s4, i4[A8 + 24 >> 2] = r4;
                    }
                    function eA(A8, I7, g6, B4) {
                      A8 |= 0, I7 |= 0;
                      var i5 = 0;
                      return i5 = -1, (B4 |= 0) - 65 >>> 0 < 4294967232 | (g6 |= 0) >>> 0 > 64 || (g6 && I7 ? (s3 = i5 = s3 - 128 | 0, !I7 | ((B4 &= 255) - 65 & 255) >>> 0 <= 191 | ((g6 &= 255) - 65 & 255) >>> 0 <= 191 ? (rC(), Q4()) : (bg(A8 - -64 | 0, 0, 293), C3[A8 + 56 | 0] = 121, C3[A8 + 57 | 0] = 33, C3[A8 + 58 | 0] = 126, C3[A8 + 59 | 0] = 19, C3[A8 + 60 | 0] = 25, C3[A8 + 61 | 0] = 205, C3[A8 + 62 | 0] = 224, C3[A8 + 63 | 0] = 91, C3[A8 + 48 | 0] = 107, C3[A8 + 49 | 0] = 189, C3[A8 + 50 | 0] = 65, C3[A8 + 51 | 0] = 251, C3[A8 + 52 | 0] = 171, C3[A8 + 53 | 0] = 217, C3[A8 + 54 | 0] = 131, C3[A8 + 55 | 0] = 31, C3[A8 + 40 | 0] = 31, C3[A8 + 41 | 0] = 108, C3[A8 + 42 | 0] = 62, C3[A8 + 43 | 0] = 43, C3[A8 + 44 | 0] = 140, C3[A8 + 45 | 0] = 104, C3[A8 + 46 | 0] = 5, C3[A8 + 47 | 0] = 155, C3[A8 + 32 | 0] = 209, C3[A8 + 33 | 0] = 130, C3[A8 + 34 | 0] = 230, C3[A8 + 35 | 0] = 173, C3[A8 + 36 | 0] = 127, C3[A8 + 37 | 0] = 82, C3[A8 + 38 | 0] = 14, C3[A8 + 39 | 0] = 81, C3[A8 + 24 | 0] = 241, C3[A8 + 25 | 0] = 54, C3[A8 + 26 | 0] = 29, C3[A8 + 27 | 0] = 95, C3[A8 + 28 | 0] = 58, C3[A8 + 29 | 0] = 245, C3[A8 + 30 | 0] = 79, C3[A8 + 31 | 0] = 165, C3[A8 + 16 | 0] = 43, C3[A8 + 17 | 0] = 248, C3[A8 + 18 | 0] = 148, C3[A8 + 19 | 0] = 254, C3[A8 + 20 | 0] = 114, C3[A8 + 21 | 0] = 243, C3[A8 + 22 | 0] = 110, C3[A8 + 23 | 0] = 60, C3[A8 + 8 | 0] = 59, C3[A8 + 9 | 0] = 167, C3[A8 + 10 | 0] = 202, C3[A8 + 11 | 0] = 132, C3[A8 + 12 | 0] = 133, C3[A8 + 13 | 0] = 174, C3[A8 + 14 | 0] = 103, C3[A8 + 15 | 0] = 187, B4 = -222443256 ^ (g6 << 8 | B4), C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, B4 = g6 >>> 24 ^ 1779033703, C3[A8 + 4 | 0] = B4, C3[A8 + 5 | 0] = B4 >>> 8, C3[A8 + 6 | 0] = B4 >>> 16, C3[A8 + 7 | 0] = B4 >>> 24, g6 = Ng(bg(i5, 0, 128), I7, g6), Ng(A8 + 96 | 0, g6, 128), I7 = 128 + (o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) | 0, C3[A8 + 352 | 0] = I7, C3[A8 + 353 | 0] = I7 >>> 8, C3[A8 + 354 | 0] = I7 >>> 16, C3[A8 + 355 | 0] = I7 >>> 24, XC(g6, 128), s3 = g6 + 128 | 0)) : (((I7 = 255 & B4) - 65 & 255) >>> 0 <= 191 && (rC(), Q4()), bg(A8 - -64 | 0, 0, 293), C3[A8 + 56 | 0] = 121, C3[A8 + 57 | 0] = 33, C3[A8 + 58 | 0] = 126, C3[A8 + 59 | 0] = 19, C3[A8 + 60 | 0] = 25, C3[A8 + 61 | 0] = 205, C3[A8 + 62 | 0] = 224, C3[A8 + 63 | 0] = 91, C3[A8 + 48 | 0] = 107, C3[A8 + 49 | 0] = 189, C3[A8 + 50 | 0] = 65, C3[A8 + 51 | 0] = 251, C3[A8 + 52 | 0] = 171, C3[A8 + 53 | 0] = 217, C3[A8 + 54 | 0] = 131, C3[A8 + 55 | 0] = 31, C3[A8 + 40 | 0] = 31, C3[A8 + 41 | 0] = 108, C3[A8 + 42 | 0] = 62, C3[A8 + 43 | 0] = 43, C3[A8 + 44 | 0] = 140, C3[A8 + 45 | 0] = 104, C3[A8 + 46 | 0] = 5, C3[A8 + 47 | 0] = 155, C3[A8 + 32 | 0] = 209, C3[A8 + 33 | 0] = 130, C3[A8 + 34 | 0] = 230, C3[A8 + 35 | 0] = 173, C3[A8 + 36 | 0] = 127, C3[A8 + 37 | 0] = 82, C3[A8 + 38 | 0] = 14, C3[A8 + 39 | 0] = 81, C3[A8 + 24 | 0] = 241, C3[A8 + 25 | 0] = 54, C3[A8 + 26 | 0] = 29, C3[A8 + 27 | 0] = 95, C3[A8 + 28 | 0] = 58, C3[A8 + 29 | 0] = 245, C3[A8 + 30 | 0] = 79, C3[A8 + 31 | 0] = 165, C3[A8 + 16 | 0] = 43, C3[A8 + 17 | 0] = 248, C3[A8 + 18 | 0] = 148, C3[A8 + 19 | 0] = 254, C3[A8 + 20 | 0] = 114, C3[A8 + 21 | 0] = 243, C3[A8 + 22 | 0] = 110, C3[A8 + 23 | 0] = 60, C3[A8 + 8 | 0] = 59, C3[A8 + 9 | 0] = 167, C3[A8 + 10 | 0] = 202, C3[A8 + 11 | 0] = 132, C3[A8 + 12 | 0] = 133, C3[A8 + 13 | 0] = 174, C3[A8 + 14 | 0] = 103, C3[A8 + 15 | 0] = 187, I7 ^= -222443256, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24, C3[A8 + 4 | 0] = 103, C3[A8 + 5 | 0] = 230, C3[A8 + 6 | 0] = 9, C3[A8 + 7 | 0] = 106), i5 = 0), 0 | i5;
                    }
                    function yA(A8, I7, g6, B4) {
                      A8 |= 0, I7 |= 0, g6 |= 0;
                      var Q5 = 0, i5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0;
                      for ((B4 |= 0) ? (i5 = o3[B4 + 8 | 0] | o3[B4 + 9 | 0] << 8 | o3[B4 + 10 | 0] << 16 | o3[B4 + 11 | 0] << 24, E4 = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24, Q5 = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, t4 = o3[B4 + 12 | 0] | o3[B4 + 13 | 0] << 8 | o3[B4 + 14 | 0] << 16 | o3[B4 + 15 | 0] << 24) : (i5 = 2036477234, E4 = 857760878, Q5 = 1634760805, t4 = 1797285236), a4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, e6 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, _4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, y4 = o3[g6 + 28 | 0] | o3[g6 + 29 | 0] << 8 | o3[g6 + 30 | 0] << 16 | o3[g6 + 31 | 0] << 24, c4 = o3[g6 + 24 | 0] | o3[g6 + 25 | 0] << 8 | o3[g6 + 26 | 0] << 16 | o3[g6 + 27 | 0] << 24, w4 = o3[g6 + 20 | 0] | o3[g6 + 21 | 0] << 8 | o3[g6 + 22 | 0] << 16 | o3[g6 + 23 | 0] << 24, s4 = o3[g6 + 16 | 0] | o3[g6 + 17 | 0] << 8 | o3[g6 + 18 | 0] << 16 | o3[g6 + 19 | 0] << 24, B4 = o3[g6 + 12 | 0] | o3[g6 + 13 | 0] << 8 | o3[g6 + 14 | 0] << 16 | o3[g6 + 15 | 0] << 24, h4 = o3[g6 + 8 | 0] | o3[g6 + 9 | 0] << 8 | o3[g6 + 10 | 0] << 16 | o3[g6 + 11 | 0] << 24, D4 = o3[g6 + 4 | 0] | o3[g6 + 5 | 0] << 8 | o3[g6 + 6 | 0] << 16 | o3[g6 + 7 | 0] << 24, I7 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, g6 = o3[0 | g6] | o3[g6 + 1 | 0] << 8 | o3[g6 + 2 | 0] << 16 | o3[g6 + 3 | 0] << 24; r4 = g6, g6 = Lg((f4 = I7) ^ (I7 = g6 + Q5 | 0), 16), r4 = s4 = Lg(r4 ^ (Q5 = g6 + s4 | 0), 12), p4 = Lg((f4 = I7 + s4 | 0) ^ g6, 8), I7 = Lg(r4 ^ (s4 = p4 + Q5 | 0), 7), a4 = Lg((g6 = B4 + t4 | 0) ^ a4, 16), B4 = Lg((y4 = a4 + y4 | 0) ^ B4, 12), r4 = h4, i5 = Lg((t4 = i5 + h4 | 0) ^ e6, 16), Q5 = Lg(r4 ^ (h4 = i5 + c4 | 0), 12), c4 = Lg((c4 = i5) ^ (i5 = Q5 + t4 | 0), 8), g6 = Lg(c4 ^ (t4 = (n5 = g6 + B4 | 0) + I7 | 0), 16), e6 = Lg((E4 = E4 + D4 | 0) ^ _4, 16), D4 = Lg((_4 = e6 + w4 | 0) ^ D4, 12), r4 = I7, I7 = Lg((E4 = D4 + E4 | 0) ^ e6, 8), r4 = Lg(r4 ^ (_4 = (k4 = I7 + _4 | 0) + g6 | 0), 12), e6 = Lg(g6 ^ (t4 = r4 + t4 | 0), 8), g6 = Lg((w4 = e6 + _4 | 0) ^ r4, 7), a4 = Lg(a4 ^ n5, 8), B4 = Lg((y4 = a4 + y4 | 0) ^ B4, 7), _4 = Lg((i5 = B4 + i5 | 0) ^ I7, 16), B4 = Lg((I7 = _4 + s4 | 0) ^ B4, 12), _4 = Lg(_4 ^ (i5 = B4 + i5 | 0), 8), B4 = Lg((s4 = I7 + _4 | 0) ^ B4, 7), I7 = Lg((c4 = c4 + h4 | 0) ^ Q5, 7), h4 = Lg((E4 = I7 + E4 | 0) ^ p4, 16), p4 = Lg(I7 ^ (Q5 = h4 + y4 | 0), 12), I7 = Lg(h4 ^ (E4 = p4 + E4 | 0), 8), h4 = Lg((y4 = Q5 + I7 | 0) ^ p4, 7), r4 = c4, c4 = a4, Q5 = Lg(D4 ^ k4, 7), c4 = Lg(c4 ^ (a4 = Q5 + f4 | 0), 16), f4 = Lg(Q5 ^ (D4 = r4 + c4 | 0), 12), a4 = Lg(c4 ^ (Q5 = f4 + a4 | 0), 8), D4 = Lg((c4 = D4 + a4 | 0) ^ f4, 7), 10 != (0 | (F4 = F4 + 1 | 0)); ) ;
                      return C3[0 | A8] = Q5, C3[A8 + 1 | 0] = Q5 >>> 8, C3[A8 + 2 | 0] = Q5 >>> 16, C3[A8 + 3 | 0] = Q5 >>> 24, C3[A8 + 28 | 0] = a4, C3[A8 + 29 | 0] = a4 >>> 8, C3[A8 + 30 | 0] = a4 >>> 16, C3[A8 + 31 | 0] = a4 >>> 24, C3[A8 + 24 | 0] = e6, C3[A8 + 25 | 0] = e6 >>> 8, C3[A8 + 26 | 0] = e6 >>> 16, C3[A8 + 27 | 0] = e6 >>> 24, C3[A8 + 20 | 0] = _4, C3[A8 + 21 | 0] = _4 >>> 8, C3[A8 + 22 | 0] = _4 >>> 16, C3[A8 + 23 | 0] = _4 >>> 24, C3[A8 + 16 | 0] = I7, C3[A8 + 17 | 0] = I7 >>> 8, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 19 | 0] = I7 >>> 24, C3[A8 + 12 | 0] = t4, C3[A8 + 13 | 0] = t4 >>> 8, C3[A8 + 14 | 0] = t4 >>> 16, C3[A8 + 15 | 0] = t4 >>> 24, C3[A8 + 8 | 0] = i5, C3[A8 + 9 | 0] = i5 >>> 8, C3[A8 + 10 | 0] = i5 >>> 16, C3[A8 + 11 | 0] = i5 >>> 24, C3[A8 + 4 | 0] = E4, C3[A8 + 5 | 0] = E4 >>> 8, C3[A8 + 6 | 0] = E4 >>> 16, C3[A8 + 7 | 0] = E4 >>> 24, 0;
                    }
                    function sA(A8, I7, g6) {
                      var C4, B4, Q5, o4, E4, a4, _4, c4, t4, r4, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, H4 = 0, Y4 = 0;
                      y4 = i4[I7 + 4 >> 2], e6 = i4[I7 + 44 >> 2], h4 = i4[I7 + 8 >> 2], D4 = i4[I7 + 48 >> 2], f4 = i4[I7 + 12 >> 2], p4 = i4[I7 + 52 >> 2], w4 = i4[I7 + 16 >> 2], n5 = i4[I7 + 56 >> 2], k4 = i4[I7 + 20 >> 2], F4 = i4[I7 + 60 >> 2], S4 = i4[I7 + 24 >> 2], N4 = i4[(s4 = I7 - -64 | 0) >> 2], G4 = i4[I7 + 28 >> 2], M4 = i4[I7 + 68 >> 2], K4 = i4[I7 + 32 >> 2], U4 = i4[I7 + 72 >> 2], H4 = i4[I7 + 36 >> 2], Y4 = i4[I7 + 76 >> 2], i4[A8 >> 2] = i4[I7 >> 2] + i4[I7 + 40 >> 2], i4[A8 + 36 >> 2] = H4 + Y4, i4[A8 + 32 >> 2] = K4 + U4, i4[A8 + 28 >> 2] = G4 + M4, i4[A8 + 24 >> 2] = S4 + N4, i4[A8 + 20 >> 2] = k4 + F4, i4[A8 + 16 >> 2] = w4 + n5, i4[A8 + 12 >> 2] = f4 + p4, i4[A8 + 8 >> 2] = h4 + D4, i4[A8 + 4 >> 2] = e6 + y4, e6 = i4[I7 + 4 >> 2], h4 = i4[I7 + 44 >> 2], D4 = i4[I7 + 8 >> 2], f4 = i4[I7 + 48 >> 2], p4 = i4[I7 + 12 >> 2], w4 = i4[I7 + 52 >> 2], n5 = i4[I7 + 16 >> 2], k4 = i4[I7 + 56 >> 2], F4 = i4[I7 + 20 >> 2], S4 = i4[I7 + 60 >> 2], N4 = i4[I7 + 24 >> 2], s4 = i4[s4 >> 2], y4 = i4[I7 + 28 >> 2], G4 = i4[I7 + 68 >> 2], M4 = i4[I7 + 32 >> 2], K4 = i4[I7 + 72 >> 2], U4 = i4[I7 >> 2], H4 = i4[I7 + 40 >> 2], i4[A8 + 76 >> 2] = i4[I7 + 76 >> 2] - i4[I7 + 36 >> 2], i4[A8 + 72 >> 2] = K4 - M4, i4[A8 + 68 >> 2] = G4 - y4, i4[(y4 = A8 - -64 | 0) >> 2] = s4 - N4, i4[A8 + 60 >> 2] = S4 - F4, i4[A8 + 56 >> 2] = k4 - n5, i4[A8 + 52 >> 2] = w4 - p4, i4[A8 + 48 >> 2] = f4 - D4, i4[A8 + 44 >> 2] = h4 - e6, i4[A8 + 40 >> 2] = H4 - U4, b4(A8 + 80 | 0, A8, g6), b4(e6 = A8 + 40 | 0, e6, g6 + 40 | 0), b4(A8 + 120 | 0, g6 + 120 | 0, I7 + 120 | 0), b4(A8, I7 + 80 | 0, g6 + 80 | 0), H4 = i4[A8 + 4 >> 2], Y4 = i4[A8 + 8 >> 2], Q5 = i4[A8 + 12 >> 2], o4 = i4[A8 + 16 >> 2], E4 = i4[A8 + 20 >> 2], a4 = i4[A8 + 24 >> 2], _4 = i4[A8 + 28 >> 2], c4 = i4[A8 + 32 >> 2], t4 = i4[A8 + 36 >> 2], I7 = i4[A8 + 44 >> 2], g6 = i4[A8 + 84 >> 2], e6 = i4[A8 + 48 >> 2], h4 = i4[A8 + 88 >> 2], D4 = i4[A8 + 52 >> 2], f4 = i4[A8 + 92 >> 2], p4 = i4[A8 + 56 >> 2], w4 = i4[A8 + 96 >> 2], n5 = i4[A8 + 60 >> 2], k4 = i4[A8 + 100 >> 2], F4 = i4[y4 >> 2], S4 = i4[A8 + 104 >> 2], s4 = i4[A8 + 68 >> 2], N4 = i4[A8 + 108 >> 2], G4 = i4[A8 + 72 >> 2], M4 = i4[A8 + 112 >> 2], r4 = i4[A8 >> 2], K4 = i4[A8 + 40 >> 2], U4 = i4[A8 + 80 >> 2], C4 = i4[A8 + 76 >> 2], B4 = i4[A8 + 116 >> 2], i4[A8 + 76 >> 2] = C4 + B4, i4[A8 + 72 >> 2] = G4 + M4, i4[A8 + 68 >> 2] = s4 + N4, i4[y4 >> 2] = F4 + S4, i4[A8 + 60 >> 2] = n5 + k4, i4[A8 + 56 >> 2] = p4 + w4, i4[A8 + 52 >> 2] = D4 + f4, i4[A8 + 48 >> 2] = e6 + h4, i4[A8 + 44 >> 2] = I7 + g6, i4[A8 + 40 >> 2] = K4 + U4, i4[A8 + 36 >> 2] = B4 - C4, i4[A8 + 32 >> 2] = M4 - G4, i4[A8 + 28 >> 2] = N4 - s4, i4[A8 + 24 >> 2] = S4 - F4, i4[A8 + 20 >> 2] = k4 - n5, i4[A8 + 16 >> 2] = w4 - p4, i4[A8 + 12 >> 2] = f4 - D4, i4[A8 + 8 >> 2] = h4 - e6, i4[A8 + 4 >> 2] = g6 - I7, i4[A8 >> 2] = U4 - K4, I7 = t4 << 1, g6 = i4[A8 + 156 >> 2], i4[A8 + 156 >> 2] = I7 - g6, y4 = c4 << 1, e6 = i4[A8 + 152 >> 2], i4[A8 + 152 >> 2] = y4 - e6, h4 = _4 << 1, D4 = i4[A8 + 148 >> 2], i4[A8 + 148 >> 2] = h4 - D4, f4 = a4 << 1, p4 = i4[A8 + 144 >> 2], i4[A8 + 144 >> 2] = f4 - p4, w4 = E4 << 1, n5 = i4[A8 + 140 >> 2], i4[A8 + 140 >> 2] = w4 - n5, k4 = o4 << 1, F4 = i4[A8 + 136 >> 2], i4[A8 + 136 >> 2] = k4 - F4, S4 = Q5 << 1, s4 = i4[A8 + 132 >> 2], i4[A8 + 132 >> 2] = S4 - s4, N4 = Y4 << 1, G4 = i4[A8 + 128 >> 2], i4[A8 + 128 >> 2] = N4 - G4, M4 = H4 << 1, K4 = i4[A8 + 124 >> 2], i4[A8 + 124 >> 2] = M4 - K4, U4 = r4 << 1, H4 = i4[A8 + 120 >> 2], i4[A8 + 120 >> 2] = U4 - H4, i4[A8 + 112 >> 2] = e6 + y4, i4[A8 + 108 >> 2] = h4 + D4, i4[A8 + 104 >> 2] = f4 + p4, i4[A8 + 100 >> 2] = w4 + n5, i4[A8 + 96 >> 2] = k4 + F4, i4[A8 + 92 >> 2] = S4 + s4, i4[A8 + 88 >> 2] = N4 + G4, i4[A8 + 84 >> 2] = M4 + K4, i4[A8 + 80 >> 2] = U4 + H4, i4[A8 + 116 >> 2] = I7 + g6;
                    }
                    function hA(A8, I7, g6) {
                      var C4, B4, Q5, o4, E4, a4, _4, c4, t4, r4, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, H4 = 0, Y4 = 0;
                      y4 = i4[I7 + 4 >> 2], e6 = i4[I7 + 44 >> 2], h4 = i4[I7 + 8 >> 2], D4 = i4[I7 + 48 >> 2], f4 = i4[I7 + 12 >> 2], p4 = i4[I7 + 52 >> 2], w4 = i4[I7 + 16 >> 2], n5 = i4[I7 + 56 >> 2], k4 = i4[I7 + 20 >> 2], F4 = i4[I7 + 60 >> 2], S4 = i4[I7 + 24 >> 2], N4 = i4[(s4 = I7 - -64 | 0) >> 2], G4 = i4[I7 + 28 >> 2], M4 = i4[I7 + 68 >> 2], K4 = i4[I7 + 32 >> 2], U4 = i4[I7 + 72 >> 2], H4 = i4[I7 + 36 >> 2], Y4 = i4[I7 + 76 >> 2], i4[A8 >> 2] = i4[I7 >> 2] + i4[I7 + 40 >> 2], i4[A8 + 36 >> 2] = H4 + Y4, i4[A8 + 32 >> 2] = K4 + U4, i4[A8 + 28 >> 2] = G4 + M4, i4[A8 + 24 >> 2] = S4 + N4, i4[A8 + 20 >> 2] = k4 + F4, i4[A8 + 16 >> 2] = w4 + n5, i4[A8 + 12 >> 2] = f4 + p4, i4[A8 + 8 >> 2] = h4 + D4, i4[A8 + 4 >> 2] = e6 + y4, e6 = i4[I7 + 4 >> 2], h4 = i4[I7 + 44 >> 2], D4 = i4[I7 + 8 >> 2], f4 = i4[I7 + 48 >> 2], p4 = i4[I7 + 12 >> 2], w4 = i4[I7 + 52 >> 2], n5 = i4[I7 + 16 >> 2], k4 = i4[I7 + 56 >> 2], F4 = i4[I7 + 20 >> 2], S4 = i4[I7 + 60 >> 2], N4 = i4[I7 + 24 >> 2], s4 = i4[s4 >> 2], y4 = i4[I7 + 28 >> 2], G4 = i4[I7 + 68 >> 2], M4 = i4[I7 + 32 >> 2], K4 = i4[I7 + 72 >> 2], U4 = i4[I7 >> 2], H4 = i4[I7 + 40 >> 2], i4[A8 + 76 >> 2] = i4[I7 + 76 >> 2] - i4[I7 + 36 >> 2], i4[A8 + 72 >> 2] = K4 - M4, i4[A8 + 68 >> 2] = G4 - y4, i4[(y4 = A8 - -64 | 0) >> 2] = s4 - N4, i4[A8 + 60 >> 2] = S4 - F4, i4[A8 + 56 >> 2] = k4 - n5, i4[A8 + 52 >> 2] = w4 - p4, i4[A8 + 48 >> 2] = f4 - D4, i4[A8 + 44 >> 2] = h4 - e6, i4[A8 + 40 >> 2] = H4 - U4, b4(A8 + 80 | 0, A8, g6 + 40 | 0), b4(e6 = A8 + 40 | 0, e6, g6), b4(A8 + 120 | 0, g6 + 120 | 0, I7 + 120 | 0), b4(A8, I7 + 80 | 0, g6 + 80 | 0), H4 = i4[A8 + 4 >> 2], Y4 = i4[A8 + 8 >> 2], Q5 = i4[A8 + 12 >> 2], o4 = i4[A8 + 16 >> 2], E4 = i4[A8 + 20 >> 2], a4 = i4[A8 + 24 >> 2], _4 = i4[A8 + 28 >> 2], c4 = i4[A8 + 32 >> 2], t4 = i4[A8 + 36 >> 2], I7 = i4[A8 + 44 >> 2], g6 = i4[A8 + 84 >> 2], e6 = i4[A8 + 48 >> 2], h4 = i4[A8 + 88 >> 2], D4 = i4[A8 + 52 >> 2], f4 = i4[A8 + 92 >> 2], p4 = i4[A8 + 56 >> 2], w4 = i4[A8 + 96 >> 2], n5 = i4[A8 + 60 >> 2], k4 = i4[A8 + 100 >> 2], F4 = i4[y4 >> 2], S4 = i4[A8 + 104 >> 2], s4 = i4[A8 + 68 >> 2], N4 = i4[A8 + 108 >> 2], G4 = i4[A8 + 72 >> 2], M4 = i4[A8 + 112 >> 2], r4 = i4[A8 >> 2], K4 = i4[A8 + 40 >> 2], U4 = i4[A8 + 80 >> 2], C4 = i4[A8 + 76 >> 2], B4 = i4[A8 + 116 >> 2], i4[A8 + 76 >> 2] = C4 + B4, i4[A8 + 72 >> 2] = G4 + M4, i4[A8 + 68 >> 2] = s4 + N4, i4[y4 >> 2] = F4 + S4, i4[A8 + 60 >> 2] = n5 + k4, i4[A8 + 56 >> 2] = p4 + w4, i4[A8 + 52 >> 2] = D4 + f4, i4[A8 + 48 >> 2] = e6 + h4, i4[A8 + 44 >> 2] = I7 + g6, i4[A8 + 40 >> 2] = K4 + U4, i4[A8 + 36 >> 2] = B4 - C4, i4[A8 + 32 >> 2] = M4 - G4, i4[A8 + 28 >> 2] = N4 - s4, i4[A8 + 24 >> 2] = S4 - F4, i4[A8 + 20 >> 2] = k4 - n5, i4[A8 + 16 >> 2] = w4 - p4, i4[A8 + 12 >> 2] = f4 - D4, i4[A8 + 8 >> 2] = h4 - e6, i4[A8 + 4 >> 2] = g6 - I7, i4[A8 >> 2] = U4 - K4, I7 = i4[A8 + 156 >> 2], g6 = t4 << 1, i4[A8 + 156 >> 2] = I7 + g6, y4 = i4[A8 + 152 >> 2], e6 = c4 << 1, i4[A8 + 152 >> 2] = y4 + e6, h4 = i4[A8 + 148 >> 2], D4 = _4 << 1, i4[A8 + 148 >> 2] = h4 + D4, f4 = i4[A8 + 144 >> 2], p4 = a4 << 1, i4[A8 + 144 >> 2] = f4 + p4, w4 = i4[A8 + 140 >> 2], n5 = E4 << 1, i4[A8 + 140 >> 2] = w4 + n5, k4 = i4[A8 + 136 >> 2], F4 = o4 << 1, i4[A8 + 136 >> 2] = k4 + F4, S4 = i4[A8 + 132 >> 2], s4 = Q5 << 1, i4[A8 + 132 >> 2] = S4 + s4, N4 = i4[A8 + 128 >> 2], G4 = Y4 << 1, i4[A8 + 128 >> 2] = N4 + G4, M4 = i4[A8 + 124 >> 2], K4 = H4 << 1, i4[A8 + 124 >> 2] = M4 + K4, U4 = i4[A8 + 120 >> 2], H4 = r4 << 1, i4[A8 + 120 >> 2] = U4 + H4, i4[A8 + 112 >> 2] = e6 - y4, i4[A8 + 108 >> 2] = D4 - h4, i4[A8 + 104 >> 2] = p4 - f4, i4[A8 + 100 >> 2] = n5 - w4, i4[A8 + 96 >> 2] = F4 - k4, i4[A8 + 92 >> 2] = s4 - S4, i4[A8 + 88 >> 2] = G4 - N4, i4[A8 + 84 >> 2] = K4 - M4, i4[A8 + 80 >> 2] = H4 - U4, i4[A8 + 116 >> 2] = g6 - I7;
                    }
                    function DA(A8, I7, g6) {
                      var C4, B4, Q5, o4, E4, a4, _4, c4, t4, r4, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, H4 = 0, Y4 = 0;
                      y4 = i4[I7 + 4 >> 2], e6 = i4[I7 + 44 >> 2], h4 = i4[I7 + 8 >> 2], D4 = i4[I7 + 48 >> 2], f4 = i4[I7 + 12 >> 2], p4 = i4[I7 + 52 >> 2], w4 = i4[I7 + 16 >> 2], n5 = i4[I7 + 56 >> 2], k4 = i4[I7 + 20 >> 2], F4 = i4[I7 + 60 >> 2], S4 = i4[I7 + 24 >> 2], N4 = i4[(s4 = I7 - -64 | 0) >> 2], G4 = i4[I7 + 28 >> 2], M4 = i4[I7 + 68 >> 2], K4 = i4[I7 + 32 >> 2], U4 = i4[I7 + 72 >> 2], H4 = i4[I7 + 36 >> 2], Y4 = i4[I7 + 76 >> 2], i4[A8 >> 2] = i4[I7 >> 2] + i4[I7 + 40 >> 2], i4[A8 + 36 >> 2] = H4 + Y4, i4[A8 + 32 >> 2] = K4 + U4, i4[A8 + 28 >> 2] = G4 + M4, i4[A8 + 24 >> 2] = S4 + N4, i4[A8 + 20 >> 2] = k4 + F4, i4[A8 + 16 >> 2] = w4 + n5, i4[A8 + 12 >> 2] = f4 + p4, i4[A8 + 8 >> 2] = h4 + D4, i4[A8 + 4 >> 2] = e6 + y4, e6 = i4[I7 + 4 >> 2], h4 = i4[I7 + 44 >> 2], D4 = i4[I7 + 8 >> 2], f4 = i4[I7 + 48 >> 2], p4 = i4[I7 + 12 >> 2], w4 = i4[I7 + 52 >> 2], n5 = i4[I7 + 16 >> 2], k4 = i4[I7 + 56 >> 2], F4 = i4[I7 + 20 >> 2], S4 = i4[I7 + 60 >> 2], N4 = i4[I7 + 24 >> 2], s4 = i4[s4 >> 2], y4 = i4[I7 + 28 >> 2], G4 = i4[I7 + 68 >> 2], M4 = i4[I7 + 32 >> 2], K4 = i4[I7 + 72 >> 2], U4 = i4[I7 >> 2], H4 = i4[I7 + 40 >> 2], i4[A8 + 76 >> 2] = i4[I7 + 76 >> 2] - i4[I7 + 36 >> 2], i4[A8 + 72 >> 2] = K4 - M4, i4[A8 + 68 >> 2] = G4 - y4, i4[(y4 = A8 - -64 | 0) >> 2] = s4 - N4, i4[A8 + 60 >> 2] = S4 - F4, i4[A8 + 56 >> 2] = k4 - n5, i4[A8 + 52 >> 2] = w4 - p4, i4[A8 + 48 >> 2] = f4 - D4, i4[A8 + 44 >> 2] = h4 - e6, i4[A8 + 40 >> 2] = H4 - U4, b4(A8 + 80 | 0, A8, g6), b4(e6 = A8 + 40 | 0, e6, g6 + 40 | 0), b4(A8 + 120 | 0, g6 + 80 | 0, I7 + 120 | 0), H4 = i4[I7 + 84 >> 2], Y4 = i4[I7 + 88 >> 2], Q5 = i4[I7 + 92 >> 2], o4 = i4[I7 + 96 >> 2], E4 = i4[I7 + 100 >> 2], a4 = i4[I7 + 104 >> 2], _4 = i4[I7 + 108 >> 2], c4 = i4[I7 + 112 >> 2], t4 = i4[I7 + 116 >> 2], g6 = i4[A8 + 44 >> 2], e6 = i4[A8 + 84 >> 2], h4 = i4[A8 + 48 >> 2], D4 = i4[A8 + 88 >> 2], f4 = i4[A8 + 52 >> 2], p4 = i4[A8 + 92 >> 2], w4 = i4[A8 + 56 >> 2], n5 = i4[A8 + 96 >> 2], k4 = i4[A8 + 60 >> 2], F4 = i4[A8 + 100 >> 2], S4 = i4[y4 >> 2], s4 = i4[A8 + 104 >> 2], N4 = i4[A8 + 68 >> 2], G4 = i4[A8 + 108 >> 2], M4 = i4[A8 + 72 >> 2], K4 = i4[A8 + 112 >> 2], r4 = i4[I7 + 80 >> 2], I7 = i4[A8 + 40 >> 2], U4 = i4[A8 + 80 >> 2], C4 = i4[A8 + 76 >> 2], B4 = i4[A8 + 116 >> 2], i4[A8 + 76 >> 2] = C4 + B4, i4[A8 + 72 >> 2] = M4 + K4, i4[A8 + 68 >> 2] = N4 + G4, i4[y4 >> 2] = S4 + s4, i4[A8 + 60 >> 2] = k4 + F4, i4[A8 + 56 >> 2] = w4 + n5, i4[A8 + 52 >> 2] = f4 + p4, i4[A8 + 48 >> 2] = h4 + D4, i4[A8 + 44 >> 2] = g6 + e6, i4[A8 + 40 >> 2] = I7 + U4, i4[A8 + 36 >> 2] = B4 - C4, i4[A8 + 32 >> 2] = K4 - M4, i4[A8 + 28 >> 2] = G4 - N4, i4[A8 + 24 >> 2] = s4 - S4, i4[A8 + 20 >> 2] = F4 - k4, i4[A8 + 16 >> 2] = n5 - w4, i4[A8 + 12 >> 2] = p4 - f4, i4[A8 + 8 >> 2] = D4 - h4, i4[A8 + 4 >> 2] = e6 - g6, i4[A8 >> 2] = U4 - I7, I7 = t4 << 1, g6 = i4[A8 + 156 >> 2], i4[A8 + 156 >> 2] = I7 - g6, y4 = c4 << 1, e6 = i4[A8 + 152 >> 2], i4[A8 + 152 >> 2] = y4 - e6, h4 = _4 << 1, D4 = i4[A8 + 148 >> 2], i4[A8 + 148 >> 2] = h4 - D4, f4 = a4 << 1, p4 = i4[A8 + 144 >> 2], i4[A8 + 144 >> 2] = f4 - p4, w4 = E4 << 1, n5 = i4[A8 + 140 >> 2], i4[A8 + 140 >> 2] = w4 - n5, k4 = o4 << 1, F4 = i4[A8 + 136 >> 2], i4[A8 + 136 >> 2] = k4 - F4, S4 = Q5 << 1, s4 = i4[A8 + 132 >> 2], i4[A8 + 132 >> 2] = S4 - s4, N4 = Y4 << 1, G4 = i4[A8 + 128 >> 2], i4[A8 + 128 >> 2] = N4 - G4, M4 = H4 << 1, K4 = i4[A8 + 124 >> 2], i4[A8 + 124 >> 2] = M4 - K4, U4 = r4 << 1, H4 = i4[A8 + 120 >> 2], i4[A8 + 120 >> 2] = U4 - H4, i4[A8 + 112 >> 2] = e6 + y4, i4[A8 + 108 >> 2] = h4 + D4, i4[A8 + 104 >> 2] = f4 + p4, i4[A8 + 100 >> 2] = w4 + n5, i4[A8 + 96 >> 2] = k4 + F4, i4[A8 + 92 >> 2] = S4 + s4, i4[A8 + 88 >> 2] = N4 + G4, i4[A8 + 84 >> 2] = M4 + K4, i4[A8 + 80 >> 2] = U4 + H4, i4[A8 + 116 >> 2] = I7 + g6;
                    }
                    function fA(A8, I7) {
                      var g6, C4, B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4, s4, h4, D4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0;
                      s4 = o3[I7 + 31 | 0], g6 = o3[I7 + 30 | 0], C4 = o3[I7 + 29 | 0], B4 = o3[I7 + 6 | 0], Q5 = o3[I7 + 5 | 0], E4 = o3[I7 + 4 | 0], a4 = o3[I7 + 9 | 0], _4 = o3[I7 + 8 | 0], c4 = o3[I7 + 7 | 0], t4 = o3[I7 + 12 | 0], K4 = o3[I7 + 11 | 0], U4 = o3[I7 + 10 | 0], r4 = o3[I7 + 15 | 0], b5 = o3[I7 + 14 | 0], e6 = o3[I7 + 13 | 0], S4 = o3[I7 + 28 | 0], M4 = o3[I7 + 27 | 0], N4 = o3[I7 + 26 | 0], F4 = o3[I7 + 25 | 0], n5 = o3[I7 + 24 | 0], w4 = o3[I7 + 23 | 0], h4 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, k4 = (p4 = o3[I7 + 21 | 0]) << 15, p4 = D4 = p4 >>> 17 | 0, G4 = k4, G4 |= (k4 = o3[I7 + 20 | 0]) << 7, k4 = (D4 = k4 >>> 25 | 0) | p4, p4 = (D4 = o3[I7 + 22 | 0]) >>> 9 | 0, D4 = D4 << 23 | G4, p4 |= k4, y4 = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, I7 = 0, k4 = D4, D4 = (33554431 & (I7 = (G4 = y4 + 16777216 | 0) >>> 0 < 16777216 ? 1 : I7)) << 7 | G4 >>> 25, I7 = (I7 >>> 25 | 0) + p4 | 0, D4 = (p4 = k4 = k4 + D4 | 0) >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7, I7 = (k4 = p4 + 33554432 | 0) >>> 0 < 33554432 ? D4 + 1 | 0 : D4, i4[A8 + 24 >> 2] = p4 - (-67108864 & k4), D4 = (p4 = w4 >>> 27 | 0) | n5 >>> 19 | F4 >>> 11, p4 = w4 = (n5 = F4 << 21 | (w4 = n5 << 13 | w4 << 5)) + (p4 = (67108863 & (p4 = I7)) << 6 | k4 >>> 26) | 0, I7 = D4, D4 = (w4 = n5 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, i4[A8 + 28 >> 2] = p4 - (1040187392 & w4), p4 = (D4 = (I7 = D4) >>> 25 | 0) + (p4 = M4 >>> 20 | N4 >>> 28 | S4 >>> 12) | 0, I7 = p4 = (D4 = w4 = (I7 = (33554431 & I7) << 7 | w4 >>> 25) + (M4 << 12 | N4 << 4 | S4 << 20) | 0) >>> 0 < I7 >>> 0 ? p4 + 1 | 0 : p4, w4 = (S4 = D4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, i4[A8 + 32 >> 2] = D4 - (-67108864 & S4), p4 = t4 >>> 13 | (D4 = K4 >>> 21 | U4 >>> 29), I7 = (p4 = (M4 = 16777216 + (K4 = K4 << 11 | U4 << 3 | t4 << 19) | 0) >>> 0 < 16777216 ? p4 + 1 | 0 : p4) >>> 25 | 0, p4 = (D4 = n5 = b5 << 10 | e6 << 2 | r4 << 18) + (n5 = (33554431 & p4) << 7 | M4 >>> 25) | 0, D4 = I7 + (F4 = b5 >>> 22 | e6 >>> 30 | r4 >>> 14) | 0, I7 = D4 = p4 >>> 0 < n5 >>> 0 ? D4 + 1 | 0 : D4, n5 = ((67108863 & (I7 = (n5 = p4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | (D4 = n5) >>> 26) + (N4 = y4 - (-33554432 & G4) | 0) | 0, i4[A8 + 20 >> 2] = n5, i4[A8 + 16 >> 2] = p4 - (-67108864 & D4), D4 = Q5 >>> 18 | E4 >>> 26 | B4 >>> 10, p4 = (D4 = (N4 = 16777216 + (U4 = Q5 << 14 | E4 << 6 | B4 << 22) | 0) >>> 0 < 16777216 ? D4 + 1 | 0 : D4) >>> 25 | 0, D4 = (I7 = n5 = _4 << 13 | c4 << 5 | a4 << 21) + (n5 = (33554431 & D4) << 7 | N4 >>> 25) | 0, I7 = p4 + (F4 = _4 >>> 19 | c4 >>> 27 | a4 >>> 11) | 0, I7 = D4 >>> 0 < n5 >>> 0 ? I7 + 1 | 0 : I7, p4 = (F4 = D4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, i4[A8 + 8 >> 2] = D4 - (-67108864 & F4), S4 = (w4 = (67108863 & w4) << 6 | S4 >>> 26) + (b5 = s4 << 18 & 33292288 | g6 << 10 | C4 << 2) | 0, I7 = D4 = g6 >>> 22 | C4 >>> 30, D4 = (w4 = b5 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, i4[A8 + 36 >> 2] = S4 - (33554432 & w4), p4 = K4 + ((67108863 & p4) << 6 | F4 >>> 26) | 0, i4[A8 + 12 >> 2] = p4 - (234881024 & M4), n5 = U4 - (2113929216 & N4) | 0, p4 = Ig((33554431 & (I7 = D4)) << 7 | w4 >>> 25, D4 = I7 >>> 25 | 0, 19, 0), I7 = f3, p4 = (D4 = p4 + h4 | 0) >>> 0 < p4 >>> 0 ? I7 + 1 | 0 : I7, w4 = ((67108863 & (p4 = (I7 = D4 + 33554432 | 0) >>> 0 < 33554432 ? p4 + 1 | 0 : p4)) << 6 | I7 >>> 26) + n5 | 0, i4[A8 + 4 >> 2] = w4, i4[A8 >> 2] = D4 - (-67108864 & I7);
                    }
                    function pA(A8, I7, g6, B4, E4, a4, _4, c4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, E4 |= 0, a4 |= 0, _4 |= 0;
                      var t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, f4 = 0;
                      if (1 == (-7 & (c4 |= 0))) {
                        A: {
                          I: {
                            g: {
                              C: {
                                B: {
                                  Q: {
                                    i: {
                                      if (B4) {
                                        o: {
                                          E: {
                                            if (c4 >>> 0 <= 3) {
                                              for (; ; ) {
                                                y4 = r4;
                                                a: {
                                                  _: {
                                                    c: {
                                                      t: {
                                                        for (; ; ) {
                                                          if (t4 = (t4 = (e6 = C3[g6 + y4 | 0]) - 65 | 0) & (~(90 - e6) & ~t4) >>> 8 & 255 | e6 + 4 & (~(e6 + 65488) & ~(57 - e6)) >>> 8 & 255 | e6 + 185 & (~(e6 + 65439) & ~(122 - e6)) >>> 8 & 255 | ~(1 + (16336 ^ e6)) >>> 8 & 63 | ~(1 + (16340 ^ e6)) >>> 8 & 62, 255 != (0 | (t4 |= (t4 - 1 & 1 + (65470 ^ e6)) >>> 8 & 255))) break t;
                                                          if (t4 = 0, !E4) break o;
                                                          if (!kI(E4, e6)) break;
                                                          if ((y4 = y4 + 1 | 0) >>> 0 >= B4 >>> 0) break c;
                                                        }
                                                        r4 = y4;
                                                        break o;
                                                      }
                                                      if (D4 = t4 + (D4 << 6) | 0, s4 >>> 0 > 1) break _;
                                                      s4 = s4 + 6 | 0;
                                                      break a;
                                                    }
                                                    r4 = (A8 = r4 + 1 | 0) >>> 0 < B4 >>> 0 ? B4 : A8;
                                                    break o;
                                                  }
                                                  if (s4 = s4 - 2 | 0, I7 >>> 0 <= h4 >>> 0) break E;
                                                  C3[A8 + h4 | 0] = D4 >>> s4, h4 = h4 + 1 | 0;
                                                }
                                                if (t4 = 0, !((r4 = y4 + 1 | 0) >>> 0 < B4 >>> 0)) break;
                                              }
                                              break o;
                                            }
                                            for (; ; ) {
                                              a: {
                                                if (t4 = (t4 = (e6 = C3[g6 + y4 | 0]) - 65 | 0) & (~(90 - e6) & ~t4) >>> 8 & 255 | e6 + 4 & (~(e6 + 65488) & ~(57 - e6)) >>> 8 & 255 | e6 + 185 & (~(e6 + 65439) & ~(122 - e6)) >>> 8 & 255 | ~(1 + (16288 ^ e6)) >>> 8 & 63 | ~(1 + (16338 ^ e6)) >>> 8 & 62, 255 == (0 | (t4 |= (t4 - 1 & 1 + (65470 ^ e6)) >>> 8 & 255))) {
                                                  if (t4 = 0, !E4) break o;
                                                  if (kI(E4, e6)) {
                                                    if ((y4 = y4 + 1 | 0) >>> 0 >= B4 >>> 0) break a;
                                                    continue;
                                                  }
                                                  r4 = y4;
                                                  break o;
                                                }
                                                if (D4 = t4 + (D4 << 6) | 0, s4 >>> 0 < 2) s4 = s4 + 6 | 0;
                                                else {
                                                  if (s4 = s4 - 2 | 0, I7 >>> 0 <= h4 >>> 0) break E;
                                                  C3[A8 + h4 | 0] = D4 >>> s4, h4 = h4 + 1 | 0;
                                                }
                                                if (t4 = 0, (r4 = y4 + 1 | 0) >>> 0 >= B4 >>> 0) break o;
                                                y4 = r4;
                                                continue;
                                              }
                                              break;
                                            }
                                            r4 = (A8 = r4 + 1 | 0) >>> 0 < B4 >>> 0 ? B4 : A8;
                                            break o;
                                          }
                                          r4 = y4, i4[9404] = 68, t4 = 1;
                                        }
                                        if (s4 >>> 0 > 4) break i;
                                        A8 = r4;
                                      } else A8 = 0;
                                      if (I7 = -1, t4) {
                                        r4 = A8;
                                        break A;
                                      }
                                      if (~(-1 << s4) & D4) {
                                        r4 = A8;
                                        break A;
                                      }
                                      if (2 & c4) {
                                        c4 = A8;
                                        break B;
                                      }
                                      if (s4 >>> 0 < 2) {
                                        c4 = A8;
                                        break B;
                                      }
                                      if (r4 = A8 >>> 0 > B4 >>> 0 ? A8 : B4, y4 = s4 >>> 1 | 0, !E4) break Q;
                                      for (c4 = A8; ; ) {
                                        if ((0 | c4) == (0 | r4)) {
                                          t4 = 68;
                                          break C;
                                        }
                                        if (61 != (0 | (A8 = C3[g6 + c4 | 0]))) {
                                          if (!kI(E4, A8)) {
                                            t4 = 28, r4 = c4;
                                            break C;
                                          }
                                        } else y4 = y4 - 1 | 0;
                                        if (c4 = c4 + 1 | 0, !y4) break;
                                      }
                                      break B;
                                    }
                                    I7 = -1;
                                    break A;
                                  }
                                  if (t4 = 68, A8 >>> 0 >= B4 >>> 0) break C;
                                  if (61 != o3[A8 + g6 | 0]) {
                                    r4 = A8, t4 = 28;
                                    break C;
                                  }
                                  if (c4 = A8 + y4 | 0, 1 != (0 | y4)) {
                                    if ((0 | (s4 = A8 + 1 | 0)) == (0 | r4)) break C;
                                    if (61 != o3[g6 + s4 | 0]) {
                                      r4 = s4, t4 = 28;
                                      break C;
                                    }
                                    if (2 != (0 | y4)) {
                                      if ((0 | (A8 = A8 + 2 | 0)) == (0 | r4)) break C;
                                      if (t4 = 28, r4 = A8, 61 != o3[A8 + g6 | 0]) break C;
                                    }
                                  }
                                }
                                if (I7 = 0, E4) break g;
                                break I;
                              }
                              i4[9404] = t4;
                              break A;
                            }
                            if (!(B4 >>> 0 <= c4 >>> 0)) {
                              for (; ; ) {
                                if (!kI(E4, C3[g6 + c4 | 0])) break I;
                                if ((0 | (c4 = c4 + 1 | 0)) == (0 | B4)) break;
                              }
                              c4 = B4;
                            }
                          }
                          r4 = c4, f4 = h4;
                        }
                        return _4 ? i4[_4 >> 2] = g6 + r4 : (0 | B4) != (0 | r4) && (i4[9404] = 28, I7 = -1), a4 && (i4[a4 >> 2] = f4), 0 | I7;
                      }
                      rC(), Q4();
                    }
                    function wA(A8, I7, g6, B4) {
                      A8 |= 0, I7 |= 0, g6 |= 0;
                      var Q5 = 0, i5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0;
                      for ((B4 |= 0) ? (Q5 = o3[B4 + 12 | 0] | o3[B4 + 13 | 0] << 8 | o3[B4 + 14 | 0] << 16 | o3[B4 + 15 | 0] << 24, _4 = o3[B4 + 8 | 0] | o3[B4 + 9 | 0] << 8 | o3[B4 + 10 | 0] << 16 | o3[B4 + 11 | 0] << 24, c4 = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24, B4 = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24) : (Q5 = 1797285236, _4 = 2036477234, c4 = 857760878, B4 = 1634760805), i5 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, a4 = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, E4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, f4 = o3[g6 + 28 | 0] | o3[g6 + 29 | 0] << 8 | o3[g6 + 30 | 0] << 16 | o3[g6 + 31 | 0] << 24, D4 = o3[g6 + 24 | 0] | o3[g6 + 25 | 0] << 8 | o3[g6 + 26 | 0] << 16 | o3[g6 + 27 | 0] << 24, p4 = 20, s4 = o3[g6 + 20 | 0] | o3[g6 + 21 | 0] << 8 | o3[g6 + 22 | 0] << 16 | o3[g6 + 23 | 0] << 24, h4 = o3[g6 + 16 | 0] | o3[g6 + 17 | 0] << 8 | o3[g6 + 18 | 0] << 16 | o3[g6 + 19 | 0] << 24, r4 = o3[g6 + 12 | 0] | o3[g6 + 13 | 0] << 8 | o3[g6 + 14 | 0] << 16 | o3[g6 + 15 | 0] << 24, e6 = o3[g6 + 8 | 0] | o3[g6 + 9 | 0] << 8 | o3[g6 + 10 | 0] << 16 | o3[g6 + 11 | 0] << 24, y4 = o3[g6 + 4 | 0] | o3[g6 + 5 | 0] << 8 | o3[g6 + 6 | 0] << 16 | o3[g6 + 7 | 0] << 24, I7 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, g6 = o3[0 | g6] | o3[g6 + 1 | 0] << 8 | o3[g6 + 2 | 0] << 16 | o3[g6 + 3 | 0] << 24; t4 = Lg(g6 + c4 | 0, 7) ^ i5, w4 = Lg(t4 + c4 | 0, 9) ^ D4, r4 = Lg(B4 + s4 | 0, 7) ^ r4, n5 = Lg(r4 + B4 | 0, 9) ^ a4, k4 = Lg(n5 + r4 | 0, 13) ^ s4, e6 = Lg(Q5 + h4 | 0, 7) ^ e6, E4 = Lg(e6 + Q5 | 0, 9) ^ E4, a4 = Lg(E4 + e6 | 0, 13) ^ h4, Q5 = Lg(E4 + a4 | 0, 18) ^ Q5, i5 = Lg(I7 + _4 | 0, 7) ^ f4, s4 = k4 ^ Lg(Q5 + i5 | 0, 7), D4 = w4 ^ Lg(s4 + Q5 | 0, 9), f4 = Lg(s4 + D4 | 0, 13) ^ i5, Q5 = Lg(D4 + f4 | 0, 18) ^ Q5, y4 = Lg(i5 + _4 | 0, 9) ^ y4, F4 = Lg(y4 + i5 | 0, 13) ^ I7, I7 = Lg(F4 + y4 | 0, 18) ^ _4, h4 = Lg(I7 + t4 | 0, 7) ^ a4, a4 = Lg(h4 + I7 | 0, 9) ^ n5, i5 = Lg(a4 + h4 | 0, 13) ^ t4, _4 = Lg(i5 + a4 | 0, 18) ^ I7, t4 = Lg(t4 + w4 | 0, 13) ^ g6, g6 = Lg(t4 + w4 | 0, 18) ^ c4, I7 = Lg(g6 + r4 | 0, 7) ^ F4, E4 = Lg(I7 + g6 | 0, 9) ^ E4, r4 = Lg(I7 + E4 | 0, 13) ^ r4, c4 = Lg(E4 + r4 | 0, 18) ^ g6, B4 = Lg(n5 + k4 | 0, 18) ^ B4, g6 = Lg(B4 + e6 | 0, 7) ^ t4, y4 = Lg(g6 + B4 | 0, 9) ^ y4, e6 = Lg(g6 + y4 | 0, 13) ^ e6, B4 = Lg(y4 + e6 | 0, 18) ^ B4, t4 = p4 >>> 0 > 2, p4 = p4 - 2 | 0, t4; ) ;
                      return C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = i5, C3[A8 + 29 | 0] = i5 >>> 8, C3[A8 + 30 | 0] = i5 >>> 16, C3[A8 + 31 | 0] = i5 >>> 24, C3[A8 + 24 | 0] = a4, C3[A8 + 25 | 0] = a4 >>> 8, C3[A8 + 26 | 0] = a4 >>> 16, C3[A8 + 27 | 0] = a4 >>> 24, C3[A8 + 20 | 0] = E4, C3[A8 + 21 | 0] = E4 >>> 8, C3[A8 + 22 | 0] = E4 >>> 16, C3[A8 + 23 | 0] = E4 >>> 24, C3[A8 + 16 | 0] = I7, C3[A8 + 17 | 0] = I7 >>> 8, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 19 | 0] = I7 >>> 24, C3[A8 + 12 | 0] = Q5, C3[A8 + 13 | 0] = Q5 >>> 8, C3[A8 + 14 | 0] = Q5 >>> 16, C3[A8 + 15 | 0] = Q5 >>> 24, C3[A8 + 8 | 0] = _4, C3[A8 + 9 | 0] = _4 >>> 8, C3[A8 + 10 | 0] = _4 >>> 16, C3[A8 + 11 | 0] = _4 >>> 24, C3[A8 + 4 | 0] = c4, C3[A8 + 5 | 0] = c4 >>> 8, C3[A8 + 6 | 0] = c4 >>> 16, C3[A8 + 7 | 0] = c4 >>> 24, 0;
                    }
                    function nA(A8, I7) {
                      var g6, B4, Q5, E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0;
                      for (s3 = g6 = s3 - 480 | 0; c4 = (_4 = g6 + 288 | 0) + (a4 << 1) | 0, t4 = o3[I7 + a4 | 0], C3[c4 + 1 | 0] = t4 >>> 4, C3[0 | c4] = 15 & t4, _4 = _4 + ((c4 = 1 | a4) << 1) | 0, c4 = o3[I7 + c4 | 0], C3[_4 + 1 | 0] = c4 >>> 4, C3[0 | _4] = 15 & c4, 32 != (0 | (a4 = a4 + 2 | 0)); ) ;
                      for (I7 = 0; a4 = 8 + (_4 = (a4 = I7) + o3[0 | (I7 = (g6 + 288 | 0) + r4 | 0)] | 0) | 0, C3[0 | I7] = _4 - (240 & a4), a4 = 8 + (_4 = o3[I7 + 1 | 0] + (a4 << 24 >> 24 >> 4) | 0) | 0, C3[I7 + 1 | 0] = _4 - (240 & a4), a4 = 8 + (_4 = o3[I7 + 2 | 0] + (a4 << 24 >> 24 >> 4) | 0) | 0, C3[I7 + 2 | 0] = _4 - (240 & a4), I7 = a4 << 24 >> 24 >> 4, 63 != (0 | (r4 = r4 + 3 | 0)); ) ;
                      for (C3[g6 + 351 | 0] = o3[g6 + 351 | 0] + I7, i4[A8 + 32 >> 2] = 0, i4[A8 + 36 >> 2] = 0, i4[A8 + 24 >> 2] = 0, i4[A8 + 28 >> 2] = 0, i4[A8 + 16 >> 2] = 0, i4[A8 + 20 >> 2] = 0, i4[A8 + 8 >> 2] = 0, i4[A8 + 12 >> 2] = 0, i4[A8 >> 2] = 0, i4[A8 + 4 >> 2] = 0, i4[A8 + 44 >> 2] = 0, i4[A8 + 48 >> 2] = 0, i4[A8 + 40 >> 2] = 1, i4[A8 + 52 >> 2] = 0, i4[A8 + 56 >> 2] = 0, i4[A8 + 60 >> 2] = 0, i4[A8 + 64 >> 2] = 0, i4[A8 + 68 >> 2] = 0, i4[A8 + 72 >> 2] = 0, i4[A8 + 76 >> 2] = 0, i4[A8 + 80 >> 2] = 1, bg(A8 + 84 | 0, 0, 76), Q5 = A8 + 120 | 0, r4 = A8 + 80 | 0, I7 = A8 + 40 | 0, _4 = g6 + 208 | 0, B4 = g6 + 168 | 0, c4 = g6 + 248 | 0, a4 = 1; zA(e6 = g6 + 8 | 0, a4 >>> 1 | 0, C3[(g6 + 288 | 0) + a4 | 0]), DA(t4 = g6 + 128 | 0, A8, e6), b4(A8, t4, c4), b4(I7, B4, _4), b4(r4, _4, c4), b4(Q5, t4, B4), e6 = a4 >>> 0 < 62, a4 = a4 + 2 | 0, e6; ) ;
                      for (a4 = i4[A8 + 36 >> 2], i4[g6 + 392 >> 2] = i4[A8 + 32 >> 2], i4[g6 + 396 >> 2] = a4, a4 = i4[A8 + 28 >> 2], i4[g6 + 384 >> 2] = i4[A8 + 24 >> 2], i4[g6 + 388 >> 2] = a4, a4 = i4[A8 + 20 >> 2], i4[g6 + 376 >> 2] = i4[A8 + 16 >> 2], i4[g6 + 380 >> 2] = a4, a4 = i4[A8 + 12 >> 2], i4[g6 + 368 >> 2] = i4[A8 + 8 >> 2], i4[g6 + 372 >> 2] = a4, a4 = i4[A8 + 4 >> 2], i4[g6 + 360 >> 2] = i4[A8 >> 2], i4[g6 + 364 >> 2] = a4, a4 = i4[I7 + 12 >> 2], i4[g6 + 408 >> 2] = i4[I7 + 8 >> 2], i4[g6 + 412 >> 2] = a4, a4 = i4[I7 + 20 >> 2], i4[g6 + 416 >> 2] = i4[I7 + 16 >> 2], i4[g6 + 420 >> 2] = a4, a4 = i4[I7 + 28 >> 2], i4[g6 + 424 >> 2] = i4[I7 + 24 >> 2], i4[g6 + 428 >> 2] = a4, a4 = i4[I7 + 36 >> 2], i4[g6 + 432 >> 2] = i4[I7 + 32 >> 2], i4[g6 + 436 >> 2] = a4, a4 = i4[I7 + 4 >> 2], i4[g6 + 400 >> 2] = i4[I7 >> 2], i4[g6 + 404 >> 2] = a4, a4 = i4[r4 + 12 >> 2], i4[g6 + 448 >> 2] = i4[r4 + 8 >> 2], i4[g6 + 452 >> 2] = a4, a4 = i4[r4 + 20 >> 2], i4[g6 + 456 >> 2] = i4[r4 + 16 >> 2], i4[g6 + 460 >> 2] = a4, a4 = i4[r4 + 28 >> 2], i4[g6 + 464 >> 2] = i4[r4 + 24 >> 2], i4[g6 + 468 >> 2] = a4, a4 = i4[r4 + 36 >> 2], i4[g6 + 472 >> 2] = i4[r4 + 32 >> 2], i4[g6 + 476 >> 2] = a4, a4 = i4[r4 + 4 >> 2], i4[g6 + 440 >> 2] = i4[r4 >> 2], i4[g6 + 444 >> 2] = a4, KA(t4, a4 = g6 + 360 | 0), b4(a4, t4, c4), b4(e6 = g6 + 400 | 0, B4, _4), b4(E4 = g6 + 440 | 0, _4, c4), KA(t4, a4), b4(a4, t4, c4), b4(e6, B4, _4), b4(E4, _4, c4), KA(t4, a4), b4(a4, t4, c4), b4(e6, B4, _4), b4(E4, _4, c4), KA(t4, a4), b4(A8, t4, c4), b4(I7, B4, _4), b4(r4, _4, c4), b4(Q5, t4, B4), a4 = 0; zA(e6 = g6 + 8 | 0, a4 >>> 1 | 0, C3[(g6 + 288 | 0) + a4 | 0]), DA(t4 = g6 + 128 | 0, A8, e6), b4(A8, t4, c4), b4(I7, B4, _4), b4(r4, _4, c4), b4(Q5, t4, B4), t4 = a4 >>> 0 < 62, a4 = a4 + 2 | 0, t4; ) ;
                      s3 = g6 + 480 | 0;
                    }
                    function kA(A8, I7) {
                      A8 |= 0;
                      var g6, C4, B4, Q5, i5, o4 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0;
                      for (s3 = g6 = s3 - 736 | 0, n4(c4 = g6 + 704 | 0, I7 |= 0, I7), n4(E4 = g6 + 224 | 0, I7, c4), n4(_4 = g6 + 672 | 0, I7, E4), n4(a4 = g6 + 640 | 0, _4, _4), n4(C4 = g6 + 416 | 0, c4, a4), n4(c4 = g6 + 320 | 0, I7, C4), n4(o4 = g6 + 608 | 0, a4, a4), n4(a4 = g6 + 288 | 0, c4, c4), n4(t4 = g6 + 576 | 0, C4, a4), n4(i5 = g6 + 448 | 0, o4, a4), n4(B4 = g6 + 544 | 0, t4, t4), n4(t4 = g6 + 384 | 0, o4, B4), n4(Q5 = g6 + 352 | 0, E4, t4), n4(E4 = g6 + 192 | 0, o4, Q5), n4(o4 = g6 + 160 | 0, _4, E4), n4(g6 + 96 | 0, _4, o4), n4(E4 = g6 + 512 | 0, B4, Q5), n4(o4 = g6 + 480 | 0, _4, E4), n4(E4 = g6 + 256 | 0, i5, o4), n4(g6 + 128 | 0, a4, E4), n4(a4 = g6 - -64 | 0, t4, o4), n4(o4 = g6 + 32 | 0, _4, a4), n4(g6, C4, o4), n4(A8, c4, g6), _4 = 0; n4(A8, A8, A8), 126 != (0 | (_4 = _4 + 1 | 0)); ) ;
                      return n4(A8, A8, g6 + 352 | 0), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6 + 704 | 0), n4(A8, A8, g6), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6 + 160 | 0), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6 + 256 | 0), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6 - -64 | 0), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6 + 96 | 0), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6 + 320 | 0), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6 + 512 | 0), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6 + 192 | 0), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6 + 480 | 0), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6 + 128 | 0), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, A8), n4(A8, A8, g6 + 32 | 0), s3 = g6 + 736 | 0, 0 - GI(I7, 32) | 0;
                    }
                    function FA(A8, I7, g6) {
                      A8 |= 0;
                      var B4, Q5, i5, E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0;
                      return s3 = i5 = s3 - 160 | 0, FI(I7 |= 0, g6 |= 0, 32, 0), C3[0 | I7] = 248 & o3[0 | I7], C3[I7 + 31 | 0] = 63 & o3[I7 + 31 | 0] | 64, nA(i5, I7), tg(A8, i5), _4 = o3[(Q5 = g6) + 8 | 0] | o3[Q5 + 9 | 0] << 8 | o3[Q5 + 10 | 0] << 16 | o3[Q5 + 11 | 0] << 24, a4 = o3[Q5 + 12 | 0] | o3[Q5 + 13 | 0] << 8 | o3[Q5 + 14 | 0] << 16 | o3[Q5 + 15 | 0] << 24, c4 = o3[Q5 + 16 | 0] | o3[Q5 + 17 | 0] << 8 | o3[Q5 + 18 | 0] << 16 | o3[Q5 + 19 | 0] << 24, t4 = o3[Q5 + 20 | 0] | o3[Q5 + 21 | 0] << 8 | o3[Q5 + 22 | 0] << 16 | o3[Q5 + 23 | 0] << 24, r4 = o3[0 | Q5] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24, g6 = o3[Q5 + 4 | 0] | o3[Q5 + 5 | 0] << 8 | o3[Q5 + 6 | 0] << 16 | o3[Q5 + 7 | 0] << 24, E4 = o3[Q5 + 28 | 0] | o3[Q5 + 29 | 0] << 8 | o3[Q5 + 30 | 0] << 16 | o3[Q5 + 31 | 0] << 24, B4 = I7, I7 = o3[Q5 + 24 | 0] | o3[Q5 + 25 | 0] << 8 | o3[Q5 + 26 | 0] << 16 | o3[Q5 + 27 | 0] << 24, C3[B4 + 24 | 0] = I7, C3[B4 + 25 | 0] = I7 >>> 8, C3[B4 + 26 | 0] = I7 >>> 16, C3[B4 + 27 | 0] = I7 >>> 24, C3[B4 + 28 | 0] = E4, C3[B4 + 29 | 0] = E4 >>> 8, C3[B4 + 30 | 0] = E4 >>> 16, C3[B4 + 31 | 0] = E4 >>> 24, C3[B4 + 16 | 0] = c4, C3[B4 + 17 | 0] = c4 >>> 8, C3[B4 + 18 | 0] = c4 >>> 16, C3[B4 + 19 | 0] = c4 >>> 24, C3[B4 + 20 | 0] = t4, C3[B4 + 21 | 0] = t4 >>> 8, C3[B4 + 22 | 0] = t4 >>> 16, C3[B4 + 23 | 0] = t4 >>> 24, C3[B4 + 8 | 0] = _4, C3[B4 + 9 | 0] = _4 >>> 8, C3[B4 + 10 | 0] = _4 >>> 16, C3[B4 + 11 | 0] = _4 >>> 24, C3[B4 + 12 | 0] = a4, C3[B4 + 13 | 0] = a4 >>> 8, C3[B4 + 14 | 0] = a4 >>> 16, C3[B4 + 15 | 0] = a4 >>> 24, C3[0 | B4] = r4, C3[B4 + 1 | 0] = r4 >>> 8, C3[B4 + 2 | 0] = r4 >>> 16, C3[B4 + 3 | 0] = r4 >>> 24, C3[B4 + 4 | 0] = g6, C3[B4 + 5 | 0] = g6 >>> 8, C3[B4 + 6 | 0] = g6 >>> 16, C3[B4 + 7 | 0] = g6 >>> 24, c4 = o3[(a4 = A8) + 8 | 0] | o3[a4 + 9 | 0] << 8 | o3[a4 + 10 | 0] << 16 | o3[a4 + 11 | 0] << 24, t4 = o3[a4 + 12 | 0] | o3[a4 + 13 | 0] << 8 | o3[a4 + 14 | 0] << 16 | o3[a4 + 15 | 0] << 24, r4 = o3[a4 + 16 | 0] | o3[a4 + 17 | 0] << 8 | o3[a4 + 18 | 0] << 16 | o3[a4 + 19 | 0] << 24, g6 = o3[a4 + 20 | 0] | o3[a4 + 21 | 0] << 8 | o3[a4 + 22 | 0] << 16 | o3[a4 + 23 | 0] << 24, I7 = o3[0 | a4] | o3[a4 + 1 | 0] << 8 | o3[a4 + 2 | 0] << 16 | o3[a4 + 3 | 0] << 24, A8 = o3[a4 + 4 | 0] | o3[a4 + 5 | 0] << 8 | o3[a4 + 6 | 0] << 16 | o3[a4 + 7 | 0] << 24, _4 = o3[a4 + 28 | 0] | o3[a4 + 29 | 0] << 8 | o3[a4 + 30 | 0] << 16 | o3[a4 + 31 | 0] << 24, a4 = o3[a4 + 24 | 0] | o3[a4 + 25 | 0] << 8 | o3[a4 + 26 | 0] << 16 | o3[a4 + 27 | 0] << 24, C3[B4 + 56 | 0] = a4, C3[B4 + 57 | 0] = a4 >>> 8, C3[B4 + 58 | 0] = a4 >>> 16, C3[B4 + 59 | 0] = a4 >>> 24, C3[B4 + 60 | 0] = _4, C3[B4 + 61 | 0] = _4 >>> 8, C3[B4 + 62 | 0] = _4 >>> 16, C3[B4 + 63 | 0] = _4 >>> 24, C3[B4 + 48 | 0] = r4, C3[B4 + 49 | 0] = r4 >>> 8, C3[B4 + 50 | 0] = r4 >>> 16, C3[B4 + 51 | 0] = r4 >>> 24, C3[B4 + 52 | 0] = g6, C3[B4 + 53 | 0] = g6 >>> 8, C3[B4 + 54 | 0] = g6 >>> 16, C3[B4 + 55 | 0] = g6 >>> 24, C3[B4 + 40 | 0] = c4, C3[B4 + 41 | 0] = c4 >>> 8, C3[B4 + 42 | 0] = c4 >>> 16, C3[B4 + 43 | 0] = c4 >>> 24, C3[B4 + 44 | 0] = t4, C3[B4 + 45 | 0] = t4 >>> 8, C3[B4 + 46 | 0] = t4 >>> 16, C3[B4 + 47 | 0] = t4 >>> 24, C3[B4 + 32 | 0] = I7, C3[B4 + 33 | 0] = I7 >>> 8, C3[B4 + 34 | 0] = I7 >>> 16, C3[B4 + 35 | 0] = I7 >>> 24, C3[B4 + 36 | 0] = A8, C3[B4 + 37 | 0] = A8 >>> 8, C3[B4 + 38 | 0] = A8 >>> 16, C3[B4 + 39 | 0] = A8 >>> 24, s3 = i5 + 160 | 0, 0;
                    }
                    function SA(A8, I7, g6, B4) {
                      var Q5, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0;
                      if (s3 = Q5 = s3 - 704 | 0, g6 | B4) if (E4 = (B4 << 3 | g6 >>> 29) + (a4 = c4 = i4[A8 + 76 >> 2]) | 0, _4 = (r4 = i4[A8 + 72 >> 2]) + (t4 = g6 << 3) | 0, i4[A8 + 72 >> 2] = _4, E4 = _4 >>> 0 < t4 >>> 0 ? E4 + 1 | 0 : E4, i4[A8 + 76 >> 2] = E4, c4 = i4[A8 + 68 >> 2], E4 = (E4 = _4 = (0 | E4) == (0 | a4) & _4 >>> 0 < r4 >>> 0 | E4 >>> 0 < a4 >>> 0) >>> 0 > (_4 = _4 + i4[A8 + 64 >> 2] | 0) >>> 0 ? c4 + 1 | 0 : c4, _4 = (t4 = B4 >>> 29 | 0) + _4 | 0, i4[A8 + 64 >> 2] = _4, i4[A8 + 68 >> 2] = _4 >>> 0 < t4 >>> 0 ? E4 + 1 | 0 : E4, _4 = A8 + 80 | 0, (0 | B4) == (0 | (c4 = f4 = 0 - ((E4 = 0) + ((t4 = 127 & ((7 & a4) << 29 | r4 >>> 3)) >>> 0 > 128) | 0) | 0)) & g6 >>> 0 >= (r4 = 128 - t4 | 0) >>> 0 | B4 >>> 0 > c4 >>> 0) {
                        if (a4 = 0, c4 = 0, !E4 & (127 ^ t4) >>> 0 >= 3 | E4) for (p4 = 252 & r4; C3[(E4 = a4 + t4 | 0) + _4 | 0] = o3[I7 + a4 | 0], C3[_4 + (t4 + (E4 = 1 | a4) | 0) | 0] = o3[I7 + E4 | 0], C3[_4 + (t4 + (E4 = 2 | a4) | 0) | 0] = o3[I7 + E4 | 0], C3[_4 + (t4 + (E4 = 3 | a4) | 0) | 0] = o3[I7 + E4 | 0], E4 = c4, c4 = (a4 = a4 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, E4 = h4, h4 = E4 = (e6 = e6 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, (0 | e6) != (0 | p4) | (0 | D4) != (0 | E4); ) ;
                        if (h4 = E4 = 0, E4 | (e6 = 3 & r4)) for (; C3[(E4 = a4 + t4 | 0) + _4 | 0] = o3[I7 + a4 | 0], E4 = c4, c4 = (a4 = a4 + 1 | 0) ? E4 : E4 + 1 | 0, E4 = D4, D4 = E4 = (y4 = y4 + 1 | 0) ? E4 : E4 + 1 | 0, (0 | e6) != (0 | y4) | (0 | h4) != (0 | E4); ) ;
                        if (k3(A8, _4, Q5, a4 = Q5 + 640 | 0), I7 = I7 + r4 | 0, !(B4 = B4 - ((g6 >>> 0 < r4 >>> 0) + f4 | 0) | 0) & (g6 = g6 - r4 | 0) >>> 0 > 127 | B4) for (; k3(A8, I7, Q5, a4), I7 = I7 + 128 | 0, !(B4 = B4 - (g6 >>> 0 < 128) | 0) & (g6 = g6 - 128 | 0) >>> 0 > 127 | B4; ) ;
                        if (g6 | B4) {
                          if (A8 = 3 & g6, y4 = 0, D4 = 0, a4 = 0, c4 = 0, !B4 & g6 >>> 0 >= 4 | B4) for (e6 = 124 & g6, r4 = 0, g6 = 0, B4 = 0; C3[a4 + _4 | 0] = o3[I7 + a4 | 0], C3[(E4 = 1 | a4) + _4 | 0] = o3[I7 + E4 | 0], C3[(E4 = 2 | a4) + _4 | 0] = o3[I7 + E4 | 0], C3[(E4 = 3 | a4) + _4 | 0] = o3[I7 + E4 | 0], E4 = c4, c4 = (a4 = a4 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, E4 = B4, B4 = E4 = (g6 = g6 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, (0 | g6) != (0 | e6) | (0 | r4) != (0 | E4); ) ;
                          if (A8 | h4) for (; C3[a4 + _4 | 0] = o3[I7 + a4 | 0], c4 = (a4 = a4 + 1 | 0) ? c4 : c4 + 1 | 0, E4 = D4, D4 = E4 = (y4 = y4 + 1 | 0) ? E4 : E4 + 1 | 0, (0 | A8) != (0 | y4) | (0 | h4) != (0 | E4); ) ;
                        }
                        XC(Q5, 704);
                      } else {
                        if (a4 = 0, c4 = 0, !B4 & g6 >>> 0 >= 4 | B4) for (A8 = -4 & g6; C3[(E4 = a4 + t4 | 0) + _4 | 0] = o3[I7 + a4 | 0], C3[_4 + (r4 = t4 + (E4 = 1 | a4) | 0) | 0] = o3[I7 + E4 | 0], C3[_4 + (r4 = t4 + (E4 = 2 | a4) | 0) | 0] = o3[I7 + E4 | 0], C3[_4 + (r4 = t4 + (E4 = 3 | a4) | 0) | 0] = o3[I7 + E4 | 0], E4 = c4, c4 = (a4 = a4 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, E4 = h4, h4 = E4 = (e6 = e6 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, (0 | A8) != (0 | e6) | (0 | B4) != (0 | E4); ) ;
                        if ((g6 &= 3) | (A8 = 0)) for (; C3[(B4 = a4 + t4 | 0) + _4 | 0] = o3[I7 + a4 | 0], c4 = (a4 = a4 + 1 | 0) ? c4 : c4 + 1 | 0, E4 = D4, D4 = E4 = (y4 = y4 + 1 | 0) ? E4 : E4 + 1 | 0, (0 | g6) != (0 | y4) | (0 | A8) != (0 | E4); ) ;
                      }
                      return s3 = Q5 + 704 | 0, 0;
                    }
                    function NA(A8, I7, g6) {
                      var C4, B4 = 0, Q5 = 0, o4 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0;
                      s4 = i4[I7 + 4 >> 2], B4 = i4[A8 + 4 >> 2], h4 = i4[I7 + 8 >> 2], Q5 = i4[A8 + 8 >> 2], D4 = i4[I7 + 12 >> 2], o4 = i4[A8 + 12 >> 2], f4 = i4[I7 + 16 >> 2], E4 = i4[A8 + 16 >> 2], p4 = i4[I7 + 20 >> 2], a4 = i4[A8 + 20 >> 2], y4 = i4[I7 + 24 >> 2], _4 = i4[A8 + 24 >> 2], w4 = i4[I7 + 28 >> 2], c4 = i4[A8 + 28 >> 2], n5 = i4[I7 + 32 >> 2], t4 = i4[A8 + 32 >> 2], k4 = i4[I7 + 36 >> 2], r4 = i4[A8 + 36 >> 2], g6 = 0 - g6 | 0, e6 = i4[A8 >> 2], i4[A8 >> 2] = g6 & (e6 ^ i4[I7 >> 2]) ^ e6, i4[A8 + 36 >> 2] = r4 ^ g6 & (r4 ^ k4), i4[A8 + 32 >> 2] = t4 ^ g6 & (t4 ^ n5), i4[A8 + 28 >> 2] = c4 ^ g6 & (c4 ^ w4), i4[A8 + 24 >> 2] = _4 ^ g6 & (_4 ^ y4), i4[A8 + 20 >> 2] = a4 ^ g6 & (a4 ^ p4), i4[A8 + 16 >> 2] = E4 ^ g6 & (E4 ^ f4), i4[A8 + 12 >> 2] = o4 ^ g6 & (o4 ^ D4), i4[A8 + 8 >> 2] = Q5 ^ g6 & (Q5 ^ h4), i4[A8 + 4 >> 2] = B4 ^ g6 & (B4 ^ s4), B4 = i4[A8 + 44 >> 2], s4 = i4[I7 + 44 >> 2], Q5 = i4[A8 + 48 >> 2], h4 = i4[I7 + 48 >> 2], o4 = i4[A8 + 52 >> 2], D4 = i4[I7 + 52 >> 2], E4 = i4[A8 + 56 >> 2], f4 = i4[I7 + 56 >> 2], a4 = i4[A8 + 60 >> 2], p4 = i4[I7 + 60 >> 2], _4 = i4[(y4 = A8 - -64 | 0) >> 2], w4 = i4[I7 - -64 >> 2], c4 = i4[A8 + 68 >> 2], n5 = i4[I7 + 68 >> 2], t4 = i4[A8 + 72 >> 2], k4 = i4[I7 + 72 >> 2], r4 = i4[A8 + 40 >> 2], e6 = i4[I7 + 40 >> 2], C4 = i4[A8 + 76 >> 2], i4[A8 + 76 >> 2] = C4 ^ g6 & (i4[I7 + 76 >> 2] ^ C4), i4[A8 + 72 >> 2] = t4 ^ g6 & (t4 ^ k4), i4[A8 + 68 >> 2] = c4 ^ g6 & (c4 ^ n5), i4[y4 >> 2] = _4 ^ g6 & (_4 ^ w4), i4[A8 + 60 >> 2] = a4 ^ g6 & (a4 ^ p4), i4[A8 + 56 >> 2] = E4 ^ g6 & (E4 ^ f4), i4[A8 + 52 >> 2] = o4 ^ g6 & (o4 ^ D4), i4[A8 + 48 >> 2] = Q5 ^ g6 & (Q5 ^ h4), i4[A8 + 44 >> 2] = B4 ^ g6 & (B4 ^ s4), i4[A8 + 40 >> 2] = r4 ^ g6 & (r4 ^ e6), B4 = i4[A8 + 84 >> 2], s4 = i4[I7 + 84 >> 2], Q5 = i4[A8 + 88 >> 2], h4 = i4[I7 + 88 >> 2], o4 = i4[A8 + 92 >> 2], D4 = i4[I7 + 92 >> 2], E4 = i4[A8 + 96 >> 2], f4 = i4[I7 + 96 >> 2], a4 = i4[A8 + 100 >> 2], p4 = i4[I7 + 100 >> 2], _4 = i4[A8 + 104 >> 2], y4 = i4[I7 + 104 >> 2], c4 = i4[A8 + 108 >> 2], w4 = i4[I7 + 108 >> 2], t4 = i4[A8 + 112 >> 2], n5 = i4[I7 + 112 >> 2], r4 = i4[A8 + 80 >> 2], k4 = i4[I7 + 80 >> 2], e6 = i4[A8 + 116 >> 2], i4[A8 + 116 >> 2] = g6 & (e6 ^ i4[I7 + 116 >> 2]) ^ e6, i4[A8 + 112 >> 2] = t4 ^ g6 & (t4 ^ n5), i4[A8 + 108 >> 2] = c4 ^ g6 & (c4 ^ w4), i4[A8 + 104 >> 2] = _4 ^ g6 & (_4 ^ y4), i4[A8 + 100 >> 2] = a4 ^ g6 & (a4 ^ p4), i4[A8 + 96 >> 2] = E4 ^ g6 & (E4 ^ f4), i4[A8 + 92 >> 2] = o4 ^ g6 & (o4 ^ D4), i4[A8 + 88 >> 2] = Q5 ^ g6 & (Q5 ^ h4), i4[A8 + 84 >> 2] = B4 ^ g6 & (B4 ^ s4), i4[A8 + 80 >> 2] = r4 ^ g6 & (r4 ^ k4), B4 = i4[A8 + 124 >> 2], s4 = i4[I7 + 124 >> 2], Q5 = i4[A8 + 128 >> 2], h4 = i4[I7 + 128 >> 2], o4 = i4[A8 + 132 >> 2], D4 = i4[I7 + 132 >> 2], E4 = i4[A8 + 136 >> 2], f4 = i4[I7 + 136 >> 2], a4 = i4[A8 + 140 >> 2], p4 = i4[I7 + 140 >> 2], _4 = i4[A8 + 144 >> 2], y4 = i4[I7 + 144 >> 2], c4 = i4[A8 + 148 >> 2], w4 = i4[I7 + 148 >> 2], t4 = i4[A8 + 152 >> 2], n5 = i4[I7 + 152 >> 2], r4 = i4[A8 + 120 >> 2], k4 = i4[I7 + 120 >> 2], e6 = i4[I7 + 156 >> 2], I7 = i4[A8 + 156 >> 2], i4[A8 + 156 >> 2] = g6 & (e6 ^ I7) ^ I7, i4[A8 + 152 >> 2] = t4 ^ g6 & (t4 ^ n5), i4[A8 + 148 >> 2] = c4 ^ g6 & (c4 ^ w4), i4[A8 + 144 >> 2] = _4 ^ g6 & (_4 ^ y4), i4[A8 + 140 >> 2] = a4 ^ g6 & (a4 ^ p4), i4[A8 + 136 >> 2] = E4 ^ g6 & (E4 ^ f4), i4[A8 + 132 >> 2] = o4 ^ g6 & (o4 ^ D4), i4[A8 + 128 >> 2] = Q5 ^ g6 & (Q5 ^ h4), i4[A8 + 124 >> 2] = B4 ^ g6 & (B4 ^ s4), i4[A8 + 120 >> 2] = r4 ^ g6 & (r4 ^ k4);
                    }
                    function GA(A8, I7, g6) {
                      var B4, Q5, o4 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0;
                      return s3 = B4 = s3 - 320 | 0, R3(o4 = B4 + 240 | 0, g6), b4(o4, o4, g6), R3(A8, o4), b4(A8, A8, g6), b4(A8, A8, I7), PA(A8, A8), b4(A8, A8, o4), b4(A8, A8, I7), R3(o4 = B4 + 192 | 0, A8), b4(o4, o4, g6), E4 = i4[I7 + 4 >> 2], h4 = i4[I7 + 8 >> 2], f4 = i4[I7 + 12 >> 2], p4 = i4[I7 + 16 >> 2], w4 = i4[I7 + 20 >> 2], n5 = i4[I7 + 24 >> 2], k4 = i4[I7 + 28 >> 2], F4 = i4[I7 + 32 >> 2], S4 = i4[I7 >> 2], g6 = i4[B4 + 192 >> 2], o4 = i4[B4 + 196 >> 2], a4 = i4[B4 + 200 >> 2], _4 = i4[B4 + 204 >> 2], c4 = i4[B4 + 208 >> 2], t4 = i4[B4 + 212 >> 2], r4 = i4[B4 + 216 >> 2], e6 = i4[B4 + 220 >> 2], y4 = i4[B4 + 224 >> 2], D4 = i4[B4 + 228 >> 2], N4 = i4[I7 + 36 >> 2], i4[B4 + 180 >> 2] = D4 - N4, i4[B4 + 176 >> 2] = y4 - F4, i4[B4 + 172 >> 2] = e6 - k4, i4[B4 + 168 >> 2] = r4 - n5, i4[B4 + 164 >> 2] = t4 - w4, i4[B4 + 160 >> 2] = c4 - p4, i4[B4 + 156 >> 2] = _4 - f4, i4[B4 + 152 >> 2] = a4 - h4, i4[B4 + 148 >> 2] = o4 - E4, i4[B4 + 144 >> 2] = g6 - S4, i4[B4 + 132 >> 2] = D4 + N4, i4[B4 + 128 >> 2] = y4 + F4, i4[B4 + 124 >> 2] = e6 + k4, i4[B4 + 120 >> 2] = r4 + n5, i4[B4 + 116 >> 2] = t4 + w4, i4[B4 + 112 >> 2] = c4 + p4, i4[B4 + 108 >> 2] = _4 + f4, i4[B4 + 104 >> 2] = a4 + h4, i4[B4 + 100 >> 2] = o4 + E4, i4[B4 + 96 >> 2] = g6 + S4, b4(E4 = B4 + 48 | 0, I7, 1632), i4[B4 + 84 >> 2] = D4 + i4[B4 + 84 >> 2], i4[B4 + 80 >> 2] = y4 + i4[B4 + 80 >> 2], i4[B4 + 76 >> 2] = e6 + i4[B4 + 76 >> 2], i4[B4 + 72 >> 2] = r4 + i4[B4 + 72 >> 2], i4[B4 + 68 >> 2] = t4 + i4[B4 + 68 >> 2], i4[B4 + 64 >> 2] = c4 + i4[B4 + 64 >> 2], i4[B4 + 60 >> 2] = _4 + i4[B4 + 60 >> 2], i4[B4 + 56 >> 2] = a4 + i4[B4 + 56 >> 2], i4[B4 + 52 >> 2] = o4 + i4[B4 + 52 >> 2], i4[B4 + 48 >> 2] = g6 + i4[B4 + 48 >> 2], QI(B4, B4 + 144 | 0), f4 = GI(B4, 32), QI(B4, B4 + 96 | 0), h4 = GI(B4, 32), QI(B4, E4), I7 = GI(B4, 32), b4(B4, A8, 1632), y4 = i4[A8 + 4 >> 2], e6 = i4[A8 + 8 >> 2], r4 = i4[A8 + 12 >> 2], t4 = i4[A8 + 16 >> 2], c4 = i4[A8 + 20 >> 2], _4 = i4[A8 + 24 >> 2], a4 = i4[A8 + 28 >> 2], o4 = i4[A8 + 32 >> 2], E4 = i4[A8 >> 2], p4 = i4[B4 >> 2], w4 = i4[B4 + 4 >> 2], n5 = i4[B4 + 8 >> 2], k4 = i4[B4 + 12 >> 2], F4 = i4[B4 + 16 >> 2], S4 = i4[B4 + 20 >> 2], D4 = i4[B4 + 24 >> 2], N4 = i4[B4 + 28 >> 2], Q5 = i4[B4 + 32 >> 2], g6 = (I7 = 0 - (I7 | h4) | 0) & ((g6 = i4[A8 + 36 >> 2]) ^ i4[B4 + 36 >> 2]) ^ g6, i4[A8 + 36 >> 2] = g6, o4 ^= I7 & (o4 ^ Q5), i4[A8 + 32 >> 2] = o4, a4 ^= I7 & (a4 ^ N4), i4[A8 + 28 >> 2] = a4, _4 ^= I7 & (_4 ^ D4), i4[A8 + 24 >> 2] = _4, c4 ^= I7 & (c4 ^ S4), i4[A8 + 20 >> 2] = c4, t4 ^= I7 & (t4 ^ F4), i4[A8 + 16 >> 2] = t4, r4 ^= I7 & (r4 ^ k4), i4[A8 + 12 >> 2] = r4, e6 ^= I7 & (e6 ^ n5), i4[A8 + 8 >> 2] = e6, y4 ^= I7 & (y4 ^ w4), i4[A8 + 4 >> 2] = y4, E4 ^= I7 & (E4 ^ p4), i4[A8 >> 2] = E4, QI(B4 + 288 | 0, A8), I7 = 0 - (1 & C3[B4 + 288 | 0]) | 0, i4[A8 + 36 >> 2] = g6 ^ I7 & (g6 ^ 0 - g6), i4[A8 + 32 >> 2] = o4 ^ I7 & (o4 ^ 0 - o4), i4[A8 + 28 >> 2] = a4 ^ I7 & (a4 ^ 0 - a4), i4[A8 + 24 >> 2] = _4 ^ I7 & (_4 ^ 0 - _4), i4[A8 + 20 >> 2] = c4 ^ I7 & (c4 ^ 0 - c4), i4[A8 + 16 >> 2] = t4 ^ I7 & (t4 ^ 0 - t4), i4[A8 + 12 >> 2] = r4 ^ I7 & (r4 ^ 0 - r4), i4[A8 + 8 >> 2] = e6 ^ I7 & (e6 ^ 0 - e6), i4[A8 + 4 >> 2] = y4 ^ I7 & (y4 ^ 0 - y4), i4[A8 >> 2] = E4 ^ I7 & (E4 ^ 0 - E4), s3 = B4 + 320 | 0, h4 | f4;
                    }
                    function MA(A8, I7) {
                      var g6, B4, Q5, E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0;
                      return s3 = g6 = s3 - 320 | 0, fA(B4 = A8 + 40 | 0, I7), i4[A8 + 84 >> 2] = 0, i4[A8 + 88 >> 2] = 0, i4[A8 + 80 >> 2] = 1, i4[A8 + 92 >> 2] = 0, i4[A8 + 96 >> 2] = 0, i4[A8 + 100 >> 2] = 0, i4[A8 + 104 >> 2] = 0, i4[A8 + 108 >> 2] = 0, i4[A8 + 112 >> 2] = 0, i4[A8 + 116 >> 2] = 0, R3(a4 = g6 + 240 | 0, B4), b4(_4 = g6 + 192 | 0, a4, 1584), i4[g6 + 192 >> 2] = i4[g6 + 192 >> 2] + 1, c4 = i4[g6 + 240 >> 2] - 1 | 0, i4[g6 + 240 >> 2] = c4, t4 = i4[g6 + 244 >> 2], r4 = i4[g6 + 248 >> 2], e6 = i4[g6 + 252 >> 2], y4 = i4[g6 + 256 >> 2], h4 = i4[g6 + 260 >> 2], D4 = i4[g6 + 264 >> 2], f4 = i4[g6 + 268 >> 2], p4 = i4[g6 + 272 >> 2], w4 = i4[g6 + 276 >> 2], b4(A8, a4, _4), PA(A8, A8), b4(A8, a4, A8), R3(a4 = g6 + 144 | 0, A8), b4(a4, a4, _4), a4 = i4[g6 + 180 >> 2], i4[g6 + 132 >> 2] = a4 - w4, _4 = i4[g6 + 176 >> 2], i4[g6 + 128 >> 2] = _4 - p4, n5 = i4[g6 + 172 >> 2], i4[g6 + 124 >> 2] = n5 - f4, k4 = i4[g6 + 168 >> 2], i4[g6 + 120 >> 2] = k4 - D4, F4 = i4[g6 + 164 >> 2], i4[g6 + 116 >> 2] = F4 - h4, S4 = i4[g6 + 160 >> 2], i4[g6 + 112 >> 2] = S4 - y4, N4 = i4[g6 + 156 >> 2], i4[g6 + 108 >> 2] = N4 - e6, G4 = i4[g6 + 152 >> 2], i4[g6 + 104 >> 2] = G4 - r4, M4 = i4[g6 + 148 >> 2], i4[g6 + 100 >> 2] = M4 - t4, K4 = i4[g6 + 144 >> 2], i4[g6 + 96 >> 2] = K4 - c4, i4[g6 + 84 >> 2] = a4 + w4, i4[g6 + 80 >> 2] = _4 + p4, i4[g6 + 76 >> 2] = f4 + n5, i4[g6 + 72 >> 2] = D4 + k4, i4[g6 + 68 >> 2] = h4 + F4, i4[g6 + 64 >> 2] = y4 + S4, i4[g6 + 60 >> 2] = e6 + N4, i4[g6 + 56 >> 2] = r4 + G4, i4[g6 + 52 >> 2] = t4 + M4, i4[g6 + 48 >> 2] = c4 + K4, QI(g6, g6 + 96 | 0), p4 = GI(g6, 32), QI(g6, g6 + 48 | 0), n5 = GI(g6, 32), b4(g6, A8, 1632), f4 = i4[A8 + 4 >> 2], D4 = i4[A8 + 8 >> 2], h4 = i4[A8 + 12 >> 2], y4 = i4[A8 + 16 >> 2], e6 = i4[A8 + 20 >> 2], r4 = i4[A8 + 24 >> 2], t4 = i4[A8 + 28 >> 2], c4 = i4[A8 + 32 >> 2], w4 = i4[A8 >> 2], k4 = i4[g6 >> 2], F4 = i4[g6 + 4 >> 2], S4 = i4[g6 + 8 >> 2], N4 = i4[g6 + 12 >> 2], G4 = i4[g6 + 16 >> 2], M4 = i4[g6 + 20 >> 2], K4 = i4[g6 + 24 >> 2], Q5 = i4[g6 + 28 >> 2], E4 = i4[g6 + 32 >> 2], _4 = (a4 = p4 - 1 | 0) & ((_4 = i4[A8 + 36 >> 2]) ^ i4[g6 + 36 >> 2]) ^ _4, i4[A8 + 36 >> 2] = _4, c4 ^= a4 & (c4 ^ E4), i4[A8 + 32 >> 2] = c4, t4 ^= a4 & (t4 ^ Q5), i4[A8 + 28 >> 2] = t4, r4 ^= a4 & (r4 ^ K4), i4[A8 + 24 >> 2] = r4, e6 ^= a4 & (e6 ^ M4), i4[A8 + 20 >> 2] = e6, y4 ^= a4 & (y4 ^ G4), i4[A8 + 16 >> 2] = y4, h4 ^= a4 & (h4 ^ N4), i4[A8 + 12 >> 2] = h4, D4 ^= a4 & (D4 ^ S4), i4[A8 + 8 >> 2] = D4, f4 ^= a4 & (f4 ^ F4), i4[A8 + 4 >> 2] = f4, a4 = w4 ^ a4 & (w4 ^ k4), i4[A8 >> 2] = a4, QI(g6 + 288 | 0, A8), I7 = 0 - (1 & C3[g6 + 288 | 0] ^ o3[I7 + 31 | 0] >>> 7 ^ o3[38144] >>> 2) | 0, i4[A8 + 36 >> 2] = _4 ^ I7 & (_4 ^ 0 - _4), i4[A8 + 32 >> 2] = c4 ^ I7 & (c4 ^ 0 - c4), i4[A8 + 28 >> 2] = t4 ^ I7 & (t4 ^ 0 - t4), i4[A8 + 24 >> 2] = r4 ^ I7 & (r4 ^ 0 - r4), i4[A8 + 20 >> 2] = e6 ^ I7 & (e6 ^ 0 - e6), i4[A8 + 16 >> 2] = y4 ^ I7 & (y4 ^ 0 - y4), i4[A8 + 12 >> 2] = h4 ^ I7 & (h4 ^ 0 - h4), i4[A8 + 8 >> 2] = D4 ^ I7 & (D4 ^ 0 - D4), i4[A8 + 4 >> 2] = f4 ^ I7 & (f4 ^ 0 - f4), i4[A8 >> 2] = a4 ^ I7 & (a4 ^ 0 - a4), b4(A8 + 120 | 0, A8, B4), s3 = g6 + 320 | 0, (p4 | n5) - 1 | 0;
                    }
                    function KA(A8, I7) {
                      var g6, C4, B4, Q5, o4, E4, a4, _4, c4, t4, r4, e6, y4, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0, H4 = 0, Y4 = 0, J4 = 0;
                      s3 = g6 = s3 - 48 | 0, R3(A8, I7), R3(A8 + 80 | 0, I7 + 40 | 0), v3(A8 + 120 | 0, I7 + 80 | 0), h4 = i4[I7 + 44 >> 2], D4 = i4[I7 + 4 >> 2], n5 = i4[I7 + 48 >> 2], f4 = i4[I7 + 8 >> 2], k4 = i4[I7 + 52 >> 2], p4 = i4[I7 + 12 >> 2], F4 = i4[I7 + 56 >> 2], w4 = i4[I7 + 16 >> 2], K4 = i4[I7 + 60 >> 2], S4 = i4[I7 + 20 >> 2], U4 = i4[I7 - -64 >> 2], N4 = i4[I7 + 24 >> 2], b5 = i4[I7 + 68 >> 2], G4 = i4[I7 + 28 >> 2], H4 = i4[I7 + 72 >> 2], Y4 = i4[I7 + 32 >> 2], J4 = i4[I7 + 40 >> 2], M4 = i4[I7 >> 2], i4[A8 + 76 >> 2] = i4[I7 + 76 >> 2] + i4[I7 + 36 >> 2], i4[A8 + 72 >> 2] = H4 + Y4, i4[A8 + 68 >> 2] = b5 + G4, i4[(C4 = A8 - -64 | 0) >> 2] = U4 + N4, i4[A8 + 60 >> 2] = K4 + S4, i4[A8 + 56 >> 2] = F4 + w4, i4[A8 + 52 >> 2] = k4 + p4, i4[A8 + 48 >> 2] = n5 + f4, i4[A8 + 44 >> 2] = h4 + D4, i4[A8 + 40 >> 2] = J4 + M4, R3(g6, A8 + 40 | 0), I7 = i4[A8 + 4 >> 2], h4 = i4[A8 + 84 >> 2], D4 = i4[A8 + 8 >> 2], n5 = i4[A8 + 88 >> 2], f4 = i4[A8 + 12 >> 2], k4 = i4[A8 + 92 >> 2], p4 = i4[A8 + 16 >> 2], F4 = i4[A8 + 96 >> 2], w4 = i4[A8 + 20 >> 2], K4 = i4[A8 + 100 >> 2], S4 = i4[A8 + 24 >> 2], U4 = i4[A8 + 104 >> 2], N4 = i4[A8 + 28 >> 2], b5 = i4[A8 + 108 >> 2], G4 = i4[A8 + 32 >> 2], H4 = i4[A8 + 112 >> 2], Y4 = i4[A8 >> 2], J4 = i4[A8 + 80 >> 2], Q5 = (M4 = i4[A8 + 116 >> 2]) - (B4 = i4[A8 + 36 >> 2]) | 0, i4[A8 + 116 >> 2] = Q5, o4 = H4 - G4 | 0, i4[A8 + 112 >> 2] = o4, E4 = b5 - N4 | 0, i4[A8 + 108 >> 2] = E4, a4 = U4 - S4 | 0, i4[A8 + 104 >> 2] = a4, _4 = K4 - w4 | 0, i4[A8 + 100 >> 2] = _4, c4 = F4 - p4 | 0, i4[A8 + 96 >> 2] = c4, t4 = k4 - f4 | 0, i4[A8 + 92 >> 2] = t4, r4 = n5 - D4 | 0, i4[A8 + 88 >> 2] = r4, e6 = h4 - I7 | 0, i4[A8 + 84 >> 2] = e6, y4 = J4 - Y4 | 0, i4[A8 + 80 >> 2] = y4, M4 = M4 + B4 | 0, i4[A8 + 76 >> 2] = M4, G4 = G4 + H4 | 0, i4[A8 + 72 >> 2] = G4, N4 = N4 + b5 | 0, i4[A8 + 68 >> 2] = N4, S4 = S4 + U4 | 0, i4[C4 >> 2] = S4, w4 = w4 + K4 | 0, i4[A8 + 60 >> 2] = w4, p4 = p4 + F4 | 0, i4[A8 + 56 >> 2] = p4, f4 = f4 + k4 | 0, i4[A8 + 52 >> 2] = f4, D4 = D4 + n5 | 0, i4[A8 + 48 >> 2] = D4, I7 = I7 + h4 | 0, i4[A8 + 44 >> 2] = I7, h4 = Y4 + J4 | 0, i4[A8 + 40 >> 2] = h4, n5 = i4[g6 >> 2], k4 = i4[g6 + 4 >> 2], F4 = i4[g6 + 8 >> 2], K4 = i4[g6 + 12 >> 2], U4 = i4[g6 + 16 >> 2], b5 = i4[g6 + 20 >> 2], H4 = i4[g6 + 24 >> 2], Y4 = i4[g6 + 28 >> 2], J4 = i4[g6 + 32 >> 2], i4[A8 + 36 >> 2] = i4[g6 + 36 >> 2] - M4, i4[A8 + 32 >> 2] = J4 - G4, i4[A8 + 28 >> 2] = Y4 - N4, i4[A8 + 24 >> 2] = H4 - S4, i4[A8 + 20 >> 2] = b5 - w4, i4[A8 + 16 >> 2] = U4 - p4, i4[A8 + 12 >> 2] = K4 - f4, i4[A8 + 8 >> 2] = F4 - D4, i4[A8 + 4 >> 2] = k4 - I7, i4[A8 >> 2] = n5 - h4, I7 = i4[A8 + 124 >> 2], h4 = i4[A8 + 128 >> 2], D4 = i4[A8 + 132 >> 2], n5 = i4[A8 + 136 >> 2], f4 = i4[A8 + 140 >> 2], k4 = i4[A8 + 144 >> 2], p4 = i4[A8 + 148 >> 2], F4 = i4[A8 + 152 >> 2], w4 = i4[A8 + 120 >> 2], i4[A8 + 156 >> 2] = i4[A8 + 156 >> 2] - Q5, i4[A8 + 152 >> 2] = F4 - o4, i4[A8 + 148 >> 2] = p4 - E4, i4[A8 + 144 >> 2] = k4 - a4, i4[A8 + 140 >> 2] = f4 - _4, i4[A8 + 136 >> 2] = n5 - c4, i4[A8 + 132 >> 2] = D4 - t4, i4[A8 + 128 >> 2] = h4 - r4, i4[A8 + 124 >> 2] = I7 - e6, i4[A8 + 120 >> 2] = w4 - y4, s3 = g6 + 48 | 0;
                    }
                    function UA(A8, I7, g6, B4) {
                      var Q5, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0;
                      if (s3 = Q5 = s3 - 288 | 0, g6 | B4) if (E4 = (B4 << 3 | g6 >>> 29) + (a4 = c4 = i4[A8 + 36 >> 2]) | 0, _4 = (t4 = i4[A8 + 32 >> 2]) + (r4 = g6 << 3) | 0, i4[A8 + 32 >> 2] = _4, i4[A8 + 36 >> 2] = _4 >>> 0 < r4 >>> 0 ? E4 + 1 | 0 : E4, c4 = A8 + 40 | 0, (0 | B4) == (0 | (_4 = f4 = 0 - ((E4 = 0) + ((r4 = 63 & ((7 & a4) << 29 | t4 >>> 3)) >>> 0 > 64) | 0) | 0)) & g6 >>> 0 >= (t4 = 64 - r4 | 0) >>> 0 | B4 >>> 0 > _4 >>> 0) {
                        if (a4 = 0, _4 = 0, !E4 & (63 ^ r4) >>> 0 >= 3 | E4) for (p4 = 124 & t4; C3[(E4 = a4 + r4 | 0) + c4 | 0] = o3[I7 + a4 | 0], C3[c4 + (r4 + (E4 = 1 | a4) | 0) | 0] = o3[I7 + E4 | 0], C3[c4 + (r4 + (E4 = 2 | a4) | 0) | 0] = o3[I7 + E4 | 0], C3[c4 + (r4 + (E4 = 3 | a4) | 0) | 0] = o3[I7 + E4 | 0], E4 = _4, _4 = (a4 = a4 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, E4 = h4, h4 = E4 = (e6 = e6 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, (0 | e6) != (0 | p4) | (0 | D4) != (0 | E4); ) ;
                        if (h4 = E4 = 0, E4 | (e6 = 3 & t4)) for (; C3[(E4 = a4 + r4 | 0) + c4 | 0] = o3[I7 + a4 | 0], E4 = _4, _4 = (a4 = a4 + 1 | 0) ? E4 : E4 + 1 | 0, E4 = D4, D4 = E4 = (y4 = y4 + 1 | 0) ? E4 : E4 + 1 | 0, (0 | e6) != (0 | y4) | (0 | h4) != (0 | E4); ) ;
                        if (J3(A8, c4, Q5, a4 = Q5 + 256 | 0), I7 = I7 + t4 | 0, !(B4 = B4 - ((g6 >>> 0 < t4 >>> 0) + f4 | 0) | 0) & (g6 = g6 - t4 | 0) >>> 0 > 63 | B4) for (; J3(A8, I7, Q5, a4), I7 = I7 - -64 | 0, E4 = B4 - 1 | 0, !(B4 = (g6 = g6 + -64 | 0) >>> 0 < 4294967232 ? E4 + 1 | 0 : E4) & g6 >>> 0 > 63 | B4; ) ;
                        if (g6 | B4) {
                          if (A8 = 3 & g6, y4 = 0, D4 = 0, a4 = 0, _4 = 0, !B4 & g6 >>> 0 >= 4 | B4) for (e6 = 60 & g6, t4 = 0, g6 = 0, B4 = 0; C3[a4 + c4 | 0] = o3[I7 + a4 | 0], C3[(E4 = 1 | a4) + c4 | 0] = o3[I7 + E4 | 0], C3[(E4 = 2 | a4) + c4 | 0] = o3[I7 + E4 | 0], C3[(E4 = 3 | a4) + c4 | 0] = o3[I7 + E4 | 0], E4 = _4, _4 = (a4 = a4 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, E4 = B4, B4 = E4 = (g6 = g6 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, (0 | g6) != (0 | e6) | (0 | t4) != (0 | E4); ) ;
                          if (A8 | h4) for (; C3[a4 + c4 | 0] = o3[I7 + a4 | 0], _4 = (a4 = a4 + 1 | 0) ? _4 : _4 + 1 | 0, E4 = D4, D4 = E4 = (y4 = y4 + 1 | 0) ? E4 : E4 + 1 | 0, (0 | A8) != (0 | y4) | (0 | h4) != (0 | E4); ) ;
                        }
                        XC(Q5, 288);
                      } else {
                        if (a4 = 0, _4 = 0, !B4 & g6 >>> 0 >= 4 | B4) for (A8 = -4 & g6; C3[(E4 = a4 + r4 | 0) + c4 | 0] = o3[I7 + a4 | 0], C3[c4 + (t4 = r4 + (E4 = 1 | a4) | 0) | 0] = o3[I7 + E4 | 0], C3[c4 + (t4 = r4 + (E4 = 2 | a4) | 0) | 0] = o3[I7 + E4 | 0], C3[c4 + (t4 = r4 + (E4 = 3 | a4) | 0) | 0] = o3[I7 + E4 | 0], E4 = _4, _4 = (a4 = a4 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, E4 = h4, h4 = E4 = (e6 = e6 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, (0 | A8) != (0 | e6) | (0 | B4) != (0 | E4); ) ;
                        if ((g6 &= 3) | (A8 = 0)) for (; C3[(B4 = a4 + r4 | 0) + c4 | 0] = o3[I7 + a4 | 0], _4 = (a4 = a4 + 1 | 0) ? _4 : _4 + 1 | 0, E4 = D4, D4 = E4 = (y4 = y4 + 1 | 0) ? E4 : E4 + 1 | 0, (0 | g6) != (0 | y4) | (0 | A8) != (0 | E4); ) ;
                      }
                      return s3 = Q5 + 288 | 0, 0;
                    }
                    function bA(A8, I7, g6, C4, B4, Q5) {
                      var o4 = 0;
                      i4[Q5 >> 2] = 8;
                      A: {
                        I: {
                          o4 = A8, o4 = (A8 = !I7 & A8 >>> 0 <= 32768) ? 32768 : o4;
                          g: {
                            C: {
                              if (!(A8 = A8 ? 0 : I7) & g6 >>> 5 >>> 0 <= o4 >>> 0 | A8) {
                                if (g6 >>> 0 >= 4096) break C;
                                I7 = 1;
                                break g;
                              }
                              if (i4[B4 >> 2] = 1, A8 = 1, (I7 = (o4 >>> 0) / (i4[Q5 >> 2] << 2 >>> 0) | 0) >>> 0 < 4) break A;
                              if (A8 = 2, I7 >>> 0 < 8) break A;
                              if (I7 >>> 0 < 16) return void (i4[C4 >> 2] = 3);
                              if (I7 >>> 0 < 32) return void (i4[C4 >> 2] = 4);
                              if (I7 >>> 0 < 64) return void (i4[C4 >> 2] = 5);
                              if (I7 >>> 0 < 128) return void (i4[C4 >> 2] = 6);
                              if (I7 >>> 0 < 256) return void (i4[C4 >> 2] = 7);
                              if (I7 >>> 0 < 512) return void (i4[C4 >> 2] = 8);
                              if (I7 >>> 0 < 1024) return void (i4[C4 >> 2] = 9);
                              if (I7 >>> 0 < 2048) return void (i4[C4 >> 2] = 10);
                              if (I7 >>> 0 < 4096) return void (i4[C4 >> 2] = 11);
                              if (I7 >>> 0 < 8192) return void (i4[C4 >> 2] = 12);
                              if (I7 >>> 0 < 16384) return void (i4[C4 >> 2] = 13);
                              if (I7 >>> 0 < 32768) return void (i4[C4 >> 2] = 14);
                              if (I7 >>> 0 < 65536) return void (i4[C4 >> 2] = 15);
                              if (I7 >>> 0 < 131072) return void (i4[C4 >> 2] = 16);
                              if (I7 >>> 0 < 262144) return void (i4[C4 >> 2] = 17);
                              if (I7 >>> 0 < 524288) return void (i4[C4 >> 2] = 18);
                              if (I7 >>> 0 < 1048576) return void (i4[C4 >> 2] = 19);
                              if (I7 >>> 0 < 2097152) return void (i4[C4 >> 2] = 20);
                              if (I7 >>> 0 < 4194304) return void (i4[C4 >> 2] = 21);
                              if (I7 >>> 0 < 8388608) return void (i4[C4 >> 2] = 22);
                              if (I7 >>> 0 < 16777216) return void (i4[C4 >> 2] = 23);
                              if (I7 >>> 0 >= 33554432) break I;
                              return void (i4[C4 >> 2] = 24);
                            }
                            I7 = 2, g6 >>> 0 < 8192 || (I7 = 3, g6 >>> 0 < 16384 || (I7 = 4, g6 >>> 0 < 32768 || (I7 = 5, g6 >>> 0 < 65536 || (I7 = 6, g6 >>> 0 < 131072 || (I7 = 7, g6 >>> 0 < 262144 || (I7 = 8, g6 >>> 0 < 524288 || (I7 = 9, g6 >>> 0 < 1048576 || (I7 = 10, g6 >>> 0 < 2097152 || (I7 = 11, g6 >>> 0 < 4194304 || (I7 = 12, g6 >>> 0 < 8388608 || (I7 = 13, g6 >>> 0 < 16777216 || (I7 = 14, g6 >>> 0 < 33554432 || (I7 = 15, g6 >>> 0 < 67108864 || (I7 = 16, g6 >>> 0 < 134217728 || (I7 = 17, g6 >>> 0 < 268435456 || (I7 = 18, g6 >>> 0 < 536870912 || (I7 = 19, g6 >>> 0 < 1073741824 || (I7 = (0 | g6) >= 0 ? 20 : 21))))))))))))))))));
                          }
                          return g6 = I7, i4[C4 >> 2] = g6, A8 = (I7 = A8) >>> 2 | 0, I7 = (3 & I7) << 30 | o4 >>> 2, C4 = 31 & g6, (63 & g6) >>> 0 >= 32 ? (g6 = 0, A8 = A8 >>> C4 | 0) : (g6 = A8 >>> C4 | 0, A8 = ((1 << C4) - 1 & A8) << 32 - C4 | I7 >>> C4), void (i4[B4 >> 2] = ((!g6 & A8 >>> 0 >= 1073741823 | g6 ? 1073741823 : A8) >>> 0) / E3[Q5 >> 2]);
                        }
                        A8 = I7 >>> 0 < 67108864 ? 25 : 26;
                      }
                      i4[C4 >> 2] = A8;
                    }
                    function HA(A8, I7, g6) {
                      var C4, B4, Q5, o4, E4, a4, _4, c4, t4 = 0;
                      s3 = C4 = s3 - 160 | 0, i4[A8 >> 2] = 1, i4[A8 + 4 >> 2] = 0, i4[A8 + 8 >> 2] = 0, i4[A8 + 12 >> 2] = 0, i4[A8 + 16 >> 2] = 0, i4[A8 + 20 >> 2] = 0, i4[A8 + 24 >> 2] = 0, i4[A8 + 28 >> 2] = 0, i4[A8 + 32 >> 2] = 0, i4[A8 + 44 >> 2] = 0, i4[A8 + 48 >> 2] = 0, i4[A8 + 36 >> 2] = 0, i4[A8 + 40 >> 2] = 1, i4[A8 + 52 >> 2] = 0, i4[A8 + 56 >> 2] = 0, i4[A8 + 60 >> 2] = 0, i4[A8 + 64 >> 2] = 0, i4[A8 + 68 >> 2] = 0, i4[A8 + 72 >> 2] = 0, i4[A8 + 76 >> 2] = 0, i4[A8 + 80 >> 2] = 1, bg(A8 + 84 | 0, 0, 76), NA(A8, I7, (255 & (1 ^ (t4 = g6 - ((g6 >> 31 & g6) << 1) | 0))) - 1 >>> 31 | 0), NA(A8, I7 + 160 | 0, (255 & (2 ^ t4)) - 1 >>> 31 | 0), NA(A8, I7 + 320 | 0, (255 & (3 ^ t4)) - 1 >>> 31 | 0), NA(A8, I7 + 480 | 0, (255 & (4 ^ t4)) - 1 >>> 31 | 0), NA(A8, I7 + 640 | 0, (255 & (5 ^ t4)) - 1 >>> 31 | 0), NA(A8, I7 + 800 | 0, (255 & (6 ^ t4)) - 1 >>> 31 | 0), NA(A8, I7 + 960 | 0, (255 & (7 ^ t4)) - 1 >>> 31 | 0), NA(A8, I7 + 1120 | 0, (255 & (8 ^ t4)) - 1 >>> 31 | 0), I7 = i4[A8 + 76 >> 2], i4[C4 + 32 >> 2] = i4[A8 + 72 >> 2], i4[C4 + 36 >> 2] = I7, t4 = i4[4 + (I7 = A8 - -64 | 0) >> 2], i4[C4 + 24 >> 2] = i4[I7 >> 2], i4[C4 + 28 >> 2] = t4, I7 = i4[A8 + 60 >> 2], i4[C4 + 16 >> 2] = i4[A8 + 56 >> 2], i4[C4 + 20 >> 2] = I7, I7 = i4[A8 + 52 >> 2], i4[C4 + 8 >> 2] = i4[A8 + 48 >> 2], i4[C4 + 12 >> 2] = I7, I7 = i4[A8 + 44 >> 2], i4[C4 >> 2] = i4[A8 + 40 >> 2], i4[C4 + 4 >> 2] = I7, I7 = i4[A8 + 36 >> 2], i4[C4 + 72 >> 2] = i4[A8 + 32 >> 2], i4[C4 + 76 >> 2] = I7, t4 = i4[A8 + 28 >> 2], i4[(I7 = C4 - -64 | 0) >> 2] = i4[A8 + 24 >> 2], i4[I7 + 4 >> 2] = t4, I7 = i4[A8 + 20 >> 2], i4[C4 + 56 >> 2] = i4[A8 + 16 >> 2], i4[C4 + 60 >> 2] = I7, I7 = i4[A8 + 12 >> 2], i4[C4 + 48 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 52 >> 2] = I7, I7 = i4[A8 + 4 >> 2], i4[C4 + 40 >> 2] = i4[A8 >> 2], i4[C4 + 44 >> 2] = I7, I7 = i4[A8 + 92 >> 2], i4[C4 + 88 >> 2] = i4[A8 + 88 >> 2], i4[C4 + 92 >> 2] = I7, I7 = i4[A8 + 100 >> 2], i4[C4 + 96 >> 2] = i4[A8 + 96 >> 2], i4[C4 + 100 >> 2] = I7, I7 = i4[A8 + 108 >> 2], i4[C4 + 104 >> 2] = i4[A8 + 104 >> 2], i4[C4 + 108 >> 2] = I7, I7 = i4[A8 + 116 >> 2], i4[C4 + 112 >> 2] = i4[A8 + 112 >> 2], i4[C4 + 116 >> 2] = I7, I7 = i4[A8 + 84 >> 2], i4[C4 + 80 >> 2] = i4[A8 + 80 >> 2], i4[C4 + 84 >> 2] = I7, I7 = i4[A8 + 124 >> 2], t4 = i4[A8 + 128 >> 2], B4 = i4[A8 + 132 >> 2], Q5 = i4[A8 + 136 >> 2], o4 = i4[A8 + 140 >> 2], E4 = i4[A8 + 144 >> 2], a4 = i4[A8 + 148 >> 2], _4 = i4[A8 + 152 >> 2], c4 = i4[A8 + 120 >> 2], i4[C4 + 156 >> 2] = 0 - i4[A8 + 156 >> 2], i4[C4 + 152 >> 2] = 0 - _4, i4[C4 + 148 >> 2] = 0 - a4, i4[C4 + 144 >> 2] = 0 - E4, i4[C4 + 140 >> 2] = 0 - o4, i4[C4 + 136 >> 2] = 0 - Q5, i4[C4 + 132 >> 2] = 0 - B4, i4[C4 + 128 >> 2] = 0 - t4, i4[C4 + 124 >> 2] = 0 - I7, i4[C4 + 120 >> 2] = 0 - c4, NA(A8, C4, (128 & g6) >>> 7 | 0), s3 = C4 + 160 | 0;
                    }
                    function YA(A8, I7) {
                      A8 |= 0, I7 |= 0;
                      var g6, B4, Q5, E4, a4, _4 = 0, c4 = 0, t4 = 0;
                      return s3 = c4 = s3 - 192 | 0, ag(c4, 32), FI(I7, c4, 32, 0), C3[0 | I7] = 248 & o3[0 | I7], C3[I7 + 31 | 0] = 63 & o3[I7 + 31 | 0] | 64, nA(t4 = c4 + 32 | 0, I7), tg(A8, t4), g6 = c4, t4 = i4[c4 + 28 >> 2], c4 = i4[c4 + 24 >> 2], C3[I7 + 24 | 0] = c4, C3[I7 + 25 | 0] = c4 >>> 8, C3[I7 + 26 | 0] = c4 >>> 16, C3[I7 + 27 | 0] = c4 >>> 24, C3[I7 + 28 | 0] = t4, C3[I7 + 29 | 0] = t4 >>> 8, C3[I7 + 30 | 0] = t4 >>> 16, C3[I7 + 31 | 0] = t4 >>> 24, t4 = i4[g6 + 20 >> 2], c4 = i4[g6 + 16 >> 2], C3[I7 + 16 | 0] = c4, C3[I7 + 17 | 0] = c4 >>> 8, C3[I7 + 18 | 0] = c4 >>> 16, C3[I7 + 19 | 0] = c4 >>> 24, C3[I7 + 20 | 0] = t4, C3[I7 + 21 | 0] = t4 >>> 8, C3[I7 + 22 | 0] = t4 >>> 16, C3[I7 + 23 | 0] = t4 >>> 24, t4 = i4[g6 + 12 >> 2], c4 = i4[g6 + 8 >> 2], C3[I7 + 8 | 0] = c4, C3[I7 + 9 | 0] = c4 >>> 8, C3[I7 + 10 | 0] = c4 >>> 16, C3[I7 + 11 | 0] = c4 >>> 24, C3[I7 + 12 | 0] = t4, C3[I7 + 13 | 0] = t4 >>> 8, C3[I7 + 14 | 0] = t4 >>> 16, C3[I7 + 15 | 0] = t4 >>> 24, t4 = i4[g6 + 4 >> 2], c4 = i4[g6 >> 2], C3[0 | I7] = c4, C3[I7 + 1 | 0] = c4 >>> 8, C3[I7 + 2 | 0] = c4 >>> 16, C3[I7 + 3 | 0] = c4 >>> 24, C3[I7 + 4 | 0] = t4, C3[I7 + 5 | 0] = t4 >>> 8, C3[I7 + 6 | 0] = t4 >>> 16, C3[I7 + 7 | 0] = t4 >>> 24, B4 = o3[(_4 = A8) + 8 | 0] | o3[_4 + 9 | 0] << 8 | o3[_4 + 10 | 0] << 16 | o3[_4 + 11 | 0] << 24, Q5 = o3[_4 + 12 | 0] | o3[_4 + 13 | 0] << 8 | o3[_4 + 14 | 0] << 16 | o3[_4 + 15 | 0] << 24, E4 = o3[_4 + 16 | 0] | o3[_4 + 17 | 0] << 8 | o3[_4 + 18 | 0] << 16 | o3[_4 + 19 | 0] << 24, t4 = o3[_4 + 20 | 0] | o3[_4 + 21 | 0] << 8 | o3[_4 + 22 | 0] << 16 | o3[_4 + 23 | 0] << 24, c4 = o3[0 | _4] | o3[_4 + 1 | 0] << 8 | o3[_4 + 2 | 0] << 16 | o3[_4 + 3 | 0] << 24, A8 = o3[_4 + 4 | 0] | o3[_4 + 5 | 0] << 8 | o3[_4 + 6 | 0] << 16 | o3[_4 + 7 | 0] << 24, a4 = o3[_4 + 28 | 0] | o3[_4 + 29 | 0] << 8 | o3[_4 + 30 | 0] << 16 | o3[_4 + 31 | 0] << 24, _4 = o3[_4 + 24 | 0] | o3[_4 + 25 | 0] << 8 | o3[_4 + 26 | 0] << 16 | o3[_4 + 27 | 0] << 24, C3[I7 + 56 | 0] = _4, C3[I7 + 57 | 0] = _4 >>> 8, C3[I7 + 58 | 0] = _4 >>> 16, C3[I7 + 59 | 0] = _4 >>> 24, C3[I7 + 60 | 0] = a4, C3[I7 + 61 | 0] = a4 >>> 8, C3[I7 + 62 | 0] = a4 >>> 16, C3[I7 + 63 | 0] = a4 >>> 24, C3[I7 + 48 | 0] = E4, C3[I7 + 49 | 0] = E4 >>> 8, C3[I7 + 50 | 0] = E4 >>> 16, C3[I7 + 51 | 0] = E4 >>> 24, C3[I7 + 52 | 0] = t4, C3[I7 + 53 | 0] = t4 >>> 8, C3[I7 + 54 | 0] = t4 >>> 16, C3[I7 + 55 | 0] = t4 >>> 24, C3[I7 + 40 | 0] = B4, C3[I7 + 41 | 0] = B4 >>> 8, C3[I7 + 42 | 0] = B4 >>> 16, C3[I7 + 43 | 0] = B4 >>> 24, C3[I7 + 44 | 0] = Q5, C3[I7 + 45 | 0] = Q5 >>> 8, C3[I7 + 46 | 0] = Q5 >>> 16, C3[I7 + 47 | 0] = Q5 >>> 24, C3[I7 + 32 | 0] = c4, C3[I7 + 33 | 0] = c4 >>> 8, C3[I7 + 34 | 0] = c4 >>> 16, C3[I7 + 35 | 0] = c4 >>> 24, C3[I7 + 36 | 0] = A8, C3[I7 + 37 | 0] = A8 >>> 8, C3[I7 + 38 | 0] = A8 >>> 16, C3[I7 + 39 | 0] = A8 >>> 24, XC(g6, 32), s3 = g6 + 192 | 0, 0;
                    }
                    function JA(A8, I7) {
                      I7 |= 0;
                      var g6, B4, Q5 = 0, o4 = 0, E4 = 0, a4 = 0;
                      return s3 = g6 = s3 - 288 | 0, o4 = 40 + ((Q5 = i4[32 + (A8 |= 0) >> 2] >>> 3 & 63) + A8 | 0) | 0, Q5 >>> 0 >= 56 ? (Ng(o4, 35520, 64 - Q5 | 0), J3(A8, A8 + 40 | 0, g6, g6 + 256 | 0), i4[A8 + 88 >> 2] = 0, i4[A8 + 92 >> 2] = 0, i4[A8 + 80 >> 2] = 0, i4[A8 + 84 >> 2] = 0, i4[A8 + 72 >> 2] = 0, i4[A8 + 76 >> 2] = 0, i4[(Q5 = A8 - -64 | 0) >> 2] = 0, i4[Q5 + 4 >> 2] = 0, i4[A8 + 56 >> 2] = 0, i4[A8 + 60 >> 2] = 0, i4[A8 + 48 >> 2] = 0, i4[A8 + 52 >> 2] = 0, i4[A8 + 40 >> 2] = 0, i4[A8 + 44 >> 2] = 0) : Ng(o4, 35520, 56 - Q5 | 0), E4 = (Q5 = 16711680 & (o4 = i4[A8 + 32 >> 2])) >>> 8 | 0, a4 = Q5 << 24, B4 = (Q5 = -16777216 & o4) >>> 24 | 0, Q5 = (a4 |= Q5 << 8) | -16777216 & ((255 & (Q5 = i4[A8 + 36 >> 2])) << 24 | o4 >>> 8) | 16711680 & ((16777215 & Q5) << 8 | o4 >>> 24) | Q5 >>> 8 & 65280 | Q5 >>> 24, C3[A8 + 96 | 0] = Q5, C3[A8 + 97 | 0] = Q5 >>> 8, C3[A8 + 98 | 0] = Q5 >>> 16, C3[A8 + 99 | 0] = Q5 >>> 24, Q5 = E4 | B4 | o4 << 24 | (65280 & o4) << 8, Q5 |= E4 = 0, C3[A8 + 100 | 0] = Q5, C3[A8 + 101 | 0] = Q5 >>> 8, C3[A8 + 102 | 0] = Q5 >>> 16, C3[A8 + 103 | 0] = Q5 >>> 24, J3(A8, A8 + 40 | 0, g6, g6 + 256 | 0), Q5 = (Q5 = i4[A8 >> 2]) << 24 | (65280 & Q5) << 8 | Q5 >>> 8 & 65280 | Q5 >>> 24, C3[0 | I7] = Q5, C3[I7 + 1 | 0] = Q5 >>> 8, C3[I7 + 2 | 0] = Q5 >>> 16, C3[I7 + 3 | 0] = Q5 >>> 24, Q5 = (Q5 = i4[A8 + 4 >> 2]) << 24 | (65280 & Q5) << 8 | Q5 >>> 8 & 65280 | Q5 >>> 24, C3[I7 + 4 | 0] = Q5, C3[I7 + 5 | 0] = Q5 >>> 8, C3[I7 + 6 | 0] = Q5 >>> 16, C3[I7 + 7 | 0] = Q5 >>> 24, Q5 = (Q5 = i4[A8 + 8 >> 2]) << 24 | (65280 & Q5) << 8 | Q5 >>> 8 & 65280 | Q5 >>> 24, C3[I7 + 8 | 0] = Q5, C3[I7 + 9 | 0] = Q5 >>> 8, C3[I7 + 10 | 0] = Q5 >>> 16, C3[I7 + 11 | 0] = Q5 >>> 24, Q5 = (Q5 = i4[A8 + 12 >> 2]) << 24 | (65280 & Q5) << 8 | Q5 >>> 8 & 65280 | Q5 >>> 24, C3[I7 + 12 | 0] = Q5, C3[I7 + 13 | 0] = Q5 >>> 8, C3[I7 + 14 | 0] = Q5 >>> 16, C3[I7 + 15 | 0] = Q5 >>> 24, Q5 = (Q5 = i4[A8 + 16 >> 2]) << 24 | (65280 & Q5) << 8 | Q5 >>> 8 & 65280 | Q5 >>> 24, C3[I7 + 16 | 0] = Q5, C3[I7 + 17 | 0] = Q5 >>> 8, C3[I7 + 18 | 0] = Q5 >>> 16, C3[I7 + 19 | 0] = Q5 >>> 24, Q5 = (Q5 = i4[A8 + 20 >> 2]) << 24 | (65280 & Q5) << 8 | Q5 >>> 8 & 65280 | Q5 >>> 24, C3[I7 + 20 | 0] = Q5, C3[I7 + 21 | 0] = Q5 >>> 8, C3[I7 + 22 | 0] = Q5 >>> 16, C3[I7 + 23 | 0] = Q5 >>> 24, Q5 = (Q5 = i4[A8 + 24 >> 2]) << 24 | (65280 & Q5) << 8 | Q5 >>> 8 & 65280 | Q5 >>> 24, C3[I7 + 24 | 0] = Q5, C3[I7 + 25 | 0] = Q5 >>> 8, C3[I7 + 26 | 0] = Q5 >>> 16, C3[I7 + 27 | 0] = Q5 >>> 24, Q5 = (Q5 = i4[A8 + 28 >> 2]) << 24 | (65280 & Q5) << 8 | Q5 >>> 8 & 65280 | Q5 >>> 24, C3[I7 + 28 | 0] = Q5, C3[I7 + 29 | 0] = Q5 >>> 8, C3[I7 + 30 | 0] = Q5 >>> 16, C3[I7 + 31 | 0] = Q5 >>> 24, XC(g6, 288), XC(A8, 104), s3 = g6 + 288 | 0, 0;
                    }
                    function dA(A8, I7) {
                      A8 |= 0;
                      var g6, B4 = 0;
                      s3 = g6 = s3 + -64 | 0, B4 = o3[60 + (I7 |= 0) | 0] | o3[I7 + 61 | 0] << 8 | o3[I7 + 62 | 0] << 16 | o3[I7 + 63 | 0] << 24, i4[g6 + 56 >> 2] = o3[I7 + 56 | 0] | o3[I7 + 57 | 0] << 8 | o3[I7 + 58 | 0] << 16 | o3[I7 + 59 | 0] << 24, i4[g6 + 60 >> 2] = B4, B4 = o3[I7 + 52 | 0] | o3[I7 + 53 | 0] << 8 | o3[I7 + 54 | 0] << 16 | o3[I7 + 55 | 0] << 24, i4[g6 + 48 >> 2] = o3[I7 + 48 | 0] | o3[I7 + 49 | 0] << 8 | o3[I7 + 50 | 0] << 16 | o3[I7 + 51 | 0] << 24, i4[g6 + 52 >> 2] = B4, B4 = o3[I7 + 44 | 0] | o3[I7 + 45 | 0] << 8 | o3[I7 + 46 | 0] << 16 | o3[I7 + 47 | 0] << 24, i4[g6 + 40 >> 2] = o3[I7 + 40 | 0] | o3[I7 + 41 | 0] << 8 | o3[I7 + 42 | 0] << 16 | o3[I7 + 43 | 0] << 24, i4[g6 + 44 >> 2] = B4, B4 = o3[I7 + 36 | 0] | o3[I7 + 37 | 0] << 8 | o3[I7 + 38 | 0] << 16 | o3[I7 + 39 | 0] << 24, i4[g6 + 32 >> 2] = o3[I7 + 32 | 0] | o3[I7 + 33 | 0] << 8 | o3[I7 + 34 | 0] << 16 | o3[I7 + 35 | 0] << 24, i4[g6 + 36 >> 2] = B4, B4 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24, i4[g6 + 24 >> 2] = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, i4[g6 + 28 >> 2] = B4, B4 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, i4[g6 + 16 >> 2] = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, i4[g6 + 20 >> 2] = B4, B4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, i4[g6 >> 2] = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, i4[g6 + 4 >> 2] = B4, B4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, i4[g6 + 8 >> 2] = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, i4[g6 + 12 >> 2] = B4, S3(g6), I7 = i4[g6 + 28 >> 2], B4 = i4[g6 + 24 >> 2], C3[A8 + 24 | 0] = B4, C3[A8 + 25 | 0] = B4 >>> 8, C3[A8 + 26 | 0] = B4 >>> 16, C3[A8 + 27 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = i4[g6 + 20 >> 2], B4 = i4[g6 + 16 >> 2], C3[A8 + 16 | 0] = B4, C3[A8 + 17 | 0] = B4 >>> 8, C3[A8 + 18 | 0] = B4 >>> 16, C3[A8 + 19 | 0] = B4 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = i4[g6 + 12 >> 2], B4 = i4[g6 + 8 >> 2], C3[A8 + 8 | 0] = B4, C3[A8 + 9 | 0] = B4 >>> 8, C3[A8 + 10 | 0] = B4 >>> 16, C3[A8 + 11 | 0] = B4 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = i4[g6 + 4 >> 2], B4 = i4[g6 >> 2], C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, XC(g6, 64), s3 = g6 - -64 | 0;
                    }
                    function mA(A8, I7, g6) {
                      A8 |= 0, I7 |= 0;
                      var B4, Q5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0;
                      if (s3 = B4 = s3 - 96 | 0, (g6 |= 0) >>> 0 >= 65 && ($I(A8), UA(A8, I7, g6, 0), JA(A8, B4), g6 = 32, I7 = B4), $I(A8), i4[B4 + 88 >> 2] = 909522486, i4[B4 + 92 >> 2] = 909522486, i4[B4 + 80 >> 2] = 909522486, i4[B4 + 84 >> 2] = 909522486, i4[B4 + 72 >> 2] = 909522486, i4[B4 + 76 >> 2] = 909522486, i4[(a4 = r4 = B4 - -64 | 0) >> 2] = 909522486, i4[a4 + 4 >> 2] = 909522486, i4[B4 + 56 >> 2] = 909522486, i4[B4 + 60 >> 2] = 909522486, i4[B4 + 48 >> 2] = 909522486, i4[B4 + 52 >> 2] = 909522486, i4[B4 + 40 >> 2] = 909522486, i4[B4 + 44 >> 2] = 909522486, i4[B4 + 32 >> 2] = 909522486, i4[B4 + 36 >> 2] = 909522486, g6) {
                        if (g6 >>> 0 >= 4) for (_4 = 124 & g6; C3[0 | (E4 = (a4 = B4 + 32 | 0) + Q5 | 0)] = o3[0 | E4] ^ o3[I7 + Q5 | 0], C3[0 | (e6 = (E4 = 1 | Q5) + a4 | 0)] = o3[0 | e6] ^ o3[I7 + E4 | 0], C3[0 | (e6 = (E4 = 2 | Q5) + a4 | 0)] = o3[0 | e6] ^ o3[I7 + E4 | 0], C3[0 | (E4 = (E4 = a4) + (a4 = 3 | Q5) | 0)] = o3[0 | E4] ^ o3[I7 + a4 | 0], Q5 = Q5 + 4 | 0, (0 | _4) != (0 | (c4 = c4 + 4 | 0)); ) ;
                        if (c4 = 3 & g6) for (; C3[0 | (a4 = (B4 + 32 | 0) + Q5 | 0)] = o3[0 | a4] ^ o3[I7 + Q5 | 0], Q5 = Q5 + 1 | 0, (0 | c4) != (0 | (t4 = t4 + 1 | 0)); ) ;
                      }
                      if (UA(A8, B4 + 32 | 0, 64, 0), $I(a4 = A8 + 104 | 0), i4[B4 + 88 >> 2] = 1549556828, i4[B4 + 92 >> 2] = 1549556828, i4[B4 + 80 >> 2] = 1549556828, i4[B4 + 84 >> 2] = 1549556828, i4[B4 + 72 >> 2] = 1549556828, i4[B4 + 76 >> 2] = 1549556828, i4[r4 >> 2] = 1549556828, i4[r4 + 4 >> 2] = 1549556828, i4[B4 + 56 >> 2] = 1549556828, i4[B4 + 60 >> 2] = 1549556828, i4[B4 + 48 >> 2] = 1549556828, i4[B4 + 52 >> 2] = 1549556828, i4[B4 + 40 >> 2] = 1549556828, i4[B4 + 44 >> 2] = 1549556828, i4[B4 + 32 >> 2] = 1549556828, i4[B4 + 36 >> 2] = 1549556828, g6) {
                        if (t4 = 0, Q5 = 0, g6 >>> 0 >= 4) for (r4 = 124 & g6, c4 = 0; C3[0 | (_4 = (A8 = B4 + 32 | 0) + Q5 | 0)] = o3[0 | _4] ^ o3[I7 + Q5 | 0], C3[0 | (E4 = (_4 = 1 | Q5) + A8 | 0)] = o3[0 | E4] ^ o3[I7 + _4 | 0], C3[0 | (E4 = (_4 = 2 | Q5) + A8 | 0)] = o3[0 | E4] ^ o3[I7 + _4 | 0], C3[0 | (_4 = (E4 = A8) + (A8 = 3 | Q5) | 0)] = o3[0 | _4] ^ o3[A8 + I7 | 0], Q5 = Q5 + 4 | 0, (0 | r4) != (0 | (c4 = c4 + 4 | 0)); ) ;
                        if (A8 = 3 & g6) for (; C3[0 | (g6 = (B4 + 32 | 0) + Q5 | 0)] = o3[0 | g6] ^ o3[I7 + Q5 | 0], Q5 = Q5 + 1 | 0, (0 | A8) != (0 | (t4 = t4 + 1 | 0)); ) ;
                      }
                      return UA(a4, A8 = B4 + 32 | 0, 64, 0), XC(A8, 64), XC(B4, 32), s3 = B4 + 96 | 0, 0;
                    }
                    function lA(A8, I7, g6, C4, B4, o4, E4) {
                      var a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0;
                      if (I7 - 65 >>> 0 < 4294967232 | E4 >>> 0 > 64) A8 = -1;
                      else {
                        e6 = a4 = s3, s3 = a4 = a4 - 512 & -64;
                        A: {
                          I: if (!(!(!(C4 | B4) | g6) | !A8 | ((_4 = 255 & I7) - 65 & 255) >>> 0 <= 191 | !(!(I7 = 255 & E4) || o4) | I7 >>> 0 >= 65)) {
                            if (I7) {
                              if (!o4) break I;
                              bg(a4 - -64 | 0, 0, 293), i4[a4 + 56 >> 2] = 327033209, i4[a4 + 60 >> 2] = 1541459225, i4[a4 + 48 >> 2] = -79577749, i4[a4 + 52 >> 2] = 528734635, i4[a4 + 40 >> 2] = 725511199, i4[a4 + 44 >> 2] = -1694144372, i4[a4 + 32 >> 2] = -1377402159, i4[a4 + 36 >> 2] = 1359893119, i4[a4 + 24 >> 2] = 1595750129, i4[a4 + 28 >> 2] = -1521486534, i4[a4 + 16 >> 2] = -23791573, i4[a4 + 20 >> 2] = 1013904242, i4[a4 + 8 >> 2] = -2067093701, i4[a4 + 12 >> 2] = -1150833019, i4[a4 >> 2] = -222443256 ^ (I7 << 8 | _4), i4[a4 + 4 >> 2] = I7 >>> 24 ^ 1779033703, bg((E4 = a4 + 384 | 0) + I7 | 0, 0, 128 - I7 | 0), Ng(E4, o4, I7), Ng(a4 + 96 | 0, E4, 128), i4[a4 + 352 >> 2] = 128, XC(E4, 128), I7 = 128;
                            } else bg(a4 - -64 | 0, 0, 293), i4[a4 + 56 >> 2] = 327033209, i4[a4 + 60 >> 2] = 1541459225, i4[a4 + 48 >> 2] = -79577749, i4[a4 + 52 >> 2] = 528734635, i4[a4 + 40 >> 2] = 725511199, i4[a4 + 44 >> 2] = -1694144372, i4[a4 + 32 >> 2] = -1377402159, i4[a4 + 36 >> 2] = 1359893119, i4[a4 + 24 >> 2] = 1595750129, i4[a4 + 28 >> 2] = -1521486534, i4[a4 + 16 >> 2] = -23791573, i4[a4 + 20 >> 2] = 1013904242, i4[a4 + 8 >> 2] = -2067093701, i4[a4 + 12 >> 2] = -1150833019, i4[a4 >> 2] = -222443256 ^ _4, i4[a4 + 4 >> 2] = 1779033703, I7 = 0;
                            g: if (C4 | B4) for (y4 = a4 + 224 | 0, c4 = a4 + 96 | 0; ; ) {
                              if (E4 = I7 + c4 | 0, !B4 & C4 >>> 0 <= (o4 = 256 - I7 | 0) >>> 0) {
                                Ng(E4, g6, C4), i4[a4 + 352 >> 2] = C4 + i4[a4 + 352 >> 2];
                                break g;
                              }
                              if (Ng(E4, g6, o4), i4[a4 + 352 >> 2] = o4 + i4[a4 + 352 >> 2], t4 = I7 = i4[a4 + 68 >> 2], I7 = (r4 = (E4 = i4[a4 + 64 >> 2]) + 128 | 0) >>> 0 < 128 ? I7 + 1 | 0 : I7, i4[a4 + 64 >> 2] = r4, i4[a4 + 68 >> 2] = I7, I7 = i4[a4 + 76 >> 2], I7 = (t4 = E4 = -1 == (0 | t4) & E4 >>> 0 > 4294967167) >>> 0 > (E4 = E4 + i4[a4 + 72 >> 2] | 0) >>> 0 ? I7 + 1 | 0 : I7, i4[a4 + 72 >> 2] = E4, i4[a4 + 76 >> 2] = I7, p3(a4, c4), Ng(c4, y4, 128), I7 = i4[a4 + 352 >> 2] - 128 | 0, i4[a4 + 352 >> 2] = I7, g6 = g6 + o4 | 0, !((B4 = B4 - (C4 >>> 0 < o4 >>> 0) | 0) | (C4 = C4 - o4 | 0))) break;
                            }
                            AA(a4, A8, _4), s3 = e6;
                            break A;
                          }
                          rC(), Q4();
                        }
                        A8 = 0;
                      }
                      return A8;
                    }
                    function uA(A8, I7) {
                      A8 |= 0, I7 |= 0;
                      var g6, B4 = 0;
                      s3 = g6 = s3 - 128 | 0, i4[g6 + 80 >> 2] = 0, i4[g6 + 84 >> 2] = 0, i4[g6 + 88 >> 2] = 0, i4[g6 + 92 >> 2] = 0, i4[g6 + 40 >> 2] = 0, i4[g6 + 44 >> 2] = 0, i4[g6 + 48 >> 2] = 0, i4[g6 + 52 >> 2] = 0, i4[g6 + 56 >> 2] = 0, i4[g6 + 60 >> 2] = 0, B4 = i4[8799], i4[g6 + 104 >> 2] = i4[8798], i4[g6 + 108 >> 2] = B4, B4 = i4[8801], i4[g6 + 112 >> 2] = i4[8800], i4[g6 + 116 >> 2] = B4, B4 = i4[8803], i4[g6 + 120 >> 2] = i4[8802], i4[g6 + 124 >> 2] = B4, i4[g6 + 64 >> 2] = 0, i4[g6 + 68 >> 2] = 0, i4[g6 + 72 >> 2] = 0, i4[g6 + 76 >> 2] = 0, C3[g6 + 64 | 0] = 1, i4[g6 + 32 >> 2] = 0, i4[g6 + 36 >> 2] = 0, B4 = i4[8797], i4[g6 + 96 >> 2] = i4[8796], i4[g6 + 100 >> 2] = B4, B4 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24, i4[g6 + 24 >> 2] = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, i4[g6 + 28 >> 2] = B4, B4 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, i4[g6 + 16 >> 2] = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, i4[g6 + 20 >> 2] = B4, B4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, i4[g6 + 8 >> 2] = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, i4[g6 + 12 >> 2] = B4, B4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, i4[g6 >> 2] = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, i4[g6 + 4 >> 2] = B4, Eg(I7 = g6 - -64 | 0, g6), S3(I7), I7 = i4[g6 + 92 >> 2], B4 = i4[g6 + 88 >> 2], C3[A8 + 24 | 0] = B4, C3[A8 + 25 | 0] = B4 >>> 8, C3[A8 + 26 | 0] = B4 >>> 16, C3[A8 + 27 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = i4[g6 + 84 >> 2], B4 = i4[g6 + 80 >> 2], C3[A8 + 16 | 0] = B4, C3[A8 + 17 | 0] = B4 >>> 8, C3[A8 + 18 | 0] = B4 >>> 16, C3[A8 + 19 | 0] = B4 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = i4[g6 + 76 >> 2], B4 = i4[g6 + 72 >> 2], C3[A8 + 8 | 0] = B4, C3[A8 + 9 | 0] = B4 >>> 8, C3[A8 + 10 | 0] = B4 >>> 16, C3[A8 + 11 | 0] = B4 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = i4[g6 + 68 >> 2], B4 = i4[g6 + 64 >> 2], C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, s3 = g6 + 128 | 0;
                    }
                    function xA(A8, I7) {
                      A8 |= 0, I7 |= 0;
                      var g6, B4 = 0;
                      s3 = g6 = s3 - 128 | 0, i4[g6 + 80 >> 2] = 0, i4[g6 + 84 >> 2] = 0, i4[g6 + 88 >> 2] = 0, i4[g6 + 92 >> 2] = 0, i4[g6 + 40 >> 2] = 0, i4[g6 + 44 >> 2] = 0, i4[g6 + 48 >> 2] = 0, i4[g6 + 52 >> 2] = 0, i4[g6 + 56 >> 2] = 0, i4[g6 + 60 >> 2] = 0, B4 = i4[8799], i4[g6 + 104 >> 2] = i4[8798], i4[g6 + 108 >> 2] = B4, B4 = i4[8801], i4[g6 + 112 >> 2] = i4[8800], i4[g6 + 116 >> 2] = B4, B4 = i4[8803], i4[g6 + 120 >> 2] = i4[8802], i4[g6 + 124 >> 2] = B4, i4[g6 + 64 >> 2] = 0, i4[g6 + 68 >> 2] = 0, i4[g6 + 72 >> 2] = 0, i4[g6 + 76 >> 2] = 0, i4[g6 + 32 >> 2] = 0, i4[g6 + 36 >> 2] = 0, B4 = i4[8797], i4[g6 + 96 >> 2] = i4[8796], i4[g6 + 100 >> 2] = B4, B4 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, i4[g6 + 16 >> 2] = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, i4[g6 + 20 >> 2] = B4, B4 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24, i4[g6 + 24 >> 2] = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, i4[g6 + 28 >> 2] = B4, B4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24, i4[g6 >> 2] = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24, i4[g6 + 4 >> 2] = B4, B4 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, i4[g6 + 8 >> 2] = o3[I7 + 8 | 0] | o3[I7 + 9 | 0] << 8 | o3[I7 + 10 | 0] << 16 | o3[I7 + 11 | 0] << 24, i4[g6 + 12 >> 2] = B4, Eg(I7 = g6 - -64 | 0, g6), S3(I7), I7 = i4[g6 + 92 >> 2], B4 = i4[g6 + 88 >> 2], C3[A8 + 24 | 0] = B4, C3[A8 + 25 | 0] = B4 >>> 8, C3[A8 + 26 | 0] = B4 >>> 16, C3[A8 + 27 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = i4[g6 + 84 >> 2], B4 = i4[g6 + 80 >> 2], C3[A8 + 16 | 0] = B4, C3[A8 + 17 | 0] = B4 >>> 8, C3[A8 + 18 | 0] = B4 >>> 16, C3[A8 + 19 | 0] = B4 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = i4[g6 + 76 >> 2], B4 = i4[g6 + 72 >> 2], C3[A8 + 8 | 0] = B4, C3[A8 + 9 | 0] = B4 >>> 8, C3[A8 + 10 | 0] = B4 >>> 16, C3[A8 + 11 | 0] = B4 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = i4[g6 + 68 >> 2], B4 = i4[g6 + 64 >> 2], C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, s3 = g6 + 128 | 0;
                    }
                    function vA(A8, I7, g6, B4) {
                      var Q5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0;
                      A: {
                        if ((E4 = i4[A8 + 56 >> 2]) | (Q5 = i4[A8 + 60 >> 2])) {
                          if (e6 = _4 = 16 - E4 | 0, t4 = (_4 = (0 | (a4 = 0 - ((E4 >>> 0 > 16) + Q5 | 0) | 0)) == (0 | B4) & g6 >>> 0 > _4 >>> 0 | B4 >>> 0 > a4 >>> 0) ? e6 : g6, e6 = _4 = _4 ? a4 : B4, _4 | t4) {
                            if (_4 = A8 - -64 | 0, a4 = 0, E4 = 0, !e6 & t4 >>> 0 >= 4 | e6) for (r4 = -4 & t4; Q5 = a4 + i4[A8 + 56 >> 2] | 0, C3[Q5 + _4 | 0] = o3[I7 + a4 | 0], Q5 = (y4 = 1 | a4) + i4[A8 + 56 >> 2] | 0, C3[Q5 + _4 | 0] = o3[I7 + y4 | 0], Q5 = (y4 = 2 | a4) + i4[A8 + 56 >> 2] | 0, C3[Q5 + _4 | 0] = o3[I7 + y4 | 0], Q5 = (y4 = 3 | a4) + i4[A8 + 56 >> 2] | 0, C3[Q5 + _4 | 0] = o3[I7 + y4 | 0], Q5 = E4, E4 = (a4 = a4 + 4 | 0) >>> 0 < 4 ? Q5 + 1 | 0 : Q5, Q5 = h4, h4 = Q5 = (c4 = c4 + 4 | 0) >>> 0 < 4 ? Q5 + 1 | 0 : Q5, (0 | c4) != (0 | r4) | (0 | e6) != (0 | Q5); ) ;
                            if (h4 = Q5 = 0, Q5 | (c4 = 3 & t4)) for (; Q5 = a4 + i4[A8 + 56 >> 2] | 0, C3[Q5 + _4 | 0] = o3[I7 + a4 | 0], E4 = (a4 = a4 + 1 | 0) ? E4 : E4 + 1 | 0, Q5 = D4, D4 = Q5 = (s4 = s4 + 1 | 0) ? Q5 : Q5 + 1 | 0, (0 | c4) != (0 | s4) | (0 | h4) != (0 | Q5); ) ;
                            E4 = i4[A8 + 56 >> 2], Q5 = i4[A8 + 60 >> 2];
                          }
                          if (Q5 = Q5 + e6 | 0, Q5 = (E4 = E4 + t4 | 0) >>> 0 < t4 >>> 0 ? Q5 + 1 | 0 : Q5, i4[A8 + 56 >> 2] = E4, i4[A8 + 60 >> 2] = Q5, !Q5 & E4 >>> 0 < 16) break A;
                          rA(A8, A8 - -64 | 0, 16, 0), i4[A8 + 56 >> 2] = 0, i4[A8 + 60 >> 2] = 0, g6 = (E4 = g6) - t4 | 0, B4 = B4 - ((E4 >>> 0 < t4 >>> 0) + e6 | 0) | 0, I7 = I7 + t4 | 0;
                        }
                        if (!B4 & g6 >>> 0 >= 16 | B4 && (rA(A8, I7, E4 = -16 & g6, B4), g6 &= 15, B4 = 0, I7 = I7 + E4 | 0), g6 | B4) {
                          if (_4 = A8 - -64 | 0, s4 = 0, D4 = 0, a4 = 0, E4 = 0, !B4 & g6 >>> 0 >= 4 | B4) for (t4 = 12 & g6, e6 = 0, c4 = 0; Q5 = a4 + i4[A8 + 56 >> 2] | 0, C3[Q5 + _4 | 0] = o3[I7 + a4 | 0], Q5 = (r4 = 1 | a4) + i4[A8 + 56 >> 2] | 0, C3[Q5 + _4 | 0] = o3[I7 + r4 | 0], Q5 = (r4 = 2 | a4) + i4[A8 + 56 >> 2] | 0, C3[Q5 + _4 | 0] = o3[I7 + r4 | 0], Q5 = (r4 = 3 | a4) + i4[A8 + 56 >> 2] | 0, C3[Q5 + _4 | 0] = o3[I7 + r4 | 0], E4 = (a4 = a4 + 4 | 0) >>> 0 < 4 ? E4 + 1 | 0 : E4, Q5 = h4, h4 = Q5 = (c4 = c4 + 4 | 0) >>> 0 < 4 ? Q5 + 1 | 0 : Q5, (0 | t4) != (0 | c4) | (0 | e6) != (0 | Q5); ) ;
                          if (h4 = Q5 = 0, Q5 | (c4 = 3 & g6)) for (; Q5 = a4 + i4[A8 + 56 >> 2] | 0, C3[Q5 + _4 | 0] = o3[I7 + a4 | 0], E4 = (a4 = a4 + 1 | 0) ? E4 : E4 + 1 | 0, Q5 = D4, D4 = Q5 = (s4 = s4 + 1 | 0) ? Q5 : Q5 + 1 | 0, (0 | c4) != (0 | s4) | (0 | h4) != (0 | Q5); ) ;
                          E4 = B4 + i4[A8 + 60 >> 2] | 0, E4 = (I7 = g6 + i4[A8 + 56 >> 2] | 0) >>> 0 < g6 >>> 0 ? E4 + 1 | 0 : E4, i4[A8 + 56 >> 2] = I7, i4[A8 + 60 >> 2] = E4;
                        }
                      }
                    }
                    function RA(A8, I7, g6) {
                      var C4, B4 = 0, Q5 = 0, o4 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0;
                      s4 = i4[I7 + 4 >> 2], B4 = i4[A8 + 4 >> 2], h4 = i4[I7 + 8 >> 2], Q5 = i4[A8 + 8 >> 2], D4 = i4[I7 + 12 >> 2], o4 = i4[A8 + 12 >> 2], f4 = i4[I7 + 16 >> 2], E4 = i4[A8 + 16 >> 2], p4 = i4[I7 + 20 >> 2], a4 = i4[A8 + 20 >> 2], e6 = i4[I7 + 24 >> 2], _4 = i4[A8 + 24 >> 2], w4 = i4[I7 + 28 >> 2], c4 = i4[A8 + 28 >> 2], n5 = i4[I7 + 32 >> 2], t4 = i4[A8 + 32 >> 2], k4 = i4[I7 + 36 >> 2], r4 = i4[A8 + 36 >> 2], g6 = 0 - g6 | 0, y4 = i4[A8 >> 2], i4[A8 >> 2] = g6 & (y4 ^ i4[I7 >> 2]) ^ y4, i4[A8 + 36 >> 2] = r4 ^ g6 & (r4 ^ k4), i4[A8 + 32 >> 2] = t4 ^ g6 & (t4 ^ n5), i4[A8 + 28 >> 2] = c4 ^ g6 & (c4 ^ w4), i4[A8 + 24 >> 2] = _4 ^ g6 & (_4 ^ e6), i4[A8 + 20 >> 2] = a4 ^ g6 & (a4 ^ p4), i4[A8 + 16 >> 2] = E4 ^ g6 & (E4 ^ f4), i4[A8 + 12 >> 2] = o4 ^ g6 & (o4 ^ D4), i4[A8 + 8 >> 2] = Q5 ^ g6 & (Q5 ^ h4), i4[A8 + 4 >> 2] = B4 ^ g6 & (B4 ^ s4), B4 = i4[A8 + 44 >> 2], s4 = i4[I7 + 44 >> 2], Q5 = i4[A8 + 48 >> 2], h4 = i4[I7 + 48 >> 2], o4 = i4[A8 + 52 >> 2], D4 = i4[I7 + 52 >> 2], E4 = i4[A8 + 56 >> 2], f4 = i4[I7 + 56 >> 2], a4 = i4[A8 + 60 >> 2], p4 = i4[I7 + 60 >> 2], _4 = i4[(e6 = A8 - -64 | 0) >> 2], w4 = i4[I7 - -64 >> 2], c4 = i4[A8 + 68 >> 2], n5 = i4[I7 + 68 >> 2], t4 = i4[A8 + 72 >> 2], k4 = i4[I7 + 72 >> 2], r4 = i4[A8 + 40 >> 2], y4 = i4[I7 + 40 >> 2], C4 = i4[A8 + 76 >> 2], i4[A8 + 76 >> 2] = C4 ^ g6 & (i4[I7 + 76 >> 2] ^ C4), i4[A8 + 72 >> 2] = t4 ^ g6 & (t4 ^ k4), i4[A8 + 68 >> 2] = c4 ^ g6 & (c4 ^ n5), i4[e6 >> 2] = _4 ^ g6 & (_4 ^ w4), i4[A8 + 60 >> 2] = a4 ^ g6 & (a4 ^ p4), i4[A8 + 56 >> 2] = E4 ^ g6 & (E4 ^ f4), i4[A8 + 52 >> 2] = o4 ^ g6 & (o4 ^ D4), i4[A8 + 48 >> 2] = Q5 ^ g6 & (Q5 ^ h4), i4[A8 + 44 >> 2] = B4 ^ g6 & (B4 ^ s4), i4[A8 + 40 >> 2] = r4 ^ g6 & (r4 ^ y4), B4 = i4[A8 + 84 >> 2], s4 = i4[I7 + 84 >> 2], Q5 = i4[A8 + 88 >> 2], h4 = i4[I7 + 88 >> 2], o4 = i4[A8 + 92 >> 2], D4 = i4[I7 + 92 >> 2], E4 = i4[A8 + 96 >> 2], f4 = i4[I7 + 96 >> 2], a4 = i4[A8 + 100 >> 2], p4 = i4[I7 + 100 >> 2], _4 = i4[A8 + 104 >> 2], e6 = i4[I7 + 104 >> 2], c4 = i4[A8 + 108 >> 2], w4 = i4[I7 + 108 >> 2], t4 = i4[A8 + 112 >> 2], n5 = i4[I7 + 112 >> 2], r4 = i4[A8 + 80 >> 2], k4 = i4[I7 + 80 >> 2], y4 = i4[I7 + 116 >> 2], I7 = i4[A8 + 116 >> 2], i4[A8 + 116 >> 2] = g6 & (y4 ^ I7) ^ I7, i4[A8 + 112 >> 2] = t4 ^ g6 & (t4 ^ n5), i4[A8 + 108 >> 2] = c4 ^ g6 & (c4 ^ w4), i4[A8 + 104 >> 2] = _4 ^ g6 & (_4 ^ e6), i4[A8 + 100 >> 2] = a4 ^ g6 & (a4 ^ p4), i4[A8 + 96 >> 2] = E4 ^ g6 & (E4 ^ f4), i4[A8 + 92 >> 2] = o4 ^ g6 & (o4 ^ D4), i4[A8 + 88 >> 2] = Q5 ^ g6 & (Q5 ^ h4), i4[A8 + 84 >> 2] = B4 ^ g6 & (B4 ^ s4), i4[A8 + 80 >> 2] = r4 ^ g6 & (r4 ^ k4);
                    }
                    function LA(A8, I7) {
                      var g6, C4, B4 = 0;
                      for (s3 = g6 = s3 - 192 | 0, R3(C4 = g6 + 144 | 0, I7), R3(B4 = g6 + 96 | 0, C4), R3(B4, B4), b4(B4, I7, B4), b4(C4, C4, B4), R3(I7 = g6 + 48 | 0, C4), b4(B4, B4, I7), R3(I7, B4), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), b4(B4, I7, B4), R3(I7, B4), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), b4(I7, I7, B4), R3(g6, I7), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), b4(I7, g6, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), b4(B4, I7, B4), R3(I7, B4), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), R3(I7, I7), b4(I7, I7, B4), R3(g6, I7), I7 = 1; R3(g6, g6), 100 != (0 | (I7 = I7 + 1 | 0)); ) ;
                      b4(I7 = g6 + 48 | 0, gb4(B4 = g6 + 96 | 0, I7, B4), R3(B4, B4), R3(B4, B4), R3(B4, B4), R3(B4, B4), R3(B4, B4), b4(A8, B4, g6 + 144 | 0), s3 = g6 + 192 | 0;
                    }
                    function PA(A8, I7) {
                      var g6, C4 = 0, B4 = 0;
                      for (s3 = g6 = s3 - 144 | 0, R3(B4 = g6 + 96 | 0, I7), R3(C4 = g6 + 48 | 0, B4), R3(C4, C4), b4(C4, I7, C4), b4(B4, B4, C4), R3(B4, B4), b4(B4, C4, B4), R3(C4, B4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), b4(B4, C4, B4), R3(C4, B4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), b4(C4, C4, B4), R3(g6, C4), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), R3(g6, g6), b4(C4, g6, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), b4(B4, C4, B4), R3(C4, B4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), b4(C4, C4, B4), R3(g6, C4), C4 = 1; R3(g6, g6), 100 != (0 | (C4 = C4 + 1 | 0)); ) ;
                      b4(C4 = g6 + 48 | 0, g6, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), R3(C4, C4), b4(B4 = g6 + 96 | 0, C4, B4), R3(B4, B4), R3(B4, B4), b4(A8, B4, I7), s3 = g6 + 144 | 0;
                    }
                    function qA(A8, I7) {
                      var g6, B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, f4, p4, w4, n5, k4, F4, S4 = 0, N4 = 0, G4 = 0, M4 = 0;
                      s3 = g6 = s3 - 320 | 0, fA(B4 = A8 + 40 | 0, I7), i4[A8 + 84 >> 2] = 0, i4[A8 + 88 >> 2] = 0, i4[A8 + 80 >> 2] = 1, i4[A8 + 92 >> 2] = 0, i4[A8 + 96 >> 2] = 0, i4[A8 + 100 >> 2] = 0, i4[A8 + 104 >> 2] = 0, i4[A8 + 108 >> 2] = 0, i4[A8 + 112 >> 2] = 0, i4[A8 + 116 >> 2] = 0, R3(G4 = g6 + 240 | 0, B4), b4(N4 = g6 + 192 | 0, G4, 1584), M4 = -1, Q5 = i4[g6 + 240 >> 2] - 1 | 0, i4[g6 + 240 >> 2] = Q5, i4[g6 + 192 >> 2] = i4[g6 + 192 >> 2] + 1, E4 = i4[g6 + 244 >> 2], a4 = i4[g6 + 248 >> 2], _4 = i4[g6 + 252 >> 2], c4 = i4[g6 + 256 >> 2], t4 = i4[g6 + 260 >> 2], r4 = i4[g6 + 264 >> 2], e6 = i4[g6 + 268 >> 2], y4 = i4[g6 + 272 >> 2], h4 = i4[g6 + 276 >> 2], R3(S4 = g6 + 144 | 0, N4), b4(S4, S4, N4), R3(A8, S4), b4(A8, A8, N4), b4(A8, A8, G4), PA(A8, A8), b4(A8, A8, S4), b4(A8, A8, G4), R3(S4 = g6 + 96 | 0, A8), b4(S4, S4, N4), N4 = i4[g6 + 132 >> 2], i4[g6 + 84 >> 2] = N4 - h4, S4 = i4[g6 + 128 >> 2], i4[g6 + 80 >> 2] = S4 - y4, G4 = i4[g6 + 124 >> 2], i4[g6 + 76 >> 2] = G4 - e6, D4 = i4[g6 + 120 >> 2], i4[g6 + 72 >> 2] = D4 - r4, f4 = i4[g6 + 116 >> 2], i4[g6 + 68 >> 2] = f4 - t4, p4 = i4[g6 + 112 >> 2], i4[g6 + 64 >> 2] = p4 - c4, w4 = i4[g6 + 108 >> 2], i4[g6 + 60 >> 2] = w4 - _4, n5 = i4[g6 + 104 >> 2], i4[g6 + 56 >> 2] = n5 - a4, k4 = i4[g6 + 100 >> 2], i4[g6 + 52 >> 2] = k4 - E4, F4 = i4[g6 + 96 >> 2], i4[g6 + 48 >> 2] = F4 - Q5, QI(g6, g6 + 48 | 0);
                      A: {
                        if (!GI(g6, 32)) {
                          if (i4[g6 + 36 >> 2] = N4 + h4, i4[g6 + 32 >> 2] = S4 + y4, i4[g6 + 28 >> 2] = G4 + e6, i4[g6 + 24 >> 2] = r4 + D4, i4[g6 + 20 >> 2] = t4 + f4, i4[g6 + 16 >> 2] = c4 + p4, i4[g6 + 12 >> 2] = _4 + w4, i4[g6 + 8 >> 2] = a4 + n5, i4[g6 + 4 >> 2] = E4 + k4, i4[g6 >> 2] = Q5 + F4, QI(N4 = g6 + 288 | 0, g6), !GI(N4, 32)) break A;
                          b4(A8, A8, 1632);
                        }
                        QI(g6 + 288 | 0, A8), (1 & C3[g6 + 288 | 0]) == (o3[I7 + 31 | 0] >>> 7 | 0) && (i4[A8 >> 2] = 0 - i4[A8 >> 2], i4[A8 + 36 >> 2] = 0 - i4[A8 + 36 >> 2], i4[A8 + 32 >> 2] = 0 - i4[A8 + 32 >> 2], i4[A8 + 28 >> 2] = 0 - i4[A8 + 28 >> 2], i4[A8 + 24 >> 2] = 0 - i4[A8 + 24 >> 2], i4[A8 + 20 >> 2] = 0 - i4[A8 + 20 >> 2], i4[A8 + 16 >> 2] = 0 - i4[A8 + 16 >> 2], i4[A8 + 12 >> 2] = 0 - i4[A8 + 12 >> 2], i4[A8 + 8 >> 2] = 0 - i4[A8 + 8 >> 2], i4[A8 + 4 >> 2] = 0 - i4[A8 + 4 >> 2]), b4(A8 + 120 | 0, A8, B4), M4 = 0;
                      }
                      return s3 = g6 + 320 | 0, M4;
                    }
                    function zA(A8, I7, g6) {
                      var C4, B4, Q5, o4, E4, _4, c4, t4, r4 = 0;
                      s3 = C4 = s3 - 128 | 0, i4[A8 >> 2] = 1, i4[A8 + 4 >> 2] = 0, i4[A8 + 8 >> 2] = 0, i4[A8 + 12 >> 2] = 0, i4[A8 + 16 >> 2] = 0, i4[A8 + 20 >> 2] = 0, i4[A8 + 24 >> 2] = 0, i4[A8 + 28 >> 2] = 0, i4[A8 + 32 >> 2] = 0, i4[A8 + 36 >> 2] = 0, i4[A8 + 40 >> 2] = 1, bg(A8 + 44 | 0, 0, 76), RA(A8, I7 = a3(I7, 960) + 2992 | 0, (255 & (1 ^ (r4 = g6 - ((g6 >> 31 & g6) << 1) | 0))) - 1 >>> 31 | 0), RA(A8, I7 + 120 | 0, (255 & (2 ^ r4)) - 1 >>> 31 | 0), RA(A8, I7 + 240 | 0, (255 & (3 ^ r4)) - 1 >>> 31 | 0), RA(A8, I7 + 360 | 0, (255 & (4 ^ r4)) - 1 >>> 31 | 0), RA(A8, I7 + 480 | 0, (255 & (5 ^ r4)) - 1 >>> 31 | 0), RA(A8, I7 + 600 | 0, (255 & (6 ^ r4)) - 1 >>> 31 | 0), RA(A8, I7 + 720 | 0, (255 & (7 ^ r4)) - 1 >>> 31 | 0), RA(A8, I7 + 840 | 0, (255 & (8 ^ r4)) - 1 >>> 31 | 0), I7 = i4[A8 + 76 >> 2], i4[C4 + 40 >> 2] = i4[A8 + 72 >> 2], i4[C4 + 44 >> 2] = I7, r4 = i4[4 + (I7 = A8 - -64 | 0) >> 2], i4[C4 + 32 >> 2] = i4[I7 >> 2], i4[C4 + 36 >> 2] = r4, I7 = i4[A8 + 60 >> 2], i4[C4 + 24 >> 2] = i4[A8 + 56 >> 2], i4[C4 + 28 >> 2] = I7, I7 = i4[A8 + 52 >> 2], i4[C4 + 16 >> 2] = i4[A8 + 48 >> 2], i4[C4 + 20 >> 2] = I7, I7 = i4[A8 + 44 >> 2], i4[C4 + 8 >> 2] = i4[A8 + 40 >> 2], i4[C4 + 12 >> 2] = I7, I7 = i4[A8 + 12 >> 2], i4[C4 + 56 >> 2] = i4[A8 + 8 >> 2], i4[C4 + 60 >> 2] = I7, r4 = i4[A8 + 20 >> 2], i4[(I7 = C4 - -64 | 0) >> 2] = i4[A8 + 16 >> 2], i4[I7 + 4 >> 2] = r4, I7 = i4[A8 + 28 >> 2], i4[C4 + 72 >> 2] = i4[A8 + 24 >> 2], i4[C4 + 76 >> 2] = I7, I7 = i4[A8 + 36 >> 2], i4[C4 + 80 >> 2] = i4[A8 + 32 >> 2], i4[C4 + 84 >> 2] = I7, I7 = i4[A8 + 4 >> 2], i4[C4 + 48 >> 2] = i4[A8 >> 2], i4[C4 + 52 >> 2] = I7, I7 = i4[A8 + 84 >> 2], r4 = i4[A8 + 88 >> 2], B4 = i4[A8 + 92 >> 2], Q5 = i4[A8 + 96 >> 2], o4 = i4[A8 + 100 >> 2], E4 = i4[A8 + 104 >> 2], _4 = i4[A8 + 108 >> 2], c4 = i4[A8 + 112 >> 2], t4 = i4[A8 + 80 >> 2], i4[C4 + 124 >> 2] = 0 - i4[A8 + 116 >> 2], i4[C4 + 120 >> 2] = 0 - c4, i4[C4 + 116 >> 2] = 0 - _4, i4[C4 + 112 >> 2] = 0 - E4, i4[C4 + 108 >> 2] = 0 - o4, i4[C4 + 104 >> 2] = 0 - Q5, i4[C4 + 100 >> 2] = 0 - B4, i4[C4 + 96 >> 2] = 0 - r4, i4[C4 + 92 >> 2] = 0 - I7, i4[C4 + 88 >> 2] = 0 - t4, RA(A8, C4 + 8 | 0, (128 & g6) >>> 7 | 0), s3 = C4 + 128 | 0;
                    }
                    function jA(A8) {
                      var I7, g6, C4, B4, Q5, o4, E4, a4, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0;
                      return s3 = I7 = s3 - 320 | 0, R3(c4 = I7 + 240 | 0, A8), R3(t4 = I7 + 192 | 0, A8 + 40 | 0), R3(_4 = I7 + 144 | 0, A8 + 80 | 0), A8 = i4[I7 + 240 >> 2], r4 = i4[I7 + 192 >> 2], e6 = i4[I7 + 244 >> 2], y4 = i4[I7 + 196 >> 2], h4 = i4[I7 + 248 >> 2], D4 = i4[I7 + 200 >> 2], f4 = i4[I7 + 252 >> 2], p4 = i4[I7 + 204 >> 2], w4 = i4[I7 + 256 >> 2], n5 = i4[I7 + 208 >> 2], k4 = i4[I7 + 260 >> 2], F4 = i4[I7 + 212 >> 2], S4 = i4[I7 + 264 >> 2], N4 = i4[I7 + 216 >> 2], G4 = i4[I7 + 268 >> 2], M4 = i4[I7 + 220 >> 2], K4 = i4[I7 + 272 >> 2], U4 = i4[I7 + 224 >> 2], i4[I7 + 84 >> 2] = i4[I7 + 228 >> 2] - i4[I7 + 276 >> 2], i4[I7 + 80 >> 2] = U4 - K4, i4[I7 + 76 >> 2] = M4 - G4, i4[I7 + 72 >> 2] = N4 - S4, i4[I7 + 68 >> 2] = F4 - k4, i4[I7 + 64 >> 2] = n5 - w4, i4[I7 + 60 >> 2] = p4 - f4, i4[I7 + 56 >> 2] = D4 - h4, i4[I7 + 52 >> 2] = y4 - e6, i4[I7 + 48 >> 2] = r4 - A8, b4(A8 = I7 + 48 | 0, A8, _4), b4(I7, c4, t4), b4(I7, I7, 1584), R3(I7 + 96 | 0, _4), _4 = i4[I7 + 48 >> 2], c4 = i4[I7 + 96 >> 2], t4 = i4[I7 >> 2], r4 = i4[I7 + 52 >> 2], e6 = i4[I7 + 100 >> 2], y4 = i4[I7 + 4 >> 2], h4 = i4[I7 + 56 >> 2], D4 = i4[I7 + 104 >> 2], f4 = i4[I7 + 8 >> 2], p4 = i4[I7 + 60 >> 2], w4 = i4[I7 + 108 >> 2], n5 = i4[I7 + 12 >> 2], k4 = i4[I7 + 64 >> 2], F4 = i4[I7 + 112 >> 2], S4 = i4[I7 + 16 >> 2], N4 = i4[I7 + 68 >> 2], G4 = i4[I7 + 116 >> 2], M4 = i4[I7 + 20 >> 2], K4 = i4[I7 + 72 >> 2], U4 = i4[I7 + 120 >> 2], g6 = i4[I7 + 24 >> 2], C4 = i4[I7 + 76 >> 2], B4 = i4[I7 + 124 >> 2], Q5 = i4[I7 + 28 >> 2], o4 = i4[I7 + 80 >> 2], E4 = i4[I7 + 128 >> 2], a4 = i4[I7 + 32 >> 2], i4[I7 + 84 >> 2] = i4[I7 + 84 >> 2] - (i4[I7 + 132 >> 2] + i4[I7 + 36 >> 2] | 0), i4[I7 + 80 >> 2] = o4 - (E4 + a4 | 0), i4[I7 + 76 >> 2] = C4 - (B4 + Q5 | 0), i4[I7 + 72 >> 2] = K4 - (U4 + g6 | 0), i4[I7 + 68 >> 2] = N4 - (G4 + M4 | 0), i4[I7 + 64 >> 2] = k4 - (F4 + S4 | 0), i4[I7 + 60 >> 2] = p4 - (w4 + n5 | 0), i4[I7 + 56 >> 2] = h4 - (D4 + f4 | 0), i4[I7 + 52 >> 2] = r4 - (e6 + y4 | 0), i4[I7 + 48 >> 2] = _4 - (c4 + t4 | 0), QI(_4 = I7 + 288 | 0, A8), A8 = GI(_4, 32), s3 = I7 + 320 | 0, A8;
                    }
                    function XA(A8, I7, g6, B4, i5) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0;
                      var E4 = 0, _4 = 0, c4 = 0, t4 = 0, e6 = 0, y4 = 0, s4 = 0;
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                Q: {
                                  i: {
                                    if (1 == (-7 & (i5 |= 0)) && (c4 = (E4 = (B4 >>> 0) / 3 | 0) << 2, (E4 = a3(E4, -3) + B4 | 0) && (c4 = 2 & i5 ? 2 + ((E4 >>> 1 | 0) + c4 | 0) | 0 : c4 + 4 | 0), !(I7 >>> 0 <= c4 >>> 0))) {
                                      if (!(i5 >>> 0 >= 4)) {
                                        if (!B4) {
                                          i5 = 0;
                                          break C;
                                        }
                                        E4 = 0, i5 = 0;
                                        break i;
                                      }
                                      if (!B4) {
                                        i5 = 0;
                                        break C;
                                      }
                                      for (E4 = 0, i5 = 0; ; ) {
                                        for (e6 = o3[g6 + t4 | 0] | e6 << 8, E4 |= 8; y4 = 65510 + (_4 = e6 >>> (E4 = E4 - 6 | 0) & 63) >>> 8 | 0, s4 = _4 + 65484 >>> 8 | 0, C3[A8 + i5 | 0] = ~(1 + (16321 ^ _4)) >>> 8 & 45 | _4 + 252 & _4 + 65474 >>> 8 & ~s4 | ~(_4 + 32705) >>> 8 & 95 | y4 & _4 + 65 | s4 & _4 + 71 & ~y4, i5 = i5 + 1 | 0, E4 >>> 0 > 5; ) ;
                                        if ((0 | (t4 = t4 + 1 | 0)) == (0 | B4)) break;
                                      }
                                      if (!E4) break B;
                                      t4 = 45, _4 = 32705, B4 = 95;
                                      break Q;
                                    }
                                    rC(), Q4();
                                  }
                                  for (; ; ) {
                                    for (e6 = o3[g6 + t4 | 0] | e6 << 8, E4 |= 8; y4 = 65510 + (_4 = e6 >>> (E4 = E4 - 6 | 0) & 63) >>> 8 | 0, s4 = _4 + 65484 >>> 8 | 0, C3[A8 + i5 | 0] = ~(1 + (16321 ^ _4)) >>> 8 & 43 | _4 + 252 & _4 + 65474 >>> 8 & ~s4 | ~(_4 + 16321) >>> 8 & 47 | y4 & _4 + 65 | s4 & _4 + 71 & ~y4, i5 = i5 + 1 | 0, E4 >>> 0 > 5; ) ;
                                    if ((0 | (t4 = t4 + 1 | 0)) == (0 | B4)) break;
                                  }
                                  if (!E4) break B;
                                  t4 = 43, _4 = 16321, B4 = 47;
                                }
                                _4 = ~((g6 = e6 << 6 - E4 & 63) + _4) >>> 8 & B4 | (E4 = g6 + 65510 >>> 8 | 0) & g6 + 65, B4 = g6 + 65484 >>> 8 | 0, C3[A8 + i5 | 0] = ~(1 + (16321 ^ g6)) >>> 8 & t4 | _4 | g6 + 252 & g6 + 65474 >>> 8 & ~B4 | B4 & g6 + 71 & ~E4, i5 = i5 + 1 | 0;
                              }
                              if (i5 >>> 0 > c4 >>> 0) break g;
                            }
                            if (i5 >>> 0 < c4 >>> 0) break I;
                            c4 = i5;
                            break A;
                          }
                          r3(1104, 1218, 231, 1503), Q4();
                        }
                        bg(A8 + i5 | 0, 61, c4 - i5 | 0);
                      }
                      return bg(A8 + c4 | 0, 0, (I7 >>> 0 > (g6 = c4 + 1 | 0) >>> 0 ? I7 : g6) - c4 | 0), 0 | A8;
                    }
                    function OA(A8, I7, g6) {
                      var C4, B4, Q5, E4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0;
                      s3 = C4 = s3 - 16 | 0, B4 = i4[A8 + 20 >> 2], i4[A8 + 20 >> 2] = 0, Q5 = i4[A8 + 4 >> 2], i4[A8 + 4 >> 2] = 0, c4 = -26;
                      A: {
                        I: {
                          g: {
                            C: switch (g6 - 1 | 0) {
                              case 1:
                                if (gg(I7, 1182, 9)) break I;
                                I7 = I7 + 9 | 0;
                                break g;
                              case 0:
                                break C;
                              default:
                                break A;
                            }
                            if (gg(I7, 1173, 8)) break I;
                            I7 = I7 + 8 | 0;
                          }
                          if (36 != o3[0 | I7] | 118 != o3[I7 + 1 | 0] || (E4 = 61 == o3[I7 + 2 | 0]), E4 && !(((t4 = o3[0 | (g6 = I7 + 3 | 0)]) - 58 & 255) >>> 0 < 246)) {
                            for (r4 = E4 ? g6 : I7, I7 = 0, E4 = t4; ; ) {
                              if (_4 = g6, I7 >>> 0 > 429496729) break I;
                              if ((g6 = (255 & E4) - 48 | 0) >>> 0 > ~(I7 = a3(I7, 10)) >>> 0) break I;
                              if (I7 = I7 + g6 | 0, !(((E4 = o3[0 | (g6 = _4 + 1 | 0)]) - 58 & 255) >>> 0 > 245)) break;
                            }
                            if (!(48 == (0 | t4) & (0 | _4) != (0 | r4) | (0 | g6) == (0 | r4))) {
                              if (19 != (0 | I7)) break A;
                              if (!(36 != (255 & E4) | 109 != o3[_4 + 2 | 0] | 61 != o3[_4 + 3 | 0]) && (g6 = lI(_4 + 4 | 0, I7 = C4 + 12 | 0)) && (i4[A8 + 44 >> 2] = i4[C4 + 12 >> 2], !(44 != o3[0 | g6] | 116 != o3[g6 + 1 | 0] | 61 != o3[g6 + 2 | 0]) && (g6 = lI(g6 + 3 | 0, I7)) && (i4[A8 + 40 >> 2] = i4[C4 + 12 >> 2], !(44 != o3[0 | g6] | 112 != o3[g6 + 1 | 0] | 61 != o3[g6 + 2 | 0]) && (g6 = lI(g6 + 3 | 0, I7)) && (E4 = i4[C4 + 12 >> 2], i4[A8 + 48 >> 2] = E4, i4[A8 + 52 >> 2] = E4, 36 == o3[0 | g6] && (i4[C4 + 12 >> 2] = B4, !pA(_4 = i4[A8 + 16 >> 2], B4, E4 = g6 = g6 + 1 | 0, t4 = RI(g6), 0, I7, g6 = C4 + 8 | 0, 3) && (i4[A8 + 20 >> 2] = i4[C4 + 12 >> 2], E4 = i4[C4 + 8 >> 2], 36 == o3[0 | E4] && (i4[C4 + 12 >> 2] = Q5, E4 = E4 + 1 | 0, !pA(i4[A8 >> 2], Q5, E4, RI(E4), 0, I7, g6, 3)))))))) {
                                if (i4[A8 + 4 >> 2] = i4[C4 + 12 >> 2], I7 = i4[C4 + 8 >> 2], c4 = nI(A8)) break A;
                                c4 = o3[0 | I7] ? -32 : 0;
                                break A;
                              }
                            }
                          }
                        }
                        c4 = -32;
                      }
                      return s3 = C4 + 16 | 0, c4;
                    }
                    function WA(A8, I7, g6, B4) {
                      var Q5 = 0, i5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0;
                      if (g6 | B4) A: for (t4 = A8 + 224 | 0, _4 = A8 + 96 | 0, i5 = o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24; ; ) {
                        if (Q5 = i5 + _4 | 0, !B4 & g6 >>> 0 <= (E4 = 256 - i5 | 0) >>> 0) {
                          Ng(Q5, I7, g6), I7 = g6 + (o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) | 0, C3[A8 + 352 | 0] = I7, C3[A8 + 353 | 0] = I7 >>> 8, C3[A8 + 354 | 0] = I7 >>> 16, C3[A8 + 355 | 0] = I7 >>> 24;
                          break A;
                        }
                        if (Ng(Q5, I7, E4), Q5 = (o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) + E4 | 0, C3[A8 + 352 | 0] = Q5, C3[A8 + 353 | 0] = Q5 >>> 8, C3[A8 + 354 | 0] = Q5 >>> 16, C3[A8 + 355 | 0] = Q5 >>> 24, c4 = i5 = o3[A8 + 68 | 0] | o3[A8 + 69 | 0] << 8 | o3[A8 + 70 | 0] << 16 | o3[A8 + 71 | 0] << 24, i5 = (a4 = 128 + (Q5 = o3[A8 + 64 | 0] | o3[A8 + 65 | 0] << 8 | o3[A8 + 66 | 0] << 16 | o3[A8 + 67 | 0] << 24) | 0) >>> 0 < 128 ? i5 + 1 | 0 : i5, C3[A8 + 64 | 0] = a4, C3[A8 + 65 | 0] = a4 >>> 8, C3[A8 + 66 | 0] = a4 >>> 16, C3[A8 + 67 | 0] = a4 >>> 24, C3[A8 + 68 | 0] = i5, C3[A8 + 69 | 0] = i5 >>> 8, C3[A8 + 70 | 0] = i5 >>> 16, C3[A8 + 71 | 0] = i5 >>> 24, i5 = o3[A8 + 76 | 0] | o3[A8 + 77 | 0] << 8 | o3[A8 + 78 | 0] << 16 | o3[A8 + 79 | 0] << 24, i5 = (c4 = Q5 = -1 == (0 | c4) & Q5 >>> 0 > 4294967167) >>> 0 > (Q5 = Q5 + (o3[A8 + 72 | 0] | o3[A8 + 73 | 0] << 8 | o3[A8 + 74 | 0] << 16 | o3[A8 + 75 | 0] << 24) | 0) >>> 0 ? i5 + 1 | 0 : i5, C3[A8 + 72 | 0] = Q5, C3[A8 + 73 | 0] = Q5 >>> 8, C3[A8 + 74 | 0] = Q5 >>> 16, C3[A8 + 75 | 0] = Q5 >>> 24, C3[A8 + 76 | 0] = i5, C3[A8 + 77 | 0] = i5 >>> 8, C3[A8 + 78 | 0] = i5 >>> 16, C3[A8 + 79 | 0] = i5 >>> 24, p3(A8, _4), Ng(_4, t4, 128), Q5 = i5 = (o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) - 128 | 0, C3[A8 + 352 | 0] = Q5, C3[A8 + 353 | 0] = Q5 >>> 8, C3[A8 + 354 | 0] = Q5 >>> 16, C3[A8 + 355 | 0] = Q5 >>> 24, I7 = I7 + E4 | 0, !((B4 = B4 - (g6 >>> 0 < E4 >>> 0) | 0) | (g6 = g6 - E4 | 0))) break;
                      }
                      return 0;
                    }
                    function VA(A8) {
                      var I7 = 0, g6 = 0, C4 = 0, B4 = 0, Q5 = 0, o4 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0;
                      for (g6 = i4[A8 + 60 >> 2], h4 = i4[A8 + 56 >> 2], s4 = i4[A8 + 52 >> 2], e6 = i4[A8 + 48 >> 2], I7 = i4[A8 + 44 >> 2], C4 = i4[A8 + 40 >> 2], D4 = i4[A8 + 36 >> 2], r4 = i4[A8 + 32 >> 2], B4 = i4[A8 + 28 >> 2], Q5 = i4[A8 + 24 >> 2], o4 = i4[A8 + 20 >> 2], E4 = i4[A8 + 16 >> 2], a4 = i4[A8 + 12 >> 2], _4 = i4[A8 + 8 >> 2], c4 = i4[A8 + 4 >> 2], t4 = i4[A8 >> 2]; y4 = Lg(o4 + c4 | 0, 7) ^ D4, f4 = Lg(y4 + o4 | 0, 9) ^ s4, E4 = Lg(t4 + e6 | 0, 7) ^ E4, p4 = Lg(E4 + t4 | 0, 9) ^ r4, w4 = Lg(p4 + E4 | 0, 13) ^ e6, a4 = Lg(I7 + g6 | 0, 7) ^ a4, B4 = Lg(a4 + g6 | 0, 9) ^ B4, r4 = Lg(B4 + a4 | 0, 13) ^ I7, g6 = Lg(B4 + r4 | 0, 18) ^ g6, I7 = Lg(C4 + Q5 | 0, 7) ^ h4, e6 = w4 ^ Lg(g6 + I7 | 0, 7), s4 = f4 ^ Lg(e6 + g6 | 0, 9), h4 = Lg(e6 + s4 | 0, 13) ^ I7, g6 = Lg(s4 + h4 | 0, 18) ^ g6, _4 = Lg(I7 + C4 | 0, 9) ^ _4, Q5 = Lg(_4 + I7 | 0, 13) ^ Q5, C4 = Lg(Q5 + _4 | 0, 18) ^ C4, I7 = Lg(C4 + y4 | 0, 7) ^ r4, r4 = Lg(I7 + C4 | 0, 9) ^ p4, D4 = Lg(I7 + r4 | 0, 13) ^ y4, C4 = Lg(r4 + D4 | 0, 18) ^ C4, c4 = Lg(y4 + f4 | 0, 13) ^ c4, o4 = Lg(c4 + f4 | 0, 18) ^ o4, Q5 = Lg(o4 + E4 | 0, 7) ^ Q5, B4 = Lg(Q5 + o4 | 0, 9) ^ B4, E4 = Lg(B4 + Q5 | 0, 13) ^ E4, o4 = Lg(E4 + B4 | 0, 18) ^ o4, t4 = Lg(p4 + w4 | 0, 18) ^ t4, c4 = Lg(t4 + a4 | 0, 7) ^ c4, _4 = Lg(c4 + t4 | 0, 9) ^ _4, a4 = Lg(_4 + c4 | 0, 13) ^ a4, t4 = Lg(a4 + _4 | 0, 18) ^ t4, y4 = n5 >>> 0 < 6, n5 = n5 + 2 | 0, y4; ) ;
                      i4[A8 >> 2] = i4[A8 >> 2] + t4, i4[A8 + 4 >> 2] = i4[A8 + 4 >> 2] + c4, i4[A8 + 8 >> 2] = i4[A8 + 8 >> 2] + _4, i4[A8 + 12 >> 2] = i4[A8 + 12 >> 2] + a4, i4[A8 + 16 >> 2] = i4[A8 + 16 >> 2] + E4, i4[A8 + 20 >> 2] = i4[A8 + 20 >> 2] + o4, i4[A8 + 24 >> 2] = i4[A8 + 24 >> 2] + Q5, i4[A8 + 28 >> 2] = i4[A8 + 28 >> 2] + B4, i4[A8 + 32 >> 2] = i4[A8 + 32 >> 2] + r4, i4[A8 + 36 >> 2] = i4[A8 + 36 >> 2] + D4, i4[A8 + 40 >> 2] = i4[A8 + 40 >> 2] + C4, i4[A8 + 44 >> 2] = i4[A8 + 44 >> 2] + I7, i4[A8 + 48 >> 2] = i4[A8 + 48 >> 2] + e6, i4[A8 + 52 >> 2] = i4[A8 + 52 >> 2] + s4, i4[A8 + 56 >> 2] = i4[A8 + 56 >> 2] + h4, i4[A8 + 60 >> 2] = i4[A8 + 60 >> 2] + g6;
                    }
                    function ZA(A8, I7, g6, B4) {
                      var Q5, i5 = 0;
                      return s3 = Q5 = s3 - 320 | 0, i5 = -1, NI(g6) && (KI(g6) || MA(Q5, g6) || gA(Q5) && (C3[0 | A8] = o3[0 | I7], C3[A8 + 1 | 0] = o3[I7 + 1 | 0], C3[A8 + 2 | 0] = o3[I7 + 2 | 0], C3[A8 + 3 | 0] = o3[I7 + 3 | 0], C3[A8 + 4 | 0] = o3[I7 + 4 | 0], C3[A8 + 5 | 0] = o3[I7 + 5 | 0], C3[A8 + 6 | 0] = o3[I7 + 6 | 0], C3[A8 + 7 | 0] = o3[I7 + 7 | 0], C3[A8 + 8 | 0] = o3[I7 + 8 | 0], C3[A8 + 9 | 0] = o3[I7 + 9 | 0], C3[A8 + 10 | 0] = o3[I7 + 10 | 0], C3[A8 + 11 | 0] = o3[I7 + 11 | 0], C3[A8 + 12 | 0] = o3[I7 + 12 | 0], C3[A8 + 13 | 0] = o3[I7 + 13 | 0], C3[A8 + 14 | 0] = o3[I7 + 14 | 0], C3[A8 + 15 | 0] = o3[I7 + 15 | 0], C3[A8 + 16 | 0] = o3[I7 + 16 | 0], C3[A8 + 17 | 0] = o3[I7 + 17 | 0], C3[A8 + 18 | 0] = o3[I7 + 18 | 0], C3[A8 + 19 | 0] = o3[I7 + 19 | 0], C3[A8 + 20 | 0] = o3[I7 + 20 | 0], C3[A8 + 21 | 0] = o3[I7 + 21 | 0], C3[A8 + 22 | 0] = o3[I7 + 22 | 0], C3[A8 + 23 | 0] = o3[I7 + 23 | 0], C3[A8 + 24 | 0] = o3[I7 + 24 | 0], C3[A8 + 25 | 0] = o3[I7 + 25 | 0], C3[A8 + 26 | 0] = o3[I7 + 26 | 0], C3[A8 + 27 | 0] = o3[I7 + 27 | 0], C3[A8 + 28 | 0] = o3[I7 + 28 | 0], C3[A8 + 29 | 0] = o3[I7 + 29 | 0], C3[A8 + 30 | 0] = o3[I7 + 30 | 0], g6 = o3[I7 + 31 | 0], B4 && (C3[0 | A8] = 248 & o3[0 | A8], g6 |= 64), C3[A8 + 31 | 0] = 127 & g6, u3(g6 = Q5 + 160 | 0, A8, Q5), tg(A8, g6), (127 & o3[A8 + 31 | 0] | o3[A8 + 30 | 0] | o3[A8 + 29 | 0] | o3[A8 + 28 | 0] | o3[A8 + 27 | 0] | o3[A8 + 26 | 0] | o3[A8 + 25 | 0] | o3[A8 + 24 | 0] | o3[A8 + 23 | 0] | o3[A8 + 22 | 0] | o3[A8 + 21 | 0] | o3[A8 + 20 | 0] | o3[A8 + 19 | 0] | o3[A8 + 18 | 0] | o3[A8 + 17 | 0] | o3[A8 + 16 | 0] | o3[A8 + 15 | 0] | o3[A8 + 14 | 0] | o3[A8 + 13 | 0] | o3[A8 + 12 | 0] | o3[A8 + 11 | 0] | o3[A8 + 10 | 0] | o3[A8 + 9 | 0] | o3[A8 + 8 | 0] | o3[A8 + 7 | 0] | o3[A8 + 6 | 0] | o3[A8 + 5 | 0] | o3[A8 + 4 | 0] | o3[A8 + 3 | 0] | o3[A8 + 2 | 0] | o3[A8 + 1 | 0] | 1 ^ o3[0 | A8]) - 1 & 256 || (i5 = GI(I7, 32) ? -1 : 0))), s3 = Q5 + 320 | 0, i5;
                    }
                    function TA(A8, I7, g6, B4, Q5) {
                      var E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0;
                      if (s3 = E4 = s3 - 48 | 0, Q5 && ag(Q5, 102), !(36 != o3[0 | B4] | 55 != o3[B4 + 1 | 0] | 36 != o3[B4 + 2 | 0]) && (r4 = uI(o3[B4 + 3 | 0])) && (a4 = PI2(E4 + 12 | 0, B4 + 4 | 0)) && (t4 = PI2(E4 + 8 | 0, a4))) {
                        for (_4 = RI(t4) + 1 | 0; a4 = 0, _4 && 36 != o3[0 | (a4 = t4 + (_4 = _4 - 1 | 0) | 0)]; ) ;
                        if (c4 = a4 - t4 | 0, a4 || (c4 = RI(t4)), !((c4 = 45 + (_4 = (a4 = c4) + (t4 - B4 | 0) | 0) | 0) >>> 0 > 102 | a4 >>> 0 > c4 >>> 0 || (c4 = A8, y4 = I7, h4 = g6, A8 = 31 & (r4 = r4 - 1024 | 0), (63 & r4) >>> 0 >= 32 ? (I7 = 1 << A8, g6 = 0) : I7 = (g6 = 1 << A8) - 1 & 1 >>> 32 - A8, _A(c4, y4, h4, t4, a4, g6, I7, i4[E4 + 12 >> 2], i4[E4 + 8 >> 2], E4 + 16 | 0, 32)))) {
                          for (a4 = Ng(Q5, B4, _4), C3[0 | (A8 = a4 + _4 | 0)] = 36, e6 = (c4 = a4 + 102 | 0) - (Q5 = A8 + 1 | 0) | 0, g6 = 0; ; ) {
                            A: if ((I7 = g6) >>> 0 > 31) B4 = Q5;
                            else if (A8 = Q5, g6 = (_4 = I7 + 1 | 0) + (y4 = (g6 = 31 - I7 | 0) >>> 0 >= 2 ? 2 : g6) | 0, B4 = 0, t4 = 0, Q5 = o3[(r4 = E4 + 16 | 0) + I7 | 0], y4 && (Q5 = o3[_4 + r4 | 0] << 8 | Q5, (0 | (I7 = I7 + 2 | 0)) != (0 | g6) && (t4 = 1, Q5 = o3[I7 + r4 | 0] << 16 | Q5)), e6 && (C3[0 | A8] = o3[1024 + (63 & Q5) | 0], 1 != (0 | e6))) {
                              if (C3[A8 + 1 | 0] = o3[1024 + (Q5 >>> 6 & 63) | 0], y4 = A8 + e6 | 0, I7 = A8 + 2 | 0, (0 | g6) != (0 | _4)) {
                                if (2 == (0 | e6)) break A;
                                if (C3[A8 + 2 | 0] = o3[1024 + (Q5 >>> 12 & 63) | 0], I7 = A8 + 3 | 0, t4) {
                                  if (3 == (0 | e6)) break A;
                                  C3[A8 + 3 | 0] = o3[1024 + (Q5 >>> 18 | 0) | 0], I7 = A8 + 4 | 0;
                                }
                              }
                              if (e6 = y4 - (Q5 = I7) | 0, Q5) continue;
                            }
                            break;
                          }
                          XC(E4 + 16 | 0, 32), e6 = 0, !B4 | B4 >>> 0 >= c4 >>> 0 || (C3[0 | B4] = 0, e6 = a4);
                        }
                      }
                      return s3 = E4 + 48 | 0, e6;
                    }
                    function $A(A8, I7) {
                      var g6, C4 = 0, B4 = 0, Q5 = 0, o4 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0;
                      C4 = i4[I7 + 4 >> 2], Q5 = i4[I7 + 44 >> 2], o4 = i4[I7 + 8 >> 2], E4 = i4[I7 + 48 >> 2], a4 = i4[I7 + 12 >> 2], _4 = i4[I7 + 52 >> 2], c4 = i4[I7 + 16 >> 2], t4 = i4[I7 + 56 >> 2], r4 = i4[I7 + 20 >> 2], e6 = i4[I7 + 60 >> 2], y4 = i4[I7 + 24 >> 2], s4 = i4[(B4 = I7 - -64 | 0) >> 2], h4 = i4[I7 + 28 >> 2], D4 = i4[I7 + 68 >> 2], f4 = i4[I7 + 32 >> 2], p4 = i4[I7 + 72 >> 2], w4 = i4[I7 + 36 >> 2], g6 = i4[I7 + 76 >> 2], i4[A8 >> 2] = i4[I7 >> 2] + i4[I7 + 40 >> 2], i4[A8 + 36 >> 2] = w4 + g6, i4[A8 + 32 >> 2] = f4 + p4, i4[A8 + 28 >> 2] = h4 + D4, i4[A8 + 24 >> 2] = y4 + s4, i4[A8 + 20 >> 2] = r4 + e6, i4[A8 + 16 >> 2] = c4 + t4, i4[A8 + 12 >> 2] = a4 + _4, i4[A8 + 8 >> 2] = o4 + E4, i4[A8 + 4 >> 2] = C4 + Q5, C4 = i4[I7 + 4 >> 2], Q5 = i4[I7 + 44 >> 2], o4 = i4[I7 + 8 >> 2], E4 = i4[I7 + 48 >> 2], a4 = i4[I7 + 12 >> 2], _4 = i4[I7 + 52 >> 2], c4 = i4[I7 + 16 >> 2], t4 = i4[I7 + 56 >> 2], r4 = i4[I7 + 20 >> 2], e6 = i4[I7 + 60 >> 2], y4 = i4[I7 + 24 >> 2], B4 = i4[B4 >> 2], s4 = i4[I7 + 28 >> 2], h4 = i4[I7 + 68 >> 2], D4 = i4[I7 + 32 >> 2], f4 = i4[I7 + 72 >> 2], p4 = i4[I7 >> 2], w4 = i4[I7 + 40 >> 2], i4[A8 + 76 >> 2] = i4[I7 + 76 >> 2] - i4[I7 + 36 >> 2], i4[A8 + 72 >> 2] = f4 - D4, i4[A8 + 68 >> 2] = h4 - s4, i4[A8 - -64 >> 2] = B4 - y4, i4[A8 + 60 >> 2] = e6 - r4, i4[A8 + 56 >> 2] = t4 - c4, i4[A8 + 52 >> 2] = _4 - a4, i4[A8 + 48 >> 2] = E4 - o4, i4[A8 + 44 >> 2] = Q5 - C4, i4[A8 + 40 >> 2] = w4 - p4, C4 = i4[I7 + 84 >> 2], i4[A8 + 80 >> 2] = i4[I7 + 80 >> 2], i4[A8 + 84 >> 2] = C4, C4 = i4[I7 + 92 >> 2], i4[A8 + 88 >> 2] = i4[I7 + 88 >> 2], i4[A8 + 92 >> 2] = C4, C4 = i4[I7 + 100 >> 2], i4[A8 + 96 >> 2] = i4[I7 + 96 >> 2], i4[A8 + 100 >> 2] = C4, C4 = i4[I7 + 108 >> 2], i4[A8 + 104 >> 2] = i4[I7 + 104 >> 2], i4[A8 + 108 >> 2] = C4, C4 = i4[I7 + 116 >> 2], i4[A8 + 112 >> 2] = i4[I7 + 112 >> 2], i4[A8 + 116 >> 2] = C4, b4(A8 + 120 | 0, I7 + 120 | 0, 1680);
                    }
                    function AI(A8, I7, g6) {
                      var C4, B4, Q5, o4, E4, a4, _4, c4, t4, r4, e6, y4, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0;
                      h4 = i4[I7 + 12 >> 2], D4 = i4[I7 + 8 >> 2], f4 = i4[I7 + 4 >> 2], C4 = s3 + -64 & -64, I7 = i4[I7 >> 2], i4[C4 >> 2] = i4[35744 + ((255 & I7) << 2) >> 2], i4[C4 + 4 >> 2] = i4[35744 + (f4 >>> 6 & 1020) >> 2], i4[C4 + 8 >> 2] = i4[35744 + (D4 >>> 14 & 1020) >> 2], i4[C4 + 12 >> 2] = i4[35744 + (h4 >>> 22 & 1020) >> 2], i4[C4 + 16 >> 2] = i4[35744 + ((255 & f4) << 2) >> 2], i4[C4 + 20 >> 2] = i4[35744 + (D4 >>> 6 & 1020) >> 2], i4[C4 + 24 >> 2] = i4[35744 + (h4 >>> 14 & 1020) >> 2], i4[C4 + 28 >> 2] = i4[35744 + (I7 >>> 22 & 1020) >> 2], i4[C4 + 32 >> 2] = i4[35744 + ((255 & D4) << 2) >> 2], i4[C4 + 36 >> 2] = i4[35744 + (h4 >>> 6 & 1020) >> 2], i4[C4 + 40 >> 2] = i4[35744 + (I7 >>> 14 & 1020) >> 2], i4[C4 + 44 >> 2] = i4[35744 + (f4 >>> 22 & 1020) >> 2], i4[C4 + 48 >> 2] = i4[35744 + ((255 & h4) << 2) >> 2], i4[C4 + 52 >> 2] = i4[35744 + (I7 >>> 6 & 1020) >> 2], i4[C4 + 56 >> 2] = i4[35744 + (f4 >>> 14 & 1020) >> 2], i4[C4 + 60 >> 2] = i4[35744 + (D4 >>> 22 & 1020) >> 2], I7 = i4[C4 + 12 >> 2], h4 = i4[C4 >> 2], D4 = i4[C4 + 4 >> 2], f4 = i4[C4 + 8 >> 2], B4 = i4[C4 + 28 >> 2], Q5 = i4[C4 + 16 >> 2], o4 = i4[C4 + 20 >> 2], E4 = i4[C4 + 24 >> 2], a4 = i4[C4 + 44 >> 2], _4 = i4[C4 + 32 >> 2], c4 = i4[C4 + 36 >> 2], t4 = i4[C4 + 40 >> 2], r4 = i4[g6 >> 2], e6 = i4[g6 + 4 >> 2], y4 = i4[g6 + 8 >> 2], p4 = A8, w4 = i4[g6 + 12 >> 2] ^ i4[C4 + 48 >> 2] ^ Lg(i4[C4 + 52 >> 2], 8) ^ Lg(i4[C4 + 56 >> 2], 16) ^ Lg(i4[C4 + 60 >> 2], 24), i4[p4 + 12 >> 2] = w4, p4 = A8, w4 = Lg(c4, 8) ^ _4 ^ Lg(t4, 16) ^ Lg(a4, 24) ^ y4, i4[p4 + 8 >> 2] = w4, p4 = A8, w4 = Lg(o4, 8) ^ Q5 ^ Lg(E4, 16) ^ Lg(B4, 24) ^ e6, i4[p4 + 4 >> 2] = w4, p4 = A8, w4 = Lg(D4, 8) ^ h4 ^ Lg(f4, 16) ^ Lg(I7, 24) ^ r4, i4[p4 >> 2] = w4;
                    }
                    function II(A8, I7, g6) {
                      var B4, Q5 = 0;
                      return s3 = B4 = s3 - 160 | 0, C3[0 | A8] = o3[0 | I7], C3[A8 + 1 | 0] = o3[I7 + 1 | 0], C3[A8 + 2 | 0] = o3[I7 + 2 | 0], C3[A8 + 3 | 0] = o3[I7 + 3 | 0], C3[A8 + 4 | 0] = o3[I7 + 4 | 0], C3[A8 + 5 | 0] = o3[I7 + 5 | 0], C3[A8 + 6 | 0] = o3[I7 + 6 | 0], C3[A8 + 7 | 0] = o3[I7 + 7 | 0], C3[A8 + 8 | 0] = o3[I7 + 8 | 0], C3[A8 + 9 | 0] = o3[I7 + 9 | 0], C3[A8 + 10 | 0] = o3[I7 + 10 | 0], C3[A8 + 11 | 0] = o3[I7 + 11 | 0], C3[A8 + 12 | 0] = o3[I7 + 12 | 0], C3[A8 + 13 | 0] = o3[I7 + 13 | 0], C3[A8 + 14 | 0] = o3[I7 + 14 | 0], C3[A8 + 15 | 0] = o3[I7 + 15 | 0], C3[A8 + 16 | 0] = o3[I7 + 16 | 0], C3[A8 + 17 | 0] = o3[I7 + 17 | 0], C3[A8 + 18 | 0] = o3[I7 + 18 | 0], C3[A8 + 19 | 0] = o3[I7 + 19 | 0], C3[A8 + 20 | 0] = o3[I7 + 20 | 0], C3[A8 + 21 | 0] = o3[I7 + 21 | 0], C3[A8 + 22 | 0] = o3[I7 + 22 | 0], C3[A8 + 23 | 0] = o3[I7 + 23 | 0], C3[A8 + 24 | 0] = o3[I7 + 24 | 0], C3[A8 + 25 | 0] = o3[I7 + 25 | 0], C3[A8 + 26 | 0] = o3[I7 + 26 | 0], C3[A8 + 27 | 0] = o3[I7 + 27 | 0], C3[A8 + 28 | 0] = o3[I7 + 28 | 0], C3[A8 + 29 | 0] = o3[I7 + 29 | 0], C3[A8 + 30 | 0] = o3[I7 + 30 | 0], Q5 = o3[I7 + 31 | 0], g6 && (C3[0 | A8] = 248 & o3[0 | A8], Q5 |= 64), C3[A8 + 31 | 0] = 127 & Q5, nA(B4, A8), tg(A8, B4), g6 = -1, (127 & o3[A8 + 31 | 0] | o3[A8 + 30 | 0] | o3[A8 + 29 | 0] | o3[A8 + 28 | 0] | o3[A8 + 27 | 0] | o3[A8 + 26 | 0] | o3[A8 + 25 | 0] | o3[A8 + 24 | 0] | o3[A8 + 23 | 0] | o3[A8 + 22 | 0] | o3[A8 + 21 | 0] | o3[A8 + 20 | 0] | o3[A8 + 19 | 0] | o3[A8 + 18 | 0] | o3[A8 + 17 | 0] | o3[A8 + 16 | 0] | o3[A8 + 15 | 0] | o3[A8 + 14 | 0] | o3[A8 + 13 | 0] | o3[A8 + 12 | 0] | o3[A8 + 11 | 0] | o3[A8 + 10 | 0] | o3[A8 + 9 | 0] | o3[A8 + 8 | 0] | o3[A8 + 7 | 0] | o3[A8 + 6 | 0] | o3[A8 + 5 | 0] | o3[A8 + 4 | 0] | o3[A8 + 3 | 0] | o3[A8 + 2 | 0] | o3[A8 + 1 | 0] | 1 ^ o3[0 | A8]) - 1 & 256 || (g6 = GI(I7, 32) ? -1 : 0), s3 = B4 + 160 | 0, g6;
                    }
                    function gI(A8, I7) {
                      var g6, B4, Q5, o4, E4, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, f4 = 0;
                      (_4 = i4[A8 + 56 >> 2]) | (c4 = i4[A8 + 60 >> 2]) && (C3[(r4 = A8 - -64 | 0) + _4 | 0] = 1, !((f4 = _4 + 1 | 0) ? c4 : c4 + 1 | 0) & f4 >>> 0 <= 15 && bg(65 + (A8 + _4 | 0) | 0, 0, 15 - _4 | 0), C3[A8 + 80 | 0] = 1, rA(A8, r4, 16, 0)), f4 = i4[A8 + 52 >> 2], h4 = i4[A8 + 48 >> 2], r4 = i4[A8 + 44 >> 2], _4 = i4[A8 + 24 >> 2], e6 = i4[A8 + 28 >> 2] + (_4 >>> 26 | 0) | 0, t4 = i4[A8 + 32 >> 2] + (e6 >>> 26 | 0) | 0, g6 = i4[A8 + 36 >> 2] + (t4 >>> 26 | 0) | 0, c4 = (s4 = (_4 = (_4 = (67108863 & _4) + ((y4 = i4[A8 + 20 >> 2] + a3(g6 >>> 26 | 0, 5) | 0) >>> 26 | 0) | 0) & (e6 = (t4 = (E4 = (67108863 & g6) + ((o4 = (B4 = 67108863 & t4) + ((Q5 = (D4 = 67108863 & e6) + ((y4 = _4 + ((c4 = 5 + (s4 = 67108863 & y4) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) - 67108864 | 0) >> 31) | y4 & (t4 = 67108863 & (y4 = (t4 >>> 31 | 0) - 1 | 0))) << 26 | c4 & t4 | e6 & s4) + i4[A8 + 40 >> 2] | 0, C3[0 | I7] = c4, C3[I7 + 1 | 0] = c4 >>> 8, C3[I7 + 2 | 0] = c4 >>> 16, C3[I7 + 3 | 0] = c4 >>> 24, s4 = c4 >>> 0 < s4 >>> 0, c4 = 0, c4 = (_4 = (D4 = e6 & D4 | t4 & Q5) << 20 | _4 >>> 6) >>> 0 > (_4 = _4 + r4 | 0) >>> 0 ? 1 : c4, c4 = (r4 = _4) >>> 0 > (_4 = _4 + s4 | 0) >>> 0 ? c4 + 1 | 0 : c4, C3[I7 + 4 | 0] = _4, C3[I7 + 5 | 0] = _4 >>> 8, C3[I7 + 6 | 0] = _4 >>> 16, C3[I7 + 7 | 0] = _4 >>> 24, _4 = 0, r4 = (r4 = (t4 = e6 & B4 | t4 & o4) << 14 | D4 >>> 12) >>> 0 > (h4 = r4 + h4 | 0) >>> 0 ? 1 : _4, _4 = h4, h4 = c4, _4 = _4 + c4 | 0, c4 = r4, c4 = _4 >>> 0 < h4 >>> 0 ? c4 + 1 | 0 : c4, C3[I7 + 8 | 0] = _4, C3[I7 + 9 | 0] = _4 >>> 8, C3[I7 + 10 | 0] = _4 >>> 16, C3[I7 + 11 | 0] = _4 >>> 24, c4 = (_4 = (_4 = (y4 & E4 | e6 & g6) << 8 | t4 >>> 18) + f4 | 0) + c4 | 0, C3[I7 + 12 | 0] = c4, C3[I7 + 13 | 0] = c4 >>> 8, C3[I7 + 14 | 0] = c4 >>> 16, C3[I7 + 15 | 0] = c4 >>> 24, XC(A8, 88);
                    }
                    function CI(A8, I7, g6) {
                      A8 |= 0, I7 |= 0, g6 |= 0;
                      var B4, Q5 = 0;
                      return s3 = B4 = s3 - 16 | 0, C3[B4 + 15 | 0] = 0, Q5 = -1, 0 | pB[i4[8930]](A8, I7, g6) || (C3[B4 + 15 | 0] = o3[0 | A8] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 1 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 2 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 3 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 4 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 5 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 6 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 7 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 8 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 9 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 10 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 11 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 12 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 13 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 14 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 15 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 16 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 17 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 18 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 19 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 20 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 21 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 22 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 23 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 24 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 25 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 26 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 27 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 28 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 29 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 30 | 0] | o3[B4 + 15 | 0], C3[B4 + 15 | 0] = o3[A8 + 31 | 0] | o3[B4 + 15 | 0], Q5 = (o3[B4 + 15 | 0] << 23) - 8388608 >> 31), s3 = B4 + 16 | 0, 0 | Q5;
                    }
                    function BI(A8, I7, g6, C4, B4) {
                      var Q5 = 0, o4 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0;
                      A: {
                        if (1 == (0 | C4) | C4 >>> 0 > 1) i4[9404] = 22;
                        else {
                          s3 = C4 = s3 - 128 | 0, i4[C4 - -64 >> 2] = 0, i4[C4 + 56 >> 2] = 0, i4[C4 + 60 >> 2] = 0, i4[C4 + 48 >> 2] = 0, i4[C4 + 52 >> 2] = 0, i4[C4 + 40 >> 2] = 0, i4[C4 + 44 >> 2] = 0, i4[C4 + 32 >> 2] = 0, i4[C4 + 36 >> 2] = 0, i4[C4 + 24 >> 2] = 0, i4[C4 + 28 >> 2] = 0, i4[C4 + 16 >> 2] = 0, i4[C4 + 20 >> 2] = 0, Q5 = RI(A8), i4[C4 + 28 >> 2] = Q5, i4[C4 + 44 >> 2] = Q5, i4[C4 + 12 >> 2] = Q5, o4 = K3(Q5), i4[C4 + 40 >> 2] = o4, E4 = K3(Q5), i4[C4 + 24 >> 2] = E4, a4 = K3(Q5), i4[C4 + 8 >> 2] = a4;
                          I: if (!a4 | !o4 | !E4 || !(Q5 = K3(Q5))) BA(o4), BA(E4), BA(a4), A8 = -22;
                          else {
                            if (A8 = OA(C4 + 8 | 0, A8, B4)) {
                              BA(i4[C4 + 40 >> 2]), BA(i4[C4 + 24 >> 2]), BA(i4[C4 + 8 >> 2]), BA(Q5);
                              break I;
                            }
                            a4 = i4[C4 + 28 >> 2], _4 = i4[C4 + 24 >> 2], A8 = i4[C4 + 60 >> 2], c4 = i4[C4 + 52 >> 2], t4 = i4[C4 + 48 >> 2], ag(Q5, o4 = i4[C4 + 12 >> 2]), (E4 = K3(o4)) ? (i4[C4 + 100 >> 2] = 0, i4[C4 + 104 >> 2] = 0, i4[C4 + 92 >> 2] = 0, i4[C4 + 96 >> 2] = 0, i4[C4 + 88 >> 2] = a4, i4[C4 + 84 >> 2] = _4, i4[C4 + 80 >> 2] = g6, i4[C4 + 76 >> 2] = I7, i4[C4 + 72 >> 2] = o4, i4[C4 + 68 >> 2] = E4, i4[C4 + 124 >> 2] = 0, i4[C4 + 120 >> 2] = A8, i4[C4 + 116 >> 2] = A8, i4[C4 + 112 >> 2] = c4, i4[C4 + 108 >> 2] = t4, (A8 = q2(C4 + 68 | 0, B4)) || Ng(Q5, E4, o4), XC(E4, o4), BA(E4)) : A8 = -22, BA(i4[C4 + 40 >> 2]), BA(i4[C4 + 24 >> 2]), A8 || (A8 = MI(Q5, i4[C4 + 8 >> 2], i4[C4 + 12 >> 2]) ? -35 : 0), BA(Q5), BA(i4[C4 + 8 >> 2]);
                          }
                          if (s3 = C4 + 128 | 0, I7 = A8, !A8) break A;
                          -35 == (0 | A8) && (i4[9404] = 28);
                        }
                        I7 = -1;
                      }
                      return I7;
                    }
                    function QI(A8, I7) {
                      var g6, B4, Q5, o4, E4, _4, c4, t4 = 0, r4 = 0;
                      B4 = i4[I7 + 32 >> 2], Q5 = i4[I7 + 28 >> 2], o4 = i4[I7 + 24 >> 2], E4 = i4[I7 + 20 >> 2], _4 = i4[I7 + 16 >> 2], c4 = i4[I7 + 12 >> 2], t4 = i4[I7 + 4 >> 2], r4 = i4[I7 >> 2], g6 = i4[I7 + 36 >> 2], I7 = i4[I7 + 8 >> 2], r4 = a3((B4 + (Q5 + (o4 + (E4 + (_4 + (c4 + ((t4 + (r4 + (a3(g6, 19) + 16777216 >>> 25 | 0) >> 26) >> 25) + I7 >> 26) >> 25) >> 26) >> 25) >> 26) >> 25) >> 26) + g6 >> 25, 19) + r4 | 0, C3[0 | A8] = r4, C3[A8 + 2 | 0] = r4 >>> 16, C3[A8 + 1 | 0] = r4 >>> 8, t4 = t4 + (r4 >> 26) | 0, C3[A8 + 5 | 0] = t4 >>> 14, C3[A8 + 4 | 0] = t4 >>> 6, C3[A8 + 3 | 0] = r4 >>> 24 & 3 | t4 << 2, I7 = I7 + (t4 >> 25) | 0, C3[A8 + 8 | 0] = I7 >>> 13, C3[A8 + 7 | 0] = I7 >>> 5, C3[A8 + 6 | 0] = I7 << 3 | (29360128 & t4) >>> 22, r4 = (I7 >> 26) + c4 | 0, C3[A8 + 11 | 0] = r4 >>> 11, C3[A8 + 10 | 0] = r4 >>> 3, C3[A8 + 9 | 0] = r4 << 5 | (65011712 & I7) >>> 21, t4 = (r4 >> 25) + _4 | 0, C3[A8 + 15 | 0] = t4 >>> 18, C3[A8 + 14 | 0] = t4 >>> 10, C3[A8 + 13 | 0] = t4 >>> 2, I7 = (t4 >> 26) + E4 | 0, C3[A8 + 16 | 0] = I7, C3[A8 + 12 | 0] = t4 << 6 | (33030144 & r4) >>> 19, C3[A8 + 18 | 0] = I7 >>> 16, C3[A8 + 17 | 0] = I7 >>> 8, t4 = (I7 >> 25) + o4 | 0, C3[A8 + 21 | 0] = t4 >>> 15, C3[A8 + 20 | 0] = t4 >>> 7, C3[A8 + 19 | 0] = I7 >>> 24 & 1 | t4 << 1, I7 = (t4 >> 26) + Q5 | 0, C3[A8 + 24 | 0] = I7 >>> 13, C3[A8 + 23 | 0] = I7 >>> 5, C3[A8 + 22 | 0] = I7 << 3 | (58720256 & t4) >>> 23, t4 = (I7 >> 25) + B4 | 0, C3[A8 + 27 | 0] = t4 >>> 12, C3[A8 + 26 | 0] = t4 >>> 4, C3[A8 + 25 | 0] = t4 << 4 | (31457280 & I7) >>> 21, I7 = g6 + (t4 >> 26) | 0, C3[A8 + 30 | 0] = I7 >>> 10, C3[A8 + 29 | 0] = I7 >>> 2, C3[A8 + 31 | 0] = (33292288 & I7) >>> 18, C3[A8 + 28 | 0] = I7 << 6 | (66060288 & t4) >>> 20;
                    }
                    function iI(A8, I7, g6) {
                      A8 |= 0, I7 |= 0;
                      var B4, Q5 = 0, i5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0;
                      if (s3 = B4 = s3 - 192 | 0, (g6 |= 0) >>> 0 >= 129 && (SI(A8), SA(A8, I7, g6, 0), j(A8, B4), g6 = 64, I7 = B4), SI(A8), bg(B4 - -64 | 0, 54, 128), g6) {
                        if (g6 >>> 0 >= 4) for (t4 = 252 & g6; C3[0 | (Q5 = (E4 = B4 - -64 | 0) + i5 | 0)] = o3[0 | Q5] ^ o3[I7 + i5 | 0], C3[0 | (a4 = (Q5 = 1 | i5) + E4 | 0)] = o3[0 | a4] ^ o3[I7 + Q5 | 0], C3[0 | (a4 = (Q5 = 2 | i5) + E4 | 0)] = o3[0 | a4] ^ o3[I7 + Q5 | 0], C3[0 | (Q5 = (Q5 = E4) + (E4 = 3 | i5) | 0)] = o3[0 | Q5] ^ o3[I7 + E4 | 0], i5 = i5 + 4 | 0, (0 | t4) != (0 | (_4 = _4 + 4 | 0)); ) ;
                        if (_4 = 3 & g6) for (; C3[0 | (E4 = (B4 - -64 | 0) + i5 | 0)] = o3[0 | E4] ^ o3[I7 + i5 | 0], i5 = i5 + 1 | 0, (0 | _4) != (0 | (c4 = c4 + 1 | 0)); ) ;
                      }
                      if (SA(A8, i5 = B4 - -64 | 0, 128, 0), SI(E4 = A8 + 208 | 0), bg(i5, 92, 128), g6) {
                        if (c4 = 0, i5 = 0, g6 >>> 0 >= 4) for (t4 = 252 & g6, _4 = 0; C3[0 | (Q5 = (A8 = B4 - -64 | 0) + i5 | 0)] = o3[0 | Q5] ^ o3[I7 + i5 | 0], C3[0 | (a4 = (Q5 = 1 | i5) + A8 | 0)] = o3[0 | a4] ^ o3[I7 + Q5 | 0], C3[0 | (a4 = (Q5 = 2 | i5) + A8 | 0)] = o3[0 | a4] ^ o3[I7 + Q5 | 0], C3[0 | (Q5 = (Q5 = A8) + (A8 = 3 | i5) | 0)] = o3[0 | Q5] ^ o3[A8 + I7 | 0], i5 = i5 + 4 | 0, (0 | t4) != (0 | (_4 = _4 + 4 | 0)); ) ;
                        if (A8 = 3 & g6) for (; C3[0 | (g6 = (B4 - -64 | 0) + i5 | 0)] = o3[0 | g6] ^ o3[I7 + i5 | 0], i5 = i5 + 1 | 0, (0 | A8) != (0 | (c4 = c4 + 1 | 0)); ) ;
                      }
                      return SA(E4, A8 = B4 - -64 | 0, 128, 0), XC(A8, 128), XC(B4, 64), s3 = B4 + 192 | 0, 0;
                    }
                    function oI(A8, I7) {
                      var g6;
                      return A8 |= 0, I7 |= 0, i4[12 + (g6 = s3 - 16 | 0) >> 2] = A8, i4[g6 + 8 >> 2] = I7, i4[g6 + 4 >> 2] = 0, i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2]] ^ o3[i4[g6 + 8 >> 2]], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 1 | 0] ^ o3[i4[g6 + 8 >> 2] + 1 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 2 | 0] ^ o3[i4[g6 + 8 >> 2] + 2 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 3 | 0] ^ o3[i4[g6 + 8 >> 2] + 3 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 4 | 0] ^ o3[i4[g6 + 8 >> 2] + 4 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 5 | 0] ^ o3[i4[g6 + 8 >> 2] + 5 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 6 | 0] ^ o3[i4[g6 + 8 >> 2] + 6 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 7 | 0] ^ o3[i4[g6 + 8 >> 2] + 7 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 8 | 0] ^ o3[i4[g6 + 8 >> 2] + 8 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 9 | 0] ^ o3[i4[g6 + 8 >> 2] + 9 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 10 | 0] ^ o3[i4[g6 + 8 >> 2] + 10 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 11 | 0] ^ o3[i4[g6 + 8 >> 2] + 11 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 12 | 0] ^ o3[i4[g6 + 8 >> 2] + 12 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 13 | 0] ^ o3[i4[g6 + 8 >> 2] + 13 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 14 | 0] ^ o3[i4[g6 + 8 >> 2] + 14 | 0], i4[g6 + 4 >> 2] = i4[g6 + 4 >> 2] | o3[i4[g6 + 12 >> 2] + 15 | 0] ^ o3[i4[g6 + 8 >> 2] + 15 | 0], (i4[g6 + 4 >> 2] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function EI(A8, I7, g6, C4, B4, Q5, o4) {
                      var E4, a4, _4, c4 = 0, t4 = 0, r4 = 0, e6 = 0;
                      s3 = E4 = s3 - 352 | 0, yA(E4, Q5, o4, 0);
                      A: {
                        if (!(((c4 = !!(0 | B4)) | !B4 & C4 >>> 0 > A8 - g6 >>> 0) & A8 >>> 0 > g6 >>> 0) & (!B4 & g6 - A8 >>> 0 >= C4 >>> 0 | A8 >>> 0 >= g6 >>> 0)) {
                          if (i4[E4 + 56 >> 2] = 0, i4[E4 + 60 >> 2] = 0, i4[E4 + 48 >> 2] = 0, i4[E4 + 52 >> 2] = 0, i4[E4 + 40 >> 2] = 0, i4[E4 + 44 >> 2] = 0, i4[E4 + 32 >> 2] = 0, i4[E4 + 36 >> 2] = 0, t4 = (o4 = (c4 = !!(0 | B4)) | !B4 & C4 >>> 0 >= 32) ? 32 : C4, r4 = o4 ? 0 : B4, o4 = c4 | !B4 & C4 >>> 0 > 32, !(C4 | B4)) {
                            e6 = 1;
                            break A;
                          }
                        } else g6 = yg(A8, g6, C4), i4[E4 + 56 >> 2] = 0, i4[E4 + 60 >> 2] = 0, i4[E4 + 48 >> 2] = 0, i4[E4 + 52 >> 2] = 0, i4[E4 + 40 >> 2] = 0, i4[E4 + 44 >> 2] = 0, i4[E4 + 32 >> 2] = 0, i4[E4 + 36 >> 2] = 0, t4 = (o4 = c4 | !B4 & C4 >>> 0 >= 32) ? 32 : C4, r4 = o4 ? 0 : B4, o4 = c4 | !B4 & C4 >>> 0 > 32;
                        Ng(E4 - -64 | 0, g6, t4), e6 = 0;
                      }
                      return c4 = r4, ug(a4 = E4 + 32 | 0, a4, _4 = t4 + 32 | 0, c4 = _4 >>> 0 < 32 ? c4 + 1 | 0 : c4, c4 = Q5 + 16 | 0, E4), wC(E4 + 96 | 0, a4), e6 || Ng(A8, E4 - -64 | 0, t4), XC(E4 + 32 | 0, 64), o4 && mg(A8 + t4 | 0, g6 + t4 | 0, C4 - t4 | 0, B4 - ((C4 >>> 0 < t4 >>> 0) + r4 | 0) | 0, c4, 1, 0, E4), XC(E4, 32), SC(g6 = E4 + 96 | 0, A8, C4, B4), nC(g6, I7), XC(g6, 256), s3 = E4 + 352 | 0, 0;
                    }
                    function aI(A8, I7, g6, C4, B4, Q5, o4) {
                      var E4, a4, _4, c4 = 0, t4 = 0, r4 = 0, e6 = 0;
                      s3 = E4 = s3 - 352 | 0, wA(E4, Q5, o4, 0);
                      A: {
                        if (!(((c4 = !!(0 | B4)) | !B4 & C4 >>> 0 > A8 - g6 >>> 0) & A8 >>> 0 > g6 >>> 0) & (!B4 & g6 - A8 >>> 0 >= C4 >>> 0 | A8 >>> 0 >= g6 >>> 0)) {
                          if (i4[E4 + 56 >> 2] = 0, i4[E4 + 60 >> 2] = 0, i4[E4 + 48 >> 2] = 0, i4[E4 + 52 >> 2] = 0, i4[E4 + 40 >> 2] = 0, i4[E4 + 44 >> 2] = 0, i4[E4 + 32 >> 2] = 0, i4[E4 + 36 >> 2] = 0, t4 = (o4 = (c4 = !!(0 | B4)) | !B4 & C4 >>> 0 >= 32) ? 32 : C4, r4 = o4 ? 0 : B4, o4 = c4 | !B4 & C4 >>> 0 > 32, !(C4 | B4)) {
                            e6 = 1;
                            break A;
                          }
                        } else g6 = yg(A8, g6, C4), i4[E4 + 56 >> 2] = 0, i4[E4 + 60 >> 2] = 0, i4[E4 + 48 >> 2] = 0, i4[E4 + 52 >> 2] = 0, i4[E4 + 40 >> 2] = 0, i4[E4 + 44 >> 2] = 0, i4[E4 + 32 >> 2] = 0, i4[E4 + 36 >> 2] = 0, t4 = (o4 = c4 | !B4 & C4 >>> 0 >= 32) ? 32 : C4, r4 = o4 ? 0 : B4, o4 = c4 | !B4 & C4 >>> 0 > 32;
                        Ng(E4 - -64 | 0, g6, t4), e6 = 0;
                      }
                      return c4 = r4, aC(a4 = E4 + 32 | 0, a4, _4 = t4 + 32 | 0, c4 = _4 >>> 0 < 32 ? c4 + 1 | 0 : c4, c4 = Q5 + 16 | 0, E4), wC(E4 + 96 | 0, a4), e6 || Ng(A8, E4 - -64 | 0, t4), XC(E4 + 32 | 0, 64), o4 && oC(A8 + t4 | 0, g6 + t4 | 0, C4 - t4 | 0, B4 - ((C4 >>> 0 < t4 >>> 0) + r4 | 0) | 0, c4, 1, 0, E4), XC(E4, 32), SC(g6 = E4 + 96 | 0, A8, C4, B4), nC(g6, I7), XC(g6, 256), s3 = E4 + 352 | 0, 0;
                    }
                    function _I(A8, I7, g6, B4, Q5) {
                      var o4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, s3 = o4 = s3 - 480 | 0, iI(o4, Q5 |= 0, 32), dC(o4, I7, g6, B4), wg(o4, o4 + 416 | 0), I7 = i4[o4 + 444 >> 2], g6 = i4[o4 + 440 >> 2], C3[A8 + 24 | 0] = g6, C3[A8 + 25 | 0] = g6 >>> 8, C3[A8 + 26 | 0] = g6 >>> 16, C3[A8 + 27 | 0] = g6 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = i4[o4 + 436 >> 2], g6 = i4[o4 + 432 >> 2], C3[A8 + 16 | 0] = g6, C3[A8 + 17 | 0] = g6 >>> 8, C3[A8 + 18 | 0] = g6 >>> 16, C3[A8 + 19 | 0] = g6 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = i4[o4 + 428 >> 2], g6 = i4[o4 + 424 >> 2], C3[A8 + 8 | 0] = g6, C3[A8 + 9 | 0] = g6 >>> 8, C3[A8 + 10 | 0] = g6 >>> 16, C3[A8 + 11 | 0] = g6 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = i4[o4 + 420 >> 2], g6 = i4[o4 + 416 >> 2], C3[0 | A8] = g6, C3[A8 + 1 | 0] = g6 >>> 8, C3[A8 + 2 | 0] = g6 >>> 16, C3[A8 + 3 | 0] = g6 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, s3 = o4 + 480 | 0, 0;
                    }
                    function cI(A8, I7, g6) {
                      A8 |= 0, I7 |= 0;
                      var B4, Q5 = 0;
                      return s3 = B4 = s3 + -64 | 0, FI(B4, g6 |= 0, 32, 0), g6 = i4[B4 + 28 >> 2], Q5 = i4[B4 + 24 >> 2], C3[I7 + 24 | 0] = Q5, C3[I7 + 25 | 0] = Q5 >>> 8, C3[I7 + 26 | 0] = Q5 >>> 16, C3[I7 + 27 | 0] = Q5 >>> 24, C3[I7 + 28 | 0] = g6, C3[I7 + 29 | 0] = g6 >>> 8, C3[I7 + 30 | 0] = g6 >>> 16, C3[I7 + 31 | 0] = g6 >>> 24, g6 = i4[B4 + 20 >> 2], Q5 = i4[B4 + 16 >> 2], C3[I7 + 16 | 0] = Q5, C3[I7 + 17 | 0] = Q5 >>> 8, C3[I7 + 18 | 0] = Q5 >>> 16, C3[I7 + 19 | 0] = Q5 >>> 24, C3[I7 + 20 | 0] = g6, C3[I7 + 21 | 0] = g6 >>> 8, C3[I7 + 22 | 0] = g6 >>> 16, C3[I7 + 23 | 0] = g6 >>> 24, g6 = i4[B4 + 12 >> 2], Q5 = i4[B4 + 8 >> 2], C3[I7 + 8 | 0] = Q5, C3[I7 + 9 | 0] = Q5 >>> 8, C3[I7 + 10 | 0] = Q5 >>> 16, C3[I7 + 11 | 0] = Q5 >>> 24, C3[I7 + 12 | 0] = g6, C3[I7 + 13 | 0] = g6 >>> 8, C3[I7 + 14 | 0] = g6 >>> 16, C3[I7 + 15 | 0] = g6 >>> 24, g6 = i4[B4 + 4 >> 2], Q5 = i4[B4 >> 2], C3[0 | I7] = Q5, C3[I7 + 1 | 0] = Q5 >>> 8, C3[I7 + 2 | 0] = Q5 >>> 16, C3[I7 + 3 | 0] = Q5 >>> 24, C3[I7 + 4 | 0] = g6, C3[I7 + 5 | 0] = g6 >>> 8, C3[I7 + 6 | 0] = g6 >>> 16, C3[I7 + 7 | 0] = g6 >>> 24, XC(B4, 64), A8 = pC(A8, I7), s3 = B4 - -64 | 0, 0 | A8;
                    }
                    function tI(A8, I7) {
                      var g6 = 0, C4 = 0, B4 = 0, Q5 = 0, o4 = 0, E4 = 0;
                      return I7 >>> 0 > 4294967168 ? 48 : (I7 >>> 0 >= 4294967168 ? (i4[9404] = 48, g6 = 0) : (g6 = 0, (I7 = K3(76 + (Q5 = I7 >>> 0 < 11 ? 16 : I7 + 11 & -8) | 0)) && (g6 = I7 - 8 | 0, 63 & I7 ? (B4 = (-8 & (E4 = i4[(o4 = I7 - 4 | 0) >> 2])) - (C4 = (I7 = ((I7 = (I7 + 63 & -64) - 8 | 0) - g6 >>> 0 <= 15 ? 64 : 0) + I7 | 0) - g6 | 0) | 0, 3 & E4 ? (i4[I7 + 4 >> 2] = B4 | 1 & i4[I7 + 4 >> 2] | 2, i4[4 + (B4 = I7 + B4 | 0) >> 2] = 1 | i4[B4 + 4 >> 2], i4[o4 >> 2] = C4 | 1 & i4[o4 >> 2] | 2, i4[4 + (B4 = g6 + C4 | 0) >> 2] = 1 | i4[B4 + 4 >> 2], oA(g6, C4)) : (g6 = i4[g6 >> 2], i4[I7 + 4 >> 2] = B4, i4[I7 >> 2] = g6 + C4)) : I7 = g6, 3 & (g6 = i4[I7 + 4 >> 2]) && ((C4 = -8 & g6) >>> 0 <= Q5 + 16 >>> 0 || (i4[I7 + 4 >> 2] = Q5 | 1 & g6 | 2, g6 = I7 + Q5 | 0, Q5 = C4 - Q5 | 0, i4[g6 + 4 >> 2] = 3 | Q5, i4[4 + (C4 = I7 + C4 | 0) >> 2] = 1 | i4[C4 + 4 >> 2], oA(g6, Q5))), g6 = I7 + 8 | 0)), g6 ? (i4[A8 >> 2] = g6, 0) : 48);
                    }
                    function rI(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4, c4) {
                      var t4;
                      if (t4 = bg(A8, 0, I7), 1 == (0 | g6) | g6 >>> 0 > 1) return i4[9404] = 22, -1;
                      if (!(!g6 & I7 >>> 0 <= 15)) {
                        if (!(!(Q5 | a4) & _4 >>> 0 < 2147483649)) return i4[9404] = 22, -1;
                        if (!(!((!a4 & E4 >>> 0 >= 3 | !!(0 | a4)) & _4 >>> 0 > 8191) | (0 | C4) == (0 | t4))) return 1 == (0 | c4) ? (Q5 = _4 >>> 10 | 0, s3 = A8 = s3 + -64 | 0, t4 && ag(t4, I7), (g6 = K3(I7)) ? (i4[A8 + 36 >> 2] = 0, i4[A8 + 40 >> 2] = 0, i4[A8 + 28 >> 2] = 0, i4[A8 + 32 >> 2] = 0, i4[A8 + 24 >> 2] = 16, i4[A8 + 20 >> 2] = o4, i4[A8 + 16 >> 2] = B4, i4[A8 + 12 >> 2] = C4, i4[A8 + 8 >> 2] = I7, i4[A8 + 4 >> 2] = g6, i4[A8 + 60 >> 2] = 0, i4[A8 + 56 >> 2] = 1, i4[A8 + 52 >> 2] = 1, i4[A8 + 48 >> 2] = Q5, i4[A8 + 44 >> 2] = E4, (C4 = q2(A8 + 4 | 0, 1)) | !t4 || Ng(t4, g6, I7), XC(g6, I7), BA(g6)) : C4 = -22, s3 = A8 - -64 | 0, C4 ? -1 : 0) : (i4[9404] = 28, -1);
                      }
                      return i4[9404] = 28, -1;
                    }
                    function eI(A8, I7, g6, C4, B4, Q5, i5) {
                      var o4, E4, a4 = 0, _4 = 0, c4 = 0;
                      s3 = o4 = s3 - 96 | 0, wA(o4, Q5, i5, 0), DC(i5 = o4 + 32 | 0, 32, 0, E4 = Q5 + 16 | 0, o4), Q5 = -1;
                      A: {
                        I: if (!fC(g6, I7, C4, B4, i5)) {
                          if (Q5 = 0, !A8) break A;
                          g: {
                            if (!(((g6 = !!(0 | B4)) | !B4 & C4 >>> 0 > I7 - A8 >>> 0) & A8 >>> 0 < I7 >>> 0) & (!B4 & C4 >>> 0 <= A8 - I7 >>> 0 | A8 >>> 0 <= I7 >>> 0)) {
                              if (!(C4 | B4)) break g;
                              g6 = (Q5 = !B4 & C4 >>> 0 >= 32 | !!(0 | B4)) ? 32 : C4, a4 = Q5 ? 0 : B4;
                            } else I7 = yg(A8, I7, C4), g6 = (Q5 = g6 | !B4 & C4 >>> 0 >= 32) ? 32 : C4, a4 = Q5 ? 0 : B4;
                            if (Q5 = a4, c4 = Ng(o4 - -64 | 0, I7, g6), aC(i5 = o4 + 32 | 0, i5, _4 = g6 + 32 | 0, Q5 = _4 >>> 0 < 32 ? Q5 + 1 | 0 : Q5, E4, o4), A8 = Ng(A8, c4, g6), XC(i5, 64), Q5 = 0, !B4 & C4 >>> 0 < 33) break I;
                            oC(A8 + g6 | 0, I7 + g6 | 0, C4 - g6 | 0, B4 - (a4 + (g6 >>> 0 > C4 >>> 0) | 0) | 0, E4, 1, 0, o4);
                            break I;
                          }
                          aC(A8 = o4 + 32 | 0, A8, 32, 0, E4, o4), XC(A8, 64);
                        }
                        XC(o4, 32);
                      }
                      return s3 = o4 + 96 | 0, Q5;
                    }
                    function yI(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4, c4) {
                      var t4;
                      if (t4 = bg(A8, 0, I7), 1 == (0 | g6) | g6 >>> 0 > 1) return i4[9404] = 22, -1;
                      if (!(!g6 & I7 >>> 0 <= 15)) {
                        if (!(!(Q5 | a4) & _4 >>> 0 < 2147483649)) return i4[9404] = 22, -1;
                        if (!(!(!!(E4 | a4) & _4 >>> 0 > 8191) | (0 | C4) == (0 | t4))) return 2 == (0 | c4) ? (Q5 = _4 >>> 10 | 0, s3 = A8 = s3 + -64 | 0, t4 && ag(t4, I7), (g6 = K3(I7)) ? (i4[A8 + 36 >> 2] = 0, i4[A8 + 40 >> 2] = 0, i4[A8 + 28 >> 2] = 0, i4[A8 + 32 >> 2] = 0, i4[A8 + 24 >> 2] = 16, i4[A8 + 20 >> 2] = o4, i4[A8 + 16 >> 2] = B4, i4[A8 + 12 >> 2] = C4, i4[A8 + 8 >> 2] = I7, i4[A8 + 4 >> 2] = g6, i4[A8 + 60 >> 2] = 0, i4[A8 + 56 >> 2] = 1, i4[A8 + 52 >> 2] = 1, i4[A8 + 48 >> 2] = Q5, i4[A8 + 44 >> 2] = E4, (C4 = q2(A8 + 4 | 0, 2)) | !t4 || Ng(t4, g6, I7), XC(g6, I7), BA(g6)) : C4 = -22, s3 = A8 - -64 | 0, C4 ? -1 : 0) : (i4[9404] = 28, -1);
                      }
                      return i4[9404] = 28, -1;
                    }
                    function sI(A8, I7, g6, C4, B4, Q5, i5) {
                      var o4, E4, a4 = 0, _4 = 0;
                      s3 = o4 = s3 - 96 | 0, yA(o4, Q5, i5, 0), Xg(i5 = o4 + 32 | 0, 32, 0, E4 = Q5 + 16 | 0, o4), Q5 = -1;
                      A: {
                        I: if (!fC(g6, I7, C4, B4, i5)) {
                          if (Q5 = 0, !A8) break A;
                          g: {
                            if (!(((g6 = !!(0 | B4)) | !B4 & C4 >>> 0 > I7 - A8 >>> 0) & A8 >>> 0 < I7 >>> 0) & (!B4 & C4 >>> 0 <= A8 - I7 >>> 0 | A8 >>> 0 <= I7 >>> 0)) {
                              if (!(C4 | B4)) break g;
                              g6 = (Q5 = !B4 & C4 >>> 0 >= 32 | !!(0 | B4)) ? 32 : C4, i5 = Q5 ? 0 : B4;
                            } else I7 = yg(A8, I7, C4), g6 = (Q5 = g6 | !B4 & C4 >>> 0 >= 32) ? 32 : C4, i5 = Q5 ? 0 : B4;
                            if (a4 = g6, _4 = Ng(o4 - -64 | 0, I7, g6), ug(g6 = o4 + 32 | 0, g6, Q5 = a4 + 32 | 0, Q5 >>> 0 < 32 ? i5 + 1 | 0 : i5, E4, o4), g6 = Ng(A8, _4, a4), Q5 = 0, !B4 & C4 >>> 0 < 33) break I;
                            mg(g6 + a4 | 0, I7 + a4 | 0, C4 - a4 | 0, B4 - (i5 + (C4 >>> 0 < a4 >>> 0) | 0) | 0, E4, 1, 0, o4);
                            break I;
                          }
                          ug(A8 = o4 + 32 | 0, A8, 32, 0, E4, o4);
                        }
                        XC(o4, 32);
                      }
                      return s3 = o4 + 96 | 0, Q5;
                    }
                    function hI(A8, I7, g6, C4, B4, Q5, E4, a4, _4, c4) {
                      var t4, r4;
                      return s3 = t4 = s3 - 400 | 0, i4[t4 + 4 >> 2] = 0, yA(r4 = t4 + 16 | 0, _4, c4, 0), c4 = o3[_4 + 20 | 0] | o3[_4 + 21 | 0] << 8 | o3[_4 + 22 | 0] << 16 | o3[_4 + 23 | 0] << 24, i4[t4 + 8 >> 2] = o3[_4 + 16 | 0] | o3[_4 + 17 | 0] << 8 | o3[_4 + 18 | 0] << 16 | o3[_4 + 19 | 0] << 24, i4[t4 + 12 >> 2] = c4, jg(c4 = t4 + 80 | 0, 64, 0, t4 + 4 | 0, r4), wC(_4 = t4 + 144 | 0, c4), XC(c4, 64), SC(_4, Q5, E4, a4), SC(_4, 35680, 0 - E4 & 15, 0), SC(_4, I7, g6, C4), SC(_4, 35680, 0 - g6 & 15, 0), i4[t4 + 72 >> 2] = E4, i4[t4 + 76 >> 2] = a4, SC(_4, Q5 = t4 + 72 | 0, 8, 0), i4[t4 + 72 >> 2] = g6, i4[t4 + 76 >> 2] = C4, SC(_4, Q5, 8, 0), nC(_4, Q5 = t4 + 48 | 0), XC(_4, 256), _4 = oI(Q5, B4), XC(Q5, 16), A8 && (_4 ? (bg(A8, 0, g6), _4 = -1) : (Og(A8, I7, g6, C4, t4 + 4 | 0, t4 + 16 | 0), _4 = 0)), XC(t4 + 16 | 0, 32), s3 = t4 + 400 | 0, _4;
                    }
                    function DI(A8, I7, g6, B4, Q5, o4) {
                      var E4, a4;
                      if (s3 = E4 = s3 - 496 | 0, mA(a4 = E4 + 288 | 0, A8, I7), mC(a4, g6, B4, 0), o4) for (A8 = 0, I7 = 0; g6 = (I7 = I7 + 1 | 0) << 24 | (65280 & I7) << 8 | I7 >>> 8 & 65280 | I7 >>> 24, C3[E4 + 76 | 0] = g6, C3[E4 + 77 | 0] = g6 >>> 8, C3[E4 + 78 | 0] = g6 >>> 16, C3[E4 + 79 | 0] = g6 >>> 24, Ng(g6 = E4 + 80 | 0, E4 + 288 | 0, 208), mC(g6, E4 + 76 | 0, 4, 0), Sg(g6, E4 + 32 | 0), g6 = i4[E4 + 60 >> 2], i4[E4 + 24 >> 2] = i4[E4 + 56 >> 2], i4[E4 + 28 >> 2] = g6, g6 = i4[E4 + 52 >> 2], i4[E4 + 16 >> 2] = i4[E4 + 48 >> 2], i4[E4 + 20 >> 2] = g6, g6 = i4[E4 + 44 >> 2], i4[E4 + 8 >> 2] = i4[E4 + 40 >> 2], i4[E4 + 12 >> 2] = g6, g6 = i4[E4 + 36 >> 2], i4[E4 >> 2] = i4[E4 + 32 >> 2], i4[E4 + 4 >> 2] = g6, Ng(g6 = A8 + Q5 | 0, E4, (A8 = o4 - A8 | 0) >>> 0 >= 32 ? 32 : A8), o4 >>> 0 > (A8 = I7 << 5) >>> 0; ) ;
                      XC(E4 + 288 | 0, 208), s3 = E4 + 496 | 0;
                    }
                    function fI(A8, I7, g6, B4, Q5, i5) {
                      var o4, E4, a4 = 0;
                      return s3 = o4 = s3 - 32 | 0, a4 = -1, (E4 = g6 >>> 0 < 32) & !B4 || (Ug(o4, 32, 0, Q5, i5), fC(I7 + 16 | 0, I7 + 32 | 0, g6 - 32 | 0, B4 - E4 | 0, o4) || (Gg(A8, I7, g6, B4, Q5, i5), C3[A8 + 24 | 0] = 0, C3[A8 + 25 | 0] = 0, C3[A8 + 26 | 0] = 0, C3[A8 + 27 | 0] = 0, C3[A8 + 28 | 0] = 0, C3[A8 + 29 | 0] = 0, C3[A8 + 30 | 0] = 0, C3[A8 + 31 | 0] = 0, C3[A8 + 16 | 0] = 0, C3[A8 + 17 | 0] = 0, C3[A8 + 18 | 0] = 0, C3[A8 + 19 | 0] = 0, C3[A8 + 20 | 0] = 0, C3[A8 + 21 | 0] = 0, C3[A8 + 22 | 0] = 0, C3[A8 + 23 | 0] = 0, C3[A8 + 8 | 0] = 0, C3[A8 + 9 | 0] = 0, C3[A8 + 10 | 0] = 0, C3[A8 + 11 | 0] = 0, C3[A8 + 12 | 0] = 0, C3[A8 + 13 | 0] = 0, C3[A8 + 14 | 0] = 0, C3[A8 + 15 | 0] = 0, C3[0 | A8] = 0, C3[A8 + 1 | 0] = 0, C3[A8 + 2 | 0] = 0, C3[A8 + 3 | 0] = 0, C3[A8 + 4 | 0] = 0, C3[A8 + 5 | 0] = 0, C3[A8 + 6 | 0] = 0, C3[A8 + 7 | 0] = 0, a4 = 0)), s3 = o4 + 32 | 0, a4;
                    }
                    function pI(A8, I7, g6, C4, B4, Q5, E4, a4, _4, c4, t4) {
                      var r4, e6, y4;
                      return s3 = r4 = s3 - 384 | 0, i4[r4 + 4 >> 2] = 0, yA(e6 = r4 + 16 | 0, c4, t4, 0), t4 = o3[c4 + 20 | 0] | o3[c4 + 21 | 0] << 8 | o3[c4 + 22 | 0] << 16 | o3[c4 + 23 | 0] << 24, i4[r4 + 8 >> 2] = o3[c4 + 16 | 0] | o3[c4 + 17 | 0] << 8 | o3[c4 + 18 | 0] << 16 | o3[c4 + 19 | 0] << 24, i4[r4 + 12 >> 2] = t4, jg(t4 = r4 - -64 | 0, 64, 0, y4 = r4 + 4 | 0, e6), wC(c4 = r4 + 128 | 0, t4), XC(t4, 64), SC(c4, E4, a4, _4), SC(c4, 35680, 0 - a4 & 15, 0), Og(A8, C4, B4, Q5, y4, e6), SC(c4, A8, B4, Q5), SC(c4, 35680, 0 - B4 & 15, 0), i4[r4 + 56 >> 2] = a4, i4[r4 + 60 >> 2] = _4, SC(c4, A8 = r4 + 56 | 0, 8, 0), i4[r4 + 56 >> 2] = B4, i4[r4 + 60 >> 2] = Q5, SC(c4, A8, 8, 0), nC(c4, I7), XC(c4, 256), g6 && (i4[g6 >> 2] = 16, i4[g6 + 4 >> 2] = 0), XC(r4 + 16 | 0, 32), s3 = r4 + 384 | 0, 0;
                    }
                    function wI(A8, I7, g6, C4, B4) {
                      var Q5, E4, a4 = 0;
                      return s3 = Q5 = s3 + -64 | 0, !g6 & (E4 = RI(A8)) >>> 0 < 128 ? (i4[Q5 + 60 >> 2] = 0, i4[Q5 + 52 >> 2] = 0, i4[Q5 + 56 >> 2] = 0, i4[Q5 + 44 >> 2] = 0, i4[Q5 + 48 >> 2] = 0, g6 = 0, E4 && (g6 = E4, (1 | E4) >>> 0 < 65536 || (g6 = E4)), !(a4 = K3(g6)) | !(3 & o3[a4 - 4 | 0]) || bg(a4, 0, g6), a4 ? (i4[Q5 + 36 >> 2] = 0, i4[Q5 + 40 >> 2] = 0, i4[Q5 + 12 >> 2] = a4, i4[Q5 + 20 >> 2] = a4, i4[Q5 + 24 >> 2] = E4, i4[Q5 + 4 >> 2] = a4, i4[Q5 + 16 >> 2] = E4, i4[Q5 + 28 >> 2] = 0, i4[Q5 + 32 >> 2] = 0, i4[Q5 + 8 >> 2] = E4, OA(Q5 + 4 | 0, A8, B4) ? (i4[9404] = 28, A8 = -1) : A8 = i4[Q5 + 44 >> 2] != (0 | I7) | i4[Q5 + 48 >> 2] != (C4 >>> 10 | 0), BA(a4)) : A8 = -1) : (i4[9404] = 28, A8 = -1), s3 = Q5 - -64 | 0, A8;
                    }
                    function nI(A8) {
                      var I7, g6 = 0, C4 = 0;
                      if (!A8) return -25;
                      if (!i4[A8 >> 2]) return -1;
                      if (E3[A8 + 4 >> 2] < 16) return -2;
                      if (!(i4[A8 + 8 >> 2] | !i4[A8 + 12 >> 2])) return -18;
                      if (g6 = i4[A8 + 20 >> 2], !i4[A8 + 16 >> 2]) return g6 ? -19 : -6;
                      if (g6 >>> 0 < 8) return -6;
                      if (!(i4[A8 + 24 >> 2] | !i4[A8 + 28 >> 2])) return -20;
                      if (!(i4[A8 + 32 >> 2] | !i4[A8 + 36 >> 2])) return -21;
                      if (!(g6 = i4[A8 + 48 >> 2])) return -16;
                      if (g6 >>> 0 > 16777215) return -17;
                      if (C4 = -14, !((I7 = i4[A8 + 44 >> 2]) >>> 0 < 8)) {
                        if (I7 >>> 0 > 2097152) return -15;
                        if (!(g6 << 3 >>> 0 > I7 >>> 0)) {
                          if (!i4[A8 + 40 >> 2]) return -12;
                          if (!(A8 = i4[A8 + 52 >> 2])) return -28;
                          C4 = A8 >>> 0 > 16777215 ? -29 : 0;
                        }
                      }
                      return C4;
                    }
                    function kI(A8, I7) {
                      var g6, C4 = 0, B4 = 0;
                      g6 = I7;
                      A: {
                        I: {
                          g: {
                            if (I7 &= 255) {
                              if (3 & A8) for (; ; ) {
                                if (!(C4 = o3[0 | A8]) | (0 | I7) == (0 | C4)) break A;
                                if (!(3 & (A8 = A8 + 1 | 0))) break;
                              }
                              if (-2139062144 != (-2139062144 & ((C4 = i4[A8 >> 2]) | 16843008 - C4))) break g;
                              for (B4 = a3(I7, 16843009); ; ) {
                                if (-2139062144 != (-2139062144 & (16843008 - (I7 = C4 ^ B4) | I7))) break g;
                                if (C4 = i4[A8 + 4 >> 2], A8 = I7 = A8 + 4 | 0, -2139062144 != (-2139062144 & (16843008 - C4 | C4))) break;
                              }
                              break I;
                            }
                            A8 = RI(A8) + A8 | 0;
                            break A;
                          }
                          I7 = A8;
                        }
                        for (; ; ) {
                          if (!(C4 = o3[0 | (A8 = I7)])) break A;
                          if (I7 = A8 + 1 | 0, (0 | C4) == (255 & g6)) break;
                        }
                      }
                      return o3[0 | A8] == (255 & g6) ? A8 : 0;
                    }
                    function FI(A8, I7, g6, C4) {
                      var B4, Q5 = 0;
                      return s3 = B4 = s3 - 208 | 0, i4[B4 + 72 >> 2] = 0, i4[B4 + 76 >> 2] = 0, Q5 = i4[8591], i4[B4 + 8 >> 2] = i4[8590], i4[B4 + 12 >> 2] = Q5, Q5 = i4[8593], i4[B4 + 16 >> 2] = i4[8592], i4[B4 + 20 >> 2] = Q5, Q5 = i4[8595], i4[B4 + 24 >> 2] = i4[8594], i4[B4 + 28 >> 2] = Q5, Q5 = i4[8597], i4[B4 + 32 >> 2] = i4[8596], i4[B4 + 36 >> 2] = Q5, Q5 = i4[8599], i4[B4 + 40 >> 2] = i4[8598], i4[B4 + 44 >> 2] = Q5, Q5 = i4[8601], i4[B4 + 48 >> 2] = i4[8600], i4[B4 + 52 >> 2] = Q5, Q5 = i4[8603], i4[B4 + 56 >> 2] = i4[8602], i4[B4 + 60 >> 2] = Q5, i4[B4 + 64 >> 2] = 0, i4[B4 + 68 >> 2] = 0, Q5 = i4[8589], i4[B4 >> 2] = i4[8588], i4[B4 + 4 >> 2] = Q5, SA(B4, I7, g6, C4), j(B4, A8), s3 = B4 + 208 | 0, 0;
                    }
                    function SI(A8) {
                      var I7 = 0;
                      return i4[64 + (A8 |= 0) >> 2] = 0, i4[A8 + 68 >> 2] = 0, i4[A8 + 72 >> 2] = 0, i4[A8 + 76 >> 2] = 0, I7 = i4[8589], i4[A8 >> 2] = i4[8588], i4[A8 + 4 >> 2] = I7, I7 = i4[8591], i4[A8 + 8 >> 2] = i4[8590], i4[A8 + 12 >> 2] = I7, I7 = i4[8593], i4[A8 + 16 >> 2] = i4[8592], i4[A8 + 20 >> 2] = I7, I7 = i4[8595], i4[A8 + 24 >> 2] = i4[8594], i4[A8 + 28 >> 2] = I7, I7 = i4[8597], i4[A8 + 32 >> 2] = i4[8596], i4[A8 + 36 >> 2] = I7, I7 = i4[8599], i4[A8 + 40 >> 2] = i4[8598], i4[A8 + 44 >> 2] = I7, I7 = i4[8601], i4[A8 + 48 >> 2] = i4[8600], i4[A8 + 52 >> 2] = I7, I7 = i4[8603], i4[A8 + 56 >> 2] = i4[8602], i4[A8 + 60 >> 2] = I7, 0;
                    }
                    function NI(A8) {
                      return ~((127 & ~o3[A8 + 31 | 0] | o3[A8 + 1 | 0] & o3[A8 + 2 | 0] & o3[A8 + 3 | 0] & o3[A8 + 4 | 0] & o3[A8 + 5 | 0] & o3[A8 + 6 | 0] & o3[A8 + 7 | 0] & o3[A8 + 8 | 0] & o3[A8 + 9 | 0] & o3[A8 + 10 | 0] & o3[A8 + 11 | 0] & o3[A8 + 12 | 0] & o3[A8 + 13 | 0] & o3[A8 + 14 | 0] & o3[A8 + 15 | 0] & o3[A8 + 16 | 0] & o3[A8 + 17 | 0] & o3[A8 + 18 | 0] & o3[A8 + 19 | 0] & o3[A8 + 20 | 0] & o3[A8 + 21 | 0] & o3[A8 + 22 | 0] & o3[A8 + 23 | 0] & o3[A8 + 24 | 0] & o3[A8 + 25 | 0] & o3[A8 + 26 | 0] & o3[A8 + 27 | 0] & o3[A8 + 28 | 0] & o3[A8 + 30 | 0] & o3[A8 + 29 | 0] ^ 255) - 1 & 236 - o3[0 | A8]) >>> 8 & 1;
                    }
                    function GI(A8, I7) {
                      var g6, B4 = 0, Q5 = 0, i5 = 0, E4 = 0;
                      if (C3[15 + (g6 = s3 - 16 | 0) | 0] = 0, I7) {
                        if (I7 >>> 0 >= 4) for (E4 = -4 & I7; B4 = A8 + Q5 | 0, C3[g6 + 15 | 0] = o3[0 | B4] | o3[g6 + 15 | 0], C3[g6 + 15 | 0] = o3[B4 + 1 | 0] | o3[g6 + 15 | 0], C3[g6 + 15 | 0] = o3[B4 + 2 | 0] | o3[g6 + 15 | 0], C3[g6 + 15 | 0] = o3[B4 + 3 | 0] | o3[g6 + 15 | 0], Q5 = Q5 + 4 | 0, (0 | E4) != (0 | (i5 = i5 + 4 | 0)); ) ;
                        if (B4 = 3 & I7) for (I7 = 0; C3[g6 + 15 | 0] = o3[A8 + Q5 | 0] | o3[g6 + 15 | 0], Q5 = Q5 + 1 | 0, (0 | B4) != (0 | (I7 = I7 + 1 | 0)); ) ;
                      }
                      return o3[g6 + 15 | 0] - 1 >>> 8 & 1;
                    }
                    function MI(A8, I7, g6) {
                      var B4, Q5 = 0, E4 = 0;
                      if (i4[12 + (B4 = s3 - 16 | 0) >> 2] = A8, i4[B4 + 8 >> 2] = I7, A8 = 0, C3[B4 + 7 | 0] = 0, g6) {
                        if (I7 = 1 & g6, 1 != (0 | g6)) for (E4 = -2 & g6, g6 = 0; C3[B4 + 7 | 0] = o3[B4 + 7 | 0] | o3[i4[B4 + 12 >> 2] + A8 | 0] ^ o3[i4[B4 + 8 >> 2] + A8 | 0], Q5 = 1 | A8, C3[B4 + 7 | 0] = o3[B4 + 7 | 0] | o3[Q5 + i4[B4 + 12 >> 2] | 0] ^ o3[i4[B4 + 8 >> 2] + Q5 | 0], A8 = A8 + 2 | 0, (0 | E4) != (0 | (g6 = g6 + 2 | 0)); ) ;
                        I7 && (C3[B4 + 7 | 0] = o3[B4 + 7 | 0] | o3[i4[B4 + 12 >> 2] + A8 | 0] ^ o3[i4[B4 + 8 >> 2] + A8 | 0]);
                      }
                      return (o3[B4 + 7 | 0] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function KI(A8) {
                      for (var I7 = 0, g6 = 0, C4 = 0, B4 = 0, Q5 = 0, i5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0; B4 = (g6 = o3[A8 + C4 | 0]) ^ o3[0 | (I7 = C4 + 2688 | 0)] | B4, Q5 = g6 ^ o3[I7 + 192 | 0] | Q5, i5 = g6 ^ o3[I7 + 160 | 0] | i5, E4 = g6 ^ o3[I7 + 128 | 0] | E4, a4 = g6 ^ o3[I7 + 96 | 0] | a4, _4 = g6 ^ o3[I7 - -64 | 0] | _4, c4 = g6 ^ o3[I7 + 32 | 0] | c4, 31 != (0 | (C4 = C4 + 1 | 0)); ) ;
                      return ((255 & ((I7 = 127 ^ (A8 = 127 & o3[A8 + 31 | 0])) | Q5)) - 1 | (255 & (I7 | i5)) - 1 | (255 & (I7 | E4)) - 1 | (255 & (122 ^ A8 | a4)) - 1 | (255 & (5 ^ A8 | _4)) - 1 | (255 & (A8 | c4)) - 1 | (255 & (A8 | B4)) - 1) >>> 8 & 1;
                    }
                    function UI(A8, I7, g6) {
                      var C4 = 0, B4 = 0, Q5 = 0, i5 = 0;
                      return B4 = 31 & (Q5 = i5 = 63 & g6), Q5 = Q5 >>> 0 >= 32 ? -1 >>> B4 | 0 : (C4 = -1 >>> B4 | 0) | (1 << B4) - 1 << 32 - B4, Q5 &= A8, C4 &= I7, B4 = 31 & i5, i5 >>> 0 >= 32 ? (C4 = Q5 << B4, i5 = 0) : (C4 = (1 << B4) - 1 & Q5 >>> 32 - B4 | C4 << B4, i5 = Q5 << B4), Q5 = C4, C4 = 31 & (B4 = 0 - g6 & 63), B4 >>> 0 >= 32 ? (C4 = -1 << C4, g6 = 0) : C4 = (g6 = -1 << C4) | (1 << C4) - 1 & -1 >>> 32 - C4, A8 &= g6, I7 &= C4, C4 = 31 & B4, B4 >>> 0 >= 32 ? (g6 = 0, A8 = I7 >>> C4 | 0) : (g6 = I7 >>> C4 | 0, A8 = ((1 << C4) - 1 & I7) << 32 - C4 | A8 >>> C4), f3 = g6 | Q5, A8 | i5;
                    }
                    function bI(A8, I7, g6, C4, B4, Q5) {
                      A8 |= 0, I7 |= 0, g6 |= 0;
                      var o4 = 0, E4 = 0;
                      A: I: {
                        g: {
                          if (!(!(B4 |= 0) & (C4 |= 0) >>> 0 < 64 || (E4 = 1 + (B4 = B4 - 1 | 0) | 0, o4 = B4, !(C4 = (B4 = C4 + -64 | 0) >>> 0 < 4294967232 ? E4 : o4) & B4 >>> 0 > 4294967231 | C4))) {
                            if (!U3(o4 = g6, g6 = g6 - -64 | 0, B4, C4, Q5 |= 0, 0)) break g;
                            A8 && bg(A8, 0, B4);
                          }
                          if (C4 = -1, !I7) break I;
                          i4[I7 >> 2] = 0, i4[I7 + 4 >> 2] = 0, C4 = -1;
                          break A;
                        }
                        I7 && (i4[I7 >> 2] = B4, i4[I7 + 4 >> 2] = C4), C4 = 0, A8 && yg(A8, g6, B4);
                      }
                      return 0 | C4;
                    }
                    function HI(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4) {
                      var c4, t4, r4;
                      return s3 = c4 = s3 - 352 | 0, jg(r4 = c4 + 32 | 0, 64, 0, a4, _4), wC(t4 = c4 + 96 | 0, r4), XC(r4, 64), SC(t4, Q5, o4, E4), SC(t4, 35648, 0 - o4 & 15, 0), SC(t4, I7, g6, C4), SC(t4, 35648, 0 - g6 & 15, 0), i4[c4 + 24 >> 2] = o4, i4[c4 + 28 >> 2] = E4, SC(t4, Q5 = c4 + 24 | 0, 8, 0), i4[c4 + 24 >> 2] = g6, i4[c4 + 28 >> 2] = C4, SC(t4, Q5, 8, 0), nC(t4, c4), XC(t4, 256), Q5 = oI(c4, B4), XC(c4, 16), A8 && (Q5 ? (bg(A8, 0, g6), Q5 = -1) : (Cg(A8, I7, g6, C4, a4, 1, _4), Q5 = 0)), s3 = c4 + 352 | 0, Q5;
                    }
                    function YI(A8, I7, g6, C4, B4, Q5) {
                      var E4, a4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, Q5 |= 0, s3 = E4 = s3 - 32 | 0, a4 = o3[0 | (B4 |= 0)] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, B4 = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24, i4[E4 + 24 >> 2] = 0, i4[E4 + 28 >> 2] = 0, i4[E4 + 16 >> 2] = a4, i4[E4 + 20 >> 2] = B4, i4[E4 + 8 >> 2] = 0, i4[E4 + 12 >> 2] = 0, i4[E4 >> 2] = g6, i4[E4 + 4 >> 2] = C4, I7 - 65 >>> 0 <= 4294967246 ? (i4[9404] = 28, A8 = -1) : A8 = QA(A8, I7, 0, 0, 0, Q5, 32, E4, E4 + 16 | 0), s3 = E4 + 32 | 0, 0 | A8;
                    }
                    function JI(A8, I7, g6, C4, B4) {
                      var Q5, o4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, s3 = Q5 = s3 - 512 | 0, iI(o4 = Q5 + 32 | 0, B4 |= 0, 32), dC(o4, I7, g6, C4), wg(o4, Q5 + 448 | 0), I7 = i4[Q5 + 476 >> 2], i4[Q5 + 24 >> 2] = i4[Q5 + 472 >> 2], i4[Q5 + 28 >> 2] = I7, I7 = i4[Q5 + 468 >> 2], i4[Q5 + 16 >> 2] = i4[Q5 + 464 >> 2], i4[Q5 + 20 >> 2] = I7, I7 = i4[Q5 + 460 >> 2], i4[Q5 + 8 >> 2] = i4[Q5 + 456 >> 2], i4[Q5 + 12 >> 2] = I7, I7 = i4[Q5 + 452 >> 2], i4[Q5 >> 2] = i4[Q5 + 448 >> 2], i4[Q5 + 4 >> 2] = I7, I7 = NC(A8, Q5), g6 = MI(Q5, A8, 32), s3 = Q5 + 512 | 0, ((0 | A8) == (0 | Q5) ? -1 : I7) | g6;
                    }
                    function dI(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4) {
                      var c4, t4, r4;
                      return s3 = c4 = s3 - 352 | 0, Xg(r4 = c4 + 32 | 0, 64, 0, a4, _4), wC(t4 = c4 + 96 | 0, r4), XC(r4, 64), SC(t4, Q5, o4, E4), i4[c4 + 24 >> 2] = o4, i4[c4 + 28 >> 2] = E4, SC(t4, Q5 = c4 + 24 | 0, 8, 0), SC(t4, I7, g6, C4), i4[c4 + 24 >> 2] = g6, i4[c4 + 28 >> 2] = C4, SC(t4, Q5, 8, 0), nC(t4, c4), XC(t4, 256), Q5 = oI(c4, B4), XC(c4, 16), A8 && (Q5 ? (bg(A8, 0, g6), Q5 = -1) : (mg(A8, I7, g6, C4, a4, 1, 0, _4), Q5 = 0)), s3 = c4 + 352 | 0, Q5;
                    }
                    function mI(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4, c4) {
                      var t4, r4, e6;
                      return s3 = t4 = s3 - 336 | 0, jg(e6 = t4 + 16 | 0, 64, 0, _4, c4), wC(r4 = t4 + 80 | 0, e6), XC(e6, 64), SC(r4, o4, E4, a4), SC(r4, 35648, 0 - E4 & 15, 0), Cg(A8, C4, B4, Q5, _4, 1, c4), SC(r4, A8, B4, Q5), SC(r4, 35648, 0 - B4 & 15, 0), i4[t4 + 8 >> 2] = E4, i4[t4 + 12 >> 2] = a4, SC(r4, A8 = t4 + 8 | 0, 8, 0), i4[t4 + 8 >> 2] = B4, i4[t4 + 12 >> 2] = Q5, SC(r4, A8, 8, 0), nC(r4, I7), XC(r4, 256), g6 && (i4[g6 >> 2] = 16, i4[g6 + 4 >> 2] = 0), s3 = t4 + 336 | 0, 0;
                    }
                    function lI(A8, I7) {
                      var g6, C4 = 0, B4 = 0, Q5 = 0, E4 = 0, _4 = 0;
                      A: if (!(((g6 = o3[0 | A8]) - 58 & 255) >>> 0 < 246)) {
                        for (C4 = g6, B4 = A8; ; ) {
                          if (E4 = B4, Q5 >>> 0 > 429496729) break A;
                          if ((C4 = (255 & C4) - 48 | 0) >>> 0 > ~(Q5 = a3(Q5, 10)) >>> 0) break A;
                          if (Q5 = Q5 + C4 | 0, !(((C4 = o3[0 | (B4 = B4 + 1 | 0)]) - 58 & 255) >>> 0 > 245)) break;
                        }
                        48 == (0 | g6) & (0 | A8) != (0 | E4) | (0 | A8) == (0 | B4) || (i4[I7 >> 2] = Q5, _4 = B4);
                      }
                      return _4;
                    }
                    function uI(A8) {
                      var I7 = 0, g6 = 0, C4 = 0, B4 = 0;
                      I7 = 65, g6 = 1024;
                      A: {
                        I: {
                          if ((0 | (C4 = 255 & A8)) != o3[1024]) for (C4 = a3(C4, 16843009); ; ) {
                            if (-2139062144 != (-2139062144 & ((B4 = C4 ^ i4[g6 >> 2]) | 16843008 - B4))) break I;
                            if (g6 = g6 + 4 | 0, !((I7 = I7 - 4 | 0) >>> 0 > 3)) break;
                          }
                          if (!I7) break A;
                        }
                        for (A8 &= 255; ; ) {
                          if ((0 | A8) == o3[0 | g6]) return g6;
                          if (g6 = g6 + 1 | 0, !(I7 = I7 - 1 | 0)) break;
                        }
                      }
                      return 0;
                    }
                    function xI(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4, c4) {
                      var t4, r4, e6;
                      return s3 = t4 = s3 - 336 | 0, Xg(e6 = t4 + 16 | 0, 64, 0, _4, c4), wC(r4 = t4 + 80 | 0, e6), XC(e6, 64), SC(r4, o4, E4, a4), i4[t4 + 8 >> 2] = E4, i4[t4 + 12 >> 2] = a4, SC(r4, o4 = t4 + 8 | 0, 8, 0), mg(A8, C4, B4, Q5, _4, 1, 0, c4), SC(r4, A8, B4, Q5), i4[t4 + 8 >> 2] = B4, i4[t4 + 12 >> 2] = Q5, SC(r4, o4, 8, 0), nC(r4, I7), XC(r4, 256), g6 && (i4[g6 >> 2] = 16, i4[g6 + 4 >> 2] = 0), s3 = t4 + 336 | 0, 0;
                    }
                    function vI(A8, I7, g6, B4, Q5, i5) {
                      return !B4 & g6 >>> 0 >= 32 | B4 ? (Gg(A8, I7, g6, B4, Q5, i5), hC(A8 + 16 | 0, A8 + 32 | 0, g6 - 32 | 0, B4 - (g6 >>> 0 < 32) | 0, A8), C3[A8 + 8 | 0] = 0, C3[A8 + 9 | 0] = 0, C3[A8 + 10 | 0] = 0, C3[A8 + 11 | 0] = 0, C3[A8 + 12 | 0] = 0, C3[A8 + 13 | 0] = 0, C3[A8 + 14 | 0] = 0, C3[A8 + 15 | 0] = 0, C3[0 | A8] = 0, C3[A8 + 1 | 0] = 0, C3[A8 + 2 | 0] = 0, C3[A8 + 3 | 0] = 0, C3[A8 + 4 | 0] = 0, C3[A8 + 5 | 0] = 0, C3[A8 + 6 | 0] = 0, C3[A8 + 7 | 0] = 0, A8 = 0) : A8 = -1, A8;
                    }
                    function RI(A8) {
                      var I7 = 0, g6 = 0, C4 = 0;
                      A: {
                        I: if (3 & (I7 = A8)) {
                          if (!o3[0 | I7]) return 0;
                          for (; ; ) {
                            if (!(3 & (I7 = I7 + 1 | 0))) break I;
                            if (!o3[0 | I7]) break;
                          }
                          break A;
                        }
                        for (; g6 = I7, I7 = I7 + 4 | 0, -2139062144 == (-2139062144 & ((C4 = i4[g6 >> 2]) | 16843008 - C4)); ) ;
                        for (; g6 = (I7 = g6) + 1 | 0, o3[0 | I7]; ) ;
                      }
                      return I7 - A8 | 0;
                    }
                    function LI(A8, I7, g6, C4, B4, Q5) {
                      I7 |= 0, B4 |= 0, Q5 |= 0;
                      var o4, E4 = 0;
                      return s3 = o4 = s3 - 16 | 0, w3(A8 |= 0, o4 + 8 | 0, yg(A8 - -64 | 0, g6 |= 0, C4 |= 0), C4, B4, Q5, 0), i4[o4 + 12 >> 2] | 64 != i4[o4 + 8 >> 2] ? (I7 && (i4[I7 >> 2] = 0, i4[I7 + 4 >> 2] = 0), bg(A8, 0, C4 - -64 | 0), E4 = -1) : I7 && (i4[I7 >> 2] = C4 - -64, i4[I7 + 4 >> 2] = B4 - ((C4 >>> 0 < 4294967232) - 1 | 0)), s3 = o4 + 16 | 0, 0 | E4;
                    }
                    function PI2(A8, I7) {
                      var g6, C4 = 0, B4 = 0, Q5 = 0, E4 = 0;
                      return (g6 = uI(o3[0 | I7])) && (C4 = uI(o3[I7 + 1 | 0])) && (B4 = uI(o3[I7 + 2 | 0])) && (Q5 = uI(o3[I7 + 3 | 0])) && (E4 = uI(o3[I7 + 4 | 0])) ? (i4[A8 >> 2] = g6 - 1024 | C4 - 1024 << 6 | B4 - 1024 << 12 | Q5 - 1024 << 18 | E4 - 1024 << 24, I7 + 5 | 0) : (i4[A8 >> 2] = 0, 0);
                    }
                    function qI(A8, I7, g6) {
                      var C4;
                      for (i4[12 + (C4 = s3 - 16 | 0) >> 2] = A8, i4[C4 + 8 >> 2] = I7, A8 = 0, i4[C4 + 4 >> 2] = 0; i4[C4 + 4 >> 2] = i4[C4 + 4 >> 2] | o3[i4[C4 + 12 >> 2] + A8 | 0] ^ o3[i4[C4 + 8 >> 2] + A8 | 0], I7 = 1 | A8, i4[C4 + 4 >> 2] = i4[C4 + 4 >> 2] | o3[I7 + i4[C4 + 12 >> 2] | 0] ^ o3[I7 + i4[C4 + 8 >> 2] | 0], (0 | g6) != (0 | (A8 = A8 + 2 | 0)); ) ;
                      return (i4[C4 + 4 >> 2] - 1 >>> 8 & 1) - 1 | 0;
                    }
                    function zI(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4, c4) {
                      var t4 = 0, r4 = 0, e6 = 0;
                      return r4 = -1, (t4 = C4 >>> 0 < 32) & !B4 || !(t4 = B4 - t4 | 0) & (e6 = C4 - 32 | 0) >>> 0 > 4294967263 | t4 | !E4 & o4 >>> 0 > 4294967263 | E4 || (r4 = 0 | pB[i4[c4 >> 2]](A8, g6, e6, (g6 + C4 | 0) - 32 | 0, 32, Q5, o4, a4, _4)), I7 && (i4[I7 >> 2] = r4 ? 0 : C4 - 32 | 0, i4[I7 + 4 >> 2] = r4 ? 0 : B4 - (C4 >>> 0 < 32) | 0), r4;
                    }
                    function jI(A8, I7) {
                      var g6, C4 = 0, B4 = 0, Q5 = 0;
                      s3 = g6 = s3 - 896 | 0, fA(C4 = g6 + 848 | 0, I7), fA(B4 = g6 + 800 | 0, I7 + 32 | 0), $(Q5 = g6 + 320 | 0, C4), $(I7 = g6 + 160 | 0, B4), $A(C4 = g6 + 640 | 0, I7), sA(I7 = g6 + 480 | 0, Q5, C4), b4(g6, I7, C4 = g6 + 600 | 0), b4(g6 + 40 | 0, B4 = g6 + 520 | 0, Q5 = g6 + 560 | 0), b4(g6 + 80 | 0, Q5, C4), b4(g6 + 120 | 0, I7, B4), W(A8, g6), s3 = g6 + 896 | 0;
                    }
                    function XI(A8) {
                      var I7 = 0, g6 = 0, B4 = 0, Q5 = 0, i5 = 0;
                      for (I7 = 1; g6 = (B4 = I7) + o3[0 | (I7 = A8 + Q5 | 0)] | 0, C3[0 | I7] = g6, g6 = o3[I7 + 1 | 0] + (g6 >>> 8 | 0) | 0, C3[I7 + 1 | 0] = g6, g6 = o3[I7 + 2 | 0] + (g6 >>> 8 | 0) | 0, C3[I7 + 2 | 0] = g6, B4 = I7, I7 = o3[I7 + 3 | 0] + (g6 >>> 8 | 0) | 0, C3[B4 + 3 | 0] = I7, I7 = I7 >>> 8 | 0, Q5 = Q5 + 4 | 0, 4 != (0 | (i5 = i5 + 4 | 0)); ) ;
                    }
                    function OI(A8, I7, g6, C4, B4, Q5, o4) {
                      var E4;
                      return s3 = E4 = s3 - 16 | 0, A8 = bg(A8, 0, 128), !(C4 | Q5) & o4 >>> 0 < 2147483649 ? (!Q5 & B4 >>> 0 >= 3 | !!(0 | Q5)) & o4 >>> 0 > 8191 ? (ag(E4, 16), A8 = iA(B4, o4 >>> 10 | 0, I7, g6, E4, A8, 1) ? -1 : 0) : (i4[9404] = 28, A8 = -1) : (i4[9404] = 22, A8 = -1), s3 = E4 + 16 | 0, A8;
                    }
                    function WI(A8, I7) {
                      var g6 = 0;
                      4 & I7 && ((I7 = i4[A8 >> 2]) && XC(i4[I7 + 4 >> 2], i4[A8 + 16 >> 2] << 10), (I7 = i4[A8 + 4 >> 2]) && XC(I7, i4[A8 + 20 >> 2] << 3)), BA(i4[A8 + 4 >> 2]), i4[A8 + 4 >> 2] = 0, (I7 = i4[A8 >> 2]) && (g6 = i4[I7 >> 2]) && BA(g6), BA(I7), i4[A8 >> 2] = 0;
                    }
                    function VI(A8, I7, g6, C4, B4, o4, E4, a4, _4, c4, t4) {
                      return !B4 & C4 >>> 0 > 4294967263 | !!(0 | B4) | !a4 & E4 >>> 0 >= 4294967264 | !!(0 | a4) ? (rC(), Q4()) : (A8 = 0 | pB[i4[t4 >> 2]](A8, A8 + C4 | 0, 32, g6, C4, o4, E4, _4, c4), I7 && (C4 = (g6 = C4 + 32 | 0) >>> 0 < 32 ? B4 + 1 | 0 : B4, i4[I7 >> 2] = A8 ? 0 : g6, i4[I7 + 4 >> 2] = A8 ? 0 : C4)), A8;
                    }
                    function ZI(A8) {
                      var I7 = 0, g6 = 0, C4 = 0, B4 = 0, Q5 = 0, i5 = 0, E4 = 0, a4 = 0;
                      for (I7 = 32, g6 = 1; a4 |= (B4 = o3[(C4 = I7 - 2 | 0) + A8 | 0]) - (Q5 = o3[C4 + 2912 | 0]) >> 8 & (I7 = ((i5 = o3[2912 + (I7 = I7 - 1 | 0) | 0]) ^ (E4 = o3[A8 + I7 | 0])) - 1 >> 8 & g6) | E4 - i5 >> 8 & g6, g6 = I7 & (B4 ^ Q5) - 1 >> 8, I7 = C4; ) ;
                      return !!(255 & a4);
                    }
                    function TI(A8, I7, g6, C4, B4, Q5, o4) {
                      var E4;
                      return s3 = E4 = s3 - 16 | 0, A8 = bg(A8, 0, 128), !(C4 | Q5) & o4 >>> 0 < 2147483649 ? !!(B4 | Q5) & o4 >>> 0 > 8191 ? (ag(E4, 16), A8 = iA(B4, o4 >>> 10 | 0, I7, g6, E4, A8, 2) ? -1 : 0) : (i4[9404] = 28, A8 = -1) : (i4[9404] = 22, A8 = -1), s3 = E4 + 16 | 0, A8;
                    }
                    function $I(A8) {
                      var I7 = 0;
                      return i4[32 + (A8 |= 0) >> 2] = 0, i4[A8 + 36 >> 2] = 0, I7 = i4[8809], i4[A8 >> 2] = i4[8808], i4[A8 + 4 >> 2] = I7, I7 = i4[8811], i4[A8 + 8 >> 2] = i4[8810], i4[A8 + 12 >> 2] = I7, I7 = i4[8813], i4[A8 + 16 >> 2] = i4[8812], i4[A8 + 20 >> 2] = I7, I7 = i4[8815], i4[A8 + 24 >> 2] = i4[8814], i4[A8 + 28 >> 2] = I7, 0;
                    }
                    function Ag(A8, I7, g6, C4, B4, Q5, i5) {
                      var o4, E4, a4 = 0, _4 = 0;
                      return s3 = o4 = s3 + -64 | 0, a4 = -1, (E4 = g6 >>> 0 < 16) & !C4 || CI(_4 = o4 + 32 | 0, i5, Q5) || yA(o4, 35584, _4, 0) || (a4 = sI(A8, I7 + 16 | 0, I7, g6 - 16 | 0, C4 - E4 | 0, B4, o4), XC(o4, 32)), s3 = o4 - -64 | 0, a4;
                    }
                    function Ig(A8, I7, g6, C4) {
                      var B4, Q5, i5, o4, E4 = 0, _4 = 0;
                      return o4 = a3(E4 = g6 >>> 16 | 0, _4 = A8 >>> 16 | 0), E4 = (65535 & (_4 = ((i5 = a3(B4 = 65535 & g6, Q5 = 65535 & A8)) >>> 16 | 0) + a3(_4, B4) | 0)) + a3(E4, Q5) | 0, f3 = (a3(I7, g6) + o4 | 0) + a3(A8, C4) + (_4 >>> 16) + (E4 >>> 16) | 0, 65535 & i5 | E4 << 16;
                    }
                    function gg(A8, I7, g6) {
                      var C4 = 0, B4 = 0;
                      if (!g6) return 0;
                      if (C4 = o3[0 | A8]) A: {
                        for (; ; ) {
                          if ((0 | (B4 = o3[0 | I7])) != (0 | C4) | !B4) break A;
                          if (!(g6 = g6 - 1 | 0)) break A;
                          if (I7 = I7 + 1 | 0, C4 = o3[A8 + 1 | 0], A8 = A8 + 1 | 0, !C4) break;
                        }
                        C4 = 0;
                      }
                      else C4 = 0;
                      return C4 - o3[0 | I7] | 0;
                    }
                    function Cg(A8, I7, g6, C4, B4, o4, E4) {
                      var a4 = 0, _4 = 0;
                      if (a4 = C4, !(1 == (((a4 = (_4 = g6 + 63 | 0) >>> 0 < 63 ? a4 + 1 | 0 : a4) >>> 6 | 0) + !!(0 | (a4 = (63 & a4) << 26 | _4 >>> 6)) | 0) & o4 >>> 0 > (_4 = 0 - a4 | 0) >>> 0 | 1 == (0 | C4) | C4 >>> 0 > 1)) return 0 | pB[i4[9199]](A8, I7, g6, C4, B4, o4, E4);
                      rC(), Q4();
                    }
                    function Bg(A8, I7, g6, C4, B4, Q5, i5) {
                      var o4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, s3 = o4 = s3 + -64 | 0, CI(o4 + 32 | 0, i5 |= 0, Q5 |= 0) ? Q5 = -1 : (Q5 = -1, wA(o4, 35664, o4 + 32 | 0, 0) || (Q5 = vI(A8, I7, g6, C4, B4, o4), XC(o4, 32))), s3 = o4 - -64 | 0, 0 | Q5;
                    }
                    function Qg(A8, I7, g6, C4, B4, Q5, i5) {
                      var o4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, s3 = o4 = s3 + -64 | 0, CI(o4 + 32 | 0, i5 |= 0, Q5 |= 0) ? Q5 = -1 : (Q5 = -1, wA(o4, 35664, o4 + 32 | 0, 0) || (Q5 = fI(A8, I7, g6, C4, B4, o4), XC(o4, 32))), s3 = o4 - -64 | 0, 0 | Q5;
                    }
                    function ig(A8, I7, g6, C4, B4, i5, o4) {
                      var E4;
                      if (s3 = E4 = s3 + -64 | 0, !C4 & g6 >>> 0 < 4294967280) return CI(E4 + 32 | 0, o4, i5) ? o4 = -1 : (o4 = -1, yA(E4, 35584, E4 + 32 | 0, 0) || (o4 = EI(A8 + 16 | 0, A8, I7, g6, C4, B4, E4), XC(E4, 32))), s3 = E4 - -64 | 0, o4;
                      rC(), Q4();
                    }
                    function og(A8, I7) {
                      for (var g6 = 0, B4 = 0, Q5 = 0, i5 = 0, E4 = 0; B4 = A8 + Q5 | 0, g6 = o3[I7 + Q5 | 0] + (o3[0 | B4] + g6 | 0) | 0, C3[0 | B4] = g6, i5 = (B4 = 1 | Q5) + A8 | 0, g6 = o3[I7 + B4 | 0] + (o3[0 | i5] + (g6 >>> 8 | 0) | 0) | 0, C3[0 | i5] = g6, g6 = g6 >>> 8 | 0, Q5 = Q5 + 2 | 0, 32 != (0 | (E4 = E4 + 2 | 0)); ) ;
                    }
                    function Eg(A8, I7) {
                      for (var g6 = 0, B4 = 0, Q5 = 0, i5 = 0, E4 = 0; g6 = (o3[0 | (B4 = A8 + Q5 | 0)] - o3[I7 + Q5 | 0] | 0) + g6 | 0, C3[0 | B4] = g6, g6 = (o3[0 | (i5 = (B4 = 1 | Q5) + A8 | 0)] - o3[I7 + B4 | 0] | 0) + (g6 >> 8) | 0, C3[0 | i5] = g6, g6 >>= 8, Q5 = Q5 + 2 | 0, 64 != (0 | (E4 = E4 + 2 | 0)); ) ;
                    }
                    function ag(A8, I7) {
                      A8 |= 0;
                      var g6, B4 = 0, Q5 = 0, i5 = 0;
                      if (s3 = g6 = s3 - 16 | 0, I7 |= 0) for (; C3[g6 + 15 | 0] = 0, Q5 = A8 + B4 | 0, i5 = 0 | t3(36800, g6 + 15 | 0, 0), C3[0 | Q5] = i5, (0 | (B4 = B4 + 1 | 0)) != (0 | I7); ) ;
                      s3 = g6 + 16 | 0;
                    }
                    function _g(A8, I7, g6, C4, B4, Q5, i5) {
                      var o4, E4, a4 = 0;
                      return s3 = o4 = s3 - 32 | 0, a4 = -1, (E4 = g6 >>> 0 < 16) & !C4 || cC(o4, Q5, i5) || (a4 = eI(A8, I7 + 16 | 0, I7, g6 - 16 | 0, C4 - E4 | 0, B4, o4), XC(o4, 32)), s3 = o4 + 32 | 0, a4;
                    }
                    function cg(A8) {
                      var I7, g6;
                      A: {
                        if (!((A8 = (I7 = i4[8924]) + (g6 = A8 + 7 & -8) | 0) >>> 0 <= I7 >>> 0 && g6)) {
                          if (A8 >>> 0 <= wB() << 16 >>> 0) break A;
                          if (0 | y3(0 | A8)) break A;
                        }
                        return i4[9404] = 48, -1;
                      }
                      return i4[8924] = A8, I7;
                    }
                    function tg(A8, I7) {
                      var g6, B4, Q5;
                      s3 = g6 = s3 - 176 | 0, LA(B4 = g6 + 96 | 0, I7 + 80 | 0), b4(Q5 = g6 + 48 | 0, I7, B4), b4(g6, I7 + 40 | 0, B4), QI(A8, g6), QI(g6 + 144 | 0, Q5), C3[A8 + 31 | 0] = o3[A8 + 31 | 0] ^ o3[g6 + 144 | 0] << 7, s3 = g6 + 176 | 0;
                    }
                    function rg(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4) {
                      var _4, c4, t4 = 0, r4 = 0, e6 = 0;
                      return s3 = _4 = s3 - 16 | 0, t4 = -1, _C(c4 = _4 + 4 | 0) || (r4 = -1, e6 = _A(c4, A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4), t4 = Rg(c4) ? r4 : e6), s3 = _4 + 16 | 0, t4;
                    }
                    function eg(A8, I7, g6, C4, B4, o4, E4, a4, _4, c4, t4, r4) {
                      return g6 && (i4[g6 >> 2] = 32, i4[g6 + 4 >> 2] = 0), !_4 & a4 >>> 0 < 4294967264 & !o4 & B4 >>> 0 <= 4294967263 || (rC(), Q4()), 0 | pB[i4[r4 >> 2]](A8, I7, 32, C4, B4, E4, a4, c4, t4);
                    }
                    function yg(A8, I7, g6) {
                      var B4 = 0;
                      if (A8 >>> 0 < I7 >>> 0) return Ng(A8, I7, g6);
                      if (g6) for (B4 = A8 + g6 | 0, I7 = I7 + g6 | 0; I7 = I7 - 1 | 0, C3[0 | (B4 = B4 - 1 | 0)] = o3[0 | I7], g6 = g6 - 1 | 0; ) ;
                      return A8;
                    }
                    function sg(A8, I7, g6, C4, B4, i5, o4) {
                      var E4, a4 = 0;
                      if (s3 = E4 = s3 - 32 | 0, !C4 & g6 >>> 0 < 4294967280) return a4 = -1, cC(E4, i5, o4) || (a4 = aI(A8 + 16 | 0, A8, I7, g6, C4, B4, E4), XC(E4, 32)), s3 = E4 + 32 | 0, a4;
                      rC(), Q4();
                    }
                    function hg(A8, I7, g6, C4, B4, Q5) {
                      return I7 |= 0, 0 | (!(C4 |= 0) & (g6 |= 0) >>> 0 >= 16 | C4 ? eI(A8 |= 0, I7 + 16 | 0, I7, g6 - 16 | 0, C4 - (g6 >>> 0 < 16) | 0, B4 |= 0, Q5 |= 0) : -1);
                    }
                    function Dg(A8, I7, g6, C4, B4, Q5) {
                      return I7 |= 0, 0 | (!(C4 |= 0) & (g6 |= 0) >>> 0 >= 16 | C4 ? sI(A8 |= 0, I7 + 16 | 0, I7, g6 - 16 | 0, C4 - (g6 >>> 0 < 16) | 0, B4 |= 0, Q5 |= 0) : -1);
                    }
                    function fg(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4, c4) {
                      return !C4 & g6 >>> 0 > 4294967263 | C4 | !E4 & o4 >>> 0 > 4294967263 | E4 ? -1 : 0 | pB[i4[c4 >> 2]](A8, I7, g6, B4, 32, Q5, o4, a4, _4);
                    }
                    function pg(A8, I7, g6) {
                      A8 |= 0;
                      var C4, B4 = 0;
                      return s3 = C4 = s3 - 32 | 0, B4 = -1, CI(C4, g6 |= 0, I7 |= 0) || (B4 = wA(A8, 35664, C4, 0)), s3 = C4 + 32 | 0, 0 | B4;
                    }
                    function wg(A8, I7) {
                      var g6;
                      return I7 |= 0, s3 = g6 = s3 + -64 | 0, j(A8 |= 0, g6), SA(A8 = A8 + 208 | 0, g6, 64, 0), j(A8, I7), XC(g6, 64), s3 = g6 - -64 | 0, 0;
                    }
                    function ng(A8, I7, g6, C4) {
                      var B4;
                      return I7 |= 0, g6 |= 0, C4 |= 0, s3 = B4 = s3 + -64 | 0, j(A8 |= 0, B4), A8 = w3(I7, g6, B4, 64, 0, C4, 1), s3 = B4 - -64 | 0, 0 | A8;
                    }
                    function kg(A8, I7) {
                      var g6, C4, B4;
                      b4(A8, I7, g6 = I7 + 120 | 0), b4(A8 + 40 | 0, C4 = I7 + 40 | 0, B4 = I7 + 80 | 0), b4(A8 + 80 | 0, B4, g6), b4(A8 + 120 | 0, I7, C4);
                    }
                    function Fg(A8, I7, g6, C4, B4, Q5, i5) {
                      return 0 | TI(A8 |= 0, I7 |= 0, (A8 = 0) | (g6 |= 0), C4 |= 0, A8 | (B4 |= 0), Q5 |= 0, i5 |= 0);
                    }
                    function Sg(A8, I7) {
                      var g6;
                      return I7 |= 0, s3 = g6 = s3 - 32 | 0, JA(A8 |= 0, g6), UA(A8 = A8 + 104 | 0, g6, 32, 0), JA(A8, I7), XC(g6, 32), s3 = g6 + 32 | 0, 0;
                    }
                    function Ng(A8, I7, g6) {
                      var B4 = 0;
                      if (g6) for (B4 = A8; C3[0 | B4] = o3[0 | I7], B4 = B4 + 1 | 0, I7 = I7 + 1 | 0, g6 = g6 - 1 | 0; ) ;
                      return A8;
                    }
                    function Gg(A8, I7, g6, C4, B4, Q5) {
                      var i5;
                      return s3 = i5 = s3 - 32 | 0, wA(i5, B4, Q5, 0), A8 = oC(A8, I7, g6, C4, B4 + 16 | 0, 0, 0, i5), XC(i5, 32), s3 = i5 + 32 | 0, A8;
                    }
                    function Mg(A8) {
                      for (A8 |= 0; ag(A8, 32), C3[A8 + 31 | 0] = 31 & o3[A8 + 31 | 0], !ZI(A8) || GI(A8, 32); ) ;
                    }
                    function Kg(A8, I7, g6) {
                      var C4;
                      return I7 |= 0, g6 |= 0, s3 = C4 = s3 + -64 | 0, j(A8 |= 0, C4), A8 = U3(I7, C4, 64, 0, g6, 1), s3 = C4 - -64 | 0, 0 | A8;
                    }
                    function Ug(A8, I7, g6, C4, B4) {
                      var Q5;
                      return s3 = Q5 = s3 - 32 | 0, wA(Q5, C4, B4, 0), A8 = DC(A8, I7, g6, C4 + 16 | 0, Q5), XC(Q5, 32), s3 = Q5 + 32 | 0, A8;
                    }
                    function bg(A8, I7, g6) {
                      var B4 = 0;
                      if (g6) for (B4 = A8; C3[0 | B4] = I7, B4 = B4 + 1 | 0, g6 = g6 - 1 | 0; ) ;
                      return A8;
                    }
                    function Hg(A8, I7, g6) {
                      return A8 |= 0, I7 |= 0, (g6 |= 0) >>> 0 >= 256 && (r3(1366, 1279, 107, 1123), Q4()), 0 | AA(A8, I7, 255 & g6);
                    }
                    function Yg(A8, I7, g6, C4, B4, Q5, i5) {
                      return 0 | aI(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0);
                    }
                    function Jg(A8, I7, g6, C4, B4, Q5, i5) {
                      return 0 | eI(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0);
                    }
                    function dg(A8, I7, g6, C4, B4, Q5, i5) {
                      return 0 | EI(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0);
                    }
                    function mg(A8, I7, g6, C4, B4, o4, E4, a4) {
                      return 1 == (0 | C4) | C4 >>> 0 > 1 && (rC(), Q4()), 0 | pB[i4[9198]](A8, I7, g6, C4, B4, o4, E4, a4);
                    }
                    function lg(A8, I7, g6, C4, B4, Q5, i5) {
                      return 0 | sI(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0);
                    }
                    function ug(A8, I7, g6, C4, B4, o4) {
                      return 1 == (0 | C4) | C4 >>> 0 > 1 && (rC(), Q4()), 0 | pB[i4[9198]](A8, I7, g6, C4, B4, 0, 0, o4);
                    }
                    function xg(A8, I7, g6, C4, B4, o4) {
                      return 1 == (0 | C4) | C4 >>> 0 > 1 && (rC(), Q4()), 0 | pB[i4[9199]](A8, I7, g6, C4, B4, 0, o4);
                    }
                    function vg(A8, I7, g6, C4, B4, Q5) {
                      return w3(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, 0), 0;
                    }
                    function Rg(A8) {
                      var I7;
                      return (I7 = i4[A8 >> 2]) && BA(I7), i4[A8 + 8 >> 2] = 0, i4[A8 >> 2] = 0, i4[A8 + 4 >> 2] = 0, 0;
                    }
                    function Lg(A8, I7) {
                      var g6 = 0;
                      return (-1 >>> (g6 = 31 & I7) & A8) << g6 | ((g6 = A8) & -1 << (A8 = 0 - I7 & 31)) >>> A8;
                    }
                    function Pg(A8, I7, g6, C4, B4, Q5) {
                      return 0 | vI(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0);
                    }
                    function qg(A8, I7, g6, C4, B4, Q5) {
                      return 0 | fI(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0);
                    }
                    function zg(A8, I7, g6, C4, B4, Q5) {
                      return 0 | Gg(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0);
                    }
                    function jg(A8, I7, g6, C4, B4) {
                      return 1 == (0 | g6) | g6 >>> 0 > 1 && (rC(), Q4()), 0 | pB[i4[9197]](A8, I7, g6, C4, B4);
                    }
                    function Xg(A8, I7, g6, C4, B4) {
                      return 1 == (0 | g6) | g6 >>> 0 > 1 && (rC(), Q4()), 0 | pB[i4[9196]](A8, I7, g6, C4, B4);
                    }
                    function Og(A8, I7, g6, C4, B4, o4) {
                      1 == (0 | C4) | C4 >>> 0 > 1 && (rC(), Q4()), pB[i4[9199]](A8, I7, g6, C4, B4, 1, o4);
                    }
                    function Wg(A8, I7, g6, C4, B4) {
                      return 0 | U3(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, 0);
                    }
                    function Vg(A8, I7, g6, C4, B4) {
                      return 0 | hC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0);
                    }
                    function Zg(A8, I7, g6, C4, B4) {
                      return 0 | fC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0);
                    }
                    function Tg(A8, I7, g6, C4, B4) {
                      return 0 | Ug(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0);
                    }
                    function $g() {
                      var A8;
                      s3 = A8 = s3 - 16 | 0, C3[A8 + 15 | 0] = 0, t3(36836, A8 + 15 | 0, 0), s3 = A8 + 16 | 0;
                    }
                    function AC(A8, I7, g6, C4) {
                      return CA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, 20), 0;
                    }
                    function IC(A8, I7, g6, C4) {
                      return CA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, 12), 0;
                    }
                    function gC(A8, I7, g6, C4) {
                      return CA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, 8), 0;
                    }
                    function CC(A8, I7, g6, C4) {
                      return 0 | FI(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }
                    function BC(A8, I7, g6, C4) {
                      return 0 | SC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }
                    function QC(A8, I7, g6, C4) {
                      return 0 | SA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }
                    function iC(A8, I7, g6, C4) {
                      return 0 | eA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }
                    function oC(A8, I7, g6, C4, B4, Q5, o4, E4) {
                      return 0 | pB[i4[8933]](A8, I7, g6, C4, B4, Q5, o4, E4);
                    }
                    function EC(A8, I7, g6, C4) {
                      return 0 | dC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }
                    function aC(A8, I7, g6, C4, B4, Q5) {
                      return 0 | pB[i4[8933]](A8, I7, g6, C4, B4, 0, 0, Q5);
                    }
                    function _C(A8) {
                      return i4[A8 + 8 >> 2] = 0, i4[A8 >> 2] = 0, i4[A8 + 4 >> 2] = 0, 0;
                    }
                    function cC(A8, I7, g6) {
                      return 0 | pg(A8 |= 0, I7 |= 0, g6 |= 0);
                    }
                    function tC(A8, I7, g6) {
                      return 0 | CI(A8 |= 0, I7 |= 0, g6 |= 0);
                    }
                    function rC() {
                      var A8;
                      (A8 = i4[9538]) && pB[0 | A8](), DB(), Q4();
                    }
                    function eC(A8, I7, g6) {
                      return 0 | Hg(A8 |= 0, I7 |= 0, g6 |= 0);
                    }
                    function yC(A8, I7, g6) {
                      return 0 | iI(A8 |= 0, I7 |= 0, g6 |= 0);
                    }
                    function sC(A8, I7) {
                      return A8 |= 0, ag(I7 |= 0, 32), 0 | pC(A8, I7);
                    }
                    function hC(A8, I7, g6, C4, B4) {
                      return 0 | pB[i4[8925]](A8, I7, g6, C4, B4);
                    }
                    function DC(A8, I7, g6, C4, B4) {
                      return 0 | pB[i4[8932]](A8, I7, g6, C4, B4);
                    }
                    function fC(A8, I7, g6, C4, B4) {
                      return 0 | pB[i4[8926]](A8, I7, g6, C4, B4);
                    }
                    function pC(A8, I7) {
                      return A8 |= 0, I7 |= 0, 0 | pB[i4[8931]](A8, I7);
                    }
                    function wC(A8, I7) {
                      return A8 |= 0, I7 |= 0, 0 | pB[i4[8927]](A8, I7);
                    }
                    function nC(A8, I7) {
                      return A8 |= 0, I7 |= 0, 0 | pB[i4[8929]](A8, I7);
                    }
                    function kC(A8, I7, g6, C4, B4, Q5, i5) {
                      return lA(A8, I7, g6, C4, B4, Q5, i5);
                    }
                    function FC(A8) {
                      return A8 ? 31 - _3(A8 - 1 ^ A8) | 0 : 32;
                    }
                    function SC(A8, I7, g6, C4) {
                      return 0 | pB[i4[8928]](A8, I7, g6, C4);
                    }
                    function NC(A8, I7) {
                      return 0 | qI(A8 |= 0, I7 |= 0, 32);
                    }
                    function GC(A8, I7) {
                      return 0 | qI(A8 |= 0, I7 |= 0, 64);
                    }
                    function MC(A8, I7, g6) {
                      n4(A8 |= 0, I7 |= 0, g6 |= 0);
                    }
                    function KC(A8, I7) {
                      return 0 | pC(A8 |= 0, I7 |= 0);
                    }
                    function UC(A8, I7) {
                      return 0 | sC(A8 |= 0, I7 |= 0);
                    }
                    function bC(A8, I7, g6, C4) {
                      return BI(A8, I7, g6, C4, 1);
                    }
                    function HC(A8, I7, g6, C4) {
                      return wI(A8, I7, g6, C4, 1);
                    }
                    function YC(A8, I7, g6, C4) {
                      return wI(A8, I7, g6, C4, 2);
                    }
                    function JC(A8, I7, g6, C4) {
                      return BI(A8, I7, g6, C4, 2);
                    }
                    function dC(A8, I7, g6, C4) {
                      return SA(A8, I7, g6, C4), 0;
                    }
                    function mC(A8, I7, g6, C4) {
                      return UA(A8, I7, g6, C4), 0;
                    }
                    function lC(A8, I7, g6, C4) {
                      return WA(A8, I7, g6, C4);
                    }
                    function uC(A8) {
                      return SI(A8 |= 0), 0;
                    }
                    function xC() {
                      return -2147483648;
                    }
                    function vC() {
                      return 1073741824;
                    }
                    function RC() {
                      return 268435456;
                    }
                    function LC() {
                      return 33554432;
                    }
                    function PC(A8) {
                      ag(A8 |= 0, 32);
                    }
                    function qC() {
                      return 67108864;
                    }
                    function zC(A8) {
                      ag(A8 |= 0, 16);
                    }
                    function jC() {
                      return 16777216;
                    }
                    function XC(A8, I7) {
                      bg(A8, 0, I7);
                    }
                    function OC() {
                      return 1564;
                    }
                    function WC() {
                      return 1338;
                    }
                    function VC() {
                      return 8192;
                    }
                    function ZC() {
                      return 384;
                    }
                    function TC() {
                      return 256;
                    }
                    function $C() {
                      return 416;
                    }
                    function AB() {
                      return 128;
                    }
                    function IB() {
                      return 208;
                    }
                    function gB() {
                      return 64;
                    }
                    function CB() {
                      return 16;
                    }
                    function BB() {
                      return 32;
                    }
                    function QB() {
                      return -65;
                    }
                    function iB() {
                      return -33;
                    }
                    function oB() {
                      return 48;
                    }
                    function EB() {
                      return -17;
                    }
                    function aB() {
                      return 12;
                    }
                    function _B() {
                      return 24;
                    }
                    function cB() {
                      return -1;
                    }
                    function tB() {
                      return 2;
                    }
                    function rB() {
                      return 3;
                    }
                    function eB() {
                      return 8;
                    }
                    function yB() {
                      return 1;
                    }
                    function sB() {
                      return 4;
                    }
                    function hB() {
                      return 0;
                    }
                    function DB() {
                      e5(), Q4();
                    }
                    B3(I6 = o3, 1024, "Li8wMTIzNDU2Nzg5QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5egBqcwByYW5kb21ieXRlcwBiNjRfcG9zIDw9IGI2NF9sZW4AY3J5cHRvX2dlbmVyaWNoYXNoX2JsYWtlMmJfZmluYWwAYXJnb24yaWQsYXJnb24yaQAkYXJnb24yaQAkYXJnb24yaWQAcmFuZG9tYnl0ZXMvcmFuZG9tYnl0ZXMuYwBzb2RpdW0vY29kZWNzLmMAY3J5cHRvX2dlbmVyaWNoYXNoL2JsYWtlMmIvcmVmL2JsYWtlMmItcmVmLmMAY3J5cHRvX2dlbmVyaWNoYXNoL2JsYWtlMmIvcmVmL2dlbmVyaWNoYXNoX2JsYWtlMmIuYwB4MjU1MTlibGFrZTJiAGJ1Zl9sZW4gPD0gU0laRV9NQVgAb3V0bGVuIDw9IFVJTlQ4X01BWABTLT5idWZsZW4gPD0gQkxBS0UyQl9CTE9DS0JZVEVTACRhcmdvbjJpJHY9ACRhcmdvbjJpZCR2PQBjdXJ2ZTI1NTE5AGVkMjU1MTkAaG1hY3NoYTUxMjI1NgBjdXJ2ZTI1NTE5eHNhbHNhMjBwb2x5MTMwNQBzb2RpdW1fYmluMmJhc2U2NABzaXBoYXNoMjQAc2hhNTEyAHhzYWxzYTIwADEuMC4yMAAkYXJnb24yaSQAJGFyZ29uMmlkJAAkNyQAAAAAAAC2eFn/hXLTAL1uFf8PCmoAKcABAJjoef+8PKD/mXHO/wC34v60DUj/AAAAAAAAAACwoA7+08mG/54YjwB/aTUAYAy9AKfX+/+fTID+amXh/x78BACSDK4="), B3(I6, 1680, "WfGy/grlpv973Sr+HhTUAFKAAwAw0fMAd3lA/zLjnP8AbsUBZxuQ"), B3(I6, 1728, "hTuMAb3xJP/4JcMBYNw3ALdMPv/DQj0AMkykAeGkTP9MPaP/dT4fAFGRQP92QQ4AonPW/waKLgB85vT/CoqPADQawgC49EwAgY8pAb70E/97qnr/YoFEAHnVkwBWZR7/oWebAIxZQ//v5b4BQwu1AMbwif7uRbz/Q5fuABMqbP/lVXEBMkSH/xFqCQAyZwH/UAGoASOYHv8QqLkBOFno/2XS/AAp+kcAzKpP/w4u7/9QTe8AvdZL/xGN+QAmUEz/vlV1AFbkqgCc2NABw8+k/5ZCTP+v4RD/jVBiAUzb8gDGonIALtqYAJsr8f6boGj/M7ulAAIRrwBCVKAB9zoeACNBNf5F7L8ALYb1AaN73QAgbhT/NBelALrWRwDpsGAA8u82ATlZigBTAFT/iKBkAFyOeP5ofL4AtbE+//opVQCYgioBYPz2AJeXP/7vhT4AIDicAC2nvf+OhbMBg1bTALuzlv76qg7/0qNOACU0lwBjTRoA7pzV/9XA0QFJLlQAFEEpATbOTwDJg5L+qm8Y/7EhMv6rJsv/Tvd0ANHdmQCFgLIBOiwZAMknOwG9E/wAMeXSAXW7dQC1s7gBAHLbADBekwD1KTgAfQ3M/vStdwAs3SD+VOoUAPmgxgHsfur/L2Oo/qrimf9ms9gA4o16/3pCmf629YYA4+QZAdY56//YrTj/tefSAHeAnf+BX4j/bn4zAAKpt/8HgmL+RbBe/3QE4wHZ8pH/yq0fAWkBJ/8ur0UA5C86/9fgRf7POEX/EP6L/xfP1P/KFH7/X9Vg/wmwIQDIBc//8SqA/iMhwP/45cQBgRF4APtnl/8HNHD/jDhC/yji9f/ZRiX+rNYJ/0hDhgGSwNb/LCZwAES4S//OWvsAleuNALWqOgB09O8AXJ0CAGatYgDpiWABfzHLAAWblAAXlAn/03oMACKGGv/bzIgAhggp/+BTK/5VGfcAbX8A/qmIMADud9v/563VAM4S/v4Iugf/fgkHAW8qSABvNOz+YD+NAJO/f/7NTsD/DmrtAbvbTACv87v+aVmtAFUZWQGi85QAAnbR/iGeCQCLoy7/XUYoAGwqjv5v/I7/m9+QADPlp/9J/Jv/XnQM/5ig2v+c7iX/s+rP/8UAs/+apI0A4cRoAAojGf7R1PL/Yf3e/rhl5QDeEn8BpIiH/x7PjP6SYfMAgcAa/slUIf9vCk7/k1Gy/wQEGACh7tf/Bo0hADXXDv8ptdD/54udALPL3f//uXEAveKs/3FC1v/KPi3/ZkAI/06uEP6FdUT/"), B3(I6, 2720, "AQ=="), B3(I6, 2752, "JuiVj8KyJ7BFw/SJ8u+Y8NXfrAXTxjM5sTgCiG1T/AXHF2pwPU3YT7o8C3YNEGcPKiBT+iw5zMZOx/13kqwDeuz///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f+3T9VwaYxJY1pz3ot753hQ="), B3(I6, 2943, ""), B3(I6, 33964, "AQAAAHbBXwBlcAL/UPyh/vJqxv+FBrIA5N9wAN/uVf4z8xoAPiuL/stBCg=="), B3(I6, 34016, "M03tAJGqVv82JjP/8YBl/yl5Sv/sTpsAqZdp/pwpSADCZq//zqJl/wAAAAAAAAAAGy57ARKo/f/Tr5f+w9tgADh2vv7+0fX/mWR+/uiBFf81uPL/x6Td"), B3(I6, 34144, "AQ=="), B3(I6, 34176, "4Ot6fDtBuK4WVuP68Z/EatoJjeucMrH9hmIFFl9JuABfnJW8o1CMJLHQsVWcg+9bBERcxFgcjobYIk7d0J8RV+z///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f0xpYnNvZGl1bURSRwAAAAAIybzzZ+YJajunyoSFrme7K/iU/nLzbjzxNh1fOvVPpdGC5q1/Ug5RH2w+K4xoBZtrvUH7q9mDH3khfhMZzeBbIq4o15gvikLNZe8jkUQ3cS87TezP+8C1vNuJgaXbtek4tUjzW8JWORnQBbbxEfFZm08Zr6SCP5IYgW3a1V4cq0ICA6OYqgfYvm9wRQFbgxKMsuROvoUxJOK0/9XDfQxVb4l78nRdvnKxlhY7/rHegDUSxyWnBtyblCZpz3Txm8HSSvGewWmb5OMlTziGR77vtdWMi8adwQ9lnKx3zKEMJHUCK1lvLOktg+SmbqqEdErU+0G93KmwXLVTEYPaiPl2q99m7lJRPpgQMrQtbcYxqD8h+5jIJwOw5A7vvsd/Wb/Cj6g98wvgxiWnCpNHkafVb4ID4FFjygZwbg4KZykpFPwv0kaFCrcnJskmXDghGy7tKsRa/G0sTd+zlZ0TDThT3mOvi1RzCmWosnc8uwpqduau7UcuycKBOzWCFIUscpJkA/FMoei/ogEwQrxLZhqokZf40HCLS8IwvlQGo1FsxxhS79YZ6JLREKllVSQGmdYqIHFXhTUO9LjRuzJwoGoQyNDSuBbBpBlTq0FRCGw3Hpnrjt9Md0gnqEib4bW8sDRjWsnFswwcOcuKQeNKqthOc+Njd0/KnFujuLLW828uaPyy713ugo90YC8XQ29jpXhyq/ChFHjIhOw5ZBoIAseMKB5jI/r/vpDpvYLe62xQpBV5xrL3o/m+K1Ny4/J4ccacYSbqzj4nygfCwCHHuIbRHuvgzdZ92up40W7uf0999bpvF3KqZ/AGppjIosV9YwquDfm+BJg/ERtHHBM1C3EbhH0EI/V32yiTJMdAe6vKMry+yRUKvp48TA0QnMRnHUO2Qj7LvtTFTCp+ZfycKX9Z7PrWOqtvy18XWEdKjBlEbIA="), B3(I6, 35184, "7dP1XBpjEljWnPei3vneFA=="), B3(I6, 35215, "EA=="), B3(I6, 35232, "Z+YJaoWuZ7ty8248OvVPpX9SDlGMaAWbq9mDHxnN4FuYL4pCkUQ3cc/7wLWl27XpW8JWOfER8Vmkgj+S1V4cq5iqB9gBW4MSvoUxJMN9DFV0Xb5y/rHegKcG3Jt08ZvBwWmb5IZHvu/GncEPzKEMJG8s6S2qhHRK3KmwXNqI+XZSUT6YbcYxqMgnA7DHf1m/8wvgxkeRp9VRY8oGZykpFIUKtyc4IRsu/G0sTRMNOFNUcwpluwpqdi7JwoGFLHKSoei/oktmGqhwi0vCo1FsxxnoktEkBpnWhTUO9HCgahAWwaQZCGw3Hkx3SCe1vLA0swwcOUqq2E5Pypxb828uaO6Cj3RvY6V4FHjIhAgCx4z6/76Q62xQpPej+b7yeHHGgA=="), B3(I6, 35600, "U2lnRWQyNTUxOSBubyBFZDI1NTE5IGNvbGxpc2lvbnMB"), B3(I6, 35696, "EJUBAAEAAAACAAAAAwAAAAQAAAAFAAAABgAAAAcAAAAIAAAACQ=="), B3(I6, 35744, "xmNjpfh8fITud3eZ9nt7jf/y8g3Wa2u93m9vsZHFxVRgMDBQAgEBA85nZ6lWKyt95/7+GbXX12JNq6vm7HZ2mo/KykUfgoKdicnJQPp9fYfv+voVsllZ645HR8n78PALQa2t7LPU1GdfoqL9Ra+v6iOcnL9TpKT35HJylpvAwFt1t7fC4f39HD2Tk65MJiZqbDY2Wn4/P0H19/cCg8zMT2g0NFxRpaX00eXlNPnx8QjicXGTq9jYc2IxMVMqFRU/CAQEDJXHx1JGIyNlncPDXjAYGCg3lpahCgUFDy+amrUOBwcJJBISNhuAgJvf4uI9zevrJk4nJ2l/srLN6nV1nxIJCRsdg4OeWCwsdDQaGi42Gxst3G5usrRaWu5boKD7pFJS9nY7O0231tZhfbOzzlIpKXvd4+M+Xi8vcROEhJemU1P1udHRaAAAAADB7e0sQCAgYOP8/B95sbHItltb7dRqar6Ny8tGZ76+2XI5OUuUSkremExM1LBYWOiFz89Ku9DQa8Xv7ypPqqrl7fv7FoZDQ8WaTU3XZjMzVRGFhZSKRUXP6fn5EAQCAgb+f3+BoFBQ8Hg8PEQln5+6S6io46JRUfNdo6P+gEBAwAWPj4o/kpKtIZ2dvHA4OEjx9fUEY7y833e2tsGv2tp1QiEhYyAQEDDl//8a/fPzDr/S0m2Bzc1MGAwMFCYTEzXD7Owvvl9f4TWXl6KIRETMLhcXOZPExFdVp6fy/H5+gno9PUfIZGSsul1d5zIZGSvmc3OVwGBgoBmBgZieT0/Ro9zcf0QiImZUKip+O5CQqwuIiIOMRkbKx+7uKWu4uNMoFBQ8p97eebxeXuIWCwsdrdvbdtvg4DtkMjJWdDo6ThQKCh6SSUnbDAYGCkgkJGy4XFzkn8LCXb3T025DrKzvxGJipjmRkagxlZWk0+TkN/J5eYvV5+cyi8jIQ243N1nabW23AY2NjLHV1WScTk7SSamp4NhsbLSsVlb68/T0B8/q6iXKZWWv9Hp6jkeurukQCAgYb7q61fB4eIhKJSVvXC4ucjgcHCRXpqbxc7S0x5fGxlHL6Ogjod3dfOh0dJw+Hx8hlktL3WG9vdwNi4uGD4qKheBwcJB8Pj5CcbW1xMxmZqqQSEjYBgMDBff29gEcDg4SwmFho2o1NV+uV1f5abm50BeGhpGZwcFYOh0dJyeenrnZ4eE46/j4EyuYmLMiEREz0mlpu6nZ2XAHjo6JM5SUpy2bm7Y8Hh4iFYeHksnp6SCHzs5JqlVV/1AoKHil3996A4yMj1mhofgJiYmAGg0NF2W/v9rX5uYxhEJCxtBoaLiCQUHDKZmZsFotLXceDw8Re7Cwy6hUVPxtu7vWLBYWOgoAAAALAAAADAAAAA0AAAAOAAAADwAAABAAAAAR");
                    var fB, pB = (fB = [null, function(A8, I7, g6, B4, Q5) {
                      var E4, a4, _4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, Q5 |= 0, s3 = E4 = (a4 = s3) - 128 & -64, i4[E4 >> 2] = 67108863 & (o3[0 | Q5] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24), i4[E4 + 4 >> 2] = (o3[Q5 + 3 | 0] | o3[Q5 + 4 | 0] << 8 | o3[Q5 + 5 | 0] << 16 | o3[Q5 + 6 | 0] << 24) >>> 2 & 67108611, i4[E4 + 8 >> 2] = (o3[Q5 + 6 | 0] | o3[Q5 + 7 | 0] << 8 | o3[Q5 + 8 | 0] << 16 | o3[Q5 + 9 | 0] << 24) >>> 4 & 67092735, i4[E4 + 12 >> 2] = (o3[Q5 + 9 | 0] | o3[Q5 + 10 | 0] << 8 | o3[Q5 + 11 | 0] << 16 | o3[Q5 + 12 | 0] << 24) >>> 6 & 66076671, _4 = o3[Q5 + 12 | 0] | o3[Q5 + 13 | 0] << 8 | o3[Q5 + 14 | 0] << 16 | o3[Q5 + 15 | 0] << 24, i4[E4 + 20 >> 2] = 0, i4[E4 + 24 >> 2] = 0, i4[E4 + 28 >> 2] = 0, i4[E4 + 32 >> 2] = 0, i4[E4 + 36 >> 2] = 0, i4[E4 + 16 >> 2] = _4 >>> 8 & 1048575, i4[E4 + 40 >> 2] = o3[Q5 + 16 | 0] | o3[Q5 + 17 | 0] << 8 | o3[Q5 + 18 | 0] << 16 | o3[Q5 + 19 | 0] << 24, i4[E4 + 44 >> 2] = o3[Q5 + 20 | 0] | o3[Q5 + 21 | 0] << 8 | o3[Q5 + 22 | 0] << 16 | o3[Q5 + 23 | 0] << 24, i4[E4 + 48 >> 2] = o3[Q5 + 24 | 0] | o3[Q5 + 25 | 0] << 8 | o3[Q5 + 26 | 0] << 16 | o3[Q5 + 27 | 0] << 24, Q5 = o3[Q5 + 28 | 0] | o3[Q5 + 29 | 0] << 8 | o3[Q5 + 30 | 0] << 16 | o3[Q5 + 31 | 0] << 24, C3[E4 + 80 | 0] = 0, i4[E4 + 56 >> 2] = 0, i4[E4 + 60 >> 2] = 0, i4[E4 + 52 >> 2] = Q5, vA(E4, I7, g6, B4), gI(E4, A8), s3 = a4, 0;
                    }, function(A8, I7, g6, B4, Q5) {
                      var E4, a4, _4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, Q5 |= 0, s3 = E4 = (a4 = s3) - 192 & -64, i4[E4 + 64 >> 2] = 67108863 & (o3[0 | Q5] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24), i4[E4 + 68 >> 2] = (o3[Q5 + 3 | 0] | o3[Q5 + 4 | 0] << 8 | o3[Q5 + 5 | 0] << 16 | o3[Q5 + 6 | 0] << 24) >>> 2 & 67108611, i4[E4 + 72 >> 2] = (o3[Q5 + 6 | 0] | o3[Q5 + 7 | 0] << 8 | o3[Q5 + 8 | 0] << 16 | o3[Q5 + 9 | 0] << 24) >>> 4 & 67092735, i4[E4 + 76 >> 2] = (o3[Q5 + 9 | 0] | o3[Q5 + 10 | 0] << 8 | o3[Q5 + 11 | 0] << 16 | o3[Q5 + 12 | 0] << 24) >>> 6 & 66076671, _4 = o3[Q5 + 12 | 0] | o3[Q5 + 13 | 0] << 8 | o3[Q5 + 14 | 0] << 16 | o3[Q5 + 15 | 0] << 24, i4[E4 + 84 >> 2] = 0, i4[E4 + 88 >> 2] = 0, i4[E4 + 92 >> 2] = 0, i4[E4 + 96 >> 2] = 0, i4[E4 + 100 >> 2] = 0, i4[E4 + 80 >> 2] = _4 >>> 8 & 1048575, i4[E4 + 104 >> 2] = o3[Q5 + 16 | 0] | o3[Q5 + 17 | 0] << 8 | o3[Q5 + 18 | 0] << 16 | o3[Q5 + 19 | 0] << 24, i4[E4 + 108 >> 2] = o3[Q5 + 20 | 0] | o3[Q5 + 21 | 0] << 8 | o3[Q5 + 22 | 0] << 16 | o3[Q5 + 23 | 0] << 24, i4[E4 + 112 >> 2] = o3[Q5 + 24 | 0] | o3[Q5 + 25 | 0] << 8 | o3[Q5 + 26 | 0] << 16 | o3[Q5 + 27 | 0] << 24, Q5 = o3[Q5 + 28 | 0] | o3[Q5 + 29 | 0] << 8 | o3[Q5 + 30 | 0] << 16 | o3[Q5 + 31 | 0] << 24, C3[E4 + 144 | 0] = 0, i4[E4 + 120 >> 2] = 0, i4[E4 + 124 >> 2] = 0, i4[E4 + 116 >> 2] = Q5, vA(Q5 = E4 - -64 | 0, I7, g6, B4), gI(Q5, I7 = E4 + 48 | 0), A8 = oI(A8, I7), s3 = a4, 0 | A8;
                    }, function(A8, I7) {
                      var g6;
                      return I7 |= 0, i4[(A8 |= 0) >> 2] = 67108863 & (o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24), i4[A8 + 4 >> 2] = (o3[I7 + 3 | 0] | o3[I7 + 4 | 0] << 8 | o3[I7 + 5 | 0] << 16 | o3[I7 + 6 | 0] << 24) >>> 2 & 67108611, i4[A8 + 8 >> 2] = (o3[I7 + 6 | 0] | o3[I7 + 7 | 0] << 8 | o3[I7 + 8 | 0] << 16 | o3[I7 + 9 | 0] << 24) >>> 4 & 67092735, i4[A8 + 12 >> 2] = (o3[I7 + 9 | 0] | o3[I7 + 10 | 0] << 8 | o3[I7 + 11 | 0] << 16 | o3[I7 + 12 | 0] << 24) >>> 6 & 66076671, g6 = o3[I7 + 12 | 0] | o3[I7 + 13 | 0] << 8 | o3[I7 + 14 | 0] << 16 | o3[I7 + 15 | 0] << 24, i4[A8 + 20 >> 2] = 0, i4[A8 + 24 >> 2] = 0, i4[A8 + 28 >> 2] = 0, i4[A8 + 32 >> 2] = 0, i4[A8 + 36 >> 2] = 0, i4[A8 + 16 >> 2] = g6 >>> 8 & 1048575, i4[A8 + 40 >> 2] = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, i4[A8 + 44 >> 2] = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, i4[A8 + 48 >> 2] = o3[I7 + 24 | 0] | o3[I7 + 25 | 0] << 8 | o3[I7 + 26 | 0] << 16 | o3[I7 + 27 | 0] << 24, I7 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24, C3[A8 + 80 | 0] = 0, i4[A8 + 56 >> 2] = 0, i4[A8 + 60 >> 2] = 0, i4[A8 + 52 >> 2] = I7, 0;
                    }, function(A8, I7, g6, C4) {
                      return vA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0), 0;
                    }, function(A8, I7) {
                      return gI(A8 |= 0, I7 |= 0), 0;
                    }, function(A8, I7, g6) {
                      A8 |= 0, I7 |= 0, g6 |= 0;
                      var B4, Q5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, v4 = 0, L4 = 0, P7 = 0, q3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, W2 = 0, V2 = 0, Z2 = 0, T2 = 0, $2 = 0, AA2 = 0, IA2 = 0, gA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, oA2 = 0, EA2 = 0, aA2 = 0, _A2 = 0, cA2 = 0, tA2 = 0, rA2 = 0, eA2 = 0, yA2 = 0, sA2 = 0, hA2 = 0, DA2 = 0, pA2 = 0, wA2 = 0, nA2 = 0, kA2 = 0;
                      for (s3 = B4 = s3 - 368 | 0; D4 = (a4 = o3[g6 + Q5 | 0]) ^ o3[0 | (c4 = Q5 + 34112 | 0)] | D4, h4 = a4 ^ o3[c4 + 192 | 0] | h4, y4 = a4 ^ o3[c4 + 160 | 0] | y4, e6 = a4 ^ o3[c4 + 128 | 0] | e6, _4 = a4 ^ o3[c4 + 96 | 0] | _4, t4 = a4 ^ o3[c4 - -64 | 0] | t4, E4 = a4 ^ o3[c4 + 32 | 0] | E4, 31 != (0 | (Q5 = Q5 + 1 | 0)); ) ;
                      if (Q5 = -1, !(256 & ((255 & ((a4 = 127 ^ (c4 = 127 & o3[g6 + 31 | 0])) | h4)) - 1 | (255 & (a4 | y4)) - 1 | (255 & (a4 | e6)) - 1 | (255 & (87 ^ c4 | _4)) - 1 | (255 & (t4 | c4)) - 1 | (255 & (E4 | c4)) - 1 | (255 & (c4 | D4)) - 1))) {
                        for (Q5 = I7, I7 = o3[I7 + 28 | 0] | o3[I7 + 29 | 0] << 8 | o3[I7 + 30 | 0] << 16 | o3[I7 + 31 | 0] << 24, i4[B4 + 360 >> 2] = o3[Q5 + 24 | 0] | o3[Q5 + 25 | 0] << 8 | o3[Q5 + 26 | 0] << 16 | o3[Q5 + 27 | 0] << 24, i4[B4 + 364 >> 2] = I7, I7 = o3[Q5 + 20 | 0] | o3[Q5 + 21 | 0] << 8 | o3[Q5 + 22 | 0] << 16 | o3[Q5 + 23 | 0] << 24, i4[B4 + 352 >> 2] = o3[Q5 + 16 | 0] | o3[Q5 + 17 | 0] << 8 | o3[Q5 + 18 | 0] << 16 | o3[Q5 + 19 | 0] << 24, i4[B4 + 356 >> 2] = I7, E4 = o3[Q5 + 4 | 0] | o3[Q5 + 5 | 0] << 8 | o3[Q5 + 6 | 0] << 16 | o3[Q5 + 7 | 0] << 24, I7 = o3[0 | Q5] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24, i4[B4 + 336 >> 2] = I7, i4[B4 + 340 >> 2] = E4, E4 = o3[Q5 + 12 | 0] | o3[Q5 + 13 | 0] << 8 | o3[Q5 + 14 | 0] << 16 | o3[Q5 + 15 | 0] << 24, i4[B4 + 344 >> 2] = o3[Q5 + 8 | 0] | o3[Q5 + 9 | 0] << 8 | o3[Q5 + 10 | 0] << 16 | o3[Q5 + 11 | 0] << 24, i4[B4 + 348 >> 2] = E4, C3[B4 + 336 | 0] = 248 & I7, C3[B4 + 367 | 0] = 63 & o3[B4 + 367 | 0] | 64, fA(B4 + 288 | 0, g6), i4[B4 + 260 >> 2] = 0, i4[B4 + 264 >> 2] = 0, i4[B4 + 268 >> 2] = 0, i4[B4 + 272 >> 2] = 0, i4[B4 + 276 >> 2] = 0, i4[B4 + 208 >> 2] = 0, i4[B4 + 212 >> 2] = 0, i4[B4 + 216 >> 2] = 0, i4[B4 + 220 >> 2] = 0, i4[B4 + 224 >> 2] = 0, i4[B4 + 228 >> 2] = 0, I7 = i4[B4 + 308 >> 2], i4[B4 + 160 >> 2] = i4[B4 + 304 >> 2], i4[B4 + 164 >> 2] = I7, I7 = i4[B4 + 316 >> 2], i4[B4 + 168 >> 2] = i4[B4 + 312 >> 2], i4[B4 + 172 >> 2] = I7, I7 = i4[B4 + 324 >> 2], i4[B4 + 176 >> 2] = i4[B4 + 320 >> 2], i4[B4 + 180 >> 2] = I7, i4[B4 + 244 >> 2] = 0, i4[B4 + 248 >> 2] = 0, i4[B4 + 240 >> 2] = 1, i4[B4 + 252 >> 2] = 0, i4[B4 + 256 >> 2] = 0, i4[B4 + 192 >> 2] = 0, i4[B4 + 196 >> 2] = 0, i4[B4 + 200 >> 2] = 0, i4[B4 + 204 >> 2] = 0, I7 = i4[B4 + 292 >> 2], i4[B4 + 144 >> 2] = i4[B4 + 288 >> 2], i4[B4 + 148 >> 2] = I7, I7 = i4[B4 + 300 >> 2], i4[B4 + 152 >> 2] = i4[B4 + 296 >> 2], i4[B4 + 156 >> 2] = I7, i4[B4 + 116 >> 2] = 0, i4[B4 + 120 >> 2] = 0, i4[B4 + 124 >> 2] = 0, i4[B4 + 128 >> 2] = 0, i4[B4 + 132 >> 2] = 0, i4[B4 + 100 >> 2] = 0, i4[B4 + 104 >> 2] = 0, i4[B4 + 96 >> 2] = 1, i4[B4 + 108 >> 2] = 0, i4[B4 + 112 >> 2] = 0, g6 = 254; Z2 = i4[B4 + 276 >> 2], a4 = i4[B4 + 180 >> 2], T2 = i4[B4 + 96 >> 2], $2 = i4[B4 + 192 >> 2], AA2 = i4[B4 + 144 >> 2], IA2 = i4[B4 + 240 >> 2], gA2 = i4[B4 + 100 >> 2], CA2 = i4[B4 + 196 >> 2], BA2 = i4[B4 + 148 >> 2], QA2 = i4[B4 + 244 >> 2], U4 = i4[B4 + 104 >> 2], iA2 = i4[B4 + 200 >> 2], H4 = i4[B4 + 152 >> 2], oA2 = i4[B4 + 248 >> 2], d5 = i4[B4 + 108 >> 2], EA2 = i4[B4 + 204 >> 2], m4 = i4[B4 + 156 >> 2], aA2 = i4[B4 + 252 >> 2], Y4 = i4[B4 + 112 >> 2], _A2 = i4[B4 + 208 >> 2], M4 = i4[B4 + 160 >> 2], cA2 = i4[B4 + 256 >> 2], D4 = i4[B4 + 116 >> 2], tA2 = i4[B4 + 212 >> 2], r4 = i4[B4 + 164 >> 2], rA2 = i4[B4 + 260 >> 2], h4 = i4[B4 + 120 >> 2], eA2 = i4[B4 + 216 >> 2], y4 = i4[B4 + 168 >> 2], yA2 = i4[B4 + 264 >> 2], e6 = i4[B4 + 124 >> 2], sA2 = i4[B4 + 220 >> 2], _4 = i4[B4 + 172 >> 2], hA2 = i4[B4 + 268 >> 2], t4 = i4[B4 + 128 >> 2], DA2 = i4[B4 + 224 >> 2], E4 = i4[B4 + 176 >> 2], G4 = i4[B4 + 272 >> 2], pA2 = g6, K4 = (F4 = (I7 = 0 - ((I7 = V2) ^ (V2 = o3[(wA2 = B4 + 336 | 0) + (g6 >>> 3 | 0) | 0] >>> (7 & g6) & 1)) | 0) & ((Q5 = i4[B4 + 132 >> 2]) ^ (j2 = i4[B4 + 228 >> 2]))) ^ Q5, i4[B4 + 132 >> 2] = K4, X2 = a4 ^ (S4 = I7 & (a4 ^ Z2)), i4[B4 + 84 >> 2] = X2 - K4, J4 = t4 ^ (w4 = I7 & (t4 ^ DA2)), i4[B4 + 128 >> 2] = J4, O2 = (N4 = I7 & (E4 ^ G4)) ^ E4, i4[B4 + 80 >> 2] = O2 - J4, u4 = e6 ^ (n5 = I7 & (e6 ^ sA2)), i4[B4 + 124 >> 2] = u4, nA2 = _4 ^ (k4 = I7 & (_4 ^ hA2)), i4[B4 + 76 >> 2] = nA2 - u4, x4 = h4 ^ (p4 = I7 & (h4 ^ eA2)), i4[B4 + 120 >> 2] = x4, kA2 = y4 ^ (c4 = I7 & (y4 ^ yA2)), i4[B4 + 72 >> 2] = kA2 - x4, v4 = D4 ^ (a4 = I7 & (D4 ^ tA2)), i4[B4 + 116 >> 2] = v4, L4 = r4 ^ (D4 = I7 & (r4 ^ rA2)), i4[B4 + 68 >> 2] = L4 - v4, P7 = Y4 ^ (h4 = I7 & (Y4 ^ _A2)), i4[B4 + 112 >> 2] = P7, l4 = M4 ^ (y4 = I7 & (M4 ^ cA2)), i4[B4 + 64 >> 2] = l4 - P7, q3 = d5 ^ (e6 = I7 & (d5 ^ EA2)), i4[B4 + 108 >> 2] = q3, W2 = m4 ^ (_4 = I7 & (m4 ^ aA2)), i4[B4 + 60 >> 2] = W2 - q3, z2 = U4 ^ (t4 = I7 & (U4 ^ iA2)), i4[B4 + 104 >> 2] = z2, d5 = H4 ^ (E4 = I7 & (H4 ^ oA2)), i4[B4 + 56 >> 2] = d5 - z2, U4 = gA2 ^ (Q5 = I7 & (gA2 ^ CA2)), i4[B4 + 100 >> 2] = U4, m4 = BA2 ^ (g6 = I7 & (BA2 ^ QA2)), i4[B4 + 52 >> 2] = m4 - U4, H4 = T2 ^ (Y4 = I7 & (T2 ^ $2)), i4[B4 + 96 >> 2] = H4, M4 = (I7 &= AA2 ^ IA2) ^ AA2, i4[B4 + 48 >> 2] = M4 - H4, r4 = S4 ^ Z2, F4 ^= j2, i4[B4 + 36 >> 2] = r4 - F4, S4 = N4 ^ G4, w4 ^= DA2, i4[B4 + 32 >> 2] = S4 - w4, N4 = k4 ^ hA2, n5 ^= sA2, i4[B4 + 28 >> 2] = N4 - n5, k4 = c4 ^ yA2, p4 ^= eA2, i4[B4 + 24 >> 2] = k4 - p4, c4 = D4 ^ rA2, a4 ^= tA2, i4[B4 + 20 >> 2] = c4 - a4, D4 = y4 ^ cA2, h4 ^= _A2, i4[B4 + 16 >> 2] = D4 - h4, y4 = _4 ^ aA2, e6 ^= EA2, i4[B4 + 12 >> 2] = y4 - e6, _4 = E4 ^ oA2, t4 ^= iA2, i4[B4 + 8 >> 2] = _4 - t4, E4 = g6 ^ QA2, Q5 ^= CA2, i4[B4 + 4 >> 2] = E4 - Q5, g6 = I7 ^ IA2, I7 = Y4 ^ $2, i4[B4 >> 2] = g6 - I7, i4[B4 + 276 >> 2] = r4 + F4, i4[B4 + 272 >> 2] = S4 + w4, i4[B4 + 268 >> 2] = n5 + N4, i4[B4 + 264 >> 2] = p4 + k4, i4[B4 + 260 >> 2] = a4 + c4, i4[B4 + 256 >> 2] = h4 + D4, i4[B4 + 248 >> 2] = _4 + t4, i4[B4 + 244 >> 2] = Q5 + E4, i4[B4 + 240 >> 2] = I7 + g6, i4[B4 + 252 >> 2] = e6 + y4, i4[B4 + 228 >> 2] = K4 + X2, i4[B4 + 224 >> 2] = J4 + O2, i4[B4 + 220 >> 2] = u4 + nA2, i4[B4 + 216 >> 2] = x4 + kA2, i4[B4 + 212 >> 2] = v4 + L4, i4[B4 + 208 >> 2] = l4 + P7, i4[B4 + 204 >> 2] = q3 + W2, i4[B4 + 200 >> 2] = d5 + z2, i4[B4 + 196 >> 2] = U4 + m4, i4[B4 + 192 >> 2] = M4 + H4, b4(X2 = B4 + 96 | 0, J4 = B4 + 48 | 0, K4 = B4 + 240 | 0), b4(G4 = B4 + 192 | 0, G4, B4), R3(J4, B4), R3(B4, K4), r4 = i4[B4 + 192 >> 2], F4 = i4[B4 + 96 >> 2], S4 = i4[B4 + 196 >> 2], w4 = i4[B4 + 100 >> 2], N4 = i4[B4 + 200 >> 2], n5 = i4[B4 + 104 >> 2], k4 = i4[B4 + 204 >> 2], p4 = i4[B4 + 108 >> 2], c4 = i4[B4 + 208 >> 2], a4 = i4[B4 + 112 >> 2], D4 = i4[B4 + 212 >> 2], h4 = i4[B4 + 116 >> 2], y4 = i4[B4 + 216 >> 2], e6 = i4[B4 + 120 >> 2], _4 = i4[B4 + 220 >> 2], t4 = i4[B4 + 124 >> 2], E4 = i4[B4 + 224 >> 2], Q5 = i4[B4 + 128 >> 2], g6 = i4[B4 + 228 >> 2], I7 = i4[B4 + 132 >> 2], i4[B4 + 180 >> 2] = g6 + I7, i4[B4 + 176 >> 2] = Q5 + E4, i4[B4 + 172 >> 2] = _4 + t4, i4[B4 + 168 >> 2] = e6 + y4, i4[B4 + 164 >> 2] = h4 + D4, i4[B4 + 160 >> 2] = a4 + c4, i4[B4 + 156 >> 2] = p4 + k4, i4[B4 + 152 >> 2] = n5 + N4, i4[B4 + 148 >> 2] = S4 + w4, i4[B4 + 144 >> 2] = r4 + F4, i4[B4 + 228 >> 2] = I7 - g6, i4[B4 + 224 >> 2] = Q5 - E4, i4[B4 + 220 >> 2] = t4 - _4, i4[B4 + 216 >> 2] = e6 - y4, i4[B4 + 212 >> 2] = h4 - D4, i4[B4 + 208 >> 2] = a4 - c4, i4[B4 + 204 >> 2] = p4 - k4, i4[B4 + 200 >> 2] = n5 - N4, i4[B4 + 196 >> 2] = w4 - S4, i4[B4 + 192 >> 2] = F4 - r4, b4(K4, B4, J4), u4 = i4[B4 + 52 >> 2], p4 = i4[B4 + 4 >> 2], x4 = i4[B4 + 56 >> 2], c4 = i4[B4 + 8 >> 2], v4 = i4[B4 + 64 >> 2], y4 = i4[B4 + 16 >> 2], P7 = i4[B4 + 60 >> 2], e6 = i4[B4 + 12 >> 2], q3 = i4[B4 + 72 >> 2], _4 = i4[B4 + 24 >> 2], z2 = i4[B4 + 68 >> 2], t4 = i4[B4 + 20 >> 2], U4 = i4[B4 + 80 >> 2], E4 = i4[B4 + 32 >> 2], H4 = i4[B4 + 76 >> 2], Q5 = i4[B4 + 28 >> 2], j2 = i4[B4 + 84 >> 2], I7 = i4[B4 + 36 >> 2], O2 = i4[B4 + 48 >> 2], g6 = i4[B4 >> 2] - O2 | 0, i4[B4 >> 2] = g6, I7 = I7 - j2 | 0, i4[B4 + 36 >> 2] = I7, Y4 = Q5 - H4 | 0, i4[B4 + 28 >> 2] = Y4, M4 = E4 - U4 | 0, i4[B4 + 32 >> 2] = M4, a4 = t4 - z2 | 0, i4[B4 + 20 >> 2] = a4, D4 = _4 - q3 | 0, i4[B4 + 24 >> 2] = D4, h4 = e6 - P7 | 0, i4[B4 + 12 >> 2] = h4, y4 = y4 - v4 | 0, i4[B4 + 16 >> 2] = y4, e6 = c4 - x4 | 0, i4[B4 + 8 >> 2] = e6, E4 = p4 - u4 | 0, i4[B4 + 4 >> 2] = E4, R3(G4, G4), I7 = Ig(I7, I7 >> 31, 121666, 0), Q5 = f3, W2 = I7, I7 = Ig((33554431 & (Q5 = (r4 = I7 + 16777216 | 0) >>> 0 < 16777216 ? Q5 + 1 | 0 : Q5)) << 7 | r4 >>> 25, Q5 >> 25, 19, 0), t4 = f3, Q5 = I7, I7 = Ig(g6, g6 >> 31, 121666, 0), l4 = f3 + t4 | 0, I7 = I7 >>> 0 > (Q5 = Q5 + I7 | 0) >>> 0 ? l4 + 1 | 0 : l4, g6 = (_4 = Q5 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, F4 = Q5 - (-67108864 & _4) | 0, i4[B4 + 96 >> 2] = F4, t4 = Ig(E4, E4 >> 31, 121666, 0), Q5 = f3, Q5 = (E4 = t4 + 16777216 | 0) >>> 0 < 16777216 ? Q5 + 1 | 0 : Q5, S4 = (t4 - (-33554432 & E4) | 0) + ((67108863 & g6) << 6 | _4 >>> 26) | 0, i4[B4 + 100 >> 2] = S4, l4 = (I7 = Q5) >> 25, Q5 = (33554431 & I7) << 7 | E4 >>> 25, g6 = Ig(e6, e6 >> 31, 121666, 0) + Q5 | 0, I7 = l4 + f3 | 0, I7 = g6 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, t4 = (w4 = g6 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, N4 = g6 - (-67108864 & w4) | 0, i4[B4 + 104 >> 2] = N4, Q5 = Ig(y4, y4 >> 31, 121666, 0), E4 = f3, g6 = Ig(h4, h4 >> 31, 121666, 0), I7 = f3, L4 = Q5, d5 = g6, Q5 = (33554431 & (I7 = (n5 = g6 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7)) << 7 | n5 >>> 25, I7 = (I7 >> 25) + E4 | 0, I7 = (g6 = L4 + Q5 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, E4 = (k4 = g6 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, p4 = g6 - (-67108864 & k4) | 0, i4[B4 + 112 >> 2] = p4, Q5 = Ig(D4, D4 >> 31, 121666, 0), _4 = f3, g6 = Ig(a4, a4 >> 31, 121666, 0), I7 = f3, L4 = Q5, m4 = g6, Q5 = (33554431 & (I7 = (c4 = g6 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7)) << 7 | c4 >>> 25, I7 = (I7 >> 25) + _4 | 0, I7 = (g6 = L4 + Q5 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, Q5 = (a4 = g6 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, D4 = g6 - (-67108864 & a4) | 0, i4[B4 + 120 >> 2] = D4, _4 = Ig(M4, M4 >> 31, 121666, 0), e6 = f3, g6 = Ig(Y4, Y4 >> 31, 121666, 0), I7 = f3, M4 = g6, g6 = (33554431 & (I7 = (h4 = g6 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7)) << 7 | h4 >>> 25, I7 = (I7 >> 25) + e6 | 0, I7 = g6 >>> 0 > (_4 = g6 + _4 | 0) >>> 0 ? I7 + 1 | 0 : I7, g6 = (y4 = _4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7, e6 = _4 - (-67108864 & y4) | 0, i4[B4 + 128 >> 2] = e6, _4 = (t4 = d5 + ((67108863 & t4) << 6 | w4 >>> 26) | 0) - (-33554432 & n5) | 0, i4[B4 + 108 >> 2] = _4, t4 = (E4 = m4 + ((67108863 & E4) << 6 | k4 >>> 26) | 0) - (-33554432 & c4) | 0, i4[B4 + 116 >> 2] = t4, E4 = (I7 = M4 + ((67108863 & Q5) << 6 | a4 >>> 26) | 0) - (-33554432 & h4) | 0, i4[B4 + 124 >> 2] = E4, g6 = (g6 = W2 + ((67108863 & g6) << 6 | y4 >>> 26) | 0) - (-33554432 & r4) | 0, i4[B4 + 132 >> 2] = g6, R3(I7 = B4 + 144 | 0, I7), i4[B4 + 84 >> 2] = g6 + j2, i4[B4 + 80 >> 2] = e6 + U4, i4[B4 + 76 >> 2] = E4 + H4, i4[B4 + 72 >> 2] = D4 + q3, i4[B4 + 68 >> 2] = t4 + z2, i4[B4 + 64 >> 2] = p4 + v4, i4[B4 + 60 >> 2] = _4 + P7, i4[B4 + 56 >> 2] = N4 + x4, i4[B4 + 52 >> 2] = S4 + u4, i4[B4 + 48 >> 2] = F4 + O2, g6 = pA2 - 1 | 0, b4(X2, B4 + 288 | 0, G4), b4(G4, B4, J4), pA2; ) ;
                        D4 = i4[B4 + 144 >> 2], F4 = i4[B4 + 240 >> 2], h4 = i4[B4 + 148 >> 2], S4 = i4[B4 + 244 >> 2], y4 = i4[B4 + 152 >> 2], w4 = i4[B4 + 248 >> 2], e6 = i4[B4 + 156 >> 2], N4 = i4[B4 + 252 >> 2], _4 = i4[B4 + 160 >> 2], n5 = i4[B4 + 256 >> 2], t4 = i4[B4 + 164 >> 2], k4 = i4[B4 + 260 >> 2], E4 = i4[B4 + 168 >> 2], p4 = i4[B4 + 264 >> 2], Q5 = i4[B4 + 172 >> 2], c4 = i4[B4 + 268 >> 2], g6 = i4[B4 + 176 >> 2], a4 = i4[B4 + 272 >> 2], r4 = 0 - V2 | 0, I7 = i4[B4 + 276 >> 2], i4[B4 + 276 >> 2] = r4 & (I7 ^ i4[B4 + 180 >> 2]) ^ I7, i4[B4 + 272 >> 2] = a4 ^ r4 & (g6 ^ a4), i4[B4 + 268 >> 2] = c4 ^ r4 & (Q5 ^ c4), i4[B4 + 264 >> 2] = p4 ^ r4 & (E4 ^ p4), i4[B4 + 260 >> 2] = k4 ^ r4 & (t4 ^ k4), i4[B4 + 256 >> 2] = n5 ^ r4 & (_4 ^ n5), i4[B4 + 252 >> 2] = N4 ^ r4 & (e6 ^ N4), i4[B4 + 248 >> 2] = w4 ^ r4 & (y4 ^ w4), i4[B4 + 244 >> 2] = S4 ^ r4 & (h4 ^ S4), i4[B4 + 240 >> 2] = F4 ^ r4 & (D4 ^ F4), F4 = i4[B4 + 192 >> 2], D4 = i4[B4 + 96 >> 2], S4 = i4[B4 + 196 >> 2], h4 = i4[B4 + 100 >> 2], w4 = i4[B4 + 200 >> 2], y4 = i4[B4 + 104 >> 2], N4 = i4[B4 + 204 >> 2], e6 = i4[B4 + 108 >> 2], n5 = i4[B4 + 208 >> 2], _4 = i4[B4 + 112 >> 2], k4 = i4[B4 + 212 >> 2], t4 = i4[B4 + 116 >> 2], p4 = i4[B4 + 216 >> 2], E4 = i4[B4 + 120 >> 2], c4 = i4[B4 + 220 >> 2], Q5 = i4[B4 + 124 >> 2], a4 = i4[B4 + 224 >> 2], g6 = i4[B4 + 128 >> 2], I7 = i4[B4 + 228 >> 2], i4[B4 + 228 >> 2] = r4 & (I7 ^ i4[B4 + 132 >> 2]) ^ I7, i4[B4 + 224 >> 2] = a4 ^ r4 & (g6 ^ a4), i4[B4 + 220 >> 2] = c4 ^ r4 & (Q5 ^ c4), i4[B4 + 216 >> 2] = p4 ^ r4 & (E4 ^ p4), i4[B4 + 212 >> 2] = k4 ^ r4 & (t4 ^ k4), i4[B4 + 208 >> 2] = n5 ^ r4 & (_4 ^ n5), i4[B4 + 204 >> 2] = N4 ^ r4 & (e6 ^ N4), i4[B4 + 200 >> 2] = w4 ^ r4 & (y4 ^ w4), i4[B4 + 196 >> 2] = S4 ^ r4 & (h4 ^ S4), i4[B4 + 192 >> 2] = F4 ^ r4 & (D4 ^ F4), LA(G4, G4), b4(K4, K4, G4), QI(A8, K4), XC(wA2, 32), Q5 = 0;
                      }
                      return s3 = B4 + 368 | 0, 0 | Q5;
                    }, function(A8, I7) {
                      var g6, B4, Q5, E4, a4, _4, c4, t4, r4, e6, y4, h4, D4, f4, p4, w4, n5, k4, F4, S4;
                      return I7 |= 0, s3 = g6 = s3 - 304 | 0, C3[0 | (A8 |= 0)] = o3[0 | I7], C3[A8 + 1 | 0] = o3[I7 + 1 | 0], C3[A8 + 2 | 0] = o3[I7 + 2 | 0], C3[A8 + 3 | 0] = o3[I7 + 3 | 0], C3[A8 + 4 | 0] = o3[I7 + 4 | 0], C3[A8 + 5 | 0] = o3[I7 + 5 | 0], C3[A8 + 6 | 0] = o3[I7 + 6 | 0], C3[A8 + 7 | 0] = o3[I7 + 7 | 0], C3[A8 + 8 | 0] = o3[I7 + 8 | 0], C3[A8 + 9 | 0] = o3[I7 + 9 | 0], C3[A8 + 10 | 0] = o3[I7 + 10 | 0], C3[A8 + 11 | 0] = o3[I7 + 11 | 0], C3[A8 + 12 | 0] = o3[I7 + 12 | 0], C3[A8 + 13 | 0] = o3[I7 + 13 | 0], C3[A8 + 14 | 0] = o3[I7 + 14 | 0], C3[A8 + 15 | 0] = o3[I7 + 15 | 0], C3[A8 + 16 | 0] = o3[I7 + 16 | 0], C3[A8 + 17 | 0] = o3[I7 + 17 | 0], C3[A8 + 18 | 0] = o3[I7 + 18 | 0], C3[A8 + 19 | 0] = o3[I7 + 19 | 0], C3[A8 + 20 | 0] = o3[I7 + 20 | 0], C3[A8 + 21 | 0] = o3[I7 + 21 | 0], C3[A8 + 22 | 0] = o3[I7 + 22 | 0], C3[A8 + 23 | 0] = o3[I7 + 23 | 0], C3[A8 + 24 | 0] = o3[I7 + 24 | 0], C3[A8 + 25 | 0] = o3[I7 + 25 | 0], C3[A8 + 26 | 0] = o3[I7 + 26 | 0], C3[A8 + 27 | 0] = o3[I7 + 27 | 0], C3[A8 + 28 | 0] = o3[I7 + 28 | 0], C3[A8 + 29 | 0] = o3[I7 + 29 | 0], C3[A8 + 30 | 0] = o3[I7 + 30 | 0], I7 = o3[I7 + 31 | 0], C3[0 | A8] = 248 & o3[0 | A8], C3[A8 + 31 | 0] = 63 & I7 | 64, nA(g6 + 48 | 0, A8), I7 = i4[g6 + 128 >> 2], B4 = i4[g6 + 88 >> 2], Q5 = i4[g6 + 132 >> 2], E4 = i4[g6 + 92 >> 2], a4 = i4[g6 + 136 >> 2], _4 = i4[g6 + 96 >> 2], c4 = i4[g6 + 140 >> 2], t4 = i4[g6 + 100 >> 2], r4 = i4[g6 + 144 >> 2], e6 = i4[g6 + 104 >> 2], y4 = i4[g6 + 148 >> 2], h4 = i4[g6 + 108 >> 2], D4 = i4[g6 + 152 >> 2], f4 = i4[g6 + 112 >> 2], p4 = i4[g6 + 156 >> 2], w4 = i4[g6 + 116 >> 2], n5 = i4[g6 + 160 >> 2], k4 = i4[g6 + 120 >> 2], F4 = i4[g6 + 124 >> 2], S4 = i4[g6 + 164 >> 2], i4[g6 + 292 >> 2] = F4 + S4, i4[g6 + 288 >> 2] = n5 + k4, i4[g6 + 284 >> 2] = p4 + w4, i4[g6 + 280 >> 2] = D4 + f4, i4[g6 + 276 >> 2] = y4 + h4, i4[g6 + 272 >> 2] = r4 + e6, i4[g6 + 268 >> 2] = c4 + t4, i4[g6 + 264 >> 2] = a4 + _4, i4[g6 + 260 >> 2] = Q5 + E4, i4[g6 + 256 >> 2] = I7 + B4, i4[g6 + 244 >> 2] = S4 - F4, i4[g6 + 240 >> 2] = n5 - k4, i4[g6 + 236 >> 2] = p4 - w4, i4[g6 + 232 >> 2] = D4 - f4, i4[g6 + 228 >> 2] = y4 - h4, i4[g6 + 224 >> 2] = r4 - e6, i4[g6 + 220 >> 2] = c4 - t4, i4[g6 + 216 >> 2] = a4 - _4, i4[g6 + 212 >> 2] = Q5 - E4, i4[g6 + 208 >> 2] = I7 - B4, LA(I7 = g6 + 208 | 0, I7), b4(g6, g6 + 256 | 0, I7), QI(A8, g6), s3 = g6 + 304 | 0, 0;
                    }, function(A8, I7, g6, B4, Q5) {
                      A8 |= 0, B4 |= 0, Q5 |= 0;
                      var E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0;
                      if (s3 = E4 = s3 - 112 | 0, (I7 |= 0) | (g6 |= 0)) {
                        a4 = o3[Q5 + 28 | 0] | o3[Q5 + 29 | 0] << 8 | o3[Q5 + 30 | 0] << 16 | o3[Q5 + 31 | 0] << 24, i4[E4 + 24 >> 2] = o3[Q5 + 24 | 0] | o3[Q5 + 25 | 0] << 8 | o3[Q5 + 26 | 0] << 16 | o3[Q5 + 27 | 0] << 24, i4[E4 + 28 >> 2] = a4, a4 = o3[Q5 + 20 | 0] | o3[Q5 + 21 | 0] << 8 | o3[Q5 + 22 | 0] << 16 | o3[Q5 + 23 | 0] << 24, i4[E4 + 16 >> 2] = o3[Q5 + 16 | 0] | o3[Q5 + 17 | 0] << 8 | o3[Q5 + 18 | 0] << 16 | o3[Q5 + 19 | 0] << 24, i4[E4 + 20 >> 2] = a4, a4 = o3[Q5 + 4 | 0] | o3[Q5 + 5 | 0] << 8 | o3[Q5 + 6 | 0] << 16 | o3[Q5 + 7 | 0] << 24, i4[E4 >> 2] = o3[0 | Q5] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24, i4[E4 + 4 >> 2] = a4, a4 = o3[Q5 + 12 | 0] | o3[Q5 + 13 | 0] << 8 | o3[Q5 + 14 | 0] << 16 | o3[Q5 + 15 | 0] << 24, i4[E4 + 8 >> 2] = o3[Q5 + 8 | 0] | o3[Q5 + 9 | 0] << 8 | o3[Q5 + 10 | 0] << 16 | o3[Q5 + 11 | 0] << 24, i4[E4 + 12 >> 2] = a4, Q5 = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, B4 = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24, i4[E4 + 104 >> 2] = 0, i4[E4 + 108 >> 2] = 0, i4[E4 + 96 >> 2] = Q5, i4[E4 + 100 >> 2] = B4;
                        A: {
                          if (!g6 & I7 >>> 0 >= 64 | g6) {
                            for (; AC(A8, E4 + 96 | 0, E4, 0), B4 = o3[E4 + 104 | 0] + 1 | 0, C3[E4 + 104 | 0] = B4, B4 = o3[E4 + 105 | 0] + (B4 >>> 8 | 0) | 0, C3[E4 + 105 | 0] = B4, B4 = o3[E4 + 106 | 0] + (B4 >>> 8 | 0) | 0, C3[E4 + 106 | 0] = B4, B4 = o3[E4 + 107 | 0] + (B4 >>> 8 | 0) | 0, C3[E4 + 107 | 0] = B4, B4 = o3[E4 + 108 | 0] + (B4 >>> 8 | 0) | 0, C3[E4 + 108 | 0] = B4, B4 = o3[E4 + 109 | 0] + (B4 >>> 8 | 0) | 0, C3[E4 + 109 | 0] = B4, B4 = o3[E4 + 110 | 0] + (B4 >>> 8 | 0) | 0, C3[E4 + 110 | 0] = B4, C3[E4 + 111 | 0] = o3[E4 + 111 | 0] + (B4 >>> 8 | 0), A8 = A8 - -64 | 0, g6 = g6 - 1 | 0, !(g6 = (I7 = I7 + -64 | 0) >>> 0 < 4294967232 ? g6 + 1 | 0 : g6) & I7 >>> 0 > 63 | g6; ) ;
                            if (!(I7 | g6)) break A;
                          }
                          if (B4 = 0, AC(E4 + 32 | 0, E4 + 96 | 0, E4, 0), a4 = 3 & I7, Q5 = 0, !g6 & I7 >>> 0 >= 4 | g6) for (g6 = 60 & I7, I7 = 0; _4 = c4 = E4 + 32 | 0, C3[A8 + Q5 | 0] = o3[_4 + Q5 | 0], C3[(t4 = 1 | Q5) + A8 | 0] = o3[_4 + t4 | 0], C3[(_4 = 2 | Q5) + A8 | 0] = o3[_4 + c4 | 0], C3[(_4 = 3 | Q5) + A8 | 0] = o3[_4 + (E4 + 32 | 0) | 0], Q5 = Q5 + 4 | 0, (0 | g6) != (0 | (I7 = I7 + 4 | 0)); ) ;
                          if (a4) for (; C3[A8 + Q5 | 0] = o3[(E4 + 32 | 0) + Q5 | 0], Q5 = Q5 + 1 | 0, (0 | a4) != (0 | (B4 = B4 + 1 | 0)); ) ;
                        }
                        XC(E4 + 32 | 0, 64), XC(E4, 32);
                      }
                      return s3 = E4 + 112 | 0, 0;
                    }, function(A8, I7, g6, B4, Q5, E4, a4, _4) {
                      A8 |= 0, I7 |= 0, Q5 |= 0, E4 |= 0, a4 |= 0, _4 |= 0;
                      var c4, t4 = 0;
                      if (s3 = c4 = s3 - 112 | 0, (g6 |= 0) | (B4 |= 0)) {
                        t4 = o3[_4 + 28 | 0] | o3[_4 + 29 | 0] << 8 | o3[_4 + 30 | 0] << 16 | o3[_4 + 31 | 0] << 24, i4[c4 + 24 >> 2] = o3[_4 + 24 | 0] | o3[_4 + 25 | 0] << 8 | o3[_4 + 26 | 0] << 16 | o3[_4 + 27 | 0] << 24, i4[c4 + 28 >> 2] = t4, t4 = o3[_4 + 20 | 0] | o3[_4 + 21 | 0] << 8 | o3[_4 + 22 | 0] << 16 | o3[_4 + 23 | 0] << 24, i4[c4 + 16 >> 2] = o3[_4 + 16 | 0] | o3[_4 + 17 | 0] << 8 | o3[_4 + 18 | 0] << 16 | o3[_4 + 19 | 0] << 24, i4[c4 + 20 >> 2] = t4, t4 = o3[_4 + 4 | 0] | o3[_4 + 5 | 0] << 8 | o3[_4 + 6 | 0] << 16 | o3[_4 + 7 | 0] << 24, i4[c4 >> 2] = o3[0 | _4] | o3[_4 + 1 | 0] << 8 | o3[_4 + 2 | 0] << 16 | o3[_4 + 3 | 0] << 24, i4[c4 + 4 >> 2] = t4, t4 = o3[_4 + 12 | 0] | o3[_4 + 13 | 0] << 8 | o3[_4 + 14 | 0] << 16 | o3[_4 + 15 | 0] << 24, i4[c4 + 8 >> 2] = o3[_4 + 8 | 0] | o3[_4 + 9 | 0] << 8 | o3[_4 + 10 | 0] << 16 | o3[_4 + 11 | 0] << 24, i4[c4 + 12 >> 2] = t4, _4 = o3[Q5 + 4 | 0] | o3[Q5 + 5 | 0] << 8 | o3[Q5 + 6 | 0] << 16 | o3[Q5 + 7 | 0] << 24, i4[c4 + 96 >> 2] = o3[0 | Q5] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24, i4[c4 + 100 >> 2] = _4, C3[c4 + 104 | 0] = E4, C3[c4 + 111 | 0] = a4 >>> 24, C3[c4 + 110 | 0] = a4 >>> 16, C3[c4 + 109 | 0] = a4 >>> 8, C3[c4 + 108 | 0] = a4, C3[c4 + 107 | 0] = (16777215 & a4) << 8 | E4 >>> 24, C3[c4 + 106 | 0] = (65535 & a4) << 16 | E4 >>> 16, C3[c4 + 105 | 0] = (255 & a4) << 24 | E4 >>> 8;
                        A: {
                          if (!B4 & g6 >>> 0 >= 64 | B4) {
                            for (; ; ) {
                              for (_4 = 0, AC(c4 + 32 | 0, c4 + 96 | 0, c4, 0); E4 = c4 + 32 | 0, C3[A8 + _4 | 0] = o3[E4 + _4 | 0] ^ o3[I7 + _4 | 0], C3[(Q5 = 1 | _4) + A8 | 0] = o3[Q5 + E4 | 0] ^ o3[I7 + Q5 | 0], 64 != (0 | (_4 = _4 + 2 | 0)); ) ;
                              if (Q5 = o3[c4 + 104 | 0] + 1 | 0, C3[c4 + 104 | 0] = Q5, Q5 = o3[c4 + 105 | 0] + (Q5 >>> 8 | 0) | 0, C3[c4 + 105 | 0] = Q5, Q5 = o3[c4 + 106 | 0] + (Q5 >>> 8 | 0) | 0, C3[c4 + 106 | 0] = Q5, Q5 = o3[c4 + 107 | 0] + (Q5 >>> 8 | 0) | 0, C3[c4 + 107 | 0] = Q5, Q5 = o3[c4 + 108 | 0] + (Q5 >>> 8 | 0) | 0, C3[c4 + 108 | 0] = Q5, Q5 = o3[c4 + 109 | 0] + (Q5 >>> 8 | 0) | 0, C3[c4 + 109 | 0] = Q5, Q5 = o3[c4 + 110 | 0] + (Q5 >>> 8 | 0) | 0, C3[c4 + 110 | 0] = Q5, C3[c4 + 111 | 0] = o3[c4 + 111 | 0] + (Q5 >>> 8 | 0), I7 = I7 - -64 | 0, A8 = A8 - -64 | 0, B4 = B4 - 1 | 0, !(!(B4 = (g6 = g6 + -64 | 0) >>> 0 < 4294967232 ? B4 + 1 | 0 : B4) & g6 >>> 0 > 63 | B4)) break;
                            }
                            if (!(g6 | B4)) break A;
                          }
                          if (_4 = 0, AC(c4 + 32 | 0, c4 + 96 | 0, c4, 0), E4 = 1 & g6, 1 != (0 | g6) | B4) for (B4 = 62 & g6, Q5 = 0; a4 = c4 + 32 | 0, C3[A8 + _4 | 0] = o3[a4 + _4 | 0] ^ o3[I7 + _4 | 0], C3[(g6 = 1 | _4) + A8 | 0] = o3[g6 + a4 | 0] ^ o3[I7 + g6 | 0], _4 = _4 + 2 | 0, (0 | B4) != (0 | (Q5 = Q5 + 2 | 0)); ) ;
                          E4 && (C3[A8 + _4 | 0] = o3[(c4 + 32 | 0) + _4 | 0] ^ o3[I7 + _4 | 0]);
                        }
                        XC(c4 + 32 | 0, 64), XC(c4, 32);
                      }
                      return s3 = c4 + 112 | 0, 0;
                    }, function(A8, I7, g6, C4, B4, Q5, i5, o4, E4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0;
                      var a4, _4, c4 = 0;
                      if (_4 = c4 = s3, s3 = a4 = c4 - 192 & -32, P6(E4 |= 0, o4 |= 0, a4 - -64 | 0), E4 = 0, i5 >>> 0 <= 63) o4 = 0;
                      else for (c4 = 64; H3(Q5 + E4 | 0, a4 - -64 | 0), E4 = o4 = c4, (c4 = o4 - -64 | 0) >>> 0 <= i5 >>> 0; ) ;
                      if ((c4 = 32 | o4) >>> 0 > i5 >>> 0) E4 = o4;
                      else for (; V(Q5 + o4 | 0, a4 - -64 | 0), E4 = c4, (c4 = (o4 = c4) + 32 | 0) >>> 0 <= i5 >>> 0; ) ;
                      if ((o4 = 31 & i5) && (bg((c4 = a4 + 32 | 0) | o4, 0, 32 - o4 | 0), Ng(c4, Q5 + E4 | 0, o4), V(c4, a4 - -64 | 0)), E4 = 32, o4 = 0, B4 >>> 0 < 32) Q5 = 0;
                      else for (; m3(A8 + o4 | 0, C4 + o4 | 0, a4 - -64 | 0), Q5 = E4, (E4 = (o4 = E4) + 32 | 0) >>> 0 <= B4 >>> 0; ) ;
                      return (o4 = 31 & B4) && (bg((E4 = a4 + 32 | 0) | o4, 0, 32 - o4 | 0), Ng(E4, C4 + Q5 | 0, o4), m3(a4, E4, a4 - -64 | 0), Ng(A8 + Q5 | 0, a4, o4)), Y3(I7, g6, i5, B4, a4 - -64 | 0), s3 = _4, 0;
                    }, function(A8, I7, g6, C4, B4, Q5, i5, o4, E4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0;
                      var a4, _4, c4 = 0;
                      if (_4 = c4 = s3, s3 = a4 = c4 - 224 & -32, P6(E4 |= 0, o4 |= 0, a4 + 96 | 0), E4 = 0, i5 >>> 0 <= 63) o4 = 0;
                      else for (c4 = 64; H3(Q5 + E4 | 0, a4 + 96 | 0), E4 = o4 = c4, (c4 = o4 - -64 | 0) >>> 0 <= i5 >>> 0; ) ;
                      if ((c4 = 32 | o4) >>> 0 > i5 >>> 0) E4 = o4;
                      else for (; V(Q5 + o4 | 0, a4 + 96 | 0), E4 = c4, (c4 = (o4 = c4) + 32 | 0) >>> 0 <= i5 >>> 0; ) ;
                      (o4 = 31 & i5) && (bg((c4 = a4 - -64 | 0) | o4, 0, 32 - o4 | 0), Ng(c4, Q5 + E4 | 0, o4), V(c4, a4 + 96 | 0));
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                if (A8) {
                                  if (E4 = 32, g6 >>> 0 < 32) break B;
                                  for (Q5 = 0; d4(A8 + Q5 | 0, I7 + Q5 | 0, a4 + 96 | 0), Q5 = o4 = E4, (E4 = o4 + 32 | 0) >>> 0 <= g6 >>> 0; ) ;
                                } else {
                                  if (Q5 = 32, g6 >>> 0 < 32) break g;
                                  for (E4 = 0; d4(a4 + 32 | 0, I7 + E4 | 0, a4 + 96 | 0), E4 = o4 = Q5, (Q5 = o4 + 32 | 0) >>> 0 <= g6 >>> 0; ) ;
                                }
                                if (!(Q5 = 31 & g6)) break A;
                                if (A8) break C;
                                break I;
                              }
                              if (o4 = 0, Q5 = g6, !g6) break A;
                            }
                            x3(A8 + o4 | 0, I7 + o4 | 0, Q5, a4 + 96 | 0);
                            break A;
                          }
                          if (o4 = 0, Q5 = g6, !g6) break A;
                        }
                        x3(a4 + 32 | 0, I7 + o4 | 0, Q5, a4 + 96 | 0);
                      }
                      Y3(a4, B4, i5, g6, a4 + 96 | 0), o4 = -1;
                      A: {
                        I: {
                          if (I7 = B4 - 16 | 0) {
                            if (16 == (0 | I7)) break I;
                            break A;
                          }
                          o4 = oI(a4, C4);
                          break A;
                        }
                        o4 = NC(a4, C4);
                      }
                      return !A8 | !o4 || bg(A8, 0, g6), s3 = _4, 0 | o4;
                    }, function(A8, I7, g6, C4, B4, Q5, E4, a4, _4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, E4 |= 0;
                      var c4, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0;
                      if (s3 = c4 = s3 - 528 | 0, G3(_4 |= 0, a4 |= 0, c4 + 400 | 0), _4 = 0, E4 >>> 0 <= 31) a4 = 0;
                      else for (r4 = 32; L3(Q5 + _4 | 0, c4 + 400 | 0), _4 = a4 = r4, (r4 = a4 + 32 | 0) >>> 0 <= E4 >>> 0; ) ;
                      if ((_4 = 16 | a4) >>> 0 <= E4 >>> 0) for (r4 = c4 + 416 | 0, y4 = c4 + 432 | 0, h4 = c4 + 448 | 0, e6 = c4 + 464 | 0, D4 = c4 + 480 | 0; f4 = o3[0 | (a4 = Q5 + a4 | 0)] | o3[a4 + 1 | 0] << 8 | o3[a4 + 2 | 0] << 16 | o3[a4 + 3 | 0] << 24, p4 = o3[a4 + 4 | 0] | o3[a4 + 5 | 0] << 8 | o3[a4 + 6 | 0] << 16 | o3[a4 + 7 | 0] << 24, w4 = o3[a4 + 8 | 0] | o3[a4 + 9 | 0] << 8 | o3[a4 + 10 | 0] << 16 | o3[a4 + 11 | 0] << 24, n5 = o3[a4 + 12 | 0] | o3[a4 + 13 | 0] << 8 | o3[a4 + 14 | 0] << 16 | o3[a4 + 15 | 0] << 24, a4 = i4[D4 + 12 >> 2], i4[c4 + 520 >> 2] = i4[D4 + 8 >> 2], i4[c4 + 524 >> 2] = a4, a4 = i4[D4 + 4 >> 2], i4[c4 + 512 >> 2] = i4[D4 >> 2], i4[c4 + 516 >> 2] = a4, a4 = i4[e6 + 12 >> 2], i4[c4 + 376 >> 2] = i4[e6 + 8 >> 2], i4[c4 + 380 >> 2] = a4, a4 = i4[e6 + 4 >> 2], i4[c4 + 368 >> 2] = i4[e6 >> 2], i4[c4 + 372 >> 2] = a4, a4 = i4[D4 + 12 >> 2], i4[c4 + 360 >> 2] = i4[D4 + 8 >> 2], i4[c4 + 364 >> 2] = a4, a4 = i4[D4 + 4 >> 2], i4[c4 + 352 >> 2] = i4[D4 >> 2], i4[c4 + 356 >> 2] = a4, AI(a4 = c4 + 496 | 0, c4 + 368 | 0, c4 + 352 | 0), t4 = i4[c4 + 508 >> 2], i4[D4 + 8 >> 2] = i4[c4 + 504 >> 2], i4[D4 + 12 >> 2] = t4, t4 = i4[c4 + 500 >> 2], i4[D4 >> 2] = i4[c4 + 496 >> 2], i4[D4 + 4 >> 2] = t4, t4 = i4[h4 + 12 >> 2], i4[c4 + 344 >> 2] = i4[h4 + 8 >> 2], i4[c4 + 348 >> 2] = t4, t4 = i4[h4 + 4 >> 2], i4[c4 + 336 >> 2] = i4[h4 >> 2], i4[c4 + 340 >> 2] = t4, t4 = i4[e6 + 12 >> 2], i4[c4 + 328 >> 2] = i4[e6 + 8 >> 2], i4[c4 + 332 >> 2] = t4, t4 = i4[e6 + 4 >> 2], i4[c4 + 320 >> 2] = i4[e6 >> 2], i4[c4 + 324 >> 2] = t4, AI(a4, c4 + 336 | 0, c4 + 320 | 0), t4 = i4[c4 + 508 >> 2], i4[e6 + 8 >> 2] = i4[c4 + 504 >> 2], i4[e6 + 12 >> 2] = t4, t4 = i4[c4 + 500 >> 2], i4[e6 >> 2] = i4[c4 + 496 >> 2], i4[e6 + 4 >> 2] = t4, t4 = i4[y4 + 12 >> 2], i4[c4 + 312 >> 2] = i4[y4 + 8 >> 2], i4[c4 + 316 >> 2] = t4, t4 = i4[y4 + 4 >> 2], i4[c4 + 304 >> 2] = i4[y4 >> 2], i4[c4 + 308 >> 2] = t4, t4 = i4[h4 + 12 >> 2], i4[c4 + 296 >> 2] = i4[h4 + 8 >> 2], i4[c4 + 300 >> 2] = t4, t4 = i4[h4 + 4 >> 2], i4[c4 + 288 >> 2] = i4[h4 >> 2], i4[c4 + 292 >> 2] = t4, AI(a4, c4 + 304 | 0, c4 + 288 | 0), t4 = i4[c4 + 508 >> 2], i4[h4 + 8 >> 2] = i4[c4 + 504 >> 2], i4[h4 + 12 >> 2] = t4, t4 = i4[c4 + 500 >> 2], i4[h4 >> 2] = i4[c4 + 496 >> 2], i4[h4 + 4 >> 2] = t4, t4 = i4[r4 + 12 >> 2], i4[c4 + 280 >> 2] = i4[r4 + 8 >> 2], i4[c4 + 284 >> 2] = t4, t4 = i4[r4 + 4 >> 2], i4[c4 + 272 >> 2] = i4[r4 >> 2], i4[c4 + 276 >> 2] = t4, t4 = i4[y4 + 12 >> 2], i4[c4 + 264 >> 2] = i4[y4 + 8 >> 2], i4[c4 + 268 >> 2] = t4, t4 = i4[y4 + 4 >> 2], i4[c4 + 256 >> 2] = i4[y4 >> 2], i4[c4 + 260 >> 2] = t4, AI(a4, c4 + 272 | 0, c4 + 256 | 0), t4 = i4[c4 + 508 >> 2], i4[y4 + 8 >> 2] = i4[c4 + 504 >> 2], i4[y4 + 12 >> 2] = t4, t4 = i4[c4 + 500 >> 2], i4[y4 >> 2] = i4[c4 + 496 >> 2], i4[y4 + 4 >> 2] = t4, t4 = i4[c4 + 412 >> 2], i4[c4 + 248 >> 2] = i4[c4 + 408 >> 2], i4[c4 + 252 >> 2] = t4, t4 = i4[c4 + 404 >> 2], i4[c4 + 240 >> 2] = i4[c4 + 400 >> 2], i4[c4 + 244 >> 2] = t4, t4 = i4[r4 + 12 >> 2], i4[c4 + 232 >> 2] = i4[r4 + 8 >> 2], i4[c4 + 236 >> 2] = t4, t4 = i4[r4 + 4 >> 2], i4[c4 + 224 >> 2] = i4[r4 >> 2], i4[c4 + 228 >> 2] = t4, AI(a4, c4 + 240 | 0, c4 + 224 | 0), t4 = i4[c4 + 508 >> 2], i4[r4 + 8 >> 2] = i4[c4 + 504 >> 2], i4[r4 + 12 >> 2] = t4, t4 = i4[c4 + 500 >> 2], i4[r4 >> 2] = i4[c4 + 496 >> 2], i4[r4 + 4 >> 2] = t4, t4 = i4[c4 + 524 >> 2], i4[c4 + 216 >> 2] = i4[c4 + 520 >> 2], i4[c4 + 220 >> 2] = t4, t4 = i4[c4 + 412 >> 2], i4[c4 + 200 >> 2] = i4[c4 + 408 >> 2], i4[c4 + 204 >> 2] = t4, t4 = i4[c4 + 516 >> 2], i4[c4 + 208 >> 2] = i4[c4 + 512 >> 2], i4[c4 + 212 >> 2] = t4, t4 = i4[c4 + 404 >> 2], i4[c4 + 192 >> 2] = i4[c4 + 400 >> 2], i4[c4 + 196 >> 2] = t4, AI(a4, c4 + 208 | 0, c4 + 192 | 0), i4[c4 + 412 >> 2] = n5 ^ i4[c4 + 508 >> 2], i4[c4 + 408 >> 2] = i4[c4 + 504 >> 2] ^ w4, i4[c4 + 404 >> 2] = i4[c4 + 500 >> 2] ^ p4, i4[c4 + 400 >> 2] = i4[c4 + 496 >> 2] ^ f4, (_4 = (a4 = _4) + 16 | 0) >>> 0 <= E4 >>> 0; ) ;
                      if ((_4 = 15 & E4) && (bg((r4 = c4 + 384 | 0) | _4, 0, 16 - _4 | 0), Ng(r4, Q5 + a4 | 0, _4), _4 = i4[c4 + 384 >> 2], r4 = i4[c4 + 388 >> 2], y4 = i4[c4 + 392 >> 2], h4 = i4[c4 + 396 >> 2], a4 = i4[c4 + 492 >> 2], Q5 = i4[c4 + 488 >> 2], i4[c4 + 520 >> 2] = Q5, i4[c4 + 524 >> 2] = a4, e6 = i4[c4 + 476 >> 2], i4[c4 + 184 >> 2] = i4[c4 + 472 >> 2], i4[c4 + 188 >> 2] = e6, i4[c4 + 168 >> 2] = Q5, i4[c4 + 172 >> 2] = a4, a4 = i4[c4 + 484 >> 2], Q5 = i4[c4 + 480 >> 2], i4[c4 + 512 >> 2] = Q5, i4[c4 + 516 >> 2] = a4, e6 = i4[c4 + 468 >> 2], i4[c4 + 176 >> 2] = i4[c4 + 464 >> 2], i4[c4 + 180 >> 2] = e6, i4[c4 + 160 >> 2] = Q5, i4[c4 + 164 >> 2] = a4, AI(Q5 = c4 + 496 | 0, c4 + 176 | 0, c4 + 160 | 0), a4 = i4[c4 + 508 >> 2], i4[c4 + 488 >> 2] = i4[c4 + 504 >> 2], i4[c4 + 492 >> 2] = a4, a4 = i4[c4 + 460 >> 2], i4[c4 + 152 >> 2] = i4[c4 + 456 >> 2], i4[c4 + 156 >> 2] = a4, a4 = i4[c4 + 476 >> 2], i4[c4 + 136 >> 2] = i4[c4 + 472 >> 2], i4[c4 + 140 >> 2] = a4, a4 = i4[c4 + 500 >> 2], i4[c4 + 480 >> 2] = i4[c4 + 496 >> 2], i4[c4 + 484 >> 2] = a4, a4 = i4[c4 + 452 >> 2], i4[c4 + 144 >> 2] = i4[c4 + 448 >> 2], i4[c4 + 148 >> 2] = a4, a4 = i4[c4 + 468 >> 2], i4[c4 + 128 >> 2] = i4[c4 + 464 >> 2], i4[c4 + 132 >> 2] = a4, AI(Q5, c4 + 144 | 0, c4 + 128 | 0), a4 = i4[c4 + 508 >> 2], i4[c4 + 472 >> 2] = i4[c4 + 504 >> 2], i4[c4 + 476 >> 2] = a4, a4 = i4[c4 + 444 >> 2], i4[c4 + 120 >> 2] = i4[c4 + 440 >> 2], i4[c4 + 124 >> 2] = a4, a4 = i4[c4 + 460 >> 2], i4[c4 + 104 >> 2] = i4[c4 + 456 >> 2], i4[c4 + 108 >> 2] = a4, a4 = i4[c4 + 500 >> 2], i4[c4 + 464 >> 2] = i4[c4 + 496 >> 2], i4[c4 + 468 >> 2] = a4, a4 = i4[c4 + 436 >> 2], i4[c4 + 112 >> 2] = i4[c4 + 432 >> 2], i4[c4 + 116 >> 2] = a4, a4 = i4[c4 + 452 >> 2], i4[c4 + 96 >> 2] = i4[c4 + 448 >> 2], i4[c4 + 100 >> 2] = a4, AI(Q5, c4 + 112 | 0, c4 + 96 | 0), a4 = i4[c4 + 508 >> 2], i4[c4 + 456 >> 2] = i4[c4 + 504 >> 2], i4[c4 + 460 >> 2] = a4, a4 = i4[c4 + 428 >> 2], i4[c4 + 88 >> 2] = i4[c4 + 424 >> 2], i4[c4 + 92 >> 2] = a4, a4 = i4[c4 + 444 >> 2], i4[c4 + 72 >> 2] = i4[c4 + 440 >> 2], i4[c4 + 76 >> 2] = a4, a4 = i4[c4 + 500 >> 2], i4[c4 + 448 >> 2] = i4[c4 + 496 >> 2], i4[c4 + 452 >> 2] = a4, a4 = i4[c4 + 420 >> 2], i4[c4 + 80 >> 2] = i4[c4 + 416 >> 2], i4[c4 + 84 >> 2] = a4, a4 = i4[c4 + 436 >> 2], i4[c4 + 64 >> 2] = i4[c4 + 432 >> 2], i4[c4 + 68 >> 2] = a4, AI(Q5, c4 + 80 | 0, c4 - -64 | 0), a4 = i4[c4 + 508 >> 2], i4[c4 + 440 >> 2] = i4[c4 + 504 >> 2], i4[c4 + 444 >> 2] = a4, a4 = i4[c4 + 412 >> 2], i4[c4 + 56 >> 2] = i4[c4 + 408 >> 2], i4[c4 + 60 >> 2] = a4, a4 = i4[c4 + 428 >> 2], i4[c4 + 40 >> 2] = i4[c4 + 424 >> 2], i4[c4 + 44 >> 2] = a4, a4 = i4[c4 + 500 >> 2], i4[c4 + 432 >> 2] = i4[c4 + 496 >> 2], i4[c4 + 436 >> 2] = a4, a4 = i4[c4 + 404 >> 2], i4[c4 + 48 >> 2] = i4[c4 + 400 >> 2], i4[c4 + 52 >> 2] = a4, a4 = i4[c4 + 420 >> 2], i4[c4 + 32 >> 2] = i4[c4 + 416 >> 2], i4[c4 + 36 >> 2] = a4, AI(Q5, c4 + 48 | 0, c4 + 32 | 0), a4 = i4[c4 + 508 >> 2], i4[c4 + 424 >> 2] = i4[c4 + 504 >> 2], i4[c4 + 428 >> 2] = a4, a4 = i4[c4 + 524 >> 2], i4[c4 + 24 >> 2] = i4[c4 + 520 >> 2], i4[c4 + 28 >> 2] = a4, a4 = i4[c4 + 412 >> 2], i4[c4 + 8 >> 2] = i4[c4 + 408 >> 2], i4[c4 + 12 >> 2] = a4, a4 = i4[c4 + 500 >> 2], i4[c4 + 416 >> 2] = i4[c4 + 496 >> 2], i4[c4 + 420 >> 2] = a4, a4 = i4[c4 + 516 >> 2], i4[c4 + 16 >> 2] = i4[c4 + 512 >> 2], i4[c4 + 20 >> 2] = a4, a4 = i4[c4 + 404 >> 2], i4[c4 >> 2] = i4[c4 + 400 >> 2], i4[c4 + 4 >> 2] = a4, AI(Q5, c4 + 16 | 0, c4), i4[c4 + 412 >> 2] = h4 ^ i4[c4 + 508 >> 2], i4[c4 + 408 >> 2] = y4 ^ i4[c4 + 504 >> 2], i4[c4 + 404 >> 2] = r4 ^ i4[c4 + 500 >> 2], i4[c4 + 400 >> 2] = _4 ^ i4[c4 + 496 >> 2]), r4 = 16, a4 = 0, B4 >>> 0 < 16) _4 = 0;
                      else for (; X(A8 + a4 | 0, C4 + a4 | 0, c4 + 400 | 0), _4 = r4, (r4 = (a4 = r4) + 16 | 0) >>> 0 <= B4 >>> 0; ) ;
                      return (Q5 = 15 & B4) && (bg((a4 = c4 + 384 | 0) | Q5, 0, 16 - Q5 | 0), Ng(a4, C4 + _4 | 0, Q5), X(C4 = c4 + 512 | 0, a4, c4 + 400 | 0), Ng(A8 + _4 | 0, C4, Q5)), l3(I7, g6, E4, B4, c4 + 400 | 0), s3 = c4 + 528 | 0, 0;
                    }, function(A8, I7, g6, C4, B4, Q5, E4, a4, _4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, E4 |= 0;
                      var c4, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0, n5 = 0;
                      if (s3 = c4 = s3 - 544 | 0, G3(_4 |= 0, a4 |= 0, c4 + 432 | 0), _4 = 0, E4 >>> 0 <= 31) a4 = 0;
                      else for (r4 = 32; L3(Q5 + _4 | 0, c4 + 432 | 0), _4 = a4 = r4, (r4 = a4 + 32 | 0) >>> 0 <= E4 >>> 0; ) ;
                      if ((_4 = 16 | a4) >>> 0 <= E4 >>> 0) for (r4 = c4 + 448 | 0, y4 = c4 + 464 | 0, h4 = c4 + 480 | 0, e6 = c4 + 496 | 0, D4 = c4 + 512 | 0; f4 = o3[0 | (a4 = Q5 + a4 | 0)] | o3[a4 + 1 | 0] << 8 | o3[a4 + 2 | 0] << 16 | o3[a4 + 3 | 0] << 24, p4 = o3[a4 + 4 | 0] | o3[a4 + 5 | 0] << 8 | o3[a4 + 6 | 0] << 16 | o3[a4 + 7 | 0] << 24, w4 = o3[a4 + 8 | 0] | o3[a4 + 9 | 0] << 8 | o3[a4 + 10 | 0] << 16 | o3[a4 + 11 | 0] << 24, n5 = o3[a4 + 12 | 0] | o3[a4 + 13 | 0] << 8 | o3[a4 + 14 | 0] << 16 | o3[a4 + 15 | 0] << 24, a4 = i4[D4 + 12 >> 2], i4[c4 + 392 >> 2] = i4[D4 + 8 >> 2], i4[c4 + 396 >> 2] = a4, a4 = i4[D4 + 4 >> 2], i4[c4 + 384 >> 2] = i4[D4 >> 2], i4[c4 + 388 >> 2] = a4, a4 = i4[e6 + 12 >> 2], i4[c4 + 376 >> 2] = i4[e6 + 8 >> 2], i4[c4 + 380 >> 2] = a4, a4 = i4[e6 + 4 >> 2], i4[c4 + 368 >> 2] = i4[e6 >> 2], i4[c4 + 372 >> 2] = a4, a4 = i4[D4 + 12 >> 2], i4[c4 + 360 >> 2] = i4[D4 + 8 >> 2], i4[c4 + 364 >> 2] = a4, a4 = i4[D4 + 4 >> 2], i4[c4 + 352 >> 2] = i4[D4 >> 2], i4[c4 + 356 >> 2] = a4, AI(a4 = c4 + 528 | 0, c4 + 368 | 0, c4 + 352 | 0), t4 = i4[c4 + 540 >> 2], i4[D4 + 8 >> 2] = i4[c4 + 536 >> 2], i4[D4 + 12 >> 2] = t4, t4 = i4[c4 + 532 >> 2], i4[D4 >> 2] = i4[c4 + 528 >> 2], i4[D4 + 4 >> 2] = t4, t4 = i4[h4 + 12 >> 2], i4[c4 + 344 >> 2] = i4[h4 + 8 >> 2], i4[c4 + 348 >> 2] = t4, t4 = i4[h4 + 4 >> 2], i4[c4 + 336 >> 2] = i4[h4 >> 2], i4[c4 + 340 >> 2] = t4, t4 = i4[e6 + 12 >> 2], i4[c4 + 328 >> 2] = i4[e6 + 8 >> 2], i4[c4 + 332 >> 2] = t4, t4 = i4[e6 + 4 >> 2], i4[c4 + 320 >> 2] = i4[e6 >> 2], i4[c4 + 324 >> 2] = t4, AI(a4, c4 + 336 | 0, c4 + 320 | 0), t4 = i4[c4 + 540 >> 2], i4[e6 + 8 >> 2] = i4[c4 + 536 >> 2], i4[e6 + 12 >> 2] = t4, t4 = i4[c4 + 532 >> 2], i4[e6 >> 2] = i4[c4 + 528 >> 2], i4[e6 + 4 >> 2] = t4, t4 = i4[y4 + 12 >> 2], i4[c4 + 312 >> 2] = i4[y4 + 8 >> 2], i4[c4 + 316 >> 2] = t4, t4 = i4[y4 + 4 >> 2], i4[c4 + 304 >> 2] = i4[y4 >> 2], i4[c4 + 308 >> 2] = t4, t4 = i4[h4 + 12 >> 2], i4[c4 + 296 >> 2] = i4[h4 + 8 >> 2], i4[c4 + 300 >> 2] = t4, t4 = i4[h4 + 4 >> 2], i4[c4 + 288 >> 2] = i4[h4 >> 2], i4[c4 + 292 >> 2] = t4, AI(a4, c4 + 304 | 0, c4 + 288 | 0), t4 = i4[c4 + 540 >> 2], i4[h4 + 8 >> 2] = i4[c4 + 536 >> 2], i4[h4 + 12 >> 2] = t4, t4 = i4[c4 + 532 >> 2], i4[h4 >> 2] = i4[c4 + 528 >> 2], i4[h4 + 4 >> 2] = t4, t4 = i4[r4 + 12 >> 2], i4[c4 + 280 >> 2] = i4[r4 + 8 >> 2], i4[c4 + 284 >> 2] = t4, t4 = i4[r4 + 4 >> 2], i4[c4 + 272 >> 2] = i4[r4 >> 2], i4[c4 + 276 >> 2] = t4, t4 = i4[y4 + 12 >> 2], i4[c4 + 264 >> 2] = i4[y4 + 8 >> 2], i4[c4 + 268 >> 2] = t4, t4 = i4[y4 + 4 >> 2], i4[c4 + 256 >> 2] = i4[y4 >> 2], i4[c4 + 260 >> 2] = t4, AI(a4, c4 + 272 | 0, c4 + 256 | 0), t4 = i4[c4 + 540 >> 2], i4[y4 + 8 >> 2] = i4[c4 + 536 >> 2], i4[y4 + 12 >> 2] = t4, t4 = i4[c4 + 532 >> 2], i4[y4 >> 2] = i4[c4 + 528 >> 2], i4[y4 + 4 >> 2] = t4, t4 = i4[c4 + 444 >> 2], i4[c4 + 248 >> 2] = i4[c4 + 440 >> 2], i4[c4 + 252 >> 2] = t4, t4 = i4[c4 + 436 >> 2], i4[c4 + 240 >> 2] = i4[c4 + 432 >> 2], i4[c4 + 244 >> 2] = t4, t4 = i4[r4 + 12 >> 2], i4[c4 + 232 >> 2] = i4[r4 + 8 >> 2], i4[c4 + 236 >> 2] = t4, t4 = i4[r4 + 4 >> 2], i4[c4 + 224 >> 2] = i4[r4 >> 2], i4[c4 + 228 >> 2] = t4, AI(a4, c4 + 240 | 0, c4 + 224 | 0), t4 = i4[c4 + 540 >> 2], i4[r4 + 8 >> 2] = i4[c4 + 536 >> 2], i4[r4 + 12 >> 2] = t4, t4 = i4[c4 + 532 >> 2], i4[r4 >> 2] = i4[c4 + 528 >> 2], i4[r4 + 4 >> 2] = t4, t4 = i4[c4 + 396 >> 2], i4[c4 + 216 >> 2] = i4[c4 + 392 >> 2], i4[c4 + 220 >> 2] = t4, t4 = i4[c4 + 444 >> 2], i4[c4 + 200 >> 2] = i4[c4 + 440 >> 2], i4[c4 + 204 >> 2] = t4, t4 = i4[c4 + 388 >> 2], i4[c4 + 208 >> 2] = i4[c4 + 384 >> 2], i4[c4 + 212 >> 2] = t4, t4 = i4[c4 + 436 >> 2], i4[c4 + 192 >> 2] = i4[c4 + 432 >> 2], i4[c4 + 196 >> 2] = t4, AI(a4, c4 + 208 | 0, c4 + 192 | 0), i4[c4 + 444 >> 2] = n5 ^ i4[c4 + 540 >> 2], i4[c4 + 440 >> 2] = i4[c4 + 536 >> 2] ^ w4, i4[c4 + 436 >> 2] = i4[c4 + 532 >> 2] ^ p4, i4[c4 + 432 >> 2] = i4[c4 + 528 >> 2] ^ f4, (_4 = (a4 = _4) + 16 | 0) >>> 0 <= E4 >>> 0; ) ;
                      (_4 = 15 & E4) && (bg((r4 = c4 + 416 | 0) | _4, 0, 16 - _4 | 0), Ng(r4, Q5 + a4 | 0, _4), _4 = i4[c4 + 416 >> 2], r4 = i4[c4 + 420 >> 2], y4 = i4[c4 + 424 >> 2], h4 = i4[c4 + 428 >> 2], a4 = i4[c4 + 524 >> 2], Q5 = i4[c4 + 520 >> 2], i4[c4 + 392 >> 2] = Q5, i4[c4 + 396 >> 2] = a4, e6 = i4[c4 + 508 >> 2], i4[c4 + 184 >> 2] = i4[c4 + 504 >> 2], i4[c4 + 188 >> 2] = e6, i4[c4 + 168 >> 2] = Q5, i4[c4 + 172 >> 2] = a4, a4 = i4[c4 + 516 >> 2], Q5 = i4[c4 + 512 >> 2], i4[c4 + 384 >> 2] = Q5, i4[c4 + 388 >> 2] = a4, e6 = i4[c4 + 500 >> 2], i4[c4 + 176 >> 2] = i4[c4 + 496 >> 2], i4[c4 + 180 >> 2] = e6, i4[c4 + 160 >> 2] = Q5, i4[c4 + 164 >> 2] = a4, AI(Q5 = c4 + 528 | 0, c4 + 176 | 0, c4 + 160 | 0), a4 = i4[c4 + 540 >> 2], i4[c4 + 520 >> 2] = i4[c4 + 536 >> 2], i4[c4 + 524 >> 2] = a4, a4 = i4[c4 + 492 >> 2], i4[c4 + 152 >> 2] = i4[c4 + 488 >> 2], i4[c4 + 156 >> 2] = a4, a4 = i4[c4 + 508 >> 2], i4[c4 + 136 >> 2] = i4[c4 + 504 >> 2], i4[c4 + 140 >> 2] = a4, a4 = i4[c4 + 532 >> 2], i4[c4 + 512 >> 2] = i4[c4 + 528 >> 2], i4[c4 + 516 >> 2] = a4, a4 = i4[c4 + 484 >> 2], i4[c4 + 144 >> 2] = i4[c4 + 480 >> 2], i4[c4 + 148 >> 2] = a4, a4 = i4[c4 + 500 >> 2], i4[c4 + 128 >> 2] = i4[c4 + 496 >> 2], i4[c4 + 132 >> 2] = a4, AI(Q5, c4 + 144 | 0, c4 + 128 | 0), a4 = i4[c4 + 540 >> 2], i4[c4 + 504 >> 2] = i4[c4 + 536 >> 2], i4[c4 + 508 >> 2] = a4, a4 = i4[c4 + 476 >> 2], i4[c4 + 120 >> 2] = i4[c4 + 472 >> 2], i4[c4 + 124 >> 2] = a4, a4 = i4[c4 + 492 >> 2], i4[c4 + 104 >> 2] = i4[c4 + 488 >> 2], i4[c4 + 108 >> 2] = a4, a4 = i4[c4 + 532 >> 2], i4[c4 + 496 >> 2] = i4[c4 + 528 >> 2], i4[c4 + 500 >> 2] = a4, a4 = i4[c4 + 468 >> 2], i4[c4 + 112 >> 2] = i4[c4 + 464 >> 2], i4[c4 + 116 >> 2] = a4, a4 = i4[c4 + 484 >> 2], i4[c4 + 96 >> 2] = i4[c4 + 480 >> 2], i4[c4 + 100 >> 2] = a4, AI(Q5, c4 + 112 | 0, c4 + 96 | 0), a4 = i4[c4 + 540 >> 2], i4[c4 + 488 >> 2] = i4[c4 + 536 >> 2], i4[c4 + 492 >> 2] = a4, a4 = i4[c4 + 460 >> 2], i4[c4 + 88 >> 2] = i4[c4 + 456 >> 2], i4[c4 + 92 >> 2] = a4, a4 = i4[c4 + 476 >> 2], i4[c4 + 72 >> 2] = i4[c4 + 472 >> 2], i4[c4 + 76 >> 2] = a4, a4 = i4[c4 + 532 >> 2], i4[c4 + 480 >> 2] = i4[c4 + 528 >> 2], i4[c4 + 484 >> 2] = a4, a4 = i4[c4 + 452 >> 2], i4[c4 + 80 >> 2] = i4[c4 + 448 >> 2], i4[c4 + 84 >> 2] = a4, a4 = i4[c4 + 468 >> 2], i4[c4 + 64 >> 2] = i4[c4 + 464 >> 2], i4[c4 + 68 >> 2] = a4, AI(Q5, c4 + 80 | 0, c4 - -64 | 0), a4 = i4[c4 + 540 >> 2], i4[c4 + 472 >> 2] = i4[c4 + 536 >> 2], i4[c4 + 476 >> 2] = a4, a4 = i4[c4 + 444 >> 2], i4[c4 + 56 >> 2] = i4[c4 + 440 >> 2], i4[c4 + 60 >> 2] = a4, a4 = i4[c4 + 460 >> 2], i4[c4 + 40 >> 2] = i4[c4 + 456 >> 2], i4[c4 + 44 >> 2] = a4, a4 = i4[c4 + 532 >> 2], i4[c4 + 464 >> 2] = i4[c4 + 528 >> 2], i4[c4 + 468 >> 2] = a4, a4 = i4[c4 + 436 >> 2], i4[c4 + 48 >> 2] = i4[c4 + 432 >> 2], i4[c4 + 52 >> 2] = a4, a4 = i4[c4 + 452 >> 2], i4[c4 + 32 >> 2] = i4[c4 + 448 >> 2], i4[c4 + 36 >> 2] = a4, AI(Q5, c4 + 48 | 0, c4 + 32 | 0), a4 = i4[c4 + 540 >> 2], i4[c4 + 456 >> 2] = i4[c4 + 536 >> 2], i4[c4 + 460 >> 2] = a4, a4 = i4[c4 + 396 >> 2], i4[c4 + 24 >> 2] = i4[c4 + 392 >> 2], i4[c4 + 28 >> 2] = a4, a4 = i4[c4 + 444 >> 2], i4[c4 + 8 >> 2] = i4[c4 + 440 >> 2], i4[c4 + 12 >> 2] = a4, a4 = i4[c4 + 532 >> 2], i4[c4 + 448 >> 2] = i4[c4 + 528 >> 2], i4[c4 + 452 >> 2] = a4, a4 = i4[c4 + 388 >> 2], i4[c4 + 16 >> 2] = i4[c4 + 384 >> 2], i4[c4 + 20 >> 2] = a4, a4 = i4[c4 + 436 >> 2], i4[c4 >> 2] = i4[c4 + 432 >> 2], i4[c4 + 4 >> 2] = a4, AI(Q5, c4 + 16 | 0, c4), i4[c4 + 444 >> 2] = h4 ^ i4[c4 + 540 >> 2], i4[c4 + 440 >> 2] = y4 ^ i4[c4 + 536 >> 2], i4[c4 + 436 >> 2] = r4 ^ i4[c4 + 532 >> 2], i4[c4 + 432 >> 2] = _4 ^ i4[c4 + 528 >> 2]);
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                if (A8) {
                                  if (r4 = 16, g6 >>> 0 < 16) break B;
                                  for (_4 = 0; O(A8 + _4 | 0, I7 + _4 | 0, c4 + 432 | 0), _4 = a4 = r4, (r4 = a4 + 16 | 0) >>> 0 <= g6 >>> 0; ) ;
                                } else {
                                  if (_4 = 16, g6 >>> 0 < 16) break g;
                                  for (r4 = 0; O(c4 + 528 | 0, I7 + r4 | 0, c4 + 432 | 0), r4 = a4 = _4, (_4 = a4 + 16 | 0) >>> 0 <= g6 >>> 0; ) ;
                                }
                                if (!(_4 = 15 & g6)) break A;
                                if (A8) break C;
                                break I;
                              }
                              if (a4 = 0, !(_4 = g6)) break A;
                            }
                            Z(A8 + a4 | 0, I7 + a4 | 0, _4, c4 + 432 | 0);
                            break A;
                          }
                          if (a4 = 0, !(_4 = g6)) break A;
                        }
                        Z(c4 + 528 | 0, I7 + a4 | 0, _4, c4 + 432 | 0);
                      }
                      l3(c4 + 384 | 0, B4, E4, g6, c4 + 432 | 0), a4 = -1;
                      A: {
                        I: {
                          if (I7 = B4 - 16 | 0) {
                            if (16 == (0 | I7)) break I;
                            break A;
                          }
                          a4 = oI(c4 + 384 | 0, C4);
                          break A;
                        }
                        a4 = NC(c4 + 384 | 0, C4);
                      }
                      return !A8 | !a4 || bg(A8, 0, g6), s3 = c4 + 544 | 0, 0 | a4;
                    }, function(A8, I7, g6, C4, B4) {
                      var Q5;
                      return A8 |= 0, C4 |= 0, B4 |= 0, s3 = Q5 = s3 + -64 | 0, (I7 |= 0) | (g6 |= 0) && (i4[Q5 + 8 >> 2] = 2036477234, i4[Q5 + 12 >> 2] = 1797285236, i4[Q5 >> 2] = 1634760805, i4[Q5 + 4 >> 2] = 857760878, i4[Q5 + 16 >> 2] = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, i4[Q5 + 20 >> 2] = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24, i4[Q5 + 24 >> 2] = o3[B4 + 8 | 0] | o3[B4 + 9 | 0] << 8 | o3[B4 + 10 | 0] << 16 | o3[B4 + 11 | 0] << 24, i4[Q5 + 28 >> 2] = o3[B4 + 12 | 0] | o3[B4 + 13 | 0] << 8 | o3[B4 + 14 | 0] << 16 | o3[B4 + 15 | 0] << 24, i4[Q5 + 32 >> 2] = o3[B4 + 16 | 0] | o3[B4 + 17 | 0] << 8 | o3[B4 + 18 | 0] << 16 | o3[B4 + 19 | 0] << 24, i4[Q5 + 36 >> 2] = o3[B4 + 20 | 0] | o3[B4 + 21 | 0] << 8 | o3[B4 + 22 | 0] << 16 | o3[B4 + 23 | 0] << 24, i4[Q5 + 40 >> 2] = o3[B4 + 24 | 0] | o3[B4 + 25 | 0] << 8 | o3[B4 + 26 | 0] << 16 | o3[B4 + 27 | 0] << 24, B4 = o3[B4 + 28 | 0] | o3[B4 + 29 | 0] << 8 | o3[B4 + 30 | 0] << 16 | o3[B4 + 31 | 0] << 24, i4[Q5 + 48 >> 2] = 0, i4[Q5 + 52 >> 2] = 0, i4[Q5 + 44 >> 2] = B4, i4[Q5 + 56 >> 2] = o3[0 | C4] | o3[C4 + 1 | 0] << 8 | o3[C4 + 2 | 0] << 16 | o3[C4 + 3 | 0] << 24, i4[Q5 + 60 >> 2] = o3[C4 + 4 | 0] | o3[C4 + 5 | 0] << 8 | o3[C4 + 6 | 0] << 16 | o3[C4 + 7 | 0] << 24, z(Q5, A8 = bg(A8, 0, I7), A8, I7, g6), XC(Q5, 64)), s3 = Q5 - -64 | 0, 0;
                    }, function(A8, I7, g6, C4, B4) {
                      var Q5;
                      return A8 |= 0, C4 |= 0, B4 |= 0, s3 = Q5 = s3 + -64 | 0, (I7 |= 0) | (g6 |= 0) && (i4[Q5 + 8 >> 2] = 2036477234, i4[Q5 + 12 >> 2] = 1797285236, i4[Q5 >> 2] = 1634760805, i4[Q5 + 4 >> 2] = 857760878, i4[Q5 + 16 >> 2] = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, i4[Q5 + 20 >> 2] = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24, i4[Q5 + 24 >> 2] = o3[B4 + 8 | 0] | o3[B4 + 9 | 0] << 8 | o3[B4 + 10 | 0] << 16 | o3[B4 + 11 | 0] << 24, i4[Q5 + 28 >> 2] = o3[B4 + 12 | 0] | o3[B4 + 13 | 0] << 8 | o3[B4 + 14 | 0] << 16 | o3[B4 + 15 | 0] << 24, i4[Q5 + 32 >> 2] = o3[B4 + 16 | 0] | o3[B4 + 17 | 0] << 8 | o3[B4 + 18 | 0] << 16 | o3[B4 + 19 | 0] << 24, i4[Q5 + 36 >> 2] = o3[B4 + 20 | 0] | o3[B4 + 21 | 0] << 8 | o3[B4 + 22 | 0] << 16 | o3[B4 + 23 | 0] << 24, i4[Q5 + 40 >> 2] = o3[B4 + 24 | 0] | o3[B4 + 25 | 0] << 8 | o3[B4 + 26 | 0] << 16 | o3[B4 + 27 | 0] << 24, B4 = o3[B4 + 28 | 0] | o3[B4 + 29 | 0] << 8 | o3[B4 + 30 | 0] << 16 | o3[B4 + 31 | 0] << 24, i4[Q5 + 48 >> 2] = 0, i4[Q5 + 44 >> 2] = B4, i4[Q5 + 52 >> 2] = o3[0 | C4] | o3[C4 + 1 | 0] << 8 | o3[C4 + 2 | 0] << 16 | o3[C4 + 3 | 0] << 24, i4[Q5 + 56 >> 2] = o3[C4 + 4 | 0] | o3[C4 + 5 | 0] << 8 | o3[C4 + 6 | 0] << 16 | o3[C4 + 7 | 0] << 24, i4[Q5 + 60 >> 2] = o3[C4 + 8 | 0] | o3[C4 + 9 | 0] << 8 | o3[C4 + 10 | 0] << 16 | o3[C4 + 11 | 0] << 24, z(Q5, A8 = bg(A8, 0, I7), A8, I7, g6), XC(Q5, 64)), s3 = Q5 - -64 | 0, 0;
                    }, function(A8, I7, g6, C4, B4, Q5, E4, a4) {
                      var _4;
                      return A8 |= 0, I7 |= 0, B4 |= 0, Q5 |= 0, E4 |= 0, a4 |= 0, s3 = _4 = s3 + -64 | 0, (g6 |= 0) | (C4 |= 0) && (i4[_4 + 8 >> 2] = 2036477234, i4[_4 + 12 >> 2] = 1797285236, i4[_4 >> 2] = 1634760805, i4[_4 + 4 >> 2] = 857760878, i4[_4 + 16 >> 2] = o3[0 | a4] | o3[a4 + 1 | 0] << 8 | o3[a4 + 2 | 0] << 16 | o3[a4 + 3 | 0] << 24, i4[_4 + 20 >> 2] = o3[a4 + 4 | 0] | o3[a4 + 5 | 0] << 8 | o3[a4 + 6 | 0] << 16 | o3[a4 + 7 | 0] << 24, i4[_4 + 24 >> 2] = o3[a4 + 8 | 0] | o3[a4 + 9 | 0] << 8 | o3[a4 + 10 | 0] << 16 | o3[a4 + 11 | 0] << 24, i4[_4 + 28 >> 2] = o3[a4 + 12 | 0] | o3[a4 + 13 | 0] << 8 | o3[a4 + 14 | 0] << 16 | o3[a4 + 15 | 0] << 24, i4[_4 + 32 >> 2] = o3[a4 + 16 | 0] | o3[a4 + 17 | 0] << 8 | o3[a4 + 18 | 0] << 16 | o3[a4 + 19 | 0] << 24, i4[_4 + 36 >> 2] = o3[a4 + 20 | 0] | o3[a4 + 21 | 0] << 8 | o3[a4 + 22 | 0] << 16 | o3[a4 + 23 | 0] << 24, i4[_4 + 40 >> 2] = o3[a4 + 24 | 0] | o3[a4 + 25 | 0] << 8 | o3[a4 + 26 | 0] << 16 | o3[a4 + 27 | 0] << 24, i4[_4 + 44 >> 2] = o3[a4 + 28 | 0] | o3[a4 + 29 | 0] << 8 | o3[a4 + 30 | 0] << 16 | o3[a4 + 31 | 0] << 24, i4[_4 + 48 >> 2] = Q5, i4[_4 + 52 >> 2] = E4, i4[_4 + 56 >> 2] = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, i4[_4 + 60 >> 2] = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24, z(_4, I7, A8, g6, C4), XC(_4, 64)), s3 = _4 - -64 | 0, 0;
                    }, function(A8, I7, g6, C4, B4, Q5, E4) {
                      var a4;
                      return A8 |= 0, I7 |= 0, B4 |= 0, Q5 |= 0, E4 |= 0, s3 = a4 = s3 + -64 | 0, (g6 |= 0) | (C4 |= 0) && (i4[a4 + 8 >> 2] = 2036477234, i4[a4 + 12 >> 2] = 1797285236, i4[a4 >> 2] = 1634760805, i4[a4 + 4 >> 2] = 857760878, i4[a4 + 16 >> 2] = o3[0 | E4] | o3[E4 + 1 | 0] << 8 | o3[E4 + 2 | 0] << 16 | o3[E4 + 3 | 0] << 24, i4[a4 + 20 >> 2] = o3[E4 + 4 | 0] | o3[E4 + 5 | 0] << 8 | o3[E4 + 6 | 0] << 16 | o3[E4 + 7 | 0] << 24, i4[a4 + 24 >> 2] = o3[E4 + 8 | 0] | o3[E4 + 9 | 0] << 8 | o3[E4 + 10 | 0] << 16 | o3[E4 + 11 | 0] << 24, i4[a4 + 28 >> 2] = o3[E4 + 12 | 0] | o3[E4 + 13 | 0] << 8 | o3[E4 + 14 | 0] << 16 | o3[E4 + 15 | 0] << 24, i4[a4 + 32 >> 2] = o3[E4 + 16 | 0] | o3[E4 + 17 | 0] << 8 | o3[E4 + 18 | 0] << 16 | o3[E4 + 19 | 0] << 24, i4[a4 + 36 >> 2] = o3[E4 + 20 | 0] | o3[E4 + 21 | 0] << 8 | o3[E4 + 22 | 0] << 16 | o3[E4 + 23 | 0] << 24, i4[a4 + 40 >> 2] = o3[E4 + 24 | 0] | o3[E4 + 25 | 0] << 8 | o3[E4 + 26 | 0] << 16 | o3[E4 + 27 | 0] << 24, E4 = o3[E4 + 28 | 0] | o3[E4 + 29 | 0] << 8 | o3[E4 + 30 | 0] << 16 | o3[E4 + 31 | 0] << 24, i4[a4 + 48 >> 2] = Q5, i4[a4 + 44 >> 2] = E4, i4[a4 + 52 >> 2] = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, i4[a4 + 56 >> 2] = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24, i4[a4 + 60 >> 2] = o3[B4 + 8 | 0] | o3[B4 + 9 | 0] << 8 | o3[B4 + 10 | 0] << 16 | o3[B4 + 11 | 0] << 24, z(a4, I7, A8, g6, C4), XC(a4, 64)), s3 = a4 - -64 | 0, 0;
                    }], fB.grow = function(A8) {
                      var I7 = this.length;
                      return this.length = this.length + A8, I7;
                    }, fB.set = function(A8, I7) {
                      this[A8] = I7;
                    }, fB.get = function(A8) {
                      return this[A8];
                    }, fB);
                    function wB() {
                      return g5.byteLength / 65536 | 0;
                    }
                    return { e: Object.create(Object.prototype, { grow: { value: function(A8) {
                      A8 |= 0;
                      var B4 = 0 | wB(), Q5 = B4 + A8 | 0;
                      if (B4 < Q5 && Q5 < 65536) {
                        var _4 = new ArrayBuffer(a3(Q5, 65536));
                        new Int8Array(_4).set(C3), C3 = new Int8Array(_4), new Int16Array(_4), i4 = new Int32Array(_4), o3 = new Uint8Array(_4), new Uint16Array(_4), E3 = new Uint32Array(_4), new Float32Array(_4), new Float64Array(_4), g5 = _4, I6 = o3;
                      }
                      return B4;
                    } }, buffer: { get: function() {
                      return g5;
                    } } }), f: function() {
                    }, g: CB, h: hB, i: CB, j: BB, k: iB, l: zC, m: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4) {
                      return 0 | VI(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0, o4 |= 0, a4 |= 0, _4 |= 0, 36768);
                    }, n: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4, c4) {
                      return 0 | eg(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0, o4 |= 0, E4 |= 0, _4 |= 0, c4 |= 0, 36768);
                    }, o: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4) {
                      return 0 | zI(A8 |= 0, I7 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0, o4 |= 0, E4 |= 0, a4 |= 0, _4 |= 0, 36772);
                    }, p: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4) {
                      return 0 | fg(A8 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0, o4 |= 0, E4 |= 0, a4 |= 0, _4 |= 0, 36772);
                    }, q: BB, r: hB, s: BB, t: BB, u: iB, v: PC, w: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4) {
                      return 0 | VI(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0, o4 |= 0, a4 |= 0, _4 |= 0, 36776);
                    }, x: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4, c4) {
                      return 0 | eg(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0, o4 |= 0, E4 |= 0, _4 |= 0, c4 |= 0, 36776);
                    }, y: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4) {
                      return 0 | zI(A8 |= 0, I7 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0, o4 |= 0, E4 |= 0, a4 |= 0, _4 |= 0, 36780);
                    }, z: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4) {
                      return 0 | fg(A8 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0, o4 |= 0, E4 |= 0, a4 |= 0, _4 |= 0, 36780);
                    }, A: hB, B: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4, c4) {
                      return 0 | xI(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, (A8 = 0) | (B4 |= 0), Q5 |= 0, i5 |= 0, A8 | (o4 |= 0), E4 |= 0, _4 |= 0, c4 |= 0);
                    }, C: function(A8, I7, g6, C4, B4, o4, E4, a4, _4, c4, t4) {
                      return A8 |= 0, I7 |= 0, C4 |= 0, E4 |= 0, _4 |= 0, E4 |= _4 = 0, !(B4 |= 0) & (C4 |= _4) >>> 0 < 4294967280 ? (xI(A8, A8 + C4 | 0, 0, g6 |= 0, C4, B4, o4 |= 0, E4, a4 |= 0, c4 |= 0, t4 |= 0), I7 && (B4 = (A8 = C4 + 16 | 0) >>> 0 < 16 ? B4 + 1 | 0 : B4, i4[I7 >> 2] = A8, i4[I7 + 4 >> 2] = B4)) : (rC(), Q4()), 0;
                    }, D: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4, c4) {
                      return 0 | mI(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, (A8 = 0) | (B4 |= 0), Q5 |= 0, i5 |= 0, A8 | (o4 |= 0), E4 |= 0, _4 |= 0, c4 |= 0);
                    }, E: function(A8, I7, g6, C4, B4, o4, E4, a4, _4, c4, t4) {
                      return A8 |= 0, I7 |= 0, C4 |= 0, E4 |= 0, _4 |= 0, E4 |= _4 = 0, !(B4 |= 0) & (C4 |= _4) >>> 0 < 4294967280 ? (mI(A8, A8 + C4 | 0, 0, g6 |= 0, C4, B4, o4 |= 0, E4, a4 |= 0, c4 |= 0, t4 |= 0), I7 && (B4 = (A8 = C4 + 16 | 0) >>> 0 < 16 ? B4 + 1 | 0 : B4, i4[I7 >> 2] = A8, i4[I7 + 4 >> 2] = B4)) : (rC(), Q4()), 0;
                    }, F: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4) {
                      return 0 | dI(A8 |= 0, g6 |= 0, (A8 = 0) | (C4 |= 0), B4 |= 0, Q5 |= 0, i5 |= 0, A8 | (o4 |= 0), E4 |= 0, a4 |= 0, _4 |= 0);
                    }, G: function(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4, c4) {
                      return I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, E4 |= 0, E4 |= 0, g6 = -1, !(Q5 |= 0) & (B4 |= 0) >>> 0 >= 16 | Q5 && (g6 = dI(A8 |= 0, C4, B4 - 16 | 0, Q5 - (B4 >>> 0 < 16) | 0, (C4 + B4 | 0) - 16 | 0, o4 |= 0, E4, a4 |= 0, _4 |= 0, c4 |= 0)), I7 && (i4[I7 >> 2] = g6 ? 0 : B4 - 16 | 0, i4[I7 + 4 >> 2] = g6 ? 0 : Q5 - (B4 >>> 0 < 16) | 0), 0 | g6;
                    }, H: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4) {
                      return 0 | HI(A8 |= 0, g6 |= 0, (A8 = 0) | (C4 |= 0), B4 |= 0, Q5 |= 0, i5 |= 0, A8 | (o4 |= 0), E4 |= 0, a4 |= 0, _4 |= 0);
                    }, I: function(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4, c4) {
                      return I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, E4 |= 0, E4 |= 0, g6 = -1, !(Q5 |= 0) & (B4 |= 0) >>> 0 >= 16 | Q5 && (g6 = HI(A8 |= 0, C4, B4 - 16 | 0, Q5 - (B4 >>> 0 < 16) | 0, (C4 + B4 | 0) - 16 | 0, o4 |= 0, E4, a4 |= 0, _4 |= 0, c4 |= 0)), I7 && (i4[I7 >> 2] = g6 ? 0 : B4 - 16 | 0, i4[I7 + 4 >> 2] = g6 ? 0 : Q5 - (B4 >>> 0 < 16) | 0), 0 | g6;
                    }, J: BB, K: aB, L: hB, M: CB, N: EB, O: PC, P: BB, Q: eB, R: hB, S: CB, T: EB, U: PC, V: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4, c4) {
                      return 0 | pI(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, (A8 = 0) | (B4 |= 0), Q5 |= 0, i5 |= 0, A8 | (o4 |= 0), E4 |= 0, _4 |= 0, c4 |= 0);
                    }, W: function(A8, I7, g6, C4, B4, o4, E4, a4, _4, c4, t4) {
                      return A8 |= 0, I7 |= 0, C4 |= 0, E4 |= 0, _4 |= 0, E4 |= _4 = 0, !(B4 |= 0) & (C4 |= _4) >>> 0 < 4294967280 ? (pI(A8, A8 + C4 | 0, 0, g6 |= 0, C4, B4, o4 |= 0, E4, a4 |= 0, c4 |= 0, t4 |= 0), I7 && (B4 = (A8 = C4 + 16 | 0) >>> 0 < 16 ? B4 + 1 | 0 : B4, i4[I7 >> 2] = A8, i4[I7 + 4 >> 2] = B4)) : (rC(), Q4()), 0;
                    }, X: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4) {
                      return 0 | hI(A8 |= 0, g6 |= 0, (A8 = 0) | (C4 |= 0), B4 |= 0, Q5 |= 0, i5 |= 0, A8 | (o4 |= 0), E4 |= 0, a4 |= 0, _4 |= 0);
                    }, Y: function(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4, c4) {
                      return I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, E4 |= 0, E4 |= 0, g6 = -1, !(Q5 |= 0) & (B4 |= 0) >>> 0 >= 16 | Q5 && (g6 = hI(A8 |= 0, C4, B4 - 16 | 0, Q5 - (B4 >>> 0 < 16) | 0, (C4 + B4 | 0) - 16 | 0, o4 |= 0, E4, a4 |= 0, _4 |= 0, c4 |= 0)), I7 && (i4[I7 >> 2] = g6 ? 0 : B4 - 16 | 0, i4[I7 + 4 >> 2] = g6 ? 0 : Q5 - (B4 >>> 0 < 16) | 0), 0 | g6;
                    }, Z: BB, _: _B, $: hB, aa: CB, ba: EB, ca: PC, da: BB, ea: BB, fa: function() {
                      return 1462;
                    }, ga: _I, ha: JI, ia: PC, ja: BB, ka: BB, la: IB, ma: PC, na: mA, oa: function(A8, I7, g6, C4) {
                      return 0 | mC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, pa: Sg, qa: function(A8, I7, g6, C4, B4) {
                      var Q5;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, s3 = Q5 = s3 - 240 | 0, mA(Q5, B4 |= 0, 32), UA(Q5, I7, g6, C4), JA(Q5, I7 = Q5 + 208 | 0), UA(g6 = Q5 + 104 | 0, I7, 32, 0), JA(g6, A8), XC(I7, 32), s3 = Q5 + 240 | 0, 0;
                    }, ra: function(A8, I7, g6, C4, B4) {
                      var Q5, i5;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, s3 = Q5 = s3 - 272 | 0, mA(i5 = Q5 + 32 | 0, B4 |= 0, 32), UA(i5, I7, g6, C4), JA(i5, I7 = Q5 + 240 | 0), UA(g6 = Q5 + 136 | 0, I7, 32, 0), JA(g6, Q5), XC(I7, 32), I7 = NC(A8, Q5), g6 = MI(Q5, A8, 32), s3 = Q5 + 272 | 0, ((0 | A8) == (0 | Q5) ? -1 : I7) | g6;
                    }, sa: gB, ta: BB, ua: $C, va: PC, wa: iI, xa: EC, ya: wg, za: function(A8, I7, g6, C4, B4) {
                      var Q5;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, s3 = Q5 = s3 - 480 | 0, iI(Q5, B4 |= 0, 32), SA(Q5, I7, g6, C4), j(Q5, I7 = Q5 + 416 | 0), SA(g6 = Q5 + 208 | 0, I7, 64, 0), j(g6, A8), XC(I7, 64), s3 = Q5 + 480 | 0, 0;
                    }, Aa: function(A8, I7, g6, C4, B4) {
                      var Q5, i5;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, s3 = Q5 = s3 - 544 | 0, iI(i5 = Q5 - -64 | 0, B4 |= 0, 32), SA(i5, I7, g6, C4), j(i5, I7 = Q5 + 480 | 0), SA(g6 = Q5 + 272 | 0, I7, 64, 0), j(g6, Q5), XC(I7, 64), I7 = GC(A8, Q5), g6 = MI(Q5, A8, 64), s3 = Q5 + 544 | 0, ((0 | A8) == (0 | Q5) ? -1 : I7) | g6;
                    }, Ba: BB, Ca: BB, Da: $C, Ea: PC, Fa: yC, Ga: EC, Ha: function(A8, I7) {
                      I7 |= 0;
                      var g6, B4 = 0;
                      return s3 = g6 = s3 + -64 | 0, wg(A8 |= 0, g6), B4 = i4[g6 + 28 >> 2], A8 = i4[g6 + 24 >> 2], C3[I7 + 24 | 0] = A8, C3[I7 + 25 | 0] = A8 >>> 8, C3[I7 + 26 | 0] = A8 >>> 16, C3[I7 + 27 | 0] = A8 >>> 24, C3[I7 + 28 | 0] = B4, C3[I7 + 29 | 0] = B4 >>> 8, C3[I7 + 30 | 0] = B4 >>> 16, C3[I7 + 31 | 0] = B4 >>> 24, B4 = i4[g6 + 20 >> 2], A8 = i4[g6 + 16 >> 2], C3[I7 + 16 | 0] = A8, C3[I7 + 17 | 0] = A8 >>> 8, C3[I7 + 18 | 0] = A8 >>> 16, C3[I7 + 19 | 0] = A8 >>> 24, C3[I7 + 20 | 0] = B4, C3[I7 + 21 | 0] = B4 >>> 8, C3[I7 + 22 | 0] = B4 >>> 16, C3[I7 + 23 | 0] = B4 >>> 24, B4 = i4[g6 + 12 >> 2], A8 = i4[g6 + 8 >> 2], C3[I7 + 8 | 0] = A8, C3[I7 + 9 | 0] = A8 >>> 8, C3[I7 + 10 | 0] = A8 >>> 16, C3[I7 + 11 | 0] = A8 >>> 24, C3[I7 + 12 | 0] = B4, C3[I7 + 13 | 0] = B4 >>> 8, C3[I7 + 14 | 0] = B4 >>> 16, C3[I7 + 15 | 0] = B4 >>> 24, B4 = i4[g6 + 4 >> 2], A8 = i4[g6 >> 2], C3[0 | I7] = A8, C3[I7 + 1 | 0] = A8 >>> 8, C3[I7 + 2 | 0] = A8 >>> 16, C3[I7 + 3 | 0] = A8 >>> 24, C3[I7 + 4 | 0] = B4, C3[I7 + 5 | 0] = B4 >>> 8, C3[I7 + 6 | 0] = B4 >>> 16, C3[I7 + 7 | 0] = B4 >>> 24, s3 = g6 - -64 | 0, 0;
                    }, Ia: _I, Ja: JI, Ka: BB, La: BB, Ma: BB, Na: BB, Oa: _B, Pa: BB, Qa: CB, Ra: CB, Sa: EB, Ta: function() {
                      return 1476;
                    }, Ua: function(A8, I7, g6) {
                      return 0 | cI(A8 |= 0, I7 |= 0, g6 |= 0);
                    }, Va: UC, Wa: cC, Xa: Pg, Ya: qg, Za: Bg, _a: Qg, $a: Yg, ab: function(A8, I7, g6, C4, B4, Q5, i5, o4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, Q5 |= 0;
                      var E4, a4 = 0;
                      return a4 = C4 |= 0, C4 = B4 |= 0, E4 = 0 | a4, s3 = a4 = s3 - 32 | 0, B4 = -1, cC(a4, i5 |= 0, o4 |= 0) || (B4 = aI(A8, I7, g6, E4, C4, Q5, a4), XC(a4, 32)), s3 = a4 + 32 | 0, 0 | B4;
                    }, bb: function(A8, I7, g6, C4, B4, i5) {
                      return A8 |= 0, I7 |= 0, B4 |= 0, i5 |= 0, !(C4 |= 0) & (g6 |= 0) >>> 0 >= 4294967280 | C4 && (rC(), Q4()), 0 | aI(A8 + 16 | 0, A8, I7, g6, C4, B4, i5);
                    }, cb: function(A8, I7, g6, C4, B4, Q5, i5) {
                      return 0 | sg(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0);
                    }, db: Jg, eb: function(A8, I7, g6, C4, B4, Q5, i5, o4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, Q5 |= 0;
                      var E4, a4 = 0;
                      return a4 = C4 |= 0, C4 = B4 |= 0, E4 = 0 | a4, s3 = a4 = s3 - 32 | 0, B4 = -1, cC(a4, i5 |= 0, o4 |= 0) || (B4 = eI(A8, I7, g6, E4, C4, Q5, a4), XC(a4, 32)), s3 = a4 + 32 | 0, 0 | B4;
                    }, fb: hg, gb: function(A8, I7, g6, C4, B4, Q5, i5) {
                      return 0 | _g(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0);
                    }, hb: function(A8, I7, g6, B4, Q5) {
                      A8 |= 0, I7 |= 0, Q5 |= 0;
                      var o4, E4, a4, _4, c4 = 0, t4 = 0;
                      return c4 = g6 |= 0, g6 = B4 |= 0, _4 = 0 | c4, c4 = B4 = s3, s3 = o4 = B4 - 512 & -64, B4 = -1, UC(E4 = o4 - -64 | 0, a4 = o4 + 32 | 0) || (iC(B4 = o4 + 128 | 0, 0, 0, 24), lC(B4, E4, 32, 0), lC(B4, Q5, 32, 0), eC(B4, t4 = o4 + 96 | 0, 24), B4 = sg(A8 + 32 | 0, I7, _4, g6, t4, Q5, a4), I7 = i4[o4 + 92 >> 2], g6 = i4[o4 + 88 >> 2], C3[A8 + 24 | 0] = g6, C3[A8 + 25 | 0] = g6 >>> 8, C3[A8 + 26 | 0] = g6 >>> 16, C3[A8 + 27 | 0] = g6 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = i4[o4 + 84 >> 2], g6 = i4[o4 + 80 >> 2], C3[A8 + 16 | 0] = g6, C3[A8 + 17 | 0] = g6 >>> 8, C3[A8 + 18 | 0] = g6 >>> 16, C3[A8 + 19 | 0] = g6 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = i4[o4 + 76 >> 2], g6 = i4[o4 + 72 >> 2], C3[A8 + 8 | 0] = g6, C3[A8 + 9 | 0] = g6 >>> 8, C3[A8 + 10 | 0] = g6 >>> 16, C3[A8 + 11 | 0] = g6 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = i4[o4 + 68 >> 2], g6 = i4[o4 + 64 >> 2], C3[0 | A8] = g6, C3[A8 + 1 | 0] = g6 >>> 8, C3[A8 + 2 | 0] = g6 >>> 16, C3[A8 + 3 | 0] = g6 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, XC(a4, 32), XC(E4, 32), XC(t4, 24)), s3 = c4, 0 | B4;
                    }, ib: function(A8, I7, g6, C4, B4, Q5) {
                      A8 |= 0, I7 |= 0, B4 |= 0, Q5 |= 0;
                      var i5, o4, E4 = 0;
                      return o4 = E4 = s3, s3 = i5 = E4 - 448 & -64, E4 = -1, !(C4 |= 0) & (g6 |= 0) >>> 0 >= 48 | C4 && (iC(E4 = i5 - -64 | 0, 0, 0, 24), lC(E4, I7, 32, 0), lC(E4, B4, 32, 0), eC(E4, B4 = i5 + 32 | 0, 24), E4 = _g(A8, I7 + 32 | 0, g6 - 32 | 0, C4 - (g6 >>> 0 < 32) | 0, B4, I7, Q5)), s3 = o4, 0 | E4;
                    }, jb: oB, kb: cI, lb: sC, mb: pg, nb: Pg, ob: qg, pb: Bg, qb: Qg, rb: BB, sb: BB, tb: BB, ub: BB, vb: _B, wb: BB, xb: CB, yb: CB, zb: EB, Ab: yA, Bb: BB, Cb: CB, Db: BB, Eb: CB, Fb: wA, Gb: BB, Hb: CB, Ib: BB, Jb: CB, Kb: AC, Lb: gB, Mb: CB, Nb: BB, Ob: CB, Pb: IC, Qb: gB, Rb: CB, Sb: BB, Tb: CB, Ub: gC, Vb: gB, Wb: CB, Xb: BB, Yb: CB, Zb: CB, _b: gB, $b: BB, ac: CB, bc: gB, cc: BB, dc: WC, ec: ZC, fc: function(A8, I7, g6, C4, B4, Q5, i5) {
                      return 0 | kC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0);
                    }, gc: iC, hc: function(A8, I7, g6, C4) {
                      return 0 | lC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, ic: eC, jc: PC, kc: CB, lc: gB, mc: BB, nc: CB, oc: gB, pc: BB, qc: CB, rc: CB, sc: ZC, tc: PC, uc: kC, vc: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4) {
                      return 0 | QA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0, o4 |= 0, E4 |= 0);
                    }, wc: eA, xc: function(A8, I7, g6, B4, i5, E4) {
                      A8 |= 0, I7 |= 0, i5 |= 0, E4 |= 0;
                      var a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0;
                      if (a4 = -1, !((B4 |= 0) - 65 >>> 0 < 4294967232 | (g6 |= 0) >>> 0 > 64)) {
                        A: {
                          if (!g6 || !I7) {
                            if (((t4 = 255 & B4) - 65 & 255) >>> 0 > 191) {
                              i5 ? (_4 = 725511199 ^ (o3[i5 + 8 | 0] | o3[i5 + 9 | 0] << 8 | o3[i5 + 10 | 0] << 16 | o3[i5 + 11 | 0] << 24), g6 = -1694144372 ^ (o3[i5 + 12 | 0] | o3[i5 + 13 | 0] << 8 | o3[i5 + 14 | 0] << 16 | o3[i5 + 15 | 0] << 24), I7 = -1377402159 ^ (o3[0 | i5] | o3[i5 + 1 | 0] << 8 | o3[i5 + 2 | 0] << 16 | o3[i5 + 3 | 0] << 24), i5 = 1359893119 ^ (o3[i5 + 4 | 0] | o3[i5 + 5 | 0] << 8 | o3[i5 + 6 | 0] << 16 | o3[i5 + 7 | 0] << 24)) : (_4 = 725511199, g6 = -1694144372, I7 = -1377402159, i5 = 1359893119), E4 ? (c4 = 327033209 ^ (o3[E4 + 8 | 0] | o3[E4 + 9 | 0] << 8 | o3[E4 + 10 | 0] << 16 | o3[E4 + 11 | 0] << 24), B4 = 1541459225 ^ (o3[E4 + 12 | 0] | o3[E4 + 13 | 0] << 8 | o3[E4 + 14 | 0] << 16 | o3[E4 + 15 | 0] << 24), a4 = -79577749 ^ (o3[0 | E4] | o3[E4 + 1 | 0] << 8 | o3[E4 + 2 | 0] << 16 | o3[E4 + 3 | 0] << 24), E4 = 528734635 ^ (o3[E4 + 4 | 0] | o3[E4 + 5 | 0] << 8 | o3[E4 + 6 | 0] << 16 | o3[E4 + 7 | 0] << 24)) : (c4 = 327033209, B4 = 1541459225, a4 = -79577749, E4 = 528734635), bg(A8 - -64 | 0, 0, 293), C3[A8 + 56 | 0] = c4, C3[A8 + 57 | 0] = c4 >>> 8, C3[A8 + 58 | 0] = c4 >>> 16, C3[A8 + 59 | 0] = c4 >>> 24, C3[A8 + 60 | 0] = B4, C3[A8 + 61 | 0] = B4 >>> 8, C3[A8 + 62 | 0] = B4 >>> 16, C3[A8 + 63 | 0] = B4 >>> 24, C3[A8 + 48 | 0] = a4, C3[A8 + 49 | 0] = a4 >>> 8, C3[A8 + 50 | 0] = a4 >>> 16, C3[A8 + 51 | 0] = a4 >>> 24, C3[A8 + 52 | 0] = E4, C3[A8 + 53 | 0] = E4 >>> 8, C3[A8 + 54 | 0] = E4 >>> 16, C3[A8 + 55 | 0] = E4 >>> 24, C3[A8 + 40 | 0] = _4, C3[A8 + 41 | 0] = _4 >>> 8, C3[A8 + 42 | 0] = _4 >>> 16, C3[A8 + 43 | 0] = _4 >>> 24, C3[A8 + 44 | 0] = g6, C3[A8 + 45 | 0] = g6 >>> 8, C3[A8 + 46 | 0] = g6 >>> 16, C3[A8 + 47 | 0] = g6 >>> 24, C3[A8 + 32 | 0] = I7, C3[A8 + 33 | 0] = I7 >>> 8, C3[A8 + 34 | 0] = I7 >>> 16, C3[A8 + 35 | 0] = I7 >>> 24, C3[A8 + 36 | 0] = i5, C3[A8 + 37 | 0] = i5 >>> 8, C3[A8 + 38 | 0] = i5 >>> 16, C3[A8 + 39 | 0] = i5 >>> 24, C3[A8 + 24 | 0] = 241, C3[A8 + 25 | 0] = 54, C3[A8 + 26 | 0] = 29, C3[A8 + 27 | 0] = 95, C3[A8 + 28 | 0] = 58, C3[A8 + 29 | 0] = 245, C3[A8 + 30 | 0] = 79, C3[A8 + 31 | 0] = 165, C3[A8 + 16 | 0] = 43, C3[A8 + 17 | 0] = 248, C3[A8 + 18 | 0] = 148, C3[A8 + 19 | 0] = 254, C3[A8 + 20 | 0] = 114, C3[A8 + 21 | 0] = 243, C3[A8 + 22 | 0] = 110, C3[A8 + 23 | 0] = 60, C3[A8 + 8 | 0] = 59, C3[A8 + 9 | 0] = 167, C3[A8 + 10 | 0] = 202, C3[A8 + 11 | 0] = 132, C3[A8 + 12 | 0] = 133, C3[A8 + 13 | 0] = 174, C3[A8 + 14 | 0] = 103, C3[A8 + 15 | 0] = 187, I7 = -222443256 ^ t4, C3[0 | A8] = I7, C3[A8 + 1 | 0] = I7 >>> 8, C3[A8 + 2 | 0] = I7 >>> 16, C3[A8 + 3 | 0] = I7 >>> 24, C3[A8 + 4 | 0] = 103, C3[A8 + 5 | 0] = 230, C3[A8 + 6 | 0] = 9, C3[A8 + 7 | 0] = 106;
                              break A;
                            }
                            rC(), Q4();
                          }
                          s3 = e6 = s3 - 128 | 0, !I7 | ((y4 = 255 & B4) - 65 & 255) >>> 0 <= 191 | ((t4 = 255 & g6) - 65 & 255) >>> 0 <= 191 ? (rC(), Q4()) : (i5 ? (_4 = 725511199 ^ (o3[i5 + 8 | 0] | o3[i5 + 9 | 0] << 8 | o3[i5 + 10 | 0] << 16 | o3[i5 + 11 | 0] << 24), g6 = -1694144372 ^ (o3[i5 + 12 | 0] | o3[i5 + 13 | 0] << 8 | o3[i5 + 14 | 0] << 16 | o3[i5 + 15 | 0] << 24), a4 = -1377402159 ^ (o3[0 | i5] | o3[i5 + 1 | 0] << 8 | o3[i5 + 2 | 0] << 16 | o3[i5 + 3 | 0] << 24), i5 = 1359893119 ^ (o3[i5 + 4 | 0] | o3[i5 + 5 | 0] << 8 | o3[i5 + 6 | 0] << 16 | o3[i5 + 7 | 0] << 24)) : (_4 = 725511199, g6 = -1694144372, a4 = -1377402159, i5 = 1359893119), E4 ? (c4 = 327033209 ^ (o3[E4 + 8 | 0] | o3[E4 + 9 | 0] << 8 | o3[E4 + 10 | 0] << 16 | o3[E4 + 11 | 0] << 24), B4 = 1541459225 ^ (o3[E4 + 12 | 0] | o3[E4 + 13 | 0] << 8 | o3[E4 + 14 | 0] << 16 | o3[E4 + 15 | 0] << 24), r4 = -79577749 ^ (o3[0 | E4] | o3[E4 + 1 | 0] << 8 | o3[E4 + 2 | 0] << 16 | o3[E4 + 3 | 0] << 24), E4 = 528734635 ^ (o3[E4 + 4 | 0] | o3[E4 + 5 | 0] << 8 | o3[E4 + 6 | 0] << 16 | o3[E4 + 7 | 0] << 24)) : (c4 = 327033209, B4 = 1541459225, r4 = -79577749, E4 = 528734635), bg(A8 - -64 | 0, 0, 293), C3[A8 + 56 | 0] = c4, C3[A8 + 57 | 0] = c4 >>> 8, C3[A8 + 58 | 0] = c4 >>> 16, C3[A8 + 59 | 0] = c4 >>> 24, C3[A8 + 60 | 0] = B4, C3[A8 + 61 | 0] = B4 >>> 8, C3[A8 + 62 | 0] = B4 >>> 16, C3[A8 + 63 | 0] = B4 >>> 24, C3[A8 + 48 | 0] = r4, C3[A8 + 49 | 0] = r4 >>> 8, C3[A8 + 50 | 0] = r4 >>> 16, C3[A8 + 51 | 0] = r4 >>> 24, C3[A8 + 52 | 0] = E4, C3[A8 + 53 | 0] = E4 >>> 8, C3[A8 + 54 | 0] = E4 >>> 16, C3[A8 + 55 | 0] = E4 >>> 24, C3[A8 + 40 | 0] = _4, C3[A8 + 41 | 0] = _4 >>> 8, C3[A8 + 42 | 0] = _4 >>> 16, C3[A8 + 43 | 0] = _4 >>> 24, C3[A8 + 44 | 0] = g6, C3[A8 + 45 | 0] = g6 >>> 8, C3[A8 + 46 | 0] = g6 >>> 16, C3[A8 + 47 | 0] = g6 >>> 24, C3[A8 + 32 | 0] = a4, C3[A8 + 33 | 0] = a4 >>> 8, C3[A8 + 34 | 0] = a4 >>> 16, C3[A8 + 35 | 0] = a4 >>> 24, C3[A8 + 36 | 0] = i5, C3[A8 + 37 | 0] = i5 >>> 8, C3[A8 + 38 | 0] = i5 >>> 16, C3[A8 + 39 | 0] = i5 >>> 24, C3[A8 + 24 | 0] = 241, C3[A8 + 25 | 0] = 54, C3[A8 + 26 | 0] = 29, C3[A8 + 27 | 0] = 95, C3[A8 + 28 | 0] = 58, C3[A8 + 29 | 0] = 245, C3[A8 + 30 | 0] = 79, C3[A8 + 31 | 0] = 165, C3[A8 + 16 | 0] = 43, C3[A8 + 17 | 0] = 248, C3[A8 + 18 | 0] = 148, C3[A8 + 19 | 0] = 254, C3[A8 + 20 | 0] = 114, C3[A8 + 21 | 0] = 243, C3[A8 + 22 | 0] = 110, C3[A8 + 23 | 0] = 60, C3[A8 + 8 | 0] = 59, C3[A8 + 9 | 0] = 167, C3[A8 + 10 | 0] = 202, C3[A8 + 11 | 0] = 132, C3[A8 + 12 | 0] = 133, C3[A8 + 13 | 0] = 174, C3[A8 + 14 | 0] = 103, C3[A8 + 15 | 0] = 187, g6 = -222443256 ^ (t4 << 8 | y4), C3[0 | A8] = g6, C3[A8 + 1 | 0] = g6 >>> 8, C3[A8 + 2 | 0] = g6 >>> 16, C3[A8 + 3 | 0] = g6 >>> 24, g6 = t4 >>> 24 ^ 1779033703, C3[A8 + 4 | 0] = g6, C3[A8 + 5 | 0] = g6 >>> 8, C3[A8 + 6 | 0] = g6 >>> 16, C3[A8 + 7 | 0] = g6 >>> 24, g6 = Ng(bg(e6, 0, 128), I7, t4), Ng(A8 + 96 | 0, g6, 128), I7 = 128 + (o3[A8 + 352 | 0] | o3[A8 + 353 | 0] << 8 | o3[A8 + 354 | 0] << 16 | o3[A8 + 355 | 0] << 24) | 0, C3[A8 + 352 | 0] = I7, C3[A8 + 353 | 0] = I7 >>> 8, C3[A8 + 354 | 0] = I7 >>> 16, C3[A8 + 355 | 0] = I7 >>> 24, XC(g6, 128), s3 = g6 + 128 | 0);
                        }
                        a4 = 0;
                      }
                      return 0 | a4;
                    }, yc: lC, zc: Hg, Ac: gB, Bc: CC, Cc: function() {
                      return 1531;
                    }, Dc: BB, Ec: function() {
                      return 104;
                    }, Fc: $I, Gc: function(A8, I7, g6, C4) {
                      return 0 | UA(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, Hc: JA, Ic: function(A8, I7, g6, C4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0;
                      var B4, Q5 = 0;
                      return s3 = B4 = s3 - 112 | 0, Q5 = i4[8811], i4[B4 + 16 >> 2] = i4[8810], i4[B4 + 20 >> 2] = Q5, Q5 = i4[8813], i4[B4 + 24 >> 2] = i4[8812], i4[B4 + 28 >> 2] = Q5, Q5 = i4[8815], i4[B4 + 32 >> 2] = i4[8814], i4[B4 + 36 >> 2] = Q5, i4[B4 + 40 >> 2] = 0, i4[B4 + 44 >> 2] = 0, Q5 = i4[8809], i4[B4 + 8 >> 2] = i4[8808], i4[B4 + 12 >> 2] = Q5, UA(Q5 = B4 + 8 | 0, I7, g6, C4), JA(Q5, A8), s3 = B4 + 112 | 0, 0;
                    }, Jc: gB, Kc: IB, Lc: SI, Mc: QC, Nc: j, Oc: CC, Pc: CB, Qc: gB, Rc: eB, Sc: BB, Tc: YI, Uc: WC, Vc: CB, Wc: gB, Xc: eB, Yc: BB, Zc: YI, _c: PC, $c: function(A8, I7, g6) {
                      return 0 | mA(A8 |= 0, I7 |= 0, g6 |= 0);
                    }, ad: function(A8, I7, g6) {
                      return 0 | mC(A8 |= 0, I7 |= 0, g6 |= 0, 0);
                    }, bd: function(A8, I7) {
                      return Sg(A8 |= 0, I7 |= 0), XC(A8, 4), 0;
                    }, cd: function(A8, I7, g6, C4, B4) {
                      var Q5;
                      return A8 |= 0, C4 |= 0, B4 |= 0, s3 = Q5 = s3 - 208 | 0, mA(Q5, I7 |= 0, g6 |= 0), mC(Q5, C4, B4, 0), Sg(Q5, A8), XC(Q5, 4), s3 = Q5 + 208 | 0, 0;
                    }, dd: PC, ed: function(A8, I7, g6, B4, Q5) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, Q5 |= 0;
                      var E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0;
                      if (s3 = E4 = s3 - 256 | 0, C3[E4 + 15 | 0] = 1, I7 >>> 0 <= 8160) {
                        if (I7 >>> 0 >= 32) for (t4 = A8 - 32 | 0, a4 = 32; c4 = a4, mA(a4 = E4 + 48 | 0, Q5, 32), _4 && mC(a4, _4 + t4 | 0, 32, 0), mC(a4 = E4 + 48 | 0, g6, B4, 0), mC(a4, E4 + 15 | 0, 1, 0), Sg(a4, A8 + _4 | 0), C3[E4 + 15 | 0] = o3[E4 + 15 | 0] + 1, (a4 = (_4 = c4) + 32 | 0) >>> 0 <= I7 >>> 0; ) ;
                        (_4 = 31 & I7) && (mA(I7 = E4 + 48 | 0, Q5, 32), c4 && mC(I7, (A8 + c4 | 0) - 32 | 0, 32, 0), mC(I7 = E4 + 48 | 0, g6, B4, 0), mC(I7, E4 + 15 | 0, 1, 0), Sg(g6 = I7, I7 = E4 + 16 | 0), Ng(A8 + c4 | 0, I7, _4), XC(I7, 32)), XC(E4 + 48 | 0, 208), A8 = 0;
                      } else i4[9404] = 28, A8 = -1;
                      return s3 = E4 + 256 | 0, 0 | A8;
                    }, fd: BB, gd: hB, hd: function() {
                      return 8160;
                    }, id: IB, jd: yC, kd: function(A8, I7, g6) {
                      return 0 | dC(A8 |= 0, I7 |= 0, g6 |= 0, 0);
                    }, ld: function(A8, I7) {
                      return wg(A8 |= 0, I7 |= 0), XC(A8, 4), 0;
                    }, md: function(A8, I7, g6, C4, B4) {
                      var Q5;
                      return A8 |= 0, C4 |= 0, B4 |= 0, s3 = Q5 = s3 - 416 | 0, iI(Q5, I7 |= 0, g6 |= 0), dC(Q5, C4, B4, 0), wg(Q5, A8), XC(Q5, 4), s3 = Q5 + 416 | 0, 0;
                    }, nd: function(A8) {
                      ag(A8 |= 0, 64);
                    }, od: function(A8, I7, g6, B4, Q5) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0, Q5 |= 0;
                      var E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0;
                      if (s3 = E4 = s3 - 496 | 0, C3[E4 + 15 | 0] = 1, I7 >>> 0 <= 16320) {
                        if (I7 >>> 0 >= 64) for (t4 = A8 + -64 | 0, a4 = 64; c4 = a4, iI(a4 = E4 + 80 | 0, Q5, 64), _4 && dC(a4, _4 + t4 | 0, 64, 0), dC(a4 = E4 + 80 | 0, g6, B4, 0), dC(a4, E4 + 15 | 0, 1, 0), wg(a4, A8 + _4 | 0), C3[E4 + 15 | 0] = o3[E4 + 15 | 0] + 1, (a4 = (_4 = c4) - -64 | 0) >>> 0 <= I7 >>> 0; ) ;
                        (_4 = 63 & I7) && (iI(I7 = E4 + 80 | 0, Q5, 64), c4 && dC(I7, (A8 + c4 | 0) - 64 | 0, 64, 0), dC(I7 = E4 + 80 | 0, g6, B4, 0), dC(I7, E4 + 15 | 0, 1, 0), wg(g6 = I7, I7 = E4 + 16 | 0), Ng(A8 + c4 | 0, I7, _4), XC(I7, 64)), XC(E4 + 80 | 0, 416), A8 = 0;
                      } else i4[9404] = 28, A8 = -1;
                      return s3 = E4 + 496 | 0, 0 | A8;
                    }, pd: gB, qd: hB, rd: function() {
                      return 16320;
                    }, sd: $C, td: function(A8, I7, g6) {
                      return A8 |= 0, kC(I7 |= 0, 32, g6 |= 0, 32, 0, 0, 0), 0 | KC(A8, I7);
                    }, ud: function(A8, I7) {
                      return A8 |= 0, ag(I7 |= 0, 32), 0 | KC(A8, I7);
                    }, vd: function(A8, I7, g6, B4, i5) {
                      I7 |= 0, g6 |= 0, B4 |= 0, i5 |= 0;
                      var E4, a4, _4 = 0, c4 = 0, t4 = 0;
                      if (a4 = _4 = s3, s3 = _4 = _4 - 512 & -64, E4 = (A8 |= 0) || I7) {
                        if (t4 = -1, !tC(c4 = _4 + 96 | 0, B4, i5)) {
                          for (B4 = I7 || A8, A8 = 0, iC(I7 = _4 + 128 | 0, 0, 0, 64), lC(I7, c4, 32, 0), XC(c4, 32), lC(I7, g6, 32, 0), lC(I7, i5, 32, 0), eC(I7, _4 + 32 | 0, 64), XC(I7, 384); g6 = (I7 = _4 + 32 | 0) + A8 | 0, C3[A8 + E4 | 0] = o3[0 | g6], C3[A8 + B4 | 0] = o3[g6 + 32 | 0], C3[(g6 = 1 | A8) + E4 | 0] = o3[I7 + g6 | 0], C3[g6 + B4 | 0] = o3[I7 + (33 | A8) | 0], 32 != (0 | (A8 = A8 + 2 | 0)); ) ;
                          XC(I7, 64), t4 = 0;
                        }
                        return s3 = a4, 0 | t4;
                      }
                      rC(), Q4();
                    }, wd: function(A8, I7, g6, B4, i5) {
                      I7 |= 0, g6 |= 0, B4 |= 0, i5 |= 0;
                      var E4, a4, _4 = 0, c4 = 0, t4 = 0;
                      if (a4 = _4 = s3, s3 = _4 = _4 - 512 & -64, E4 = (A8 |= 0) || I7) {
                        if (t4 = -1, !tC(c4 = _4 + 96 | 0, B4, i5)) {
                          for (B4 = I7 || A8, A8 = 0, iC(I7 = _4 + 128 | 0, 0, 0, 64), lC(I7, c4, 32, 0), XC(c4, 32), lC(I7, i5, 32, 0), lC(I7, g6, 32, 0), eC(I7, _4 + 32 | 0, 64), XC(I7, 384); g6 = (I7 = _4 + 32 | 0) + A8 | 0, C3[A8 + B4 | 0] = o3[0 | g6], C3[A8 + E4 | 0] = o3[g6 + 32 | 0], C3[(g6 = 1 | A8) + B4 | 0] = o3[I7 + g6 | 0], C3[g6 + E4 | 0] = o3[I7 + (33 | A8) | 0], 32 != (0 | (A8 = A8 + 2 | 0)); ) ;
                          XC(I7, 64), t4 = 0;
                        }
                        return s3 = a4, 0 | t4;
                      }
                      rC(), Q4();
                    }, xd: BB, yd: BB, zd: BB, Ad: BB, Bd: function() {
                      return 1332;
                    }, Cd: TC, Dd: CB, Ed: BB, Fd: Vg, Gd: Zg, Hd: function(A8, I7) {
                      return 0 | wC(A8 |= 0, I7 |= 0);
                    }, Id: BC, Jd: function(A8, I7) {
                      return 0 | nC(A8 |= 0, I7 |= 0);
                    }, Kd: function() {
                      return 1494;
                    }, Ld: PC, Md: Vg, Nd: Zg, Od: wC, Pd: BC, Qd: nC, Rd: CB, Sd: BB, Td: TC, Ud: PC, Vd: yB, Wd: CB, Xd: cB, Yd: hB, Zd: cB, _d: CB, $d: AB, ae: function() {
                      return 1554;
                    }, be: rB, ce: cB, de: VC, ee: xC, fe: sB, ge: LC, he: function() {
                      return 6;
                    }, ie: function() {
                      return 134217728;
                    }, je: eB, ke: function() {
                      return 536870912;
                    }, le: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4) {
                      return 0 | rI(A8 |= 0, (A8 = 0) | (I7 |= 0), g6 |= 0, C4 |= 0, A8 | (B4 |= 0), Q5 |= 0, i5 |= 0, A8 | (o4 |= 0), E4 |= 0, a4 |= 0, _4 |= 0);
                    }, me: function(A8, I7, g6, C4, B4, Q5, i5) {
                      return 0 | OI(A8 |= 0, I7 |= 0, (A8 = 0) | (g6 |= 0), C4 |= 0, A8 | (B4 |= 0), Q5 |= 0, i5 |= 0);
                    }, ne: function(A8, I7, g6, C4) {
                      return 0 | bC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, oe: function(A8, I7, g6, C4) {
                      return 0 | HC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, pe: function(A8, I7, g6, C4) {
                      return 0 | YC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, qe: tB, re: CB, se: cB, te: hB, ue: cB, ve: CB, we: AB, xe: OC, ye: yB, ze: cB, Ae: VC, Be: xC, Ce: tB, De: qC, Ee: rB, Fe: RC, Ge: sB, He: vC, Ie: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4, _4) {
                      return 0 | yI(A8 |= 0, (A8 = 0) | (I7 |= 0), g6 |= 0, C4 |= 0, A8 | (B4 |= 0), Q5 |= 0, i5 |= 0, A8 | (o4 |= 0), E4 |= 0, a4 |= 0, _4 |= 0);
                    }, Je: Fg, Ke: function(A8, I7, g6, C4) {
                      return 0 | JC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, Le: yB, Me: tB, Ne: tB, Oe: CB, Pe: cB, Qe: hB, Re: cB, Se: CB, Te: AB, Ue: OC, Ve: yB, We: cB, Xe: VC, Ye: xC, Ze: tB, _e: qC, $e: rB, af: RC, bf: sB, cf: vC, df: function(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4, c4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, o4 |= 0, E4 |= 0, a4 |= 0, _4 |= 0, I7 |= 0, B4 |= 0, E4 |= 0;
                      A: {
                        switch ((c4 |= 0) - 1 | 0) {
                          case 0:
                            A8 = rI(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4, 1);
                            break A;
                          case 1:
                            A8 = yI(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4, 2);
                            break A;
                        }
                        i4[9404] = 28, A8 = -1;
                      }
                      return 0 | A8;
                    }, ef: Fg, ff: function(A8, I7, g6, C4, B4, i5, o4, E4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, i5 |= 0, o4 |= 0, g6 |= 0, B4 |= 0;
                      A: {
                        switch ((E4 |= 0) - 1 | 0) {
                          case 1:
                            A8 = TI(A8, I7, g6, C4, B4, i5, o4);
                            break A;
                          default:
                            rC(), Q4();
                          case 0:
                        }
                        A8 = OI(A8, I7, g6, C4, B4, i5, o4);
                      }
                      return 0 | A8;
                    }, gf: function(A8, I7, g6, C4) {
                      return I7 |= 0, g6 |= 0, C4 |= 0, gg(A8 |= 0, 1564, 10) ? gg(A8, 1554, 9) ? (i4[9404] = 28, A8 = -1) : A8 = bC(A8, I7, g6, C4) : A8 = JC(A8, I7, g6, C4), 0 | A8;
                    }, hf: function(A8, I7, g6, C4) {
                      return I7 |= 0, g6 |= 0, C4 |= 0, gg(A8 |= 0, 1564, 10) ? gg(A8, 1554, 9) ? (i4[9404] = 28, A8 = -1) : A8 = HC(A8, I7, g6, C4) : A8 = YC(A8, I7, g6, C4), 0 | A8;
                    }, jf: function() {
                      return 1156;
                    }, kf: function() {
                      return 1443;
                    }, lf: KC, mf: tC, nf: BB, of: BB, pf: CI, qf: pC, rf: BB, sf: BB, tf: BB, uf: _B, vf: BB, wf: CB, xf: CB, yf: EB, zf: function() {
                      return 1486;
                    }, Af: Pg, Bf: qg, Cf: PC, Df: Yg, Ef: function(A8, I7, g6, C4, B4, i5) {
                      return A8 |= 0, I7 |= 0, B4 |= 0, i5 |= 0, !(C4 |= 0) & (g6 |= 0) >>> 0 >= 4294967280 | C4 && (rC(), Q4()), aI(A8 + 16 | 0, A8, I7, g6, C4, B4, i5), 0;
                    }, Ff: Jg, Gf: hg, Hf: Pg, If: qg, Jf: BB, Kf: _B, Lf: BB, Mf: CB, Nf: CB, Of: EB, Pf: PC, Qf: PC, Rf: function(A8, I7, g6) {
                      return A8 |= 0, g6 |= 0, ag(I7 |= 0, 24), yA(A8, I7, g6, 0), C3[A8 + 32 | 0] = 1, C3[A8 + 33 | 0] = 0, C3[A8 + 34 | 0] = 0, C3[A8 + 35 | 0] = 0, g6 = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, I7 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, C3[A8 + 44 | 0] = 0, C3[A8 + 45 | 0] = 0, C3[A8 + 46 | 0] = 0, C3[A8 + 47 | 0] = 0, C3[A8 + 48 | 0] = 0, C3[A8 + 49 | 0] = 0, C3[A8 + 50 | 0] = 0, C3[A8 + 51 | 0] = 0, C3[A8 + 36 | 0] = g6, C3[A8 + 37 | 0] = g6 >>> 8, C3[A8 + 38 | 0] = g6 >>> 16, C3[A8 + 39 | 0] = g6 >>> 24, C3[A8 + 40 | 0] = I7, C3[A8 + 41 | 0] = I7 >>> 8, C3[A8 + 42 | 0] = I7 >>> 16, C3[A8 + 43 | 0] = I7 >>> 24, 0;
                    }, Sf: function(A8, I7, g6) {
                      return yA(A8 |= 0, I7 |= 0, g6 |= 0, 0), C3[A8 + 32 | 0] = 1, C3[A8 + 33 | 0] = 0, C3[A8 + 34 | 0] = 0, C3[A8 + 35 | 0] = 0, g6 = o3[I7 + 16 | 0] | o3[I7 + 17 | 0] << 8 | o3[I7 + 18 | 0] << 16 | o3[I7 + 19 | 0] << 24, I7 = o3[I7 + 20 | 0] | o3[I7 + 21 | 0] << 8 | o3[I7 + 22 | 0] << 16 | o3[I7 + 23 | 0] << 24, C3[A8 + 44 | 0] = 0, C3[A8 + 45 | 0] = 0, C3[A8 + 46 | 0] = 0, C3[A8 + 47 | 0] = 0, C3[A8 + 48 | 0] = 0, C3[A8 + 49 | 0] = 0, C3[A8 + 50 | 0] = 0, C3[A8 + 51 | 0] = 0, C3[A8 + 36 | 0] = g6, C3[A8 + 37 | 0] = g6 >>> 8, C3[A8 + 38 | 0] = g6 >>> 16, C3[A8 + 39 | 0] = g6 >>> 24, C3[A8 + 40 | 0] = I7, C3[A8 + 41 | 0] = I7 >>> 8, C3[A8 + 42 | 0] = I7 >>> 16, C3[A8 + 43 | 0] = I7 >>> 24, 0;
                    }, Tf: function(A8) {
                      var I7, g6 = 0, B4 = 0;
                      s3 = I7 = s3 - 48 | 0, g6 = o3[28 + (A8 |= 0) | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24, i4[I7 + 24 >> 2] = o3[A8 + 24 | 0] | o3[A8 + 25 | 0] << 8 | o3[A8 + 26 | 0] << 16 | o3[A8 + 27 | 0] << 24, i4[I7 + 28 >> 2] = g6, g6 = o3[A8 + 20 | 0] | o3[A8 + 21 | 0] << 8 | o3[A8 + 22 | 0] << 16 | o3[A8 + 23 | 0] << 24, i4[I7 + 16 >> 2] = o3[A8 + 16 | 0] | o3[A8 + 17 | 0] << 8 | o3[A8 + 18 | 0] << 16 | o3[A8 + 19 | 0] << 24, i4[I7 + 20 >> 2] = g6, g6 = o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24, i4[I7 >> 2] = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, i4[I7 + 4 >> 2] = g6, g6 = o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24, i4[I7 + 8 >> 2] = o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24, i4[I7 + 12 >> 2] = g6, g6 = o3[A8 + 40 | 0] | o3[A8 + 41 | 0] << 8 | o3[A8 + 42 | 0] << 16 | o3[A8 + 43 | 0] << 24, i4[I7 + 32 >> 2] = o3[A8 + 36 | 0] | o3[A8 + 37 | 0] << 8 | o3[A8 + 38 | 0] << 16 | o3[A8 + 39 | 0] << 24, i4[I7 + 36 >> 2] = g6, xg(I7, I7, 40, 0, A8 + 32 | 0, A8), g6 = i4[I7 + 28 >> 2], B4 = i4[I7 + 24 >> 2], C3[A8 + 24 | 0] = B4, C3[A8 + 25 | 0] = B4 >>> 8, C3[A8 + 26 | 0] = B4 >>> 16, C3[A8 + 27 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = g6, C3[A8 + 29 | 0] = g6 >>> 8, C3[A8 + 30 | 0] = g6 >>> 16, C3[A8 + 31 | 0] = g6 >>> 24, g6 = i4[I7 + 20 >> 2], B4 = i4[I7 + 16 >> 2], C3[A8 + 16 | 0] = B4, C3[A8 + 17 | 0] = B4 >>> 8, C3[A8 + 18 | 0] = B4 >>> 16, C3[A8 + 19 | 0] = B4 >>> 24, C3[A8 + 20 | 0] = g6, C3[A8 + 21 | 0] = g6 >>> 8, C3[A8 + 22 | 0] = g6 >>> 16, C3[A8 + 23 | 0] = g6 >>> 24, g6 = i4[I7 + 12 >> 2], B4 = i4[I7 + 8 >> 2], C3[A8 + 8 | 0] = B4, C3[A8 + 9 | 0] = B4 >>> 8, C3[A8 + 10 | 0] = B4 >>> 16, C3[A8 + 11 | 0] = B4 >>> 24, C3[A8 + 12 | 0] = g6, C3[A8 + 13 | 0] = g6 >>> 8, C3[A8 + 14 | 0] = g6 >>> 16, C3[A8 + 15 | 0] = g6 >>> 24, g6 = i4[I7 + 4 >> 2], B4 = i4[I7 >> 2], C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 4 | 0] = g6, C3[A8 + 5 | 0] = g6 >>> 8, C3[A8 + 6 | 0] = g6 >>> 16, C3[A8 + 7 | 0] = g6 >>> 24, B4 = i4[I7 + 36 >> 2], g6 = i4[I7 + 32 >> 2], C3[A8 + 32 | 0] = 1, C3[A8 + 33 | 0] = 0, C3[A8 + 34 | 0] = 0, C3[A8 + 35 | 0] = 0, C3[A8 + 36 | 0] = g6, C3[A8 + 37 | 0] = g6 >>> 8, C3[A8 + 38 | 0] = g6 >>> 16, C3[A8 + 39 | 0] = g6 >>> 24, C3[A8 + 40 | 0] = B4, C3[A8 + 41 | 0] = B4 >>> 8, C3[A8 + 42 | 0] = B4 >>> 16, C3[A8 + 43 | 0] = B4 >>> 24, s3 = I7 + 48 | 0;
                    }, Uf: function(A8, I7, g6, B4, E4, a4, _4, c4, t4, r4) {
                      A8 |= 0, I7 |= 0, B4 |= 0, a4 |= 0, _4 |= 0, t4 |= 0, r4 |= 0;
                      var e6, y4 = 0, h4 = 0, D4 = 0;
                      return y4 = E4 |= 0, y4 |= E4 = 0, e6 = E4 | (c4 |= 0), s3 = E4 = s3 - 384 | 0, (g6 |= 0) && (i4[g6 >> 2] = 0, i4[g6 + 4 >> 2] = 0), !a4 & y4 >>> 0 < 4294967279 ? (jg(h4 = E4 + 16 | 0, 64, 0, D4 = A8 + 32 | 0, A8), wC(c4 = E4 + 80 | 0, h4), XC(h4, 64), SC(c4, _4, e6, t4), SC(c4, 35216, 0 - e6 & 15, 0), i4[E4 + 72 >> 2] = 0, i4[E4 + 76 >> 2] = 0, i4[(_4 = E4 - -64 | 0) >> 2] = 0, i4[_4 + 4 >> 2] = 0, i4[E4 + 56 >> 2] = 0, i4[E4 + 60 >> 2] = 0, i4[E4 + 48 >> 2] = 0, i4[E4 + 52 >> 2] = 0, i4[E4 + 40 >> 2] = 0, i4[E4 + 44 >> 2] = 0, i4[E4 + 32 >> 2] = 0, i4[E4 + 36 >> 2] = 0, i4[E4 + 16 >> 2] = 0, i4[E4 + 20 >> 2] = 0, i4[E4 + 24 >> 2] = 0, i4[E4 + 28 >> 2] = 0, C3[E4 + 16 | 0] = r4, Cg(h4, h4, 64, 0, D4, 1, A8), SC(c4, h4, 64, 0), C3[0 | I7] = o3[E4 + 16 | 0], Cg(I7 = I7 + 1 | 0, B4, y4, a4, D4, 2, A8), SC(c4, I7, y4, a4), SC(c4, 35216, 15 & y4, 0), i4[E4 + 8 >> 2] = e6, i4[E4 + 12 >> 2] = t4, SC(c4, B4 = E4 + 8 | 0, 8, 0), i4[E4 + 8 >> 2] = y4 - -64, i4[E4 + 12 >> 2] = a4 - ((y4 >>> 0 < 4294967232) - 1 | 0), SC(c4, B4, 8, 0), nC(c4, I7 = I7 + y4 | 0), XC(c4, 256), C3[A8 + 36 | 0] = o3[A8 + 36 | 0] ^ o3[0 | I7], C3[A8 + 37 | 0] = o3[A8 + 37 | 0] ^ o3[I7 + 1 | 0], C3[A8 + 38 | 0] = o3[A8 + 38 | 0] ^ o3[I7 + 2 | 0], C3[A8 + 39 | 0] = o3[A8 + 39 | 0] ^ o3[I7 + 3 | 0], C3[A8 + 40 | 0] = o3[A8 + 40 | 0] ^ o3[I7 + 4 | 0], C3[A8 + 41 | 0] = o3[A8 + 41 | 0] ^ o3[I7 + 5 | 0], C3[A8 + 42 | 0] = o3[A8 + 42 | 0] ^ o3[I7 + 6 | 0], C3[A8 + 43 | 0] = o3[A8 + 43 | 0] ^ o3[I7 + 7 | 0], XI(D4), (2 & r4 || GI(D4, 4)) && (I7 = o3[A8 + 28 | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24, i4[E4 + 360 >> 2] = o3[A8 + 24 | 0] | o3[A8 + 25 | 0] << 8 | o3[A8 + 26 | 0] << 16 | o3[A8 + 27 | 0] << 24, i4[E4 + 364 >> 2] = I7, I7 = o3[A8 + 20 | 0] | o3[A8 + 21 | 0] << 8 | o3[A8 + 22 | 0] << 16 | o3[A8 + 23 | 0] << 24, i4[E4 + 352 >> 2] = o3[A8 + 16 | 0] | o3[A8 + 17 | 0] << 8 | o3[A8 + 18 | 0] << 16 | o3[A8 + 19 | 0] << 24, i4[E4 + 356 >> 2] = I7, I7 = o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24, i4[E4 + 336 >> 2] = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, i4[E4 + 340 >> 2] = I7, I7 = o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24, i4[E4 + 344 >> 2] = o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24, i4[E4 + 348 >> 2] = I7, I7 = o3[A8 + 40 | 0] | o3[A8 + 41 | 0] << 8 | o3[A8 + 42 | 0] << 16 | o3[A8 + 43 | 0] << 24, i4[E4 + 368 >> 2] = o3[A8 + 36 | 0] | o3[A8 + 37 | 0] << 8 | o3[A8 + 38 | 0] << 16 | o3[A8 + 39 | 0] << 24, i4[E4 + 372 >> 2] = I7, xg(I7 = E4 + 336 | 0, I7, 40, 0, D4, A8), I7 = i4[E4 + 364 >> 2], B4 = i4[E4 + 360 >> 2], C3[A8 + 24 | 0] = B4, C3[A8 + 25 | 0] = B4 >>> 8, C3[A8 + 26 | 0] = B4 >>> 16, C3[A8 + 27 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = i4[E4 + 356 >> 2], B4 = i4[E4 + 352 >> 2], C3[A8 + 16 | 0] = B4, C3[A8 + 17 | 0] = B4 >>> 8, C3[A8 + 18 | 0] = B4 >>> 16, C3[A8 + 19 | 0] = B4 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = i4[E4 + 348 >> 2], B4 = i4[E4 + 344 >> 2], C3[A8 + 8 | 0] = B4, C3[A8 + 9 | 0] = B4 >>> 8, C3[A8 + 10 | 0] = B4 >>> 16, C3[A8 + 11 | 0] = B4 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = i4[E4 + 340 >> 2], B4 = i4[E4 + 336 >> 2], C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = i4[E4 + 368 >> 2], B4 = i4[E4 + 372 >> 2], C3[A8 + 32 | 0] = 1, C3[A8 + 33 | 0] = 0, C3[A8 + 34 | 0] = 0, C3[A8 + 35 | 0] = 0, C3[A8 + 36 | 0] = I7, C3[A8 + 37 | 0] = I7 >>> 8, C3[A8 + 38 | 0] = I7 >>> 16, C3[A8 + 39 | 0] = I7 >>> 24, C3[A8 + 40 | 0] = B4, C3[A8 + 41 | 0] = B4 >>> 8, C3[A8 + 42 | 0] = B4 >>> 16, C3[A8 + 43 | 0] = B4 >>> 24), g6 && (a4 = (A8 = y4 + 17 | 0) >>> 0 < 17 ? a4 + 1 | 0 : a4, i4[g6 >> 2] = A8, i4[g6 + 4 >> 2] = a4), s3 = E4 + 384 | 0) : (rC(), Q4()), 0;
                    }, Vf: function(A8, I7, g6, B4, E4, a4, _4, c4, t4, r4) {
                      A8 |= 0, I7 |= 0, B4 |= 0, E4 |= 0, c4 |= 0, r4 |= 0;
                      var e6, y4 = 0, h4 = 0, D4 = 0, f4 = 0, p4 = 0, w4 = 0;
                      y4 = a4 |= 0, a4 = _4 |= 0, h4 = 0 | y4, e6 = t4 |= 0, s3 = _4 = s3 - 400 | 0, (g6 |= 0) && (i4[g6 >> 2] = 0, i4[g6 + 4 >> 2] = 0), B4 && (C3[0 | B4] = 255), w4 = -1;
                      A: {
                        I: {
                          if (!((t4 = h4 >>> 0 < 17) & !a4)) {
                            if (p4 = y4 = a4 - t4 | 0, !y4 & (t4 = h4 - 17 | 0) >>> 0 >= 4294967279 | y4) break I;
                            jg(D4 = _4 + 32 | 0, 64, 0, f4 = A8 + 32 | 0, A8), wC(y4 = _4 + 96 | 0, D4), XC(D4, 64), SC(y4, c4, e6, r4), SC(y4, 35216, 0 - e6 & 15, 0), i4[_4 + 88 >> 2] = 0, i4[_4 + 92 >> 2] = 0, i4[_4 + 80 >> 2] = 0, i4[_4 + 84 >> 2] = 0, i4[_4 + 72 >> 2] = 0, i4[_4 + 76 >> 2] = 0, i4[(c4 = _4 - -64 | 0) >> 2] = 0, i4[c4 + 4 >> 2] = 0, i4[_4 + 56 >> 2] = 0, i4[_4 + 60 >> 2] = 0, i4[_4 + 48 >> 2] = 0, i4[_4 + 52 >> 2] = 0, i4[_4 + 40 >> 2] = 0, i4[_4 + 44 >> 2] = 0, i4[_4 + 32 >> 2] = 0, i4[_4 + 36 >> 2] = 0, C3[_4 + 32 | 0] = o3[0 | E4], Cg(D4, D4, 64, 0, f4, 1, A8), c4 = o3[_4 + 32 | 0], C3[_4 + 32 | 0] = o3[0 | E4], SC(y4, D4, 64, 0), SC(y4, E4 = E4 + 1 | 0, t4, p4), SC(y4, 35216, h4 - 1 & 15, 0), i4[_4 + 24 >> 2] = e6, i4[_4 + 28 >> 2] = r4, SC(y4, r4 = _4 + 24 | 0, 8, 0), a4 = (h4 = h4 + 47 | 0) >>> 0 < 47 ? a4 + 1 | 0 : a4, i4[_4 + 24 >> 2] = h4, i4[_4 + 28 >> 2] = a4, SC(y4, r4, 8, 0), nC(y4, _4), XC(y4, 256), MI(_4, E4 + t4 | 0, 16) ? XC(_4, 16) : (Cg(I7, E4, t4, p4, f4, 2, A8), C3[A8 + 36 | 0] = o3[A8 + 36 | 0] ^ o3[0 | _4], C3[A8 + 37 | 0] = o3[A8 + 37 | 0] ^ o3[_4 + 1 | 0], C3[A8 + 38 | 0] = o3[A8 + 38 | 0] ^ o3[_4 + 2 | 0], C3[A8 + 39 | 0] = o3[A8 + 39 | 0] ^ o3[_4 + 3 | 0], C3[A8 + 40 | 0] = o3[A8 + 40 | 0] ^ o3[_4 + 4 | 0], C3[A8 + 41 | 0] = o3[A8 + 41 | 0] ^ o3[_4 + 5 | 0], C3[A8 + 42 | 0] = o3[A8 + 42 | 0] ^ o3[_4 + 6 | 0], C3[A8 + 43 | 0] = o3[A8 + 43 | 0] ^ o3[_4 + 7 | 0], XI(f4), (2 & c4 || GI(f4, 4)) && (I7 = o3[A8 + 28 | 0] | o3[A8 + 29 | 0] << 8 | o3[A8 + 30 | 0] << 16 | o3[A8 + 31 | 0] << 24, i4[_4 + 376 >> 2] = o3[A8 + 24 | 0] | o3[A8 + 25 | 0] << 8 | o3[A8 + 26 | 0] << 16 | o3[A8 + 27 | 0] << 24, i4[_4 + 380 >> 2] = I7, I7 = o3[A8 + 20 | 0] | o3[A8 + 21 | 0] << 8 | o3[A8 + 22 | 0] << 16 | o3[A8 + 23 | 0] << 24, i4[_4 + 368 >> 2] = o3[A8 + 16 | 0] | o3[A8 + 17 | 0] << 8 | o3[A8 + 18 | 0] << 16 | o3[A8 + 19 | 0] << 24, i4[_4 + 372 >> 2] = I7, I7 = o3[A8 + 4 | 0] | o3[A8 + 5 | 0] << 8 | o3[A8 + 6 | 0] << 16 | o3[A8 + 7 | 0] << 24, i4[_4 + 352 >> 2] = o3[0 | A8] | o3[A8 + 1 | 0] << 8 | o3[A8 + 2 | 0] << 16 | o3[A8 + 3 | 0] << 24, i4[_4 + 356 >> 2] = I7, I7 = o3[A8 + 12 | 0] | o3[A8 + 13 | 0] << 8 | o3[A8 + 14 | 0] << 16 | o3[A8 + 15 | 0] << 24, i4[_4 + 360 >> 2] = o3[A8 + 8 | 0] | o3[A8 + 9 | 0] << 8 | o3[A8 + 10 | 0] << 16 | o3[A8 + 11 | 0] << 24, i4[_4 + 364 >> 2] = I7, I7 = o3[A8 + 40 | 0] | o3[A8 + 41 | 0] << 8 | o3[A8 + 42 | 0] << 16 | o3[A8 + 43 | 0] << 24, i4[_4 + 384 >> 2] = o3[A8 + 36 | 0] | o3[A8 + 37 | 0] << 8 | o3[A8 + 38 | 0] << 16 | o3[A8 + 39 | 0] << 24, i4[_4 + 388 >> 2] = I7, xg(I7 = _4 + 352 | 0, I7, 40, 0, f4, A8), I7 = i4[_4 + 380 >> 2], E4 = i4[_4 + 376 >> 2], C3[A8 + 24 | 0] = E4, C3[A8 + 25 | 0] = E4 >>> 8, C3[A8 + 26 | 0] = E4 >>> 16, C3[A8 + 27 | 0] = E4 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = i4[_4 + 372 >> 2], E4 = i4[_4 + 368 >> 2], C3[A8 + 16 | 0] = E4, C3[A8 + 17 | 0] = E4 >>> 8, C3[A8 + 18 | 0] = E4 >>> 16, C3[A8 + 19 | 0] = E4 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = i4[_4 + 364 >> 2], E4 = i4[_4 + 360 >> 2], C3[A8 + 8 | 0] = E4, C3[A8 + 9 | 0] = E4 >>> 8, C3[A8 + 10 | 0] = E4 >>> 16, C3[A8 + 11 | 0] = E4 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = i4[_4 + 356 >> 2], E4 = i4[_4 + 352 >> 2], C3[0 | A8] = E4, C3[A8 + 1 | 0] = E4 >>> 8, C3[A8 + 2 | 0] = E4 >>> 16, C3[A8 + 3 | 0] = E4 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = i4[_4 + 384 >> 2], E4 = i4[_4 + 388 >> 2], C3[A8 + 32 | 0] = 1, C3[A8 + 33 | 0] = 0, C3[A8 + 34 | 0] = 0, C3[A8 + 35 | 0] = 0, C3[A8 + 36 | 0] = I7, C3[A8 + 37 | 0] = I7 >>> 8, C3[A8 + 38 | 0] = I7 >>> 16, C3[A8 + 39 | 0] = I7 >>> 24, C3[A8 + 40 | 0] = E4, C3[A8 + 41 | 0] = E4 >>> 8, C3[A8 + 42 | 0] = E4 >>> 16, C3[A8 + 43 | 0] = E4 >>> 24), g6 && (i4[g6 >> 2] = t4, i4[g6 + 4 >> 2] = p4), w4 = 0, B4 && (C3[0 | B4] = c4));
                          }
                          s3 = _4 + 400 | 0;
                          break A;
                        }
                        rC(), Q4();
                      }
                      return 0 | w4;
                    }, Wf: function() {
                      return 52;
                    }, Xf: function() {
                      return 17;
                    }, Yf: _B, Zf: BB, _f: function() {
                      return -18;
                    }, $f: hB, ag: yB, bg: tB, cg: rB, dg: eB, eg: CB, fg: function() {
                      return 1521;
                    }, gg: T, hg: zC, ig: eB, jg: CB, kg: T, lg: IB, mg: gB, ng: BB, og: BB, pg: gB, qg: QB, rg: function() {
                      return 1454;
                    }, sg: function(A8, I7, g6) {
                      return 0 | FA(A8 |= 0, I7 |= 0, g6 |= 0);
                    }, tg: function(A8, I7) {
                      return 0 | YA(A8 |= 0, I7 |= 0);
                    }, ug: LI, vg: bI, wg: vg, xg: Wg, yg: function(A8) {
                      return 0 | uC(A8 |= 0);
                    }, zg: QC, Ag: function(A8, I7, g6, C4) {
                      return 0 | ng(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0);
                    }, Bg: function(A8, I7, g6) {
                      return 0 | Kg(A8 |= 0, I7 |= 0, g6 |= 0);
                    }, Cg: IB, Dg: gB, Eg: BB, Fg: BB, Gg: gB, Hg: QB, Ig: function(A8, I7) {
                      A8 |= 0;
                      var g6, B4, Q5, i5, E4, a4, _4 = 0;
                      return g6 = o3[8 + (_4 = I7 |= 0) | 0] | o3[_4 + 9 | 0] << 8 | o3[_4 + 10 | 0] << 16 | o3[_4 + 11 | 0] << 24, B4 = o3[_4 + 12 | 0] | o3[_4 + 13 | 0] << 8 | o3[_4 + 14 | 0] << 16 | o3[_4 + 15 | 0] << 24, Q5 = o3[_4 + 16 | 0] | o3[_4 + 17 | 0] << 8 | o3[_4 + 18 | 0] << 16 | o3[_4 + 19 | 0] << 24, i5 = o3[_4 + 20 | 0] | o3[_4 + 21 | 0] << 8 | o3[_4 + 22 | 0] << 16 | o3[_4 + 23 | 0] << 24, E4 = o3[0 | _4] | o3[_4 + 1 | 0] << 8 | o3[_4 + 2 | 0] << 16 | o3[_4 + 3 | 0] << 24, I7 = o3[_4 + 4 | 0] | o3[_4 + 5 | 0] << 8 | o3[_4 + 6 | 0] << 16 | o3[_4 + 7 | 0] << 24, a4 = o3[_4 + 28 | 0] | o3[_4 + 29 | 0] << 8 | o3[_4 + 30 | 0] << 16 | o3[_4 + 31 | 0] << 24, _4 = o3[_4 + 24 | 0] | o3[_4 + 25 | 0] << 8 | o3[_4 + 26 | 0] << 16 | o3[_4 + 27 | 0] << 24, C3[A8 + 24 | 0] = _4, C3[A8 + 25 | 0] = _4 >>> 8, C3[A8 + 26 | 0] = _4 >>> 16, C3[A8 + 27 | 0] = _4 >>> 24, C3[A8 + 28 | 0] = a4, C3[A8 + 29 | 0] = a4 >>> 8, C3[A8 + 30 | 0] = a4 >>> 16, C3[A8 + 31 | 0] = a4 >>> 24, C3[A8 + 16 | 0] = Q5, C3[A8 + 17 | 0] = Q5 >>> 8, C3[A8 + 18 | 0] = Q5 >>> 16, C3[A8 + 19 | 0] = Q5 >>> 24, C3[A8 + 20 | 0] = i5, C3[A8 + 21 | 0] = i5 >>> 8, C3[A8 + 22 | 0] = i5 >>> 16, C3[A8 + 23 | 0] = i5 >>> 24, C3[A8 + 8 | 0] = g6, C3[A8 + 9 | 0] = g6 >>> 8, C3[A8 + 10 | 0] = g6 >>> 16, C3[A8 + 11 | 0] = g6 >>> 24, C3[A8 + 12 | 0] = B4, C3[A8 + 13 | 0] = B4 >>> 8, C3[A8 + 14 | 0] = B4 >>> 16, C3[A8 + 15 | 0] = B4 >>> 24, C3[0 | A8] = E4, C3[A8 + 1 | 0] = E4 >>> 8, C3[A8 + 2 | 0] = E4 >>> 16, C3[A8 + 3 | 0] = E4 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, 0;
                    }, Jg: function(A8, I7) {
                      A8 |= 0;
                      var g6, B4, Q5, i5, E4, a4, _4 = 0;
                      return g6 = o3[32 + (_4 = I7 |= 0) | 0] | o3[_4 + 33 | 0] << 8 | o3[_4 + 34 | 0] << 16 | o3[_4 + 35 | 0] << 24, B4 = o3[_4 + 36 | 0] | o3[_4 + 37 | 0] << 8 | o3[_4 + 38 | 0] << 16 | o3[_4 + 39 | 0] << 24, Q5 = o3[_4 + 40 | 0] | o3[_4 + 41 | 0] << 8 | o3[_4 + 42 | 0] << 16 | o3[_4 + 43 | 0] << 24, i5 = o3[_4 + 44 | 0] | o3[_4 + 45 | 0] << 8 | o3[_4 + 46 | 0] << 16 | o3[_4 + 47 | 0] << 24, E4 = o3[_4 + 48 | 0] | o3[_4 + 49 | 0] << 8 | o3[_4 + 50 | 0] << 16 | o3[_4 + 51 | 0] << 24, I7 = o3[_4 + 52 | 0] | o3[_4 + 53 | 0] << 8 | o3[_4 + 54 | 0] << 16 | o3[_4 + 55 | 0] << 24, a4 = o3[_4 + 60 | 0] | o3[_4 + 61 | 0] << 8 | o3[_4 + 62 | 0] << 16 | o3[_4 + 63 | 0] << 24, _4 = o3[_4 + 56 | 0] | o3[_4 + 57 | 0] << 8 | o3[_4 + 58 | 0] << 16 | o3[_4 + 59 | 0] << 24, C3[A8 + 24 | 0] = _4, C3[A8 + 25 | 0] = _4 >>> 8, C3[A8 + 26 | 0] = _4 >>> 16, C3[A8 + 27 | 0] = _4 >>> 24, C3[A8 + 28 | 0] = a4, C3[A8 + 29 | 0] = a4 >>> 8, C3[A8 + 30 | 0] = a4 >>> 16, C3[A8 + 31 | 0] = a4 >>> 24, C3[A8 + 16 | 0] = E4, C3[A8 + 17 | 0] = E4 >>> 8, C3[A8 + 18 | 0] = E4 >>> 16, C3[A8 + 19 | 0] = E4 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, C3[A8 + 8 | 0] = Q5, C3[A8 + 9 | 0] = Q5 >>> 8, C3[A8 + 10 | 0] = Q5 >>> 16, C3[A8 + 11 | 0] = Q5 >>> 24, C3[A8 + 12 | 0] = i5, C3[A8 + 13 | 0] = i5 >>> 8, C3[A8 + 14 | 0] = i5 >>> 16, C3[A8 + 15 | 0] = i5 >>> 24, C3[0 | A8] = g6, C3[A8 + 1 | 0] = g6 >>> 8, C3[A8 + 2 | 0] = g6 >>> 16, C3[A8 + 3 | 0] = g6 >>> 24, C3[A8 + 4 | 0] = B4, C3[A8 + 5 | 0] = B4 >>> 8, C3[A8 + 6 | 0] = B4 >>> 16, C3[A8 + 7 | 0] = B4 >>> 24, 0;
                    }, Kg: uC, Lg: QC, Mg: ng, Ng: Kg, Og: FA, Pg: YA, Qg: function(A8, I7) {
                      A8 |= 0;
                      var g6, C4 = 0, B4 = 0, Q5 = 0, o4 = 0, E4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0, F4 = 0, S4 = 0, N4 = 0, G4 = 0, M4 = 0, K4 = 0, U4 = 0, b5 = 0, H4 = 0, Y4 = 0, J4 = 0, d5 = 0, m4 = 0, l4 = 0, u4 = 0, x4 = 0, v4 = 0, R4 = 0, L4 = 0, P7 = 0, q3 = 0, z2 = 0, j2 = 0, X2 = 0, O2 = 0, W2 = 0, V2 = 0, Z2 = 0, T2 = 0, $2 = 0, AA2 = 0, IA2 = 0, CA2 = 0, BA2 = 0, QA2 = 0, iA2 = 0, oA2 = 0, EA2 = 0, aA2 = 0, _A2 = 0, cA2 = 0, tA2 = 0, rA2 = 0, eA2 = 0, yA2 = 0, sA2 = 0, hA2 = 0, DA2 = 0, fA2 = 0, pA2 = 0, wA2 = 0, nA2 = 0, kA2 = 0, FA2 = 0, SA2 = 0, NA2 = 0, GA2 = 0, MA2 = 0, KA2 = 0, UA2 = 0, bA2 = 0, HA2 = 0, YA2 = 0;
                      return s3 = g6 = s3 - 256 | 0, SA2 = -1, KI(I7 |= 0) || qA(C4 = g6 + 96 | 0, I7) || gA(C4) && (SA2 = 0, u4 = i4[g6 + 172 >> 2], i4[g6 + 36 >> 2] = 0 - u4, n5 = i4[g6 + 168 >> 2], i4[g6 + 32 >> 2] = 0 - n5, x4 = i4[g6 + 164 >> 2], i4[g6 + 28 >> 2] = 0 - x4, k4 = i4[g6 + 160 >> 2], i4[g6 + 24 >> 2] = 0 - k4, v4 = i4[g6 + 156 >> 2], i4[g6 + 20 >> 2] = 0 - v4, F4 = i4[g6 + 152 >> 2], i4[g6 + 16 >> 2] = 0 - F4, R4 = i4[g6 + 148 >> 2], i4[g6 + 12 >> 2] = 0 - R4, S4 = i4[g6 + 144 >> 2], i4[g6 + 8 >> 2] = 0 - S4, L4 = i4[g6 + 140 >> 2], i4[g6 + 4 >> 2] = 0 - L4, Q5 = i4[g6 + 136 >> 2], i4[g6 >> 2] = 1 - Q5, LA(g6, g6), I7 = Ig(N4 = i4[g6 + 4 >> 2], d5 = N4 >> 31, G4 = v4 << 1, IA2 = G4 >> 31), C4 = f3, B4 = Ig(p4 = i4[g6 >> 2], M4 = p4 >> 31, k4, K4 = k4 >> 31), C4 = f3 + C4 | 0, C4 = (I7 = B4 + I7 | 0) >>> 0 < B4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (o4 = Ig(U4 = i4[g6 + 8 >> 2], P7 = U4 >> 31, F4, b5 = F4 >> 31)) + I7 | 0, I7 = f3 + C4 | 0, I7 = B4 >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = Ig(m4 = i4[g6 + 12 >> 2], j2 = m4 >> 31, W2 = R4 << 1, CA2 = W2 >> 31), I7 = f3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(q3 = i4[g6 + 16 >> 2], V2 = q3 >> 31, S4, H4 = S4 >> 31), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, fA2 = o4 = i4[g6 + 20 >> 2], h4 = Ig(o4, BA2 = o4 >> 31, Z2 = L4 << 1, QA2 = Z2 >> 31), B4 = f3 + I7 | 0, B4 = (C4 = h4 + C4 | 0) >>> 0 < h4 >>> 0 ? B4 + 1 | 0 : B4, pA2 = r4 = i4[g6 + 24 >> 2], I7 = (Q5 = Ig(r4, sA2 = r4 >> 31, h4 = Q5 + 1 | 0, Y4 = h4 >> 31)) + C4 | 0, C4 = f3 + B4 | 0, C4 = I7 >>> 0 < Q5 >>> 0 ? C4 + 1 | 0 : C4, iA2 = i4[g6 + 28 >> 2], B4 = (Q5 = Ig(w4 = a3(iA2, 19), X2 = w4 >> 31, T2 = u4 << 1, oA2 = T2 >> 31)) + I7 | 0, I7 = f3 + C4 | 0, I7 = B4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, NA2 = i4[g6 + 32 >> 2], B4 = Ig(_4 = a3(NA2, 19), z2 = _4 >> 31, n5, J4 = n5 >> 31), I7 = f3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, GA2 = i4[g6 + 36 >> 2], B4 = Ig(y4 = a3(GA2, 19), l4 = y4 >> 31, $2 = x4 << 1, EA2 = $2 >> 31), I7 = f3 + I7 | 0, c4 = C4 = B4 + C4 | 0, Q5 = C4 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, I7 = Ig(F4, b5, N4, d5), C4 = f3, E4 = Ig(p4, M4, v4, aA2 = v4 >> 31), B4 = f3 + C4 | 0, B4 = (I7 = E4 + I7 | 0) >>> 0 < E4 >>> 0 ? B4 + 1 | 0 : B4, E4 = Ig(U4, P7, R4, _A2 = R4 >> 31), C4 = f3 + B4 | 0, C4 = (I7 = E4 + I7 | 0) >>> 0 < E4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (E4 = Ig(S4, H4, m4, j2)) + I7 | 0, I7 = f3 + C4 | 0, I7 = B4 >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = Ig(q3, V2, L4, cA2 = L4 >> 31), I7 = f3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(h4, Y4, o4, BA2), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, E4 = Ig(r4 = a3(r4, 19), AA2 = r4 >> 31, u4, tA2 = u4 >> 31), B4 = f3 + I7 | 0, B4 = (C4 = E4 + C4 | 0) >>> 0 < E4 >>> 0 ? B4 + 1 | 0 : B4, I7 = (E4 = Ig(n5, J4, w4, X2)) + C4 | 0, C4 = f3 + B4 | 0, C4 = I7 >>> 0 < E4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (E4 = Ig(_4, z2, x4, rA2 = x4 >> 31)) + I7 | 0, I7 = f3 + C4 | 0, I7 = B4 >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = Ig(y4, l4, k4, K4), I7 = f3 + I7 | 0, wA2 = C4 = C4 + B4 | 0, O2 = C4 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, I7 = Ig(N4, d5, W2, CA2), B4 = f3, C4 = (E4 = Ig(p4, M4, F4, b5)) + I7 | 0, I7 = f3 + B4 | 0, I7 = C4 >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, E4 = Ig(S4, H4, U4, P7), B4 = f3 + I7 | 0, B4 = (C4 = E4 + C4 | 0) >>> 0 < E4 >>> 0 ? B4 + 1 | 0 : B4, I7 = (E4 = Ig(m4, j2, Z2, QA2)) + C4 | 0, C4 = f3 + B4 | 0, C4 = I7 >>> 0 < E4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (E4 = Ig(h4, Y4, q3, V2)) + I7 | 0, I7 = f3 + C4 | 0, I7 = B4 >>> 0 < E4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = Ig(E4 = a3(o4, 19), eA2 = E4 >> 31, T2, oA2), I7 = f3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(n5, J4, r4, AA2), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, o4 = Ig(w4, X2, $2, EA2), B4 = f3 + I7 | 0, B4 = (C4 = o4 + C4 | 0) >>> 0 < o4 >>> 0 ? B4 + 1 | 0 : B4, I7 = (o4 = Ig(_4, z2, k4, K4)) + C4 | 0, C4 = f3 + B4 | 0, C4 = I7 >>> 0 < o4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (o4 = Ig(y4, l4, G4, IA2)) + I7 | 0, I7 = f3 + C4 | 0, MA2 = B4, KA2 = I7 = B4 >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7, UA2 = B4 = B4 + 33554432 | 0, bA2 = I7 = B4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, B4 = (67108863 & I7) << 6 | B4 >>> 26, I7 = (I7 >> 26) + O2 | 0, wA2 = o4 = B4 + wA2 | 0, I7 = B4 >>> 0 > o4 >>> 0 ? I7 + 1 | 0 : I7, HA2 = o4 = o4 + 16777216 | 0, I7 = (C4 = (B4 = o4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7) >> 25) + Q5 | 0, I7 = (B4 = (o4 = (33554431 & B4) << 7 | o4 >>> 25) + c4 | 0) >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7, D4 = C4 = B4 + 33554432 | 0, o4 = I7 = C4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, i4[g6 + 72 >> 2] = B4 - (-67108864 & C4), I7 = Ig(N4, d5, Z2, QA2), C4 = f3, Q5 = Ig(p4, M4, S4, H4), B4 = f3 + C4 | 0, B4 = (I7 = Q5 + I7 | 0) >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, C4 = (Q5 = Ig(h4, Y4, U4, P7)) + I7 | 0, I7 = f3 + B4 | 0, I7 = C4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(Q5 = a3(m4, 19), yA2 = Q5 >> 31, T2, oA2), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (c4 = Ig(O2 = a3(q3, 19), hA2 = O2 >> 31, n5, J4)) + C4 | 0, C4 = f3 + I7 | 0, C4 = B4 >>> 0 < c4 >>> 0 ? C4 + 1 | 0 : C4, c4 = Ig($2, EA2, E4, eA2), I7 = f3 + C4 | 0, I7 = (B4 = c4 + B4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, C4 = (c4 = Ig(k4, K4, r4, AA2)) + B4 | 0, B4 = f3 + I7 | 0, B4 = C4 >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, c4 = Ig(w4, X2, G4, IA2), I7 = f3 + B4 | 0, I7 = (C4 = c4 + C4 | 0) >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(_4, z2, F4, b5), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (c4 = Ig(y4, l4, W2, CA2)) + C4 | 0, C4 = f3 + I7 | 0, e6 = B4, nA2 = B4 >>> 0 < c4 >>> 0 ? C4 + 1 | 0 : C4, I7 = Ig(h4, Y4, N4, d5), C4 = f3, B4 = (c4 = Ig(p4, M4, L4, cA2)) + I7 | 0, I7 = f3 + C4 | 0, I7 = B4 >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7, c4 = C4 = a3(U4, 19), C4 = (t4 = Ig(C4, DA2 = C4 >> 31, u4, tA2)) + B4 | 0, B4 = f3 + I7 | 0, B4 = C4 >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4, t4 = Ig(n5, J4, Q5, yA2), I7 = f3 + B4 | 0, I7 = (C4 = t4 + C4 | 0) >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(O2, hA2, x4, rA2), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (t4 = Ig(k4, K4, E4, eA2)) + C4 | 0, C4 = f3 + I7 | 0, C4 = B4 >>> 0 < t4 >>> 0 ? C4 + 1 | 0 : C4, t4 = Ig(r4, AA2, v4, aA2), I7 = f3 + C4 | 0, I7 = (B4 = t4 + B4 | 0) >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, C4 = (t4 = Ig(F4, b5, w4, X2)) + B4 | 0, B4 = f3 + I7 | 0, B4 = C4 >>> 0 < t4 >>> 0 ? B4 + 1 | 0 : B4, t4 = Ig(_4, z2, R4, _A2), I7 = f3 + B4 | 0, I7 = (C4 = t4 + C4 | 0) >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(y4, l4, S4, H4), I7 = f3 + I7 | 0, kA2 = C4 = B4 + C4 | 0, t4 = C4 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, I7 = Ig(I7 = a3(N4, 19), I7 >> 31, T2, oA2), C4 = f3, B4 = Ig(p4, M4, h4, Y4), C4 = f3 + C4 | 0, C4 = (I7 = B4 + I7 | 0) >>> 0 < B4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (c4 = Ig(n5, J4, c4, DA2)) + I7 | 0, I7 = f3 + C4 | 0, C4 = (Q5 = Ig(Q5, yA2, $2, EA2)) + B4 | 0, B4 = f3 + (B4 >>> 0 < c4 >>> 0 ? I7 + 1 | 0 : I7) | 0, B4 = C4 >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, Q5 = Ig(k4, K4, O2, hA2), I7 = f3 + B4 | 0, I7 = (C4 = Q5 + C4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(G4, IA2, E4, eA2), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (Q5 = Ig(F4, b5, r4, AA2)) + C4 | 0, C4 = f3 + I7 | 0, C4 = B4 >>> 0 < Q5 >>> 0 ? C4 + 1 | 0 : C4, Q5 = Ig(w4, X2, W2, CA2), I7 = f3 + C4 | 0, I7 = (B4 = Q5 + B4 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, C4 = (Q5 = Ig(_4, z2, S4, H4)) + B4 | 0, B4 = f3 + I7 | 0, B4 = C4 >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, Q5 = Ig(y4, l4, Z2, QA2), I7 = f3 + B4 | 0, c4 = C4 = Q5 + C4 | 0, yA2 = I7 = C4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, DA2 = C4 = C4 + 33554432 | 0, YA2 = I7 = C4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, B4 = I7 >> 26, I7 = (67108863 & I7) << 6 | C4 >>> 26, C4 = B4 + t4 | 0, t4 = Q5 = I7 + kA2 | 0, I7 = C4 = I7 >>> 0 > Q5 >>> 0 ? C4 + 1 | 0 : C4, kA2 = Q5 = Q5 + 16777216 | 0, Q5 = (33554431 & (I7 = Q5 >>> 0 < 16777216 ? I7 + 1 | 0 : I7)) << 7 | Q5 >>> 25, I7 = (I7 >> 25) + nA2 | 0, I7 = (C4 = Q5 + e6 | 0) >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, B4 = C4, nA2 = C4 = C4 + 33554432 | 0, Q5 = I7 = C4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, i4[g6 + 56 >> 2] = B4 - (-67108864 & C4), I7 = Ig(k4, K4, N4, d5), B4 = f3, C4 = (e6 = Ig(p4, M4, x4, rA2)) + I7 | 0, I7 = f3 + B4 | 0, I7 = C4 >>> 0 < e6 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(U4, P7, v4, aA2), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(F4, b5, m4, j2), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, e6 = Ig(q3, V2, R4, _A2), B4 = f3 + I7 | 0, B4 = (C4 = e6 + C4 | 0) >>> 0 < e6 >>> 0 ? B4 + 1 | 0 : B4, I7 = (e6 = Ig(S4, H4, fA2, BA2)) + C4 | 0, C4 = f3 + B4 | 0, C4 = I7 >>> 0 < e6 >>> 0 ? C4 + 1 | 0 : C4, B4 = (e6 = Ig(L4, cA2, pA2, sA2)) + I7 | 0, I7 = f3 + C4 | 0, I7 = B4 >>> 0 < e6 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = Ig(iA2, FA2 = iA2 >> 31, h4, Y4), I7 = f3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(_4, z2, u4, tA2), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, e6 = (B4 = C4) + (C4 = Ig(y4, l4, n5, J4)) | 0, B4 = f3 + I7 | 0, C4 = (I7 = o4 >> 26) + (C4 = C4 >>> 0 > e6 >>> 0 ? B4 + 1 | 0 : B4) | 0, D4 = B4 = (o4 = (67108863 & o4) << 6 | D4 >>> 26) + e6 | 0, I7 = C4 = B4 >>> 0 < o4 >>> 0 ? C4 + 1 | 0 : C4, e6 = B4 = B4 + 16777216 | 0, o4 = I7 = B4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7, i4[g6 + 76 >> 2] = D4 - (-33554432 & B4), I7 = Ig(S4, H4, N4, d5), C4 = f3, D4 = Ig(p4, M4, R4, _A2), B4 = f3 + C4 | 0, B4 = (I7 = D4 + I7 | 0) >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4, D4 = Ig(U4, P7, L4, cA2), C4 = f3 + B4 | 0, C4 = (I7 = D4 + I7 | 0) >>> 0 < D4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (D4 = Ig(h4, Y4, m4, j2)) + I7 | 0, I7 = f3 + C4 | 0, I7 = B4 >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = Ig(O2, hA2, u4, tA2), I7 = f3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(n5, J4, E4, eA2), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, C4 = (r4 = Ig(r4, AA2, x4, rA2)) + C4 | 0, B4 = f3 + I7 | 0, I7 = (w4 = Ig(k4, K4, w4, X2)) + C4 | 0, C4 = f3 + (C4 >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = (_4 = Ig(_4, z2, v4, aA2)) + I7 | 0, I7 = f3 + (I7 >>> 0 < w4 >>> 0 ? C4 + 1 | 0 : C4) | 0, I7 = B4 >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = Ig(y4, l4, F4, b5), I7 = f3 + I7 | 0, D4 = C4 = C4 + B4 | 0, I7 = (I7 = C4 >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7) + (C4 = Q5 >> 26) | 0, _4 = Q5 = D4 + (B4 = (67108863 & Q5) << 6 | nA2 >>> 26) | 0, I7 = B4 >>> 0 > Q5 >>> 0 ? I7 + 1 | 0 : I7, w4 = C4 = Q5 + 16777216 | 0, Q5 = B4 = C4 >>> 0 < 16777216 ? I7 + 1 | 0 : I7, i4[g6 + 60 >> 2] = _4 - (-33554432 & C4), I7 = Ig(N4, d5, $2, EA2), B4 = f3, C4 = (_4 = Ig(p4, M4, n5, J4)) + I7 | 0, I7 = f3 + B4 | 0, I7 = C4 >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(k4, K4, U4, P7), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, _4 = Ig(m4, j2, G4, IA2), B4 = f3 + I7 | 0, B4 = (C4 = _4 + C4 | 0) >>> 0 < _4 >>> 0 ? B4 + 1 | 0 : B4, I7 = (_4 = Ig(F4, b5, q3, V2)) + C4 | 0, C4 = f3 + B4 | 0, C4 = I7 >>> 0 < _4 >>> 0 ? C4 + 1 | 0 : C4, B4 = (_4 = Ig(W2, CA2, fA2, BA2)) + I7 | 0, I7 = f3 + C4 | 0, I7 = B4 >>> 0 < _4 >>> 0 ? I7 + 1 | 0 : I7, C4 = B4, B4 = Ig(S4, H4, pA2, sA2), I7 = f3 + I7 | 0, I7 = (C4 = C4 + B4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = C4, C4 = Ig(iA2, FA2, Z2, QA2), I7 = f3 + I7 | 0, I7 = C4 >>> 0 > (B4 = B4 + C4 | 0) >>> 0 ? I7 + 1 | 0 : I7, _4 = C4 = NA2, C4 = (G4 = Ig(C4, r4 = C4 >> 31, h4, Y4)) + B4 | 0, B4 = f3 + I7 | 0, I7 = (y4 = Ig(y4, l4, T2, oA2)) + C4 | 0, C4 = f3 + (C4 >>> 0 < G4 >>> 0 ? B4 + 1 | 0 : B4) | 0, B4 = I7 >>> 0 < y4 >>> 0 ? C4 + 1 | 0 : C4, C4 = I7, I7 = (I7 = o4 >> 25) + B4 | 0, I7 = (C4 = C4 + (o4 = (33554431 & o4) << 7 | e6 >>> 25) | 0) >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7, B4 = C4, y4 = C4 = C4 + 33554432 | 0, o4 = I7 = C4 >>> 0 < 33554432 ? I7 + 1 | 0 : I7, i4[g6 + 80 >> 2] = B4 - (-67108864 & C4), C4 = Q5 >> 25, B4 = (Q5 = (33554431 & Q5) << 7 | w4 >>> 25) + (MA2 - (I7 = -67108864 & UA2) | 0) | 0, I7 = C4 + (KA2 - ((I7 >>> 0 > MA2 >>> 0) + bA2 | 0) | 0) | 0, I7 = B4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, I7 = ((67108863 & (I7 = (C4 = B4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | C4 >>> 26) + (G4 = wA2 - (-33554432 & HA2) | 0) | 0, i4[g6 + 68 >> 2] = I7, i4[g6 + 64 >> 2] = B4 - (-67108864 & C4), I7 = Ig(n5, J4, N4, d5), B4 = f3, C4 = (Q5 = Ig(p4, M4, u4, tA2)) + I7 | 0, I7 = f3 + B4 | 0, I7 = C4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, B4 = (Q5 = Ig(U4, P7, x4, rA2)) + C4 | 0, C4 = f3 + I7 | 0, C4 = B4 >>> 0 < Q5 >>> 0 ? C4 + 1 | 0 : C4, I7 = (Q5 = Ig(k4, K4, m4, j2)) + B4 | 0, B4 = f3 + C4 | 0, B4 = I7 >>> 0 < Q5 >>> 0 ? B4 + 1 | 0 : B4, C4 = (Q5 = Ig(q3, V2, v4, aA2)) + I7 | 0, I7 = f3 + B4 | 0, I7 = C4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(F4, b5, fA2, BA2), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = Ig(R4, _A2, pA2, sA2), I7 = f3 + I7 | 0, I7 = (C4 = B4 + C4 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, B4 = (Q5 = Ig(S4, H4, iA2, FA2)) + C4 | 0, C4 = f3 + I7 | 0, C4 = B4 >>> 0 < Q5 >>> 0 ? C4 + 1 | 0 : C4, Q5 = (I7 = Ig(_4, r4, L4, cA2)) + B4 | 0, B4 = f3 + C4 | 0, B4 = I7 >>> 0 > Q5 >>> 0 ? B4 + 1 | 0 : B4, C4 = Q5, Q5 = Ig(I7 = GA2, I7 >> 31, h4, Y4), I7 = f3 + B4 | 0, B4 = C4 = C4 + Q5 | 0, I7 = (I7 = C4 >>> 0 < Q5 >>> 0 ? I7 + 1 | 0 : I7) + (C4 = o4 >> 26) | 0, I7 = (B4 = B4 + (o4 = (67108863 & o4) << 6 | y4 >>> 26) | 0) >>> 0 < o4 >>> 0 ? I7 + 1 | 0 : I7, I7 = (C4 = B4 + 16777216 | 0) >>> 0 < 16777216 ? I7 + 1 | 0 : I7, i4[g6 + 84 >> 2] = B4 - (-33554432 & C4), o4 = t4 - (-33554432 & kA2) | 0, Q5 = c4 - (B4 = -67108864 & DA2) | 0, p4 = yA2 - ((B4 >>> 0 > c4 >>> 0) + YA2 | 0) | 0, I7 = Ig((33554431 & (B4 = I7)) << 7 | C4 >>> 25, I7 >>= 25, 19, 0), C4 = f3 + p4 | 0, I7 = I7 >>> 0 > (B4 = I7 + Q5 | 0) >>> 0 ? C4 + 1 | 0 : C4, I7 = ((67108863 & (I7 = (C4 = B4 + 33554432 | 0) >>> 0 < 33554432 ? I7 + 1 | 0 : I7)) << 6 | C4 >>> 26) + o4 | 0, i4[g6 + 52 >> 2] = I7, i4[g6 + 48 >> 2] = B4 - (-67108864 & C4), QI(A8, g6 + 48 | 0)), s3 = g6 + 256 | 0, 0 | SA2;
                    }, Rg: function(A8, I7) {
                      A8 |= 0;
                      var g6, B4 = 0;
                      return s3 = g6 = s3 + -64 | 0, FI(g6, I7 |= 0, 32, 0), C3[0 | g6] = 248 & o3[0 | g6], C3[g6 + 31 | 0] = 63 & o3[g6 + 31 | 0] | 64, I7 = i4[g6 + 20 >> 2], B4 = i4[g6 + 16 >> 2], C3[A8 + 16 | 0] = B4, C3[A8 + 17 | 0] = B4 >>> 8, C3[A8 + 18 | 0] = B4 >>> 16, C3[A8 + 19 | 0] = B4 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = i4[g6 + 12 >> 2], B4 = i4[g6 + 8 >> 2], C3[A8 + 8 | 0] = B4, C3[A8 + 9 | 0] = B4 >>> 8, C3[A8 + 10 | 0] = B4 >>> 16, C3[A8 + 11 | 0] = B4 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = i4[g6 + 4 >> 2], B4 = i4[g6 >> 2], C3[0 | A8] = B4, C3[A8 + 1 | 0] = B4 >>> 8, C3[A8 + 2 | 0] = B4 >>> 16, C3[A8 + 3 | 0] = B4 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, I7 = i4[g6 + 28 >> 2], B4 = i4[g6 + 24 >> 2], C3[A8 + 24 | 0] = B4, C3[A8 + 25 | 0] = B4 >>> 8, C3[A8 + 26 | 0] = B4 >>> 16, C3[A8 + 27 | 0] = B4 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, XC(g6, 64), s3 = g6 - -64 | 0, 0;
                    }, Sg: Wg, Tg: bI, Ug: vg, Vg: LI, Wg: BB, Xg: eB, Yg: cB, Zg: BB, _g: aB, $g: cB, ah: function(A8, I7, g6, C4, B4) {
                      return 0 | Xg(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0);
                    }, bh: function(A8, I7, g6, C4, B4, Q5, i5, o4) {
                      return 0 | mg(A8 |= 0, I7 |= 0, (A8 = 0) | (g6 |= 0), C4 |= 0, B4 |= 0, A8 | (Q5 |= 0), i5 |= 0, o4 |= 0);
                    }, ch: function(A8, I7, g6, C4, B4, Q5) {
                      return 0 | ug(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0);
                    }, dh: function(A8, I7, g6, C4, B4) {
                      return 0 | jg(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0);
                    }, eh: function(A8, I7, g6, C4, B4, Q5, i5) {
                      return 0 | Cg(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0);
                    }, fh: function(A8, I7, g6, C4, B4, Q5) {
                      return 0 | xg(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0);
                    }, gh: PC, hh: PC, ih: BB, jh: _B, kh: cB, lh: function() {
                      return 1538;
                    }, mh: Tg, nh: zg, oh: PC, ph: BB, qh: eB, rh: cB, sh: function(A8, I7, g6, C4, B4) {
                      return 0 | DC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0);
                    }, th: function(A8, I7, g6, C4, B4, Q5, i5, o4) {
                      return 0 | oC(A8 |= 0, I7 |= 0, (A8 = 0) | (g6 |= 0), C4 |= 0, B4 |= 0, A8 | (Q5 |= 0), i5 |= 0, o4 |= 0);
                    }, uh: function(A8, I7, g6, C4, B4, Q5) {
                      return 0 | aC(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0);
                    }, vh: PC, wh: Tg, xh: function(A8, I7, g6, C4, B4, Q5, i5, o4) {
                      var E4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, Q5 |= 0, i5 |= 0, s3 = E4 = s3 - 32 | 0, wA(E4, B4 |= 0, o4 |= 0, 0), A8 = oC(o4 = A8, I7, (A8 = 0) | g6, C4, B4 + 16 | 0, A8 | Q5, i5, E4), XC(E4, 32), s3 = E4 + 32 | 0, 0 | A8;
                    }, yh: zg, zh: BB, Ah: _B, Bh: cB, Ch: PC, Dh: CB, Eh: BB, Fh: gB, Gh: oI, Hh: NC, Ih: GC, Jh: function() {
                      return 1089;
                    }, Kh: function() {
                      var A8, I7;
                      return s3 = A8 = s3 - 16 | 0, C3[A8 + 15 | 0] = 0, I7 = 0 | t3(36800, A8 + 15 | 0, 0), s3 = A8 + 16 | 0, 0 | I7;
                    }, Lh: $g, Mh: function(A8) {
                      var I7, g6 = 0, B4 = 0;
                      if (s3 = I7 = s3 - 16 | 0, (A8 |= 0) >>> 0 >= 2) {
                        for (g6 = (0 - A8 >>> 0) % (A8 >>> 0) | 0; C3[I7 + 15 | 0] = 0, g6 >>> 0 > (B4 = 0 | t3(36800, I7 + 15 | 0, 0)) >>> 0; ) ;
                        g6 = (B4 >>> 0) % (A8 >>> 0) | 0;
                      }
                      return s3 = I7 + 16 | 0, 0 | g6;
                    }, Nh: ag, Oh: function(A8, I7, g6) {
                      jg(A8 |= 0, I7 |= 0, 0, 34336, g6 |= 0);
                    }, Ph: BB, Qh: function() {
                      var A8 = 0, I7 = 0;
                      return (A8 = i4[9539]) && (A8 = i4[A8 + 20 >> 2]) && (I7 = 0 | pB[0 | A8]()), 0 | I7;
                    }, Rh: function(A8, I7, g6) {
                      A8 |= 0, I7 |= 0;
                      var B4, i5 = 0, o4 = 0, E4 = 0;
                      if (s3 = B4 = s3 - 16 | 0, g6 |= 0) r3(1346, 1192, 198, 1092), Q4();
                      else {
                        if (I7 | g6) for (; C3[B4 + 15 | 0] = 0, o4 = A8 + i5 | 0, E4 = 0 | t3(36800, B4 + 15 | 0, 0), C3[0 | o4] = E4, (0 | I7) != (0 | (i5 = i5 + 1 | 0)); ) ;
                        s3 = B4 + 16 | 0;
                      }
                    }, Sh: function(A8, I7, g6, B4) {
                      A8 |= 0, g6 |= 0;
                      var i5 = 0, E4 = 0, a4 = 0;
                      if (!((B4 |= 0) >>> 0 > 2147483646 | B4 << 1 >>> 0 >= (I7 |= 0) >>> 0)) {
                        if (I7 = 0, B4) {
                          for (; i5 = (I7 << 1) + A8 | 0, E4 = 15 & (a4 = o3[I7 + g6 | 0]), C3[i5 + 1 | 0] = 22272 + ((E4 << 8) + (E4 + 65526 & 55552) | 0) >>> 8, E4 = i5, i5 = a4 >>> 4 | 0, C3[0 | E4] = 87 + ((i5 + 65526 >>> 8 & 217) + i5 | 0), (0 | B4) != (0 | (I7 = I7 + 1 | 0)); ) ;
                          I7 = B4 << 1;
                        } else I7 = 0;
                        return C3[I7 + A8 | 0] = 0, 0 | A8;
                      }
                      rC(), Q4();
                    }, Th: function(A8, I7, g6, B4, Q5, E4, a4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, Q5 |= 0, E4 |= 0, a4 |= 0;
                      var _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0;
                      A: {
                        I: {
                          g: {
                            C: {
                              B: {
                                Q: {
                                  i: {
                                    o: {
                                      E: {
                                        if (B4 |= 0) {
                                          if (Q5) break E;
                                          for (c4 = 1, Q5 = 0; ; ) {
                                            if (!(255 & ((s4 = (65526 + (t4 = (223 & (e6 = o3[g6 + _4 | 0])) - 55 & 255) ^ t4 + 65520) >>> 8 | 0) | (h4 = 65526 + (e6 ^= 48) >>> 8 | 0)))) break i;
                                            if (I7 >>> 0 <= y4 >>> 0) break o;
                                            if (t4 = t4 & s4 | e6 & h4, 255 & r4 ? (C3[A8 + y4 | 0] = Q5 | t4, y4 = y4 + 1 | 0) : Q5 = t4 << 4, r4 = ~r4, (0 | (_4 = _4 + 1 | 0)) == (0 | B4)) break;
                                          }
                                          _4 = B4;
                                          break i;
                                        }
                                        if (A8 = 0, !a4) break A;
                                        break g;
                                      }
                                      for (; ; ) {
                                        E: {
                                          a: {
                                            _: {
                                              c: {
                                                t: {
                                                  if (!(255 & ((e6 = (65526 + (c4 = (223 & (t4 = o3[g6 + _4 | 0])) - 55 & 255) ^ c4 + 65520) >>> 8 | 0) | (h4 = 65526 + (s4 = 48 ^ t4) >>> 8 | 0)))) {
                                                    if (255 & r4) break Q;
                                                    if (c4 = 0, !kI(Q5, t4)) break C;
                                                    if ((_4 = r4 = _4 + 1 | 0) >>> 0 < B4 >>> 0) break t;
                                                    break C;
                                                  }
                                                  if (I7 >>> 0 <= y4 >>> 0) break o;
                                                  if (c4 = c4 & e6 | s4 & h4, !(255 & r4)) break c;
                                                  C3[A8 + y4 | 0] = c4 | D4, y4 = y4 + 1 | 0;
                                                  break E;
                                                }
                                                for (; ; ) {
                                                  if (!(255 & ((s4 = (65526 + (e6 = (223 & (t4 = o3[g6 + _4 | 0])) - 55 & 255) ^ e6 + 65520) >>> 8 | 0) | (D4 = 65526 + (h4 = 48 ^ t4) >>> 8 | 0)))) {
                                                    if (!kI(Q5, t4)) break C;
                                                    if ((_4 = _4 + 1 | 0) >>> 0 < B4 >>> 0) continue;
                                                    break _;
                                                  }
                                                  break;
                                                }
                                                if (I7 >>> 0 <= y4 >>> 0) break a;
                                                c4 = e6 & s4 | h4 & D4;
                                              }
                                              D4 = c4 << 4, r4 = 0;
                                              break E;
                                            }
                                            _4 = B4 >>> 0 > r4 >>> 0 ? B4 : r4;
                                            break C;
                                          }
                                          r4 = 0;
                                          break o;
                                        }
                                        if (r4 = ~r4, c4 = 1, !((_4 = _4 + 1 | 0) >>> 0 < B4 >>> 0)) break;
                                      }
                                      break i;
                                    }
                                    i4[9404] = 68, c4 = 0;
                                  }
                                  if (!(255 & r4)) break B;
                                }
                                i4[9404] = 28, c4 = -1, _4 = _4 - 1 | 0, y4 = 0;
                                break C;
                              }
                              y4 = c4 ? y4 : 0, c4 = c4 - 1 | 0;
                            }
                            if (!a4) {
                              if ((0 | B4) != (0 | _4)) break I;
                              A8 = c4;
                              break A;
                            }
                          }
                          i4[a4 >> 2] = g6 + _4, A8 = c4;
                          break A;
                        }
                        i4[9404] = 28, A8 = -1;
                      }
                      return E4 && (i4[E4 >> 2] = y4), 0 | A8;
                    }, Uh: function(A8, I7) {
                      A8 |= 0;
                      var g6 = 0;
                      return 1 != (-7 & (I7 |= 0)) && (rC(), Q4()), 1 + ((3 & (g6 = (g6 = A8) + a3(A8 = (A8 >>> 0) / 3 | 0, -3) | 0) ? 2 & I7 ? g6 + 1 | 0 : 4 : 0) + (A8 << 2) | 0) | 0;
                    }, Vh: XA, Wh: pA, Xh: function() {
                      var A8 = 0;
                      return i4[9537] ? A8 = 1 : ($g(), ag(38128, 16), i4[9537] = 1, A8 = 0), 0 | A8;
                    }, Yh: function(A8, I7, g6, B4, E4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, E4 |= 0;
                      var a4, _4 = 0, c4 = 0, t4 = 0;
                      s3 = a4 = s3 - 16 | 0;
                      A: {
                        if (B4 |= 0) {
                          if ((_4 = B4 - 1 | 0) & B4 ? (c4 = ~g6, _4 = _4 - ((g6 >>> 0) % (B4 >>> 0) | 0) | 0) : _4 &= c4 = ~g6, _4 >>> 0 >= c4 >>> 0) break A;
                          if ((g6 = g6 + _4 | 0) >>> 0 >= E4 >>> 0) I7 = -1;
                          else for (A8 && (i4[A8 >> 2] = g6 + 1), A8 = I7 + g6 | 0, I7 = 0, C3[a4 + 15 | 0] = 0, g6 = 0; c4 = E4 = A8 - g6 | 0, t4 = o3[0 | E4] & o3[a4 + 15 | 0], E4 = (g6 ^ _4) - 1 >>> 24 | 0, C3[0 | c4] = t4 | 128 & E4, C3[a4 + 15 | 0] = E4 | o3[a4 + 15 | 0], (0 | B4) != (0 | (g6 = g6 + 1 | 0)); ) ;
                        } else I7 = -1;
                        return s3 = a4 + 16 | 0, 0 | I7;
                      }
                      rC(), Q4();
                    }, Zh: function(A8, I7, g6, C4) {
                      A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0;
                      var B4, Q5 = 0, E4 = 0, a4 = 0, _4 = 0, c4 = 0;
                      if (i4[12 + (B4 = s3 - 16 | 0) >> 2] = 0, C4 - 1 >>> 0 < g6 >>> 0) {
                        for (c4 = (Q5 = g6 - 1 | 0) + I7 | 0, g6 = 0, I7 = 0; _4 = ((128 ^ (E4 = o3[c4 - g6 | 0])) - 1 & i4[B4 + 12 >> 2] - 1 & a4 - 1) >>> 8 & 1, i4[B4 + 12 >> 2] = i4[B4 + 12 >> 2] | 0 - _4 & g6, I7 |= _4, a4 |= E4, (0 | C4) != (0 | (g6 = g6 + 1 | 0)); ) ;
                        i4[A8 >> 2] = Q5 - i4[B4 + 12 >> 2], A8 = (255 & I7) - 1 | 0;
                      } else A8 = -1;
                      return 0 | A8;
                    }, _h: function() {
                      return 1547;
                    }, $h: function() {
                      return 26;
                    }, ai: tB, bi: hB, ci: cI, di: sC, ei: function(A8, I7, g6) {
                      A8 |= 0;
                      var C4, B4 = 0;
                      return s3 = C4 = s3 - 32 | 0, B4 = -1, CI(C4, g6 |= 0, I7 |= 0) || (B4 = yA(A8, 35584, C4, 0)), s3 = C4 + 32 | 0, 0 | B4;
                    }, fi: dg, gi: function(A8, I7, g6, C4, B4, Q5, i5, o4) {
                      var E4, a4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, Q5 |= 0, a4 = C4 |= 0, C4 = B4 |= 0, s3 = E4 = s3 + -64 | 0, CI(E4 + 32 | 0, o4 |= 0, i5 |= 0) ? B4 = -1 : (B4 = -1, yA(E4, 35584, E4 + 32 | 0, 0) || (B4 = EI(A8, I7, g6, a4, C4, Q5, E4), XC(E4, 32))), s3 = E4 - -64 | 0, 0 | B4;
                    }, hi: function(A8, I7, g6, C4, B4, i5) {
                      return A8 |= 0, I7 |= 0, B4 |= 0, i5 |= 0, !(C4 |= 0) & (g6 |= 0) >>> 0 >= 4294967280 | C4 && (rC(), Q4()), 0 | EI(A8 + 16 | 0, A8, I7, g6, C4, B4, i5);
                    }, ii: function(A8, I7, g6, C4, B4, Q5, i5) {
                      return 0 | ig(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0);
                    }, ji: lg, ki: function(A8, I7, g6, C4, B4, Q5, i5, o4) {
                      var E4, a4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, Q5 |= 0, a4 = C4 |= 0, C4 = B4 |= 0, s3 = E4 = s3 + -64 | 0, CI(E4 + 32 | 0, o4 |= 0, i5 |= 0) ? B4 = -1 : (B4 = -1, yA(E4, 35584, E4 + 32 | 0, 0) || (B4 = sI(A8, I7, g6, a4, C4, Q5, E4), XC(E4, 32))), s3 = E4 - -64 | 0, 0 | B4;
                    }, li: Dg, mi: function(A8, I7, g6, C4, B4, Q5, i5) {
                      return 0 | Ag(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0);
                    }, ni: BB, oi: BB, pi: BB, qi: BB, ri: _B, si: CB, ti: EB, ui: function(A8, I7, g6, B4, Q5) {
                      A8 |= 0, I7 |= 0, Q5 |= 0;
                      var o4, E4, a4, _4, c4 = 0, t4 = 0;
                      return c4 = g6 |= 0, g6 = B4 |= 0, _4 = 0 | c4, c4 = B4 = s3, s3 = o4 = B4 - 512 & -64, B4 = -1, sC(E4 = o4 - -64 | 0, a4 = o4 + 32 | 0) || (iC(B4 = o4 + 128 | 0, 0, 0, 24), lC(B4, E4, 32, 0), lC(B4, Q5, 32, 0), eC(B4, t4 = o4 + 96 | 0, 24), B4 = ig(A8 + 32 | 0, I7, _4, g6, t4, Q5, a4), I7 = i4[o4 + 92 >> 2], g6 = i4[o4 + 88 >> 2], C3[A8 + 24 | 0] = g6, C3[A8 + 25 | 0] = g6 >>> 8, C3[A8 + 26 | 0] = g6 >>> 16, C3[A8 + 27 | 0] = g6 >>> 24, C3[A8 + 28 | 0] = I7, C3[A8 + 29 | 0] = I7 >>> 8, C3[A8 + 30 | 0] = I7 >>> 16, C3[A8 + 31 | 0] = I7 >>> 24, I7 = i4[o4 + 84 >> 2], g6 = i4[o4 + 80 >> 2], C3[A8 + 16 | 0] = g6, C3[A8 + 17 | 0] = g6 >>> 8, C3[A8 + 18 | 0] = g6 >>> 16, C3[A8 + 19 | 0] = g6 >>> 24, C3[A8 + 20 | 0] = I7, C3[A8 + 21 | 0] = I7 >>> 8, C3[A8 + 22 | 0] = I7 >>> 16, C3[A8 + 23 | 0] = I7 >>> 24, I7 = i4[o4 + 76 >> 2], g6 = i4[o4 + 72 >> 2], C3[A8 + 8 | 0] = g6, C3[A8 + 9 | 0] = g6 >>> 8, C3[A8 + 10 | 0] = g6 >>> 16, C3[A8 + 11 | 0] = g6 >>> 24, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, I7 = i4[o4 + 68 >> 2], g6 = i4[o4 + 64 >> 2], C3[0 | A8] = g6, C3[A8 + 1 | 0] = g6 >>> 8, C3[A8 + 2 | 0] = g6 >>> 16, C3[A8 + 3 | 0] = g6 >>> 24, C3[A8 + 4 | 0] = I7, C3[A8 + 5 | 0] = I7 >>> 8, C3[A8 + 6 | 0] = I7 >>> 16, C3[A8 + 7 | 0] = I7 >>> 24, XC(a4, 32), XC(E4, 32), XC(t4, 24)), s3 = c4, 0 | B4;
                    }, vi: function(A8, I7, g6, C4, B4, Q5) {
                      A8 |= 0, I7 |= 0, B4 |= 0, Q5 |= 0;
                      var i5, o4, E4 = 0;
                      return o4 = E4 = s3, s3 = i5 = E4 - 448 & -64, E4 = -1, !(C4 |= 0) & (g6 |= 0) >>> 0 >= 48 | C4 && (iC(E4 = i5 - -64 | 0, 0, 0, 24), lC(E4, I7, 32, 0), lC(E4, B4, 32, 0), eC(E4, B4 = i5 + 32 | 0, 24), E4 = Ag(A8, I7 + 32 | 0, g6 - 32 | 0, C4 - (g6 >>> 0 < 32) | 0, B4, I7, Q5)), s3 = o4, 0 | E4;
                    }, wi: oB, xi: function(A8) {
                      var I7, g6 = 0;
                      return s3 = I7 = s3 - 160 | 0, NI(A8 |= 0) && (KI(A8) || MA(I7, A8) || jA(I7) && (g6 = !!(0 | gA(I7)))), s3 = I7 + 160 | 0, 0 | g6;
                    }, yi: function(A8, I7, g6) {
                      A8 |= 0, g6 |= 0;
                      var C4, B4, Q5 = 0;
                      return s3 = C4 = s3 - 800 | 0, Q5 = -1, MA(B4 = C4 + 640 | 0, I7 |= 0) || jA(B4) && (MA(I7 = C4 + 480 | 0, g6) || jA(I7) && ($A(C4, I7), sA(I7 = C4 + 160 | 0, B4, C4), kg(g6 = C4 + 320 | 0, I7), tg(A8, g6), Q5 = 0)), s3 = C4 + 800 | 0, 0 | Q5;
                    }, zi: function(A8, I7, g6) {
                      A8 |= 0, g6 |= 0;
                      var C4, B4, Q5 = 0;
                      return s3 = C4 = s3 - 800 | 0, Q5 = -1, MA(B4 = C4 + 640 | 0, I7 |= 0) || jA(B4) && (MA(I7 = C4 + 480 | 0, g6) || jA(I7) && ($A(C4, I7), hA(I7 = C4 + 160 | 0, B4, C4), kg(g6 = C4 + 320 | 0, I7), tg(A8, g6), Q5 = 0)), s3 = C4 + 800 | 0, 0 | Q5;
                    }, Ai: function(A8, I7) {
                      return M3(A8 |= 0, I7 |= 0), 0;
                    }, Bi: function(A8) {
                      var I7;
                      A8 |= 0, s3 = I7 = s3 - 32 | 0, ag(I7, 32), M3(A8, I7), s3 = I7 + 32 | 0;
                    }, Ci: Mg, Di: kA, Ei: xA, Fi: uA, Gi: cA, Hi: dA, Ii: IA, Ji: MC, Ki: BB, Li: gB, Mi: BB, Ni: gB, Oi: BB, Pi: function(A8) {
                      var I7;
                      return s3 = I7 = s3 - 160 | 0, A8 = EA(I7, A8 |= 0), s3 = I7 + 160 | 0, 0 | !A8;
                    }, Qi: function(A8, I7, g6) {
                      A8 |= 0, g6 |= 0;
                      var C4, B4, Q5 = 0;
                      return s3 = C4 = s3 - 800 | 0, Q5 = -1, EA(B4 = C4 + 640 | 0, I7 |= 0) || EA(I7 = C4 + 480 | 0, g6) || ($A(C4, I7), sA(I7 = C4 + 160 | 0, B4, C4), kg(g6 = C4 + 320 | 0, I7), W(A8, g6), Q5 = 0), s3 = C4 + 800 | 0, 0 | Q5;
                    }, Ri: function(A8, I7, g6) {
                      A8 |= 0, g6 |= 0;
                      var C4, B4, Q5 = 0;
                      return s3 = C4 = s3 - 800 | 0, Q5 = -1, EA(B4 = C4 + 640 | 0, I7 |= 0) || EA(I7 = C4 + 480 | 0, g6) || ($A(C4, I7), hA(I7 = C4 + 160 | 0, B4, C4), kg(g6 = C4 + 320 | 0, I7), W(A8, g6), Q5 = 0), s3 = C4 + 800 | 0, 0 | Q5;
                    }, Si: function(A8, I7) {
                      return jI(A8 |= 0, I7 |= 0), 0;
                    }, Ti: function(A8) {
                      var I7;
                      A8 |= 0, s3 = I7 = s3 + -64 | 0, ag(I7, 64), jI(A8, I7), s3 = I7 - -64 | 0;
                    }, Ui: function(A8) {
                      Mg(A8 |= 0);
                    }, Vi: function(A8, I7) {
                      return 0 | kA(A8 |= 0, I7 |= 0);
                    }, Wi: function(A8, I7) {
                      xA(A8 |= 0, I7 |= 0);
                    }, Xi: function(A8, I7) {
                      uA(A8 |= 0, I7 |= 0);
                    }, Yi: function(A8, I7, g6) {
                      cA(A8 |= 0, I7 |= 0, g6 |= 0);
                    }, Zi: function(A8, I7, g6) {
                      IA(A8 |= 0, I7 |= 0, g6 |= 0);
                    }, _i: MC, $i: function(A8, I7) {
                      dA(A8 |= 0, I7 |= 0);
                    }, aj: BB, bj: gB, cj: gB, dj: BB, ej: function(A8, I7, g6, C4, B4, Q5, i5, o4, E4, a4) {
                      return 0 | rg(A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, i5 |= 0, o4 |= 0, E4 |= 0, a4 |= 0);
                    }, fj: CB, gj: cB, hj: hB, ij: cB, jj: BB, kj: function() {
                      return 102;
                    }, lj: function() {
                      return 1575;
                    }, mj: function() {
                      return 32768;
                    }, nj: cB, oj: jC, pj: cB, qj: function() {
                      return 524288;
                    }, rj: jC, sj: LC, tj: vC, uj: function(A8, I7, g6, C4, B4, Q5, o4, E4, a4, _4) {
                      var c4, t4, r4;
                      I7 |= 0, g6 |= 0, C4 |= 0, B4 |= 0, Q5 |= 0, o4 |= 0, a4 |= 0, _4 |= 0, t4 = 0 | (E4 |= 0), s3 = E4 = s3 - 16 | 0, r4 = I7 |= 0, c4 = bg(A8 |= 0, 0, I7), A8 = 0 | B4;
                      A: if (1 == (0 | (B4 = g6 | Q5)) | B4 >>> 0 > 1) i4[9404] = 22, A8 = -1;
                      else if (!g6 & I7 >>> 0 >= 16 | g6) {
                        if (bA(t4, a4, _4, E4 + 12 | 0, E4 + 8 | 0, E4 + 4 | 0), (0 | C4) == (0 | c4)) {
                          i4[9404] = 28, A8 = -1;
                          break A;
                        }
                        B4 = A8, A8 = 31 & (I7 = i4[E4 + 12 >> 2]), (63 & I7) >>> 0 >= 32 ? (I7 = 1 << A8, g6 = 0) : I7 = (g6 = 1 << A8) - 1 & 1 >>> 32 - A8, A8 = rg(C4, B4, o4, 32, g6, I7, i4[E4 + 4 >> 2], i4[E4 + 8 >> 2], c4, r4);
                      } else i4[9404] = 28, A8 = -1;
                      return s3 = E4 + 16 | 0, 0 | A8;
                    }, vj: function(A8, I7, g6, B4, Q5, E4, a4) {
                      I7 |= 0, g6 |= 0, B4 |= 0, E4 |= 0, a4 |= 0;
                      var _4, c4, t4, r4 = 0, e6 = 0, y4 = 0, h4 = 0, D4 = 0, p4 = 0, w4 = 0;
                      r4 = Q5 |= 0, r4 |= Q5 = 0, s3 = _4 = s3 - 128 | 0, c4 = bg(A8 |= 0, 0, 102), D4 = 22, t4 = g6 | Q5;
                      A: {
                        I: {
                          if (!B4) {
                            bA(r4, E4, a4, _4 + 16 | 0, _4 + 12 | 0, _4 + 8 | 0), ag(e6 = _4 + 96 | 0, 32), D4 = 28, g6 = _4 + 32 | 0, E4 = i4[_4 + 16 >> 2], a4 = Ig(A8 = i4[_4 + 12 >> 2], 0, B4 = i4[_4 + 8 >> 2], 0);
                            g: if (!(!(r4 = f3) & a4 >>> 0 > 1073741823 | r4 | E4 >>> 0 > 63) && (C3[0 | g6] = 36, C3[g6 + 1 | 0] = 55, C3[g6 + 2 | 0] = 36, C3[g6 + 4 | 0] = o3[1024 + (63 & B4) | 0], C3[g6 + 3 | 0] = o3[E4 + 1024 | 0], C3[g6 + 8 | 0] = o3[1024 + (B4 >>> 24 & 63) | 0], C3[g6 + 7 | 0] = o3[1024 + (B4 >>> 18 & 63) | 0], C3[g6 + 6 | 0] = o3[1024 + (B4 >>> 12 & 63) | 0], C3[g6 + 5 | 0] = o3[1024 + (B4 >>> 6 & 63) | 0], (B4 = g6 + 9 | 0) && (0 | B4) != (0 | (y4 = g6 + 58 | 0)) && (C3[0 | B4] = o3[1024 + (63 & A8) | 0], 1 != (0 | (B4 = y4 - B4 | 0)) && (C3[g6 + 10 | 0] = o3[1024 + (A8 >>> 6 & 63) | 0], 2 != (0 | B4) && (C3[g6 + 11 | 0] = o3[1024 + (A8 >>> 12 & 63) | 0], 3 != (0 | B4) && (C3[g6 + 12 | 0] = o3[1024 + (A8 >>> 18 & 63) | 0], 4 != (0 | B4) && (C3[g6 + 13 | 0] = o3[1024 + (A8 >>> 24 & 63) | 0], E4 = g6 + 14 | 0))))))) {
                              for (r4 = y4 - E4 | 0, A8 = 0; ; ) {
                                if (B4 = E4, !(A8 >>> 0 >= 32)) {
                                  if (E4 = o3[A8 + e6 | 0], (p4 = (a4 = A8 + 1 | 0) >>> 0 >= 32) ? h4 = 0 : (E4 = o3[a4 + e6 | 0] << 8 | E4, (a4 = A8 + 2 | 0) >>> 0 >= 32 ? h4 = 0 : (E4 = o3[a4 + e6 | 0] << 16 | E4, h4 = 1, a4 = A8 + 3 | 0)), A8 = a4, !r4) break g;
                                  if (C3[0 | B4] = o3[1024 + (63 & E4) | 0], 1 == (0 | r4)) break g;
                                  if (C3[B4 + 1 | 0] = o3[1024 + (E4 >>> 6 & 63) | 0], w4 = B4 + r4 | 0, a4 = B4 + 2 | 0, !p4) {
                                    if (2 == (0 | r4)) break g;
                                    if (C3[B4 + 2 | 0] = o3[1024 + (E4 >>> 12 & 63) | 0], a4 = B4 + 3 | 0, h4) {
                                      if (3 == (0 | r4)) break g;
                                      C3[B4 + 3 | 0] = o3[1024 + (E4 >>> 18 | 0) | 0], a4 = B4 + 4 | 0;
                                    }
                                  }
                                  if (r4 = w4 - (E4 = a4) | 0, E4) continue;
                                  break g;
                                }
                                break;
                              }
                              B4 >>> 0 >= y4 >>> 0 || (C3[0 | B4] = 0, Q5 = g6);
                            }
                            if (Q5) {
                              if (_C(A8 = _4 + 20 | 0)) break I;
                              if (I7 = TA(A8, I7, t4, g6, c4), Rg(A8), I7) {
                                A8 = 0;
                                break A;
                              }
                            }
                          }
                          i4[9404] = D4;
                        }
                        A8 = -1;
                      }
                      return s3 = _4 + 128 | 0, 0 | A8;
                    }, wj: function(A8, I7, g6, C4) {
                      I7 |= 0, C4 |= 0;
                      var B4, Q5, i5 = 0;
                      B4 = A8 |= 0, Q5 = g6 |= 0, g6 = 0, s3 = C4 = s3 - 128 | 0;
                      A: {
                        I: {
                          for (; ; ) {
                            if (!o3[g6 + B4 | 0]) {
                              A8 = g6;
                              break I;
                            }
                            if (!o3[B4 + (A8 = g6 + 1 | 0) | 0]) break I;
                            if (!o3[B4 + (A8 = g6 + 2 | 0) | 0]) break I;
                            if (102 == (0 | (g6 = g6 + 3 | 0))) break;
                          }
                          g6 = -1;
                          break A;
                        }
                        g6 = -1, 101 == (0 | A8) && (_C(i5 = C4 + 4 | 0) || (bg(A8 = C4 + 16 | 0, 0, 102), I7 = TA(i5, I7, Q5, B4, A8), Rg(i5), I7 && (g6 = MI(A8, B4, 102), XC(A8, 102))));
                      }
                      return s3 = C4 + 128 | 0, 0 | g6;
                    }, xj: function(A8, I7, g6, C4) {
                      var B4, Q5;
                      Q5 = A8 |= 0, s3 = B4 = s3 - 32 | 0, bA(I7 |= 0, g6 |= 0, C4 |= 0, B4 + 28 | 0, B4 + 20 | 0, B4 + 12 | 0), A8 = 0;
                      A: {
                        I: {
                          g: {
                            for (; ; ) {
                              if (o3[A8 + Q5 | 0]) {
                                if (o3[Q5 + (I7 = A8 + 1 | 0) | 0] && o3[Q5 + (I7 = A8 + 2 | 0) | 0]) {
                                  if (102 != (0 | (A8 = A8 + 3 | 0))) continue;
                                  break g;
                                }
                              } else I7 = A8;
                              break;
                            }
                            if (101 == (0 | I7)) {
                              if (g6 = B4 + 8 | 0, C4 = B4 + 16 | 0, A8 = 0, 36 != o3[0 | Q5] | 55 != o3[Q5 + 1 | 0] | 36 != o3[Q5 + 2 | 0] || (I7 = uI(o3[Q5 + 3 | 0]), i4[B4 + 24 >> 2] = I7 ? I7 - 1024 | 0 : 0, I7 && (I7 = PI2(g6, Q5 + 4 | 0)) && (A8 = PI2(C4, I7))), A8) break I;
                              i4[9404] = 28, A8 = -1;
                              break A;
                            }
                          }
                          i4[9404] = 28, A8 = -1;
                          break A;
                        }
                        A8 = 1, i4[B4 + 28 >> 2] != i4[B4 + 24 >> 2] | i4[B4 + 12 >> 2] != i4[B4 + 8 >> 2] || (A8 = i4[B4 + 20 >> 2] != i4[B4 + 16 >> 2]);
                      }
                      return s3 = B4 + 32 | 0, 0 | A8;
                    }, yj: function(A8, I7, g6) {
                      return 0 | ZA(A8 |= 0, I7 |= 0, g6 |= 0, 1);
                    }, zj: function(A8, I7, g6) {
                      return 0 | ZA(A8 |= 0, I7 |= 0, g6 |= 0, 0);
                    }, Aj: function(A8, I7) {
                      return 0 | II(A8 |= 0, I7 |= 0, 1);
                    }, Bj: function(A8, I7) {
                      return 0 | II(A8 |= 0, I7 |= 0, 0);
                    }, Cj: BB, Dj: BB, Ej: function(A8, I7, g6) {
                      A8 |= 0, I7 |= 0;
                      var B4, Q5 = 0;
                      return s3 = B4 = s3 - 320 | 0, Q5 = -1, EA(B4, g6 |= 0) || (C3[0 | A8] = o3[0 | I7], C3[A8 + 1 | 0] = o3[I7 + 1 | 0], C3[A8 + 2 | 0] = o3[I7 + 2 | 0], C3[A8 + 3 | 0] = o3[I7 + 3 | 0], C3[A8 + 4 | 0] = o3[I7 + 4 | 0], C3[A8 + 5 | 0] = o3[I7 + 5 | 0], C3[A8 + 6 | 0] = o3[I7 + 6 | 0], C3[A8 + 7 | 0] = o3[I7 + 7 | 0], C3[A8 + 8 | 0] = o3[I7 + 8 | 0], C3[A8 + 9 | 0] = o3[I7 + 9 | 0], C3[A8 + 10 | 0] = o3[I7 + 10 | 0], C3[A8 + 11 | 0] = o3[I7 + 11 | 0], C3[A8 + 12 | 0] = o3[I7 + 12 | 0], C3[A8 + 13 | 0] = o3[I7 + 13 | 0], C3[A8 + 14 | 0] = o3[I7 + 14 | 0], C3[A8 + 15 | 0] = o3[I7 + 15 | 0], C3[A8 + 16 | 0] = o3[I7 + 16 | 0], C3[A8 + 17 | 0] = o3[I7 + 17 | 0], C3[A8 + 18 | 0] = o3[I7 + 18 | 0], C3[A8 + 19 | 0] = o3[I7 + 19 | 0], C3[A8 + 20 | 0] = o3[I7 + 20 | 0], C3[A8 + 21 | 0] = o3[I7 + 21 | 0], C3[A8 + 22 | 0] = o3[I7 + 22 | 0], C3[A8 + 23 | 0] = o3[I7 + 23 | 0], C3[A8 + 24 | 0] = o3[I7 + 24 | 0], C3[A8 + 25 | 0] = o3[I7 + 25 | 0], C3[A8 + 26 | 0] = o3[I7 + 26 | 0], C3[A8 + 27 | 0] = o3[I7 + 27 | 0], C3[A8 + 28 | 0] = o3[I7 + 28 | 0], C3[A8 + 29 | 0] = o3[I7 + 29 | 0], C3[A8 + 30 | 0] = o3[I7 + 30 | 0], C3[A8 + 31 | 0] = 127 & o3[I7 + 31 | 0], u3(I7 = B4 + 160 | 0, A8, B4), W(A8, I7), Q5 = GI(A8, 32) ? -1 : 0), s3 = B4 + 320 | 0, 0 | Q5;
                    }, Fj: function(A8, I7) {
                      var g6;
                      return I7 |= 0, s3 = g6 = s3 - 160 | 0, C3[0 | (A8 |= 0)] = o3[0 | I7], C3[A8 + 1 | 0] = o3[I7 + 1 | 0], C3[A8 + 2 | 0] = o3[I7 + 2 | 0], C3[A8 + 3 | 0] = o3[I7 + 3 | 0], C3[A8 + 4 | 0] = o3[I7 + 4 | 0], C3[A8 + 5 | 0] = o3[I7 + 5 | 0], C3[A8 + 6 | 0] = o3[I7 + 6 | 0], C3[A8 + 7 | 0] = o3[I7 + 7 | 0], C3[A8 + 8 | 0] = o3[I7 + 8 | 0], C3[A8 + 9 | 0] = o3[I7 + 9 | 0], C3[A8 + 10 | 0] = o3[I7 + 10 | 0], C3[A8 + 11 | 0] = o3[I7 + 11 | 0], C3[A8 + 12 | 0] = o3[I7 + 12 | 0], C3[A8 + 13 | 0] = o3[I7 + 13 | 0], C3[A8 + 14 | 0] = o3[I7 + 14 | 0], C3[A8 + 15 | 0] = o3[I7 + 15 | 0], C3[A8 + 16 | 0] = o3[I7 + 16 | 0], C3[A8 + 17 | 0] = o3[I7 + 17 | 0], C3[A8 + 18 | 0] = o3[I7 + 18 | 0], C3[A8 + 19 | 0] = o3[I7 + 19 | 0], C3[A8 + 20 | 0] = o3[I7 + 20 | 0], C3[A8 + 21 | 0] = o3[I7 + 21 | 0], C3[A8 + 22 | 0] = o3[I7 + 22 | 0], C3[A8 + 23 | 0] = o3[I7 + 23 | 0], C3[A8 + 24 | 0] = o3[I7 + 24 | 0], C3[A8 + 25 | 0] = o3[I7 + 25 | 0], C3[A8 + 26 | 0] = o3[I7 + 26 | 0], C3[A8 + 27 | 0] = o3[I7 + 27 | 0], C3[A8 + 28 | 0] = o3[I7 + 28 | 0], C3[A8 + 29 | 0] = o3[I7 + 29 | 0], C3[A8 + 30 | 0] = o3[I7 + 30 | 0], C3[A8 + 31 | 0] = 127 & o3[I7 + 31 | 0], nA(g6, A8), W(A8, g6), A8 = GI(A8, 32), s3 = g6 + 160 | 0, 0 | (A8 ? -1 : 0);
                    }, Gj: BB, Hj: BB, Ij: dg, Jj: function(A8, I7, g6, C4, B4, i5) {
                      return A8 |= 0, I7 |= 0, B4 |= 0, i5 |= 0, !(C4 |= 0) & (g6 |= 0) >>> 0 >= 4294967280 | C4 && (rC(), Q4()), EI(A8 + 16 | 0, A8, I7, g6, C4, B4, i5), 0;
                    }, Kj: lg, Lj: Dg, Mj: BB, Nj: _B, Oj: CB, Pj: EB, Qj: CB, Rj: CB, Sj: function(A8, I7, g6, B4, Q5) {
                      A8 |= 0, I7 |= 0, g6 |= 0, B4 |= 0;
                      var i5, E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0, r4 = 0, e6 = 0, y4 = 0, s4 = 0, h4 = 0, D4 = 0, p4 = 0, w4 = 0, n5 = 0, k4 = 0;
                      if (p4 = 1886610805 ^ (a4 = o3[0 | (Q5 |= 0)] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24), D4 = 1936682341 ^ (_4 = o3[Q5 + 4 | 0] | o3[Q5 + 5 | 0] << 8 | o3[Q5 + 6 | 0] << 16 | o3[Q5 + 7 | 0] << 24), a4 ^= 1852142177, c4 = 1819895653 ^ _4, w4 = 1852075907 ^ (_4 = o3[Q5 + 8 | 0] | o3[Q5 + 9 | 0] << 8 | o3[Q5 + 10 | 0] << 16 | o3[Q5 + 11 | 0] << 24), n5 = 1685025377 ^ (Q5 = o3[Q5 + 12 | 0] | o3[Q5 + 13 | 0] << 8 | o3[Q5 + 14 | 0] << 16 | o3[Q5 + 15 | 0] << 24), t4 = 2037671283 ^ _4, _4 = 1952801890 ^ Q5, s4 = g6, (0 | (E4 = (g6 + I7 | 0) - (i5 = 7 & g6) | 0)) != (0 | I7)) for (; g6 = (e6 = _4 ^ (k4 = o3[I7 + 4 | 0] | o3[I7 + 5 | 0] << 8 | o3[I7 + 6 | 0] << 16 | o3[I7 + 7 | 0] << 24)) + c4 | 0, t4 = B4 = a4 + (Q5 = t4 ^ (y4 = o3[0 | I7] | o3[I7 + 1 | 0] << 8 | o3[I7 + 2 | 0] << 16 | o3[I7 + 3 | 0] << 24)) | 0, r4 = g6 = B4 >>> 0 < Q5 >>> 0 ? g6 + 1 | 0 : g6, a4 = B4, B4 = g6, g6 = D4 + n5 | 0, g6 = (_4 = p4 + w4 | 0) >>> 0 < p4 >>> 0 ? g6 + 1 | 0 : g6, h4 = (c4 = UI(w4, n5, 13) ^ _4) + a4 | 0, B4 = (a4 = f3 ^ g6) + B4 | 0, a4 = UI(c4, a4, 17) ^ h4, p4 = UI(a4, B4 = (c4 = c4 >>> 0 > h4 >>> 0 ? B4 + 1 | 0 : B4) ^ f3, 13), D4 = f3, e6 = UI(Q5, e6, 16), Q5 = r4 ^ f3, e6 ^= t4, r4 = UI(_4, g6, 32), g6 = f3 + Q5 | 0, g6 = (t4 = B4) + (B4 = (_4 = e6 + r4 | 0) >>> 0 < r4 >>> 0 ? g6 + 1 | 0 : g6) | 0, r4 = g6 = (t4 = a4 + _4 | 0) >>> 0 < _4 >>> 0 ? g6 + 1 | 0 : g6, p4 = UI(a4 = t4 ^ p4, g6 ^= D4, 17), D4 = f3, e6 = UI(e6, Q5, 21), Q5 = B4 ^ f3, e6 ^= _4, _4 = UI(h4, c4, 32), B4 = f3 + Q5 | 0, g6 = (_4 = (c4 = e6 + _4 | 0) >>> 0 < _4 >>> 0 ? B4 + 1 | 0 : B4) + g6 | 0, w4 = (a4 = a4 + c4 | 0) ^ p4, B4 = g6 = a4 >>> 0 < c4 >>> 0 ? g6 + 1 | 0 : g6, n5 = g6 ^ D4, g6 = UI(e6, Q5, 16), e6 = _4 ^= f3, h4 = UI(g6 ^= c4, _4, 21), c4 = f3, r4 = (_4 = UI(t4, r4, 32)) + g6 | 0, g6 = f3 + e6 | 0, t4 = r4 ^ h4, _4 = (g6 = _4 >>> 0 > r4 >>> 0 ? g6 + 1 | 0 : g6) ^ c4, a4 = UI(a4, B4, 32), c4 = f3, p4 = y4 ^ r4, D4 = g6 ^ k4, (0 | E4) != (0 | (I7 = I7 + 8 | 0)); ) ;
                      switch (y4 = 0, Q5 = s4 << 24, i5 - 1 | 0) {
                        case 6:
                          Q5 |= o3[I7 + 6 | 0] << 16;
                        case 5:
                          Q5 |= o3[I7 + 5 | 0] << 8;
                        case 4:
                          Q5 |= o3[I7 + 4 | 0];
                        case 3:
                          y4 |= (g6 = o3[I7 + 3 | 0]) << 24, Q5 |= B4 = g6 >>> 8 | 0;
                        case 2:
                          y4 |= (B4 = o3[I7 + 2 | 0]) << 16, Q5 |= g6 = B4 >>> 16 | 0;
                        case 1:
                          y4 |= (g6 = o3[I7 + 1 | 0]) << 8, Q5 |= B4 = g6 >>> 24 | 0;
                        case 0:
                          y4 = o3[0 | I7] | y4;
                      }
                      return h4 = Q5, I7 = Q5 ^ _4, B4 = UI(Q5 = t4 ^ y4, I7, 16), I7 = I7 + c4 | 0, r4 = I7 = (t4 = Q5 + a4 | 0) >>> 0 < a4 >>> 0 ? I7 + 1 | 0 : I7, s4 = UI(Q5 = B4 ^ t4, I7 ^= g6 = f3, 21), _4 = f3, g6 = D4 + n5 | 0, B4 = g6 = (a4 = p4 + w4 | 0) >>> 0 < p4 >>> 0 ? g6 + 1 | 0 : g6, c4 = Q5, Q5 = UI(a4, g6, 32), g6 = f3 + I7 | 0, I7 = _4, _4 = g6 = Q5 >>> 0 > (c4 = c4 + Q5 | 0) >>> 0 ? g6 + 1 | 0 : g6, p4 = UI(Q5 = c4 ^ s4, I7 ^= g6, 16), D4 = f3, g6 = (a4 = e6 = UI(w4, n5, 13) ^ a4) + t4 | 0, B4 = (t4 = f3 ^ B4) + r4 | 0, r4 = Q5, Q5 = UI(g6, B4 = g6 >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4, 32), I7 = f3 + I7 | 0, k4 = Q5 = (a4 = Q5 >>> 0 > (s4 = r4 + Q5 | 0) >>> 0 ? I7 + 1 | 0 : I7) ^ D4, r4 = p4 ^= s4, D4 = UI(e6, t4, 17) ^ g6, g6 = (e6 = f3 ^ B4) + _4 | 0, I7 = g6 = (B4 = c4 = (I7 = D4) + c4 | 0) >>> 0 < I7 >>> 0 ? g6 + 1 | 0 : g6, _4 = UI(B4, g6, 32), g6 = f3 + Q5 | 0, c4 = (t4 = _4 + r4 | 0) ^ y4, h4 ^= r4 = _4 >>> 0 > t4 >>> 0 ? g6 + 1 | 0 : g6, Q5 = UI(D4, e6, 13) ^ B4, B4 = UI(Q5, I7 ^= f3, 17), I7 = I7 + a4 | 0, Q5 = B4 ^ (_4 = Q5 + s4 | 0), B4 = I7 = _4 >>> 0 < s4 >>> 0 ? I7 + 1 | 0 : I7, g6 = (I7 ^= g6 = f3) + h4 | 0, g6 = Q5 >>> 0 > (c4 = Q5 + c4 | 0) >>> 0 ? g6 + 1 | 0 : g6, Q5 = UI(Q5, I7, 13) ^ c4, a4 = g6, s4 = UI(Q5, I7 = g6 ^ f3, 17), y4 = f3, h4 = UI(p4, k4, 21), e6 = r4 ^ f3, r4 = t4 ^ h4, _4 = 238 ^ UI(_4, B4, 32), g6 = f3 + e6 | 0, g6 = (h4 = I7) + (I7 = (B4 = r4 + _4 | 0) >>> 0 < _4 >>> 0 ? g6 + 1 | 0 : g6) | 0, _4 = g6 = (t4 = B4 + Q5 | 0) >>> 0 < B4 >>> 0 ? g6 + 1 | 0 : g6, y4 = UI(Q5 = t4 ^ s4, g6 ^= y4, 13), h4 = f3, r4 = UI(r4, e6, 16), e6 = I7 ^ f3, s4 = B4 ^ r4, B4 = UI(c4, a4, 32), I7 = f3 + e6 | 0, B4 = (c4 = g6) + (g6 = B4 >>> 0 > (a4 = s4 + B4 | 0) >>> 0 ? I7 + 1 | 0 : I7) | 0, c4 = B4 = (r4 = Q5 + a4 | 0) >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4, y4 = UI(Q5 = y4 ^ r4, I7 = B4 ^ h4, 17), h4 = f3, B4 = UI(s4, e6, 21), e6 = g6 ^ f3, s4 = B4 ^ a4, B4 = UI(t4, _4, 32), g6 = f3 + e6 | 0, g6 = (B4 = B4 >>> 0 > (a4 = s4 + B4 | 0) >>> 0 ? g6 + 1 | 0 : g6) + I7 | 0, _4 = g6 = (t4 = Q5 + a4 | 0) >>> 0 < a4 >>> 0 ? g6 + 1 | 0 : g6, y4 = UI(Q5 = t4 ^ y4, I7 = g6 ^ h4, 13), h4 = f3, g6 = UI(s4, e6, 16), e6 = B4 ^ f3, s4 = g6 ^ a4, g6 = UI(r4, c4, 32), B4 = f3 + e6 | 0, g6 = (B4 = g6 >>> 0 > (a4 = s4 + g6 | 0) >>> 0 ? B4 + 1 | 0 : B4) + I7 | 0, c4 = g6 = (r4 = Q5 + a4 | 0) >>> 0 < a4 >>> 0 ? g6 + 1 | 0 : g6, y4 = UI(Q5 = y4 ^ r4, I7 = g6 ^ h4, 17), h4 = f3, g6 = UI(s4, e6, 21), e6 = B4 ^ f3, s4 = g6 ^ a4, a4 = UI(t4, _4, 32), g6 = f3 + e6 | 0, I7 = (g6 = (B4 = s4 + a4 | 0) >>> 0 < a4 >>> 0 ? g6 + 1 | 0 : g6) + I7 | 0, a4 = I7 = (_4 = B4 + Q5 | 0) >>> 0 < B4 >>> 0 ? I7 + 1 | 0 : I7, y4 = UI(Q5 = _4 ^ y4, I7 ^= h4, 13), h4 = f3, t4 = UI(s4, e6, 16), s4 = g6 ^ f3, t4 ^= B4, c4 = UI(r4, c4, 32), g6 = f3 + s4 | 0, g6 = (r4 = I7) + (I7 = (B4 = t4 + c4 | 0) >>> 0 < c4 >>> 0 ? g6 + 1 | 0 : g6) | 0, c4 = g6 = (r4 = B4 + Q5 | 0) >>> 0 < B4 >>> 0 ? g6 + 1 | 0 : g6, y4 = UI(Q5 = y4 ^ r4, g6 ^= h4, 17), h4 = f3, t4 = UI(t4, s4, 21), s4 = I7 ^ f3, t4 ^= B4, B4 = UI(_4, a4, 32), I7 = f3 + s4 | 0, B4 = (_4 = g6) + (g6 = B4 >>> 0 > (a4 = t4 + B4 | 0) >>> 0 ? I7 + 1 | 0 : I7) | 0, _4 = Q5 = (B4 = (I7 = Q5 + a4 | 0) >>> 0 < a4 >>> 0 ? B4 + 1 | 0 : B4) ^ h4, y4 ^= I7, t4 = UI(t4, s4, 16), e6 = g6 ^ f3, a4 = (t4 ^= a4) + (c4 = UI(r4, c4, 32)) | 0, g6 = f3 + e6 | 0, I7 = UI(I7, B4, 32), s4 = f3, B4 = g6 = a4 >>> 0 < c4 >>> 0 ? g6 + 1 | 0 : g6, c4 = A8, t4 = (r4 = UI(t4, e6, 21) ^ a4) ^ I7 ^ a4 ^ y4, C3[0 | c4] = t4, C3[c4 + 1 | 0] = t4 >>> 8, C3[c4 + 2 | 0] = t4 >>> 16, C3[c4 + 3 | 0] = t4 >>> 24, g6 = (e6 = s4 ^ g6 ^ Q5) ^ (Q5 = g6 ^ f3), C3[c4 + 4 | 0] = g6, C3[c4 + 5 | 0] = g6 >>> 8, C3[c4 + 6 | 0] = g6 >>> 16, C3[c4 + 7 | 0] = g6 >>> 24, g6 = Q5 + s4 | 0, g6 = (c4 = I7) >>> 0 > (I7 = I7 + r4 | 0) >>> 0 ? g6 + 1 | 0 : g6, h4 = I7, Q5 = UI(r4, Q5, 16) ^ I7, r4 = g6, s4 = I7 = g6 ^ f3, B4 = (g6 = _4) + B4 | 0, _4 = a4 = (c4 = y4 ^= 221) + a4 | 0, a4 = UI(a4, B4 = a4 >>> 0 < c4 >>> 0 ? B4 + 1 | 0 : B4, 32), I7 = f3 + I7 | 0, I7 = a4 >>> 0 > (t4 = a4 + Q5 | 0) >>> 0 ? I7 + 1 | 0 : I7, a4 = UI(Q5, s4, 21) ^ t4, c4 = I7, D4 = UI(a4, Q5 = I7 ^ f3, 16), e6 = f3, I7 = UI(y4, g6, 13), g6 = r4 + (s4 = B4 ^ f3) | 0, I7 = g6 = (B4 = h4 + (y4 = I7 ^ _4) | 0) >>> 0 < h4 >>> 0 ? g6 + 1 | 0 : g6, _4 = a4, a4 = UI(B4, g6, 32), g6 = f3 + Q5 | 0, e6 = g6 = (_4 = a4 >>> 0 > (r4 = _4 + a4 | 0) >>> 0 ? g6 + 1 | 0 : g6) ^ e6, h4 = UI(D4 ^= r4, g6, 21), a4 = f3, g6 = UI(y4, s4, 17), I7 = c4 + (s4 = I7 ^ f3) | 0, B4 = I7 = (Q5 = t4 + (y4 = g6 ^ B4) | 0) >>> 0 < t4 >>> 0 ? I7 + 1 | 0 : I7, I7 = UI(Q5, I7, 32), g6 = e6 + f3 | 0, e6 = g6 = (c4 = a4) ^ (a4 = (I7 = I7 + D4 | 0) >>> 0 < D4 >>> 0 ? g6 + 1 | 0 : g6), c4 = I7, h4 = UI(D4 = h4 ^ I7, g6, 16), t4 = f3, I7 = UI(y4, s4, 13), g6 = _4 + (s4 = B4 ^ f3) | 0, I7 = UI(Q5 = r4 + (y4 = I7 ^ Q5) | 0, g6 = Q5 >>> 0 < r4 >>> 0 ? g6 + 1 | 0 : g6, 32), B4 = e6 + f3 | 0, e6 = B4 = (_4 = (I7 = I7 + D4 | 0) >>> 0 < D4 >>> 0 ? B4 + 1 | 0 : B4) ^ t4, r4 = I7, h4 = UI(D4 = h4 ^ I7, B4, 21), t4 = f3, I7 = UI(y4, s4, 17), g6 = a4 + (s4 = g6 ^ f3) | 0, B4 = g6 = (Q5 = c4 + (y4 = I7 ^ Q5) | 0) >>> 0 < c4 >>> 0 ? g6 + 1 | 0 : g6, I7 = UI(Q5, g6, 32), g6 = e6 + f3 | 0, e6 = g6 = (a4 = (I7 = I7 + D4 | 0) >>> 0 < D4 >>> 0 ? g6 + 1 | 0 : g6) ^ t4, c4 = I7, h4 = UI(D4 = h4 ^ I7, g6, 16), t4 = f3, I7 = UI(y4, s4, 13), B4 = _4 + (s4 = B4 ^ f3) | 0, g6 = UI(Q5 = r4 + (y4 = I7 ^ Q5) | 0, B4 = Q5 >>> 0 < r4 >>> 0 ? B4 + 1 | 0 : B4, 32), I7 = e6 + f3 | 0, _4 = g6 = g6 + D4 | 0, h4 = UI(h4 ^ g6, (I7 = g6 >>> 0 < D4 >>> 0 ? I7 + 1 | 0 : I7) ^ t4, 21), t4 = f3, r4 = UI(y4, s4, 17), g6 = B4 ^ f3, r4 = UI(B4 = Q5 ^ r4, g6, 13), g6 = g6 + a4 | 0, g6 = (B4 = B4 + c4 | 0) >>> 0 < c4 >>> 0 ? g6 + 1 | 0 : g6, Q5 = UI(a4 = B4 ^ r4, g6 ^= Q5 = f3, 17) ^ h4, B4 = f3 ^ t4, g6 = I7 + g6 | 0, I7 = UI(I7 = a4 + _4 | 0, g6 = I7 >>> 0 < _4 >>> 0 ? g6 + 1 | 0 : g6, 32) ^ Q5 ^ I7, C3[A8 + 8 | 0] = I7, C3[A8 + 9 | 0] = I7 >>> 8, C3[A8 + 10 | 0] = I7 >>> 16, C3[A8 + 11 | 0] = I7 >>> 24, I7 = g6 ^ f3 ^ B4, C3[A8 + 12 | 0] = I7, C3[A8 + 13 | 0] = I7 >>> 8, C3[A8 + 14 | 0] = I7 >>> 16, C3[A8 + 15 | 0] = I7 >>> 24, 0;
                    }, Tj: function(A8, I7, g6, B4, Q5) {
                      A8 |= 0, B4 |= 0, Q5 |= 0;
                      var E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0;
                      if (s3 = E4 = s3 - 112 | 0, a4 = I7 |= 0, I7 | (_4 = g6 |= 0)) {
                        I7 = o3[Q5 + 28 | 0] | o3[Q5 + 29 | 0] << 8 | o3[Q5 + 30 | 0] << 16 | o3[Q5 + 31 | 0] << 24, i4[E4 + 24 >> 2] = o3[Q5 + 24 | 0] | o3[Q5 + 25 | 0] << 8 | o3[Q5 + 26 | 0] << 16 | o3[Q5 + 27 | 0] << 24, i4[E4 + 28 >> 2] = I7, I7 = o3[Q5 + 20 | 0] | o3[Q5 + 21 | 0] << 8 | o3[Q5 + 22 | 0] << 16 | o3[Q5 + 23 | 0] << 24, i4[E4 + 16 >> 2] = o3[Q5 + 16 | 0] | o3[Q5 + 17 | 0] << 8 | o3[Q5 + 18 | 0] << 16 | o3[Q5 + 19 | 0] << 24, i4[E4 + 20 >> 2] = I7, I7 = o3[Q5 + 4 | 0] | o3[Q5 + 5 | 0] << 8 | o3[Q5 + 6 | 0] << 16 | o3[Q5 + 7 | 0] << 24, i4[E4 >> 2] = o3[0 | Q5] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24, i4[E4 + 4 >> 2] = I7, I7 = o3[Q5 + 12 | 0] | o3[Q5 + 13 | 0] << 8 | o3[Q5 + 14 | 0] << 16 | o3[Q5 + 15 | 0] << 24, i4[E4 + 8 >> 2] = o3[Q5 + 8 | 0] | o3[Q5 + 9 | 0] << 8 | o3[Q5 + 10 | 0] << 16 | o3[Q5 + 11 | 0] << 24, i4[E4 + 12 >> 2] = I7, I7 = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, g6 = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24, i4[E4 + 104 >> 2] = 0, i4[E4 + 108 >> 2] = 0, i4[E4 + 96 >> 2] = I7, i4[E4 + 100 >> 2] = g6;
                        A: {
                          if (!_4 & a4 >>> 0 >= 64 | _4) {
                            for (; IC(A8, E4 + 96 | 0, E4, 0), I7 = o3[E4 + 104 | 0] + 1 | 0, C3[E4 + 104 | 0] = I7, I7 = o3[E4 + 105 | 0] + (I7 >>> 8 | 0) | 0, C3[E4 + 105 | 0] = I7, I7 = o3[E4 + 106 | 0] + (I7 >>> 8 | 0) | 0, C3[E4 + 106 | 0] = I7, I7 = o3[E4 + 107 | 0] + (I7 >>> 8 | 0) | 0, C3[E4 + 107 | 0] = I7, I7 = o3[E4 + 108 | 0] + (I7 >>> 8 | 0) | 0, C3[E4 + 108 | 0] = I7, I7 = o3[E4 + 109 | 0] + (I7 >>> 8 | 0) | 0, C3[E4 + 109 | 0] = I7, I7 = o3[E4 + 110 | 0] + (I7 >>> 8 | 0) | 0, C3[E4 + 110 | 0] = I7, C3[E4 + 111 | 0] = o3[E4 + 111 | 0] + (I7 >>> 8 | 0), A8 = A8 - -64 | 0, _4 = _4 - 1 | 0, !(_4 = (a4 = a4 + -64 | 0) >>> 0 < 4294967232 ? _4 + 1 | 0 : _4) & a4 >>> 0 > 63 | _4; ) ;
                            if (!(a4 | _4)) break A;
                          }
                          if (g6 = 0, IC(E4 + 32 | 0, E4 + 96 | 0, E4, 0), B4 = 3 & a4, I7 = 0, !_4 & a4 >>> 0 >= 4 | _4) for (_4 = 60 & a4, Q5 = 0; a4 = t4 = E4 + 32 | 0, C3[A8 + I7 | 0] = o3[a4 + I7 | 0], C3[(c4 = 1 | I7) + A8 | 0] = o3[a4 + c4 | 0], C3[(c4 = 2 | I7) + A8 | 0] = o3[a4 + c4 | 0], C3[(a4 = 3 | I7) + A8 | 0] = o3[a4 + t4 | 0], I7 = I7 + 4 | 0, (0 | _4) != (0 | (Q5 = Q5 + 4 | 0)); ) ;
                          if (B4) for (; C3[A8 + I7 | 0] = o3[(E4 + 32 | 0) + I7 | 0], I7 = I7 + 1 | 0, (0 | B4) != (0 | (g6 = g6 + 1 | 0)); ) ;
                        }
                        XC(E4 + 32 | 0, 64), XC(E4, 32);
                      }
                      return s3 = E4 + 112 | 0, 0;
                    }, Uj: function(A8, I7, g6, B4, Q5, E4) {
                      A8 |= 0, I7 |= 0, Q5 |= 0, E4 |= 0;
                      var a4, _4 = 0, c4 = 0;
                      if (s3 = a4 = s3 - 112 | 0, _4 = g6 |= 0, (B4 |= 0) | g6) {
                        g6 = o3[E4 + 28 | 0] | o3[E4 + 29 | 0] << 8 | o3[E4 + 30 | 0] << 16 | o3[E4 + 31 | 0] << 24, i4[a4 + 24 >> 2] = o3[E4 + 24 | 0] | o3[E4 + 25 | 0] << 8 | o3[E4 + 26 | 0] << 16 | o3[E4 + 27 | 0] << 24, i4[a4 + 28 >> 2] = g6, g6 = o3[E4 + 20 | 0] | o3[E4 + 21 | 0] << 8 | o3[E4 + 22 | 0] << 16 | o3[E4 + 23 | 0] << 24, i4[a4 + 16 >> 2] = o3[E4 + 16 | 0] | o3[E4 + 17 | 0] << 8 | o3[E4 + 18 | 0] << 16 | o3[E4 + 19 | 0] << 24, i4[a4 + 20 >> 2] = g6, g6 = o3[E4 + 4 | 0] | o3[E4 + 5 | 0] << 8 | o3[E4 + 6 | 0] << 16 | o3[E4 + 7 | 0] << 24, i4[a4 >> 2] = o3[0 | E4] | o3[E4 + 1 | 0] << 8 | o3[E4 + 2 | 0] << 16 | o3[E4 + 3 | 0] << 24, i4[a4 + 4 >> 2] = g6, g6 = o3[E4 + 12 | 0] | o3[E4 + 13 | 0] << 8 | o3[E4 + 14 | 0] << 16 | o3[E4 + 15 | 0] << 24, i4[a4 + 8 >> 2] = o3[E4 + 8 | 0] | o3[E4 + 9 | 0] << 8 | o3[E4 + 10 | 0] << 16 | o3[E4 + 11 | 0] << 24, i4[a4 + 12 >> 2] = g6, g6 = o3[0 | Q5] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24, Q5 = o3[Q5 + 4 | 0] | o3[Q5 + 5 | 0] << 8 | o3[Q5 + 6 | 0] << 16 | o3[Q5 + 7 | 0] << 24, i4[a4 + 104 >> 2] = 0, i4[a4 + 108 >> 2] = 0, i4[a4 + 96 >> 2] = g6, i4[a4 + 100 >> 2] = Q5;
                        A: {
                          if (!B4 & _4 >>> 0 >= 64 | B4) {
                            for (; ; ) {
                              for (g6 = 0, IC(a4 + 32 | 0, a4 + 96 | 0, a4, 0); E4 = a4 + 32 | 0, C3[A8 + g6 | 0] = o3[E4 + g6 | 0] ^ o3[I7 + g6 | 0], C3[(Q5 = 1 | g6) + A8 | 0] = o3[Q5 + E4 | 0] ^ o3[I7 + Q5 | 0], 64 != (0 | (g6 = g6 + 2 | 0)); ) ;
                              if (g6 = o3[a4 + 104 | 0] + 1 | 0, C3[a4 + 104 | 0] = g6, g6 = o3[a4 + 105 | 0] + (g6 >>> 8 | 0) | 0, C3[a4 + 105 | 0] = g6, g6 = o3[a4 + 106 | 0] + (g6 >>> 8 | 0) | 0, C3[a4 + 106 | 0] = g6, g6 = o3[a4 + 107 | 0] + (g6 >>> 8 | 0) | 0, C3[a4 + 107 | 0] = g6, g6 = o3[a4 + 108 | 0] + (g6 >>> 8 | 0) | 0, C3[a4 + 108 | 0] = g6, g6 = o3[a4 + 109 | 0] + (g6 >>> 8 | 0) | 0, C3[a4 + 109 | 0] = g6, g6 = o3[a4 + 110 | 0] + (g6 >>> 8 | 0) | 0, C3[a4 + 110 | 0] = g6, C3[a4 + 111 | 0] = o3[a4 + 111 | 0] + (g6 >>> 8 | 0), I7 = I7 - -64 | 0, A8 = A8 - -64 | 0, B4 = B4 - 1 | 0, !(!(B4 = (_4 = _4 + -64 | 0) >>> 0 < 4294967232 ? B4 + 1 | 0 : B4) & _4 >>> 0 > 63 | B4)) break;
                            }
                            if (!(B4 | _4)) break A;
                          }
                          if (g6 = 0, IC(a4 + 32 | 0, a4 + 96 | 0, a4, 0), E4 = 1 & _4, 1 != (0 | _4) | B4) for (_4 &= 62, B4 = 0; c4 = a4 + 32 | 0, C3[A8 + g6 | 0] = o3[c4 + g6 | 0] ^ o3[I7 + g6 | 0], C3[(Q5 = 1 | g6) + A8 | 0] = o3[Q5 + c4 | 0] ^ o3[I7 + Q5 | 0], g6 = g6 + 2 | 0, (0 | _4) != (0 | (B4 = B4 + 2 | 0)); ) ;
                          E4 && (C3[A8 + g6 | 0] = o3[(a4 + 32 | 0) + g6 | 0] ^ o3[I7 + g6 | 0]);
                        }
                        XC(a4 + 32 | 0, 64), XC(a4, 32);
                      }
                      return s3 = a4 + 112 | 0, 0;
                    }, Vj: BB, Wj: eB, Xj: cB, Yj: PC, Zj: function(A8, I7, g6, B4, Q5) {
                      A8 |= 0, B4 |= 0, Q5 |= 0;
                      var E4, a4 = 0, _4 = 0, c4 = 0, t4 = 0;
                      if (s3 = E4 = s3 - 112 | 0, a4 = I7 |= 0, I7 | (_4 = g6 |= 0)) {
                        I7 = o3[Q5 + 28 | 0] | o3[Q5 + 29 | 0] << 8 | o3[Q5 + 30 | 0] << 16 | o3[Q5 + 31 | 0] << 24, i4[E4 + 24 >> 2] = o3[Q5 + 24 | 0] | o3[Q5 + 25 | 0] << 8 | o3[Q5 + 26 | 0] << 16 | o3[Q5 + 27 | 0] << 24, i4[E4 + 28 >> 2] = I7, I7 = o3[Q5 + 20 | 0] | o3[Q5 + 21 | 0] << 8 | o3[Q5 + 22 | 0] << 16 | o3[Q5 + 23 | 0] << 24, i4[E4 + 16 >> 2] = o3[Q5 + 16 | 0] | o3[Q5 + 17 | 0] << 8 | o3[Q5 + 18 | 0] << 16 | o3[Q5 + 19 | 0] << 24, i4[E4 + 20 >> 2] = I7, I7 = o3[Q5 + 4 | 0] | o3[Q5 + 5 | 0] << 8 | o3[Q5 + 6 | 0] << 16 | o3[Q5 + 7 | 0] << 24, i4[E4 >> 2] = o3[0 | Q5] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24, i4[E4 + 4 >> 2] = I7, I7 = o3[Q5 + 12 | 0] | o3[Q5 + 13 | 0] << 8 | o3[Q5 + 14 | 0] << 16 | o3[Q5 + 15 | 0] << 24, i4[E4 + 8 >> 2] = o3[Q5 + 8 | 0] | o3[Q5 + 9 | 0] << 8 | o3[Q5 + 10 | 0] << 16 | o3[Q5 + 11 | 0] << 24, i4[E4 + 12 >> 2] = I7, I7 = o3[0 | B4] | o3[B4 + 1 | 0] << 8 | o3[B4 + 2 | 0] << 16 | o3[B4 + 3 | 0] << 24, g6 = o3[B4 + 4 | 0] | o3[B4 + 5 | 0] << 8 | o3[B4 + 6 | 0] << 16 | o3[B4 + 7 | 0] << 24, i4[E4 + 104 >> 2] = 0, i4[E4 + 108 >> 2] = 0, i4[E4 + 96 >> 2] = I7, i4[E4 + 100 >> 2] = g6;
                        A: {
                          if (!_4 & a4 >>> 0 >= 64 | _4) {
                            for (; gC(A8, E4 + 96 | 0, E4, 0), I7 = o3[E4 + 104 | 0] + 1 | 0, C3[E4 + 104 | 0] = I7, I7 = o3[E4 + 105 | 0] + (I7 >>> 8 | 0) | 0, C3[E4 + 105 | 0] = I7, I7 = o3[E4 + 106 | 0] + (I7 >>> 8 | 0) | 0, C3[E4 + 106 | 0] = I7, I7 = o3[E4 + 107 | 0] + (I7 >>> 8 | 0) | 0, C3[E4 + 107 | 0] = I7, I7 = o3[E4 + 108 | 0] + (I7 >>> 8 | 0) | 0, C3[E4 + 108 | 0] = I7, I7 = o3[E4 + 109 | 0] + (I7 >>> 8 | 0) | 0, C3[E4 + 109 | 0] = I7, I7 = o3[E4 + 110 | 0] + (I7 >>> 8 | 0) | 0, C3[E4 + 110 | 0] = I7, C3[E4 + 111 | 0] = o3[E4 + 111 | 0] + (I7 >>> 8 | 0), A8 = A8 - -64 | 0, _4 = _4 - 1 | 0, !(_4 = (a4 = a4 + -64 | 0) >>> 0 < 4294967232 ? _4 + 1 | 0 : _4) & a4 >>> 0 > 63 | _4; ) ;
                            if (!(a4 | _4)) break A;
                          }
                          if (g6 = 0, gC(E4 + 32 | 0, E4 + 96 | 0, E4, 0), B4 = 3 & a4, I7 = 0, !_4 & a4 >>> 0 >= 4 | _4) for (_4 = 60 & a4, Q5 = 0; a4 = t4 = E4 + 32 | 0, C3[A8 + I7 | 0] = o3[a4 + I7 | 0], C3[(c4 = 1 | I7) + A8 | 0] = o3[a4 + c4 | 0], C3[(c4 = 2 | I7) + A8 | 0] = o3[a4 + c4 | 0], C3[(a4 = 3 | I7) + A8 | 0] = o3[a4 + t4 | 0], I7 = I7 + 4 | 0, (0 | _4) != (0 | (Q5 = Q5 + 4 | 0)); ) ;
                          if (B4) for (; C3[A8 + I7 | 0] = o3[(E4 + 32 | 0) + I7 | 0], I7 = I7 + 1 | 0, (0 | B4) != (0 | (g6 = g6 + 1 | 0)); ) ;
                        }
                        XC(E4 + 32 | 0, 64), XC(E4, 32);
                      }
                      return s3 = E4 + 112 | 0, 0;
                    }, _j: function(A8, I7, g6, B4, Q5, E4) {
                      A8 |= 0, I7 |= 0, Q5 |= 0, E4 |= 0;
                      var a4, _4 = 0, c4 = 0;
                      if (s3 = a4 = s3 - 112 | 0, _4 = g6 |= 0, (B4 |= 0) | g6) {
                        g6 = o3[E4 + 28 | 0] | o3[E4 + 29 | 0] << 8 | o3[E4 + 30 | 0] << 16 | o3[E4 + 31 | 0] << 24, i4[a4 + 24 >> 2] = o3[E4 + 24 | 0] | o3[E4 + 25 | 0] << 8 | o3[E4 + 26 | 0] << 16 | o3[E4 + 27 | 0] << 24, i4[a4 + 28 >> 2] = g6, g6 = o3[E4 + 20 | 0] | o3[E4 + 21 | 0] << 8 | o3[E4 + 22 | 0] << 16 | o3[E4 + 23 | 0] << 24, i4[a4 + 16 >> 2] = o3[E4 + 16 | 0] | o3[E4 + 17 | 0] << 8 | o3[E4 + 18 | 0] << 16 | o3[E4 + 19 | 0] << 24, i4[a4 + 20 >> 2] = g6, g6 = o3[E4 + 4 | 0] | o3[E4 + 5 | 0] << 8 | o3[E4 + 6 | 0] << 16 | o3[E4 + 7 | 0] << 24, i4[a4 >> 2] = o3[0 | E4] | o3[E4 + 1 | 0] << 8 | o3[E4 + 2 | 0] << 16 | o3[E4 + 3 | 0] << 24, i4[a4 + 4 >> 2] = g6, g6 = o3[E4 + 12 | 0] | o3[E4 + 13 | 0] << 8 | o3[E4 + 14 | 0] << 16 | o3[E4 + 15 | 0] << 24, i4[a4 + 8 >> 2] = o3[E4 + 8 | 0] | o3[E4 + 9 | 0] << 8 | o3[E4 + 10 | 0] << 16 | o3[E4 + 11 | 0] << 24, i4[a4 + 12 >> 2] = g6, g6 = o3[0 | Q5] | o3[Q5 + 1 | 0] << 8 | o3[Q5 + 2 | 0] << 16 | o3[Q5 + 3 | 0] << 24, Q5 = o3[Q5 + 4 | 0] | o3[Q5 + 5 | 0] << 8 | o3[Q5 + 6 | 0] << 16 | o3[Q5 + 7 | 0] << 24, i4[a4 + 104 >> 2] = 0, i4[a4 + 108 >> 2] = 0, i4[a4 + 96 >> 2] = g6, i4[a4 + 100 >> 2] = Q5;
                        A: {
                          if (!B4 & _4 >>> 0 >= 64 | B4) {
                            for (; ; ) {
                              for (g6 = 0, gC(a4 + 32 | 0, a4 + 96 | 0, a4, 0); E4 = a4 + 32 | 0, C3[A8 + g6 | 0] = o3[E4 + g6 | 0] ^ o3[I7 + g6 | 0], C3[(Q5 = 1 | g6) + A8 | 0] = o3[Q5 + E4 | 0] ^ o3[I7 + Q5 | 0], 64 != (0 | (g6 = g6 + 2 | 0)); ) ;
                              if (g6 = o3[a4 + 104 | 0] + 1 | 0, C3[a4 + 104 | 0] = g6, g6 = o3[a4 + 105 | 0] + (g6 >>> 8 | 0) | 0, C3[a4 + 105 | 0] = g6, g6 = o3[a4 + 106 | 0] + (g6 >>> 8 | 0) | 0, C3[a4 + 106 | 0] = g6, g6 = o3[a4 + 107 | 0] + (g6 >>> 8 | 0) | 0, C3[a4 + 107 | 0] = g6, g6 = o3[a4 + 108 | 0] + (g6 >>> 8 | 0) | 0, C3[a4 + 108 | 0] = g6, g6 = o3[a4 + 109 | 0] + (g6 >>> 8 | 0) | 0, C3[a4 + 109 | 0] = g6, g6 = o3[a4 + 110 | 0] + (g6 >>> 8 | 0) | 0, C3[a4 + 110 | 0] = g6, C3[a4 + 111 | 0] = o3[a4 + 111 | 0] + (g6 >>> 8 | 0), I7 = I7 - -64 | 0, A8 = A8 - -64 | 0, B4 = B4 - 1 | 0, !(!(B4 = (_4 = _4 + -64 | 0) >>> 0 < 4294967232 ? B4 + 1 | 0 : B4) & _4 >>> 0 > 63 | B4)) break;
                            }
                            if (!(B4 | _4)) break A;
                          }
                          if (g6 = 0, gC(a4 + 32 | 0, a4 + 96 | 0, a4, 0), E4 = 1 & _4, 1 != (0 | _4) | B4) for (_4 &= 62, B4 = 0; c4 = a4 + 32 | 0, C3[A8 + g6 | 0] = o3[c4 + g6 | 0] ^ o3[I7 + g6 | 0], C3[(Q5 = 1 | g6) + A8 | 0] = o3[Q5 + c4 | 0] ^ o3[I7 + Q5 | 0], g6 = g6 + 2 | 0, (0 | _4) != (0 | (B4 = B4 + 2 | 0)); ) ;
                          E4 && (C3[A8 + g6 | 0] = o3[(a4 + 32 | 0) + g6 | 0] ^ o3[I7 + g6 | 0]);
                        }
                        XC(a4 + 32 | 0, 64), XC(a4, 32);
                      }
                      return s3 = a4 + 112 | 0, 0;
                    }, $j: BB, ak: eB, bk: cB, ck: PC, dk: BB, ek: _B, fk: cB, gk: function(A8, I7, g6, C4, B4) {
                      var Q5;
                      return A8 |= 0, I7 |= 0, g6 |= 0, s3 = Q5 = s3 - 32 | 0, yA(Q5, C4 |= 0, B4 |= 0, 0), A8 = Xg(A8, I7, g6, C4 + 16 | 0, Q5), s3 = Q5 + 32 | 0, 0 | A8;
                    }, hk: function(A8, I7, g6, C4, B4, Q5, i5, o4) {
                      var E4;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, Q5 |= 0, i5 |= 0, s3 = E4 = s3 - 32 | 0, yA(E4, B4 |= 0, o4 |= 0, 0), A8 = mg(o4 = A8, I7, (A8 = 0) | g6, C4, B4 + 16 | 0, A8 | Q5, i5, E4), s3 = E4 + 32 | 0, 0 | A8;
                    }, ik: function(A8, I7, g6, C4, B4, Q5) {
                      var i5;
                      return A8 |= 0, I7 |= 0, g6 |= 0, C4 |= 0, s3 = i5 = s3 - 32 | 0, yA(i5, B4 |= 0, Q5 |= 0, 0), A8 = mg(A8, I7, g6, C4, B4 + 16 | 0, 0, 0, i5), s3 = i5 + 32 | 0, 0 | A8;
                    }, jk: PC, kk: K3, lk: BA, mk: pB };
                  }(A6);
                }(I5);
              }, instantiate: function(A5, I5) {
                return { then: function(g4) {
                  var C2 = new y2.Module(A5);
                  g4({ instance: new y2.Instance(C2, I5) });
                } };
              }, RuntimeError: Error };
              t2 = [];
              var s2, h2, D2, f2, p2, w2, n3, k2 = false;
              function F2() {
                var A5 = e4.buffer;
                B2.HEAP8 = s2 = new Int8Array(A5), B2.HEAP16 = D2 = new Int16Array(A5), B2.HEAPU8 = h2 = new Uint8Array(A5), B2.HEAPU16 = new Uint16Array(A5), B2.HEAP32 = f2 = new Int32Array(A5), B2.HEAPU32 = p2 = new Uint32Array(A5), B2.HEAPF32 = w2 = new Float32Array(A5), B2.HEAPF64 = n3 = new Float64Array(A5);
              }
              var S2 = [], N2 = [], G2 = [], M2 = 0, K2 = null, U2 = null;
              function b3(A5) {
                var _a7;
                throw (_a7 = B2.onAbort) == null ? void 0 : _a7.call(B2, A5), r2(A5 = "Aborted(" + A5 + ")"), k2 = true, A5 += ". Build with -sASSERTIONS for more info.", new y2.RuntimeError(A5);
              }
              var H2, Y2 = (A5) => A5.startsWith("file://");
              var J2 = { 36800: () => B2.getRandomValue(), 36836: () => {
                if (void 0 === B2.getRandomValue) try {
                  var A5 = "object" == typeof window ? window : self, I5 = void 0 !== A5.crypto ? A5.crypto : A5.msCrypto;
                  I5 = void 0 === I5 ? C2 : I5;
                  var g4 = function() {
                    var A6 = new Uint32Array(1);
                    return I5.getRandomValues(A6), A6[0] >>> 0;
                  };
                  g4(), B2.getRandomValue = g4;
                } catch (A6) {
                  try {
                    var C2 = require_crypto(), Q4 = function() {
                      var A7 = C2.randomBytes(4);
                      return (A7[0] << 24 | A7[1] << 16 | A7[2] << 8 | A7[3]) >>> 0;
                    };
                    Q4(), B2.getRandomValue = Q4;
                  } catch (A7) {
                    throw "No secure random number generator found";
                  }
                }
              } }, d3 = (A5) => {
                for (; A5.length > 0; ) A5.shift()(B2);
              };
              B2.noExitRuntime;
              var m2, l2 = "undefined" != typeof TextDecoder ? new TextDecoder() : void 0, u2 = (A5, I5) => A5 ? ((A6, I6, g4) => {
                for (var C2 = I6 + g4, B3 = I6; A6[B3] && !(B3 >= C2); ) ++B3;
                if (B3 - I6 > 16 && A6.buffer && l2) return l2.decode(A6.subarray(I6, B3));
                for (var Q4 = ""; I6 < B3; ) {
                  var i4 = A6[I6++];
                  if (128 & i4) {
                    var o3 = 63 & A6[I6++];
                    if (192 != (224 & i4)) {
                      var E3 = 63 & A6[I6++];
                      if ((i4 = 224 == (240 & i4) ? (15 & i4) << 12 | o3 << 6 | E3 : (7 & i4) << 18 | o3 << 12 | E3 << 6 | 63 & A6[I6++]) < 65536) Q4 += String.fromCharCode(i4);
                      else {
                        var a3 = i4 - 65536;
                        Q4 += String.fromCharCode(55296 | a3 >> 10, 56320 | 1023 & a3);
                      }
                    } else Q4 += String.fromCharCode((31 & i4) << 6 | o3);
                  } else Q4 += String.fromCharCode(i4);
                }
                return Q4;
              })(h2, A5, I5) : "", x2 = [], v2 = (A5) => {
                var I5 = (A5 - e4.buffer.byteLength + 65535) / 65536;
                try {
                  return e4.grow(I5), F2(), 1;
                } catch (A6) {
                }
              }, R2 = { b: (A5, I5, g4, C2) => {
                b3(`Assertion failed: ${u2(A5)}, at: ` + [I5 ? u2(I5) : "unknown filename", g4, C2 ? u2(C2) : "unknown function"]);
              }, c: () => {
                b3("");
              }, a: (A5, I5, g4) => ((A6, I6, g5) => {
                var C2 = ((A7, I7) => {
                  var g6;
                  for (x2.length = 0; g6 = h2[A7++]; ) {
                    var C3 = 105 != g6;
                    I7 += (C3 &= 112 != g6) && I7 % 8 ? 4 : 0, x2.push(112 == g6 ? p2[I7 >> 2] : 105 == g6 ? f2[I7 >> 2] : n3[I7 >> 3]), I7 += C3 ? 8 : 4;
                  }
                  return x2;
                })(I6, g5);
                return J2[A6](...C2);
              })(A5, I5, g4), d: (A5) => {
                var I5 = h2.length, g4 = 2147483648;
                if ((A5 >>>= 0) > g4) return false;
                for (var C2, B3 = 1; B3 <= 4; B3 *= 2) {
                  var Q4 = I5 * (1 + 0.2 / B3);
                  Q4 = Math.min(Q4, A5 + 100663296);
                  var i4 = Math.min(g4, (C2 = Math.max(A5, Q4)) + (65536 - C2 % 65536) % 65536);
                  if (v2(i4)) return true;
                }
                return false;
              } }, L2 = function() {
                var _a7;
                var A5 = { a: R2 };
                function I5(A6, I6) {
                  var g4;
                  return L2 = A6.exports, e4 = L2.e, F2(), g4 = L2.f, N2.unshift(g4), function(A7) {
                    var _a8;
                    if (M2--, (_a8 = B2.monitorRunDependencies) == null ? void 0 : _a8.call(B2, M2), 0 == M2 && (null !== K2 && (clearInterval(K2), K2 = null), U2)) {
                      var I7 = U2;
                      U2 = null, I7();
                    }
                  }(), L2;
                }
                if (M2++, (_a7 = B2.monitorRunDependencies) == null ? void 0 : _a7.call(B2, M2), B2.instantiateWasm) try {
                  return B2.instantiateWasm(A5, I5);
                } catch (A6) {
                  return r2(`Module.instantiateWasm callback failed with error: ${A6}`), false;
                }
                return H2 || (H2 = "<<< WASM_BINARY_FILE >>>"), function(A6, I6, C2) {
                  (function(A7) {
                    return Promise.resolve().then(() => function(A8) {
                      if (A8 == H2 && t2) return new Uint8Array(t2);
                      if (g3) return g3(A8);
                      throw "both async and sync fetching of the wasm failed";
                    }(A7));
                  })(A6).then((A7) => y2.instantiate(A7, I6)).then(C2, (A7) => {
                    r2(`failed to asynchronously prepare wasm: ${A7}`), b3(A7);
                  });
                }(H2, A5, function(A6) {
                  I5(A6.instance);
                }), {};
              }();
              function P5() {
                function A5() {
                  var _a7;
                  m2 || (m2 = true, B2.calledRun = true, k2 || (d3(N2), (_a7 = B2.onRuntimeInitialized) == null ? void 0 : _a7.call(B2), function() {
                    if (B2.postRun) for ("function" == typeof B2.postRun && (B2.postRun = [B2.postRun]); B2.postRun.length; ) A6 = B2.postRun.shift(), G2.unshift(A6);
                    var A6;
                    d3(G2);
                  }()));
                }
                M2 > 0 || (function() {
                  if (B2.preRun) for ("function" == typeof B2.preRun && (B2.preRun = [B2.preRun]); B2.preRun.length; ) A6 = B2.preRun.shift(), S2.unshift(A6);
                  var A6;
                  d3(S2);
                }(), M2 > 0 || (B2.setStatus ? (B2.setStatus("Running..."), setTimeout(function() {
                  setTimeout(function() {
                    B2.setStatus("");
                  }, 1), A5();
                }, 1)) : A5()));
              }
              if (B2._crypto_aead_aegis128l_keybytes = () => (B2._crypto_aead_aegis128l_keybytes = L2.g)(), B2._crypto_aead_aegis128l_nsecbytes = () => (B2._crypto_aead_aegis128l_nsecbytes = L2.h)(), B2._crypto_aead_aegis128l_npubbytes = () => (B2._crypto_aead_aegis128l_npubbytes = L2.i)(), B2._crypto_aead_aegis128l_abytes = () => (B2._crypto_aead_aegis128l_abytes = L2.j)(), B2._crypto_aead_aegis128l_messagebytes_max = () => (B2._crypto_aead_aegis128l_messagebytes_max = L2.k)(), B2._crypto_aead_aegis128l_keygen = (A5) => (B2._crypto_aead_aegis128l_keygen = L2.l)(A5), B2._crypto_aead_aegis128l_encrypt = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_aegis128l_encrypt = L2.m)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_aegis128l_encrypt_detached = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3, t3) => (B2._crypto_aead_aegis128l_encrypt_detached = L2.n)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3, t3), B2._crypto_aead_aegis128l_decrypt = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_aegis128l_decrypt = L2.o)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_aegis128l_decrypt_detached = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_aegis128l_decrypt_detached = L2.p)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_aegis256_keybytes = () => (B2._crypto_aead_aegis256_keybytes = L2.q)(), B2._crypto_aead_aegis256_nsecbytes = () => (B2._crypto_aead_aegis256_nsecbytes = L2.r)(), B2._crypto_aead_aegis256_npubbytes = () => (B2._crypto_aead_aegis256_npubbytes = L2.s)(), B2._crypto_aead_aegis256_abytes = () => (B2._crypto_aead_aegis256_abytes = L2.t)(), B2._crypto_aead_aegis256_messagebytes_max = () => (B2._crypto_aead_aegis256_messagebytes_max = L2.u)(), B2._crypto_aead_aegis256_keygen = (A5) => (B2._crypto_aead_aegis256_keygen = L2.v)(A5), B2._crypto_aead_aegis256_encrypt = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_aegis256_encrypt = L2.w)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_aegis256_encrypt_detached = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3, t3) => (B2._crypto_aead_aegis256_encrypt_detached = L2.x)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3, t3), B2._crypto_aead_aegis256_decrypt = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_aegis256_decrypt = L2.y)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_aegis256_decrypt_detached = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_aegis256_decrypt_detached = L2.z)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_aes256gcm_is_available = () => (B2._crypto_aead_aes256gcm_is_available = L2.A)(), B2._crypto_aead_chacha20poly1305_encrypt_detached = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3, t3) => (B2._crypto_aead_chacha20poly1305_encrypt_detached = L2.B)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3, t3), B2._crypto_aead_chacha20poly1305_encrypt = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_chacha20poly1305_encrypt = L2.C)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_chacha20poly1305_ietf_encrypt_detached = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3, t3) => (B2._crypto_aead_chacha20poly1305_ietf_encrypt_detached = L2.D)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3, t3), B2._crypto_aead_chacha20poly1305_ietf_encrypt = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_chacha20poly1305_ietf_encrypt = L2.E)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_chacha20poly1305_decrypt_detached = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_chacha20poly1305_decrypt_detached = L2.F)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_chacha20poly1305_decrypt = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_chacha20poly1305_decrypt = L2.G)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_chacha20poly1305_ietf_decrypt_detached = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_chacha20poly1305_ietf_decrypt_detached = L2.H)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_chacha20poly1305_ietf_decrypt = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_chacha20poly1305_ietf_decrypt = L2.I)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_chacha20poly1305_ietf_keybytes = () => (B2._crypto_aead_chacha20poly1305_ietf_keybytes = L2.J)(), B2._crypto_aead_chacha20poly1305_ietf_npubbytes = () => (B2._crypto_aead_chacha20poly1305_ietf_npubbytes = L2.K)(), B2._crypto_aead_chacha20poly1305_ietf_nsecbytes = () => (B2._crypto_aead_chacha20poly1305_ietf_nsecbytes = L2.L)(), B2._crypto_aead_chacha20poly1305_ietf_abytes = () => (B2._crypto_aead_chacha20poly1305_ietf_abytes = L2.M)(), B2._crypto_aead_chacha20poly1305_ietf_messagebytes_max = () => (B2._crypto_aead_chacha20poly1305_ietf_messagebytes_max = L2.N)(), B2._crypto_aead_chacha20poly1305_ietf_keygen = (A5) => (B2._crypto_aead_chacha20poly1305_ietf_keygen = L2.O)(A5), B2._crypto_aead_chacha20poly1305_keybytes = () => (B2._crypto_aead_chacha20poly1305_keybytes = L2.P)(), B2._crypto_aead_chacha20poly1305_npubbytes = () => (B2._crypto_aead_chacha20poly1305_npubbytes = L2.Q)(), B2._crypto_aead_chacha20poly1305_nsecbytes = () => (B2._crypto_aead_chacha20poly1305_nsecbytes = L2.R)(), B2._crypto_aead_chacha20poly1305_abytes = () => (B2._crypto_aead_chacha20poly1305_abytes = L2.S)(), B2._crypto_aead_chacha20poly1305_messagebytes_max = () => (B2._crypto_aead_chacha20poly1305_messagebytes_max = L2.T)(), B2._crypto_aead_chacha20poly1305_keygen = (A5) => (B2._crypto_aead_chacha20poly1305_keygen = L2.U)(A5), B2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3, t3) => (B2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = L2.V)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3, t3), B2._crypto_aead_xchacha20poly1305_ietf_encrypt = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_xchacha20poly1305_ietf_encrypt = L2.W)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = L2.X)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_xchacha20poly1305_ietf_decrypt = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_aead_xchacha20poly1305_ietf_decrypt = L2.Y)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_aead_xchacha20poly1305_ietf_keybytes = () => (B2._crypto_aead_xchacha20poly1305_ietf_keybytes = L2.Z)(), B2._crypto_aead_xchacha20poly1305_ietf_npubbytes = () => (B2._crypto_aead_xchacha20poly1305_ietf_npubbytes = L2._)(), B2._crypto_aead_xchacha20poly1305_ietf_nsecbytes = () => (B2._crypto_aead_xchacha20poly1305_ietf_nsecbytes = L2.$)(), B2._crypto_aead_xchacha20poly1305_ietf_abytes = () => (B2._crypto_aead_xchacha20poly1305_ietf_abytes = L2.aa)(), B2._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = () => (B2._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = L2.ba)(), B2._crypto_aead_xchacha20poly1305_ietf_keygen = (A5) => (B2._crypto_aead_xchacha20poly1305_ietf_keygen = L2.ca)(A5), B2._crypto_auth_bytes = () => (B2._crypto_auth_bytes = L2.da)(), B2._crypto_auth_keybytes = () => (B2._crypto_auth_keybytes = L2.ea)(), B2._crypto_auth_primitive = () => (B2._crypto_auth_primitive = L2.fa)(), B2._crypto_auth = (A5, I5, g4, C2, Q4) => (B2._crypto_auth = L2.ga)(A5, I5, g4, C2, Q4), B2._crypto_auth_verify = (A5, I5, g4, C2, Q4) => (B2._crypto_auth_verify = L2.ha)(A5, I5, g4, C2, Q4), B2._crypto_auth_keygen = (A5) => (B2._crypto_auth_keygen = L2.ia)(A5), B2._crypto_auth_hmacsha256_bytes = () => (B2._crypto_auth_hmacsha256_bytes = L2.ja)(), B2._crypto_auth_hmacsha256_keybytes = () => (B2._crypto_auth_hmacsha256_keybytes = L2.ka)(), B2._crypto_auth_hmacsha256_statebytes = () => (B2._crypto_auth_hmacsha256_statebytes = L2.la)(), B2._crypto_auth_hmacsha256_keygen = (A5) => (B2._crypto_auth_hmacsha256_keygen = L2.ma)(A5), B2._crypto_auth_hmacsha256_init = (A5, I5, g4) => (B2._crypto_auth_hmacsha256_init = L2.na)(A5, I5, g4), B2._crypto_auth_hmacsha256_update = (A5, I5, g4, C2) => (B2._crypto_auth_hmacsha256_update = L2.oa)(A5, I5, g4, C2), B2._crypto_auth_hmacsha256_final = (A5, I5) => (B2._crypto_auth_hmacsha256_final = L2.pa)(A5, I5), B2._crypto_auth_hmacsha256 = (A5, I5, g4, C2, Q4) => (B2._crypto_auth_hmacsha256 = L2.qa)(A5, I5, g4, C2, Q4), B2._crypto_auth_hmacsha256_verify = (A5, I5, g4, C2, Q4) => (B2._crypto_auth_hmacsha256_verify = L2.ra)(A5, I5, g4, C2, Q4), B2._crypto_auth_hmacsha512_bytes = () => (B2._crypto_auth_hmacsha512_bytes = L2.sa)(), B2._crypto_auth_hmacsha512_keybytes = () => (B2._crypto_auth_hmacsha512_keybytes = L2.ta)(), B2._crypto_auth_hmacsha512_statebytes = () => (B2._crypto_auth_hmacsha512_statebytes = L2.ua)(), B2._crypto_auth_hmacsha512_keygen = (A5) => (B2._crypto_auth_hmacsha512_keygen = L2.va)(A5), B2._crypto_auth_hmacsha512_init = (A5, I5, g4) => (B2._crypto_auth_hmacsha512_init = L2.wa)(A5, I5, g4), B2._crypto_auth_hmacsha512_update = (A5, I5, g4, C2) => (B2._crypto_auth_hmacsha512_update = L2.xa)(A5, I5, g4, C2), B2._crypto_auth_hmacsha512_final = (A5, I5) => (B2._crypto_auth_hmacsha512_final = L2.ya)(A5, I5), B2._crypto_auth_hmacsha512 = (A5, I5, g4, C2, Q4) => (B2._crypto_auth_hmacsha512 = L2.za)(A5, I5, g4, C2, Q4), B2._crypto_auth_hmacsha512_verify = (A5, I5, g4, C2, Q4) => (B2._crypto_auth_hmacsha512_verify = L2.Aa)(A5, I5, g4, C2, Q4), B2._crypto_auth_hmacsha512256_bytes = () => (B2._crypto_auth_hmacsha512256_bytes = L2.Ba)(), B2._crypto_auth_hmacsha512256_keybytes = () => (B2._crypto_auth_hmacsha512256_keybytes = L2.Ca)(), B2._crypto_auth_hmacsha512256_statebytes = () => (B2._crypto_auth_hmacsha512256_statebytes = L2.Da)(), B2._crypto_auth_hmacsha512256_keygen = (A5) => (B2._crypto_auth_hmacsha512256_keygen = L2.Ea)(A5), B2._crypto_auth_hmacsha512256_init = (A5, I5, g4) => (B2._crypto_auth_hmacsha512256_init = L2.Fa)(A5, I5, g4), B2._crypto_auth_hmacsha512256_update = (A5, I5, g4, C2) => (B2._crypto_auth_hmacsha512256_update = L2.Ga)(A5, I5, g4, C2), B2._crypto_auth_hmacsha512256_final = (A5, I5) => (B2._crypto_auth_hmacsha512256_final = L2.Ha)(A5, I5), B2._crypto_auth_hmacsha512256 = (A5, I5, g4, C2, Q4) => (B2._crypto_auth_hmacsha512256 = L2.Ia)(A5, I5, g4, C2, Q4), B2._crypto_auth_hmacsha512256_verify = (A5, I5, g4, C2, Q4) => (B2._crypto_auth_hmacsha512256_verify = L2.Ja)(A5, I5, g4, C2, Q4), B2._crypto_box_seedbytes = () => (B2._crypto_box_seedbytes = L2.Ka)(), B2._crypto_box_publickeybytes = () => (B2._crypto_box_publickeybytes = L2.La)(), B2._crypto_box_secretkeybytes = () => (B2._crypto_box_secretkeybytes = L2.Ma)(), B2._crypto_box_beforenmbytes = () => (B2._crypto_box_beforenmbytes = L2.Na)(), B2._crypto_box_noncebytes = () => (B2._crypto_box_noncebytes = L2.Oa)(), B2._crypto_box_zerobytes = () => (B2._crypto_box_zerobytes = L2.Pa)(), B2._crypto_box_boxzerobytes = () => (B2._crypto_box_boxzerobytes = L2.Qa)(), B2._crypto_box_macbytes = () => (B2._crypto_box_macbytes = L2.Ra)(), B2._crypto_box_messagebytes_max = () => (B2._crypto_box_messagebytes_max = L2.Sa)(), B2._crypto_box_primitive = () => (B2._crypto_box_primitive = L2.Ta)(), B2._crypto_box_seed_keypair = (A5, I5, g4) => (B2._crypto_box_seed_keypair = L2.Ua)(A5, I5, g4), B2._crypto_box_keypair = (A5, I5) => (B2._crypto_box_keypair = L2.Va)(A5, I5), B2._crypto_box_beforenm = (A5, I5, g4) => (B2._crypto_box_beforenm = L2.Wa)(A5, I5, g4), B2._crypto_box_afternm = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_box_afternm = L2.Xa)(A5, I5, g4, C2, Q4, i4), B2._crypto_box_open_afternm = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_box_open_afternm = L2.Ya)(A5, I5, g4, C2, Q4, i4), B2._crypto_box = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_box = L2.Za)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_box_open = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_box_open = L2._a)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_box_detached_afternm = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_box_detached_afternm = L2.$a)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_box_detached = (A5, I5, g4, C2, Q4, i4, o3, E3) => (B2._crypto_box_detached = L2.ab)(A5, I5, g4, C2, Q4, i4, o3, E3), B2._crypto_box_easy_afternm = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_box_easy_afternm = L2.bb)(A5, I5, g4, C2, Q4, i4), B2._crypto_box_easy = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_box_easy = L2.cb)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_box_open_detached_afternm = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_box_open_detached_afternm = L2.db)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_box_open_detached = (A5, I5, g4, C2, Q4, i4, o3, E3) => (B2._crypto_box_open_detached = L2.eb)(A5, I5, g4, C2, Q4, i4, o3, E3), B2._crypto_box_open_easy_afternm = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_box_open_easy_afternm = L2.fb)(A5, I5, g4, C2, Q4, i4), B2._crypto_box_open_easy = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_box_open_easy = L2.gb)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_box_seal = (A5, I5, g4, C2, Q4) => (B2._crypto_box_seal = L2.hb)(A5, I5, g4, C2, Q4), B2._crypto_box_seal_open = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_box_seal_open = L2.ib)(A5, I5, g4, C2, Q4, i4), B2._crypto_box_sealbytes = () => (B2._crypto_box_sealbytes = L2.jb)(), B2._crypto_box_curve25519xsalsa20poly1305_seed_keypair = (A5, I5, g4) => (B2._crypto_box_curve25519xsalsa20poly1305_seed_keypair = L2.kb)(A5, I5, g4), B2._crypto_box_curve25519xsalsa20poly1305_keypair = (A5, I5) => (B2._crypto_box_curve25519xsalsa20poly1305_keypair = L2.lb)(A5, I5), B2._crypto_box_curve25519xsalsa20poly1305_beforenm = (A5, I5, g4) => (B2._crypto_box_curve25519xsalsa20poly1305_beforenm = L2.mb)(A5, I5, g4), B2._crypto_box_curve25519xsalsa20poly1305_afternm = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_box_curve25519xsalsa20poly1305_afternm = L2.nb)(A5, I5, g4, C2, Q4, i4), B2._crypto_box_curve25519xsalsa20poly1305_open_afternm = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_box_curve25519xsalsa20poly1305_open_afternm = L2.ob)(A5, I5, g4, C2, Q4, i4), B2._crypto_box_curve25519xsalsa20poly1305 = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_box_curve25519xsalsa20poly1305 = L2.pb)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_box_curve25519xsalsa20poly1305_open = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_box_curve25519xsalsa20poly1305_open = L2.qb)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_box_curve25519xsalsa20poly1305_seedbytes = () => (B2._crypto_box_curve25519xsalsa20poly1305_seedbytes = L2.rb)(), B2._crypto_box_curve25519xsalsa20poly1305_publickeybytes = () => (B2._crypto_box_curve25519xsalsa20poly1305_publickeybytes = L2.sb)(), B2._crypto_box_curve25519xsalsa20poly1305_secretkeybytes = () => (B2._crypto_box_curve25519xsalsa20poly1305_secretkeybytes = L2.tb)(), B2._crypto_box_curve25519xsalsa20poly1305_beforenmbytes = () => (B2._crypto_box_curve25519xsalsa20poly1305_beforenmbytes = L2.ub)(), B2._crypto_box_curve25519xsalsa20poly1305_noncebytes = () => (B2._crypto_box_curve25519xsalsa20poly1305_noncebytes = L2.vb)(), B2._crypto_box_curve25519xsalsa20poly1305_zerobytes = () => (B2._crypto_box_curve25519xsalsa20poly1305_zerobytes = L2.wb)(), B2._crypto_box_curve25519xsalsa20poly1305_boxzerobytes = () => (B2._crypto_box_curve25519xsalsa20poly1305_boxzerobytes = L2.xb)(), B2._crypto_box_curve25519xsalsa20poly1305_macbytes = () => (B2._crypto_box_curve25519xsalsa20poly1305_macbytes = L2.yb)(), B2._crypto_box_curve25519xsalsa20poly1305_messagebytes_max = () => (B2._crypto_box_curve25519xsalsa20poly1305_messagebytes_max = L2.zb)(), B2._crypto_core_hchacha20 = (A5, I5, g4, C2) => (B2._crypto_core_hchacha20 = L2.Ab)(A5, I5, g4, C2), B2._crypto_core_hchacha20_outputbytes = () => (B2._crypto_core_hchacha20_outputbytes = L2.Bb)(), B2._crypto_core_hchacha20_inputbytes = () => (B2._crypto_core_hchacha20_inputbytes = L2.Cb)(), B2._crypto_core_hchacha20_keybytes = () => (B2._crypto_core_hchacha20_keybytes = L2.Db)(), B2._crypto_core_hchacha20_constbytes = () => (B2._crypto_core_hchacha20_constbytes = L2.Eb)(), B2._crypto_core_hsalsa20 = (A5, I5, g4, C2) => (B2._crypto_core_hsalsa20 = L2.Fb)(A5, I5, g4, C2), B2._crypto_core_hsalsa20_outputbytes = () => (B2._crypto_core_hsalsa20_outputbytes = L2.Gb)(), B2._crypto_core_hsalsa20_inputbytes = () => (B2._crypto_core_hsalsa20_inputbytes = L2.Hb)(), B2._crypto_core_hsalsa20_keybytes = () => (B2._crypto_core_hsalsa20_keybytes = L2.Ib)(), B2._crypto_core_hsalsa20_constbytes = () => (B2._crypto_core_hsalsa20_constbytes = L2.Jb)(), B2._crypto_core_salsa20 = (A5, I5, g4, C2) => (B2._crypto_core_salsa20 = L2.Kb)(A5, I5, g4, C2), B2._crypto_core_salsa20_outputbytes = () => (B2._crypto_core_salsa20_outputbytes = L2.Lb)(), B2._crypto_core_salsa20_inputbytes = () => (B2._crypto_core_salsa20_inputbytes = L2.Mb)(), B2._crypto_core_salsa20_keybytes = () => (B2._crypto_core_salsa20_keybytes = L2.Nb)(), B2._crypto_core_salsa20_constbytes = () => (B2._crypto_core_salsa20_constbytes = L2.Ob)(), B2._crypto_core_salsa2012 = (A5, I5, g4, C2) => (B2._crypto_core_salsa2012 = L2.Pb)(A5, I5, g4, C2), B2._crypto_core_salsa2012_outputbytes = () => (B2._crypto_core_salsa2012_outputbytes = L2.Qb)(), B2._crypto_core_salsa2012_inputbytes = () => (B2._crypto_core_salsa2012_inputbytes = L2.Rb)(), B2._crypto_core_salsa2012_keybytes = () => (B2._crypto_core_salsa2012_keybytes = L2.Sb)(), B2._crypto_core_salsa2012_constbytes = () => (B2._crypto_core_salsa2012_constbytes = L2.Tb)(), B2._crypto_core_salsa208 = (A5, I5, g4, C2) => (B2._crypto_core_salsa208 = L2.Ub)(A5, I5, g4, C2), B2._crypto_core_salsa208_outputbytes = () => (B2._crypto_core_salsa208_outputbytes = L2.Vb)(), B2._crypto_core_salsa208_inputbytes = () => (B2._crypto_core_salsa208_inputbytes = L2.Wb)(), B2._crypto_core_salsa208_keybytes = () => (B2._crypto_core_salsa208_keybytes = L2.Xb)(), B2._crypto_core_salsa208_constbytes = () => (B2._crypto_core_salsa208_constbytes = L2.Yb)(), B2._crypto_generichash_bytes_min = () => (B2._crypto_generichash_bytes_min = L2.Zb)(), B2._crypto_generichash_bytes_max = () => (B2._crypto_generichash_bytes_max = L2._b)(), B2._crypto_generichash_bytes = () => (B2._crypto_generichash_bytes = L2.$b)(), B2._crypto_generichash_keybytes_min = () => (B2._crypto_generichash_keybytes_min = L2.ac)(), B2._crypto_generichash_keybytes_max = () => (B2._crypto_generichash_keybytes_max = L2.bc)(), B2._crypto_generichash_keybytes = () => (B2._crypto_generichash_keybytes = L2.cc)(), B2._crypto_generichash_primitive = () => (B2._crypto_generichash_primitive = L2.dc)(), B2._crypto_generichash_statebytes = () => (B2._crypto_generichash_statebytes = L2.ec)(), B2._crypto_generichash = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_generichash = L2.fc)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_generichash_init = (A5, I5, g4, C2) => (B2._crypto_generichash_init = L2.gc)(A5, I5, g4, C2), B2._crypto_generichash_update = (A5, I5, g4, C2) => (B2._crypto_generichash_update = L2.hc)(A5, I5, g4, C2), B2._crypto_generichash_final = (A5, I5, g4) => (B2._crypto_generichash_final = L2.ic)(A5, I5, g4), B2._crypto_generichash_keygen = (A5) => (B2._crypto_generichash_keygen = L2.jc)(A5), B2._crypto_generichash_blake2b_bytes_min = () => (B2._crypto_generichash_blake2b_bytes_min = L2.kc)(), B2._crypto_generichash_blake2b_bytes_max = () => (B2._crypto_generichash_blake2b_bytes_max = L2.lc)(), B2._crypto_generichash_blake2b_bytes = () => (B2._crypto_generichash_blake2b_bytes = L2.mc)(), B2._crypto_generichash_blake2b_keybytes_min = () => (B2._crypto_generichash_blake2b_keybytes_min = L2.nc)(), B2._crypto_generichash_blake2b_keybytes_max = () => (B2._crypto_generichash_blake2b_keybytes_max = L2.oc)(), B2._crypto_generichash_blake2b_keybytes = () => (B2._crypto_generichash_blake2b_keybytes = L2.pc)(), B2._crypto_generichash_blake2b_saltbytes = () => (B2._crypto_generichash_blake2b_saltbytes = L2.qc)(), B2._crypto_generichash_blake2b_personalbytes = () => (B2._crypto_generichash_blake2b_personalbytes = L2.rc)(), B2._crypto_generichash_blake2b_statebytes = () => (B2._crypto_generichash_blake2b_statebytes = L2.sc)(), B2._crypto_generichash_blake2b_keygen = (A5) => (B2._crypto_generichash_blake2b_keygen = L2.tc)(A5), B2._crypto_generichash_blake2b = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_generichash_blake2b = L2.uc)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_generichash_blake2b_salt_personal = (A5, I5, g4, C2, Q4, i4, o3, E3, a3) => (B2._crypto_generichash_blake2b_salt_personal = L2.vc)(A5, I5, g4, C2, Q4, i4, o3, E3, a3), B2._crypto_generichash_blake2b_init = (A5, I5, g4, C2) => (B2._crypto_generichash_blake2b_init = L2.wc)(A5, I5, g4, C2), B2._crypto_generichash_blake2b_init_salt_personal = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_generichash_blake2b_init_salt_personal = L2.xc)(A5, I5, g4, C2, Q4, i4), B2._crypto_generichash_blake2b_update = (A5, I5, g4, C2) => (B2._crypto_generichash_blake2b_update = L2.yc)(A5, I5, g4, C2), B2._crypto_generichash_blake2b_final = (A5, I5, g4) => (B2._crypto_generichash_blake2b_final = L2.zc)(A5, I5, g4), B2._crypto_hash_bytes = () => (B2._crypto_hash_bytes = L2.Ac)(), B2._crypto_hash = (A5, I5, g4, C2) => (B2._crypto_hash = L2.Bc)(A5, I5, g4, C2), B2._crypto_hash_primitive = () => (B2._crypto_hash_primitive = L2.Cc)(), B2._crypto_hash_sha256_bytes = () => (B2._crypto_hash_sha256_bytes = L2.Dc)(), B2._crypto_hash_sha256_statebytes = () => (B2._crypto_hash_sha256_statebytes = L2.Ec)(), B2._crypto_hash_sha256_init = (A5) => (B2._crypto_hash_sha256_init = L2.Fc)(A5), B2._crypto_hash_sha256_update = (A5, I5, g4, C2) => (B2._crypto_hash_sha256_update = L2.Gc)(A5, I5, g4, C2), B2._crypto_hash_sha256_final = (A5, I5) => (B2._crypto_hash_sha256_final = L2.Hc)(A5, I5), B2._crypto_hash_sha256 = (A5, I5, g4, C2) => (B2._crypto_hash_sha256 = L2.Ic)(A5, I5, g4, C2), B2._crypto_hash_sha512_bytes = () => (B2._crypto_hash_sha512_bytes = L2.Jc)(), B2._crypto_hash_sha512_statebytes = () => (B2._crypto_hash_sha512_statebytes = L2.Kc)(), B2._crypto_hash_sha512_init = (A5) => (B2._crypto_hash_sha512_init = L2.Lc)(A5), B2._crypto_hash_sha512_update = (A5, I5, g4, C2) => (B2._crypto_hash_sha512_update = L2.Mc)(A5, I5, g4, C2), B2._crypto_hash_sha512_final = (A5, I5) => (B2._crypto_hash_sha512_final = L2.Nc)(A5, I5), B2._crypto_hash_sha512 = (A5, I5, g4, C2) => (B2._crypto_hash_sha512 = L2.Oc)(A5, I5, g4, C2), B2._crypto_kdf_blake2b_bytes_min = () => (B2._crypto_kdf_blake2b_bytes_min = L2.Pc)(), B2._crypto_kdf_blake2b_bytes_max = () => (B2._crypto_kdf_blake2b_bytes_max = L2.Qc)(), B2._crypto_kdf_blake2b_contextbytes = () => (B2._crypto_kdf_blake2b_contextbytes = L2.Rc)(), B2._crypto_kdf_blake2b_keybytes = () => (B2._crypto_kdf_blake2b_keybytes = L2.Sc)(), B2._crypto_kdf_blake2b_derive_from_key = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_kdf_blake2b_derive_from_key = L2.Tc)(A5, I5, g4, C2, Q4, i4), B2._crypto_kdf_primitive = () => (B2._crypto_kdf_primitive = L2.Uc)(), B2._crypto_kdf_bytes_min = () => (B2._crypto_kdf_bytes_min = L2.Vc)(), B2._crypto_kdf_bytes_max = () => (B2._crypto_kdf_bytes_max = L2.Wc)(), B2._crypto_kdf_contextbytes = () => (B2._crypto_kdf_contextbytes = L2.Xc)(), B2._crypto_kdf_keybytes = () => (B2._crypto_kdf_keybytes = L2.Yc)(), B2._crypto_kdf_derive_from_key = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_kdf_derive_from_key = L2.Zc)(A5, I5, g4, C2, Q4, i4), B2._crypto_kdf_keygen = (A5) => (B2._crypto_kdf_keygen = L2._c)(A5), B2._crypto_kdf_hkdf_sha256_extract_init = (A5, I5, g4) => (B2._crypto_kdf_hkdf_sha256_extract_init = L2.$c)(A5, I5, g4), B2._crypto_kdf_hkdf_sha256_extract_update = (A5, I5, g4) => (B2._crypto_kdf_hkdf_sha256_extract_update = L2.ad)(A5, I5, g4), B2._crypto_kdf_hkdf_sha256_extract_final = (A5, I5) => (B2._crypto_kdf_hkdf_sha256_extract_final = L2.bd)(A5, I5), B2._crypto_kdf_hkdf_sha256_extract = (A5, I5, g4, C2, Q4) => (B2._crypto_kdf_hkdf_sha256_extract = L2.cd)(A5, I5, g4, C2, Q4), B2._crypto_kdf_hkdf_sha256_keygen = (A5) => (B2._crypto_kdf_hkdf_sha256_keygen = L2.dd)(A5), B2._crypto_kdf_hkdf_sha256_expand = (A5, I5, g4, C2, Q4) => (B2._crypto_kdf_hkdf_sha256_expand = L2.ed)(A5, I5, g4, C2, Q4), B2._crypto_kdf_hkdf_sha256_keybytes = () => (B2._crypto_kdf_hkdf_sha256_keybytes = L2.fd)(), B2._crypto_kdf_hkdf_sha256_bytes_min = () => (B2._crypto_kdf_hkdf_sha256_bytes_min = L2.gd)(), B2._crypto_kdf_hkdf_sha256_bytes_max = () => (B2._crypto_kdf_hkdf_sha256_bytes_max = L2.hd)(), B2._crypto_kdf_hkdf_sha256_statebytes = () => (B2._crypto_kdf_hkdf_sha256_statebytes = L2.id)(), B2._crypto_kdf_hkdf_sha512_extract_init = (A5, I5, g4) => (B2._crypto_kdf_hkdf_sha512_extract_init = L2.jd)(A5, I5, g4), B2._crypto_kdf_hkdf_sha512_extract_update = (A5, I5, g4) => (B2._crypto_kdf_hkdf_sha512_extract_update = L2.kd)(A5, I5, g4), B2._crypto_kdf_hkdf_sha512_extract_final = (A5, I5) => (B2._crypto_kdf_hkdf_sha512_extract_final = L2.ld)(A5, I5), B2._crypto_kdf_hkdf_sha512_extract = (A5, I5, g4, C2, Q4) => (B2._crypto_kdf_hkdf_sha512_extract = L2.md)(A5, I5, g4, C2, Q4), B2._crypto_kdf_hkdf_sha512_keygen = (A5) => (B2._crypto_kdf_hkdf_sha512_keygen = L2.nd)(A5), B2._crypto_kdf_hkdf_sha512_expand = (A5, I5, g4, C2, Q4) => (B2._crypto_kdf_hkdf_sha512_expand = L2.od)(A5, I5, g4, C2, Q4), B2._crypto_kdf_hkdf_sha512_keybytes = () => (B2._crypto_kdf_hkdf_sha512_keybytes = L2.pd)(), B2._crypto_kdf_hkdf_sha512_bytes_min = () => (B2._crypto_kdf_hkdf_sha512_bytes_min = L2.qd)(), B2._crypto_kdf_hkdf_sha512_bytes_max = () => (B2._crypto_kdf_hkdf_sha512_bytes_max = L2.rd)(), B2._crypto_kdf_hkdf_sha512_statebytes = () => (B2._crypto_kdf_hkdf_sha512_statebytes = L2.sd)(), B2._crypto_kx_seed_keypair = (A5, I5, g4) => (B2._crypto_kx_seed_keypair = L2.td)(A5, I5, g4), B2._crypto_kx_keypair = (A5, I5) => (B2._crypto_kx_keypair = L2.ud)(A5, I5), B2._crypto_kx_client_session_keys = (A5, I5, g4, C2, Q4) => (B2._crypto_kx_client_session_keys = L2.vd)(A5, I5, g4, C2, Q4), B2._crypto_kx_server_session_keys = (A5, I5, g4, C2, Q4) => (B2._crypto_kx_server_session_keys = L2.wd)(A5, I5, g4, C2, Q4), B2._crypto_kx_publickeybytes = () => (B2._crypto_kx_publickeybytes = L2.xd)(), B2._crypto_kx_secretkeybytes = () => (B2._crypto_kx_secretkeybytes = L2.yd)(), B2._crypto_kx_seedbytes = () => (B2._crypto_kx_seedbytes = L2.zd)(), B2._crypto_kx_sessionkeybytes = () => (B2._crypto_kx_sessionkeybytes = L2.Ad)(), B2._crypto_kx_primitive = () => (B2._crypto_kx_primitive = L2.Bd)(), B2._crypto_onetimeauth_statebytes = () => (B2._crypto_onetimeauth_statebytes = L2.Cd)(), B2._crypto_onetimeauth_bytes = () => (B2._crypto_onetimeauth_bytes = L2.Dd)(), B2._crypto_onetimeauth_keybytes = () => (B2._crypto_onetimeauth_keybytes = L2.Ed)(), B2._crypto_onetimeauth = (A5, I5, g4, C2, Q4) => (B2._crypto_onetimeauth = L2.Fd)(A5, I5, g4, C2, Q4), B2._crypto_onetimeauth_verify = (A5, I5, g4, C2, Q4) => (B2._crypto_onetimeauth_verify = L2.Gd)(A5, I5, g4, C2, Q4), B2._crypto_onetimeauth_init = (A5, I5) => (B2._crypto_onetimeauth_init = L2.Hd)(A5, I5), B2._crypto_onetimeauth_update = (A5, I5, g4, C2) => (B2._crypto_onetimeauth_update = L2.Id)(A5, I5, g4, C2), B2._crypto_onetimeauth_final = (A5, I5) => (B2._crypto_onetimeauth_final = L2.Jd)(A5, I5), B2._crypto_onetimeauth_primitive = () => (B2._crypto_onetimeauth_primitive = L2.Kd)(), B2._crypto_onetimeauth_keygen = (A5) => (B2._crypto_onetimeauth_keygen = L2.Ld)(A5), B2._crypto_onetimeauth_poly1305 = (A5, I5, g4, C2, Q4) => (B2._crypto_onetimeauth_poly1305 = L2.Md)(A5, I5, g4, C2, Q4), B2._crypto_onetimeauth_poly1305_verify = (A5, I5, g4, C2, Q4) => (B2._crypto_onetimeauth_poly1305_verify = L2.Nd)(A5, I5, g4, C2, Q4), B2._crypto_onetimeauth_poly1305_init = (A5, I5) => (B2._crypto_onetimeauth_poly1305_init = L2.Od)(A5, I5), B2._crypto_onetimeauth_poly1305_update = (A5, I5, g4, C2) => (B2._crypto_onetimeauth_poly1305_update = L2.Pd)(A5, I5, g4, C2), B2._crypto_onetimeauth_poly1305_final = (A5, I5) => (B2._crypto_onetimeauth_poly1305_final = L2.Qd)(A5, I5), B2._crypto_onetimeauth_poly1305_bytes = () => (B2._crypto_onetimeauth_poly1305_bytes = L2.Rd)(), B2._crypto_onetimeauth_poly1305_keybytes = () => (B2._crypto_onetimeauth_poly1305_keybytes = L2.Sd)(), B2._crypto_onetimeauth_poly1305_statebytes = () => (B2._crypto_onetimeauth_poly1305_statebytes = L2.Td)(), B2._crypto_onetimeauth_poly1305_keygen = (A5) => (B2._crypto_onetimeauth_poly1305_keygen = L2.Ud)(A5), B2._crypto_pwhash_argon2i_alg_argon2i13 = () => (B2._crypto_pwhash_argon2i_alg_argon2i13 = L2.Vd)(), B2._crypto_pwhash_argon2i_bytes_min = () => (B2._crypto_pwhash_argon2i_bytes_min = L2.Wd)(), B2._crypto_pwhash_argon2i_bytes_max = () => (B2._crypto_pwhash_argon2i_bytes_max = L2.Xd)(), B2._crypto_pwhash_argon2i_passwd_min = () => (B2._crypto_pwhash_argon2i_passwd_min = L2.Yd)(), B2._crypto_pwhash_argon2i_passwd_max = () => (B2._crypto_pwhash_argon2i_passwd_max = L2.Zd)(), B2._crypto_pwhash_argon2i_saltbytes = () => (B2._crypto_pwhash_argon2i_saltbytes = L2._d)(), B2._crypto_pwhash_argon2i_strbytes = () => (B2._crypto_pwhash_argon2i_strbytes = L2.$d)(), B2._crypto_pwhash_argon2i_strprefix = () => (B2._crypto_pwhash_argon2i_strprefix = L2.ae)(), B2._crypto_pwhash_argon2i_opslimit_min = () => (B2._crypto_pwhash_argon2i_opslimit_min = L2.be)(), B2._crypto_pwhash_argon2i_opslimit_max = () => (B2._crypto_pwhash_argon2i_opslimit_max = L2.ce)(), B2._crypto_pwhash_argon2i_memlimit_min = () => (B2._crypto_pwhash_argon2i_memlimit_min = L2.de)(), B2._crypto_pwhash_argon2i_memlimit_max = () => (B2._crypto_pwhash_argon2i_memlimit_max = L2.ee)(), B2._crypto_pwhash_argon2i_opslimit_interactive = () => (B2._crypto_pwhash_argon2i_opslimit_interactive = L2.fe)(), B2._crypto_pwhash_argon2i_memlimit_interactive = () => (B2._crypto_pwhash_argon2i_memlimit_interactive = L2.ge)(), B2._crypto_pwhash_argon2i_opslimit_moderate = () => (B2._crypto_pwhash_argon2i_opslimit_moderate = L2.he)(), B2._crypto_pwhash_argon2i_memlimit_moderate = () => (B2._crypto_pwhash_argon2i_memlimit_moderate = L2.ie)(), B2._crypto_pwhash_argon2i_opslimit_sensitive = () => (B2._crypto_pwhash_argon2i_opslimit_sensitive = L2.je)(), B2._crypto_pwhash_argon2i_memlimit_sensitive = () => (B2._crypto_pwhash_argon2i_memlimit_sensitive = L2.ke)(), B2._crypto_pwhash_argon2i = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_pwhash_argon2i = L2.le)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_pwhash_argon2i_str = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_pwhash_argon2i_str = L2.me)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_pwhash_argon2i_str_verify = (A5, I5, g4, C2) => (B2._crypto_pwhash_argon2i_str_verify = L2.ne)(A5, I5, g4, C2), B2._crypto_pwhash_argon2i_str_needs_rehash = (A5, I5, g4, C2) => (B2._crypto_pwhash_argon2i_str_needs_rehash = L2.oe)(A5, I5, g4, C2), B2._crypto_pwhash_argon2id_str_needs_rehash = (A5, I5, g4, C2) => (B2._crypto_pwhash_argon2id_str_needs_rehash = L2.pe)(A5, I5, g4, C2), B2._crypto_pwhash_argon2id_alg_argon2id13 = () => (B2._crypto_pwhash_argon2id_alg_argon2id13 = L2.qe)(), B2._crypto_pwhash_argon2id_bytes_min = () => (B2._crypto_pwhash_argon2id_bytes_min = L2.re)(), B2._crypto_pwhash_argon2id_bytes_max = () => (B2._crypto_pwhash_argon2id_bytes_max = L2.se)(), B2._crypto_pwhash_argon2id_passwd_min = () => (B2._crypto_pwhash_argon2id_passwd_min = L2.te)(), B2._crypto_pwhash_argon2id_passwd_max = () => (B2._crypto_pwhash_argon2id_passwd_max = L2.ue)(), B2._crypto_pwhash_argon2id_saltbytes = () => (B2._crypto_pwhash_argon2id_saltbytes = L2.ve)(), B2._crypto_pwhash_argon2id_strbytes = () => (B2._crypto_pwhash_argon2id_strbytes = L2.we)(), B2._crypto_pwhash_argon2id_strprefix = () => (B2._crypto_pwhash_argon2id_strprefix = L2.xe)(), B2._crypto_pwhash_argon2id_opslimit_min = () => (B2._crypto_pwhash_argon2id_opslimit_min = L2.ye)(), B2._crypto_pwhash_argon2id_opslimit_max = () => (B2._crypto_pwhash_argon2id_opslimit_max = L2.ze)(), B2._crypto_pwhash_argon2id_memlimit_min = () => (B2._crypto_pwhash_argon2id_memlimit_min = L2.Ae)(), B2._crypto_pwhash_argon2id_memlimit_max = () => (B2._crypto_pwhash_argon2id_memlimit_max = L2.Be)(), B2._crypto_pwhash_argon2id_opslimit_interactive = () => (B2._crypto_pwhash_argon2id_opslimit_interactive = L2.Ce)(), B2._crypto_pwhash_argon2id_memlimit_interactive = () => (B2._crypto_pwhash_argon2id_memlimit_interactive = L2.De)(), B2._crypto_pwhash_argon2id_opslimit_moderate = () => (B2._crypto_pwhash_argon2id_opslimit_moderate = L2.Ee)(), B2._crypto_pwhash_argon2id_memlimit_moderate = () => (B2._crypto_pwhash_argon2id_memlimit_moderate = L2.Fe)(), B2._crypto_pwhash_argon2id_opslimit_sensitive = () => (B2._crypto_pwhash_argon2id_opslimit_sensitive = L2.Ge)(), B2._crypto_pwhash_argon2id_memlimit_sensitive = () => (B2._crypto_pwhash_argon2id_memlimit_sensitive = L2.He)(), B2._crypto_pwhash_argon2id = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_pwhash_argon2id = L2.Ie)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_pwhash_argon2id_str = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_pwhash_argon2id_str = L2.Je)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_pwhash_argon2id_str_verify = (A5, I5, g4, C2) => (B2._crypto_pwhash_argon2id_str_verify = L2.Ke)(A5, I5, g4, C2), B2._crypto_pwhash_alg_argon2i13 = () => (B2._crypto_pwhash_alg_argon2i13 = L2.Le)(), B2._crypto_pwhash_alg_argon2id13 = () => (B2._crypto_pwhash_alg_argon2id13 = L2.Me)(), B2._crypto_pwhash_alg_default = () => (B2._crypto_pwhash_alg_default = L2.Ne)(), B2._crypto_pwhash_bytes_min = () => (B2._crypto_pwhash_bytes_min = L2.Oe)(), B2._crypto_pwhash_bytes_max = () => (B2._crypto_pwhash_bytes_max = L2.Pe)(), B2._crypto_pwhash_passwd_min = () => (B2._crypto_pwhash_passwd_min = L2.Qe)(), B2._crypto_pwhash_passwd_max = () => (B2._crypto_pwhash_passwd_max = L2.Re)(), B2._crypto_pwhash_saltbytes = () => (B2._crypto_pwhash_saltbytes = L2.Se)(), B2._crypto_pwhash_strbytes = () => (B2._crypto_pwhash_strbytes = L2.Te)(), B2._crypto_pwhash_strprefix = () => (B2._crypto_pwhash_strprefix = L2.Ue)(), B2._crypto_pwhash_opslimit_min = () => (B2._crypto_pwhash_opslimit_min = L2.Ve)(), B2._crypto_pwhash_opslimit_max = () => (B2._crypto_pwhash_opslimit_max = L2.We)(), B2._crypto_pwhash_memlimit_min = () => (B2._crypto_pwhash_memlimit_min = L2.Xe)(), B2._crypto_pwhash_memlimit_max = () => (B2._crypto_pwhash_memlimit_max = L2.Ye)(), B2._crypto_pwhash_opslimit_interactive = () => (B2._crypto_pwhash_opslimit_interactive = L2.Ze)(), B2._crypto_pwhash_memlimit_interactive = () => (B2._crypto_pwhash_memlimit_interactive = L2._e)(), B2._crypto_pwhash_opslimit_moderate = () => (B2._crypto_pwhash_opslimit_moderate = L2.$e)(), B2._crypto_pwhash_memlimit_moderate = () => (B2._crypto_pwhash_memlimit_moderate = L2.af)(), B2._crypto_pwhash_opslimit_sensitive = () => (B2._crypto_pwhash_opslimit_sensitive = L2.bf)(), B2._crypto_pwhash_memlimit_sensitive = () => (B2._crypto_pwhash_memlimit_sensitive = L2.cf)(), B2._crypto_pwhash = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3) => (B2._crypto_pwhash = L2.df)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3, c3), B2._crypto_pwhash_str = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_pwhash_str = L2.ef)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_pwhash_str_alg = (A5, I5, g4, C2, Q4, i4, o3, E3) => (B2._crypto_pwhash_str_alg = L2.ff)(A5, I5, g4, C2, Q4, i4, o3, E3), B2._crypto_pwhash_str_verify = (A5, I5, g4, C2) => (B2._crypto_pwhash_str_verify = L2.gf)(A5, I5, g4, C2), B2._crypto_pwhash_str_needs_rehash = (A5, I5, g4, C2) => (B2._crypto_pwhash_str_needs_rehash = L2.hf)(A5, I5, g4, C2), B2._crypto_pwhash_primitive = () => (B2._crypto_pwhash_primitive = L2.jf)(), B2._crypto_scalarmult_primitive = () => (B2._crypto_scalarmult_primitive = L2.kf)(), B2._crypto_scalarmult_base = (A5, I5) => (B2._crypto_scalarmult_base = L2.lf)(A5, I5), B2._crypto_scalarmult = (A5, I5, g4) => (B2._crypto_scalarmult = L2.mf)(A5, I5, g4), B2._crypto_scalarmult_bytes = () => (B2._crypto_scalarmult_bytes = L2.nf)(), B2._crypto_scalarmult_scalarbytes = () => (B2._crypto_scalarmult_scalarbytes = L2.of)(), B2._crypto_scalarmult_curve25519 = (A5, I5, g4) => (B2._crypto_scalarmult_curve25519 = L2.pf)(A5, I5, g4), B2._crypto_scalarmult_curve25519_base = (A5, I5) => (B2._crypto_scalarmult_curve25519_base = L2.qf)(A5, I5), B2._crypto_scalarmult_curve25519_bytes = () => (B2._crypto_scalarmult_curve25519_bytes = L2.rf)(), B2._crypto_scalarmult_curve25519_scalarbytes = () => (B2._crypto_scalarmult_curve25519_scalarbytes = L2.sf)(), B2._crypto_secretbox_keybytes = () => (B2._crypto_secretbox_keybytes = L2.tf)(), B2._crypto_secretbox_noncebytes = () => (B2._crypto_secretbox_noncebytes = L2.uf)(), B2._crypto_secretbox_zerobytes = () => (B2._crypto_secretbox_zerobytes = L2.vf)(), B2._crypto_secretbox_boxzerobytes = () => (B2._crypto_secretbox_boxzerobytes = L2.wf)(), B2._crypto_secretbox_macbytes = () => (B2._crypto_secretbox_macbytes = L2.xf)(), B2._crypto_secretbox_messagebytes_max = () => (B2._crypto_secretbox_messagebytes_max = L2.yf)(), B2._crypto_secretbox_primitive = () => (B2._crypto_secretbox_primitive = L2.zf)(), B2._crypto_secretbox = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_secretbox = L2.Af)(A5, I5, g4, C2, Q4, i4), B2._crypto_secretbox_open = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_secretbox_open = L2.Bf)(A5, I5, g4, C2, Q4, i4), B2._crypto_secretbox_keygen = (A5) => (B2._crypto_secretbox_keygen = L2.Cf)(A5), B2._crypto_secretbox_detached = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_secretbox_detached = L2.Df)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_secretbox_easy = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_secretbox_easy = L2.Ef)(A5, I5, g4, C2, Q4, i4), B2._crypto_secretbox_open_detached = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_secretbox_open_detached = L2.Ff)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_secretbox_open_easy = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_secretbox_open_easy = L2.Gf)(A5, I5, g4, C2, Q4, i4), B2._crypto_secretbox_xsalsa20poly1305 = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_secretbox_xsalsa20poly1305 = L2.Hf)(A5, I5, g4, C2, Q4, i4), B2._crypto_secretbox_xsalsa20poly1305_open = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_secretbox_xsalsa20poly1305_open = L2.If)(A5, I5, g4, C2, Q4, i4), B2._crypto_secretbox_xsalsa20poly1305_keybytes = () => (B2._crypto_secretbox_xsalsa20poly1305_keybytes = L2.Jf)(), B2._crypto_secretbox_xsalsa20poly1305_noncebytes = () => (B2._crypto_secretbox_xsalsa20poly1305_noncebytes = L2.Kf)(), B2._crypto_secretbox_xsalsa20poly1305_zerobytes = () => (B2._crypto_secretbox_xsalsa20poly1305_zerobytes = L2.Lf)(), B2._crypto_secretbox_xsalsa20poly1305_boxzerobytes = () => (B2._crypto_secretbox_xsalsa20poly1305_boxzerobytes = L2.Mf)(), B2._crypto_secretbox_xsalsa20poly1305_macbytes = () => (B2._crypto_secretbox_xsalsa20poly1305_macbytes = L2.Nf)(), B2._crypto_secretbox_xsalsa20poly1305_messagebytes_max = () => (B2._crypto_secretbox_xsalsa20poly1305_messagebytes_max = L2.Of)(), B2._crypto_secretbox_xsalsa20poly1305_keygen = (A5) => (B2._crypto_secretbox_xsalsa20poly1305_keygen = L2.Pf)(A5), B2._crypto_secretstream_xchacha20poly1305_keygen = (A5) => (B2._crypto_secretstream_xchacha20poly1305_keygen = L2.Qf)(A5), B2._crypto_secretstream_xchacha20poly1305_init_push = (A5, I5, g4) => (B2._crypto_secretstream_xchacha20poly1305_init_push = L2.Rf)(A5, I5, g4), B2._crypto_secretstream_xchacha20poly1305_init_pull = (A5, I5, g4) => (B2._crypto_secretstream_xchacha20poly1305_init_pull = L2.Sf)(A5, I5, g4), B2._crypto_secretstream_xchacha20poly1305_rekey = (A5) => (B2._crypto_secretstream_xchacha20poly1305_rekey = L2.Tf)(A5), B2._crypto_secretstream_xchacha20poly1305_push = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3) => (B2._crypto_secretstream_xchacha20poly1305_push = L2.Uf)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3), B2._crypto_secretstream_xchacha20poly1305_pull = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3) => (B2._crypto_secretstream_xchacha20poly1305_pull = L2.Vf)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3), B2._crypto_secretstream_xchacha20poly1305_statebytes = () => (B2._crypto_secretstream_xchacha20poly1305_statebytes = L2.Wf)(), B2._crypto_secretstream_xchacha20poly1305_abytes = () => (B2._crypto_secretstream_xchacha20poly1305_abytes = L2.Xf)(), B2._crypto_secretstream_xchacha20poly1305_headerbytes = () => (B2._crypto_secretstream_xchacha20poly1305_headerbytes = L2.Yf)(), B2._crypto_secretstream_xchacha20poly1305_keybytes = () => (B2._crypto_secretstream_xchacha20poly1305_keybytes = L2.Zf)(), B2._crypto_secretstream_xchacha20poly1305_messagebytes_max = () => (B2._crypto_secretstream_xchacha20poly1305_messagebytes_max = L2._f)(), B2._crypto_secretstream_xchacha20poly1305_tag_message = () => (B2._crypto_secretstream_xchacha20poly1305_tag_message = L2.$f)(), B2._crypto_secretstream_xchacha20poly1305_tag_push = () => (B2._crypto_secretstream_xchacha20poly1305_tag_push = L2.ag)(), B2._crypto_secretstream_xchacha20poly1305_tag_rekey = () => (B2._crypto_secretstream_xchacha20poly1305_tag_rekey = L2.bg)(), B2._crypto_secretstream_xchacha20poly1305_tag_final = () => (B2._crypto_secretstream_xchacha20poly1305_tag_final = L2.cg)(), B2._crypto_shorthash_bytes = () => (B2._crypto_shorthash_bytes = L2.dg)(), B2._crypto_shorthash_keybytes = () => (B2._crypto_shorthash_keybytes = L2.eg)(), B2._crypto_shorthash_primitive = () => (B2._crypto_shorthash_primitive = L2.fg)(), B2._crypto_shorthash = (A5, I5, g4, C2, Q4) => (B2._crypto_shorthash = L2.gg)(A5, I5, g4, C2, Q4), B2._crypto_shorthash_keygen = (A5) => (B2._crypto_shorthash_keygen = L2.hg)(A5), B2._crypto_shorthash_siphash24_bytes = () => (B2._crypto_shorthash_siphash24_bytes = L2.ig)(), B2._crypto_shorthash_siphash24_keybytes = () => (B2._crypto_shorthash_siphash24_keybytes = L2.jg)(), B2._crypto_shorthash_siphash24 = (A5, I5, g4, C2, Q4) => (B2._crypto_shorthash_siphash24 = L2.kg)(A5, I5, g4, C2, Q4), B2._crypto_sign_statebytes = () => (B2._crypto_sign_statebytes = L2.lg)(), B2._crypto_sign_bytes = () => (B2._crypto_sign_bytes = L2.mg)(), B2._crypto_sign_seedbytes = () => (B2._crypto_sign_seedbytes = L2.ng)(), B2._crypto_sign_publickeybytes = () => (B2._crypto_sign_publickeybytes = L2.og)(), B2._crypto_sign_secretkeybytes = () => (B2._crypto_sign_secretkeybytes = L2.pg)(), B2._crypto_sign_messagebytes_max = () => (B2._crypto_sign_messagebytes_max = L2.qg)(), B2._crypto_sign_primitive = () => (B2._crypto_sign_primitive = L2.rg)(), B2._crypto_sign_seed_keypair = (A5, I5, g4) => (B2._crypto_sign_seed_keypair = L2.sg)(A5, I5, g4), B2._crypto_sign_keypair = (A5, I5) => (B2._crypto_sign_keypair = L2.tg)(A5, I5), B2._crypto_sign = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_sign = L2.ug)(A5, I5, g4, C2, Q4, i4), B2._crypto_sign_open = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_sign_open = L2.vg)(A5, I5, g4, C2, Q4, i4), B2._crypto_sign_detached = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_sign_detached = L2.wg)(A5, I5, g4, C2, Q4, i4), B2._crypto_sign_verify_detached = (A5, I5, g4, C2, Q4) => (B2._crypto_sign_verify_detached = L2.xg)(A5, I5, g4, C2, Q4), B2._crypto_sign_init = (A5) => (B2._crypto_sign_init = L2.yg)(A5), B2._crypto_sign_update = (A5, I5, g4, C2) => (B2._crypto_sign_update = L2.zg)(A5, I5, g4, C2), B2._crypto_sign_final_create = (A5, I5, g4, C2) => (B2._crypto_sign_final_create = L2.Ag)(A5, I5, g4, C2), B2._crypto_sign_final_verify = (A5, I5, g4) => (B2._crypto_sign_final_verify = L2.Bg)(A5, I5, g4), B2._crypto_sign_ed25519ph_statebytes = () => (B2._crypto_sign_ed25519ph_statebytes = L2.Cg)(), B2._crypto_sign_ed25519_bytes = () => (B2._crypto_sign_ed25519_bytes = L2.Dg)(), B2._crypto_sign_ed25519_seedbytes = () => (B2._crypto_sign_ed25519_seedbytes = L2.Eg)(), B2._crypto_sign_ed25519_publickeybytes = () => (B2._crypto_sign_ed25519_publickeybytes = L2.Fg)(), B2._crypto_sign_ed25519_secretkeybytes = () => (B2._crypto_sign_ed25519_secretkeybytes = L2.Gg)(), B2._crypto_sign_ed25519_messagebytes_max = () => (B2._crypto_sign_ed25519_messagebytes_max = L2.Hg)(), B2._crypto_sign_ed25519_sk_to_seed = (A5, I5) => (B2._crypto_sign_ed25519_sk_to_seed = L2.Ig)(A5, I5), B2._crypto_sign_ed25519_sk_to_pk = (A5, I5) => (B2._crypto_sign_ed25519_sk_to_pk = L2.Jg)(A5, I5), B2._crypto_sign_ed25519ph_init = (A5) => (B2._crypto_sign_ed25519ph_init = L2.Kg)(A5), B2._crypto_sign_ed25519ph_update = (A5, I5, g4, C2) => (B2._crypto_sign_ed25519ph_update = L2.Lg)(A5, I5, g4, C2), B2._crypto_sign_ed25519ph_final_create = (A5, I5, g4, C2) => (B2._crypto_sign_ed25519ph_final_create = L2.Mg)(A5, I5, g4, C2), B2._crypto_sign_ed25519ph_final_verify = (A5, I5, g4) => (B2._crypto_sign_ed25519ph_final_verify = L2.Ng)(A5, I5, g4), B2._crypto_sign_ed25519_seed_keypair = (A5, I5, g4) => (B2._crypto_sign_ed25519_seed_keypair = L2.Og)(A5, I5, g4), B2._crypto_sign_ed25519_keypair = (A5, I5) => (B2._crypto_sign_ed25519_keypair = L2.Pg)(A5, I5), B2._crypto_sign_ed25519_pk_to_curve25519 = (A5, I5) => (B2._crypto_sign_ed25519_pk_to_curve25519 = L2.Qg)(A5, I5), B2._crypto_sign_ed25519_sk_to_curve25519 = (A5, I5) => (B2._crypto_sign_ed25519_sk_to_curve25519 = L2.Rg)(A5, I5), B2._crypto_sign_ed25519_verify_detached = (A5, I5, g4, C2, Q4) => (B2._crypto_sign_ed25519_verify_detached = L2.Sg)(A5, I5, g4, C2, Q4), B2._crypto_sign_ed25519_open = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_sign_ed25519_open = L2.Tg)(A5, I5, g4, C2, Q4, i4), B2._crypto_sign_ed25519_detached = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_sign_ed25519_detached = L2.Ug)(A5, I5, g4, C2, Q4, i4), B2._crypto_sign_ed25519 = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_sign_ed25519 = L2.Vg)(A5, I5, g4, C2, Q4, i4), B2._crypto_stream_chacha20_keybytes = () => (B2._crypto_stream_chacha20_keybytes = L2.Wg)(), B2._crypto_stream_chacha20_noncebytes = () => (B2._crypto_stream_chacha20_noncebytes = L2.Xg)(), B2._crypto_stream_chacha20_messagebytes_max = () => (B2._crypto_stream_chacha20_messagebytes_max = L2.Yg)(), B2._crypto_stream_chacha20_ietf_keybytes = () => (B2._crypto_stream_chacha20_ietf_keybytes = L2.Zg)(), B2._crypto_stream_chacha20_ietf_noncebytes = () => (B2._crypto_stream_chacha20_ietf_noncebytes = L2._g)(), B2._crypto_stream_chacha20_ietf_messagebytes_max = () => (B2._crypto_stream_chacha20_ietf_messagebytes_max = L2.$g)(), B2._crypto_stream_chacha20 = (A5, I5, g4, C2, Q4) => (B2._crypto_stream_chacha20 = L2.ah)(A5, I5, g4, C2, Q4), B2._crypto_stream_chacha20_xor_ic = (A5, I5, g4, C2, Q4, i4, o3, E3) => (B2._crypto_stream_chacha20_xor_ic = L2.bh)(A5, I5, g4, C2, Q4, i4, o3, E3), B2._crypto_stream_chacha20_xor = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_stream_chacha20_xor = L2.ch)(A5, I5, g4, C2, Q4, i4), B2._crypto_stream_chacha20_ietf = (A5, I5, g4, C2, Q4) => (B2._crypto_stream_chacha20_ietf = L2.dh)(A5, I5, g4, C2, Q4), B2._crypto_stream_chacha20_ietf_xor_ic = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_stream_chacha20_ietf_xor_ic = L2.eh)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_stream_chacha20_ietf_xor = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_stream_chacha20_ietf_xor = L2.fh)(A5, I5, g4, C2, Q4, i4), B2._crypto_stream_chacha20_ietf_keygen = (A5) => (B2._crypto_stream_chacha20_ietf_keygen = L2.gh)(A5), B2._crypto_stream_chacha20_keygen = (A5) => (B2._crypto_stream_chacha20_keygen = L2.hh)(A5), B2._crypto_stream_keybytes = () => (B2._crypto_stream_keybytes = L2.ih)(), B2._crypto_stream_noncebytes = () => (B2._crypto_stream_noncebytes = L2.jh)(), B2._crypto_stream_messagebytes_max = () => (B2._crypto_stream_messagebytes_max = L2.kh)(), B2._crypto_stream_primitive = () => (B2._crypto_stream_primitive = L2.lh)(), B2._crypto_stream = (A5, I5, g4, C2, Q4) => (B2._crypto_stream = L2.mh)(A5, I5, g4, C2, Q4), B2._crypto_stream_xor = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_stream_xor = L2.nh)(A5, I5, g4, C2, Q4, i4), B2._crypto_stream_keygen = (A5) => (B2._crypto_stream_keygen = L2.oh)(A5), B2._crypto_stream_salsa20_keybytes = () => (B2._crypto_stream_salsa20_keybytes = L2.ph)(), B2._crypto_stream_salsa20_noncebytes = () => (B2._crypto_stream_salsa20_noncebytes = L2.qh)(), B2._crypto_stream_salsa20_messagebytes_max = () => (B2._crypto_stream_salsa20_messagebytes_max = L2.rh)(), B2._crypto_stream_salsa20 = (A5, I5, g4, C2, Q4) => (B2._crypto_stream_salsa20 = L2.sh)(A5, I5, g4, C2, Q4), B2._crypto_stream_salsa20_xor_ic = (A5, I5, g4, C2, Q4, i4, o3, E3) => (B2._crypto_stream_salsa20_xor_ic = L2.th)(A5, I5, g4, C2, Q4, i4, o3, E3), B2._crypto_stream_salsa20_xor = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_stream_salsa20_xor = L2.uh)(A5, I5, g4, C2, Q4, i4), B2._crypto_stream_salsa20_keygen = (A5) => (B2._crypto_stream_salsa20_keygen = L2.vh)(A5), B2._crypto_stream_xsalsa20 = (A5, I5, g4, C2, Q4) => (B2._crypto_stream_xsalsa20 = L2.wh)(A5, I5, g4, C2, Q4), B2._crypto_stream_xsalsa20_xor_ic = (A5, I5, g4, C2, Q4, i4, o3, E3) => (B2._crypto_stream_xsalsa20_xor_ic = L2.xh)(A5, I5, g4, C2, Q4, i4, o3, E3), B2._crypto_stream_xsalsa20_xor = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_stream_xsalsa20_xor = L2.yh)(A5, I5, g4, C2, Q4, i4), B2._crypto_stream_xsalsa20_keybytes = () => (B2._crypto_stream_xsalsa20_keybytes = L2.zh)(), B2._crypto_stream_xsalsa20_noncebytes = () => (B2._crypto_stream_xsalsa20_noncebytes = L2.Ah)(), B2._crypto_stream_xsalsa20_messagebytes_max = () => (B2._crypto_stream_xsalsa20_messagebytes_max = L2.Bh)(), B2._crypto_stream_xsalsa20_keygen = (A5) => (B2._crypto_stream_xsalsa20_keygen = L2.Ch)(A5), B2._crypto_verify_16_bytes = () => (B2._crypto_verify_16_bytes = L2.Dh)(), B2._crypto_verify_32_bytes = () => (B2._crypto_verify_32_bytes = L2.Eh)(), B2._crypto_verify_64_bytes = () => (B2._crypto_verify_64_bytes = L2.Fh)(), B2._crypto_verify_16 = (A5, I5) => (B2._crypto_verify_16 = L2.Gh)(A5, I5), B2._crypto_verify_32 = (A5, I5) => (B2._crypto_verify_32 = L2.Hh)(A5, I5), B2._crypto_verify_64 = (A5, I5) => (B2._crypto_verify_64 = L2.Ih)(A5, I5), B2._randombytes_implementation_name = () => (B2._randombytes_implementation_name = L2.Jh)(), B2._randombytes_random = () => (B2._randombytes_random = L2.Kh)(), B2._randombytes_stir = () => (B2._randombytes_stir = L2.Lh)(), B2._randombytes_uniform = (A5) => (B2._randombytes_uniform = L2.Mh)(A5), B2._randombytes_buf = (A5, I5) => (B2._randombytes_buf = L2.Nh)(A5, I5), B2._randombytes_buf_deterministic = (A5, I5, g4) => (B2._randombytes_buf_deterministic = L2.Oh)(A5, I5, g4), B2._randombytes_seedbytes = () => (B2._randombytes_seedbytes = L2.Ph)(), B2._randombytes_close = () => (B2._randombytes_close = L2.Qh)(), B2._randombytes = (A5, I5, g4) => (B2._randombytes = L2.Rh)(A5, I5, g4), B2._sodium_bin2hex = (A5, I5, g4, C2) => (B2._sodium_bin2hex = L2.Sh)(A5, I5, g4, C2), B2._sodium_hex2bin = (A5, I5, g4, C2, Q4, i4, o3) => (B2._sodium_hex2bin = L2.Th)(A5, I5, g4, C2, Q4, i4, o3), B2._sodium_base64_encoded_len = (A5, I5) => (B2._sodium_base64_encoded_len = L2.Uh)(A5, I5), B2._sodium_bin2base64 = (A5, I5, g4, C2, Q4) => (B2._sodium_bin2base64 = L2.Vh)(A5, I5, g4, C2, Q4), B2._sodium_base642bin = (A5, I5, g4, C2, Q4, i4, o3, E3) => (B2._sodium_base642bin = L2.Wh)(A5, I5, g4, C2, Q4, i4, o3, E3), B2._sodium_init = () => (B2._sodium_init = L2.Xh)(), B2._sodium_pad = (A5, I5, g4, C2, Q4) => (B2._sodium_pad = L2.Yh)(A5, I5, g4, C2, Q4), B2._sodium_unpad = (A5, I5, g4, C2) => (B2._sodium_unpad = L2.Zh)(A5, I5, g4, C2), B2._sodium_version_string = () => (B2._sodium_version_string = L2._h)(), B2._sodium_library_version_major = () => (B2._sodium_library_version_major = L2.$h)(), B2._sodium_library_version_minor = () => (B2._sodium_library_version_minor = L2.ai)(), B2._sodium_library_minimal = () => (B2._sodium_library_minimal = L2.bi)(), B2._crypto_box_curve25519xchacha20poly1305_seed_keypair = (A5, I5, g4) => (B2._crypto_box_curve25519xchacha20poly1305_seed_keypair = L2.ci)(A5, I5, g4), B2._crypto_box_curve25519xchacha20poly1305_keypair = (A5, I5) => (B2._crypto_box_curve25519xchacha20poly1305_keypair = L2.di)(A5, I5), B2._crypto_box_curve25519xchacha20poly1305_beforenm = (A5, I5, g4) => (B2._crypto_box_curve25519xchacha20poly1305_beforenm = L2.ei)(A5, I5, g4), B2._crypto_box_curve25519xchacha20poly1305_detached_afternm = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_box_curve25519xchacha20poly1305_detached_afternm = L2.fi)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_box_curve25519xchacha20poly1305_detached = (A5, I5, g4, C2, Q4, i4, o3, E3) => (B2._crypto_box_curve25519xchacha20poly1305_detached = L2.gi)(A5, I5, g4, C2, Q4, i4, o3, E3), B2._crypto_box_curve25519xchacha20poly1305_easy_afternm = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_box_curve25519xchacha20poly1305_easy_afternm = L2.hi)(A5, I5, g4, C2, Q4, i4), B2._crypto_box_curve25519xchacha20poly1305_easy = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_box_curve25519xchacha20poly1305_easy = L2.ii)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_box_curve25519xchacha20poly1305_open_detached_afternm = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_box_curve25519xchacha20poly1305_open_detached_afternm = L2.ji)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_box_curve25519xchacha20poly1305_open_detached = (A5, I5, g4, C2, Q4, i4, o3, E3) => (B2._crypto_box_curve25519xchacha20poly1305_open_detached = L2.ki)(A5, I5, g4, C2, Q4, i4, o3, E3), B2._crypto_box_curve25519xchacha20poly1305_open_easy_afternm = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_box_curve25519xchacha20poly1305_open_easy_afternm = L2.li)(A5, I5, g4, C2, Q4, i4), B2._crypto_box_curve25519xchacha20poly1305_open_easy = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_box_curve25519xchacha20poly1305_open_easy = L2.mi)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_box_curve25519xchacha20poly1305_seedbytes = () => (B2._crypto_box_curve25519xchacha20poly1305_seedbytes = L2.ni)(), B2._crypto_box_curve25519xchacha20poly1305_publickeybytes = () => (B2._crypto_box_curve25519xchacha20poly1305_publickeybytes = L2.oi)(), B2._crypto_box_curve25519xchacha20poly1305_secretkeybytes = () => (B2._crypto_box_curve25519xchacha20poly1305_secretkeybytes = L2.pi)(), B2._crypto_box_curve25519xchacha20poly1305_beforenmbytes = () => (B2._crypto_box_curve25519xchacha20poly1305_beforenmbytes = L2.qi)(), B2._crypto_box_curve25519xchacha20poly1305_noncebytes = () => (B2._crypto_box_curve25519xchacha20poly1305_noncebytes = L2.ri)(), B2._crypto_box_curve25519xchacha20poly1305_macbytes = () => (B2._crypto_box_curve25519xchacha20poly1305_macbytes = L2.si)(), B2._crypto_box_curve25519xchacha20poly1305_messagebytes_max = () => (B2._crypto_box_curve25519xchacha20poly1305_messagebytes_max = L2.ti)(), B2._crypto_box_curve25519xchacha20poly1305_seal = (A5, I5, g4, C2, Q4) => (B2._crypto_box_curve25519xchacha20poly1305_seal = L2.ui)(A5, I5, g4, C2, Q4), B2._crypto_box_curve25519xchacha20poly1305_seal_open = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_box_curve25519xchacha20poly1305_seal_open = L2.vi)(A5, I5, g4, C2, Q4, i4), B2._crypto_box_curve25519xchacha20poly1305_sealbytes = () => (B2._crypto_box_curve25519xchacha20poly1305_sealbytes = L2.wi)(), B2._crypto_core_ed25519_is_valid_point = (A5) => (B2._crypto_core_ed25519_is_valid_point = L2.xi)(A5), B2._crypto_core_ed25519_add = (A5, I5, g4) => (B2._crypto_core_ed25519_add = L2.yi)(A5, I5, g4), B2._crypto_core_ed25519_sub = (A5, I5, g4) => (B2._crypto_core_ed25519_sub = L2.zi)(A5, I5, g4), B2._crypto_core_ed25519_from_uniform = (A5, I5) => (B2._crypto_core_ed25519_from_uniform = L2.Ai)(A5, I5), B2._crypto_core_ed25519_random = (A5) => (B2._crypto_core_ed25519_random = L2.Bi)(A5), B2._crypto_core_ed25519_scalar_random = (A5) => (B2._crypto_core_ed25519_scalar_random = L2.Ci)(A5), B2._crypto_core_ed25519_scalar_invert = (A5, I5) => (B2._crypto_core_ed25519_scalar_invert = L2.Di)(A5, I5), B2._crypto_core_ed25519_scalar_negate = (A5, I5) => (B2._crypto_core_ed25519_scalar_negate = L2.Ei)(A5, I5), B2._crypto_core_ed25519_scalar_complement = (A5, I5) => (B2._crypto_core_ed25519_scalar_complement = L2.Fi)(A5, I5), B2._crypto_core_ed25519_scalar_add = (A5, I5, g4) => (B2._crypto_core_ed25519_scalar_add = L2.Gi)(A5, I5, g4), B2._crypto_core_ed25519_scalar_reduce = (A5, I5) => (B2._crypto_core_ed25519_scalar_reduce = L2.Hi)(A5, I5), B2._crypto_core_ed25519_scalar_sub = (A5, I5, g4) => (B2._crypto_core_ed25519_scalar_sub = L2.Ii)(A5, I5, g4), B2._crypto_core_ed25519_scalar_mul = (A5, I5, g4) => (B2._crypto_core_ed25519_scalar_mul = L2.Ji)(A5, I5, g4), B2._crypto_core_ed25519_bytes = () => (B2._crypto_core_ed25519_bytes = L2.Ki)(), B2._crypto_core_ed25519_nonreducedscalarbytes = () => (B2._crypto_core_ed25519_nonreducedscalarbytes = L2.Li)(), B2._crypto_core_ed25519_uniformbytes = () => (B2._crypto_core_ed25519_uniformbytes = L2.Mi)(), B2._crypto_core_ed25519_hashbytes = () => (B2._crypto_core_ed25519_hashbytes = L2.Ni)(), B2._crypto_core_ed25519_scalarbytes = () => (B2._crypto_core_ed25519_scalarbytes = L2.Oi)(), B2._crypto_core_ristretto255_is_valid_point = (A5) => (B2._crypto_core_ristretto255_is_valid_point = L2.Pi)(A5), B2._crypto_core_ristretto255_add = (A5, I5, g4) => (B2._crypto_core_ristretto255_add = L2.Qi)(A5, I5, g4), B2._crypto_core_ristretto255_sub = (A5, I5, g4) => (B2._crypto_core_ristretto255_sub = L2.Ri)(A5, I5, g4), B2._crypto_core_ristretto255_from_hash = (A5, I5) => (B2._crypto_core_ristretto255_from_hash = L2.Si)(A5, I5), B2._crypto_core_ristretto255_random = (A5) => (B2._crypto_core_ristretto255_random = L2.Ti)(A5), B2._crypto_core_ristretto255_scalar_random = (A5) => (B2._crypto_core_ristretto255_scalar_random = L2.Ui)(A5), B2._crypto_core_ristretto255_scalar_invert = (A5, I5) => (B2._crypto_core_ristretto255_scalar_invert = L2.Vi)(A5, I5), B2._crypto_core_ristretto255_scalar_negate = (A5, I5) => (B2._crypto_core_ristretto255_scalar_negate = L2.Wi)(A5, I5), B2._crypto_core_ristretto255_scalar_complement = (A5, I5) => (B2._crypto_core_ristretto255_scalar_complement = L2.Xi)(A5, I5), B2._crypto_core_ristretto255_scalar_add = (A5, I5, g4) => (B2._crypto_core_ristretto255_scalar_add = L2.Yi)(A5, I5, g4), B2._crypto_core_ristretto255_scalar_sub = (A5, I5, g4) => (B2._crypto_core_ristretto255_scalar_sub = L2.Zi)(A5, I5, g4), B2._crypto_core_ristretto255_scalar_mul = (A5, I5, g4) => (B2._crypto_core_ristretto255_scalar_mul = L2._i)(A5, I5, g4), B2._crypto_core_ristretto255_scalar_reduce = (A5, I5) => (B2._crypto_core_ristretto255_scalar_reduce = L2.$i)(A5, I5), B2._crypto_core_ristretto255_bytes = () => (B2._crypto_core_ristretto255_bytes = L2.aj)(), B2._crypto_core_ristretto255_nonreducedscalarbytes = () => (B2._crypto_core_ristretto255_nonreducedscalarbytes = L2.bj)(), B2._crypto_core_ristretto255_hashbytes = () => (B2._crypto_core_ristretto255_hashbytes = L2.cj)(), B2._crypto_core_ristretto255_scalarbytes = () => (B2._crypto_core_ristretto255_scalarbytes = L2.dj)(), B2._crypto_pwhash_scryptsalsa208sha256_ll = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3) => (B2._crypto_pwhash_scryptsalsa208sha256_ll = L2.ej)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3), B2._crypto_pwhash_scryptsalsa208sha256_bytes_min = () => (B2._crypto_pwhash_scryptsalsa208sha256_bytes_min = L2.fj)(), B2._crypto_pwhash_scryptsalsa208sha256_bytes_max = () => (B2._crypto_pwhash_scryptsalsa208sha256_bytes_max = L2.gj)(), B2._crypto_pwhash_scryptsalsa208sha256_passwd_min = () => (B2._crypto_pwhash_scryptsalsa208sha256_passwd_min = L2.hj)(), B2._crypto_pwhash_scryptsalsa208sha256_passwd_max = () => (B2._crypto_pwhash_scryptsalsa208sha256_passwd_max = L2.ij)(), B2._crypto_pwhash_scryptsalsa208sha256_saltbytes = () => (B2._crypto_pwhash_scryptsalsa208sha256_saltbytes = L2.jj)(), B2._crypto_pwhash_scryptsalsa208sha256_strbytes = () => (B2._crypto_pwhash_scryptsalsa208sha256_strbytes = L2.kj)(), B2._crypto_pwhash_scryptsalsa208sha256_strprefix = () => (B2._crypto_pwhash_scryptsalsa208sha256_strprefix = L2.lj)(), B2._crypto_pwhash_scryptsalsa208sha256_opslimit_min = () => (B2._crypto_pwhash_scryptsalsa208sha256_opslimit_min = L2.mj)(), B2._crypto_pwhash_scryptsalsa208sha256_opslimit_max = () => (B2._crypto_pwhash_scryptsalsa208sha256_opslimit_max = L2.nj)(), B2._crypto_pwhash_scryptsalsa208sha256_memlimit_min = () => (B2._crypto_pwhash_scryptsalsa208sha256_memlimit_min = L2.oj)(), B2._crypto_pwhash_scryptsalsa208sha256_memlimit_max = () => (B2._crypto_pwhash_scryptsalsa208sha256_memlimit_max = L2.pj)(), B2._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive = () => (B2._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive = L2.qj)(), B2._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive = () => (B2._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive = L2.rj)(), B2._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive = () => (B2._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive = L2.sj)(), B2._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive = () => (B2._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive = L2.tj)(), B2._crypto_pwhash_scryptsalsa208sha256 = (A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3) => (B2._crypto_pwhash_scryptsalsa208sha256 = L2.uj)(A5, I5, g4, C2, Q4, i4, o3, E3, a3, _3), B2._crypto_pwhash_scryptsalsa208sha256_str = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_pwhash_scryptsalsa208sha256_str = L2.vj)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_pwhash_scryptsalsa208sha256_str_verify = (A5, I5, g4, C2) => (B2._crypto_pwhash_scryptsalsa208sha256_str_verify = L2.wj)(A5, I5, g4, C2), B2._crypto_pwhash_scryptsalsa208sha256_str_needs_rehash = (A5, I5, g4, C2) => (B2._crypto_pwhash_scryptsalsa208sha256_str_needs_rehash = L2.xj)(A5, I5, g4, C2), B2._crypto_scalarmult_ed25519 = (A5, I5, g4) => (B2._crypto_scalarmult_ed25519 = L2.yj)(A5, I5, g4), B2._crypto_scalarmult_ed25519_noclamp = (A5, I5, g4) => (B2._crypto_scalarmult_ed25519_noclamp = L2.zj)(A5, I5, g4), B2._crypto_scalarmult_ed25519_base = (A5, I5) => (B2._crypto_scalarmult_ed25519_base = L2.Aj)(A5, I5), B2._crypto_scalarmult_ed25519_base_noclamp = (A5, I5) => (B2._crypto_scalarmult_ed25519_base_noclamp = L2.Bj)(A5, I5), B2._crypto_scalarmult_ed25519_bytes = () => (B2._crypto_scalarmult_ed25519_bytes = L2.Cj)(), B2._crypto_scalarmult_ed25519_scalarbytes = () => (B2._crypto_scalarmult_ed25519_scalarbytes = L2.Dj)(), B2._crypto_scalarmult_ristretto255 = (A5, I5, g4) => (B2._crypto_scalarmult_ristretto255 = L2.Ej)(A5, I5, g4), B2._crypto_scalarmult_ristretto255_base = (A5, I5) => (B2._crypto_scalarmult_ristretto255_base = L2.Fj)(A5, I5), B2._crypto_scalarmult_ristretto255_bytes = () => (B2._crypto_scalarmult_ristretto255_bytes = L2.Gj)(), B2._crypto_scalarmult_ristretto255_scalarbytes = () => (B2._crypto_scalarmult_ristretto255_scalarbytes = L2.Hj)(), B2._crypto_secretbox_xchacha20poly1305_detached = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_secretbox_xchacha20poly1305_detached = L2.Ij)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_secretbox_xchacha20poly1305_easy = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_secretbox_xchacha20poly1305_easy = L2.Jj)(A5, I5, g4, C2, Q4, i4), B2._crypto_secretbox_xchacha20poly1305_open_detached = (A5, I5, g4, C2, Q4, i4, o3) => (B2._crypto_secretbox_xchacha20poly1305_open_detached = L2.Kj)(A5, I5, g4, C2, Q4, i4, o3), B2._crypto_secretbox_xchacha20poly1305_open_easy = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_secretbox_xchacha20poly1305_open_easy = L2.Lj)(A5, I5, g4, C2, Q4, i4), B2._crypto_secretbox_xchacha20poly1305_keybytes = () => (B2._crypto_secretbox_xchacha20poly1305_keybytes = L2.Mj)(), B2._crypto_secretbox_xchacha20poly1305_noncebytes = () => (B2._crypto_secretbox_xchacha20poly1305_noncebytes = L2.Nj)(), B2._crypto_secretbox_xchacha20poly1305_macbytes = () => (B2._crypto_secretbox_xchacha20poly1305_macbytes = L2.Oj)(), B2._crypto_secretbox_xchacha20poly1305_messagebytes_max = () => (B2._crypto_secretbox_xchacha20poly1305_messagebytes_max = L2.Pj)(), B2._crypto_shorthash_siphashx24_bytes = () => (B2._crypto_shorthash_siphashx24_bytes = L2.Qj)(), B2._crypto_shorthash_siphashx24_keybytes = () => (B2._crypto_shorthash_siphashx24_keybytes = L2.Rj)(), B2._crypto_shorthash_siphashx24 = (A5, I5, g4, C2, Q4) => (B2._crypto_shorthash_siphashx24 = L2.Sj)(A5, I5, g4, C2, Q4), B2._crypto_stream_salsa2012 = (A5, I5, g4, C2, Q4) => (B2._crypto_stream_salsa2012 = L2.Tj)(A5, I5, g4, C2, Q4), B2._crypto_stream_salsa2012_xor = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_stream_salsa2012_xor = L2.Uj)(A5, I5, g4, C2, Q4, i4), B2._crypto_stream_salsa2012_keybytes = () => (B2._crypto_stream_salsa2012_keybytes = L2.Vj)(), B2._crypto_stream_salsa2012_noncebytes = () => (B2._crypto_stream_salsa2012_noncebytes = L2.Wj)(), B2._crypto_stream_salsa2012_messagebytes_max = () => (B2._crypto_stream_salsa2012_messagebytes_max = L2.Xj)(), B2._crypto_stream_salsa2012_keygen = (A5) => (B2._crypto_stream_salsa2012_keygen = L2.Yj)(A5), B2._crypto_stream_salsa208 = (A5, I5, g4, C2, Q4) => (B2._crypto_stream_salsa208 = L2.Zj)(A5, I5, g4, C2, Q4), B2._crypto_stream_salsa208_xor = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_stream_salsa208_xor = L2._j)(A5, I5, g4, C2, Q4, i4), B2._crypto_stream_salsa208_keybytes = () => (B2._crypto_stream_salsa208_keybytes = L2.$j)(), B2._crypto_stream_salsa208_noncebytes = () => (B2._crypto_stream_salsa208_noncebytes = L2.ak)(), B2._crypto_stream_salsa208_messagebytes_max = () => (B2._crypto_stream_salsa208_messagebytes_max = L2.bk)(), B2._crypto_stream_salsa208_keygen = (A5) => (B2._crypto_stream_salsa208_keygen = L2.ck)(A5), B2._crypto_stream_xchacha20_keybytes = () => (B2._crypto_stream_xchacha20_keybytes = L2.dk)(), B2._crypto_stream_xchacha20_noncebytes = () => (B2._crypto_stream_xchacha20_noncebytes = L2.ek)(), B2._crypto_stream_xchacha20_messagebytes_max = () => (B2._crypto_stream_xchacha20_messagebytes_max = L2.fk)(), B2._crypto_stream_xchacha20 = (A5, I5, g4, C2, Q4) => (B2._crypto_stream_xchacha20 = L2.gk)(A5, I5, g4, C2, Q4), B2._crypto_stream_xchacha20_xor_ic = (A5, I5, g4, C2, Q4, i4, o3, E3) => (B2._crypto_stream_xchacha20_xor_ic = L2.hk)(A5, I5, g4, C2, Q4, i4, o3, E3), B2._crypto_stream_xchacha20_xor = (A5, I5, g4, C2, Q4, i4) => (B2._crypto_stream_xchacha20_xor = L2.ik)(A5, I5, g4, C2, Q4, i4), B2._crypto_stream_xchacha20_keygen = (A5) => (B2._crypto_stream_xchacha20_keygen = L2.jk)(A5), B2._malloc = (A5) => (B2._malloc = L2.kk)(A5), B2._free = (A5) => (B2._free = L2.lk)(A5), B2.setValue = function(A5, I5, g4 = "i8") {
                switch (g4.endsWith("*") && (g4 = "*"), g4) {
                  case "i1":
                  case "i8":
                    s2[A5] = I5;
                    break;
                  case "i16":
                    D2[A5 >> 1] = I5;
                    break;
                  case "i32":
                    f2[A5 >> 2] = I5;
                    break;
                  case "i64":
                    b3("to do setValue(i64) use WASM_BIGINT");
                  case "float":
                    w2[A5 >> 2] = I5;
                    break;
                  case "double":
                    n3[A5 >> 3] = I5;
                    break;
                  case "*":
                    p2[A5 >> 2] = I5;
                    break;
                  default:
                    b3(`invalid type for setValue: ${g4}`);
                }
              }, B2.getValue = function(A5, I5 = "i8") {
                switch (I5.endsWith("*") && (I5 = "*"), I5) {
                  case "i1":
                  case "i8":
                    return s2[A5];
                  case "i16":
                    return D2[A5 >> 1];
                  case "i32":
                    return f2[A5 >> 2];
                  case "i64":
                    b3("to do getValue(i64) use WASM_BIGINT");
                  case "float":
                    return w2[A5 >> 2];
                  case "double":
                    return n3[A5 >> 3];
                  case "*":
                    return p2[A5 >> 2];
                  default:
                    b3(`invalid type for getValue: ${I5}`);
                }
              }, B2.UTF8ToString = u2, U2 = function A5() {
                m2 || P5(), m2 || (U2 = A5);
              }, B2.preInit) for ("function" == typeof B2.preInit && (B2.preInit = [B2.preInit]); B2.preInit.length > 0; ) B2.preInit.pop()();
              P5();
            });
          };
          var g2, B = void 0 !== B ? B : {}, Q2 = "object" == typeof window, i2 = "function" == typeof importScripts, o = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, E = Object.assign({}, B), a = "";
          if (o) {
            var _ = require_fs(), c = require_path();
            a = __dirname + "/", g2 = (A4) => (A4 = Y(A4) ? new URL(A4) : c.normalize(A4), _.readFileSync(A4)), !B.thisProgram && process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"), process.argv.slice(2), "undefined" != typeof module && (module.exports = B);
          } else (Q2 || i2) && (i2 ? a = self.location.href : "undefined" != typeof document && document.currentScript && (a = document.currentScript.src), a = a.startsWith("blob:") ? "" : a.substr(0, a.replace(/[?#].*/, "").lastIndexOf("/") + 1), i2 && (g2 = (A4) => {
            var I4 = new XMLHttpRequest();
            return I4.open("GET", A4, false), I4.responseType = "arraybuffer", I4.send(null), new Uint8Array(I4.response);
          }));
          B.print;
          var t, r, e3 = B.printErr || void 0;
          Object.assign(B, E), E = null, B.arguments && B.arguments, B.thisProgram && B.thisProgram, B.quit && B.quit, B.wasmBinary && (t = B.wasmBinary);
          var y, s, h, D, f, p, w, n = false;
          function k() {
            var A4 = r.buffer;
            B.HEAP8 = y = new Int8Array(A4), B.HEAP16 = h = new Int16Array(A4), B.HEAPU8 = s = new Uint8Array(A4), B.HEAPU16 = new Uint16Array(A4), B.HEAP32 = D = new Int32Array(A4), B.HEAPU32 = f = new Uint32Array(A4), B.HEAPF32 = p = new Float32Array(A4), B.HEAPF64 = w = new Float64Array(A4);
          }
          var F = [], S = [], N = [], G = 0, M = null, K = null;
          function U(A4) {
            var _a7;
            throw (_a7 = B.onAbort) == null ? void 0 : _a7.call(B, A4), e3(A4 = "Aborted(" + A4 + ")"), n = true, A4 += ". Build with -sASSERTIONS for more info.", new WebAssembly.RuntimeError(A4);
          }
          var b2, H = "data:application/octet-stream;base64,", Y = (A4) => A4.startsWith("file://");
          function J(A4) {
            return Promise.resolve().then(() => function(A5) {
              if (A5 == b2 && t) return new Uint8Array(t);
              var I4 = function(A6) {
                if (((A7) => A7.startsWith(H))(A6)) return function(A7) {
                  if (void 0 !== o && o) {
                    var I5 = Buffer.from(A7, "base64");
                    return new Uint8Array(I5.buffer, I5.byteOffset, I5.length);
                  }
                  for (var g3 = atob(A7), C2 = new Uint8Array(g3.length), B2 = 0; B2 < g3.length; ++B2) C2[B2] = g3.charCodeAt(B2);
                  return C2;
                }(A6.slice(37));
              }(A5);
              if (I4) return I4;
              if (g2) return g2(A5);
              throw "both async and sync fetching of the wasm failed";
            }(A4));
          }
          var d2 = { 36800: () => B.getRandomValue(), 36836: () => {
            if (void 0 === B.getRandomValue) try {
              var A4 = "object" == typeof window ? window : self, I4 = void 0 !== A4.crypto ? A4.crypto : A4.msCrypto;
              I4 = void 0 === I4 ? C2 : I4;
              var g3 = function() {
                var A5 = new Uint32Array(1);
                return I4.getRandomValues(A5), A5[0] >>> 0;
              };
              g3(), B.getRandomValue = g3;
            } catch (A5) {
              try {
                var C2 = require_crypto(), Q3 = function() {
                  var A6 = C2.randomBytes(4);
                  return (A6[0] << 24 | A6[1] << 16 | A6[2] << 8 | A6[3]) >>> 0;
                };
                Q3(), B.getRandomValue = Q3;
              } catch (A6) {
                throw "No secure random number generator found";
              }
            }
          } }, m = (A4) => {
            for (; A4.length > 0; ) A4.shift()(B);
          };
          B.noExitRuntime;
          var l, u = "undefined" != typeof TextDecoder ? new TextDecoder() : void 0, x = (A4, I4) => A4 ? ((A5, I5, g3) => {
            for (var C2 = I5 + g3, B2 = I5; A5[B2] && !(B2 >= C2); ) ++B2;
            if (B2 - I5 > 16 && A5.buffer && u) return u.decode(A5.subarray(I5, B2));
            for (var Q3 = ""; I5 < B2; ) {
              var i3 = A5[I5++];
              if (128 & i3) {
                var o2 = 63 & A5[I5++];
                if (192 != (224 & i3)) {
                  var E2 = 63 & A5[I5++];
                  if ((i3 = 224 == (240 & i3) ? (15 & i3) << 12 | o2 << 6 | E2 : (7 & i3) << 18 | o2 << 12 | E2 << 6 | 63 & A5[I5++]) < 65536) Q3 += String.fromCharCode(i3);
                  else {
                    var a2 = i3 - 65536;
                    Q3 += String.fromCharCode(55296 | a2 >> 10, 56320 | 1023 & a2);
                  }
                } else Q3 += String.fromCharCode((31 & i3) << 6 | o2);
              } else Q3 += String.fromCharCode(i3);
            }
            return Q3;
          })(s, A4, I4) : "", v = [], R = (A4) => {
            var I4 = (A4 - r.buffer.byteLength + 65535) / 65536;
            try {
              return r.grow(I4), k(), 1;
            } catch (A5) {
            }
          }, L = { b: (A4, I4, g3, C2) => {
            U(`Assertion failed: ${x(A4)}, at: ` + [I4 ? x(I4) : "unknown filename", g3, C2 ? x(C2) : "unknown function"]);
          }, c: () => {
            U("");
          }, d: (A4, I4, g3) => s.copyWithin(A4, I4, I4 + g3), a: (A4, I4, g3) => ((A5, I5, g4) => {
            var C2 = ((A6, I6) => {
              var g5;
              for (v.length = 0; g5 = s[A6++]; ) {
                var C3 = 105 != g5;
                I6 += (C3 &= 112 != g5) && I6 % 8 ? 4 : 0, v.push(112 == g5 ? f[I6 >> 2] : 105 == g5 ? D[I6 >> 2] : w[I6 >> 3]), I6 += C3 ? 8 : 4;
              }
              return v;
            })(I5, g4);
            return d2[A5](...C2);
          })(A4, I4, g3), e: (A4) => {
            var I4 = s.length, g3 = 2147483648;
            if ((A4 >>>= 0) > g3) return false;
            for (var C2, B2 = 1; B2 <= 4; B2 *= 2) {
              var Q3 = I4 * (1 + 0.2 / B2);
              Q3 = Math.min(Q3, A4 + 100663296);
              var i3 = Math.min(g3, (C2 = Math.max(A4, Q3)) + (65536 - C2 % 65536) % 65536);
              if (R(i3)) return true;
            }
            return false;
          } }, P4 = function() {
            var _a7;
            var A4, I4 = { a: L };
            function g3(A5, I5) {
              return P4 = A5.exports, r = P4.f, k(), function(A6) {
                var _a8;
                if (G--, (_a8 = B.monitorRunDependencies) == null ? void 0 : _a8.call(B, G), 0 == G && (null !== M && (clearInterval(M), M = null), K)) {
                  var I6 = K;
                  K = null, I6();
                }
              }(), P4;
            }
            if (G++, (_a7 = B.monitorRunDependencies) == null ? void 0 : _a7.call(B, G), B.instantiateWasm) try {
              return B.instantiateWasm(I4, g3);
            } catch (A5) {
              return e3(`Module.instantiateWasm callback failed with error: ${A5}`), false;
            }
            return b2 || (b2 = "data:application/octet-stream;base64,"), A4 = I4, J(b2).then((I5) => WebAssembly.instantiate(I5, A4)).then(function(A5) {
              g3(A5.instance);
            }, (A5) => {
              e3(`failed to asynchronously prepare wasm: ${A5}`), U(A5);
            }), {};
          }();
          function q() {
            function A4() {
              var _a7;
              l || (l = true, B.calledRun = true, n || (m(S), (_a7 = B.onRuntimeInitialized) == null ? void 0 : _a7.call(B), function() {
                if (B.postRun) for ("function" == typeof B.postRun && (B.postRun = [B.postRun]); B.postRun.length; ) A5 = B.postRun.shift(), N.unshift(A5);
                var A5;
                m(N);
              }()));
            }
            G > 0 || (function() {
              if (B.preRun) for ("function" == typeof B.preRun && (B.preRun = [B.preRun]); B.preRun.length; ) A5 = B.preRun.shift(), F.unshift(A5);
              var A5;
              m(F);
            }(), G > 0 || (B.setStatus ? (B.setStatus("Running..."), setTimeout(function() {
              setTimeout(function() {
                B.setStatus("");
              }, 1), A4();
            }, 1)) : A4()));
          }
          if (B._crypto_aead_aegis128l_keybytes = () => (B._crypto_aead_aegis128l_keybytes = P4.g)(), B._crypto_aead_aegis128l_nsecbytes = () => (B._crypto_aead_aegis128l_nsecbytes = P4.h)(), B._crypto_aead_aegis128l_npubbytes = () => (B._crypto_aead_aegis128l_npubbytes = P4.i)(), B._crypto_aead_aegis128l_abytes = () => (B._crypto_aead_aegis128l_abytes = P4.j)(), B._crypto_aead_aegis128l_messagebytes_max = () => (B._crypto_aead_aegis128l_messagebytes_max = P4.k)(), B._crypto_aead_aegis128l_keygen = (A4) => (B._crypto_aead_aegis128l_keygen = P4.l)(A4), B._crypto_aead_aegis128l_encrypt = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_aegis128l_encrypt = P4.m)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_aegis128l_encrypt_detached = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2, t2) => (B._crypto_aead_aegis128l_encrypt_detached = P4.n)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2, t2), B._crypto_aead_aegis128l_decrypt = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_aegis128l_decrypt = P4.o)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_aegis128l_decrypt_detached = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_aegis128l_decrypt_detached = P4.p)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_aegis256_keybytes = () => (B._crypto_aead_aegis256_keybytes = P4.q)(), B._crypto_aead_aegis256_nsecbytes = () => (B._crypto_aead_aegis256_nsecbytes = P4.r)(), B._crypto_aead_aegis256_npubbytes = () => (B._crypto_aead_aegis256_npubbytes = P4.s)(), B._crypto_aead_aegis256_abytes = () => (B._crypto_aead_aegis256_abytes = P4.t)(), B._crypto_aead_aegis256_messagebytes_max = () => (B._crypto_aead_aegis256_messagebytes_max = P4.u)(), B._crypto_aead_aegis256_keygen = (A4) => (B._crypto_aead_aegis256_keygen = P4.v)(A4), B._crypto_aead_aegis256_encrypt = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_aegis256_encrypt = P4.w)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_aegis256_encrypt_detached = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2, t2) => (B._crypto_aead_aegis256_encrypt_detached = P4.x)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2, t2), B._crypto_aead_aegis256_decrypt = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_aegis256_decrypt = P4.y)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_aegis256_decrypt_detached = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_aegis256_decrypt_detached = P4.z)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_aes256gcm_is_available = () => (B._crypto_aead_aes256gcm_is_available = P4.A)(), B._crypto_aead_chacha20poly1305_encrypt_detached = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2, t2) => (B._crypto_aead_chacha20poly1305_encrypt_detached = P4.B)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2, t2), B._crypto_aead_chacha20poly1305_encrypt = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_chacha20poly1305_encrypt = P4.C)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_chacha20poly1305_ietf_encrypt_detached = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2, t2) => (B._crypto_aead_chacha20poly1305_ietf_encrypt_detached = P4.D)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2, t2), B._crypto_aead_chacha20poly1305_ietf_encrypt = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_chacha20poly1305_ietf_encrypt = P4.E)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_chacha20poly1305_decrypt_detached = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_chacha20poly1305_decrypt_detached = P4.F)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_chacha20poly1305_decrypt = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_chacha20poly1305_decrypt = P4.G)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_chacha20poly1305_ietf_decrypt_detached = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_chacha20poly1305_ietf_decrypt_detached = P4.H)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_chacha20poly1305_ietf_decrypt = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_chacha20poly1305_ietf_decrypt = P4.I)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_chacha20poly1305_ietf_keybytes = () => (B._crypto_aead_chacha20poly1305_ietf_keybytes = P4.J)(), B._crypto_aead_chacha20poly1305_ietf_npubbytes = () => (B._crypto_aead_chacha20poly1305_ietf_npubbytes = P4.K)(), B._crypto_aead_chacha20poly1305_ietf_nsecbytes = () => (B._crypto_aead_chacha20poly1305_ietf_nsecbytes = P4.L)(), B._crypto_aead_chacha20poly1305_ietf_abytes = () => (B._crypto_aead_chacha20poly1305_ietf_abytes = P4.M)(), B._crypto_aead_chacha20poly1305_ietf_messagebytes_max = () => (B._crypto_aead_chacha20poly1305_ietf_messagebytes_max = P4.N)(), B._crypto_aead_chacha20poly1305_ietf_keygen = (A4) => (B._crypto_aead_chacha20poly1305_ietf_keygen = P4.O)(A4), B._crypto_aead_chacha20poly1305_keybytes = () => (B._crypto_aead_chacha20poly1305_keybytes = P4.P)(), B._crypto_aead_chacha20poly1305_npubbytes = () => (B._crypto_aead_chacha20poly1305_npubbytes = P4.Q)(), B._crypto_aead_chacha20poly1305_nsecbytes = () => (B._crypto_aead_chacha20poly1305_nsecbytes = P4.R)(), B._crypto_aead_chacha20poly1305_abytes = () => (B._crypto_aead_chacha20poly1305_abytes = P4.S)(), B._crypto_aead_chacha20poly1305_messagebytes_max = () => (B._crypto_aead_chacha20poly1305_messagebytes_max = P4.T)(), B._crypto_aead_chacha20poly1305_keygen = (A4) => (B._crypto_aead_chacha20poly1305_keygen = P4.U)(A4), B._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2, t2) => (B._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = P4.V)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2, t2), B._crypto_aead_xchacha20poly1305_ietf_encrypt = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_xchacha20poly1305_ietf_encrypt = P4.W)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = P4.X)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_xchacha20poly1305_ietf_decrypt = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_aead_xchacha20poly1305_ietf_decrypt = P4.Y)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_aead_xchacha20poly1305_ietf_keybytes = () => (B._crypto_aead_xchacha20poly1305_ietf_keybytes = P4.Z)(), B._crypto_aead_xchacha20poly1305_ietf_npubbytes = () => (B._crypto_aead_xchacha20poly1305_ietf_npubbytes = P4._)(), B._crypto_aead_xchacha20poly1305_ietf_nsecbytes = () => (B._crypto_aead_xchacha20poly1305_ietf_nsecbytes = P4.$)(), B._crypto_aead_xchacha20poly1305_ietf_abytes = () => (B._crypto_aead_xchacha20poly1305_ietf_abytes = P4.aa)(), B._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = () => (B._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = P4.ba)(), B._crypto_aead_xchacha20poly1305_ietf_keygen = (A4) => (B._crypto_aead_xchacha20poly1305_ietf_keygen = P4.ca)(A4), B._crypto_auth_bytes = () => (B._crypto_auth_bytes = P4.da)(), B._crypto_auth_keybytes = () => (B._crypto_auth_keybytes = P4.ea)(), B._crypto_auth_primitive = () => (B._crypto_auth_primitive = P4.fa)(), B._crypto_auth = (A4, I4, g3, C2, Q3) => (B._crypto_auth = P4.ga)(A4, I4, g3, C2, Q3), B._crypto_auth_verify = (A4, I4, g3, C2, Q3) => (B._crypto_auth_verify = P4.ha)(A4, I4, g3, C2, Q3), B._crypto_auth_keygen = (A4) => (B._crypto_auth_keygen = P4.ia)(A4), B._crypto_auth_hmacsha256_bytes = () => (B._crypto_auth_hmacsha256_bytes = P4.ja)(), B._crypto_auth_hmacsha256_keybytes = () => (B._crypto_auth_hmacsha256_keybytes = P4.ka)(), B._crypto_auth_hmacsha256_statebytes = () => (B._crypto_auth_hmacsha256_statebytes = P4.la)(), B._crypto_auth_hmacsha256_keygen = (A4) => (B._crypto_auth_hmacsha256_keygen = P4.ma)(A4), B._crypto_auth_hmacsha256_init = (A4, I4, g3) => (B._crypto_auth_hmacsha256_init = P4.na)(A4, I4, g3), B._crypto_auth_hmacsha256_update = (A4, I4, g3, C2) => (B._crypto_auth_hmacsha256_update = P4.oa)(A4, I4, g3, C2), B._crypto_auth_hmacsha256_final = (A4, I4) => (B._crypto_auth_hmacsha256_final = P4.pa)(A4, I4), B._crypto_auth_hmacsha256 = (A4, I4, g3, C2, Q3) => (B._crypto_auth_hmacsha256 = P4.qa)(A4, I4, g3, C2, Q3), B._crypto_auth_hmacsha256_verify = (A4, I4, g3, C2, Q3) => (B._crypto_auth_hmacsha256_verify = P4.ra)(A4, I4, g3, C2, Q3), B._crypto_auth_hmacsha512_bytes = () => (B._crypto_auth_hmacsha512_bytes = P4.sa)(), B._crypto_auth_hmacsha512_keybytes = () => (B._crypto_auth_hmacsha512_keybytes = P4.ta)(), B._crypto_auth_hmacsha512_statebytes = () => (B._crypto_auth_hmacsha512_statebytes = P4.ua)(), B._crypto_auth_hmacsha512_keygen = (A4) => (B._crypto_auth_hmacsha512_keygen = P4.va)(A4), B._crypto_auth_hmacsha512_init = (A4, I4, g3) => (B._crypto_auth_hmacsha512_init = P4.wa)(A4, I4, g3), B._crypto_auth_hmacsha512_update = (A4, I4, g3, C2) => (B._crypto_auth_hmacsha512_update = P4.xa)(A4, I4, g3, C2), B._crypto_auth_hmacsha512_final = (A4, I4) => (B._crypto_auth_hmacsha512_final = P4.ya)(A4, I4), B._crypto_auth_hmacsha512 = (A4, I4, g3, C2, Q3) => (B._crypto_auth_hmacsha512 = P4.za)(A4, I4, g3, C2, Q3), B._crypto_auth_hmacsha512_verify = (A4, I4, g3, C2, Q3) => (B._crypto_auth_hmacsha512_verify = P4.Aa)(A4, I4, g3, C2, Q3), B._crypto_auth_hmacsha512256_bytes = () => (B._crypto_auth_hmacsha512256_bytes = P4.Ba)(), B._crypto_auth_hmacsha512256_keybytes = () => (B._crypto_auth_hmacsha512256_keybytes = P4.Ca)(), B._crypto_auth_hmacsha512256_statebytes = () => (B._crypto_auth_hmacsha512256_statebytes = P4.Da)(), B._crypto_auth_hmacsha512256_keygen = (A4) => (B._crypto_auth_hmacsha512256_keygen = P4.Ea)(A4), B._crypto_auth_hmacsha512256_init = (A4, I4, g3) => (B._crypto_auth_hmacsha512256_init = P4.Fa)(A4, I4, g3), B._crypto_auth_hmacsha512256_update = (A4, I4, g3, C2) => (B._crypto_auth_hmacsha512256_update = P4.Ga)(A4, I4, g3, C2), B._crypto_auth_hmacsha512256_final = (A4, I4) => (B._crypto_auth_hmacsha512256_final = P4.Ha)(A4, I4), B._crypto_auth_hmacsha512256 = (A4, I4, g3, C2, Q3) => (B._crypto_auth_hmacsha512256 = P4.Ia)(A4, I4, g3, C2, Q3), B._crypto_auth_hmacsha512256_verify = (A4, I4, g3, C2, Q3) => (B._crypto_auth_hmacsha512256_verify = P4.Ja)(A4, I4, g3, C2, Q3), B._crypto_box_seedbytes = () => (B._crypto_box_seedbytes = P4.Ka)(), B._crypto_box_publickeybytes = () => (B._crypto_box_publickeybytes = P4.La)(), B._crypto_box_secretkeybytes = () => (B._crypto_box_secretkeybytes = P4.Ma)(), B._crypto_box_beforenmbytes = () => (B._crypto_box_beforenmbytes = P4.Na)(), B._crypto_box_noncebytes = () => (B._crypto_box_noncebytes = P4.Oa)(), B._crypto_box_zerobytes = () => (B._crypto_box_zerobytes = P4.Pa)(), B._crypto_box_boxzerobytes = () => (B._crypto_box_boxzerobytes = P4.Qa)(), B._crypto_box_macbytes = () => (B._crypto_box_macbytes = P4.Ra)(), B._crypto_box_messagebytes_max = () => (B._crypto_box_messagebytes_max = P4.Sa)(), B._crypto_box_primitive = () => (B._crypto_box_primitive = P4.Ta)(), B._crypto_box_seed_keypair = (A4, I4, g3) => (B._crypto_box_seed_keypair = P4.Ua)(A4, I4, g3), B._crypto_box_keypair = (A4, I4) => (B._crypto_box_keypair = P4.Va)(A4, I4), B._crypto_box_beforenm = (A4, I4, g3) => (B._crypto_box_beforenm = P4.Wa)(A4, I4, g3), B._crypto_box_afternm = (A4, I4, g3, C2, Q3, i3) => (B._crypto_box_afternm = P4.Xa)(A4, I4, g3, C2, Q3, i3), B._crypto_box_open_afternm = (A4, I4, g3, C2, Q3, i3) => (B._crypto_box_open_afternm = P4.Ya)(A4, I4, g3, C2, Q3, i3), B._crypto_box = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_box = P4.Za)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_box_open = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_box_open = P4._a)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_box_detached_afternm = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_box_detached_afternm = P4.$a)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_box_detached = (A4, I4, g3, C2, Q3, i3, o2, E2) => (B._crypto_box_detached = P4.ab)(A4, I4, g3, C2, Q3, i3, o2, E2), B._crypto_box_easy_afternm = (A4, I4, g3, C2, Q3, i3) => (B._crypto_box_easy_afternm = P4.bb)(A4, I4, g3, C2, Q3, i3), B._crypto_box_easy = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_box_easy = P4.cb)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_box_open_detached_afternm = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_box_open_detached_afternm = P4.db)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_box_open_detached = (A4, I4, g3, C2, Q3, i3, o2, E2) => (B._crypto_box_open_detached = P4.eb)(A4, I4, g3, C2, Q3, i3, o2, E2), B._crypto_box_open_easy_afternm = (A4, I4, g3, C2, Q3, i3) => (B._crypto_box_open_easy_afternm = P4.fb)(A4, I4, g3, C2, Q3, i3), B._crypto_box_open_easy = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_box_open_easy = P4.gb)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_box_seal = (A4, I4, g3, C2, Q3) => (B._crypto_box_seal = P4.hb)(A4, I4, g3, C2, Q3), B._crypto_box_seal_open = (A4, I4, g3, C2, Q3, i3) => (B._crypto_box_seal_open = P4.ib)(A4, I4, g3, C2, Q3, i3), B._crypto_box_sealbytes = () => (B._crypto_box_sealbytes = P4.jb)(), B._crypto_box_curve25519xsalsa20poly1305_seed_keypair = (A4, I4, g3) => (B._crypto_box_curve25519xsalsa20poly1305_seed_keypair = P4.kb)(A4, I4, g3), B._crypto_box_curve25519xsalsa20poly1305_keypair = (A4, I4) => (B._crypto_box_curve25519xsalsa20poly1305_keypair = P4.lb)(A4, I4), B._crypto_box_curve25519xsalsa20poly1305_beforenm = (A4, I4, g3) => (B._crypto_box_curve25519xsalsa20poly1305_beforenm = P4.mb)(A4, I4, g3), B._crypto_box_curve25519xsalsa20poly1305_afternm = (A4, I4, g3, C2, Q3, i3) => (B._crypto_box_curve25519xsalsa20poly1305_afternm = P4.nb)(A4, I4, g3, C2, Q3, i3), B._crypto_box_curve25519xsalsa20poly1305_open_afternm = (A4, I4, g3, C2, Q3, i3) => (B._crypto_box_curve25519xsalsa20poly1305_open_afternm = P4.ob)(A4, I4, g3, C2, Q3, i3), B._crypto_box_curve25519xsalsa20poly1305 = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_box_curve25519xsalsa20poly1305 = P4.pb)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_box_curve25519xsalsa20poly1305_open = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_box_curve25519xsalsa20poly1305_open = P4.qb)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_box_curve25519xsalsa20poly1305_seedbytes = () => (B._crypto_box_curve25519xsalsa20poly1305_seedbytes = P4.rb)(), B._crypto_box_curve25519xsalsa20poly1305_publickeybytes = () => (B._crypto_box_curve25519xsalsa20poly1305_publickeybytes = P4.sb)(), B._crypto_box_curve25519xsalsa20poly1305_secretkeybytes = () => (B._crypto_box_curve25519xsalsa20poly1305_secretkeybytes = P4.tb)(), B._crypto_box_curve25519xsalsa20poly1305_beforenmbytes = () => (B._crypto_box_curve25519xsalsa20poly1305_beforenmbytes = P4.ub)(), B._crypto_box_curve25519xsalsa20poly1305_noncebytes = () => (B._crypto_box_curve25519xsalsa20poly1305_noncebytes = P4.vb)(), B._crypto_box_curve25519xsalsa20poly1305_zerobytes = () => (B._crypto_box_curve25519xsalsa20poly1305_zerobytes = P4.wb)(), B._crypto_box_curve25519xsalsa20poly1305_boxzerobytes = () => (B._crypto_box_curve25519xsalsa20poly1305_boxzerobytes = P4.xb)(), B._crypto_box_curve25519xsalsa20poly1305_macbytes = () => (B._crypto_box_curve25519xsalsa20poly1305_macbytes = P4.yb)(), B._crypto_box_curve25519xsalsa20poly1305_messagebytes_max = () => (B._crypto_box_curve25519xsalsa20poly1305_messagebytes_max = P4.zb)(), B._crypto_core_hchacha20 = (A4, I4, g3, C2) => (B._crypto_core_hchacha20 = P4.Ab)(A4, I4, g3, C2), B._crypto_core_hchacha20_outputbytes = () => (B._crypto_core_hchacha20_outputbytes = P4.Bb)(), B._crypto_core_hchacha20_inputbytes = () => (B._crypto_core_hchacha20_inputbytes = P4.Cb)(), B._crypto_core_hchacha20_keybytes = () => (B._crypto_core_hchacha20_keybytes = P4.Db)(), B._crypto_core_hchacha20_constbytes = () => (B._crypto_core_hchacha20_constbytes = P4.Eb)(), B._crypto_core_hsalsa20 = (A4, I4, g3, C2) => (B._crypto_core_hsalsa20 = P4.Fb)(A4, I4, g3, C2), B._crypto_core_hsalsa20_outputbytes = () => (B._crypto_core_hsalsa20_outputbytes = P4.Gb)(), B._crypto_core_hsalsa20_inputbytes = () => (B._crypto_core_hsalsa20_inputbytes = P4.Hb)(), B._crypto_core_hsalsa20_keybytes = () => (B._crypto_core_hsalsa20_keybytes = P4.Ib)(), B._crypto_core_hsalsa20_constbytes = () => (B._crypto_core_hsalsa20_constbytes = P4.Jb)(), B._crypto_core_salsa20 = (A4, I4, g3, C2) => (B._crypto_core_salsa20 = P4.Kb)(A4, I4, g3, C2), B._crypto_core_salsa20_outputbytes = () => (B._crypto_core_salsa20_outputbytes = P4.Lb)(), B._crypto_core_salsa20_inputbytes = () => (B._crypto_core_salsa20_inputbytes = P4.Mb)(), B._crypto_core_salsa20_keybytes = () => (B._crypto_core_salsa20_keybytes = P4.Nb)(), B._crypto_core_salsa20_constbytes = () => (B._crypto_core_salsa20_constbytes = P4.Ob)(), B._crypto_core_salsa2012 = (A4, I4, g3, C2) => (B._crypto_core_salsa2012 = P4.Pb)(A4, I4, g3, C2), B._crypto_core_salsa2012_outputbytes = () => (B._crypto_core_salsa2012_outputbytes = P4.Qb)(), B._crypto_core_salsa2012_inputbytes = () => (B._crypto_core_salsa2012_inputbytes = P4.Rb)(), B._crypto_core_salsa2012_keybytes = () => (B._crypto_core_salsa2012_keybytes = P4.Sb)(), B._crypto_core_salsa2012_constbytes = () => (B._crypto_core_salsa2012_constbytes = P4.Tb)(), B._crypto_core_salsa208 = (A4, I4, g3, C2) => (B._crypto_core_salsa208 = P4.Ub)(A4, I4, g3, C2), B._crypto_core_salsa208_outputbytes = () => (B._crypto_core_salsa208_outputbytes = P4.Vb)(), B._crypto_core_salsa208_inputbytes = () => (B._crypto_core_salsa208_inputbytes = P4.Wb)(), B._crypto_core_salsa208_keybytes = () => (B._crypto_core_salsa208_keybytes = P4.Xb)(), B._crypto_core_salsa208_constbytes = () => (B._crypto_core_salsa208_constbytes = P4.Yb)(), B._crypto_generichash_bytes_min = () => (B._crypto_generichash_bytes_min = P4.Zb)(), B._crypto_generichash_bytes_max = () => (B._crypto_generichash_bytes_max = P4._b)(), B._crypto_generichash_bytes = () => (B._crypto_generichash_bytes = P4.$b)(), B._crypto_generichash_keybytes_min = () => (B._crypto_generichash_keybytes_min = P4.ac)(), B._crypto_generichash_keybytes_max = () => (B._crypto_generichash_keybytes_max = P4.bc)(), B._crypto_generichash_keybytes = () => (B._crypto_generichash_keybytes = P4.cc)(), B._crypto_generichash_primitive = () => (B._crypto_generichash_primitive = P4.dc)(), B._crypto_generichash_statebytes = () => (B._crypto_generichash_statebytes = P4.ec)(), B._crypto_generichash = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_generichash = P4.fc)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_generichash_init = (A4, I4, g3, C2) => (B._crypto_generichash_init = P4.gc)(A4, I4, g3, C2), B._crypto_generichash_update = (A4, I4, g3, C2) => (B._crypto_generichash_update = P4.hc)(A4, I4, g3, C2), B._crypto_generichash_final = (A4, I4, g3) => (B._crypto_generichash_final = P4.ic)(A4, I4, g3), B._crypto_generichash_keygen = (A4) => (B._crypto_generichash_keygen = P4.jc)(A4), B._crypto_generichash_blake2b_bytes_min = () => (B._crypto_generichash_blake2b_bytes_min = P4.kc)(), B._crypto_generichash_blake2b_bytes_max = () => (B._crypto_generichash_blake2b_bytes_max = P4.lc)(), B._crypto_generichash_blake2b_bytes = () => (B._crypto_generichash_blake2b_bytes = P4.mc)(), B._crypto_generichash_blake2b_keybytes_min = () => (B._crypto_generichash_blake2b_keybytes_min = P4.nc)(), B._crypto_generichash_blake2b_keybytes_max = () => (B._crypto_generichash_blake2b_keybytes_max = P4.oc)(), B._crypto_generichash_blake2b_keybytes = () => (B._crypto_generichash_blake2b_keybytes = P4.pc)(), B._crypto_generichash_blake2b_saltbytes = () => (B._crypto_generichash_blake2b_saltbytes = P4.qc)(), B._crypto_generichash_blake2b_personalbytes = () => (B._crypto_generichash_blake2b_personalbytes = P4.rc)(), B._crypto_generichash_blake2b_statebytes = () => (B._crypto_generichash_blake2b_statebytes = P4.sc)(), B._crypto_generichash_blake2b_keygen = (A4) => (B._crypto_generichash_blake2b_keygen = P4.tc)(A4), B._crypto_generichash_blake2b = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_generichash_blake2b = P4.uc)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_generichash_blake2b_salt_personal = (A4, I4, g3, C2, Q3, i3, o2, E2, a2) => (B._crypto_generichash_blake2b_salt_personal = P4.vc)(A4, I4, g3, C2, Q3, i3, o2, E2, a2), B._crypto_generichash_blake2b_init = (A4, I4, g3, C2) => (B._crypto_generichash_blake2b_init = P4.wc)(A4, I4, g3, C2), B._crypto_generichash_blake2b_init_salt_personal = (A4, I4, g3, C2, Q3, i3) => (B._crypto_generichash_blake2b_init_salt_personal = P4.xc)(A4, I4, g3, C2, Q3, i3), B._crypto_generichash_blake2b_update = (A4, I4, g3, C2) => (B._crypto_generichash_blake2b_update = P4.yc)(A4, I4, g3, C2), B._crypto_generichash_blake2b_final = (A4, I4, g3) => (B._crypto_generichash_blake2b_final = P4.zc)(A4, I4, g3), B._crypto_hash_bytes = () => (B._crypto_hash_bytes = P4.Ac)(), B._crypto_hash = (A4, I4, g3, C2) => (B._crypto_hash = P4.Bc)(A4, I4, g3, C2), B._crypto_hash_primitive = () => (B._crypto_hash_primitive = P4.Cc)(), B._crypto_hash_sha256_bytes = () => (B._crypto_hash_sha256_bytes = P4.Dc)(), B._crypto_hash_sha256_statebytes = () => (B._crypto_hash_sha256_statebytes = P4.Ec)(), B._crypto_hash_sha256_init = (A4) => (B._crypto_hash_sha256_init = P4.Fc)(A4), B._crypto_hash_sha256_update = (A4, I4, g3, C2) => (B._crypto_hash_sha256_update = P4.Gc)(A4, I4, g3, C2), B._crypto_hash_sha256_final = (A4, I4) => (B._crypto_hash_sha256_final = P4.Hc)(A4, I4), B._crypto_hash_sha256 = (A4, I4, g3, C2) => (B._crypto_hash_sha256 = P4.Ic)(A4, I4, g3, C2), B._crypto_hash_sha512_bytes = () => (B._crypto_hash_sha512_bytes = P4.Jc)(), B._crypto_hash_sha512_statebytes = () => (B._crypto_hash_sha512_statebytes = P4.Kc)(), B._crypto_hash_sha512_init = (A4) => (B._crypto_hash_sha512_init = P4.Lc)(A4), B._crypto_hash_sha512_update = (A4, I4, g3, C2) => (B._crypto_hash_sha512_update = P4.Mc)(A4, I4, g3, C2), B._crypto_hash_sha512_final = (A4, I4) => (B._crypto_hash_sha512_final = P4.Nc)(A4, I4), B._crypto_hash_sha512 = (A4, I4, g3, C2) => (B._crypto_hash_sha512 = P4.Oc)(A4, I4, g3, C2), B._crypto_kdf_blake2b_bytes_min = () => (B._crypto_kdf_blake2b_bytes_min = P4.Pc)(), B._crypto_kdf_blake2b_bytes_max = () => (B._crypto_kdf_blake2b_bytes_max = P4.Qc)(), B._crypto_kdf_blake2b_contextbytes = () => (B._crypto_kdf_blake2b_contextbytes = P4.Rc)(), B._crypto_kdf_blake2b_keybytes = () => (B._crypto_kdf_blake2b_keybytes = P4.Sc)(), B._crypto_kdf_blake2b_derive_from_key = (A4, I4, g3, C2, Q3, i3) => (B._crypto_kdf_blake2b_derive_from_key = P4.Tc)(A4, I4, g3, C2, Q3, i3), B._crypto_kdf_primitive = () => (B._crypto_kdf_primitive = P4.Uc)(), B._crypto_kdf_bytes_min = () => (B._crypto_kdf_bytes_min = P4.Vc)(), B._crypto_kdf_bytes_max = () => (B._crypto_kdf_bytes_max = P4.Wc)(), B._crypto_kdf_contextbytes = () => (B._crypto_kdf_contextbytes = P4.Xc)(), B._crypto_kdf_keybytes = () => (B._crypto_kdf_keybytes = P4.Yc)(), B._crypto_kdf_derive_from_key = (A4, I4, g3, C2, Q3, i3) => (B._crypto_kdf_derive_from_key = P4.Zc)(A4, I4, g3, C2, Q3, i3), B._crypto_kdf_keygen = (A4) => (B._crypto_kdf_keygen = P4._c)(A4), B._crypto_kdf_hkdf_sha256_extract_init = (A4, I4, g3) => (B._crypto_kdf_hkdf_sha256_extract_init = P4.$c)(A4, I4, g3), B._crypto_kdf_hkdf_sha256_extract_update = (A4, I4, g3) => (B._crypto_kdf_hkdf_sha256_extract_update = P4.ad)(A4, I4, g3), B._crypto_kdf_hkdf_sha256_extract_final = (A4, I4) => (B._crypto_kdf_hkdf_sha256_extract_final = P4.bd)(A4, I4), B._crypto_kdf_hkdf_sha256_extract = (A4, I4, g3, C2, Q3) => (B._crypto_kdf_hkdf_sha256_extract = P4.cd)(A4, I4, g3, C2, Q3), B._crypto_kdf_hkdf_sha256_keygen = (A4) => (B._crypto_kdf_hkdf_sha256_keygen = P4.dd)(A4), B._crypto_kdf_hkdf_sha256_expand = (A4, I4, g3, C2, Q3) => (B._crypto_kdf_hkdf_sha256_expand = P4.ed)(A4, I4, g3, C2, Q3), B._crypto_kdf_hkdf_sha256_keybytes = () => (B._crypto_kdf_hkdf_sha256_keybytes = P4.fd)(), B._crypto_kdf_hkdf_sha256_bytes_min = () => (B._crypto_kdf_hkdf_sha256_bytes_min = P4.gd)(), B._crypto_kdf_hkdf_sha256_bytes_max = () => (B._crypto_kdf_hkdf_sha256_bytes_max = P4.hd)(), B._crypto_kdf_hkdf_sha256_statebytes = () => (B._crypto_kdf_hkdf_sha256_statebytes = P4.id)(), B._crypto_kdf_hkdf_sha512_extract_init = (A4, I4, g3) => (B._crypto_kdf_hkdf_sha512_extract_init = P4.jd)(A4, I4, g3), B._crypto_kdf_hkdf_sha512_extract_update = (A4, I4, g3) => (B._crypto_kdf_hkdf_sha512_extract_update = P4.kd)(A4, I4, g3), B._crypto_kdf_hkdf_sha512_extract_final = (A4, I4) => (B._crypto_kdf_hkdf_sha512_extract_final = P4.ld)(A4, I4), B._crypto_kdf_hkdf_sha512_extract = (A4, I4, g3, C2, Q3) => (B._crypto_kdf_hkdf_sha512_extract = P4.md)(A4, I4, g3, C2, Q3), B._crypto_kdf_hkdf_sha512_keygen = (A4) => (B._crypto_kdf_hkdf_sha512_keygen = P4.nd)(A4), B._crypto_kdf_hkdf_sha512_expand = (A4, I4, g3, C2, Q3) => (B._crypto_kdf_hkdf_sha512_expand = P4.od)(A4, I4, g3, C2, Q3), B._crypto_kdf_hkdf_sha512_keybytes = () => (B._crypto_kdf_hkdf_sha512_keybytes = P4.pd)(), B._crypto_kdf_hkdf_sha512_bytes_min = () => (B._crypto_kdf_hkdf_sha512_bytes_min = P4.qd)(), B._crypto_kdf_hkdf_sha512_bytes_max = () => (B._crypto_kdf_hkdf_sha512_bytes_max = P4.rd)(), B._crypto_kdf_hkdf_sha512_statebytes = () => (B._crypto_kdf_hkdf_sha512_statebytes = P4.sd)(), B._crypto_kx_seed_keypair = (A4, I4, g3) => (B._crypto_kx_seed_keypair = P4.td)(A4, I4, g3), B._crypto_kx_keypair = (A4, I4) => (B._crypto_kx_keypair = P4.ud)(A4, I4), B._crypto_kx_client_session_keys = (A4, I4, g3, C2, Q3) => (B._crypto_kx_client_session_keys = P4.vd)(A4, I4, g3, C2, Q3), B._crypto_kx_server_session_keys = (A4, I4, g3, C2, Q3) => (B._crypto_kx_server_session_keys = P4.wd)(A4, I4, g3, C2, Q3), B._crypto_kx_publickeybytes = () => (B._crypto_kx_publickeybytes = P4.xd)(), B._crypto_kx_secretkeybytes = () => (B._crypto_kx_secretkeybytes = P4.yd)(), B._crypto_kx_seedbytes = () => (B._crypto_kx_seedbytes = P4.zd)(), B._crypto_kx_sessionkeybytes = () => (B._crypto_kx_sessionkeybytes = P4.Ad)(), B._crypto_kx_primitive = () => (B._crypto_kx_primitive = P4.Bd)(), B._crypto_onetimeauth_statebytes = () => (B._crypto_onetimeauth_statebytes = P4.Cd)(), B._crypto_onetimeauth_bytes = () => (B._crypto_onetimeauth_bytes = P4.Dd)(), B._crypto_onetimeauth_keybytes = () => (B._crypto_onetimeauth_keybytes = P4.Ed)(), B._crypto_onetimeauth = (A4, I4, g3, C2, Q3) => (B._crypto_onetimeauth = P4.Fd)(A4, I4, g3, C2, Q3), B._crypto_onetimeauth_verify = (A4, I4, g3, C2, Q3) => (B._crypto_onetimeauth_verify = P4.Gd)(A4, I4, g3, C2, Q3), B._crypto_onetimeauth_init = (A4, I4) => (B._crypto_onetimeauth_init = P4.Hd)(A4, I4), B._crypto_onetimeauth_update = (A4, I4, g3, C2) => (B._crypto_onetimeauth_update = P4.Id)(A4, I4, g3, C2), B._crypto_onetimeauth_final = (A4, I4) => (B._crypto_onetimeauth_final = P4.Jd)(A4, I4), B._crypto_onetimeauth_primitive = () => (B._crypto_onetimeauth_primitive = P4.Kd)(), B._crypto_onetimeauth_keygen = (A4) => (B._crypto_onetimeauth_keygen = P4.Ld)(A4), B._crypto_onetimeauth_poly1305 = (A4, I4, g3, C2, Q3) => (B._crypto_onetimeauth_poly1305 = P4.Md)(A4, I4, g3, C2, Q3), B._crypto_onetimeauth_poly1305_verify = (A4, I4, g3, C2, Q3) => (B._crypto_onetimeauth_poly1305_verify = P4.Nd)(A4, I4, g3, C2, Q3), B._crypto_onetimeauth_poly1305_init = (A4, I4) => (B._crypto_onetimeauth_poly1305_init = P4.Od)(A4, I4), B._crypto_onetimeauth_poly1305_update = (A4, I4, g3, C2) => (B._crypto_onetimeauth_poly1305_update = P4.Pd)(A4, I4, g3, C2), B._crypto_onetimeauth_poly1305_final = (A4, I4) => (B._crypto_onetimeauth_poly1305_final = P4.Qd)(A4, I4), B._crypto_onetimeauth_poly1305_bytes = () => (B._crypto_onetimeauth_poly1305_bytes = P4.Rd)(), B._crypto_onetimeauth_poly1305_keybytes = () => (B._crypto_onetimeauth_poly1305_keybytes = P4.Sd)(), B._crypto_onetimeauth_poly1305_statebytes = () => (B._crypto_onetimeauth_poly1305_statebytes = P4.Td)(), B._crypto_onetimeauth_poly1305_keygen = (A4) => (B._crypto_onetimeauth_poly1305_keygen = P4.Ud)(A4), B._crypto_pwhash_argon2i_alg_argon2i13 = () => (B._crypto_pwhash_argon2i_alg_argon2i13 = P4.Vd)(), B._crypto_pwhash_argon2i_bytes_min = () => (B._crypto_pwhash_argon2i_bytes_min = P4.Wd)(), B._crypto_pwhash_argon2i_bytes_max = () => (B._crypto_pwhash_argon2i_bytes_max = P4.Xd)(), B._crypto_pwhash_argon2i_passwd_min = () => (B._crypto_pwhash_argon2i_passwd_min = P4.Yd)(), B._crypto_pwhash_argon2i_passwd_max = () => (B._crypto_pwhash_argon2i_passwd_max = P4.Zd)(), B._crypto_pwhash_argon2i_saltbytes = () => (B._crypto_pwhash_argon2i_saltbytes = P4._d)(), B._crypto_pwhash_argon2i_strbytes = () => (B._crypto_pwhash_argon2i_strbytes = P4.$d)(), B._crypto_pwhash_argon2i_strprefix = () => (B._crypto_pwhash_argon2i_strprefix = P4.ae)(), B._crypto_pwhash_argon2i_opslimit_min = () => (B._crypto_pwhash_argon2i_opslimit_min = P4.be)(), B._crypto_pwhash_argon2i_opslimit_max = () => (B._crypto_pwhash_argon2i_opslimit_max = P4.ce)(), B._crypto_pwhash_argon2i_memlimit_min = () => (B._crypto_pwhash_argon2i_memlimit_min = P4.de)(), B._crypto_pwhash_argon2i_memlimit_max = () => (B._crypto_pwhash_argon2i_memlimit_max = P4.ee)(), B._crypto_pwhash_argon2i_opslimit_interactive = () => (B._crypto_pwhash_argon2i_opslimit_interactive = P4.fe)(), B._crypto_pwhash_argon2i_memlimit_interactive = () => (B._crypto_pwhash_argon2i_memlimit_interactive = P4.ge)(), B._crypto_pwhash_argon2i_opslimit_moderate = () => (B._crypto_pwhash_argon2i_opslimit_moderate = P4.he)(), B._crypto_pwhash_argon2i_memlimit_moderate = () => (B._crypto_pwhash_argon2i_memlimit_moderate = P4.ie)(), B._crypto_pwhash_argon2i_opslimit_sensitive = () => (B._crypto_pwhash_argon2i_opslimit_sensitive = P4.je)(), B._crypto_pwhash_argon2i_memlimit_sensitive = () => (B._crypto_pwhash_argon2i_memlimit_sensitive = P4.ke)(), B._crypto_pwhash_argon2i = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_pwhash_argon2i = P4.le)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_pwhash_argon2i_str = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_pwhash_argon2i_str = P4.me)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_pwhash_argon2i_str_verify = (A4, I4, g3, C2) => (B._crypto_pwhash_argon2i_str_verify = P4.ne)(A4, I4, g3, C2), B._crypto_pwhash_argon2i_str_needs_rehash = (A4, I4, g3, C2) => (B._crypto_pwhash_argon2i_str_needs_rehash = P4.oe)(A4, I4, g3, C2), B._crypto_pwhash_argon2id_str_needs_rehash = (A4, I4, g3, C2) => (B._crypto_pwhash_argon2id_str_needs_rehash = P4.pe)(A4, I4, g3, C2), B._crypto_pwhash_argon2id_alg_argon2id13 = () => (B._crypto_pwhash_argon2id_alg_argon2id13 = P4.qe)(), B._crypto_pwhash_argon2id_bytes_min = () => (B._crypto_pwhash_argon2id_bytes_min = P4.re)(), B._crypto_pwhash_argon2id_bytes_max = () => (B._crypto_pwhash_argon2id_bytes_max = P4.se)(), B._crypto_pwhash_argon2id_passwd_min = () => (B._crypto_pwhash_argon2id_passwd_min = P4.te)(), B._crypto_pwhash_argon2id_passwd_max = () => (B._crypto_pwhash_argon2id_passwd_max = P4.ue)(), B._crypto_pwhash_argon2id_saltbytes = () => (B._crypto_pwhash_argon2id_saltbytes = P4.ve)(), B._crypto_pwhash_argon2id_strbytes = () => (B._crypto_pwhash_argon2id_strbytes = P4.we)(), B._crypto_pwhash_argon2id_strprefix = () => (B._crypto_pwhash_argon2id_strprefix = P4.xe)(), B._crypto_pwhash_argon2id_opslimit_min = () => (B._crypto_pwhash_argon2id_opslimit_min = P4.ye)(), B._crypto_pwhash_argon2id_opslimit_max = () => (B._crypto_pwhash_argon2id_opslimit_max = P4.ze)(), B._crypto_pwhash_argon2id_memlimit_min = () => (B._crypto_pwhash_argon2id_memlimit_min = P4.Ae)(), B._crypto_pwhash_argon2id_memlimit_max = () => (B._crypto_pwhash_argon2id_memlimit_max = P4.Be)(), B._crypto_pwhash_argon2id_opslimit_interactive = () => (B._crypto_pwhash_argon2id_opslimit_interactive = P4.Ce)(), B._crypto_pwhash_argon2id_memlimit_interactive = () => (B._crypto_pwhash_argon2id_memlimit_interactive = P4.De)(), B._crypto_pwhash_argon2id_opslimit_moderate = () => (B._crypto_pwhash_argon2id_opslimit_moderate = P4.Ee)(), B._crypto_pwhash_argon2id_memlimit_moderate = () => (B._crypto_pwhash_argon2id_memlimit_moderate = P4.Fe)(), B._crypto_pwhash_argon2id_opslimit_sensitive = () => (B._crypto_pwhash_argon2id_opslimit_sensitive = P4.Ge)(), B._crypto_pwhash_argon2id_memlimit_sensitive = () => (B._crypto_pwhash_argon2id_memlimit_sensitive = P4.He)(), B._crypto_pwhash_argon2id = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_pwhash_argon2id = P4.Ie)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_pwhash_argon2id_str = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_pwhash_argon2id_str = P4.Je)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_pwhash_argon2id_str_verify = (A4, I4, g3, C2) => (B._crypto_pwhash_argon2id_str_verify = P4.Ke)(A4, I4, g3, C2), B._crypto_pwhash_alg_argon2i13 = () => (B._crypto_pwhash_alg_argon2i13 = P4.Le)(), B._crypto_pwhash_alg_argon2id13 = () => (B._crypto_pwhash_alg_argon2id13 = P4.Me)(), B._crypto_pwhash_alg_default = () => (B._crypto_pwhash_alg_default = P4.Ne)(), B._crypto_pwhash_bytes_min = () => (B._crypto_pwhash_bytes_min = P4.Oe)(), B._crypto_pwhash_bytes_max = () => (B._crypto_pwhash_bytes_max = P4.Pe)(), B._crypto_pwhash_passwd_min = () => (B._crypto_pwhash_passwd_min = P4.Qe)(), B._crypto_pwhash_passwd_max = () => (B._crypto_pwhash_passwd_max = P4.Re)(), B._crypto_pwhash_saltbytes = () => (B._crypto_pwhash_saltbytes = P4.Se)(), B._crypto_pwhash_strbytes = () => (B._crypto_pwhash_strbytes = P4.Te)(), B._crypto_pwhash_strprefix = () => (B._crypto_pwhash_strprefix = P4.Ue)(), B._crypto_pwhash_opslimit_min = () => (B._crypto_pwhash_opslimit_min = P4.Ve)(), B._crypto_pwhash_opslimit_max = () => (B._crypto_pwhash_opslimit_max = P4.We)(), B._crypto_pwhash_memlimit_min = () => (B._crypto_pwhash_memlimit_min = P4.Xe)(), B._crypto_pwhash_memlimit_max = () => (B._crypto_pwhash_memlimit_max = P4.Ye)(), B._crypto_pwhash_opslimit_interactive = () => (B._crypto_pwhash_opslimit_interactive = P4.Ze)(), B._crypto_pwhash_memlimit_interactive = () => (B._crypto_pwhash_memlimit_interactive = P4._e)(), B._crypto_pwhash_opslimit_moderate = () => (B._crypto_pwhash_opslimit_moderate = P4.$e)(), B._crypto_pwhash_memlimit_moderate = () => (B._crypto_pwhash_memlimit_moderate = P4.af)(), B._crypto_pwhash_opslimit_sensitive = () => (B._crypto_pwhash_opslimit_sensitive = P4.bf)(), B._crypto_pwhash_memlimit_sensitive = () => (B._crypto_pwhash_memlimit_sensitive = P4.cf)(), B._crypto_pwhash = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2) => (B._crypto_pwhash = P4.df)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2, c2), B._crypto_pwhash_str = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_pwhash_str = P4.ef)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_pwhash_str_alg = (A4, I4, g3, C2, Q3, i3, o2, E2) => (B._crypto_pwhash_str_alg = P4.ff)(A4, I4, g3, C2, Q3, i3, o2, E2), B._crypto_pwhash_str_verify = (A4, I4, g3, C2) => (B._crypto_pwhash_str_verify = P4.gf)(A4, I4, g3, C2), B._crypto_pwhash_str_needs_rehash = (A4, I4, g3, C2) => (B._crypto_pwhash_str_needs_rehash = P4.hf)(A4, I4, g3, C2), B._crypto_pwhash_primitive = () => (B._crypto_pwhash_primitive = P4.jf)(), B._crypto_scalarmult_primitive = () => (B._crypto_scalarmult_primitive = P4.kf)(), B._crypto_scalarmult_base = (A4, I4) => (B._crypto_scalarmult_base = P4.lf)(A4, I4), B._crypto_scalarmult = (A4, I4, g3) => (B._crypto_scalarmult = P4.mf)(A4, I4, g3), B._crypto_scalarmult_bytes = () => (B._crypto_scalarmult_bytes = P4.nf)(), B._crypto_scalarmult_scalarbytes = () => (B._crypto_scalarmult_scalarbytes = P4.of)(), B._crypto_scalarmult_curve25519 = (A4, I4, g3) => (B._crypto_scalarmult_curve25519 = P4.pf)(A4, I4, g3), B._crypto_scalarmult_curve25519_base = (A4, I4) => (B._crypto_scalarmult_curve25519_base = P4.qf)(A4, I4), B._crypto_scalarmult_curve25519_bytes = () => (B._crypto_scalarmult_curve25519_bytes = P4.rf)(), B._crypto_scalarmult_curve25519_scalarbytes = () => (B._crypto_scalarmult_curve25519_scalarbytes = P4.sf)(), B._crypto_secretbox_keybytes = () => (B._crypto_secretbox_keybytes = P4.tf)(), B._crypto_secretbox_noncebytes = () => (B._crypto_secretbox_noncebytes = P4.uf)(), B._crypto_secretbox_zerobytes = () => (B._crypto_secretbox_zerobytes = P4.vf)(), B._crypto_secretbox_boxzerobytes = () => (B._crypto_secretbox_boxzerobytes = P4.wf)(), B._crypto_secretbox_macbytes = () => (B._crypto_secretbox_macbytes = P4.xf)(), B._crypto_secretbox_messagebytes_max = () => (B._crypto_secretbox_messagebytes_max = P4.yf)(), B._crypto_secretbox_primitive = () => (B._crypto_secretbox_primitive = P4.zf)(), B._crypto_secretbox = (A4, I4, g3, C2, Q3, i3) => (B._crypto_secretbox = P4.Af)(A4, I4, g3, C2, Q3, i3), B._crypto_secretbox_open = (A4, I4, g3, C2, Q3, i3) => (B._crypto_secretbox_open = P4.Bf)(A4, I4, g3, C2, Q3, i3), B._crypto_secretbox_keygen = (A4) => (B._crypto_secretbox_keygen = P4.Cf)(A4), B._crypto_secretbox_detached = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_secretbox_detached = P4.Df)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_secretbox_easy = (A4, I4, g3, C2, Q3, i3) => (B._crypto_secretbox_easy = P4.Ef)(A4, I4, g3, C2, Q3, i3), B._crypto_secretbox_open_detached = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_secretbox_open_detached = P4.Ff)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_secretbox_open_easy = (A4, I4, g3, C2, Q3, i3) => (B._crypto_secretbox_open_easy = P4.Gf)(A4, I4, g3, C2, Q3, i3), B._crypto_secretbox_xsalsa20poly1305 = (A4, I4, g3, C2, Q3, i3) => (B._crypto_secretbox_xsalsa20poly1305 = P4.Hf)(A4, I4, g3, C2, Q3, i3), B._crypto_secretbox_xsalsa20poly1305_open = (A4, I4, g3, C2, Q3, i3) => (B._crypto_secretbox_xsalsa20poly1305_open = P4.If)(A4, I4, g3, C2, Q3, i3), B._crypto_secretbox_xsalsa20poly1305_keybytes = () => (B._crypto_secretbox_xsalsa20poly1305_keybytes = P4.Jf)(), B._crypto_secretbox_xsalsa20poly1305_noncebytes = () => (B._crypto_secretbox_xsalsa20poly1305_noncebytes = P4.Kf)(), B._crypto_secretbox_xsalsa20poly1305_zerobytes = () => (B._crypto_secretbox_xsalsa20poly1305_zerobytes = P4.Lf)(), B._crypto_secretbox_xsalsa20poly1305_boxzerobytes = () => (B._crypto_secretbox_xsalsa20poly1305_boxzerobytes = P4.Mf)(), B._crypto_secretbox_xsalsa20poly1305_macbytes = () => (B._crypto_secretbox_xsalsa20poly1305_macbytes = P4.Nf)(), B._crypto_secretbox_xsalsa20poly1305_messagebytes_max = () => (B._crypto_secretbox_xsalsa20poly1305_messagebytes_max = P4.Of)(), B._crypto_secretbox_xsalsa20poly1305_keygen = (A4) => (B._crypto_secretbox_xsalsa20poly1305_keygen = P4.Pf)(A4), B._crypto_secretstream_xchacha20poly1305_keygen = (A4) => (B._crypto_secretstream_xchacha20poly1305_keygen = P4.Qf)(A4), B._crypto_secretstream_xchacha20poly1305_init_push = (A4, I4, g3) => (B._crypto_secretstream_xchacha20poly1305_init_push = P4.Rf)(A4, I4, g3), B._crypto_secretstream_xchacha20poly1305_init_pull = (A4, I4, g3) => (B._crypto_secretstream_xchacha20poly1305_init_pull = P4.Sf)(A4, I4, g3), B._crypto_secretstream_xchacha20poly1305_rekey = (A4) => (B._crypto_secretstream_xchacha20poly1305_rekey = P4.Tf)(A4), B._crypto_secretstream_xchacha20poly1305_push = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2) => (B._crypto_secretstream_xchacha20poly1305_push = P4.Uf)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2), B._crypto_secretstream_xchacha20poly1305_pull = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2) => (B._crypto_secretstream_xchacha20poly1305_pull = P4.Vf)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2), B._crypto_secretstream_xchacha20poly1305_statebytes = () => (B._crypto_secretstream_xchacha20poly1305_statebytes = P4.Wf)(), B._crypto_secretstream_xchacha20poly1305_abytes = () => (B._crypto_secretstream_xchacha20poly1305_abytes = P4.Xf)(), B._crypto_secretstream_xchacha20poly1305_headerbytes = () => (B._crypto_secretstream_xchacha20poly1305_headerbytes = P4.Yf)(), B._crypto_secretstream_xchacha20poly1305_keybytes = () => (B._crypto_secretstream_xchacha20poly1305_keybytes = P4.Zf)(), B._crypto_secretstream_xchacha20poly1305_messagebytes_max = () => (B._crypto_secretstream_xchacha20poly1305_messagebytes_max = P4._f)(), B._crypto_secretstream_xchacha20poly1305_tag_message = () => (B._crypto_secretstream_xchacha20poly1305_tag_message = P4.$f)(), B._crypto_secretstream_xchacha20poly1305_tag_push = () => (B._crypto_secretstream_xchacha20poly1305_tag_push = P4.ag)(), B._crypto_secretstream_xchacha20poly1305_tag_rekey = () => (B._crypto_secretstream_xchacha20poly1305_tag_rekey = P4.bg)(), B._crypto_secretstream_xchacha20poly1305_tag_final = () => (B._crypto_secretstream_xchacha20poly1305_tag_final = P4.cg)(), B._crypto_shorthash_bytes = () => (B._crypto_shorthash_bytes = P4.dg)(), B._crypto_shorthash_keybytes = () => (B._crypto_shorthash_keybytes = P4.eg)(), B._crypto_shorthash_primitive = () => (B._crypto_shorthash_primitive = P4.fg)(), B._crypto_shorthash = (A4, I4, g3, C2, Q3) => (B._crypto_shorthash = P4.gg)(A4, I4, g3, C2, Q3), B._crypto_shorthash_keygen = (A4) => (B._crypto_shorthash_keygen = P4.hg)(A4), B._crypto_shorthash_siphash24_bytes = () => (B._crypto_shorthash_siphash24_bytes = P4.ig)(), B._crypto_shorthash_siphash24_keybytes = () => (B._crypto_shorthash_siphash24_keybytes = P4.jg)(), B._crypto_shorthash_siphash24 = (A4, I4, g3, C2, Q3) => (B._crypto_shorthash_siphash24 = P4.kg)(A4, I4, g3, C2, Q3), B._crypto_sign_statebytes = () => (B._crypto_sign_statebytes = P4.lg)(), B._crypto_sign_bytes = () => (B._crypto_sign_bytes = P4.mg)(), B._crypto_sign_seedbytes = () => (B._crypto_sign_seedbytes = P4.ng)(), B._crypto_sign_publickeybytes = () => (B._crypto_sign_publickeybytes = P4.og)(), B._crypto_sign_secretkeybytes = () => (B._crypto_sign_secretkeybytes = P4.pg)(), B._crypto_sign_messagebytes_max = () => (B._crypto_sign_messagebytes_max = P4.qg)(), B._crypto_sign_primitive = () => (B._crypto_sign_primitive = P4.rg)(), B._crypto_sign_seed_keypair = (A4, I4, g3) => (B._crypto_sign_seed_keypair = P4.sg)(A4, I4, g3), B._crypto_sign_keypair = (A4, I4) => (B._crypto_sign_keypair = P4.tg)(A4, I4), B._crypto_sign = (A4, I4, g3, C2, Q3, i3) => (B._crypto_sign = P4.ug)(A4, I4, g3, C2, Q3, i3), B._crypto_sign_open = (A4, I4, g3, C2, Q3, i3) => (B._crypto_sign_open = P4.vg)(A4, I4, g3, C2, Q3, i3), B._crypto_sign_detached = (A4, I4, g3, C2, Q3, i3) => (B._crypto_sign_detached = P4.wg)(A4, I4, g3, C2, Q3, i3), B._crypto_sign_verify_detached = (A4, I4, g3, C2, Q3) => (B._crypto_sign_verify_detached = P4.xg)(A4, I4, g3, C2, Q3), B._crypto_sign_init = (A4) => (B._crypto_sign_init = P4.yg)(A4), B._crypto_sign_update = (A4, I4, g3, C2) => (B._crypto_sign_update = P4.zg)(A4, I4, g3, C2), B._crypto_sign_final_create = (A4, I4, g3, C2) => (B._crypto_sign_final_create = P4.Ag)(A4, I4, g3, C2), B._crypto_sign_final_verify = (A4, I4, g3) => (B._crypto_sign_final_verify = P4.Bg)(A4, I4, g3), B._crypto_sign_ed25519ph_statebytes = () => (B._crypto_sign_ed25519ph_statebytes = P4.Cg)(), B._crypto_sign_ed25519_bytes = () => (B._crypto_sign_ed25519_bytes = P4.Dg)(), B._crypto_sign_ed25519_seedbytes = () => (B._crypto_sign_ed25519_seedbytes = P4.Eg)(), B._crypto_sign_ed25519_publickeybytes = () => (B._crypto_sign_ed25519_publickeybytes = P4.Fg)(), B._crypto_sign_ed25519_secretkeybytes = () => (B._crypto_sign_ed25519_secretkeybytes = P4.Gg)(), B._crypto_sign_ed25519_messagebytes_max = () => (B._crypto_sign_ed25519_messagebytes_max = P4.Hg)(), B._crypto_sign_ed25519_sk_to_seed = (A4, I4) => (B._crypto_sign_ed25519_sk_to_seed = P4.Ig)(A4, I4), B._crypto_sign_ed25519_sk_to_pk = (A4, I4) => (B._crypto_sign_ed25519_sk_to_pk = P4.Jg)(A4, I4), B._crypto_sign_ed25519ph_init = (A4) => (B._crypto_sign_ed25519ph_init = P4.Kg)(A4), B._crypto_sign_ed25519ph_update = (A4, I4, g3, C2) => (B._crypto_sign_ed25519ph_update = P4.Lg)(A4, I4, g3, C2), B._crypto_sign_ed25519ph_final_create = (A4, I4, g3, C2) => (B._crypto_sign_ed25519ph_final_create = P4.Mg)(A4, I4, g3, C2), B._crypto_sign_ed25519ph_final_verify = (A4, I4, g3) => (B._crypto_sign_ed25519ph_final_verify = P4.Ng)(A4, I4, g3), B._crypto_sign_ed25519_seed_keypair = (A4, I4, g3) => (B._crypto_sign_ed25519_seed_keypair = P4.Og)(A4, I4, g3), B._crypto_sign_ed25519_keypair = (A4, I4) => (B._crypto_sign_ed25519_keypair = P4.Pg)(A4, I4), B._crypto_sign_ed25519_pk_to_curve25519 = (A4, I4) => (B._crypto_sign_ed25519_pk_to_curve25519 = P4.Qg)(A4, I4), B._crypto_sign_ed25519_sk_to_curve25519 = (A4, I4) => (B._crypto_sign_ed25519_sk_to_curve25519 = P4.Rg)(A4, I4), B._crypto_sign_ed25519_verify_detached = (A4, I4, g3, C2, Q3) => (B._crypto_sign_ed25519_verify_detached = P4.Sg)(A4, I4, g3, C2, Q3), B._crypto_sign_ed25519_open = (A4, I4, g3, C2, Q3, i3) => (B._crypto_sign_ed25519_open = P4.Tg)(A4, I4, g3, C2, Q3, i3), B._crypto_sign_ed25519_detached = (A4, I4, g3, C2, Q3, i3) => (B._crypto_sign_ed25519_detached = P4.Ug)(A4, I4, g3, C2, Q3, i3), B._crypto_sign_ed25519 = (A4, I4, g3, C2, Q3, i3) => (B._crypto_sign_ed25519 = P4.Vg)(A4, I4, g3, C2, Q3, i3), B._crypto_stream_chacha20_keybytes = () => (B._crypto_stream_chacha20_keybytes = P4.Wg)(), B._crypto_stream_chacha20_noncebytes = () => (B._crypto_stream_chacha20_noncebytes = P4.Xg)(), B._crypto_stream_chacha20_messagebytes_max = () => (B._crypto_stream_chacha20_messagebytes_max = P4.Yg)(), B._crypto_stream_chacha20_ietf_keybytes = () => (B._crypto_stream_chacha20_ietf_keybytes = P4.Zg)(), B._crypto_stream_chacha20_ietf_noncebytes = () => (B._crypto_stream_chacha20_ietf_noncebytes = P4._g)(), B._crypto_stream_chacha20_ietf_messagebytes_max = () => (B._crypto_stream_chacha20_ietf_messagebytes_max = P4.$g)(), B._crypto_stream_chacha20 = (A4, I4, g3, C2, Q3) => (B._crypto_stream_chacha20 = P4.ah)(A4, I4, g3, C2, Q3), B._crypto_stream_chacha20_xor_ic = (A4, I4, g3, C2, Q3, i3, o2, E2) => (B._crypto_stream_chacha20_xor_ic = P4.bh)(A4, I4, g3, C2, Q3, i3, o2, E2), B._crypto_stream_chacha20_xor = (A4, I4, g3, C2, Q3, i3) => (B._crypto_stream_chacha20_xor = P4.ch)(A4, I4, g3, C2, Q3, i3), B._crypto_stream_chacha20_ietf = (A4, I4, g3, C2, Q3) => (B._crypto_stream_chacha20_ietf = P4.dh)(A4, I4, g3, C2, Q3), B._crypto_stream_chacha20_ietf_xor_ic = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_stream_chacha20_ietf_xor_ic = P4.eh)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_stream_chacha20_ietf_xor = (A4, I4, g3, C2, Q3, i3) => (B._crypto_stream_chacha20_ietf_xor = P4.fh)(A4, I4, g3, C2, Q3, i3), B._crypto_stream_chacha20_ietf_keygen = (A4) => (B._crypto_stream_chacha20_ietf_keygen = P4.gh)(A4), B._crypto_stream_chacha20_keygen = (A4) => (B._crypto_stream_chacha20_keygen = P4.hh)(A4), B._crypto_stream_keybytes = () => (B._crypto_stream_keybytes = P4.ih)(), B._crypto_stream_noncebytes = () => (B._crypto_stream_noncebytes = P4.jh)(), B._crypto_stream_messagebytes_max = () => (B._crypto_stream_messagebytes_max = P4.kh)(), B._crypto_stream_primitive = () => (B._crypto_stream_primitive = P4.lh)(), B._crypto_stream = (A4, I4, g3, C2, Q3) => (B._crypto_stream = P4.mh)(A4, I4, g3, C2, Q3), B._crypto_stream_xor = (A4, I4, g3, C2, Q3, i3) => (B._crypto_stream_xor = P4.nh)(A4, I4, g3, C2, Q3, i3), B._crypto_stream_keygen = (A4) => (B._crypto_stream_keygen = P4.oh)(A4), B._crypto_stream_salsa20_keybytes = () => (B._crypto_stream_salsa20_keybytes = P4.ph)(), B._crypto_stream_salsa20_noncebytes = () => (B._crypto_stream_salsa20_noncebytes = P4.qh)(), B._crypto_stream_salsa20_messagebytes_max = () => (B._crypto_stream_salsa20_messagebytes_max = P4.rh)(), B._crypto_stream_salsa20 = (A4, I4, g3, C2, Q3) => (B._crypto_stream_salsa20 = P4.sh)(A4, I4, g3, C2, Q3), B._crypto_stream_salsa20_xor_ic = (A4, I4, g3, C2, Q3, i3, o2, E2) => (B._crypto_stream_salsa20_xor_ic = P4.th)(A4, I4, g3, C2, Q3, i3, o2, E2), B._crypto_stream_salsa20_xor = (A4, I4, g3, C2, Q3, i3) => (B._crypto_stream_salsa20_xor = P4.uh)(A4, I4, g3, C2, Q3, i3), B._crypto_stream_salsa20_keygen = (A4) => (B._crypto_stream_salsa20_keygen = P4.vh)(A4), B._crypto_stream_xsalsa20 = (A4, I4, g3, C2, Q3) => (B._crypto_stream_xsalsa20 = P4.wh)(A4, I4, g3, C2, Q3), B._crypto_stream_xsalsa20_xor_ic = (A4, I4, g3, C2, Q3, i3, o2, E2) => (B._crypto_stream_xsalsa20_xor_ic = P4.xh)(A4, I4, g3, C2, Q3, i3, o2, E2), B._crypto_stream_xsalsa20_xor = (A4, I4, g3, C2, Q3, i3) => (B._crypto_stream_xsalsa20_xor = P4.yh)(A4, I4, g3, C2, Q3, i3), B._crypto_stream_xsalsa20_keybytes = () => (B._crypto_stream_xsalsa20_keybytes = P4.zh)(), B._crypto_stream_xsalsa20_noncebytes = () => (B._crypto_stream_xsalsa20_noncebytes = P4.Ah)(), B._crypto_stream_xsalsa20_messagebytes_max = () => (B._crypto_stream_xsalsa20_messagebytes_max = P4.Bh)(), B._crypto_stream_xsalsa20_keygen = (A4) => (B._crypto_stream_xsalsa20_keygen = P4.Ch)(A4), B._crypto_verify_16_bytes = () => (B._crypto_verify_16_bytes = P4.Dh)(), B._crypto_verify_32_bytes = () => (B._crypto_verify_32_bytes = P4.Eh)(), B._crypto_verify_64_bytes = () => (B._crypto_verify_64_bytes = P4.Fh)(), B._crypto_verify_16 = (A4, I4) => (B._crypto_verify_16 = P4.Gh)(A4, I4), B._crypto_verify_32 = (A4, I4) => (B._crypto_verify_32 = P4.Hh)(A4, I4), B._crypto_verify_64 = (A4, I4) => (B._crypto_verify_64 = P4.Ih)(A4, I4), B._randombytes_implementation_name = () => (B._randombytes_implementation_name = P4.Jh)(), B._randombytes_random = () => (B._randombytes_random = P4.Kh)(), B._randombytes_stir = () => (B._randombytes_stir = P4.Lh)(), B._randombytes_uniform = (A4) => (B._randombytes_uniform = P4.Mh)(A4), B._randombytes_buf = (A4, I4) => (B._randombytes_buf = P4.Nh)(A4, I4), B._randombytes_buf_deterministic = (A4, I4, g3) => (B._randombytes_buf_deterministic = P4.Oh)(A4, I4, g3), B._randombytes_seedbytes = () => (B._randombytes_seedbytes = P4.Ph)(), B._randombytes_close = () => (B._randombytes_close = P4.Qh)(), B._randombytes = (A4, I4, g3) => (B._randombytes = P4.Rh)(A4, I4, g3), B._sodium_bin2hex = (A4, I4, g3, C2) => (B._sodium_bin2hex = P4.Sh)(A4, I4, g3, C2), B._sodium_hex2bin = (A4, I4, g3, C2, Q3, i3, o2) => (B._sodium_hex2bin = P4.Th)(A4, I4, g3, C2, Q3, i3, o2), B._sodium_base64_encoded_len = (A4, I4) => (B._sodium_base64_encoded_len = P4.Uh)(A4, I4), B._sodium_bin2base64 = (A4, I4, g3, C2, Q3) => (B._sodium_bin2base64 = P4.Vh)(A4, I4, g3, C2, Q3), B._sodium_base642bin = (A4, I4, g3, C2, Q3, i3, o2, E2) => (B._sodium_base642bin = P4.Wh)(A4, I4, g3, C2, Q3, i3, o2, E2), B._sodium_init = () => (B._sodium_init = P4.Xh)(), B._sodium_pad = (A4, I4, g3, C2, Q3) => (B._sodium_pad = P4.Yh)(A4, I4, g3, C2, Q3), B._sodium_unpad = (A4, I4, g3, C2) => (B._sodium_unpad = P4.Zh)(A4, I4, g3, C2), B._sodium_version_string = () => (B._sodium_version_string = P4._h)(), B._sodium_library_version_major = () => (B._sodium_library_version_major = P4.$h)(), B._sodium_library_version_minor = () => (B._sodium_library_version_minor = P4.ai)(), B._sodium_library_minimal = () => (B._sodium_library_minimal = P4.bi)(), B._crypto_box_curve25519xchacha20poly1305_seed_keypair = (A4, I4, g3) => (B._crypto_box_curve25519xchacha20poly1305_seed_keypair = P4.ci)(A4, I4, g3), B._crypto_box_curve25519xchacha20poly1305_keypair = (A4, I4) => (B._crypto_box_curve25519xchacha20poly1305_keypair = P4.di)(A4, I4), B._crypto_box_curve25519xchacha20poly1305_beforenm = (A4, I4, g3) => (B._crypto_box_curve25519xchacha20poly1305_beforenm = P4.ei)(A4, I4, g3), B._crypto_box_curve25519xchacha20poly1305_detached_afternm = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_box_curve25519xchacha20poly1305_detached_afternm = P4.fi)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_box_curve25519xchacha20poly1305_detached = (A4, I4, g3, C2, Q3, i3, o2, E2) => (B._crypto_box_curve25519xchacha20poly1305_detached = P4.gi)(A4, I4, g3, C2, Q3, i3, o2, E2), B._crypto_box_curve25519xchacha20poly1305_easy_afternm = (A4, I4, g3, C2, Q3, i3) => (B._crypto_box_curve25519xchacha20poly1305_easy_afternm = P4.hi)(A4, I4, g3, C2, Q3, i3), B._crypto_box_curve25519xchacha20poly1305_easy = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_box_curve25519xchacha20poly1305_easy = P4.ii)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_box_curve25519xchacha20poly1305_open_detached_afternm = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_box_curve25519xchacha20poly1305_open_detached_afternm = P4.ji)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_box_curve25519xchacha20poly1305_open_detached = (A4, I4, g3, C2, Q3, i3, o2, E2) => (B._crypto_box_curve25519xchacha20poly1305_open_detached = P4.ki)(A4, I4, g3, C2, Q3, i3, o2, E2), B._crypto_box_curve25519xchacha20poly1305_open_easy_afternm = (A4, I4, g3, C2, Q3, i3) => (B._crypto_box_curve25519xchacha20poly1305_open_easy_afternm = P4.li)(A4, I4, g3, C2, Q3, i3), B._crypto_box_curve25519xchacha20poly1305_open_easy = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_box_curve25519xchacha20poly1305_open_easy = P4.mi)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_box_curve25519xchacha20poly1305_seedbytes = () => (B._crypto_box_curve25519xchacha20poly1305_seedbytes = P4.ni)(), B._crypto_box_curve25519xchacha20poly1305_publickeybytes = () => (B._crypto_box_curve25519xchacha20poly1305_publickeybytes = P4.oi)(), B._crypto_box_curve25519xchacha20poly1305_secretkeybytes = () => (B._crypto_box_curve25519xchacha20poly1305_secretkeybytes = P4.pi)(), B._crypto_box_curve25519xchacha20poly1305_beforenmbytes = () => (B._crypto_box_curve25519xchacha20poly1305_beforenmbytes = P4.qi)(), B._crypto_box_curve25519xchacha20poly1305_noncebytes = () => (B._crypto_box_curve25519xchacha20poly1305_noncebytes = P4.ri)(), B._crypto_box_curve25519xchacha20poly1305_macbytes = () => (B._crypto_box_curve25519xchacha20poly1305_macbytes = P4.si)(), B._crypto_box_curve25519xchacha20poly1305_messagebytes_max = () => (B._crypto_box_curve25519xchacha20poly1305_messagebytes_max = P4.ti)(), B._crypto_box_curve25519xchacha20poly1305_seal = (A4, I4, g3, C2, Q3) => (B._crypto_box_curve25519xchacha20poly1305_seal = P4.ui)(A4, I4, g3, C2, Q3), B._crypto_box_curve25519xchacha20poly1305_seal_open = (A4, I4, g3, C2, Q3, i3) => (B._crypto_box_curve25519xchacha20poly1305_seal_open = P4.vi)(A4, I4, g3, C2, Q3, i3), B._crypto_box_curve25519xchacha20poly1305_sealbytes = () => (B._crypto_box_curve25519xchacha20poly1305_sealbytes = P4.wi)(), B._crypto_core_ed25519_is_valid_point = (A4) => (B._crypto_core_ed25519_is_valid_point = P4.xi)(A4), B._crypto_core_ed25519_add = (A4, I4, g3) => (B._crypto_core_ed25519_add = P4.yi)(A4, I4, g3), B._crypto_core_ed25519_sub = (A4, I4, g3) => (B._crypto_core_ed25519_sub = P4.zi)(A4, I4, g3), B._crypto_core_ed25519_from_uniform = (A4, I4) => (B._crypto_core_ed25519_from_uniform = P4.Ai)(A4, I4), B._crypto_core_ed25519_random = (A4) => (B._crypto_core_ed25519_random = P4.Bi)(A4), B._crypto_core_ed25519_scalar_random = (A4) => (B._crypto_core_ed25519_scalar_random = P4.Ci)(A4), B._crypto_core_ed25519_scalar_invert = (A4, I4) => (B._crypto_core_ed25519_scalar_invert = P4.Di)(A4, I4), B._crypto_core_ed25519_scalar_negate = (A4, I4) => (B._crypto_core_ed25519_scalar_negate = P4.Ei)(A4, I4), B._crypto_core_ed25519_scalar_complement = (A4, I4) => (B._crypto_core_ed25519_scalar_complement = P4.Fi)(A4, I4), B._crypto_core_ed25519_scalar_add = (A4, I4, g3) => (B._crypto_core_ed25519_scalar_add = P4.Gi)(A4, I4, g3), B._crypto_core_ed25519_scalar_reduce = (A4, I4) => (B._crypto_core_ed25519_scalar_reduce = P4.Hi)(A4, I4), B._crypto_core_ed25519_scalar_sub = (A4, I4, g3) => (B._crypto_core_ed25519_scalar_sub = P4.Ii)(A4, I4, g3), B._crypto_core_ed25519_scalar_mul = (A4, I4, g3) => (B._crypto_core_ed25519_scalar_mul = P4.Ji)(A4, I4, g3), B._crypto_core_ed25519_bytes = () => (B._crypto_core_ed25519_bytes = P4.Ki)(), B._crypto_core_ed25519_nonreducedscalarbytes = () => (B._crypto_core_ed25519_nonreducedscalarbytes = P4.Li)(), B._crypto_core_ed25519_uniformbytes = () => (B._crypto_core_ed25519_uniformbytes = P4.Mi)(), B._crypto_core_ed25519_hashbytes = () => (B._crypto_core_ed25519_hashbytes = P4.Ni)(), B._crypto_core_ed25519_scalarbytes = () => (B._crypto_core_ed25519_scalarbytes = P4.Oi)(), B._crypto_core_ristretto255_is_valid_point = (A4) => (B._crypto_core_ristretto255_is_valid_point = P4.Pi)(A4), B._crypto_core_ristretto255_add = (A4, I4, g3) => (B._crypto_core_ristretto255_add = P4.Qi)(A4, I4, g3), B._crypto_core_ristretto255_sub = (A4, I4, g3) => (B._crypto_core_ristretto255_sub = P4.Ri)(A4, I4, g3), B._crypto_core_ristretto255_from_hash = (A4, I4) => (B._crypto_core_ristretto255_from_hash = P4.Si)(A4, I4), B._crypto_core_ristretto255_random = (A4) => (B._crypto_core_ristretto255_random = P4.Ti)(A4), B._crypto_core_ristretto255_scalar_random = (A4) => (B._crypto_core_ristretto255_scalar_random = P4.Ui)(A4), B._crypto_core_ristretto255_scalar_invert = (A4, I4) => (B._crypto_core_ristretto255_scalar_invert = P4.Vi)(A4, I4), B._crypto_core_ristretto255_scalar_negate = (A4, I4) => (B._crypto_core_ristretto255_scalar_negate = P4.Wi)(A4, I4), B._crypto_core_ristretto255_scalar_complement = (A4, I4) => (B._crypto_core_ristretto255_scalar_complement = P4.Xi)(A4, I4), B._crypto_core_ristretto255_scalar_add = (A4, I4, g3) => (B._crypto_core_ristretto255_scalar_add = P4.Yi)(A4, I4, g3), B._crypto_core_ristretto255_scalar_sub = (A4, I4, g3) => (B._crypto_core_ristretto255_scalar_sub = P4.Zi)(A4, I4, g3), B._crypto_core_ristretto255_scalar_mul = (A4, I4, g3) => (B._crypto_core_ristretto255_scalar_mul = P4._i)(A4, I4, g3), B._crypto_core_ristretto255_scalar_reduce = (A4, I4) => (B._crypto_core_ristretto255_scalar_reduce = P4.$i)(A4, I4), B._crypto_core_ristretto255_bytes = () => (B._crypto_core_ristretto255_bytes = P4.aj)(), B._crypto_core_ristretto255_nonreducedscalarbytes = () => (B._crypto_core_ristretto255_nonreducedscalarbytes = P4.bj)(), B._crypto_core_ristretto255_hashbytes = () => (B._crypto_core_ristretto255_hashbytes = P4.cj)(), B._crypto_core_ristretto255_scalarbytes = () => (B._crypto_core_ristretto255_scalarbytes = P4.dj)(), B._crypto_pwhash_scryptsalsa208sha256_ll = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2) => (B._crypto_pwhash_scryptsalsa208sha256_ll = P4.ej)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2), B._crypto_pwhash_scryptsalsa208sha256_bytes_min = () => (B._crypto_pwhash_scryptsalsa208sha256_bytes_min = P4.fj)(), B._crypto_pwhash_scryptsalsa208sha256_bytes_max = () => (B._crypto_pwhash_scryptsalsa208sha256_bytes_max = P4.gj)(), B._crypto_pwhash_scryptsalsa208sha256_passwd_min = () => (B._crypto_pwhash_scryptsalsa208sha256_passwd_min = P4.hj)(), B._crypto_pwhash_scryptsalsa208sha256_passwd_max = () => (B._crypto_pwhash_scryptsalsa208sha256_passwd_max = P4.ij)(), B._crypto_pwhash_scryptsalsa208sha256_saltbytes = () => (B._crypto_pwhash_scryptsalsa208sha256_saltbytes = P4.jj)(), B._crypto_pwhash_scryptsalsa208sha256_strbytes = () => (B._crypto_pwhash_scryptsalsa208sha256_strbytes = P4.kj)(), B._crypto_pwhash_scryptsalsa208sha256_strprefix = () => (B._crypto_pwhash_scryptsalsa208sha256_strprefix = P4.lj)(), B._crypto_pwhash_scryptsalsa208sha256_opslimit_min = () => (B._crypto_pwhash_scryptsalsa208sha256_opslimit_min = P4.mj)(), B._crypto_pwhash_scryptsalsa208sha256_opslimit_max = () => (B._crypto_pwhash_scryptsalsa208sha256_opslimit_max = P4.nj)(), B._crypto_pwhash_scryptsalsa208sha256_memlimit_min = () => (B._crypto_pwhash_scryptsalsa208sha256_memlimit_min = P4.oj)(), B._crypto_pwhash_scryptsalsa208sha256_memlimit_max = () => (B._crypto_pwhash_scryptsalsa208sha256_memlimit_max = P4.pj)(), B._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive = () => (B._crypto_pwhash_scryptsalsa208sha256_opslimit_interactive = P4.qj)(), B._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive = () => (B._crypto_pwhash_scryptsalsa208sha256_memlimit_interactive = P4.rj)(), B._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive = () => (B._crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive = P4.sj)(), B._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive = () => (B._crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive = P4.tj)(), B._crypto_pwhash_scryptsalsa208sha256 = (A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2) => (B._crypto_pwhash_scryptsalsa208sha256 = P4.uj)(A4, I4, g3, C2, Q3, i3, o2, E2, a2, _2), B._crypto_pwhash_scryptsalsa208sha256_str = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_pwhash_scryptsalsa208sha256_str = P4.vj)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_pwhash_scryptsalsa208sha256_str_verify = (A4, I4, g3, C2) => (B._crypto_pwhash_scryptsalsa208sha256_str_verify = P4.wj)(A4, I4, g3, C2), B._crypto_pwhash_scryptsalsa208sha256_str_needs_rehash = (A4, I4, g3, C2) => (B._crypto_pwhash_scryptsalsa208sha256_str_needs_rehash = P4.xj)(A4, I4, g3, C2), B._crypto_scalarmult_ed25519 = (A4, I4, g3) => (B._crypto_scalarmult_ed25519 = P4.yj)(A4, I4, g3), B._crypto_scalarmult_ed25519_noclamp = (A4, I4, g3) => (B._crypto_scalarmult_ed25519_noclamp = P4.zj)(A4, I4, g3), B._crypto_scalarmult_ed25519_base = (A4, I4) => (B._crypto_scalarmult_ed25519_base = P4.Aj)(A4, I4), B._crypto_scalarmult_ed25519_base_noclamp = (A4, I4) => (B._crypto_scalarmult_ed25519_base_noclamp = P4.Bj)(A4, I4), B._crypto_scalarmult_ed25519_bytes = () => (B._crypto_scalarmult_ed25519_bytes = P4.Cj)(), B._crypto_scalarmult_ed25519_scalarbytes = () => (B._crypto_scalarmult_ed25519_scalarbytes = P4.Dj)(), B._crypto_scalarmult_ristretto255 = (A4, I4, g3) => (B._crypto_scalarmult_ristretto255 = P4.Ej)(A4, I4, g3), B._crypto_scalarmult_ristretto255_base = (A4, I4) => (B._crypto_scalarmult_ristretto255_base = P4.Fj)(A4, I4), B._crypto_scalarmult_ristretto255_bytes = () => (B._crypto_scalarmult_ristretto255_bytes = P4.Gj)(), B._crypto_scalarmult_ristretto255_scalarbytes = () => (B._crypto_scalarmult_ristretto255_scalarbytes = P4.Hj)(), B._crypto_secretbox_xchacha20poly1305_detached = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_secretbox_xchacha20poly1305_detached = P4.Ij)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_secretbox_xchacha20poly1305_easy = (A4, I4, g3, C2, Q3, i3) => (B._crypto_secretbox_xchacha20poly1305_easy = P4.Jj)(A4, I4, g3, C2, Q3, i3), B._crypto_secretbox_xchacha20poly1305_open_detached = (A4, I4, g3, C2, Q3, i3, o2) => (B._crypto_secretbox_xchacha20poly1305_open_detached = P4.Kj)(A4, I4, g3, C2, Q3, i3, o2), B._crypto_secretbox_xchacha20poly1305_open_easy = (A4, I4, g3, C2, Q3, i3) => (B._crypto_secretbox_xchacha20poly1305_open_easy = P4.Lj)(A4, I4, g3, C2, Q3, i3), B._crypto_secretbox_xchacha20poly1305_keybytes = () => (B._crypto_secretbox_xchacha20poly1305_keybytes = P4.Mj)(), B._crypto_secretbox_xchacha20poly1305_noncebytes = () => (B._crypto_secretbox_xchacha20poly1305_noncebytes = P4.Nj)(), B._crypto_secretbox_xchacha20poly1305_macbytes = () => (B._crypto_secretbox_xchacha20poly1305_macbytes = P4.Oj)(), B._crypto_secretbox_xchacha20poly1305_messagebytes_max = () => (B._crypto_secretbox_xchacha20poly1305_messagebytes_max = P4.Pj)(), B._crypto_shorthash_siphashx24_bytes = () => (B._crypto_shorthash_siphashx24_bytes = P4.Qj)(), B._crypto_shorthash_siphashx24_keybytes = () => (B._crypto_shorthash_siphashx24_keybytes = P4.Rj)(), B._crypto_shorthash_siphashx24 = (A4, I4, g3, C2, Q3) => (B._crypto_shorthash_siphashx24 = P4.Sj)(A4, I4, g3, C2, Q3), B._crypto_stream_salsa2012 = (A4, I4, g3, C2, Q3) => (B._crypto_stream_salsa2012 = P4.Tj)(A4, I4, g3, C2, Q3), B._crypto_stream_salsa2012_xor = (A4, I4, g3, C2, Q3, i3) => (B._crypto_stream_salsa2012_xor = P4.Uj)(A4, I4, g3, C2, Q3, i3), B._crypto_stream_salsa2012_keybytes = () => (B._crypto_stream_salsa2012_keybytes = P4.Vj)(), B._crypto_stream_salsa2012_noncebytes = () => (B._crypto_stream_salsa2012_noncebytes = P4.Wj)(), B._crypto_stream_salsa2012_messagebytes_max = () => (B._crypto_stream_salsa2012_messagebytes_max = P4.Xj)(), B._crypto_stream_salsa2012_keygen = (A4) => (B._crypto_stream_salsa2012_keygen = P4.Yj)(A4), B._crypto_stream_salsa208 = (A4, I4, g3, C2, Q3) => (B._crypto_stream_salsa208 = P4.Zj)(A4, I4, g3, C2, Q3), B._crypto_stream_salsa208_xor = (A4, I4, g3, C2, Q3, i3) => (B._crypto_stream_salsa208_xor = P4._j)(A4, I4, g3, C2, Q3, i3), B._crypto_stream_salsa208_keybytes = () => (B._crypto_stream_salsa208_keybytes = P4.$j)(), B._crypto_stream_salsa208_noncebytes = () => (B._crypto_stream_salsa208_noncebytes = P4.ak)(), B._crypto_stream_salsa208_messagebytes_max = () => (B._crypto_stream_salsa208_messagebytes_max = P4.bk)(), B._crypto_stream_salsa208_keygen = (A4) => (B._crypto_stream_salsa208_keygen = P4.ck)(A4), B._crypto_stream_xchacha20_keybytes = () => (B._crypto_stream_xchacha20_keybytes = P4.dk)(), B._crypto_stream_xchacha20_noncebytes = () => (B._crypto_stream_xchacha20_noncebytes = P4.ek)(), B._crypto_stream_xchacha20_messagebytes_max = () => (B._crypto_stream_xchacha20_messagebytes_max = P4.fk)(), B._crypto_stream_xchacha20 = (A4, I4, g3, C2, Q3) => (B._crypto_stream_xchacha20 = P4.gk)(A4, I4, g3, C2, Q3), B._crypto_stream_xchacha20_xor_ic = (A4, I4, g3, C2, Q3, i3, o2, E2) => (B._crypto_stream_xchacha20_xor_ic = P4.hk)(A4, I4, g3, C2, Q3, i3, o2, E2), B._crypto_stream_xchacha20_xor = (A4, I4, g3, C2, Q3, i3) => (B._crypto_stream_xchacha20_xor = P4.ik)(A4, I4, g3, C2, Q3, i3), B._crypto_stream_xchacha20_keygen = (A4) => (B._crypto_stream_xchacha20_keygen = P4.jk)(A4), B._malloc = (A4) => (B._malloc = P4.kk)(A4), B._free = (A4) => (B._free = P4.lk)(A4), B.setValue = function(A4, I4, g3 = "i8") {
            switch (g3.endsWith("*") && (g3 = "*"), g3) {
              case "i1":
              case "i8":
                y[A4] = I4;
                break;
              case "i16":
                h[A4 >> 1] = I4;
                break;
              case "i32":
                D[A4 >> 2] = I4;
                break;
              case "i64":
                U("to do setValue(i64) use WASM_BIGINT");
              case "float":
                p[A4 >> 2] = I4;
                break;
              case "double":
                w[A4 >> 3] = I4;
                break;
              case "*":
                f[A4 >> 2] = I4;
                break;
              default:
                U(`invalid type for setValue: ${g3}`);
            }
          }, B.getValue = function(A4, I4 = "i8") {
            switch (I4.endsWith("*") && (I4 = "*"), I4) {
              case "i1":
              case "i8":
                return y[A4];
              case "i16":
                return h[A4 >> 1];
              case "i32":
                return D[A4 >> 2];
              case "i64":
                U("to do getValue(i64) use WASM_BIGINT");
              case "float":
                return p[A4 >> 2];
              case "double":
                return w[A4 >> 3];
              case "*":
                return f[A4 >> 2];
              default:
                U(`invalid type for getValue: ${I4}`);
            }
          }, B.UTF8ToString = x, K = function A4() {
            l || q(), l || (K = A4);
          }, B.preInit) for ("function" == typeof B.preInit && (B.preInit = [B.preInit]); B.preInit.length > 0; ) B.preInit.pop()();
          q();
        }).catch(function() {
          return C.useBackupModule();
        }), I2;
      }
      "function" == typeof define && define.amd ? define(["exports"], I) : "object" == typeof exports && "string" != typeof exports.nodeName ? I(exports) : A.libsodium = I(A.libsodium_mod || (A.commonJsStrict = {}));
    }(exports);
  }
});

// node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js
var require_libsodium_wrappers = __commonJS({
  "node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js"(exports) {
    !function(e3) {
      function a(e4, a2) {
        "use strict";
        var r2, t = "uint8array", _ = a2.ready.then(function() {
          function t2() {
            if (0 !== r2._sodium_init()) throw new Error("libsodium was not correctly initialized.");
            for (var a3 = ["crypto_aead_aegis128l_decrypt", "crypto_aead_aegis128l_decrypt_detached", "crypto_aead_aegis128l_encrypt", "crypto_aead_aegis128l_encrypt_detached", "crypto_aead_aegis128l_keygen", "crypto_aead_aegis256_decrypt", "crypto_aead_aegis256_decrypt_detached", "crypto_aead_aegis256_encrypt", "crypto_aead_aegis256_encrypt_detached", "crypto_aead_aegis256_keygen", "crypto_aead_chacha20poly1305_decrypt", "crypto_aead_chacha20poly1305_decrypt_detached", "crypto_aead_chacha20poly1305_encrypt", "crypto_aead_chacha20poly1305_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_decrypt", "crypto_aead_chacha20poly1305_ietf_decrypt_detached", "crypto_aead_chacha20poly1305_ietf_encrypt", "crypto_aead_chacha20poly1305_ietf_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_keygen", "crypto_aead_chacha20poly1305_keygen", "crypto_aead_xchacha20poly1305_ietf_decrypt", "crypto_aead_xchacha20poly1305_ietf_decrypt_detached", "crypto_aead_xchacha20poly1305_ietf_encrypt", "crypto_aead_xchacha20poly1305_ietf_encrypt_detached", "crypto_aead_xchacha20poly1305_ietf_keygen", "crypto_auth", "crypto_auth_hmacsha256", "crypto_auth_hmacsha256_final", "crypto_auth_hmacsha256_init", "crypto_auth_hmacsha256_keygen", "crypto_auth_hmacsha256_update", "crypto_auth_hmacsha256_verify", "crypto_auth_hmacsha512", "crypto_auth_hmacsha512256", "crypto_auth_hmacsha512256_final", "crypto_auth_hmacsha512256_init", "crypto_auth_hmacsha512256_keygen", "crypto_auth_hmacsha512256_update", "crypto_auth_hmacsha512256_verify", "crypto_auth_hmacsha512_final", "crypto_auth_hmacsha512_init", "crypto_auth_hmacsha512_keygen", "crypto_auth_hmacsha512_update", "crypto_auth_hmacsha512_verify", "crypto_auth_keygen", "crypto_auth_verify", "crypto_box_beforenm", "crypto_box_curve25519xchacha20poly1305_beforenm", "crypto_box_curve25519xchacha20poly1305_detached", "crypto_box_curve25519xchacha20poly1305_detached_afternm", "crypto_box_curve25519xchacha20poly1305_easy", "crypto_box_curve25519xchacha20poly1305_easy_afternm", "crypto_box_curve25519xchacha20poly1305_keypair", "crypto_box_curve25519xchacha20poly1305_open_detached", "crypto_box_curve25519xchacha20poly1305_open_detached_afternm", "crypto_box_curve25519xchacha20poly1305_open_easy", "crypto_box_curve25519xchacha20poly1305_open_easy_afternm", "crypto_box_curve25519xchacha20poly1305_seal", "crypto_box_curve25519xchacha20poly1305_seal_open", "crypto_box_curve25519xchacha20poly1305_seed_keypair", "crypto_box_detached", "crypto_box_easy", "crypto_box_easy_afternm", "crypto_box_keypair", "crypto_box_open_detached", "crypto_box_open_easy", "crypto_box_open_easy_afternm", "crypto_box_seal", "crypto_box_seal_open", "crypto_box_seed_keypair", "crypto_core_ed25519_add", "crypto_core_ed25519_from_hash", "crypto_core_ed25519_from_uniform", "crypto_core_ed25519_is_valid_point", "crypto_core_ed25519_random", "crypto_core_ed25519_scalar_add", "crypto_core_ed25519_scalar_complement", "crypto_core_ed25519_scalar_invert", "crypto_core_ed25519_scalar_mul", "crypto_core_ed25519_scalar_negate", "crypto_core_ed25519_scalar_random", "crypto_core_ed25519_scalar_reduce", "crypto_core_ed25519_scalar_sub", "crypto_core_ed25519_sub", "crypto_core_hchacha20", "crypto_core_hsalsa20", "crypto_core_ristretto255_add", "crypto_core_ristretto255_from_hash", "crypto_core_ristretto255_is_valid_point", "crypto_core_ristretto255_random", "crypto_core_ristretto255_scalar_add", "crypto_core_ristretto255_scalar_complement", "crypto_core_ristretto255_scalar_invert", "crypto_core_ristretto255_scalar_mul", "crypto_core_ristretto255_scalar_negate", "crypto_core_ristretto255_scalar_random", "crypto_core_ristretto255_scalar_reduce", "crypto_core_ristretto255_scalar_sub", "crypto_core_ristretto255_sub", "crypto_generichash", "crypto_generichash_blake2b_salt_personal", "crypto_generichash_final", "crypto_generichash_init", "crypto_generichash_keygen", "crypto_generichash_update", "crypto_hash", "crypto_hash_sha256", "crypto_hash_sha256_final", "crypto_hash_sha256_init", "crypto_hash_sha256_update", "crypto_hash_sha512", "crypto_hash_sha512_final", "crypto_hash_sha512_init", "crypto_hash_sha512_update", "crypto_kdf_derive_from_key", "crypto_kdf_keygen", "crypto_kx_client_session_keys", "crypto_kx_keypair", "crypto_kx_seed_keypair", "crypto_kx_server_session_keys", "crypto_onetimeauth", "crypto_onetimeauth_final", "crypto_onetimeauth_init", "crypto_onetimeauth_keygen", "crypto_onetimeauth_update", "crypto_onetimeauth_verify", "crypto_pwhash", "crypto_pwhash_scryptsalsa208sha256", "crypto_pwhash_scryptsalsa208sha256_ll", "crypto_pwhash_scryptsalsa208sha256_str", "crypto_pwhash_scryptsalsa208sha256_str_verify", "crypto_pwhash_str", "crypto_pwhash_str_needs_rehash", "crypto_pwhash_str_verify", "crypto_scalarmult", "crypto_scalarmult_base", "crypto_scalarmult_ed25519", "crypto_scalarmult_ed25519_base", "crypto_scalarmult_ed25519_base_noclamp", "crypto_scalarmult_ed25519_noclamp", "crypto_scalarmult_ristretto255", "crypto_scalarmult_ristretto255_base", "crypto_secretbox_detached", "crypto_secretbox_easy", "crypto_secretbox_keygen", "crypto_secretbox_open_detached", "crypto_secretbox_open_easy", "crypto_secretstream_xchacha20poly1305_init_pull", "crypto_secretstream_xchacha20poly1305_init_push", "crypto_secretstream_xchacha20poly1305_keygen", "crypto_secretstream_xchacha20poly1305_pull", "crypto_secretstream_xchacha20poly1305_push", "crypto_secretstream_xchacha20poly1305_rekey", "crypto_shorthash", "crypto_shorthash_keygen", "crypto_shorthash_siphashx24", "crypto_sign", "crypto_sign_detached", "crypto_sign_ed25519_pk_to_curve25519", "crypto_sign_ed25519_sk_to_curve25519", "crypto_sign_ed25519_sk_to_pk", "crypto_sign_ed25519_sk_to_seed", "crypto_sign_final_create", "crypto_sign_final_verify", "crypto_sign_init", "crypto_sign_keypair", "crypto_sign_open", "crypto_sign_seed_keypair", "crypto_sign_update", "crypto_sign_verify_detached", "crypto_stream_chacha20", "crypto_stream_chacha20_ietf_xor", "crypto_stream_chacha20_ietf_xor_ic", "crypto_stream_chacha20_keygen", "crypto_stream_chacha20_xor", "crypto_stream_chacha20_xor_ic", "crypto_stream_keygen", "crypto_stream_xchacha20_keygen", "crypto_stream_xchacha20_xor", "crypto_stream_xchacha20_xor_ic", "randombytes_buf", "randombytes_buf_deterministic", "randombytes_close", "randombytes_random", "randombytes_set_implementation", "randombytes_stir", "randombytes_uniform", "sodium_version_string"], t3 = [x, k, S, T, w, Y, B, A, M, I, K, N, L, O, U, C, P4, R, X, G, D, F, V, H, W, q, j, z, J, Q2, Z, $, ee, ae, re2, te, _e, ne, se, ce, oe, he, pe, ye, ie, le, ue, de, ve, ge, be, fe, me, Ee, xe, ke, Se, Te, we, Ye, Be, Ae, Me, Ie, Ke, Ne, Le, Oe, Ue, Ce, Pe, Re, Xe, Ge, De, Fe, Ve, He, We, qe, je, ze, Je, Qe, Ze, $e, ea, aa, ra, ta, _a7, na, sa, ca, oa, ha, pa, ya, ia, la, ua, da, va, ga, ba, fa, ma, Ea, xa, ka, Sa, Ta, wa, Ya, Ba, Aa, Ma, Ia, Ka, Na, La, Oa, Ua, Ca, Pa, Ra, Xa, Ga, Da, Fa, Va, Ha, Wa, qa, ja, za, Ja, Qa, Za, $a, er, ar, rr, tr, _r, nr, sr, cr, or2, hr, pr, yr, ir, lr, ur, dr, vr, gr, br, fr, mr, Er, xr, kr, Sr, Tr, wr, Yr, Br, Ar, Mr, Ir, Kr, Nr, Lr, Or, Ur, Cr, Pr, Rr, Xr, Gr, Dr, Fr, Vr, Hr, Wr, qr2], _3 = 0; _3 < t3.length; _3++) "function" == typeof r2["_" + a3[_3]] && (e4[a3[_3]] = t3[_3]);
            var n4 = ["SODIUM_LIBRARY_VERSION_MAJOR", "SODIUM_LIBRARY_VERSION_MINOR", "crypto_aead_aegis128l_ABYTES", "crypto_aead_aegis128l_KEYBYTES", "crypto_aead_aegis128l_MESSAGEBYTES_MAX", "crypto_aead_aegis128l_NPUBBYTES", "crypto_aead_aegis128l_NSECBYTES", "crypto_aead_aegis256_ABYTES", "crypto_aead_aegis256_KEYBYTES", "crypto_aead_aegis256_MESSAGEBYTES_MAX", "crypto_aead_aegis256_NPUBBYTES", "crypto_aead_aegis256_NSECBYTES", "crypto_aead_aes256gcm_ABYTES", "crypto_aead_aes256gcm_KEYBYTES", "crypto_aead_aes256gcm_MESSAGEBYTES_MAX", "crypto_aead_aes256gcm_NPUBBYTES", "crypto_aead_aes256gcm_NSECBYTES", "crypto_aead_chacha20poly1305_ABYTES", "crypto_aead_chacha20poly1305_IETF_ABYTES", "crypto_aead_chacha20poly1305_IETF_KEYBYTES", "crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_IETF_NPUBBYTES", "crypto_aead_chacha20poly1305_IETF_NSECBYTES", "crypto_aead_chacha20poly1305_KEYBYTES", "crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_NPUBBYTES", "crypto_aead_chacha20poly1305_NSECBYTES", "crypto_aead_chacha20poly1305_ietf_ABYTES", "crypto_aead_chacha20poly1305_ietf_KEYBYTES", "crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_ietf_NPUBBYTES", "crypto_aead_chacha20poly1305_ietf_NSECBYTES", "crypto_aead_xchacha20poly1305_IETF_ABYTES", "crypto_aead_xchacha20poly1305_IETF_KEYBYTES", "crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_IETF_NPUBBYTES", "crypto_aead_xchacha20poly1305_IETF_NSECBYTES", "crypto_aead_xchacha20poly1305_ietf_ABYTES", "crypto_aead_xchacha20poly1305_ietf_KEYBYTES", "crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_ietf_NPUBBYTES", "crypto_aead_xchacha20poly1305_ietf_NSECBYTES", "crypto_auth_BYTES", "crypto_auth_KEYBYTES", "crypto_auth_hmacsha256_BYTES", "crypto_auth_hmacsha256_KEYBYTES", "crypto_auth_hmacsha512256_BYTES", "crypto_auth_hmacsha512256_KEYBYTES", "crypto_auth_hmacsha512_BYTES", "crypto_auth_hmacsha512_KEYBYTES", "crypto_box_BEFORENMBYTES", "crypto_box_MACBYTES", "crypto_box_MESSAGEBYTES_MAX", "crypto_box_NONCEBYTES", "crypto_box_PUBLICKEYBYTES", "crypto_box_SEALBYTES", "crypto_box_SECRETKEYBYTES", "crypto_box_SEEDBYTES", "crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES", "crypto_box_curve25519xchacha20poly1305_MACBYTES", "crypto_box_curve25519xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xchacha20poly1305_NONCEBYTES", "crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEALBYTES", "crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEEDBYTES", "crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES", "crypto_box_curve25519xsalsa20poly1305_MACBYTES", "crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xsalsa20poly1305_NONCEBYTES", "crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SEEDBYTES", "crypto_core_ed25519_BYTES", "crypto_core_ed25519_HASHBYTES", "crypto_core_ed25519_NONREDUCEDSCALARBYTES", "crypto_core_ed25519_SCALARBYTES", "crypto_core_ed25519_UNIFORMBYTES", "crypto_core_hchacha20_CONSTBYTES", "crypto_core_hchacha20_INPUTBYTES", "crypto_core_hchacha20_KEYBYTES", "crypto_core_hchacha20_OUTPUTBYTES", "crypto_core_hsalsa20_CONSTBYTES", "crypto_core_hsalsa20_INPUTBYTES", "crypto_core_hsalsa20_KEYBYTES", "crypto_core_hsalsa20_OUTPUTBYTES", "crypto_core_ristretto255_BYTES", "crypto_core_ristretto255_HASHBYTES", "crypto_core_ristretto255_NONREDUCEDSCALARBYTES", "crypto_core_ristretto255_SCALARBYTES", "crypto_core_salsa2012_CONSTBYTES", "crypto_core_salsa2012_INPUTBYTES", "crypto_core_salsa2012_KEYBYTES", "crypto_core_salsa2012_OUTPUTBYTES", "crypto_core_salsa208_CONSTBYTES", "crypto_core_salsa208_INPUTBYTES", "crypto_core_salsa208_KEYBYTES", "crypto_core_salsa208_OUTPUTBYTES", "crypto_core_salsa20_CONSTBYTES", "crypto_core_salsa20_INPUTBYTES", "crypto_core_salsa20_KEYBYTES", "crypto_core_salsa20_OUTPUTBYTES", "crypto_generichash_BYTES", "crypto_generichash_BYTES_MAX", "crypto_generichash_BYTES_MIN", "crypto_generichash_KEYBYTES", "crypto_generichash_KEYBYTES_MAX", "crypto_generichash_KEYBYTES_MIN", "crypto_generichash_blake2b_BYTES", "crypto_generichash_blake2b_BYTES_MAX", "crypto_generichash_blake2b_BYTES_MIN", "crypto_generichash_blake2b_KEYBYTES", "crypto_generichash_blake2b_KEYBYTES_MAX", "crypto_generichash_blake2b_KEYBYTES_MIN", "crypto_generichash_blake2b_PERSONALBYTES", "crypto_generichash_blake2b_SALTBYTES", "crypto_hash_BYTES", "crypto_hash_sha256_BYTES", "crypto_hash_sha512_BYTES", "crypto_kdf_BYTES_MAX", "crypto_kdf_BYTES_MIN", "crypto_kdf_CONTEXTBYTES", "crypto_kdf_KEYBYTES", "crypto_kdf_blake2b_BYTES_MAX", "crypto_kdf_blake2b_BYTES_MIN", "crypto_kdf_blake2b_CONTEXTBYTES", "crypto_kdf_blake2b_KEYBYTES", "crypto_kdf_hkdf_sha256_BYTES_MAX", "crypto_kdf_hkdf_sha256_BYTES_MIN", "crypto_kdf_hkdf_sha256_KEYBYTES", "crypto_kdf_hkdf_sha512_BYTES_MAX", "crypto_kdf_hkdf_sha512_BYTES_MIN", "crypto_kdf_hkdf_sha512_KEYBYTES", "crypto_kx_PUBLICKEYBYTES", "crypto_kx_SECRETKEYBYTES", "crypto_kx_SEEDBYTES", "crypto_kx_SESSIONKEYBYTES", "crypto_onetimeauth_BYTES", "crypto_onetimeauth_KEYBYTES", "crypto_onetimeauth_poly1305_BYTES", "crypto_onetimeauth_poly1305_KEYBYTES", "crypto_pwhash_ALG_ARGON2I13", "crypto_pwhash_ALG_ARGON2ID13", "crypto_pwhash_ALG_DEFAULT", "crypto_pwhash_BYTES_MAX", "crypto_pwhash_BYTES_MIN", "crypto_pwhash_MEMLIMIT_INTERACTIVE", "crypto_pwhash_MEMLIMIT_MAX", "crypto_pwhash_MEMLIMIT_MIN", "crypto_pwhash_MEMLIMIT_MODERATE", "crypto_pwhash_MEMLIMIT_SENSITIVE", "crypto_pwhash_OPSLIMIT_INTERACTIVE", "crypto_pwhash_OPSLIMIT_MAX", "crypto_pwhash_OPSLIMIT_MIN", "crypto_pwhash_OPSLIMIT_MODERATE", "crypto_pwhash_OPSLIMIT_SENSITIVE", "crypto_pwhash_PASSWD_MAX", "crypto_pwhash_PASSWD_MIN", "crypto_pwhash_SALTBYTES", "crypto_pwhash_STRBYTES", "crypto_pwhash_argon2i_BYTES_MAX", "crypto_pwhash_argon2i_BYTES_MIN", "crypto_pwhash_argon2i_MEMLIMIT_INTERACTIVE", "crypto_pwhash_argon2i_MEMLIMIT_MAX", "crypto_pwhash_argon2i_MEMLIMIT_MIN", "crypto_pwhash_argon2i_MEMLIMIT_MODERATE", "crypto_pwhash_argon2i_MEMLIMIT_SENSITIVE", "crypto_pwhash_argon2i_OPSLIMIT_INTERACTIVE", "crypto_pwhash_argon2i_OPSLIMIT_MAX", "crypto_pwhash_argon2i_OPSLIMIT_MIN", "crypto_pwhash_argon2i_OPSLIMIT_MODERATE", "crypto_pwhash_argon2i_OPSLIMIT_SENSITIVE", "crypto_pwhash_argon2i_PASSWD_MAX", "crypto_pwhash_argon2i_PASSWD_MIN", "crypto_pwhash_argon2i_SALTBYTES", "crypto_pwhash_argon2i_STRBYTES", "crypto_pwhash_argon2id_BYTES_MAX", "crypto_pwhash_argon2id_BYTES_MIN", "crypto_pwhash_argon2id_MEMLIMIT_INTERACTIVE", "crypto_pwhash_argon2id_MEMLIMIT_MAX", "crypto_pwhash_argon2id_MEMLIMIT_MIN", "crypto_pwhash_argon2id_MEMLIMIT_MODERATE", "crypto_pwhash_argon2id_MEMLIMIT_SENSITIVE", "crypto_pwhash_argon2id_OPSLIMIT_INTERACTIVE", "crypto_pwhash_argon2id_OPSLIMIT_MAX", "crypto_pwhash_argon2id_OPSLIMIT_MIN", "crypto_pwhash_argon2id_OPSLIMIT_MODERATE", "crypto_pwhash_argon2id_OPSLIMIT_SENSITIVE", "crypto_pwhash_argon2id_PASSWD_MAX", "crypto_pwhash_argon2id_PASSWD_MIN", "crypto_pwhash_argon2id_SALTBYTES", "crypto_pwhash_argon2id_STRBYTES", "crypto_pwhash_scryptsalsa208sha256_BYTES_MAX", "crypto_pwhash_scryptsalsa208sha256_BYTES_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_PASSWD_MAX", "crypto_pwhash_scryptsalsa208sha256_PASSWD_MIN", "crypto_pwhash_scryptsalsa208sha256_SALTBYTES", "crypto_pwhash_scryptsalsa208sha256_STRBYTES", "crypto_scalarmult_BYTES", "crypto_scalarmult_SCALARBYTES", "crypto_scalarmult_curve25519_BYTES", "crypto_scalarmult_curve25519_SCALARBYTES", "crypto_scalarmult_ed25519_BYTES", "crypto_scalarmult_ed25519_SCALARBYTES", "crypto_scalarmult_ristretto255_BYTES", "crypto_scalarmult_ristretto255_SCALARBYTES", "crypto_secretbox_KEYBYTES", "crypto_secretbox_MACBYTES", "crypto_secretbox_MESSAGEBYTES_MAX", "crypto_secretbox_NONCEBYTES", "crypto_secretbox_xchacha20poly1305_KEYBYTES", "crypto_secretbox_xchacha20poly1305_MACBYTES", "crypto_secretbox_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xchacha20poly1305_NONCEBYTES", "crypto_secretbox_xsalsa20poly1305_KEYBYTES", "crypto_secretbox_xsalsa20poly1305_MACBYTES", "crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xsalsa20poly1305_NONCEBYTES", "crypto_secretstream_xchacha20poly1305_ABYTES", "crypto_secretstream_xchacha20poly1305_HEADERBYTES", "crypto_secretstream_xchacha20poly1305_KEYBYTES", "crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretstream_xchacha20poly1305_TAG_FINAL", "crypto_secretstream_xchacha20poly1305_TAG_MESSAGE", "crypto_secretstream_xchacha20poly1305_TAG_PUSH", "crypto_secretstream_xchacha20poly1305_TAG_REKEY", "crypto_shorthash_BYTES", "crypto_shorthash_KEYBYTES", "crypto_shorthash_siphash24_BYTES", "crypto_shorthash_siphash24_KEYBYTES", "crypto_shorthash_siphashx24_BYTES", "crypto_shorthash_siphashx24_KEYBYTES", "crypto_sign_BYTES", "crypto_sign_MESSAGEBYTES_MAX", "crypto_sign_PUBLICKEYBYTES", "crypto_sign_SECRETKEYBYTES", "crypto_sign_SEEDBYTES", "crypto_sign_ed25519_BYTES", "crypto_sign_ed25519_MESSAGEBYTES_MAX", "crypto_sign_ed25519_PUBLICKEYBYTES", "crypto_sign_ed25519_SECRETKEYBYTES", "crypto_sign_ed25519_SEEDBYTES", "crypto_stream_KEYBYTES", "crypto_stream_MESSAGEBYTES_MAX", "crypto_stream_NONCEBYTES", "crypto_stream_chacha20_IETF_KEYBYTES", "crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX", "crypto_stream_chacha20_IETF_NONCEBYTES", "crypto_stream_chacha20_KEYBYTES", "crypto_stream_chacha20_MESSAGEBYTES_MAX", "crypto_stream_chacha20_NONCEBYTES", "crypto_stream_chacha20_ietf_KEYBYTES", "crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX", "crypto_stream_chacha20_ietf_NONCEBYTES", "crypto_stream_salsa2012_KEYBYTES", "crypto_stream_salsa2012_MESSAGEBYTES_MAX", "crypto_stream_salsa2012_NONCEBYTES", "crypto_stream_salsa208_KEYBYTES", "crypto_stream_salsa208_MESSAGEBYTES_MAX", "crypto_stream_salsa208_NONCEBYTES", "crypto_stream_salsa20_KEYBYTES", "crypto_stream_salsa20_MESSAGEBYTES_MAX", "crypto_stream_salsa20_NONCEBYTES", "crypto_stream_xchacha20_KEYBYTES", "crypto_stream_xchacha20_MESSAGEBYTES_MAX", "crypto_stream_xchacha20_NONCEBYTES", "crypto_stream_xsalsa20_KEYBYTES", "crypto_stream_xsalsa20_MESSAGEBYTES_MAX", "crypto_stream_xsalsa20_NONCEBYTES", "crypto_verify_16_BYTES", "crypto_verify_32_BYTES", "crypto_verify_64_BYTES"];
            for (_3 = 0; _3 < n4.length; _3++) "function" == typeof (c3 = r2["_" + n4[_3].toLowerCase()]) && (e4[n4[_3]] = c3());
            var s3 = ["SODIUM_VERSION_STRING", "crypto_pwhash_STRPREFIX", "crypto_pwhash_argon2i_STRPREFIX", "crypto_pwhash_argon2id_STRPREFIX", "crypto_pwhash_scryptsalsa208sha256_STRPREFIX"];
            for (_3 = 0; _3 < s3.length; _3++) {
              var c3;
              "function" == typeof (c3 = r2["_" + s3[_3].toLowerCase()]) && (e4[s3[_3]] = r2.UTF8ToString(c3()));
            }
          }
          r2 = a2;
          try {
            t2();
            var _2 = new Uint8Array([98, 97, 108, 108, 115]), n3 = e4.randombytes_buf(e4.crypto_secretbox_NONCEBYTES), s2 = e4.randombytes_buf(e4.crypto_secretbox_KEYBYTES), c2 = e4.crypto_secretbox_easy(_2, n3, s2), o2 = e4.crypto_secretbox_open_easy(c2, n3, s2);
            if (e4.memcmp(_2, o2)) return;
          } catch (e5) {
            if (null == r2.useBackupModule) throw new Error("Both wasm and asm failed to load" + e5);
          }
          r2.useBackupModule(), t2();
        });
        function n(e5) {
          if ("function" == typeof TextEncoder) return new TextEncoder().encode(e5);
          e5 = unescape(encodeURIComponent(e5));
          for (var a3 = new Uint8Array(e5.length), r3 = 0, t2 = e5.length; r3 < t2; r3++) a3[r3] = e5.charCodeAt(r3);
          return a3;
        }
        function s(e5) {
          if ("function" == typeof TextDecoder) return new TextDecoder("utf-8", { fatal: true }).decode(e5);
          var a3 = 8192, r3 = Math.ceil(e5.length / a3);
          if (r3 <= 1) try {
            return decodeURIComponent(escape(String.fromCharCode.apply(null, e5)));
          } catch (e6) {
            throw new TypeError("The encoded data was not valid.");
          }
          for (var t2 = "", _2 = 0, n3 = 0; n3 < r3; n3++) {
            var c2 = Array.prototype.slice.call(e5, n3 * a3 + _2, (n3 + 1) * a3 + _2);
            if (0 != c2.length) {
              var o2, h2 = c2.length, p2 = 0;
              do {
                var y2 = c2[--h2];
                y2 >= 240 ? (p2 = 4, o2 = true) : y2 >= 224 ? (p2 = 3, o2 = true) : y2 >= 192 ? (p2 = 2, o2 = true) : y2 < 128 && (p2 = 1, o2 = true);
              } while (!o2);
              for (var i3 = p2 - (c2.length - h2), l2 = 0; l2 < i3; l2++) _2--, c2.pop();
              t2 += s(c2);
            }
          }
          return t2;
        }
        function c(e5) {
          e5 = E(null, e5, "input");
          for (var a3, r3, t2, _2 = "", n3 = 0; n3 < e5.length; n3++) t2 = 87 + (r3 = 15 & e5[n3]) + (r3 - 10 >> 8 & -39) << 8 | 87 + (a3 = e5[n3] >>> 4) + (a3 - 10 >> 8 & -39), _2 += String.fromCharCode(255 & t2) + String.fromCharCode(t2 >>> 8);
          return _2;
        }
        var o = { ORIGINAL: 1, ORIGINAL_NO_PADDING: 3, URLSAFE: 5, URLSAFE_NO_PADDING: 7 };
        function h(e5) {
          if (null == e5) return o.URLSAFE_NO_PADDING;
          if (e5 !== o.ORIGINAL && e5 !== o.ORIGINAL_NO_PADDING && e5 !== o.URLSAFE && e5 != o.URLSAFE_NO_PADDING) throw new Error("unsupported base64 variant");
          return e5;
        }
        function p(e5, a3) {
          a3 = h(a3), e5 = E(_2, e5, "input");
          var t2, _2 = [], n3 = 0 | Math.floor(e5.length / 3), c2 = e5.length - 3 * n3, o2 = 4 * n3 + (0 !== c2 ? 2 & a3 ? 2 + (c2 >>> 1) : 4 : 0), p2 = new u(o2 + 1), y2 = d2(e5);
          return _2.push(y2), _2.push(p2.address), 0 === r2._sodium_bin2base64(p2.address, p2.length, y2, e5.length, a3) && b2(_2, "conversion failed"), p2.length = o2, t2 = s(p2.to_Uint8Array()), g(_2), t2;
        }
        function y(e5, a3) {
          var r3 = a3 || t;
          if (!i2(r3)) throw new Error(r3 + " output format is not available");
          if (e5 instanceof u) {
            if ("uint8array" === r3) return e5.to_Uint8Array();
            if ("text" === r3) return s(e5.to_Uint8Array());
            if ("hex" === r3) return c(e5.to_Uint8Array());
            if ("base64" === r3) return p(e5.to_Uint8Array(), o.URLSAFE_NO_PADDING);
            throw new Error('What is output format "' + r3 + '"?');
          }
          if ("object" == typeof e5) {
            for (var _2 = Object.keys(e5), n3 = {}, h2 = 0; h2 < _2.length; h2++) n3[_2[h2]] = y(e5[_2[h2]], r3);
            return n3;
          }
          if ("string" == typeof e5) return e5;
          throw new TypeError("Cannot format output");
        }
        function i2(e5) {
          for (var a3 = ["uint8array", "text", "hex", "base64"], r3 = 0; r3 < a3.length; r3++) if (a3[r3] === e5) return true;
          return false;
        }
        function l(e5) {
          if (e5) {
            if ("string" != typeof e5) throw new TypeError("When defined, the output format must be a string");
            if (!i2(e5)) throw new Error(e5 + " is not a supported output format");
          }
        }
        function u(e5) {
          this.length = e5, this.address = v(e5);
        }
        function d2(e5) {
          var a3 = v(e5.length);
          return r2.HEAPU8.set(e5, a3), a3;
        }
        function v(e5) {
          var a3 = r2._malloc(e5);
          if (0 === a3) throw { message: "_malloc() failed", length: e5 };
          return a3;
        }
        function g(e5) {
          if (e5) for (var a3 = 0; a3 < e5.length; a3++) t2 = e5[a3], r2._free(t2);
          var t2;
        }
        function b2(e5, a3) {
          throw g(e5), new Error(a3);
        }
        function f(e5, a3) {
          throw g(e5), new TypeError(a3);
        }
        function m(e5, a3, r3) {
          null == a3 && f(e5, r3 + " cannot be null or undefined");
        }
        function E(e5, a3, r3) {
          return m(e5, a3, r3), a3 instanceof Uint8Array ? a3 : "string" == typeof a3 ? n(a3) : void f(e5, "unsupported input type for " + r3);
        }
        function x(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = null;
          null != e5 && (o2 = d2(e5 = E(c2, e5, "secret_nonce")), e5.length, c2.push(o2)), a3 = E(c2, a3, "ciphertext");
          var h2, p2 = r2._crypto_aead_aegis128l_abytes(), i3 = a3.length;
          i3 < p2 && f(c2, "ciphertext is too short"), h2 = d2(a3), c2.push(h2);
          var v2 = null, m2 = 0;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "additional_data")), m2 = t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var x2, k2 = 0 | r2._crypto_aead_aegis128l_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), x2 = d2(_2), c2.push(x2), n3 = E(c2, n3, "key");
          var S2, T2 = 0 | r2._crypto_aead_aegis128l_keybytes();
          n3.length !== T2 && f(c2, "invalid key length"), S2 = d2(n3), c2.push(S2);
          var w2 = new u(i3 - r2._crypto_aead_aegis128l_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === r2._crypto_aead_aegis128l_decrypt(Y2, null, o2, h2, i3, 0, v2, m2, 0, x2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b2(c2, "ciphertext cannot be decrypted using that key");
        }
        function k(e5, a3, t2, _2, n3, s2, c2) {
          var o2 = [];
          l(c2);
          var h2 = null;
          null != e5 && (h2 = d2(e5 = E(o2, e5, "secret_nonce")), e5.length, o2.push(h2));
          var p2 = d2(a3 = E(o2, a3, "ciphertext")), i3 = a3.length;
          o2.push(p2), t2 = E(o2, t2, "mac");
          var v2, m2 = 0 | r2._crypto_box_macbytes();
          t2.length !== m2 && f(o2, "invalid mac length"), v2 = d2(t2), o2.push(v2);
          var x2 = null, k2 = 0;
          null != _2 && (x2 = d2(_2 = E(o2, _2, "additional_data")), k2 = _2.length, o2.push(x2)), n3 = E(o2, n3, "public_nonce");
          var S2, T2 = 0 | r2._crypto_aead_aegis128l_npubbytes();
          n3.length !== T2 && f(o2, "invalid public_nonce length"), S2 = d2(n3), o2.push(S2), s2 = E(o2, s2, "key");
          var w2, Y2 = 0 | r2._crypto_aead_aegis128l_keybytes();
          s2.length !== Y2 && f(o2, "invalid key length"), w2 = d2(s2), o2.push(w2);
          var B2 = new u(0 | i3), A2 = B2.address;
          if (o2.push(A2), 0 === r2._crypto_aead_aegis128l_decrypt_detached(A2, h2, p2, i3, 0, v2, x2, k2, 0, S2, w2)) {
            var M2 = y(B2, c2);
            return g(o2), M2;
          }
          b2(o2, "ciphertext cannot be decrypted using that key");
        }
        function S(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = d2(e5 = E(c2, e5, "message")), h2 = e5.length;
          c2.push(o2);
          var p2 = null, i3 = 0;
          null != a3 && (p2 = d2(a3 = E(c2, a3, "additional_data")), i3 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_aegis128l_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d2(_2), c2.push(m2), n3 = E(c2, n3, "key");
          var k2, S2 = 0 | r2._crypto_aead_aegis128l_keybytes();
          n3.length !== S2 && f(c2, "invalid key length"), k2 = d2(n3), c2.push(k2);
          var T2 = new u(h2 + r2._crypto_aead_aegis128l_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === r2._crypto_aead_aegis128l_encrypt(w2, null, o2, h2, 0, p2, i3, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b2(c2, "invalid usage");
        }
        function T(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = d2(e5 = E(c2, e5, "message")), h2 = e5.length;
          c2.push(o2);
          var p2 = null, i3 = 0;
          null != a3 && (p2 = d2(a3 = E(c2, a3, "additional_data")), i3 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_aegis128l_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d2(_2), c2.push(m2), n3 = E(c2, n3, "key");
          var k2, S2 = 0 | r2._crypto_aead_aegis128l_keybytes();
          n3.length !== S2 && f(c2, "invalid key length"), k2 = d2(n3), c2.push(k2);
          var T2 = new u(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | r2._crypto_aead_aegis128l_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === r2._crypto_aead_aegis128l_encrypt_detached(w2, B2, null, o2, h2, 0, p2, i3, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b2(c2, "invalid usage");
        }
        function w(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_aead_aegis128l_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_aead_aegis128l_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function Y(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = null;
          null != e5 && (o2 = d2(e5 = E(c2, e5, "secret_nonce")), e5.length, c2.push(o2)), a3 = E(c2, a3, "ciphertext");
          var h2, p2 = r2._crypto_aead_aegis256_abytes(), i3 = a3.length;
          i3 < p2 && f(c2, "ciphertext is too short"), h2 = d2(a3), c2.push(h2);
          var v2 = null, m2 = 0;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "additional_data")), m2 = t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var x2, k2 = 0 | r2._crypto_aead_aegis256_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), x2 = d2(_2), c2.push(x2), n3 = E(c2, n3, "key");
          var S2, T2 = 0 | r2._crypto_aead_aegis256_keybytes();
          n3.length !== T2 && f(c2, "invalid key length"), S2 = d2(n3), c2.push(S2);
          var w2 = new u(i3 - r2._crypto_aead_aegis256_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === r2._crypto_aead_aegis256_decrypt(Y2, null, o2, h2, i3, 0, v2, m2, 0, x2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b2(c2, "ciphertext cannot be decrypted using that key");
        }
        function B(e5, a3, t2, _2, n3, s2, c2) {
          var o2 = [];
          l(c2);
          var h2 = null;
          null != e5 && (h2 = d2(e5 = E(o2, e5, "secret_nonce")), e5.length, o2.push(h2));
          var p2 = d2(a3 = E(o2, a3, "ciphertext")), i3 = a3.length;
          o2.push(p2), t2 = E(o2, t2, "mac");
          var v2, m2 = 0 | r2._crypto_box_macbytes();
          t2.length !== m2 && f(o2, "invalid mac length"), v2 = d2(t2), o2.push(v2);
          var x2 = null, k2 = 0;
          null != _2 && (x2 = d2(_2 = E(o2, _2, "additional_data")), k2 = _2.length, o2.push(x2)), n3 = E(o2, n3, "public_nonce");
          var S2, T2 = 0 | r2._crypto_aead_aegis256_npubbytes();
          n3.length !== T2 && f(o2, "invalid public_nonce length"), S2 = d2(n3), o2.push(S2), s2 = E(o2, s2, "key");
          var w2, Y2 = 0 | r2._crypto_aead_aegis256_keybytes();
          s2.length !== Y2 && f(o2, "invalid key length"), w2 = d2(s2), o2.push(w2);
          var B2 = new u(0 | i3), A2 = B2.address;
          if (o2.push(A2), 0 === r2._crypto_aead_aegis256_decrypt_detached(A2, h2, p2, i3, 0, v2, x2, k2, 0, S2, w2)) {
            var M2 = y(B2, c2);
            return g(o2), M2;
          }
          b2(o2, "ciphertext cannot be decrypted using that key");
        }
        function A(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = d2(e5 = E(c2, e5, "message")), h2 = e5.length;
          c2.push(o2);
          var p2 = null, i3 = 0;
          null != a3 && (p2 = d2(a3 = E(c2, a3, "additional_data")), i3 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_aegis256_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d2(_2), c2.push(m2), n3 = E(c2, n3, "key");
          var k2, S2 = 0 | r2._crypto_aead_aegis256_keybytes();
          n3.length !== S2 && f(c2, "invalid key length"), k2 = d2(n3), c2.push(k2);
          var T2 = new u(h2 + r2._crypto_aead_aegis256_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === r2._crypto_aead_aegis256_encrypt(w2, null, o2, h2, 0, p2, i3, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b2(c2, "invalid usage");
        }
        function M(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = d2(e5 = E(c2, e5, "message")), h2 = e5.length;
          c2.push(o2);
          var p2 = null, i3 = 0;
          null != a3 && (p2 = d2(a3 = E(c2, a3, "additional_data")), i3 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_aegis256_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d2(_2), c2.push(m2), n3 = E(c2, n3, "key");
          var k2, S2 = 0 | r2._crypto_aead_aegis256_keybytes();
          n3.length !== S2 && f(c2, "invalid key length"), k2 = d2(n3), c2.push(k2);
          var T2 = new u(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | r2._crypto_aead_aegis256_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === r2._crypto_aead_aegis256_encrypt_detached(w2, B2, null, o2, h2, 0, p2, i3, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b2(c2, "invalid usage");
        }
        function I(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_aead_aegis256_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_aead_aegis256_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function K(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = null;
          null != e5 && (o2 = d2(e5 = E(c2, e5, "secret_nonce")), e5.length, c2.push(o2)), a3 = E(c2, a3, "ciphertext");
          var h2, p2 = r2._crypto_aead_chacha20poly1305_abytes(), i3 = a3.length;
          i3 < p2 && f(c2, "ciphertext is too short"), h2 = d2(a3), c2.push(h2);
          var v2 = null, m2 = 0;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "additional_data")), m2 = t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var x2, k2 = 0 | r2._crypto_aead_chacha20poly1305_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), x2 = d2(_2), c2.push(x2), n3 = E(c2, n3, "key");
          var S2, T2 = 0 | r2._crypto_aead_chacha20poly1305_keybytes();
          n3.length !== T2 && f(c2, "invalid key length"), S2 = d2(n3), c2.push(S2);
          var w2 = new u(i3 - r2._crypto_aead_chacha20poly1305_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === r2._crypto_aead_chacha20poly1305_decrypt(Y2, null, o2, h2, i3, 0, v2, m2, 0, x2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b2(c2, "ciphertext cannot be decrypted using that key");
        }
        function N(e5, a3, t2, _2, n3, s2, c2) {
          var o2 = [];
          l(c2);
          var h2 = null;
          null != e5 && (h2 = d2(e5 = E(o2, e5, "secret_nonce")), e5.length, o2.push(h2));
          var p2 = d2(a3 = E(o2, a3, "ciphertext")), i3 = a3.length;
          o2.push(p2), t2 = E(o2, t2, "mac");
          var v2, m2 = 0 | r2._crypto_box_macbytes();
          t2.length !== m2 && f(o2, "invalid mac length"), v2 = d2(t2), o2.push(v2);
          var x2 = null, k2 = 0;
          null != _2 && (x2 = d2(_2 = E(o2, _2, "additional_data")), k2 = _2.length, o2.push(x2)), n3 = E(o2, n3, "public_nonce");
          var S2, T2 = 0 | r2._crypto_aead_chacha20poly1305_npubbytes();
          n3.length !== T2 && f(o2, "invalid public_nonce length"), S2 = d2(n3), o2.push(S2), s2 = E(o2, s2, "key");
          var w2, Y2 = 0 | r2._crypto_aead_chacha20poly1305_keybytes();
          s2.length !== Y2 && f(o2, "invalid key length"), w2 = d2(s2), o2.push(w2);
          var B2 = new u(0 | i3), A2 = B2.address;
          if (o2.push(A2), 0 === r2._crypto_aead_chacha20poly1305_decrypt_detached(A2, h2, p2, i3, 0, v2, x2, k2, 0, S2, w2)) {
            var M2 = y(B2, c2);
            return g(o2), M2;
          }
          b2(o2, "ciphertext cannot be decrypted using that key");
        }
        function L(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = d2(e5 = E(c2, e5, "message")), h2 = e5.length;
          c2.push(o2);
          var p2 = null, i3 = 0;
          null != a3 && (p2 = d2(a3 = E(c2, a3, "additional_data")), i3 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_chacha20poly1305_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d2(_2), c2.push(m2), n3 = E(c2, n3, "key");
          var k2, S2 = 0 | r2._crypto_aead_chacha20poly1305_keybytes();
          n3.length !== S2 && f(c2, "invalid key length"), k2 = d2(n3), c2.push(k2);
          var T2 = new u(h2 + r2._crypto_aead_chacha20poly1305_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === r2._crypto_aead_chacha20poly1305_encrypt(w2, null, o2, h2, 0, p2, i3, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b2(c2, "invalid usage");
        }
        function O(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = d2(e5 = E(c2, e5, "message")), h2 = e5.length;
          c2.push(o2);
          var p2 = null, i3 = 0;
          null != a3 && (p2 = d2(a3 = E(c2, a3, "additional_data")), i3 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_chacha20poly1305_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d2(_2), c2.push(m2), n3 = E(c2, n3, "key");
          var k2, S2 = 0 | r2._crypto_aead_chacha20poly1305_keybytes();
          n3.length !== S2 && f(c2, "invalid key length"), k2 = d2(n3), c2.push(k2);
          var T2 = new u(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | r2._crypto_aead_chacha20poly1305_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === r2._crypto_aead_chacha20poly1305_encrypt_detached(w2, B2, null, o2, h2, 0, p2, i3, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b2(c2, "invalid usage");
        }
        function U(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = null;
          null != e5 && (o2 = d2(e5 = E(c2, e5, "secret_nonce")), e5.length, c2.push(o2)), a3 = E(c2, a3, "ciphertext");
          var h2, p2 = r2._crypto_aead_chacha20poly1305_ietf_abytes(), i3 = a3.length;
          i3 < p2 && f(c2, "ciphertext is too short"), h2 = d2(a3), c2.push(h2);
          var v2 = null, m2 = 0;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "additional_data")), m2 = t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var x2, k2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), x2 = d2(_2), c2.push(x2), n3 = E(c2, n3, "key");
          var S2, T2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_keybytes();
          n3.length !== T2 && f(c2, "invalid key length"), S2 = d2(n3), c2.push(S2);
          var w2 = new u(i3 - r2._crypto_aead_chacha20poly1305_ietf_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === r2._crypto_aead_chacha20poly1305_ietf_decrypt(Y2, null, o2, h2, i3, 0, v2, m2, 0, x2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b2(c2, "ciphertext cannot be decrypted using that key");
        }
        function C(e5, a3, t2, _2, n3, s2, c2) {
          var o2 = [];
          l(c2);
          var h2 = null;
          null != e5 && (h2 = d2(e5 = E(o2, e5, "secret_nonce")), e5.length, o2.push(h2));
          var p2 = d2(a3 = E(o2, a3, "ciphertext")), i3 = a3.length;
          o2.push(p2), t2 = E(o2, t2, "mac");
          var v2, m2 = 0 | r2._crypto_box_macbytes();
          t2.length !== m2 && f(o2, "invalid mac length"), v2 = d2(t2), o2.push(v2);
          var x2 = null, k2 = 0;
          null != _2 && (x2 = d2(_2 = E(o2, _2, "additional_data")), k2 = _2.length, o2.push(x2)), n3 = E(o2, n3, "public_nonce");
          var S2, T2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          n3.length !== T2 && f(o2, "invalid public_nonce length"), S2 = d2(n3), o2.push(S2), s2 = E(o2, s2, "key");
          var w2, Y2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_keybytes();
          s2.length !== Y2 && f(o2, "invalid key length"), w2 = d2(s2), o2.push(w2);
          var B2 = new u(0 | i3), A2 = B2.address;
          if (o2.push(A2), 0 === r2._crypto_aead_chacha20poly1305_ietf_decrypt_detached(A2, h2, p2, i3, 0, v2, x2, k2, 0, S2, w2)) {
            var M2 = y(B2, c2);
            return g(o2), M2;
          }
          b2(o2, "ciphertext cannot be decrypted using that key");
        }
        function P4(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = d2(e5 = E(c2, e5, "message")), h2 = e5.length;
          c2.push(o2);
          var p2 = null, i3 = 0;
          null != a3 && (p2 = d2(a3 = E(c2, a3, "additional_data")), i3 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d2(_2), c2.push(m2), n3 = E(c2, n3, "key");
          var k2, S2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_keybytes();
          n3.length !== S2 && f(c2, "invalid key length"), k2 = d2(n3), c2.push(k2);
          var T2 = new u(h2 + r2._crypto_aead_chacha20poly1305_ietf_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === r2._crypto_aead_chacha20poly1305_ietf_encrypt(w2, null, o2, h2, 0, p2, i3, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b2(c2, "invalid usage");
        }
        function R(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = d2(e5 = E(c2, e5, "message")), h2 = e5.length;
          c2.push(o2);
          var p2 = null, i3 = 0;
          null != a3 && (p2 = d2(a3 = E(c2, a3, "additional_data")), i3 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d2(_2), c2.push(m2), n3 = E(c2, n3, "key");
          var k2, S2 = 0 | r2._crypto_aead_chacha20poly1305_ietf_keybytes();
          n3.length !== S2 && f(c2, "invalid key length"), k2 = d2(n3), c2.push(k2);
          var T2 = new u(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | r2._crypto_aead_chacha20poly1305_ietf_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === r2._crypto_aead_chacha20poly1305_ietf_encrypt_detached(w2, B2, null, o2, h2, 0, p2, i3, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b2(c2, "invalid usage");
        }
        function X(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_aead_chacha20poly1305_ietf_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_aead_chacha20poly1305_ietf_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function G(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_aead_chacha20poly1305_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_aead_chacha20poly1305_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function D(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = null;
          null != e5 && (o2 = d2(e5 = E(c2, e5, "secret_nonce")), e5.length, c2.push(o2)), a3 = E(c2, a3, "ciphertext");
          var h2, p2 = r2._crypto_aead_xchacha20poly1305_ietf_abytes(), i3 = a3.length;
          i3 < p2 && f(c2, "ciphertext is too short"), h2 = d2(a3), c2.push(h2);
          var v2 = null, m2 = 0;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "additional_data")), m2 = t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var x2, k2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _2.length !== k2 && f(c2, "invalid public_nonce length"), x2 = d2(_2), c2.push(x2), n3 = E(c2, n3, "key");
          var S2, T2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          n3.length !== T2 && f(c2, "invalid key length"), S2 = d2(n3), c2.push(S2);
          var w2 = new u(i3 - r2._crypto_aead_xchacha20poly1305_ietf_abytes() | 0), Y2 = w2.address;
          if (c2.push(Y2), 0 === r2._crypto_aead_xchacha20poly1305_ietf_decrypt(Y2, null, o2, h2, i3, 0, v2, m2, 0, x2, S2)) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b2(c2, "ciphertext cannot be decrypted using that key");
        }
        function F(e5, a3, t2, _2, n3, s2, c2) {
          var o2 = [];
          l(c2);
          var h2 = null;
          null != e5 && (h2 = d2(e5 = E(o2, e5, "secret_nonce")), e5.length, o2.push(h2));
          var p2 = d2(a3 = E(o2, a3, "ciphertext")), i3 = a3.length;
          o2.push(p2), t2 = E(o2, t2, "mac");
          var v2, m2 = 0 | r2._crypto_box_macbytes();
          t2.length !== m2 && f(o2, "invalid mac length"), v2 = d2(t2), o2.push(v2);
          var x2 = null, k2 = 0;
          null != _2 && (x2 = d2(_2 = E(o2, _2, "additional_data")), k2 = _2.length, o2.push(x2)), n3 = E(o2, n3, "public_nonce");
          var S2, T2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          n3.length !== T2 && f(o2, "invalid public_nonce length"), S2 = d2(n3), o2.push(S2), s2 = E(o2, s2, "key");
          var w2, Y2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          s2.length !== Y2 && f(o2, "invalid key length"), w2 = d2(s2), o2.push(w2);
          var B2 = new u(0 | i3), A2 = B2.address;
          if (o2.push(A2), 0 === r2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached(A2, h2, p2, i3, 0, v2, x2, k2, 0, S2, w2)) {
            var M2 = y(B2, c2);
            return g(o2), M2;
          }
          b2(o2, "ciphertext cannot be decrypted using that key");
        }
        function V(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = d2(e5 = E(c2, e5, "message")), h2 = e5.length;
          c2.push(o2);
          var p2 = null, i3 = 0;
          null != a3 && (p2 = d2(a3 = E(c2, a3, "additional_data")), i3 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d2(_2), c2.push(m2), n3 = E(c2, n3, "key");
          var k2, S2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          n3.length !== S2 && f(c2, "invalid key length"), k2 = d2(n3), c2.push(k2);
          var T2 = new u(h2 + r2._crypto_aead_xchacha20poly1305_ietf_abytes() | 0), w2 = T2.address;
          if (c2.push(w2), 0 === r2._crypto_aead_xchacha20poly1305_ietf_encrypt(w2, null, o2, h2, 0, p2, i3, 0, v2, m2, k2)) {
            var Y2 = y(T2, s2);
            return g(c2), Y2;
          }
          b2(c2, "invalid usage");
        }
        function H(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = d2(e5 = E(c2, e5, "message")), h2 = e5.length;
          c2.push(o2);
          var p2 = null, i3 = 0;
          null != a3 && (p2 = d2(a3 = E(c2, a3, "additional_data")), i3 = a3.length, c2.push(p2));
          var v2 = null;
          null != t2 && (v2 = d2(t2 = E(c2, t2, "secret_nonce")), t2.length, c2.push(v2)), _2 = E(c2, _2, "public_nonce");
          var m2, x2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_npubbytes();
          _2.length !== x2 && f(c2, "invalid public_nonce length"), m2 = d2(_2), c2.push(m2), n3 = E(c2, n3, "key");
          var k2, S2 = 0 | r2._crypto_aead_xchacha20poly1305_ietf_keybytes();
          n3.length !== S2 && f(c2, "invalid key length"), k2 = d2(n3), c2.push(k2);
          var T2 = new u(0 | h2), w2 = T2.address;
          c2.push(w2);
          var Y2 = new u(0 | r2._crypto_aead_xchacha20poly1305_ietf_abytes()), B2 = Y2.address;
          if (c2.push(B2), 0 === r2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached(w2, B2, null, o2, h2, 0, p2, i3, 0, v2, m2, k2)) {
            var A2 = y({ ciphertext: T2, mac: Y2 }, s2);
            return g(c2), A2;
          }
          b2(c2, "invalid usage");
        }
        function W(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_aead_xchacha20poly1305_ietf_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_aead_xchacha20poly1305_ietf_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function q(e5, a3, t2) {
          var _2 = [];
          l(t2);
          var n3 = d2(e5 = E(_2, e5, "message")), s2 = e5.length;
          _2.push(n3), a3 = E(_2, a3, "key");
          var c2, o2 = 0 | r2._crypto_auth_keybytes();
          a3.length !== o2 && f(_2, "invalid key length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_auth_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_auth(p2, n3, s2, 0, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid usage");
        }
        function j(e5, a3, t2) {
          var _2 = [];
          l(t2);
          var n3 = d2(e5 = E(_2, e5, "message")), s2 = e5.length;
          _2.push(n3), a3 = E(_2, a3, "key");
          var c2, o2 = 0 | r2._crypto_auth_hmacsha256_keybytes();
          a3.length !== o2 && f(_2, "invalid key length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_auth_hmacsha256_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_auth_hmacsha256(p2, n3, s2, 0, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid usage");
        }
        function z(e5, a3) {
          var t2 = [];
          l(a3), m(t2, e5, "state_address");
          var _2 = new u(0 | r2._crypto_auth_hmacsha256_bytes()), n3 = _2.address;
          if (t2.push(n3), !(0 | r2._crypto_auth_hmacsha256_final(e5, n3))) {
            var s2 = (r2._free(e5), y(_2, a3));
            return g(t2), s2;
          }
          b2(t2, "invalid usage");
        }
        function J(e5, a3) {
          var t2 = [];
          l(a3);
          var _2 = null, n3 = 0;
          null != e5 && (_2 = d2(e5 = E(t2, e5, "key")), n3 = e5.length, t2.push(_2));
          var s2 = new u(208).address;
          if (!(0 | r2._crypto_auth_hmacsha256_init(s2, _2, n3))) {
            var c2 = s2;
            return g(t2), c2;
          }
          b2(t2, "invalid usage");
        }
        function Q2(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_auth_hmacsha256_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_auth_hmacsha256_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function Z(e5, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e5, "state_address");
          var n3 = d2(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n3), 0 | r2._crypto_auth_hmacsha256_update(e5, n3, s2) && b2(_2, "invalid usage"), g(_2);
        }
        function $(e5, a3, t2) {
          var _2 = [];
          e5 = E(_2, e5, "tag");
          var n3, s2 = 0 | r2._crypto_auth_hmacsha256_bytes();
          e5.length !== s2 && f(_2, "invalid tag length"), n3 = d2(e5), _2.push(n3);
          var c2 = d2(a3 = E(_2, a3, "message")), o2 = a3.length;
          _2.push(c2), t2 = E(_2, t2, "key");
          var h2, p2 = 0 | r2._crypto_auth_hmacsha256_keybytes();
          t2.length !== p2 && f(_2, "invalid key length"), h2 = d2(t2), _2.push(h2);
          var y2 = !(0 | r2._crypto_auth_hmacsha256_verify(n3, c2, o2, 0, h2));
          return g(_2), y2;
        }
        function ee(e5, a3, t2) {
          var _2 = [];
          l(t2);
          var n3 = d2(e5 = E(_2, e5, "message")), s2 = e5.length;
          _2.push(n3), a3 = E(_2, a3, "key");
          var c2, o2 = 0 | r2._crypto_auth_hmacsha512_keybytes();
          a3.length !== o2 && f(_2, "invalid key length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_auth_hmacsha512_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_auth_hmacsha512(p2, n3, s2, 0, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid usage");
        }
        function ae(e5, a3, t2) {
          var _2 = [];
          l(t2);
          var n3 = d2(e5 = E(_2, e5, "message")), s2 = e5.length;
          _2.push(n3), a3 = E(_2, a3, "key");
          var c2, o2 = 0 | r2._crypto_auth_hmacsha512256_keybytes();
          a3.length !== o2 && f(_2, "invalid key length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_auth_hmacsha512256_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_auth_hmacsha512256(p2, n3, s2, 0, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid usage");
        }
        function re2(e5, a3) {
          var t2 = [];
          l(a3), m(t2, e5, "state_address");
          var _2 = new u(0 | r2._crypto_auth_hmacsha512256_bytes()), n3 = _2.address;
          if (t2.push(n3), !(0 | r2._crypto_auth_hmacsha512256_final(e5, n3))) {
            var s2 = (r2._free(e5), y(_2, a3));
            return g(t2), s2;
          }
          b2(t2, "invalid usage");
        }
        function te(e5, a3) {
          var t2 = [];
          l(a3);
          var _2 = null, n3 = 0;
          null != e5 && (_2 = d2(e5 = E(t2, e5, "key")), n3 = e5.length, t2.push(_2));
          var s2 = new u(416).address;
          if (!(0 | r2._crypto_auth_hmacsha512256_init(s2, _2, n3))) {
            var c2 = s2;
            return g(t2), c2;
          }
          b2(t2, "invalid usage");
        }
        function _e(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_auth_hmacsha512256_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_auth_hmacsha512256_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function ne(e5, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e5, "state_address");
          var n3 = d2(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n3), 0 | r2._crypto_auth_hmacsha512256_update(e5, n3, s2) && b2(_2, "invalid usage"), g(_2);
        }
        function se(e5, a3, t2) {
          var _2 = [];
          e5 = E(_2, e5, "tag");
          var n3, s2 = 0 | r2._crypto_auth_hmacsha512256_bytes();
          e5.length !== s2 && f(_2, "invalid tag length"), n3 = d2(e5), _2.push(n3);
          var c2 = d2(a3 = E(_2, a3, "message")), o2 = a3.length;
          _2.push(c2), t2 = E(_2, t2, "key");
          var h2, p2 = 0 | r2._crypto_auth_hmacsha512256_keybytes();
          t2.length !== p2 && f(_2, "invalid key length"), h2 = d2(t2), _2.push(h2);
          var y2 = !(0 | r2._crypto_auth_hmacsha512256_verify(n3, c2, o2, 0, h2));
          return g(_2), y2;
        }
        function ce(e5, a3) {
          var t2 = [];
          l(a3), m(t2, e5, "state_address");
          var _2 = new u(0 | r2._crypto_auth_hmacsha512_bytes()), n3 = _2.address;
          if (t2.push(n3), !(0 | r2._crypto_auth_hmacsha512_final(e5, n3))) {
            var s2 = (r2._free(e5), y(_2, a3));
            return g(t2), s2;
          }
          b2(t2, "invalid usage");
        }
        function oe(e5, a3) {
          var t2 = [];
          l(a3);
          var _2 = null, n3 = 0;
          null != e5 && (_2 = d2(e5 = E(t2, e5, "key")), n3 = e5.length, t2.push(_2));
          var s2 = new u(416).address;
          if (!(0 | r2._crypto_auth_hmacsha512_init(s2, _2, n3))) {
            var c2 = s2;
            return g(t2), c2;
          }
          b2(t2, "invalid usage");
        }
        function he(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_auth_hmacsha512_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_auth_hmacsha512_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function pe(e5, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e5, "state_address");
          var n3 = d2(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n3), 0 | r2._crypto_auth_hmacsha512_update(e5, n3, s2) && b2(_2, "invalid usage"), g(_2);
        }
        function ye(e5, a3, t2) {
          var _2 = [];
          e5 = E(_2, e5, "tag");
          var n3, s2 = 0 | r2._crypto_auth_hmacsha512_bytes();
          e5.length !== s2 && f(_2, "invalid tag length"), n3 = d2(e5), _2.push(n3);
          var c2 = d2(a3 = E(_2, a3, "message")), o2 = a3.length;
          _2.push(c2), t2 = E(_2, t2, "key");
          var h2, p2 = 0 | r2._crypto_auth_hmacsha512_keybytes();
          t2.length !== p2 && f(_2, "invalid key length"), h2 = d2(t2), _2.push(h2);
          var y2 = !(0 | r2._crypto_auth_hmacsha512_verify(n3, c2, o2, 0, h2));
          return g(_2), y2;
        }
        function ie(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_auth_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_auth_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function le(e5, a3, t2) {
          var _2 = [];
          e5 = E(_2, e5, "tag");
          var n3, s2 = 0 | r2._crypto_auth_bytes();
          e5.length !== s2 && f(_2, "invalid tag length"), n3 = d2(e5), _2.push(n3);
          var c2 = d2(a3 = E(_2, a3, "message")), o2 = a3.length;
          _2.push(c2), t2 = E(_2, t2, "key");
          var h2, p2 = 0 | r2._crypto_auth_keybytes();
          t2.length !== p2 && f(_2, "invalid key length"), h2 = d2(t2), _2.push(h2);
          var y2 = !(0 | r2._crypto_auth_verify(n3, c2, o2, 0, h2));
          return g(_2), y2;
        }
        function ue(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "publicKey");
          var n3, s2 = 0 | r2._crypto_box_publickeybytes();
          e5.length !== s2 && f(_2, "invalid publicKey length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "privateKey");
          var c2, o2 = 0 | r2._crypto_box_secretkeybytes();
          a3.length !== o2 && f(_2, "invalid privateKey length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_box_beforenmbytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_box_beforenm(p2, n3, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid usage");
        }
        function de(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "publicKey");
          var n3, s2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          e5.length !== s2 && f(_2, "invalid publicKey length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "privateKey");
          var c2, o2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          a3.length !== o2 && f(_2, "invalid privateKey length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_beforenmbytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_beforenm(p2, n3, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid usage");
        }
        function ve(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3);
          var c2 = d2(e5 = E(s2, e5, "message")), o2 = e5.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var h2, p2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), h2 = d2(a3), s2.push(h2), t2 = E(s2, t2, "publicKey");
          var i3, v2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          t2.length !== v2 && f(s2, "invalid publicKey length"), i3 = d2(t2), s2.push(i3), _2 = E(s2, _2, "privateKey");
          var m2, x2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          _2.length !== x2 && f(s2, "invalid privateKey length"), m2 = d2(_2), s2.push(m2);
          var k2 = new u(0 | o2), S2 = k2.address;
          s2.push(S2);
          var T2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_macbytes()), w2 = T2.address;
          if (s2.push(w2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_detached(S2, w2, c2, o2, 0, h2, i3, m2))) {
            var Y2 = y({ ciphertext: k2, mac: T2 }, n3);
            return g(s2), Y2;
          }
          b2(s2, "invalid usage");
        }
        function ge(e5, a3, t2, _2) {
          var n3 = [];
          l(_2);
          var s2 = d2(e5 = E(n3, e5, "message")), c2 = e5.length;
          n3.push(s2), a3 = E(n3, a3, "nonce");
          var o2, h2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a3.length !== h2 && f(n3, "invalid nonce length"), o2 = d2(a3), n3.push(o2), t2 = E(n3, t2, "sharedKey");
          var p2, i3 = 0 | r2._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
          t2.length !== i3 && f(n3, "invalid sharedKey length"), p2 = d2(t2), n3.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          n3.push(m2);
          var x2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_macbytes()), k2 = x2.address;
          if (n3.push(k2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_detached_afternm(m2, k2, s2, c2, 0, o2, p2))) {
            var S2 = y({ ciphertext: v2, mac: x2 }, _2);
            return g(n3), S2;
          }
          b2(n3, "invalid usage");
        }
        function be(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3);
          var c2 = d2(e5 = E(s2, e5, "message")), o2 = e5.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var h2, p2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), h2 = d2(a3), s2.push(h2), t2 = E(s2, t2, "publicKey");
          var i3, v2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          t2.length !== v2 && f(s2, "invalid publicKey length"), i3 = d2(t2), s2.push(i3), _2 = E(s2, _2, "privateKey");
          var m2, x2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          _2.length !== x2 && f(s2, "invalid privateKey length"), m2 = d2(_2), s2.push(m2);
          var k2 = new u(o2 + r2._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), S2 = k2.address;
          if (s2.push(S2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_easy(S2, c2, o2, 0, h2, i3, m2))) {
            var T2 = y(k2, n3);
            return g(s2), T2;
          }
          b2(s2, "invalid usage");
        }
        function fe(e5, a3, t2, _2) {
          var n3 = [];
          l(_2);
          var s2 = d2(e5 = E(n3, e5, "message")), c2 = e5.length;
          n3.push(s2), a3 = E(n3, a3, "nonce");
          var o2, h2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a3.length !== h2 && f(n3, "invalid nonce length"), o2 = d2(a3), n3.push(o2), t2 = E(n3, t2, "sharedKey");
          var p2, i3 = 0 | r2._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
          t2.length !== i3 && f(n3, "invalid sharedKey length"), p2 = d2(t2), n3.push(p2);
          var v2 = new u(c2 + r2._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), m2 = v2.address;
          if (n3.push(m2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_easy_afternm(m2, s2, c2, 0, o2, p2))) {
            var x2 = y(v2, _2);
            return g(n3), x2;
          }
          b2(n3, "invalid usage");
        }
        function me(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes()), _2 = t2.address;
          a3.push(_2);
          var n3 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes()), s2 = n3.address;
          a3.push(s2), r2._crypto_box_curve25519xchacha20poly1305_keypair(_2, s2);
          var c2 = y({ publicKey: t2, privateKey: n3, keyType: "curve25519" }, e5);
          return g(a3), c2;
        }
        function Ee(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = d2(e5 = E(c2, e5, "ciphertext")), h2 = e5.length;
          c2.push(o2), a3 = E(c2, a3, "mac");
          var p2, i3 = 0 | r2._crypto_box_curve25519xchacha20poly1305_macbytes();
          a3.length !== i3 && f(c2, "invalid mac length"), p2 = d2(a3), c2.push(p2), t2 = E(c2, t2, "nonce");
          var v2, m2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          t2.length !== m2 && f(c2, "invalid nonce length"), v2 = d2(t2), c2.push(v2), _2 = E(c2, _2, "publicKey");
          var x2, k2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          _2.length !== k2 && f(c2, "invalid publicKey length"), x2 = d2(_2), c2.push(x2), n3 = E(c2, n3, "privateKey");
          var S2, T2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          n3.length !== T2 && f(c2, "invalid privateKey length"), S2 = d2(n3), c2.push(S2);
          var w2 = new u(0 | h2), Y2 = w2.address;
          if (c2.push(Y2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_open_detached(Y2, o2, p2, h2, 0, v2, x2, S2))) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b2(c2, "incorrect key pair for the given ciphertext");
        }
        function xe(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3);
          var c2 = d2(e5 = E(s2, e5, "ciphertext")), o2 = e5.length;
          s2.push(c2), a3 = E(s2, a3, "mac");
          var h2, p2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_macbytes();
          a3.length !== p2 && f(s2, "invalid mac length"), h2 = d2(a3), s2.push(h2), t2 = E(s2, t2, "nonce");
          var i3, v2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          t2.length !== v2 && f(s2, "invalid nonce length"), i3 = d2(t2), s2.push(i3), _2 = E(s2, _2, "sharedKey");
          var m2, x2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
          _2.length !== x2 && f(s2, "invalid sharedKey length"), m2 = d2(_2), s2.push(m2);
          var k2 = new u(0 | o2), S2 = k2.address;
          if (s2.push(S2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_open_detached_afternm(S2, c2, h2, o2, 0, i3, m2))) {
            var T2 = y(k2, n3);
            return g(s2), T2;
          }
          b2(s2, "incorrect secret key for the given ciphertext");
        }
        function ke(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3), e5 = E(s2, e5, "ciphertext");
          var c2, o2 = r2._crypto_box_curve25519xchacha20poly1305_macbytes(), h2 = e5.length;
          h2 < o2 && f(s2, "ciphertext is too short"), c2 = d2(e5), s2.push(c2), a3 = E(s2, a3, "nonce");
          var p2, i3 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a3.length !== i3 && f(s2, "invalid nonce length"), p2 = d2(a3), s2.push(p2), t2 = E(s2, t2, "publicKey");
          var v2, m2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          t2.length !== m2 && f(s2, "invalid publicKey length"), v2 = d2(t2), s2.push(v2), _2 = E(s2, _2, "privateKey");
          var x2, k2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          _2.length !== k2 && f(s2, "invalid privateKey length"), x2 = d2(_2), s2.push(x2);
          var S2 = new u(h2 - r2._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), T2 = S2.address;
          if (s2.push(T2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_open_easy(T2, c2, h2, 0, p2, v2, x2))) {
            var w2 = y(S2, n3);
            return g(s2), w2;
          }
          b2(s2, "incorrect key pair for the given ciphertext");
        }
        function Se(e5, a3, t2, _2) {
          var n3 = [];
          l(_2);
          var s2 = d2(e5 = E(n3, e5, "ciphertext")), c2 = e5.length;
          n3.push(s2), a3 = E(n3, a3, "nonce");
          var o2, h2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_noncebytes();
          a3.length !== h2 && f(n3, "invalid nonce length"), o2 = d2(a3), n3.push(o2), t2 = E(n3, t2, "sharedKey");
          var p2, i3 = 0 | r2._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
          t2.length !== i3 && f(n3, "invalid sharedKey length"), p2 = d2(t2), n3.push(p2);
          var v2 = new u(c2 - r2._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), m2 = v2.address;
          if (n3.push(m2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_open_easy_afternm(m2, s2, c2, 0, o2, p2))) {
            var x2 = y(v2, _2);
            return g(n3), x2;
          }
          b2(n3, "incorrect secret key for the given ciphertext");
        }
        function Te(e5, a3, t2) {
          var _2 = [];
          l(t2);
          var n3 = d2(e5 = E(_2, e5, "message")), s2 = e5.length;
          _2.push(n3), a3 = E(_2, a3, "publicKey");
          var c2, o2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          a3.length !== o2 && f(_2, "invalid publicKey length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(s2 + r2._crypto_box_curve25519xchacha20poly1305_sealbytes() | 0), p2 = h2.address;
          _2.push(p2), r2._crypto_box_curve25519xchacha20poly1305_seal(p2, n3, s2, 0, c2);
          var i3 = y(h2, t2);
          return g(_2), i3;
        }
        function we(e5, a3, t2, _2) {
          var n3 = [];
          l(_2), e5 = E(n3, e5, "ciphertext");
          var s2, c2 = r2._crypto_box_curve25519xchacha20poly1305_sealbytes(), o2 = e5.length;
          o2 < c2 && f(n3, "ciphertext is too short"), s2 = d2(e5), n3.push(s2), a3 = E(n3, a3, "publicKey");
          var h2, p2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes();
          a3.length !== p2 && f(n3, "invalid publicKey length"), h2 = d2(a3), n3.push(h2), t2 = E(n3, t2, "secretKey");
          var i3, v2 = 0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
          t2.length !== v2 && f(n3, "invalid secretKey length"), i3 = d2(t2), n3.push(i3);
          var b3 = new u(o2 - r2._crypto_box_curve25519xchacha20poly1305_sealbytes() | 0), m2 = b3.address;
          n3.push(m2), r2._crypto_box_curve25519xchacha20poly1305_seal_open(m2, s2, o2, 0, h2, i3);
          var x2 = y(b3, _2);
          return g(n3), x2;
        }
        function Ye(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "seed");
          var _2, n3 = 0 | r2._crypto_box_curve25519xchacha20poly1305_seedbytes();
          e5.length !== n3 && f(t2, "invalid seed length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_publickeybytes()), c2 = s2.address;
          t2.push(c2);
          var o2 = new u(0 | r2._crypto_box_curve25519xchacha20poly1305_secretkeybytes()), h2 = o2.address;
          if (t2.push(h2), !(0 | r2._crypto_box_curve25519xchacha20poly1305_seed_keypair(c2, h2, _2))) {
            var p2 = { publicKey: y(s2, a3), privateKey: y(o2, a3), keyType: "x25519" };
            return g(t2), p2;
          }
          b2(t2, "invalid usage");
        }
        function Be(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3);
          var c2 = d2(e5 = E(s2, e5, "message")), o2 = e5.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var h2, p2 = 0 | r2._crypto_box_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), h2 = d2(a3), s2.push(h2), t2 = E(s2, t2, "publicKey");
          var i3, v2 = 0 | r2._crypto_box_publickeybytes();
          t2.length !== v2 && f(s2, "invalid publicKey length"), i3 = d2(t2), s2.push(i3), _2 = E(s2, _2, "privateKey");
          var m2, x2 = 0 | r2._crypto_box_secretkeybytes();
          _2.length !== x2 && f(s2, "invalid privateKey length"), m2 = d2(_2), s2.push(m2);
          var k2 = new u(0 | o2), S2 = k2.address;
          s2.push(S2);
          var T2 = new u(0 | r2._crypto_box_macbytes()), w2 = T2.address;
          if (s2.push(w2), !(0 | r2._crypto_box_detached(S2, w2, c2, o2, 0, h2, i3, m2))) {
            var Y2 = y({ ciphertext: k2, mac: T2 }, n3);
            return g(s2), Y2;
          }
          b2(s2, "invalid usage");
        }
        function Ae(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3);
          var c2 = d2(e5 = E(s2, e5, "message")), o2 = e5.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var h2, p2 = 0 | r2._crypto_box_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), h2 = d2(a3), s2.push(h2), t2 = E(s2, t2, "publicKey");
          var i3, v2 = 0 | r2._crypto_box_publickeybytes();
          t2.length !== v2 && f(s2, "invalid publicKey length"), i3 = d2(t2), s2.push(i3), _2 = E(s2, _2, "privateKey");
          var m2, x2 = 0 | r2._crypto_box_secretkeybytes();
          _2.length !== x2 && f(s2, "invalid privateKey length"), m2 = d2(_2), s2.push(m2);
          var k2 = new u(o2 + r2._crypto_box_macbytes() | 0), S2 = k2.address;
          if (s2.push(S2), !(0 | r2._crypto_box_easy(S2, c2, o2, 0, h2, i3, m2))) {
            var T2 = y(k2, n3);
            return g(s2), T2;
          }
          b2(s2, "invalid usage");
        }
        function Me(e5, a3, t2, _2) {
          var n3 = [];
          l(_2);
          var s2 = d2(e5 = E(n3, e5, "message")), c2 = e5.length;
          n3.push(s2), a3 = E(n3, a3, "nonce");
          var o2, h2 = 0 | r2._crypto_box_noncebytes();
          a3.length !== h2 && f(n3, "invalid nonce length"), o2 = d2(a3), n3.push(o2), t2 = E(n3, t2, "sharedKey");
          var p2, i3 = 0 | r2._crypto_box_beforenmbytes();
          t2.length !== i3 && f(n3, "invalid sharedKey length"), p2 = d2(t2), n3.push(p2);
          var v2 = new u(c2 + r2._crypto_box_macbytes() | 0), m2 = v2.address;
          if (n3.push(m2), !(0 | r2._crypto_box_easy_afternm(m2, s2, c2, 0, o2, p2))) {
            var x2 = y(v2, _2);
            return g(n3), x2;
          }
          b2(n3, "invalid usage");
        }
        function Ie(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_box_publickeybytes()), _2 = t2.address;
          a3.push(_2);
          var n3 = new u(0 | r2._crypto_box_secretkeybytes()), s2 = n3.address;
          if (a3.push(s2), !(0 | r2._crypto_box_keypair(_2, s2))) {
            var c2 = { publicKey: y(t2, e5), privateKey: y(n3, e5), keyType: "x25519" };
            return g(a3), c2;
          }
          b2(a3, "internal error");
        }
        function Ke(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2);
          var o2 = d2(e5 = E(c2, e5, "ciphertext")), h2 = e5.length;
          c2.push(o2), a3 = E(c2, a3, "mac");
          var p2, i3 = 0 | r2._crypto_box_macbytes();
          a3.length !== i3 && f(c2, "invalid mac length"), p2 = d2(a3), c2.push(p2), t2 = E(c2, t2, "nonce");
          var v2, m2 = 0 | r2._crypto_box_noncebytes();
          t2.length !== m2 && f(c2, "invalid nonce length"), v2 = d2(t2), c2.push(v2), _2 = E(c2, _2, "publicKey");
          var x2, k2 = 0 | r2._crypto_box_publickeybytes();
          _2.length !== k2 && f(c2, "invalid publicKey length"), x2 = d2(_2), c2.push(x2), n3 = E(c2, n3, "privateKey");
          var S2, T2 = 0 | r2._crypto_box_secretkeybytes();
          n3.length !== T2 && f(c2, "invalid privateKey length"), S2 = d2(n3), c2.push(S2);
          var w2 = new u(0 | h2), Y2 = w2.address;
          if (c2.push(Y2), !(0 | r2._crypto_box_open_detached(Y2, o2, p2, h2, 0, v2, x2, S2))) {
            var B2 = y(w2, s2);
            return g(c2), B2;
          }
          b2(c2, "incorrect key pair for the given ciphertext");
        }
        function Ne(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3), e5 = E(s2, e5, "ciphertext");
          var c2, o2 = r2._crypto_box_macbytes(), h2 = e5.length;
          h2 < o2 && f(s2, "ciphertext is too short"), c2 = d2(e5), s2.push(c2), a3 = E(s2, a3, "nonce");
          var p2, i3 = 0 | r2._crypto_box_noncebytes();
          a3.length !== i3 && f(s2, "invalid nonce length"), p2 = d2(a3), s2.push(p2), t2 = E(s2, t2, "publicKey");
          var v2, m2 = 0 | r2._crypto_box_publickeybytes();
          t2.length !== m2 && f(s2, "invalid publicKey length"), v2 = d2(t2), s2.push(v2), _2 = E(s2, _2, "privateKey");
          var x2, k2 = 0 | r2._crypto_box_secretkeybytes();
          _2.length !== k2 && f(s2, "invalid privateKey length"), x2 = d2(_2), s2.push(x2);
          var S2 = new u(h2 - r2._crypto_box_macbytes() | 0), T2 = S2.address;
          if (s2.push(T2), !(0 | r2._crypto_box_open_easy(T2, c2, h2, 0, p2, v2, x2))) {
            var w2 = y(S2, n3);
            return g(s2), w2;
          }
          b2(s2, "incorrect key pair for the given ciphertext");
        }
        function Le(e5, a3, t2, _2) {
          var n3 = [];
          l(_2);
          var s2 = d2(e5 = E(n3, e5, "ciphertext")), c2 = e5.length;
          n3.push(s2), a3 = E(n3, a3, "nonce");
          var o2, h2 = 0 | r2._crypto_box_noncebytes();
          a3.length !== h2 && f(n3, "invalid nonce length"), o2 = d2(a3), n3.push(o2), t2 = E(n3, t2, "sharedKey");
          var p2, i3 = 0 | r2._crypto_box_beforenmbytes();
          t2.length !== i3 && f(n3, "invalid sharedKey length"), p2 = d2(t2), n3.push(p2);
          var v2 = new u(c2 - r2._crypto_box_macbytes() | 0), m2 = v2.address;
          if (n3.push(m2), !(0 | r2._crypto_box_open_easy_afternm(m2, s2, c2, 0, o2, p2))) {
            var x2 = y(v2, _2);
            return g(n3), x2;
          }
          b2(n3, "incorrect secret key for the given ciphertext");
        }
        function Oe(e5, a3, t2) {
          var _2 = [];
          l(t2);
          var n3 = d2(e5 = E(_2, e5, "message")), s2 = e5.length;
          _2.push(n3), a3 = E(_2, a3, "publicKey");
          var c2, o2 = 0 | r2._crypto_box_publickeybytes();
          a3.length !== o2 && f(_2, "invalid publicKey length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(s2 + r2._crypto_box_sealbytes() | 0), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_box_seal(p2, n3, s2, 0, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid usage");
        }
        function Ue(e5, a3, t2, _2) {
          var n3 = [];
          l(_2), e5 = E(n3, e5, "ciphertext");
          var s2, c2 = r2._crypto_box_sealbytes(), o2 = e5.length;
          o2 < c2 && f(n3, "ciphertext is too short"), s2 = d2(e5), n3.push(s2), a3 = E(n3, a3, "publicKey");
          var h2, p2 = 0 | r2._crypto_box_publickeybytes();
          a3.length !== p2 && f(n3, "invalid publicKey length"), h2 = d2(a3), n3.push(h2), t2 = E(n3, t2, "privateKey");
          var i3, v2 = 0 | r2._crypto_box_secretkeybytes();
          t2.length !== v2 && f(n3, "invalid privateKey length"), i3 = d2(t2), n3.push(i3);
          var m2 = new u(o2 - r2._crypto_box_sealbytes() | 0), x2 = m2.address;
          if (n3.push(x2), !(0 | r2._crypto_box_seal_open(x2, s2, o2, 0, h2, i3))) {
            var k2 = y(m2, _2);
            return g(n3), k2;
          }
          b2(n3, "incorrect key pair for the given ciphertext");
        }
        function Ce(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "seed");
          var _2, n3 = 0 | r2._crypto_box_seedbytes();
          e5.length !== n3 && f(t2, "invalid seed length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_box_publickeybytes()), c2 = s2.address;
          t2.push(c2);
          var o2 = new u(0 | r2._crypto_box_secretkeybytes()), h2 = o2.address;
          if (t2.push(h2), !(0 | r2._crypto_box_seed_keypair(c2, h2, _2))) {
            var p2 = { publicKey: y(s2, a3), privateKey: y(o2, a3), keyType: "x25519" };
            return g(t2), p2;
          }
          b2(t2, "invalid usage");
        }
        function Pe(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "p");
          var n3, s2 = 0 | r2._crypto_core_ed25519_bytes();
          e5.length !== s2 && f(_2, "invalid p length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "q");
          var c2, o2 = 0 | r2._crypto_core_ed25519_bytes();
          a3.length !== o2 && f(_2, "invalid q length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_core_ed25519_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_core_ed25519_add(p2, n3, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "input is an invalid element");
        }
        function Re(e5, a3) {
          var t2 = [];
          l(a3);
          var _2 = d2(e5 = E(t2, e5, "r"));
          e5.length, t2.push(_2);
          var n3 = new u(0 | r2._crypto_core_ed25519_bytes()), s2 = n3.address;
          if (t2.push(s2), !(0 | r2._crypto_core_ed25519_from_hash(s2, _2))) {
            var c2 = y(n3, a3);
            return g(t2), c2;
          }
          b2(t2, "invalid usage");
        }
        function Xe(e5, a3) {
          var t2 = [];
          l(a3);
          var _2 = d2(e5 = E(t2, e5, "r"));
          e5.length, t2.push(_2);
          var n3 = new u(0 | r2._crypto_core_ed25519_bytes()), s2 = n3.address;
          if (t2.push(s2), !(0 | r2._crypto_core_ed25519_from_uniform(s2, _2))) {
            var c2 = y(n3, a3);
            return g(t2), c2;
          }
          b2(t2, "invalid usage");
        }
        function Ge(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "repr");
          var _2, n3 = 0 | r2._crypto_core_ed25519_bytes();
          e5.length !== n3 && f(t2, "invalid repr length"), _2 = d2(e5), t2.push(_2);
          var s2 = 1 == (0 | r2._crypto_core_ed25519_is_valid_point(_2));
          return g(t2), s2;
        }
        function De(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_core_ed25519_bytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_core_ed25519_random(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function Fe(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "x");
          var n3, s2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          e5.length !== s2 && f(_2, "invalid x length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "y");
          var c2, o2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          a3.length !== o2 && f(_2, "invalid y length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), p2 = h2.address;
          _2.push(p2), r2._crypto_core_ed25519_scalar_add(p2, n3, c2);
          var i3 = y(h2, t2);
          return g(_2), i3;
        }
        function Ve(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "s");
          var _2, n3 = 0 | r2._crypto_core_ed25519_scalarbytes();
          e5.length !== n3 && f(t2, "invalid s length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), c2 = s2.address;
          t2.push(c2), r2._crypto_core_ed25519_scalar_complement(c2, _2);
          var o2 = y(s2, a3);
          return g(t2), o2;
        }
        function He(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "s");
          var _2, n3 = 0 | r2._crypto_core_ed25519_scalarbytes();
          e5.length !== n3 && f(t2, "invalid s length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_core_ed25519_scalar_invert(c2, _2))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "invalid reciprocate");
        }
        function We(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "x");
          var n3, s2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          e5.length !== s2 && f(_2, "invalid x length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "y");
          var c2, o2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          a3.length !== o2 && f(_2, "invalid y length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), p2 = h2.address;
          _2.push(p2), r2._crypto_core_ed25519_scalar_mul(p2, n3, c2);
          var i3 = y(h2, t2);
          return g(_2), i3;
        }
        function qe(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "s");
          var _2, n3 = 0 | r2._crypto_core_ed25519_scalarbytes();
          e5.length !== n3 && f(t2, "invalid s length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), c2 = s2.address;
          t2.push(c2), r2._crypto_core_ed25519_scalar_negate(c2, _2);
          var o2 = y(s2, a3);
          return g(t2), o2;
        }
        function je(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_core_ed25519_scalar_random(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function ze(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "sample");
          var _2, n3 = 0 | r2._crypto_core_ed25519_nonreducedscalarbytes();
          e5.length !== n3 && f(t2, "invalid sample length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), c2 = s2.address;
          t2.push(c2), r2._crypto_core_ed25519_scalar_reduce(c2, _2);
          var o2 = y(s2, a3);
          return g(t2), o2;
        }
        function Je(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "x");
          var n3, s2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          e5.length !== s2 && f(_2, "invalid x length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "y");
          var c2, o2 = 0 | r2._crypto_core_ed25519_scalarbytes();
          a3.length !== o2 && f(_2, "invalid y length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_core_ed25519_scalarbytes()), p2 = h2.address;
          _2.push(p2), r2._crypto_core_ed25519_scalar_sub(p2, n3, c2);
          var i3 = y(h2, t2);
          return g(_2), i3;
        }
        function Qe(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "p");
          var n3, s2 = 0 | r2._crypto_core_ed25519_bytes();
          e5.length !== s2 && f(_2, "invalid p length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "q");
          var c2, o2 = 0 | r2._crypto_core_ed25519_bytes();
          a3.length !== o2 && f(_2, "invalid q length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_core_ed25519_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_core_ed25519_sub(p2, n3, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "input is an invalid element");
        }
        function Ze(e5, a3, t2, _2) {
          var n3 = [];
          l(_2), e5 = E(n3, e5, "input");
          var s2, c2 = 0 | r2._crypto_core_hchacha20_inputbytes();
          e5.length !== c2 && f(n3, "invalid input length"), s2 = d2(e5), n3.push(s2), a3 = E(n3, a3, "privateKey");
          var o2, h2 = 0 | r2._crypto_core_hchacha20_keybytes();
          a3.length !== h2 && f(n3, "invalid privateKey length"), o2 = d2(a3), n3.push(o2);
          var p2 = null;
          null != t2 && (p2 = d2(t2 = E(n3, t2, "constant")), t2.length, n3.push(p2));
          var i3 = new u(0 | r2._crypto_core_hchacha20_outputbytes()), v2 = i3.address;
          if (n3.push(v2), !(0 | r2._crypto_core_hchacha20(v2, s2, o2, p2))) {
            var m2 = y(i3, _2);
            return g(n3), m2;
          }
          b2(n3, "invalid usage");
        }
        function $e(e5, a3, t2, _2) {
          var n3 = [];
          l(_2), e5 = E(n3, e5, "input");
          var s2, c2 = 0 | r2._crypto_core_hsalsa20_inputbytes();
          e5.length !== c2 && f(n3, "invalid input length"), s2 = d2(e5), n3.push(s2), a3 = E(n3, a3, "privateKey");
          var o2, h2 = 0 | r2._crypto_core_hsalsa20_keybytes();
          a3.length !== h2 && f(n3, "invalid privateKey length"), o2 = d2(a3), n3.push(o2);
          var p2 = null;
          null != t2 && (p2 = d2(t2 = E(n3, t2, "constant")), t2.length, n3.push(p2));
          var i3 = new u(0 | r2._crypto_core_hsalsa20_outputbytes()), v2 = i3.address;
          if (n3.push(v2), !(0 | r2._crypto_core_hsalsa20(v2, s2, o2, p2))) {
            var m2 = y(i3, _2);
            return g(n3), m2;
          }
          b2(n3, "invalid usage");
        }
        function ea(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "p");
          var n3, s2 = 0 | r2._crypto_core_ristretto255_bytes();
          e5.length !== s2 && f(_2, "invalid p length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "q");
          var c2, o2 = 0 | r2._crypto_core_ristretto255_bytes();
          a3.length !== o2 && f(_2, "invalid q length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_core_ristretto255_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_core_ristretto255_add(p2, n3, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "input is an invalid element");
        }
        function aa(e5, a3) {
          var t2 = [];
          l(a3);
          var _2 = d2(e5 = E(t2, e5, "r"));
          e5.length, t2.push(_2);
          var n3 = new u(0 | r2._crypto_core_ristretto255_bytes()), s2 = n3.address;
          if (t2.push(s2), !(0 | r2._crypto_core_ristretto255_from_hash(s2, _2))) {
            var c2 = y(n3, a3);
            return g(t2), c2;
          }
          b2(t2, "invalid usage");
        }
        function ra(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "repr");
          var _2, n3 = 0 | r2._crypto_core_ristretto255_bytes();
          e5.length !== n3 && f(t2, "invalid repr length"), _2 = d2(e5), t2.push(_2);
          var s2 = 1 == (0 | r2._crypto_core_ristretto255_is_valid_point(_2));
          return g(t2), s2;
        }
        function ta(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_core_ristretto255_bytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_core_ristretto255_random(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function _a7(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "x");
          var n3, s2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e5.length !== s2 && f(_2, "invalid x length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "y");
          var c2, o2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          a3.length !== o2 && f(_2, "invalid y length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), p2 = h2.address;
          _2.push(p2), r2._crypto_core_ristretto255_scalar_add(p2, n3, c2);
          var i3 = y(h2, t2);
          return g(_2), i3;
        }
        function na(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "s");
          var _2, n3 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e5.length !== n3 && f(t2, "invalid s length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), c2 = s2.address;
          t2.push(c2), r2._crypto_core_ristretto255_scalar_complement(c2, _2);
          var o2 = y(s2, a3);
          return g(t2), o2;
        }
        function sa(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "s");
          var _2, n3 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e5.length !== n3 && f(t2, "invalid s length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_core_ristretto255_scalar_invert(c2, _2))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "invalid reciprocate");
        }
        function ca(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "x");
          var n3, s2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e5.length !== s2 && f(_2, "invalid x length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "y");
          var c2, o2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          a3.length !== o2 && f(_2, "invalid y length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), p2 = h2.address;
          _2.push(p2), r2._crypto_core_ristretto255_scalar_mul(p2, n3, c2);
          var i3 = y(h2, t2);
          return g(_2), i3;
        }
        function oa(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "s");
          var _2, n3 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e5.length !== n3 && f(t2, "invalid s length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), c2 = s2.address;
          t2.push(c2), r2._crypto_core_ristretto255_scalar_negate(c2, _2);
          var o2 = y(s2, a3);
          return g(t2), o2;
        }
        function ha(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_core_ristretto255_scalar_random(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function pa(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "sample");
          var _2, n3 = 0 | r2._crypto_core_ristretto255_nonreducedscalarbytes();
          e5.length !== n3 && f(t2, "invalid sample length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), c2 = s2.address;
          t2.push(c2), r2._crypto_core_ristretto255_scalar_reduce(c2, _2);
          var o2 = y(s2, a3);
          return g(t2), o2;
        }
        function ya(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "x");
          var n3, s2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e5.length !== s2 && f(_2, "invalid x length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "y");
          var c2, o2 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          a3.length !== o2 && f(_2, "invalid y length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_core_ristretto255_scalarbytes()), p2 = h2.address;
          _2.push(p2), r2._crypto_core_ristretto255_scalar_sub(p2, n3, c2);
          var i3 = y(h2, t2);
          return g(_2), i3;
        }
        function ia(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "p");
          var n3, s2 = 0 | r2._crypto_core_ristretto255_bytes();
          e5.length !== s2 && f(_2, "invalid p length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "q");
          var c2, o2 = 0 | r2._crypto_core_ristretto255_bytes();
          a3.length !== o2 && f(_2, "invalid q length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_core_ristretto255_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_core_ristretto255_sub(p2, n3, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "input is an invalid element");
        }
        function la(e5, a3, t2, _2) {
          var n3 = [];
          l(_2), m(n3, e5, "hash_length"), ("number" != typeof e5 || (0 | e5) !== e5 || e5 < 0) && f(n3, "hash_length must be an unsigned integer");
          var s2 = d2(a3 = E(n3, a3, "message")), c2 = a3.length;
          n3.push(s2);
          var o2 = null, h2 = 0;
          null != t2 && (o2 = d2(t2 = E(n3, t2, "key")), h2 = t2.length, n3.push(o2));
          var p2 = new u(e5 |= 0), i3 = p2.address;
          if (n3.push(i3), !(0 | r2._crypto_generichash(i3, e5, s2, c2, 0, o2, h2))) {
            var v2 = y(p2, _2);
            return g(n3), v2;
          }
          b2(n3, "invalid usage");
        }
        function ua(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3), m(s2, e5, "subkey_len"), ("number" != typeof e5 || (0 | e5) !== e5 || e5 < 0) && f(s2, "subkey_len must be an unsigned integer");
          var c2 = null, o2 = 0;
          null != a3 && (c2 = d2(a3 = E(s2, a3, "key")), o2 = a3.length, s2.push(c2));
          var h2 = null, p2 = 0;
          null != t2 && (t2 = E(s2, t2, "id"), p2 = 0 | r2._crypto_generichash_blake2b_saltbytes(), t2.length !== p2 && f(s2, "invalid id length"), h2 = d2(t2), s2.push(h2));
          var i3 = null, v2 = 0;
          null != _2 && (_2 = E(s2, _2, "ctx"), v2 = 0 | r2._crypto_generichash_blake2b_personalbytes(), _2.length !== v2 && f(s2, "invalid ctx length"), i3 = d2(_2), s2.push(i3));
          var x2 = new u(0 | e5), k2 = x2.address;
          if (s2.push(k2), !(0 | r2._crypto_generichash_blake2b_salt_personal(k2, e5, null, 0, 0, c2, o2, h2, i3))) {
            var S2 = y(x2, n3);
            return g(s2), S2;
          }
          b2(s2, "invalid usage");
        }
        function da(e5, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e5, "state_address"), m(_2, a3, "hash_length"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(_2, "hash_length must be an unsigned integer");
          var n3 = new u(a3 |= 0), s2 = n3.address;
          if (_2.push(s2), !(0 | r2._crypto_generichash_final(e5, s2, a3))) {
            var c2 = (r2._free(e5), y(n3, t2));
            return g(_2), c2;
          }
          b2(_2, "invalid usage");
        }
        function va(e5, a3, t2) {
          var _2 = [];
          l(t2);
          var n3 = null, s2 = 0;
          null != e5 && (n3 = d2(e5 = E(_2, e5, "key")), s2 = e5.length, _2.push(n3)), m(_2, a3, "hash_length"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(_2, "hash_length must be an unsigned integer");
          var c2 = new u(357).address;
          if (!(0 | r2._crypto_generichash_init(c2, n3, s2, a3))) {
            var o2 = c2;
            return g(_2), o2;
          }
          b2(_2, "invalid usage");
        }
        function ga(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_generichash_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_generichash_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function ba(e5, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e5, "state_address");
          var n3 = d2(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n3), 0 | r2._crypto_generichash_update(e5, n3, s2) && b2(_2, "invalid usage"), g(_2);
        }
        function fa(e5, a3) {
          var t2 = [];
          l(a3);
          var _2 = d2(e5 = E(t2, e5, "message")), n3 = e5.length;
          t2.push(_2);
          var s2 = new u(0 | r2._crypto_hash_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_hash(c2, _2, n3, 0))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "invalid usage");
        }
        function ma(e5, a3) {
          var t2 = [];
          l(a3);
          var _2 = d2(e5 = E(t2, e5, "message")), n3 = e5.length;
          t2.push(_2);
          var s2 = new u(0 | r2._crypto_hash_sha256_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_hash_sha256(c2, _2, n3, 0))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "invalid usage");
        }
        function Ea(e5, a3) {
          var t2 = [];
          l(a3), m(t2, e5, "state_address");
          var _2 = new u(0 | r2._crypto_hash_sha256_bytes()), n3 = _2.address;
          if (t2.push(n3), !(0 | r2._crypto_hash_sha256_final(e5, n3))) {
            var s2 = (r2._free(e5), y(_2, a3));
            return g(t2), s2;
          }
          b2(t2, "invalid usage");
        }
        function xa(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(104).address;
          if (!(0 | r2._crypto_hash_sha256_init(t2))) {
            var _2 = t2;
            return g(a3), _2;
          }
          b2(a3, "invalid usage");
        }
        function ka(e5, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e5, "state_address");
          var n3 = d2(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n3), 0 | r2._crypto_hash_sha256_update(e5, n3, s2) && b2(_2, "invalid usage"), g(_2);
        }
        function Sa(e5, a3) {
          var t2 = [];
          l(a3);
          var _2 = d2(e5 = E(t2, e5, "message")), n3 = e5.length;
          t2.push(_2);
          var s2 = new u(0 | r2._crypto_hash_sha512_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_hash_sha512(c2, _2, n3, 0))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "invalid usage");
        }
        function Ta(e5, a3) {
          var t2 = [];
          l(a3), m(t2, e5, "state_address");
          var _2 = new u(0 | r2._crypto_hash_sha512_bytes()), n3 = _2.address;
          if (t2.push(n3), !(0 | r2._crypto_hash_sha512_final(e5, n3))) {
            var s2 = (r2._free(e5), y(_2, a3));
            return g(t2), s2;
          }
          b2(t2, "invalid usage");
        }
        function wa(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(208).address;
          if (!(0 | r2._crypto_hash_sha512_init(t2))) {
            var _2 = t2;
            return g(a3), _2;
          }
          b2(a3, "invalid usage");
        }
        function Ya(e5, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e5, "state_address");
          var n3 = d2(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n3), 0 | r2._crypto_hash_sha512_update(e5, n3, s2) && b2(_2, "invalid usage"), g(_2);
        }
        function Ba(e5, a3, t2, _2, s2) {
          var c2 = [];
          l(s2), m(c2, e5, "subkey_len"), ("number" != typeof e5 || (0 | e5) !== e5 || e5 < 0) && f(c2, "subkey_len must be an unsigned integer"), m(c2, a3, "subkey_id");
          var o2, h2 = 0;
          if ("bigint" == typeof a3 && a3 >= BigInt(0)) {
            const e6 = a3 >> BigInt(32);
            e6 > BigInt(4294967295) && f(c2, "subkey_id cannot be more than 64 bits"), h2 = Number(e6), o2 = Number(a3 & BigInt(4294967295));
          } else "number" == typeof a3 && (0 | a3) === a3 && a3 >= 0 ? o2 = a3 : f(c2, "subkey_id must be an unsigned integer or bigint");
          "string" != typeof t2 && f(c2, "ctx must be a string"), t2 = n(t2 + "\0"), null != i3 && t2.length - 1 !== i3 && f(c2, "invalid ctx length");
          var p2 = d2(t2), i3 = t2.length - 1;
          c2.push(p2), _2 = E(c2, _2, "key");
          var v2, b3 = 0 | r2._crypto_kdf_keybytes();
          _2.length !== b3 && f(c2, "invalid key length"), v2 = d2(_2), c2.push(v2);
          var x2 = new u(0 | e5), k2 = x2.address;
          c2.push(k2), r2._crypto_kdf_derive_from_key(k2, e5, o2, h2, p2, v2);
          var S2 = y(x2, s2);
          return g(c2), S2;
        }
        function Aa(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_kdf_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_kdf_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function Ma(e5, a3, t2, _2) {
          var n3 = [];
          l(_2), e5 = E(n3, e5, "clientPublicKey");
          var s2, c2 = 0 | r2._crypto_kx_publickeybytes();
          e5.length !== c2 && f(n3, "invalid clientPublicKey length"), s2 = d2(e5), n3.push(s2), a3 = E(n3, a3, "clientSecretKey");
          var o2, h2 = 0 | r2._crypto_kx_secretkeybytes();
          a3.length !== h2 && f(n3, "invalid clientSecretKey length"), o2 = d2(a3), n3.push(o2), t2 = E(n3, t2, "serverPublicKey");
          var p2, i3 = 0 | r2._crypto_kx_publickeybytes();
          t2.length !== i3 && f(n3, "invalid serverPublicKey length"), p2 = d2(t2), n3.push(p2);
          var v2 = new u(0 | r2._crypto_kx_sessionkeybytes()), m2 = v2.address;
          n3.push(m2);
          var x2 = new u(0 | r2._crypto_kx_sessionkeybytes()), k2 = x2.address;
          if (n3.push(k2), !(0 | r2._crypto_kx_client_session_keys(m2, k2, s2, o2, p2))) {
            var S2 = y({ sharedRx: v2, sharedTx: x2 }, _2);
            return g(n3), S2;
          }
          b2(n3, "invalid usage");
        }
        function Ia(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_kx_publickeybytes()), _2 = t2.address;
          a3.push(_2);
          var n3 = new u(0 | r2._crypto_kx_secretkeybytes()), s2 = n3.address;
          if (a3.push(s2), !(0 | r2._crypto_kx_keypair(_2, s2))) {
            var c2 = { publicKey: y(t2, e5), privateKey: y(n3, e5), keyType: "x25519" };
            return g(a3), c2;
          }
          b2(a3, "internal error");
        }
        function Ka(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "seed");
          var _2, n3 = 0 | r2._crypto_kx_seedbytes();
          e5.length !== n3 && f(t2, "invalid seed length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_kx_publickeybytes()), c2 = s2.address;
          t2.push(c2);
          var o2 = new u(0 | r2._crypto_kx_secretkeybytes()), h2 = o2.address;
          if (t2.push(h2), !(0 | r2._crypto_kx_seed_keypair(c2, h2, _2))) {
            var p2 = { publicKey: y(s2, a3), privateKey: y(o2, a3), keyType: "x25519" };
            return g(t2), p2;
          }
          b2(t2, "internal error");
        }
        function Na(e5, a3, t2, _2) {
          var n3 = [];
          l(_2), e5 = E(n3, e5, "serverPublicKey");
          var s2, c2 = 0 | r2._crypto_kx_publickeybytes();
          e5.length !== c2 && f(n3, "invalid serverPublicKey length"), s2 = d2(e5), n3.push(s2), a3 = E(n3, a3, "serverSecretKey");
          var o2, h2 = 0 | r2._crypto_kx_secretkeybytes();
          a3.length !== h2 && f(n3, "invalid serverSecretKey length"), o2 = d2(a3), n3.push(o2), t2 = E(n3, t2, "clientPublicKey");
          var p2, i3 = 0 | r2._crypto_kx_publickeybytes();
          t2.length !== i3 && f(n3, "invalid clientPublicKey length"), p2 = d2(t2), n3.push(p2);
          var v2 = new u(0 | r2._crypto_kx_sessionkeybytes()), m2 = v2.address;
          n3.push(m2);
          var x2 = new u(0 | r2._crypto_kx_sessionkeybytes()), k2 = x2.address;
          if (n3.push(k2), !(0 | r2._crypto_kx_server_session_keys(m2, k2, s2, o2, p2))) {
            var S2 = y({ sharedRx: v2, sharedTx: x2 }, _2);
            return g(n3), S2;
          }
          b2(n3, "invalid usage");
        }
        function La(e5, a3, t2) {
          var _2 = [];
          l(t2);
          var n3 = d2(e5 = E(_2, e5, "message")), s2 = e5.length;
          _2.push(n3), a3 = E(_2, a3, "key");
          var c2, o2 = 0 | r2._crypto_onetimeauth_keybytes();
          a3.length !== o2 && f(_2, "invalid key length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_onetimeauth_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_onetimeauth(p2, n3, s2, 0, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid usage");
        }
        function Oa(e5, a3) {
          var t2 = [];
          l(a3), m(t2, e5, "state_address");
          var _2 = new u(0 | r2._crypto_onetimeauth_bytes()), n3 = _2.address;
          if (t2.push(n3), !(0 | r2._crypto_onetimeauth_final(e5, n3))) {
            var s2 = (r2._free(e5), y(_2, a3));
            return g(t2), s2;
          }
          b2(t2, "invalid usage");
        }
        function Ua(e5, a3) {
          var t2 = [];
          l(a3);
          var _2 = null;
          null != e5 && (_2 = d2(e5 = E(t2, e5, "key")), e5.length, t2.push(_2));
          var n3 = new u(144).address;
          if (!(0 | r2._crypto_onetimeauth_init(n3, _2))) {
            var s2 = n3;
            return g(t2), s2;
          }
          b2(t2, "invalid usage");
        }
        function Ca(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_onetimeauth_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_onetimeauth_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function Pa(e5, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e5, "state_address");
          var n3 = d2(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n3), 0 | r2._crypto_onetimeauth_update(e5, n3, s2) && b2(_2, "invalid usage"), g(_2);
        }
        function Ra(e5, a3, t2) {
          var _2 = [];
          e5 = E(_2, e5, "hash");
          var n3, s2 = 0 | r2._crypto_onetimeauth_bytes();
          e5.length !== s2 && f(_2, "invalid hash length"), n3 = d2(e5), _2.push(n3);
          var c2 = d2(a3 = E(_2, a3, "message")), o2 = a3.length;
          _2.push(c2), t2 = E(_2, t2, "key");
          var h2, p2 = 0 | r2._crypto_onetimeauth_keybytes();
          t2.length !== p2 && f(_2, "invalid key length"), h2 = d2(t2), _2.push(h2);
          var y2 = !(0 | r2._crypto_onetimeauth_verify(n3, c2, o2, 0, h2));
          return g(_2), y2;
        }
        function Xa(e5, a3, t2, _2, n3, s2, c2) {
          var o2 = [];
          l(c2), m(o2, e5, "keyLength"), ("number" != typeof e5 || (0 | e5) !== e5 || e5 < 0) && f(o2, "keyLength must be an unsigned integer");
          var h2 = d2(a3 = E(o2, a3, "password")), p2 = a3.length;
          o2.push(h2), t2 = E(o2, t2, "salt");
          var i3, v2 = 0 | r2._crypto_pwhash_saltbytes();
          t2.length !== v2 && f(o2, "invalid salt length"), i3 = d2(t2), o2.push(i3), m(o2, _2, "opsLimit"), ("number" != typeof _2 || (0 | _2) !== _2 || _2 < 0) && f(o2, "opsLimit must be an unsigned integer"), m(o2, n3, "memLimit"), ("number" != typeof n3 || (0 | n3) !== n3 || n3 < 0) && f(o2, "memLimit must be an unsigned integer"), m(o2, s2, "algorithm"), ("number" != typeof s2 || (0 | s2) !== s2 || s2 < 0) && f(o2, "algorithm must be an unsigned integer");
          var x2 = new u(0 | e5), k2 = x2.address;
          if (o2.push(k2), !(0 | r2._crypto_pwhash(k2, e5, 0, h2, p2, 0, i3, _2, 0, n3, s2))) {
            var S2 = y(x2, c2);
            return g(o2), S2;
          }
          b2(o2, "invalid usage");
        }
        function Ga(e5, a3, t2, _2, n3, s2) {
          var c2 = [];
          l(s2), m(c2, e5, "keyLength"), ("number" != typeof e5 || (0 | e5) !== e5 || e5 < 0) && f(c2, "keyLength must be an unsigned integer");
          var o2 = d2(a3 = E(c2, a3, "password")), h2 = a3.length;
          c2.push(o2), t2 = E(c2, t2, "salt");
          var p2, i3 = 0 | r2._crypto_pwhash_scryptsalsa208sha256_saltbytes();
          t2.length !== i3 && f(c2, "invalid salt length"), p2 = d2(t2), c2.push(p2), m(c2, _2, "opsLimit"), ("number" != typeof _2 || (0 | _2) !== _2 || _2 < 0) && f(c2, "opsLimit must be an unsigned integer"), m(c2, n3, "memLimit"), ("number" != typeof n3 || (0 | n3) !== n3 || n3 < 0) && f(c2, "memLimit must be an unsigned integer");
          var v2 = new u(0 | e5), x2 = v2.address;
          if (c2.push(x2), !(0 | r2._crypto_pwhash_scryptsalsa208sha256(x2, e5, 0, o2, h2, 0, p2, _2, 0, n3))) {
            var k2 = y(v2, s2);
            return g(c2), k2;
          }
          b2(c2, "invalid usage");
        }
        function Da(e5, a3, t2, _2, n3, s2, c2) {
          var o2 = [];
          l(c2);
          var h2 = d2(e5 = E(o2, e5, "password")), p2 = e5.length;
          o2.push(h2);
          var i3 = d2(a3 = E(o2, a3, "salt")), v2 = a3.length;
          o2.push(i3), m(o2, t2, "opsLimit"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(o2, "opsLimit must be an unsigned integer"), m(o2, _2, "r"), ("number" != typeof _2 || (0 | _2) !== _2 || _2 < 0) && f(o2, "r must be an unsigned integer"), m(o2, n3, "p"), ("number" != typeof n3 || (0 | n3) !== n3 || n3 < 0) && f(o2, "p must be an unsigned integer"), m(o2, s2, "keyLength"), ("number" != typeof s2 || (0 | s2) !== s2 || s2 < 0) && f(o2, "keyLength must be an unsigned integer");
          var x2 = new u(0 | s2), k2 = x2.address;
          if (o2.push(k2), !(0 | r2._crypto_pwhash_scryptsalsa208sha256_ll(h2, p2, i3, v2, t2, 0, _2, n3, k2, s2))) {
            var S2 = y(x2, c2);
            return g(o2), S2;
          }
          b2(o2, "invalid usage");
        }
        function Fa(e5, a3, t2, _2) {
          var n3 = [];
          l(_2);
          var s2 = d2(e5 = E(n3, e5, "password")), c2 = e5.length;
          n3.push(s2), m(n3, a3, "opsLimit"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(n3, "opsLimit must be an unsigned integer"), m(n3, t2, "memLimit"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(n3, "memLimit must be an unsigned integer");
          var o2 = new u(0 | r2._crypto_pwhash_scryptsalsa208sha256_strbytes()).address;
          if (n3.push(o2), !(0 | r2._crypto_pwhash_scryptsalsa208sha256_str(o2, s2, c2, 0, a3, 0, t2))) {
            var h2 = r2.UTF8ToString(o2);
            return g(n3), h2;
          }
          b2(n3, "invalid usage");
        }
        function Va(e5, a3, t2) {
          var _2 = [];
          l(t2), "string" != typeof e5 && f(_2, "hashed_password must be a string"), e5 = n(e5 + "\0"), null != c2 && e5.length - 1 !== c2 && f(_2, "invalid hashed_password length");
          var s2 = d2(e5), c2 = e5.length - 1;
          _2.push(s2);
          var o2 = d2(a3 = E(_2, a3, "password")), h2 = a3.length;
          _2.push(o2);
          var p2 = !(0 | r2._crypto_pwhash_scryptsalsa208sha256_str_verify(s2, o2, h2, 0));
          return g(_2), p2;
        }
        function Ha(e5, a3, t2, _2) {
          var n3 = [];
          l(_2);
          var s2 = d2(e5 = E(n3, e5, "password")), c2 = e5.length;
          n3.push(s2), m(n3, a3, "opsLimit"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(n3, "opsLimit must be an unsigned integer"), m(n3, t2, "memLimit"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(n3, "memLimit must be an unsigned integer");
          var o2 = new u(0 | r2._crypto_pwhash_strbytes()).address;
          if (n3.push(o2), !(0 | r2._crypto_pwhash_str(o2, s2, c2, 0, a3, 0, t2))) {
            var h2 = r2.UTF8ToString(o2);
            return g(n3), h2;
          }
          b2(n3, "invalid usage");
        }
        function Wa(e5, a3, t2, _2) {
          var s2 = [];
          l(_2), "string" != typeof e5 && f(s2, "hashed_password must be a string"), e5 = n(e5 + "\0"), null != o2 && e5.length - 1 !== o2 && f(s2, "invalid hashed_password length");
          var c2 = d2(e5), o2 = e5.length - 1;
          s2.push(c2), m(s2, a3, "opsLimit"), ("number" != typeof a3 || (0 | a3) !== a3 || a3 < 0) && f(s2, "opsLimit must be an unsigned integer"), m(s2, t2, "memLimit"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(s2, "memLimit must be an unsigned integer");
          var h2 = !!(0 | r2._crypto_pwhash_str_needs_rehash(c2, a3, 0, t2));
          return g(s2), h2;
        }
        function qa(e5, a3, t2) {
          var _2 = [];
          l(t2), "string" != typeof e5 && f(_2, "hashed_password must be a string"), e5 = n(e5 + "\0"), null != c2 && e5.length - 1 !== c2 && f(_2, "invalid hashed_password length");
          var s2 = d2(e5), c2 = e5.length - 1;
          _2.push(s2);
          var o2 = d2(a3 = E(_2, a3, "password")), h2 = a3.length;
          _2.push(o2);
          var p2 = !(0 | r2._crypto_pwhash_str_verify(s2, o2, h2, 0));
          return g(_2), p2;
        }
        function ja(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "privateKey");
          var n3, s2 = 0 | r2._crypto_scalarmult_scalarbytes();
          e5.length !== s2 && f(_2, "invalid privateKey length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "publicKey");
          var c2, o2 = 0 | r2._crypto_scalarmult_bytes();
          a3.length !== o2 && f(_2, "invalid publicKey length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_scalarmult_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_scalarmult(p2, n3, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "weak public key");
        }
        function za(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "privateKey");
          var _2, n3 = 0 | r2._crypto_scalarmult_scalarbytes();
          e5.length !== n3 && f(t2, "invalid privateKey length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_scalarmult_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_scalarmult_base(c2, _2))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "unknown error");
        }
        function Ja(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "n");
          var n3, s2 = 0 | r2._crypto_scalarmult_ed25519_scalarbytes();
          e5.length !== s2 && f(_2, "invalid n length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "p");
          var c2, o2 = 0 | r2._crypto_scalarmult_ed25519_bytes();
          a3.length !== o2 && f(_2, "invalid p length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_scalarmult_ed25519_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_scalarmult_ed25519(p2, n3, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid point or scalar is 0");
        }
        function Qa(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "scalar");
          var _2, n3 = 0 | r2._crypto_scalarmult_ed25519_scalarbytes();
          e5.length !== n3 && f(t2, "invalid scalar length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_scalarmult_ed25519_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_scalarmult_ed25519_base(c2, _2))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "scalar is 0");
        }
        function Za(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "scalar");
          var _2, n3 = 0 | r2._crypto_scalarmult_ed25519_scalarbytes();
          e5.length !== n3 && f(t2, "invalid scalar length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_scalarmult_ed25519_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_scalarmult_ed25519_base_noclamp(c2, _2))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "scalar is 0");
        }
        function $a(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "n");
          var n3, s2 = 0 | r2._crypto_scalarmult_ed25519_scalarbytes();
          e5.length !== s2 && f(_2, "invalid n length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "p");
          var c2, o2 = 0 | r2._crypto_scalarmult_ed25519_bytes();
          a3.length !== o2 && f(_2, "invalid p length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_scalarmult_ed25519_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_scalarmult_ed25519_noclamp(p2, n3, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid point or scalar is 0");
        }
        function er(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "scalar");
          var n3, s2 = 0 | r2._crypto_scalarmult_ristretto255_scalarbytes();
          e5.length !== s2 && f(_2, "invalid scalar length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "element");
          var c2, o2 = 0 | r2._crypto_scalarmult_ristretto255_bytes();
          a3.length !== o2 && f(_2, "invalid element length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_scalarmult_ristretto255_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_scalarmult_ristretto255(p2, n3, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "result is identity element");
        }
        function ar(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "scalar");
          var _2, n3 = 0 | r2._crypto_core_ristretto255_scalarbytes();
          e5.length !== n3 && f(t2, "invalid scalar length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_core_ristretto255_bytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_scalarmult_ristretto255_base(c2, _2))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "scalar is 0");
        }
        function rr(e5, a3, t2, _2) {
          var n3 = [];
          l(_2);
          var s2 = d2(e5 = E(n3, e5, "message")), c2 = e5.length;
          n3.push(s2), a3 = E(n3, a3, "nonce");
          var o2, h2 = 0 | r2._crypto_secretbox_noncebytes();
          a3.length !== h2 && f(n3, "invalid nonce length"), o2 = d2(a3), n3.push(o2), t2 = E(n3, t2, "key");
          var p2, i3 = 0 | r2._crypto_secretbox_keybytes();
          t2.length !== i3 && f(n3, "invalid key length"), p2 = d2(t2), n3.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          n3.push(m2);
          var x2 = new u(0 | r2._crypto_secretbox_macbytes()), k2 = x2.address;
          if (n3.push(k2), !(0 | r2._crypto_secretbox_detached(m2, k2, s2, c2, 0, o2, p2))) {
            var S2 = y({ mac: x2, cipher: v2 }, _2);
            return g(n3), S2;
          }
          b2(n3, "invalid usage");
        }
        function tr(e5, a3, t2, _2) {
          var n3 = [];
          l(_2);
          var s2 = d2(e5 = E(n3, e5, "message")), c2 = e5.length;
          n3.push(s2), a3 = E(n3, a3, "nonce");
          var o2, h2 = 0 | r2._crypto_secretbox_noncebytes();
          a3.length !== h2 && f(n3, "invalid nonce length"), o2 = d2(a3), n3.push(o2), t2 = E(n3, t2, "key");
          var p2, i3 = 0 | r2._crypto_secretbox_keybytes();
          t2.length !== i3 && f(n3, "invalid key length"), p2 = d2(t2), n3.push(p2);
          var v2 = new u(c2 + r2._crypto_secretbox_macbytes() | 0), m2 = v2.address;
          if (n3.push(m2), !(0 | r2._crypto_secretbox_easy(m2, s2, c2, 0, o2, p2))) {
            var x2 = y(v2, _2);
            return g(n3), x2;
          }
          b2(n3, "invalid usage");
        }
        function _r(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_secretbox_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_secretbox_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function nr(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3);
          var c2 = d2(e5 = E(s2, e5, "ciphertext")), o2 = e5.length;
          s2.push(c2), a3 = E(s2, a3, "mac");
          var h2, p2 = 0 | r2._crypto_secretbox_macbytes();
          a3.length !== p2 && f(s2, "invalid mac length"), h2 = d2(a3), s2.push(h2), t2 = E(s2, t2, "nonce");
          var i3, v2 = 0 | r2._crypto_secretbox_noncebytes();
          t2.length !== v2 && f(s2, "invalid nonce length"), i3 = d2(t2), s2.push(i3), _2 = E(s2, _2, "key");
          var m2, x2 = 0 | r2._crypto_secretbox_keybytes();
          _2.length !== x2 && f(s2, "invalid key length"), m2 = d2(_2), s2.push(m2);
          var k2 = new u(0 | o2), S2 = k2.address;
          if (s2.push(S2), !(0 | r2._crypto_secretbox_open_detached(S2, c2, h2, o2, 0, i3, m2))) {
            var T2 = y(k2, n3);
            return g(s2), T2;
          }
          b2(s2, "wrong secret key for the given ciphertext");
        }
        function sr(e5, a3, t2, _2) {
          var n3 = [];
          l(_2), e5 = E(n3, e5, "ciphertext");
          var s2, c2 = r2._crypto_secretbox_macbytes(), o2 = e5.length;
          o2 < c2 && f(n3, "ciphertext is too short"), s2 = d2(e5), n3.push(s2), a3 = E(n3, a3, "nonce");
          var h2, p2 = 0 | r2._crypto_secretbox_noncebytes();
          a3.length !== p2 && f(n3, "invalid nonce length"), h2 = d2(a3), n3.push(h2), t2 = E(n3, t2, "key");
          var i3, v2 = 0 | r2._crypto_secretbox_keybytes();
          t2.length !== v2 && f(n3, "invalid key length"), i3 = d2(t2), n3.push(i3);
          var m2 = new u(o2 - r2._crypto_secretbox_macbytes() | 0), x2 = m2.address;
          if (n3.push(x2), !(0 | r2._crypto_secretbox_open_easy(x2, s2, o2, 0, h2, i3))) {
            var k2 = y(m2, _2);
            return g(n3), k2;
          }
          b2(n3, "wrong secret key for the given ciphertext");
        }
        function cr(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "header");
          var n3, s2 = 0 | r2._crypto_secretstream_xchacha20poly1305_headerbytes();
          e5.length !== s2 && f(_2, "invalid header length"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "key");
          var c2, o2 = 0 | r2._crypto_secretstream_xchacha20poly1305_keybytes();
          a3.length !== o2 && f(_2, "invalid key length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(52).address;
          if (!(0 | r2._crypto_secretstream_xchacha20poly1305_init_pull(h2, n3, c2))) {
            var p2 = h2;
            return g(_2), p2;
          }
          b2(_2, "invalid usage");
        }
        function or2(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "key");
          var _2, n3 = 0 | r2._crypto_secretstream_xchacha20poly1305_keybytes();
          e5.length !== n3 && f(t2, "invalid key length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(52).address, c2 = new u(0 | r2._crypto_secretstream_xchacha20poly1305_headerbytes()), o2 = c2.address;
          if (t2.push(o2), !(0 | r2._crypto_secretstream_xchacha20poly1305_init_push(s2, o2, _2))) {
            var h2 = { state: s2, header: y(c2, a3) };
            return g(t2), h2;
          }
          b2(t2, "invalid usage");
        }
        function hr(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_secretstream_xchacha20poly1305_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_secretstream_xchacha20poly1305_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function pr(e5, a3, t2, _2) {
          var n3 = [];
          l(_2), m(n3, e5, "state_address"), a3 = E(n3, a3, "cipher");
          var s2, c2 = r2._crypto_secretstream_xchacha20poly1305_abytes(), o2 = a3.length;
          o2 < c2 && f(n3, "cipher is too short"), s2 = d2(a3), n3.push(s2);
          var h2 = null, p2 = 0;
          null != t2 && (h2 = d2(t2 = E(n3, t2, "ad")), p2 = t2.length, n3.push(h2));
          var i3 = new u(o2 - r2._crypto_secretstream_xchacha20poly1305_abytes() | 0), b3 = i3.address;
          n3.push(b3);
          var x2, k2 = (x2 = v(1), n3.push(x2), (k2 = 0 === r2._crypto_secretstream_xchacha20poly1305_pull(e5, b3, 0, x2, s2, o2, 0, h2, p2) && { tag: r2.HEAPU8[x2], message: i3 }) && { message: y(k2.message, _2), tag: k2.tag });
          return g(n3), k2;
        }
        function yr(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3), m(s2, e5, "state_address");
          var c2 = d2(a3 = E(s2, a3, "message_chunk")), o2 = a3.length;
          s2.push(c2);
          var h2 = null, p2 = 0;
          null != t2 && (h2 = d2(t2 = E(s2, t2, "ad")), p2 = t2.length, s2.push(h2)), m(s2, _2, "tag"), ("number" != typeof _2 || (0 | _2) !== _2 || _2 < 0) && f(s2, "tag must be an unsigned integer");
          var i3 = new u(o2 + r2._crypto_secretstream_xchacha20poly1305_abytes() | 0), v2 = i3.address;
          if (s2.push(v2), !(0 | r2._crypto_secretstream_xchacha20poly1305_push(e5, v2, 0, c2, o2, 0, h2, p2, 0, _2))) {
            var x2 = y(i3, n3);
            return g(s2), x2;
          }
          b2(s2, "invalid usage");
        }
        function ir(e5, a3) {
          var t2 = [];
          return l(a3), m(t2, e5, "state_address"), r2._crypto_secretstream_xchacha20poly1305_rekey(e5), g(t2), true;
        }
        function lr(e5, a3, t2) {
          var _2 = [];
          l(t2);
          var n3 = d2(e5 = E(_2, e5, "message")), s2 = e5.length;
          _2.push(n3), a3 = E(_2, a3, "key");
          var c2, o2 = 0 | r2._crypto_shorthash_keybytes();
          a3.length !== o2 && f(_2, "invalid key length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_shorthash_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_shorthash(p2, n3, s2, 0, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid usage");
        }
        function ur(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_shorthash_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_shorthash_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function dr(e5, a3, t2) {
          var _2 = [];
          l(t2);
          var n3 = d2(e5 = E(_2, e5, "message")), s2 = e5.length;
          _2.push(n3), a3 = E(_2, a3, "key");
          var c2, o2 = 0 | r2._crypto_shorthash_siphashx24_keybytes();
          a3.length !== o2 && f(_2, "invalid key length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_shorthash_siphashx24_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_shorthash_siphashx24(p2, n3, s2, 0, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid usage");
        }
        function vr(e5, a3, t2) {
          var _2 = [];
          l(t2);
          var n3 = d2(e5 = E(_2, e5, "message")), s2 = e5.length;
          _2.push(n3), a3 = E(_2, a3, "privateKey");
          var c2, o2 = 0 | r2._crypto_sign_secretkeybytes();
          a3.length !== o2 && f(_2, "invalid privateKey length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(e5.length + r2._crypto_sign_bytes() | 0), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_sign(p2, null, n3, s2, 0, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid usage");
        }
        function gr(e5, a3, t2) {
          var _2 = [];
          l(t2);
          var n3 = d2(e5 = E(_2, e5, "message")), s2 = e5.length;
          _2.push(n3), a3 = E(_2, a3, "privateKey");
          var c2, o2 = 0 | r2._crypto_sign_secretkeybytes();
          a3.length !== o2 && f(_2, "invalid privateKey length"), c2 = d2(a3), _2.push(c2);
          var h2 = new u(0 | r2._crypto_sign_bytes()), p2 = h2.address;
          if (_2.push(p2), !(0 | r2._crypto_sign_detached(p2, null, n3, s2, 0, c2))) {
            var i3 = y(h2, t2);
            return g(_2), i3;
          }
          b2(_2, "invalid usage");
        }
        function br(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "edPk");
          var _2, n3 = 0 | r2._crypto_sign_publickeybytes();
          e5.length !== n3 && f(t2, "invalid edPk length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_scalarmult_scalarbytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_sign_ed25519_pk_to_curve25519(c2, _2))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "invalid key");
        }
        function fr(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "edSk");
          var _2, n3 = 0 | r2._crypto_sign_secretkeybytes();
          e5.length !== n3 && f(t2, "invalid edSk length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_scalarmult_scalarbytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_sign_ed25519_sk_to_curve25519(c2, _2))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "invalid key");
        }
        function mr(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "privateKey");
          var _2, n3 = 0 | r2._crypto_sign_secretkeybytes();
          e5.length !== n3 && f(t2, "invalid privateKey length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_sign_publickeybytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_sign_ed25519_sk_to_pk(c2, _2))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "invalid key");
        }
        function Er(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "privateKey");
          var _2, n3 = 0 | r2._crypto_sign_secretkeybytes();
          e5.length !== n3 && f(t2, "invalid privateKey length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_sign_seedbytes()), c2 = s2.address;
          if (t2.push(c2), !(0 | r2._crypto_sign_ed25519_sk_to_seed(c2, _2))) {
            var o2 = y(s2, a3);
            return g(t2), o2;
          }
          b2(t2, "invalid key");
        }
        function xr(e5, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e5, "state_address"), a3 = E(_2, a3, "privateKey");
          var n3, s2 = 0 | r2._crypto_sign_secretkeybytes();
          a3.length !== s2 && f(_2, "invalid privateKey length"), n3 = d2(a3), _2.push(n3);
          var c2 = new u(0 | r2._crypto_sign_bytes()), o2 = c2.address;
          if (_2.push(o2), !(0 | r2._crypto_sign_final_create(e5, o2, null, n3))) {
            var h2 = (r2._free(e5), y(c2, t2));
            return g(_2), h2;
          }
          b2(_2, "invalid usage");
        }
        function kr(e5, a3, t2, _2) {
          var n3 = [];
          l(_2), m(n3, e5, "state_address"), a3 = E(n3, a3, "signature");
          var s2, c2 = 0 | r2._crypto_sign_bytes();
          a3.length !== c2 && f(n3, "invalid signature length"), s2 = d2(a3), n3.push(s2), t2 = E(n3, t2, "publicKey");
          var o2, h2 = 0 | r2._crypto_sign_publickeybytes();
          t2.length !== h2 && f(n3, "invalid publicKey length"), o2 = d2(t2), n3.push(o2);
          var p2 = !(0 | r2._crypto_sign_final_verify(e5, s2, o2));
          return g(n3), p2;
        }
        function Sr(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(208).address;
          if (!(0 | r2._crypto_sign_init(t2))) {
            var _2 = t2;
            return g(a3), _2;
          }
          b2(a3, "internal error");
        }
        function Tr(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_sign_publickeybytes()), _2 = t2.address;
          a3.push(_2);
          var n3 = new u(0 | r2._crypto_sign_secretkeybytes()), s2 = n3.address;
          if (a3.push(s2), !(0 | r2._crypto_sign_keypair(_2, s2))) {
            var c2 = { publicKey: y(t2, e5), privateKey: y(n3, e5), keyType: "ed25519" };
            return g(a3), c2;
          }
          b2(a3, "internal error");
        }
        function wr(e5, a3, t2) {
          var _2 = [];
          l(t2), e5 = E(_2, e5, "signedMessage");
          var n3, s2 = r2._crypto_sign_bytes(), c2 = e5.length;
          c2 < s2 && f(_2, "signedMessage is too short"), n3 = d2(e5), _2.push(n3), a3 = E(_2, a3, "publicKey");
          var o2, h2 = 0 | r2._crypto_sign_publickeybytes();
          a3.length !== h2 && f(_2, "invalid publicKey length"), o2 = d2(a3), _2.push(o2);
          var p2 = new u(c2 - r2._crypto_sign_bytes() | 0), i3 = p2.address;
          if (_2.push(i3), !(0 | r2._crypto_sign_open(i3, null, n3, c2, 0, o2))) {
            var v2 = y(p2, t2);
            return g(_2), v2;
          }
          b2(_2, "incorrect signature for the given public key");
        }
        function Yr(e5, a3) {
          var t2 = [];
          l(a3), e5 = E(t2, e5, "seed");
          var _2, n3 = 0 | r2._crypto_sign_seedbytes();
          e5.length !== n3 && f(t2, "invalid seed length"), _2 = d2(e5), t2.push(_2);
          var s2 = new u(0 | r2._crypto_sign_publickeybytes()), c2 = s2.address;
          t2.push(c2);
          var o2 = new u(0 | r2._crypto_sign_secretkeybytes()), h2 = o2.address;
          if (t2.push(h2), !(0 | r2._crypto_sign_seed_keypair(c2, h2, _2))) {
            var p2 = { publicKey: y(s2, a3), privateKey: y(o2, a3), keyType: "ed25519" };
            return g(t2), p2;
          }
          b2(t2, "invalid usage");
        }
        function Br(e5, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e5, "state_address");
          var n3 = d2(a3 = E(_2, a3, "message_chunk")), s2 = a3.length;
          _2.push(n3), 0 | r2._crypto_sign_update(e5, n3, s2, 0) && b2(_2, "invalid usage"), g(_2);
        }
        function Ar(e5, a3, t2) {
          var _2 = [];
          e5 = E(_2, e5, "signature");
          var n3, s2 = 0 | r2._crypto_sign_bytes();
          e5.length !== s2 && f(_2, "invalid signature length"), n3 = d2(e5), _2.push(n3);
          var c2 = d2(a3 = E(_2, a3, "message")), o2 = a3.length;
          _2.push(c2), t2 = E(_2, t2, "publicKey");
          var h2, p2 = 0 | r2._crypto_sign_publickeybytes();
          t2.length !== p2 && f(_2, "invalid publicKey length"), h2 = d2(t2), _2.push(h2);
          var y2 = !(0 | r2._crypto_sign_verify_detached(n3, c2, o2, 0, h2));
          return g(_2), y2;
        }
        function Mr(e5, a3, t2, _2) {
          var n3 = [];
          l(_2), m(n3, e5, "outLength"), ("number" != typeof e5 || (0 | e5) !== e5 || e5 < 0) && f(n3, "outLength must be an unsigned integer"), a3 = E(n3, a3, "key");
          var s2, c2 = 0 | r2._crypto_stream_chacha20_keybytes();
          a3.length !== c2 && f(n3, "invalid key length"), s2 = d2(a3), n3.push(s2), t2 = E(n3, t2, "nonce");
          var o2, h2 = 0 | r2._crypto_stream_chacha20_noncebytes();
          t2.length !== h2 && f(n3, "invalid nonce length"), o2 = d2(t2), n3.push(o2);
          var p2 = new u(0 | e5), i3 = p2.address;
          n3.push(i3), r2._crypto_stream_chacha20(i3, e5, 0, o2, s2);
          var v2 = y(p2, _2);
          return g(n3), v2;
        }
        function Ir(e5, a3, t2, _2) {
          var n3 = [];
          l(_2);
          var s2 = d2(e5 = E(n3, e5, "input_message")), c2 = e5.length;
          n3.push(s2), a3 = E(n3, a3, "nonce");
          var o2, h2 = 0 | r2._crypto_stream_chacha20_ietf_noncebytes();
          a3.length !== h2 && f(n3, "invalid nonce length"), o2 = d2(a3), n3.push(o2), t2 = E(n3, t2, "key");
          var p2, i3 = 0 | r2._crypto_stream_chacha20_ietf_keybytes();
          t2.length !== i3 && f(n3, "invalid key length"), p2 = d2(t2), n3.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          if (n3.push(m2), 0 === r2._crypto_stream_chacha20_ietf_xor(m2, s2, c2, 0, o2, p2)) {
            var x2 = y(v2, _2);
            return g(n3), x2;
          }
          b2(n3, "invalid usage");
        }
        function Kr(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3);
          var c2 = d2(e5 = E(s2, e5, "input_message")), o2 = e5.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var h2, p2 = 0 | r2._crypto_stream_chacha20_ietf_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), h2 = d2(a3), s2.push(h2), m(s2, t2, "nonce_increment"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(s2, "nonce_increment must be an unsigned integer"), _2 = E(s2, _2, "key");
          var i3, v2 = 0 | r2._crypto_stream_chacha20_ietf_keybytes();
          _2.length !== v2 && f(s2, "invalid key length"), i3 = d2(_2), s2.push(i3);
          var x2 = new u(0 | o2), k2 = x2.address;
          if (s2.push(k2), 0 === r2._crypto_stream_chacha20_ietf_xor_ic(k2, c2, o2, 0, h2, t2, i3)) {
            var S2 = y(x2, n3);
            return g(s2), S2;
          }
          b2(s2, "invalid usage");
        }
        function Nr(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_stream_chacha20_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_stream_chacha20_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function Lr(e5, a3, t2, _2) {
          var n3 = [];
          l(_2);
          var s2 = d2(e5 = E(n3, e5, "input_message")), c2 = e5.length;
          n3.push(s2), a3 = E(n3, a3, "nonce");
          var o2, h2 = 0 | r2._crypto_stream_chacha20_noncebytes();
          a3.length !== h2 && f(n3, "invalid nonce length"), o2 = d2(a3), n3.push(o2), t2 = E(n3, t2, "key");
          var p2, i3 = 0 | r2._crypto_stream_chacha20_keybytes();
          t2.length !== i3 && f(n3, "invalid key length"), p2 = d2(t2), n3.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          if (n3.push(m2), 0 === r2._crypto_stream_chacha20_xor(m2, s2, c2, 0, o2, p2)) {
            var x2 = y(v2, _2);
            return g(n3), x2;
          }
          b2(n3, "invalid usage");
        }
        function Or(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3);
          var c2 = d2(e5 = E(s2, e5, "input_message")), o2 = e5.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var h2, p2 = 0 | r2._crypto_stream_chacha20_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), h2 = d2(a3), s2.push(h2), m(s2, t2, "nonce_increment"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(s2, "nonce_increment must be an unsigned integer"), _2 = E(s2, _2, "key");
          var i3, v2 = 0 | r2._crypto_stream_chacha20_keybytes();
          _2.length !== v2 && f(s2, "invalid key length"), i3 = d2(_2), s2.push(i3);
          var x2 = new u(0 | o2), k2 = x2.address;
          if (s2.push(k2), 0 === r2._crypto_stream_chacha20_xor_ic(k2, c2, o2, 0, h2, t2, 0, i3)) {
            var S2 = y(x2, n3);
            return g(s2), S2;
          }
          b2(s2, "invalid usage");
        }
        function Ur(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_stream_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_stream_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function Cr(e5) {
          var a3 = [];
          l(e5);
          var t2 = new u(0 | r2._crypto_stream_xchacha20_keybytes()), _2 = t2.address;
          a3.push(_2), r2._crypto_stream_xchacha20_keygen(_2);
          var n3 = y(t2, e5);
          return g(a3), n3;
        }
        function Pr(e5, a3, t2, _2) {
          var n3 = [];
          l(_2);
          var s2 = d2(e5 = E(n3, e5, "input_message")), c2 = e5.length;
          n3.push(s2), a3 = E(n3, a3, "nonce");
          var o2, h2 = 0 | r2._crypto_stream_xchacha20_noncebytes();
          a3.length !== h2 && f(n3, "invalid nonce length"), o2 = d2(a3), n3.push(o2), t2 = E(n3, t2, "key");
          var p2, i3 = 0 | r2._crypto_stream_xchacha20_keybytes();
          t2.length !== i3 && f(n3, "invalid key length"), p2 = d2(t2), n3.push(p2);
          var v2 = new u(0 | c2), m2 = v2.address;
          if (n3.push(m2), 0 === r2._crypto_stream_xchacha20_xor(m2, s2, c2, 0, o2, p2)) {
            var x2 = y(v2, _2);
            return g(n3), x2;
          }
          b2(n3, "invalid usage");
        }
        function Rr(e5, a3, t2, _2, n3) {
          var s2 = [];
          l(n3);
          var c2 = d2(e5 = E(s2, e5, "input_message")), o2 = e5.length;
          s2.push(c2), a3 = E(s2, a3, "nonce");
          var h2, p2 = 0 | r2._crypto_stream_xchacha20_noncebytes();
          a3.length !== p2 && f(s2, "invalid nonce length"), h2 = d2(a3), s2.push(h2), m(s2, t2, "nonce_increment"), ("number" != typeof t2 || (0 | t2) !== t2 || t2 < 0) && f(s2, "nonce_increment must be an unsigned integer"), _2 = E(s2, _2, "key");
          var i3, v2 = 0 | r2._crypto_stream_xchacha20_keybytes();
          _2.length !== v2 && f(s2, "invalid key length"), i3 = d2(_2), s2.push(i3);
          var x2 = new u(0 | o2), k2 = x2.address;
          if (s2.push(k2), 0 === r2._crypto_stream_xchacha20_xor_ic(k2, c2, o2, 0, h2, t2, 0, i3)) {
            var S2 = y(x2, n3);
            return g(s2), S2;
          }
          b2(s2, "invalid usage");
        }
        function Xr(e5, a3) {
          var t2 = [];
          l(a3), m(t2, e5, "length"), ("number" != typeof e5 || (0 | e5) !== e5 || e5 < 0) && f(t2, "length must be an unsigned integer");
          var _2 = new u(0 | e5), n3 = _2.address;
          t2.push(n3), r2._randombytes_buf(n3, e5);
          var s2 = y(_2, a3);
          return g(t2), s2;
        }
        function Gr(e5, a3, t2) {
          var _2 = [];
          l(t2), m(_2, e5, "length"), ("number" != typeof e5 || (0 | e5) !== e5 || e5 < 0) && f(_2, "length must be an unsigned integer"), a3 = E(_2, a3, "seed");
          var n3, s2 = 0 | r2._randombytes_seedbytes();
          a3.length !== s2 && f(_2, "invalid seed length"), n3 = d2(a3), _2.push(n3);
          var c2 = new u(0 | e5), o2 = c2.address;
          _2.push(o2), r2._randombytes_buf_deterministic(o2, e5, n3);
          var h2 = y(c2, t2);
          return g(_2), h2;
        }
        function Dr(e5) {
          l(e5), r2._randombytes_close();
        }
        function Fr(e5) {
          l(e5);
          var a3 = r2._randombytes_random() >>> 0;
          return g([]), a3;
        }
        function Vr(e5, a3) {
          var t2 = [];
          l(a3);
          for (var _2 = r2._malloc(24), n3 = 0; n3 < 6; n3++) r2.setValue(_2 + 4 * n3, r2.Runtime.addFunction(e5[["implementation_name", "random", "stir", "uniform", "buf", "close"][n3]]), "i32");
          0 | r2._randombytes_set_implementation(_2) && b2(t2, "unsupported implementation"), g(t2);
        }
        function Hr(e5) {
          l(e5), r2._randombytes_stir();
        }
        function Wr(e5, a3) {
          var t2 = [];
          l(a3), m(t2, e5, "upper_bound"), ("number" != typeof e5 || (0 | e5) !== e5 || e5 < 0) && f(t2, "upper_bound must be an unsigned integer");
          var _2 = r2._randombytes_uniform(e5) >>> 0;
          return g(t2), _2;
        }
        function qr2() {
          var e5 = r2._sodium_version_string(), a3 = r2.UTF8ToString(e5);
          return g([]), a3;
        }
        return u.prototype.to_Uint8Array = function() {
          var e5 = new Uint8Array(this.length);
          return e5.set(r2.HEAPU8.subarray(this.address, this.address + this.length)), e5;
        }, e4.add = function(e5, a3) {
          if (!(e5 instanceof Uint8Array && a3 instanceof Uint8Array)) throw new TypeError("Only Uint8Array instances can added");
          var r3 = e5.length, t2 = 0, _2 = 0;
          if (a3.length != e5.length) throw new TypeError("Arguments must have the same length");
          for (_2 = 0; _2 < r3; _2++) t2 >>= 8, t2 += e5[_2] + a3[_2], e5[_2] = 255 & t2;
        }, e4.base64_variants = o, e4.compare = function(e5, a3) {
          if (!(e5 instanceof Uint8Array && a3 instanceof Uint8Array)) throw new TypeError("Only Uint8Array instances can be compared");
          if (e5.length !== a3.length) throw new TypeError("Only instances of identical length can be compared");
          for (var r3 = 0, t2 = 1, _2 = e5.length; _2-- > 0; ) r3 |= a3[_2] - e5[_2] >> 8 & t2, t2 &= (a3[_2] ^ e5[_2]) - 1 >> 8;
          return r3 + r3 + t2 - 1;
        }, e4.from_base64 = function(e5, a3) {
          a3 = h(a3);
          var t2, _2 = [], n3 = new u(3 * (e5 = E(_2, e5, "input")).length / 4), s2 = d2(e5), c2 = v(4), o2 = v(4);
          return _2.push(s2), _2.push(n3.address), _2.push(n3.result_bin_len_p), _2.push(n3.b64_end_p), 0 !== r2._sodium_base642bin(n3.address, n3.length, s2, e5.length, 0, c2, o2, a3) && b2(_2, "invalid input"), r2.getValue(o2, "i32") - s2 !== e5.length && b2(_2, "incomplete input"), n3.length = r2.getValue(c2, "i32"), t2 = n3.to_Uint8Array(), g(_2), t2;
        }, e4.from_hex = function(e5) {
          var a3, t2 = [], _2 = new u((e5 = E(t2, e5, "input")).length / 2), n3 = d2(e5), s2 = v(4);
          return t2.push(n3), t2.push(_2.address), t2.push(_2.hex_end_p), 0 !== r2._sodium_hex2bin(_2.address, _2.length, n3, e5.length, 0, 0, s2) && b2(t2, "invalid input"), r2.getValue(s2, "i32") - n3 !== e5.length && b2(t2, "incomplete input"), a3 = _2.to_Uint8Array(), g(t2), a3;
        }, e4.from_string = n, e4.increment = function(e5) {
          if (!(e5 instanceof Uint8Array)) throw new TypeError("Only Uint8Array instances can be incremented");
          for (var a3 = 256, r3 = 0, t2 = e5.length; r3 < t2; r3++) a3 >>= 8, a3 += e5[r3], e5[r3] = 255 & a3;
        }, e4.is_zero = function(e5) {
          if (!(e5 instanceof Uint8Array)) throw new TypeError("Only Uint8Array instances can be checked");
          for (var a3 = 0, r3 = 0, t2 = e5.length; r3 < t2; r3++) a3 |= e5[r3];
          return 0 === a3;
        }, e4.libsodium = a2, e4.memcmp = function(e5, a3) {
          if (!(e5 instanceof Uint8Array && a3 instanceof Uint8Array)) throw new TypeError("Only Uint8Array instances can be compared");
          if (e5.length !== a3.length) throw new TypeError("Only instances of identical length can be compared");
          for (var r3 = 0, t2 = 0, _2 = e5.length; t2 < _2; t2++) r3 |= e5[t2] ^ a3[t2];
          return 0 === r3;
        }, e4.memzero = function(e5) {
          if (!(e5 instanceof Uint8Array)) throw new TypeError("Only Uint8Array instances can be wiped");
          for (var a3 = 0, r3 = e5.length; a3 < r3; a3++) e5[a3] = 0;
        }, e4.output_formats = function() {
          return ["uint8array", "text", "hex", "base64"];
        }, e4.pad = function(e5, a3) {
          if (!(e5 instanceof Uint8Array)) throw new TypeError("buffer must be a Uint8Array");
          if ((a3 |= 0) <= 0) throw new Error("block size must be > 0");
          var t2, _2 = [], n3 = v(4), s2 = 1, c2 = 0, o2 = 0 | e5.length, h2 = new u(o2 + a3);
          _2.push(n3), _2.push(h2.address);
          for (var p2 = h2.address, y2 = h2.address + o2 + a3; p2 < y2; p2++) r2.HEAPU8[p2] = e5[c2], c2 += s2 = 1 & ~((65535 & ((o2 -= s2) >>> 48 | o2 >>> 32 | o2 >>> 16 | o2)) - 1 >> 16);
          return 0 !== r2._sodium_pad(n3, h2.address, e5.length, a3, h2.length) && b2(_2, "internal error"), h2.length = r2.getValue(n3, "i32"), t2 = h2.to_Uint8Array(), g(_2), t2;
        }, e4.unpad = function(e5, a3) {
          if (!(e5 instanceof Uint8Array)) throw new TypeError("buffer must be a Uint8Array");
          if ((a3 |= 0) <= 0) throw new Error("block size must be > 0");
          var t2 = [], _2 = d2(e5), n3 = v(4);
          return t2.push(_2), t2.push(n3), 0 !== r2._sodium_unpad(n3, _2, e5.length, a3) && b2(t2, "unsupported/invalid padding"), e5 = (e5 = new Uint8Array(e5)).subarray(0, r2.getValue(n3, "i32")), g(t2), e5;
        }, e4.ready = _, e4.symbols = function() {
          return Object.keys(e4).sort();
        }, e4.to_base64 = p, e4.to_hex = c, e4.to_string = s, e4;
      }
      var r = "object" == typeof e3.sodium && "function" == typeof e3.sodium.onload ? e3.sodium.onload : null;
      "function" == typeof define && define.amd ? define(["exports", "libsodium-sumo"], a) : "object" == typeof exports && "string" != typeof exports.nodeName ? a(exports, require_libsodium_sumo()) : e3.sodium = a(e3.commonJsStrict = {}, e3.libsodium), r && e3.sodium.ready.then(function() {
        r(e3.sodium);
      });
    }(exports);
  }
});

// node_modules/base64-js/index.js
var require_base64_js = __commonJS({
  "node_modules/base64-js/index.js"(exports) {
    "use strict";
    exports.byteLength = byteLength;
    exports.toByteArray = toByteArray;
    exports.fromByteArray = fromByteArray;
    var lookup = [];
    var revLookup = [];
    var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
    var code = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (i2 = 0, len = code.length; i2 < len; ++i2) {
      lookup[i2] = code[i2];
      revLookup[code.charCodeAt(i2)] = i2;
    }
    var i2;
    var len;
    revLookup["-".charCodeAt(0)] = 62;
    revLookup["_".charCodeAt(0)] = 63;
    function getLens(b64) {
      var len2 = b64.length;
      if (len2 % 4 > 0) {
        throw new Error("Invalid string. Length must be a multiple of 4");
      }
      var validLen = b64.indexOf("=");
      if (validLen === -1) validLen = len2;
      var placeHoldersLen = validLen === len2 ? 0 : 4 - validLen % 4;
      return [validLen, placeHoldersLen];
    }
    function byteLength(b64) {
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
    }
    function _byteLength(b64, validLen, placeHoldersLen) {
      return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
    }
    function toByteArray(b64) {
      var tmp;
      var lens = getLens(b64);
      var validLen = lens[0];
      var placeHoldersLen = lens[1];
      var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
      var curByte = 0;
      var len2 = placeHoldersLen > 0 ? validLen - 4 : validLen;
      var i3;
      for (i3 = 0; i3 < len2; i3 += 4) {
        tmp = revLookup[b64.charCodeAt(i3)] << 18 | revLookup[b64.charCodeAt(i3 + 1)] << 12 | revLookup[b64.charCodeAt(i3 + 2)] << 6 | revLookup[b64.charCodeAt(i3 + 3)];
        arr[curByte++] = tmp >> 16 & 255;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
      }
      if (placeHoldersLen === 2) {
        tmp = revLookup[b64.charCodeAt(i3)] << 2 | revLookup[b64.charCodeAt(i3 + 1)] >> 4;
        arr[curByte++] = tmp & 255;
      }
      if (placeHoldersLen === 1) {
        tmp = revLookup[b64.charCodeAt(i3)] << 10 | revLookup[b64.charCodeAt(i3 + 1)] << 4 | revLookup[b64.charCodeAt(i3 + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
      }
      return arr;
    }
    function tripletToBase64(num) {
      return lookup[num >> 18 & 63] + lookup[num >> 12 & 63] + lookup[num >> 6 & 63] + lookup[num & 63];
    }
    function encodeChunk(uint8, start, end) {
      var tmp;
      var output = [];
      for (var i3 = start; i3 < end; i3 += 3) {
        tmp = (uint8[i3] << 16 & 16711680) + (uint8[i3 + 1] << 8 & 65280) + (uint8[i3 + 2] & 255);
        output.push(tripletToBase64(tmp));
      }
      return output.join("");
    }
    function fromByteArray(uint8) {
      var tmp;
      var len2 = uint8.length;
      var extraBytes = len2 % 3;
      var parts = [];
      var maxChunkLength = 16383;
      for (var i3 = 0, len22 = len2 - extraBytes; i3 < len22; i3 += maxChunkLength) {
        parts.push(encodeChunk(uint8, i3, i3 + maxChunkLength > len22 ? len22 : i3 + maxChunkLength));
      }
      if (extraBytes === 1) {
        tmp = uint8[len2 - 1];
        parts.push(
          lookup[tmp >> 2] + lookup[tmp << 4 & 63] + "=="
        );
      } else if (extraBytes === 2) {
        tmp = (uint8[len2 - 2] << 8) + uint8[len2 - 1];
        parts.push(
          lookup[tmp >> 10] + lookup[tmp >> 4 & 63] + lookup[tmp << 2 & 63] + "="
        );
      }
      return parts.join("");
    }
  }
});

// node_modules/ieee754/index.js
var require_ieee754 = __commonJS({
  "node_modules/ieee754/index.js"(exports) {
    exports.read = function(buffer, offset, isLE2, mLen, nBytes) {
      var e3, m;
      var eLen = nBytes * 8 - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var nBits = -7;
      var i2 = isLE2 ? nBytes - 1 : 0;
      var d2 = isLE2 ? -1 : 1;
      var s = buffer[offset + i2];
      i2 += d2;
      e3 = s & (1 << -nBits) - 1;
      s >>= -nBits;
      nBits += eLen;
      for (; nBits > 0; e3 = e3 * 256 + buffer[offset + i2], i2 += d2, nBits -= 8) {
      }
      m = e3 & (1 << -nBits) - 1;
      e3 >>= -nBits;
      nBits += mLen;
      for (; nBits > 0; m = m * 256 + buffer[offset + i2], i2 += d2, nBits -= 8) {
      }
      if (e3 === 0) {
        e3 = 1 - eBias;
      } else if (e3 === eMax) {
        return m ? NaN : (s ? -1 : 1) * Infinity;
      } else {
        m = m + Math.pow(2, mLen);
        e3 = e3 - eBias;
      }
      return (s ? -1 : 1) * m * Math.pow(2, e3 - mLen);
    };
    exports.write = function(buffer, value, offset, isLE2, mLen, nBytes) {
      var e3, m, c;
      var eLen = nBytes * 8 - mLen - 1;
      var eMax = (1 << eLen) - 1;
      var eBias = eMax >> 1;
      var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
      var i2 = isLE2 ? 0 : nBytes - 1;
      var d2 = isLE2 ? 1 : -1;
      var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
      value = Math.abs(value);
      if (isNaN(value) || value === Infinity) {
        m = isNaN(value) ? 1 : 0;
        e3 = eMax;
      } else {
        e3 = Math.floor(Math.log(value) / Math.LN2);
        if (value * (c = Math.pow(2, -e3)) < 1) {
          e3--;
          c *= 2;
        }
        if (e3 + eBias >= 1) {
          value += rt / c;
        } else {
          value += rt * Math.pow(2, 1 - eBias);
        }
        if (value * c >= 2) {
          e3++;
          c /= 2;
        }
        if (e3 + eBias >= eMax) {
          m = 0;
          e3 = eMax;
        } else if (e3 + eBias >= 1) {
          m = (value * c - 1) * Math.pow(2, mLen);
          e3 = e3 + eBias;
        } else {
          m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
          e3 = 0;
        }
      }
      for (; mLen >= 8; buffer[offset + i2] = m & 255, i2 += d2, m /= 256, mLen -= 8) {
      }
      e3 = e3 << mLen | m;
      eLen += mLen;
      for (; eLen > 0; buffer[offset + i2] = e3 & 255, i2 += d2, e3 /= 256, eLen -= 8) {
      }
      buffer[offset + i2 - d2] |= s * 128;
    };
  }
});

// node_modules/buffer/index.js
var require_buffer = __commonJS({
  "node_modules/buffer/index.js"(exports) {
    "use strict";
    var base64 = require_base64_js();
    var ieee754 = require_ieee754();
    var customInspectSymbol = typeof Symbol === "function" && typeof Symbol["for"] === "function" ? Symbol["for"]("nodejs.util.inspect.custom") : null;
    exports.Buffer = Buffer11;
    exports.SlowBuffer = SlowBuffer;
    exports.INSPECT_MAX_BYTES = 50;
    var K_MAX_LENGTH = 2147483647;
    exports.kMaxLength = K_MAX_LENGTH;
    Buffer11.TYPED_ARRAY_SUPPORT = typedArraySupport();
    if (!Buffer11.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") {
      console.error(
        "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
      );
    }
    function typedArraySupport() {
      try {
        const arr = new Uint8Array(1);
        const proto = { foo: function() {
          return 42;
        } };
        Object.setPrototypeOf(proto, Uint8Array.prototype);
        Object.setPrototypeOf(arr, proto);
        return arr.foo() === 42;
      } catch (e3) {
        return false;
      }
    }
    Object.defineProperty(Buffer11.prototype, "parent", {
      enumerable: true,
      get: function() {
        if (!Buffer11.isBuffer(this)) return void 0;
        return this.buffer;
      }
    });
    Object.defineProperty(Buffer11.prototype, "offset", {
      enumerable: true,
      get: function() {
        if (!Buffer11.isBuffer(this)) return void 0;
        return this.byteOffset;
      }
    });
    function createBuffer(length) {
      if (length > K_MAX_LENGTH) {
        throw new RangeError('The value "' + length + '" is invalid for option "size"');
      }
      const buf = new Uint8Array(length);
      Object.setPrototypeOf(buf, Buffer11.prototype);
      return buf;
    }
    function Buffer11(arg2, encodingOrOffset, length) {
      if (typeof arg2 === "number") {
        if (typeof encodingOrOffset === "string") {
          throw new TypeError(
            'The "string" argument must be of type string. Received type number'
          );
        }
        return allocUnsafe(arg2);
      }
      return from(arg2, encodingOrOffset, length);
    }
    Buffer11.poolSize = 8192;
    function from(value, encodingOrOffset, length) {
      if (typeof value === "string") {
        return fromString(value, encodingOrOffset);
      }
      if (ArrayBuffer.isView(value)) {
        return fromArrayView(value);
      }
      if (value == null) {
        throw new TypeError(
          "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value
        );
      }
      if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
        return fromArrayBuffer(value, encodingOrOffset, length);
      }
      if (typeof SharedArrayBuffer !== "undefined" && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {
        return fromArrayBuffer(value, encodingOrOffset, length);
      }
      if (typeof value === "number") {
        throw new TypeError(
          'The "value" argument must not be of type number. Received type number'
        );
      }
      const valueOf = value.valueOf && value.valueOf();
      if (valueOf != null && valueOf !== value) {
        return Buffer11.from(valueOf, encodingOrOffset, length);
      }
      const b2 = fromObject(value);
      if (b2) return b2;
      if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === "function") {
        return Buffer11.from(value[Symbol.toPrimitive]("string"), encodingOrOffset, length);
      }
      throw new TypeError(
        "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value
      );
    }
    Buffer11.from = function(value, encodingOrOffset, length) {
      return from(value, encodingOrOffset, length);
    };
    Object.setPrototypeOf(Buffer11.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(Buffer11, Uint8Array);
    function assertSize(size2) {
      if (typeof size2 !== "number") {
        throw new TypeError('"size" argument must be of type number');
      } else if (size2 < 0) {
        throw new RangeError('The value "' + size2 + '" is invalid for option "size"');
      }
    }
    function alloc(size2, fill, encoding) {
      assertSize(size2);
      if (size2 <= 0) {
        return createBuffer(size2);
      }
      if (fill !== void 0) {
        return typeof encoding === "string" ? createBuffer(size2).fill(fill, encoding) : createBuffer(size2).fill(fill);
      }
      return createBuffer(size2);
    }
    Buffer11.alloc = function(size2, fill, encoding) {
      return alloc(size2, fill, encoding);
    };
    function allocUnsafe(size2) {
      assertSize(size2);
      return createBuffer(size2 < 0 ? 0 : checked(size2) | 0);
    }
    Buffer11.allocUnsafe = function(size2) {
      return allocUnsafe(size2);
    };
    Buffer11.allocUnsafeSlow = function(size2) {
      return allocUnsafe(size2);
    };
    function fromString(string2, encoding) {
      if (typeof encoding !== "string" || encoding === "") {
        encoding = "utf8";
      }
      if (!Buffer11.isEncoding(encoding)) {
        throw new TypeError("Unknown encoding: " + encoding);
      }
      const length = byteLength(string2, encoding) | 0;
      let buf = createBuffer(length);
      const actual = buf.write(string2, encoding);
      if (actual !== length) {
        buf = buf.slice(0, actual);
      }
      return buf;
    }
    function fromArrayLike(array) {
      const length = array.length < 0 ? 0 : checked(array.length) | 0;
      const buf = createBuffer(length);
      for (let i2 = 0; i2 < length; i2 += 1) {
        buf[i2] = array[i2] & 255;
      }
      return buf;
    }
    function fromArrayView(arrayView) {
      if (isInstance(arrayView, Uint8Array)) {
        const copy = new Uint8Array(arrayView);
        return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
      }
      return fromArrayLike(arrayView);
    }
    function fromArrayBuffer(array, byteOffset, length) {
      if (byteOffset < 0 || array.byteLength < byteOffset) {
        throw new RangeError('"offset" is outside of buffer bounds');
      }
      if (array.byteLength < byteOffset + (length || 0)) {
        throw new RangeError('"length" is outside of buffer bounds');
      }
      let buf;
      if (byteOffset === void 0 && length === void 0) {
        buf = new Uint8Array(array);
      } else if (length === void 0) {
        buf = new Uint8Array(array, byteOffset);
      } else {
        buf = new Uint8Array(array, byteOffset, length);
      }
      Object.setPrototypeOf(buf, Buffer11.prototype);
      return buf;
    }
    function fromObject(obj) {
      if (Buffer11.isBuffer(obj)) {
        const len = checked(obj.length) | 0;
        const buf = createBuffer(len);
        if (buf.length === 0) {
          return buf;
        }
        obj.copy(buf, 0, 0, len);
        return buf;
      }
      if (obj.length !== void 0) {
        if (typeof obj.length !== "number" || numberIsNaN(obj.length)) {
          return createBuffer(0);
        }
        return fromArrayLike(obj);
      }
      if (obj.type === "Buffer" && Array.isArray(obj.data)) {
        return fromArrayLike(obj.data);
      }
    }
    function checked(length) {
      if (length >= K_MAX_LENGTH) {
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + K_MAX_LENGTH.toString(16) + " bytes");
      }
      return length | 0;
    }
    function SlowBuffer(length) {
      if (+length != length) {
        length = 0;
      }
      return Buffer11.alloc(+length);
    }
    Buffer11.isBuffer = function isBuffer(b2) {
      return b2 != null && b2._isBuffer === true && b2 !== Buffer11.prototype;
    };
    Buffer11.compare = function compare2(a, b2) {
      if (isInstance(a, Uint8Array)) a = Buffer11.from(a, a.offset, a.byteLength);
      if (isInstance(b2, Uint8Array)) b2 = Buffer11.from(b2, b2.offset, b2.byteLength);
      if (!Buffer11.isBuffer(a) || !Buffer11.isBuffer(b2)) {
        throw new TypeError(
          'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
        );
      }
      if (a === b2) return 0;
      let x = a.length;
      let y = b2.length;
      for (let i2 = 0, len = Math.min(x, y); i2 < len; ++i2) {
        if (a[i2] !== b2[i2]) {
          x = a[i2];
          y = b2[i2];
          break;
        }
      }
      if (x < y) return -1;
      if (y < x) return 1;
      return 0;
    };
    Buffer11.isEncoding = function isEncoding(encoding) {
      switch (String(encoding).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    };
    Buffer11.concat = function concat4(list, length) {
      if (!Array.isArray(list)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
      }
      if (list.length === 0) {
        return Buffer11.alloc(0);
      }
      let i2;
      if (length === void 0) {
        length = 0;
        for (i2 = 0; i2 < list.length; ++i2) {
          length += list[i2].length;
        }
      }
      const buffer = Buffer11.allocUnsafe(length);
      let pos = 0;
      for (i2 = 0; i2 < list.length; ++i2) {
        let buf = list[i2];
        if (isInstance(buf, Uint8Array)) {
          if (pos + buf.length > buffer.length) {
            if (!Buffer11.isBuffer(buf)) buf = Buffer11.from(buf);
            buf.copy(buffer, pos);
          } else {
            Uint8Array.prototype.set.call(
              buffer,
              buf,
              pos
            );
          }
        } else if (!Buffer11.isBuffer(buf)) {
          throw new TypeError('"list" argument must be an Array of Buffers');
        } else {
          buf.copy(buffer, pos);
        }
        pos += buf.length;
      }
      return buffer;
    };
    function byteLength(string2, encoding) {
      if (Buffer11.isBuffer(string2)) {
        return string2.length;
      }
      if (ArrayBuffer.isView(string2) || isInstance(string2, ArrayBuffer)) {
        return string2.byteLength;
      }
      if (typeof string2 !== "string") {
        throw new TypeError(
          'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof string2
        );
      }
      const len = string2.length;
      const mustMatch = arguments.length > 2 && arguments[2] === true;
      if (!mustMatch && len === 0) return 0;
      let loweredCase = false;
      for (; ; ) {
        switch (encoding) {
          case "ascii":
          case "latin1":
          case "binary":
            return len;
          case "utf8":
          case "utf-8":
            return utf8ToBytes2(string2).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return len * 2;
          case "hex":
            return len >>> 1;
          case "base64":
            return base64ToBytes(string2).length;
          default:
            if (loweredCase) {
              return mustMatch ? -1 : utf8ToBytes2(string2).length;
            }
            encoding = ("" + encoding).toLowerCase();
            loweredCase = true;
        }
      }
    }
    Buffer11.byteLength = byteLength;
    function slowToString(encoding, start, end) {
      let loweredCase = false;
      if (start === void 0 || start < 0) {
        start = 0;
      }
      if (start > this.length) {
        return "";
      }
      if (end === void 0 || end > this.length) {
        end = this.length;
      }
      if (end <= 0) {
        return "";
      }
      end >>>= 0;
      start >>>= 0;
      if (end <= start) {
        return "";
      }
      if (!encoding) encoding = "utf8";
      while (true) {
        switch (encoding) {
          case "hex":
            return hexSlice(this, start, end);
          case "utf8":
          case "utf-8":
            return utf8Slice(this, start, end);
          case "ascii":
            return asciiSlice(this, start, end);
          case "latin1":
          case "binary":
            return latin1Slice(this, start, end);
          case "base64":
            return base64Slice(this, start, end);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return utf16leSlice(this, start, end);
          default:
            if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
            encoding = (encoding + "").toLowerCase();
            loweredCase = true;
        }
      }
    }
    Buffer11.prototype._isBuffer = true;
    function swap(b2, n, m) {
      const i2 = b2[n];
      b2[n] = b2[m];
      b2[m] = i2;
    }
    Buffer11.prototype.swap16 = function swap16() {
      const len = this.length;
      if (len % 2 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 16-bits");
      }
      for (let i2 = 0; i2 < len; i2 += 2) {
        swap(this, i2, i2 + 1);
      }
      return this;
    };
    Buffer11.prototype.swap32 = function swap32() {
      const len = this.length;
      if (len % 4 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      }
      for (let i2 = 0; i2 < len; i2 += 4) {
        swap(this, i2, i2 + 3);
        swap(this, i2 + 1, i2 + 2);
      }
      return this;
    };
    Buffer11.prototype.swap64 = function swap64() {
      const len = this.length;
      if (len % 8 !== 0) {
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      }
      for (let i2 = 0; i2 < len; i2 += 8) {
        swap(this, i2, i2 + 7);
        swap(this, i2 + 1, i2 + 6);
        swap(this, i2 + 2, i2 + 5);
        swap(this, i2 + 3, i2 + 4);
      }
      return this;
    };
    Buffer11.prototype.toString = function toString() {
      const length = this.length;
      if (length === 0) return "";
      if (arguments.length === 0) return utf8Slice(this, 0, length);
      return slowToString.apply(this, arguments);
    };
    Buffer11.prototype.toLocaleString = Buffer11.prototype.toString;
    Buffer11.prototype.equals = function equals(b2) {
      if (!Buffer11.isBuffer(b2)) throw new TypeError("Argument must be a Buffer");
      if (this === b2) return true;
      return Buffer11.compare(this, b2) === 0;
    };
    Buffer11.prototype.inspect = function inspect() {
      let str = "";
      const max3 = exports.INSPECT_MAX_BYTES;
      str = this.toString("hex", 0, max3).replace(/(.{2})/g, "$1 ").trim();
      if (this.length > max3) str += " ... ";
      return "<Buffer " + str + ">";
    };
    if (customInspectSymbol) {
      Buffer11.prototype[customInspectSymbol] = Buffer11.prototype.inspect;
    }
    Buffer11.prototype.compare = function compare2(target, start, end, thisStart, thisEnd) {
      if (isInstance(target, Uint8Array)) {
        target = Buffer11.from(target, target.offset, target.byteLength);
      }
      if (!Buffer11.isBuffer(target)) {
        throw new TypeError(
          'The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof target
        );
      }
      if (start === void 0) {
        start = 0;
      }
      if (end === void 0) {
        end = target ? target.length : 0;
      }
      if (thisStart === void 0) {
        thisStart = 0;
      }
      if (thisEnd === void 0) {
        thisEnd = this.length;
      }
      if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
        throw new RangeError("out of range index");
      }
      if (thisStart >= thisEnd && start >= end) {
        return 0;
      }
      if (thisStart >= thisEnd) {
        return -1;
      }
      if (start >= end) {
        return 1;
      }
      start >>>= 0;
      end >>>= 0;
      thisStart >>>= 0;
      thisEnd >>>= 0;
      if (this === target) return 0;
      let x = thisEnd - thisStart;
      let y = end - start;
      const len = Math.min(x, y);
      const thisCopy = this.slice(thisStart, thisEnd);
      const targetCopy = target.slice(start, end);
      for (let i2 = 0; i2 < len; ++i2) {
        if (thisCopy[i2] !== targetCopy[i2]) {
          x = thisCopy[i2];
          y = targetCopy[i2];
          break;
        }
      }
      if (x < y) return -1;
      if (y < x) return 1;
      return 0;
    };
    function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
      if (buffer.length === 0) return -1;
      if (typeof byteOffset === "string") {
        encoding = byteOffset;
        byteOffset = 0;
      } else if (byteOffset > 2147483647) {
        byteOffset = 2147483647;
      } else if (byteOffset < -2147483648) {
        byteOffset = -2147483648;
      }
      byteOffset = +byteOffset;
      if (numberIsNaN(byteOffset)) {
        byteOffset = dir ? 0 : buffer.length - 1;
      }
      if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
      if (byteOffset >= buffer.length) {
        if (dir) return -1;
        else byteOffset = buffer.length - 1;
      } else if (byteOffset < 0) {
        if (dir) byteOffset = 0;
        else return -1;
      }
      if (typeof val === "string") {
        val = Buffer11.from(val, encoding);
      }
      if (Buffer11.isBuffer(val)) {
        if (val.length === 0) {
          return -1;
        }
        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
      } else if (typeof val === "number") {
        val = val & 255;
        if (typeof Uint8Array.prototype.indexOf === "function") {
          if (dir) {
            return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
          } else {
            return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
          }
        }
        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);
      }
      throw new TypeError("val must be string, number or Buffer");
    }
    function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
      let indexSize = 1;
      let arrLength = arr.length;
      let valLength = val.length;
      if (encoding !== void 0) {
        encoding = String(encoding).toLowerCase();
        if (encoding === "ucs2" || encoding === "ucs-2" || encoding === "utf16le" || encoding === "utf-16le") {
          if (arr.length < 2 || val.length < 2) {
            return -1;
          }
          indexSize = 2;
          arrLength /= 2;
          valLength /= 2;
          byteOffset /= 2;
        }
      }
      function read(buf, i3) {
        if (indexSize === 1) {
          return buf[i3];
        } else {
          return buf.readUInt16BE(i3 * indexSize);
        }
      }
      let i2;
      if (dir) {
        let foundIndex = -1;
        for (i2 = byteOffset; i2 < arrLength; i2++) {
          if (read(arr, i2) === read(val, foundIndex === -1 ? 0 : i2 - foundIndex)) {
            if (foundIndex === -1) foundIndex = i2;
            if (i2 - foundIndex + 1 === valLength) return foundIndex * indexSize;
          } else {
            if (foundIndex !== -1) i2 -= i2 - foundIndex;
            foundIndex = -1;
          }
        }
      } else {
        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
        for (i2 = byteOffset; i2 >= 0; i2--) {
          let found = true;
          for (let j = 0; j < valLength; j++) {
            if (read(arr, i2 + j) !== read(val, j)) {
              found = false;
              break;
            }
          }
          if (found) return i2;
        }
      }
      return -1;
    }
    Buffer11.prototype.includes = function includes(val, byteOffset, encoding) {
      return this.indexOf(val, byteOffset, encoding) !== -1;
    };
    Buffer11.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
      return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
    };
    Buffer11.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
      return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
    };
    function hexWrite(buf, string2, offset, length) {
      offset = Number(offset) || 0;
      const remaining = buf.length - offset;
      if (!length) {
        length = remaining;
      } else {
        length = Number(length);
        if (length > remaining) {
          length = remaining;
        }
      }
      const strLen = string2.length;
      if (length > strLen / 2) {
        length = strLen / 2;
      }
      let i2;
      for (i2 = 0; i2 < length; ++i2) {
        const parsed = parseInt(string2.substr(i2 * 2, 2), 16);
        if (numberIsNaN(parsed)) return i2;
        buf[offset + i2] = parsed;
      }
      return i2;
    }
    function utf8Write(buf, string2, offset, length) {
      return blitBuffer(utf8ToBytes2(string2, buf.length - offset), buf, offset, length);
    }
    function asciiWrite(buf, string2, offset, length) {
      return blitBuffer(asciiToBytes(string2), buf, offset, length);
    }
    function base64Write(buf, string2, offset, length) {
      return blitBuffer(base64ToBytes(string2), buf, offset, length);
    }
    function ucs2Write(buf, string2, offset, length) {
      return blitBuffer(utf16leToBytes(string2, buf.length - offset), buf, offset, length);
    }
    Buffer11.prototype.write = function write(string2, offset, length, encoding) {
      if (offset === void 0) {
        encoding = "utf8";
        length = this.length;
        offset = 0;
      } else if (length === void 0 && typeof offset === "string") {
        encoding = offset;
        length = this.length;
        offset = 0;
      } else if (isFinite(offset)) {
        offset = offset >>> 0;
        if (isFinite(length)) {
          length = length >>> 0;
          if (encoding === void 0) encoding = "utf8";
        } else {
          encoding = length;
          length = void 0;
        }
      } else {
        throw new Error(
          "Buffer.write(string, encoding, offset[, length]) is no longer supported"
        );
      }
      const remaining = this.length - offset;
      if (length === void 0 || length > remaining) length = remaining;
      if (string2.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
        throw new RangeError("Attempt to write outside buffer bounds");
      }
      if (!encoding) encoding = "utf8";
      let loweredCase = false;
      for (; ; ) {
        switch (encoding) {
          case "hex":
            return hexWrite(this, string2, offset, length);
          case "utf8":
          case "utf-8":
            return utf8Write(this, string2, offset, length);
          case "ascii":
          case "latin1":
          case "binary":
            return asciiWrite(this, string2, offset, length);
          case "base64":
            return base64Write(this, string2, offset, length);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return ucs2Write(this, string2, offset, length);
          default:
            if (loweredCase) throw new TypeError("Unknown encoding: " + encoding);
            encoding = ("" + encoding).toLowerCase();
            loweredCase = true;
        }
      }
    };
    Buffer11.prototype.toJSON = function toJSON() {
      return {
        type: "Buffer",
        data: Array.prototype.slice.call(this._arr || this, 0)
      };
    };
    function base64Slice(buf, start, end) {
      if (start === 0 && end === buf.length) {
        return base64.fromByteArray(buf);
      } else {
        return base64.fromByteArray(buf.slice(start, end));
      }
    }
    function utf8Slice(buf, start, end) {
      end = Math.min(buf.length, end);
      const res = [];
      let i2 = start;
      while (i2 < end) {
        const firstByte = buf[i2];
        let codePoint = null;
        let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
        if (i2 + bytesPerSequence <= end) {
          let secondByte, thirdByte, fourthByte, tempCodePoint;
          switch (bytesPerSequence) {
            case 1:
              if (firstByte < 128) {
                codePoint = firstByte;
              }
              break;
            case 2:
              secondByte = buf[i2 + 1];
              if ((secondByte & 192) === 128) {
                tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                if (tempCodePoint > 127) {
                  codePoint = tempCodePoint;
                }
              }
              break;
            case 3:
              secondByte = buf[i2 + 1];
              thirdByte = buf[i2 + 2];
              if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {
                  codePoint = tempCodePoint;
                }
              }
              break;
            case 4:
              secondByte = buf[i2 + 1];
              thirdByte = buf[i2 + 2];
              fourthByte = buf[i2 + 3];
              if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                if (tempCodePoint > 65535 && tempCodePoint < 1114112) {
                  codePoint = tempCodePoint;
                }
              }
          }
        }
        if (codePoint === null) {
          codePoint = 65533;
          bytesPerSequence = 1;
        } else if (codePoint > 65535) {
          codePoint -= 65536;
          res.push(codePoint >>> 10 & 1023 | 55296);
          codePoint = 56320 | codePoint & 1023;
        }
        res.push(codePoint);
        i2 += bytesPerSequence;
      }
      return decodeCodePointsArray(res);
    }
    var MAX_ARGUMENTS_LENGTH = 4096;
    function decodeCodePointsArray(codePoints) {
      const len = codePoints.length;
      if (len <= MAX_ARGUMENTS_LENGTH) {
        return String.fromCharCode.apply(String, codePoints);
      }
      let res = "";
      let i2 = 0;
      while (i2 < len) {
        res += String.fromCharCode.apply(
          String,
          codePoints.slice(i2, i2 += MAX_ARGUMENTS_LENGTH)
        );
      }
      return res;
    }
    function asciiSlice(buf, start, end) {
      let ret = "";
      end = Math.min(buf.length, end);
      for (let i2 = start; i2 < end; ++i2) {
        ret += String.fromCharCode(buf[i2] & 127);
      }
      return ret;
    }
    function latin1Slice(buf, start, end) {
      let ret = "";
      end = Math.min(buf.length, end);
      for (let i2 = start; i2 < end; ++i2) {
        ret += String.fromCharCode(buf[i2]);
      }
      return ret;
    }
    function hexSlice(buf, start, end) {
      const len = buf.length;
      if (!start || start < 0) start = 0;
      if (!end || end < 0 || end > len) end = len;
      let out = "";
      for (let i2 = start; i2 < end; ++i2) {
        out += hexSliceLookupTable[buf[i2]];
      }
      return out;
    }
    function utf16leSlice(buf, start, end) {
      const bytes = buf.slice(start, end);
      let res = "";
      for (let i2 = 0; i2 < bytes.length - 1; i2 += 2) {
        res += String.fromCharCode(bytes[i2] + bytes[i2 + 1] * 256);
      }
      return res;
    }
    Buffer11.prototype.slice = function slice(start, end) {
      const len = this.length;
      start = ~~start;
      end = end === void 0 ? len : ~~end;
      if (start < 0) {
        start += len;
        if (start < 0) start = 0;
      } else if (start > len) {
        start = len;
      }
      if (end < 0) {
        end += len;
        if (end < 0) end = 0;
      } else if (end > len) {
        end = len;
      }
      if (end < start) end = start;
      const newBuf = this.subarray(start, end);
      Object.setPrototypeOf(newBuf, Buffer11.prototype);
      return newBuf;
    };
    function checkOffset(offset, ext, length) {
      if (offset % 1 !== 0 || offset < 0) throw new RangeError("offset is not uint");
      if (offset + ext > length) throw new RangeError("Trying to access beyond buffer length");
    }
    Buffer11.prototype.readUintLE = Buffer11.prototype.readUIntLE = function readUIntLE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) checkOffset(offset, byteLength2, this.length);
      let val = this[offset];
      let mul2 = 1;
      let i2 = 0;
      while (++i2 < byteLength2 && (mul2 *= 256)) {
        val += this[offset + i2] * mul2;
      }
      return val;
    };
    Buffer11.prototype.readUintBE = Buffer11.prototype.readUIntBE = function readUIntBE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) {
        checkOffset(offset, byteLength2, this.length);
      }
      let val = this[offset + --byteLength2];
      let mul2 = 1;
      while (byteLength2 > 0 && (mul2 *= 256)) {
        val += this[offset + --byteLength2] * mul2;
      }
      return val;
    };
    Buffer11.prototype.readUint8 = Buffer11.prototype.readUInt8 = function readUInt8(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 1, this.length);
      return this[offset];
    };
    Buffer11.prototype.readUint16LE = Buffer11.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 2, this.length);
      return this[offset] | this[offset + 1] << 8;
    };
    Buffer11.prototype.readUint16BE = Buffer11.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 2, this.length);
      return this[offset] << 8 | this[offset + 1];
    };
    Buffer11.prototype.readUint32LE = Buffer11.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
    };
    Buffer11.prototype.readUint32BE = Buffer11.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
    };
    Buffer11.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE(offset) {
      offset = offset >>> 0;
      validateNumber(offset, "offset");
      const first = this[offset];
      const last = this[offset + 7];
      if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
      }
      const lo = first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24;
      const hi = this[++offset] + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + last * 2 ** 24;
      return BigInt(lo) + (BigInt(hi) << BigInt(32));
    });
    Buffer11.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE(offset) {
      offset = offset >>> 0;
      validateNumber(offset, "offset");
      const first = this[offset];
      const last = this[offset + 7];
      if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
      }
      const hi = first * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
      const lo = this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last;
      return (BigInt(hi) << BigInt(32)) + BigInt(lo);
    });
    Buffer11.prototype.readIntLE = function readIntLE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) checkOffset(offset, byteLength2, this.length);
      let val = this[offset];
      let mul2 = 1;
      let i2 = 0;
      while (++i2 < byteLength2 && (mul2 *= 256)) {
        val += this[offset + i2] * mul2;
      }
      mul2 *= 128;
      if (val >= mul2) val -= Math.pow(2, 8 * byteLength2);
      return val;
    };
    Buffer11.prototype.readIntBE = function readIntBE(offset, byteLength2, noAssert) {
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) checkOffset(offset, byteLength2, this.length);
      let i2 = byteLength2;
      let mul2 = 1;
      let val = this[offset + --i2];
      while (i2 > 0 && (mul2 *= 256)) {
        val += this[offset + --i2] * mul2;
      }
      mul2 *= 128;
      if (val >= mul2) val -= Math.pow(2, 8 * byteLength2);
      return val;
    };
    Buffer11.prototype.readInt8 = function readInt8(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 1, this.length);
      if (!(this[offset] & 128)) return this[offset];
      return (255 - this[offset] + 1) * -1;
    };
    Buffer11.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 2, this.length);
      const val = this[offset] | this[offset + 1] << 8;
      return val & 32768 ? val | 4294901760 : val;
    };
    Buffer11.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 2, this.length);
      const val = this[offset + 1] | this[offset] << 8;
      return val & 32768 ? val | 4294901760 : val;
    };
    Buffer11.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
    };
    Buffer11.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
    };
    Buffer11.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE(offset) {
      offset = offset >>> 0;
      validateNumber(offset, "offset");
      const first = this[offset];
      const last = this[offset + 7];
      if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
      }
      const val = this[offset + 4] + this[offset + 5] * 2 ** 8 + this[offset + 6] * 2 ** 16 + (last << 24);
      return (BigInt(val) << BigInt(32)) + BigInt(first + this[++offset] * 2 ** 8 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 24);
    });
    Buffer11.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE(offset) {
      offset = offset >>> 0;
      validateNumber(offset, "offset");
      const first = this[offset];
      const last = this[offset + 7];
      if (first === void 0 || last === void 0) {
        boundsError(offset, this.length - 8);
      }
      const val = (first << 24) + // Overflow
      this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + this[++offset];
      return (BigInt(val) << BigInt(32)) + BigInt(this[++offset] * 2 ** 24 + this[++offset] * 2 ** 16 + this[++offset] * 2 ** 8 + last);
    });
    Buffer11.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return ieee754.read(this, offset, true, 23, 4);
    };
    Buffer11.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 4, this.length);
      return ieee754.read(this, offset, false, 23, 4);
    };
    Buffer11.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 8, this.length);
      return ieee754.read(this, offset, true, 52, 8);
    };
    Buffer11.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
      offset = offset >>> 0;
      if (!noAssert) checkOffset(offset, 8, this.length);
      return ieee754.read(this, offset, false, 52, 8);
    };
    function checkInt(buf, value, offset, ext, max3, min3) {
      if (!Buffer11.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
      if (value > max3 || value < min3) throw new RangeError('"value" argument is out of bounds');
      if (offset + ext > buf.length) throw new RangeError("Index out of range");
    }
    Buffer11.prototype.writeUintLE = Buffer11.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) {
        const maxBytes = Math.pow(2, 8 * byteLength2) - 1;
        checkInt(this, value, offset, byteLength2, maxBytes, 0);
      }
      let mul2 = 1;
      let i2 = 0;
      this[offset] = value & 255;
      while (++i2 < byteLength2 && (mul2 *= 256)) {
        this[offset + i2] = value / mul2 & 255;
      }
      return offset + byteLength2;
    };
    Buffer11.prototype.writeUintBE = Buffer11.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      byteLength2 = byteLength2 >>> 0;
      if (!noAssert) {
        const maxBytes = Math.pow(2, 8 * byteLength2) - 1;
        checkInt(this, value, offset, byteLength2, maxBytes, 0);
      }
      let i2 = byteLength2 - 1;
      let mul2 = 1;
      this[offset + i2] = value & 255;
      while (--i2 >= 0 && (mul2 *= 256)) {
        this[offset + i2] = value / mul2 & 255;
      }
      return offset + byteLength2;
    };
    Buffer11.prototype.writeUint8 = Buffer11.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 1, 255, 0);
      this[offset] = value & 255;
      return offset + 1;
    };
    Buffer11.prototype.writeUint16LE = Buffer11.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);
      this[offset] = value & 255;
      this[offset + 1] = value >>> 8;
      return offset + 2;
    };
    Buffer11.prototype.writeUint16BE = Buffer11.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 2, 65535, 0);
      this[offset] = value >>> 8;
      this[offset + 1] = value & 255;
      return offset + 2;
    };
    Buffer11.prototype.writeUint32LE = Buffer11.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);
      this[offset + 3] = value >>> 24;
      this[offset + 2] = value >>> 16;
      this[offset + 1] = value >>> 8;
      this[offset] = value & 255;
      return offset + 4;
    };
    Buffer11.prototype.writeUint32BE = Buffer11.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 4, 4294967295, 0);
      this[offset] = value >>> 24;
      this[offset + 1] = value >>> 16;
      this[offset + 2] = value >>> 8;
      this[offset + 3] = value & 255;
      return offset + 4;
    };
    function wrtBigUInt64LE(buf, value, offset, min3, max3) {
      checkIntBI(value, min3, max3, buf, offset, 7);
      let lo = Number(value & BigInt(4294967295));
      buf[offset++] = lo;
      lo = lo >> 8;
      buf[offset++] = lo;
      lo = lo >> 8;
      buf[offset++] = lo;
      lo = lo >> 8;
      buf[offset++] = lo;
      let hi = Number(value >> BigInt(32) & BigInt(4294967295));
      buf[offset++] = hi;
      hi = hi >> 8;
      buf[offset++] = hi;
      hi = hi >> 8;
      buf[offset++] = hi;
      hi = hi >> 8;
      buf[offset++] = hi;
      return offset;
    }
    function wrtBigUInt64BE(buf, value, offset, min3, max3) {
      checkIntBI(value, min3, max3, buf, offset, 7);
      let lo = Number(value & BigInt(4294967295));
      buf[offset + 7] = lo;
      lo = lo >> 8;
      buf[offset + 6] = lo;
      lo = lo >> 8;
      buf[offset + 5] = lo;
      lo = lo >> 8;
      buf[offset + 4] = lo;
      let hi = Number(value >> BigInt(32) & BigInt(4294967295));
      buf[offset + 3] = hi;
      hi = hi >> 8;
      buf[offset + 2] = hi;
      hi = hi >> 8;
      buf[offset + 1] = hi;
      hi = hi >> 8;
      buf[offset] = hi;
      return offset + 8;
    }
    Buffer11.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE(value, offset = 0) {
      return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    Buffer11.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE(value, offset = 0) {
      return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    Buffer11.prototype.writeIntLE = function writeIntLE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        const limit = Math.pow(2, 8 * byteLength2 - 1);
        checkInt(this, value, offset, byteLength2, limit - 1, -limit);
      }
      let i2 = 0;
      let mul2 = 1;
      let sub2 = 0;
      this[offset] = value & 255;
      while (++i2 < byteLength2 && (mul2 *= 256)) {
        if (value < 0 && sub2 === 0 && this[offset + i2 - 1] !== 0) {
          sub2 = 1;
        }
        this[offset + i2] = (value / mul2 >> 0) - sub2 & 255;
      }
      return offset + byteLength2;
    };
    Buffer11.prototype.writeIntBE = function writeIntBE(value, offset, byteLength2, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        const limit = Math.pow(2, 8 * byteLength2 - 1);
        checkInt(this, value, offset, byteLength2, limit - 1, -limit);
      }
      let i2 = byteLength2 - 1;
      let mul2 = 1;
      let sub2 = 0;
      this[offset + i2] = value & 255;
      while (--i2 >= 0 && (mul2 *= 256)) {
        if (value < 0 && sub2 === 0 && this[offset + i2 + 1] !== 0) {
          sub2 = 1;
        }
        this[offset + i2] = (value / mul2 >> 0) - sub2 & 255;
      }
      return offset + byteLength2;
    };
    Buffer11.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 1, 127, -128);
      if (value < 0) value = 255 + value + 1;
      this[offset] = value & 255;
      return offset + 1;
    };
    Buffer11.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);
      this[offset] = value & 255;
      this[offset + 1] = value >>> 8;
      return offset + 2;
    };
    Buffer11.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 2, 32767, -32768);
      this[offset] = value >>> 8;
      this[offset + 1] = value & 255;
      return offset + 2;
    };
    Buffer11.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);
      this[offset] = value & 255;
      this[offset + 1] = value >>> 8;
      this[offset + 2] = value >>> 16;
      this[offset + 3] = value >>> 24;
      return offset + 4;
    };
    Buffer11.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) checkInt(this, value, offset, 4, 2147483647, -2147483648);
      if (value < 0) value = 4294967295 + value + 1;
      this[offset] = value >>> 24;
      this[offset + 1] = value >>> 16;
      this[offset + 2] = value >>> 8;
      this[offset + 3] = value & 255;
      return offset + 4;
    };
    Buffer11.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE(value, offset = 0) {
      return wrtBigUInt64LE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    Buffer11.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE(value, offset = 0) {
      return wrtBigUInt64BE(this, value, offset, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    function checkIEEE754(buf, value, offset, ext, max3, min3) {
      if (offset + ext > buf.length) throw new RangeError("Index out of range");
      if (offset < 0) throw new RangeError("Index out of range");
    }
    function writeFloat(buf, value, offset, littleEndian, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        checkIEEE754(buf, value, offset, 4, 34028234663852886e22, -34028234663852886e22);
      }
      ieee754.write(buf, value, offset, littleEndian, 23, 4);
      return offset + 4;
    }
    Buffer11.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
      return writeFloat(this, value, offset, true, noAssert);
    };
    Buffer11.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
      return writeFloat(this, value, offset, false, noAssert);
    };
    function writeDouble(buf, value, offset, littleEndian, noAssert) {
      value = +value;
      offset = offset >>> 0;
      if (!noAssert) {
        checkIEEE754(buf, value, offset, 8, 17976931348623157e292, -17976931348623157e292);
      }
      ieee754.write(buf, value, offset, littleEndian, 52, 8);
      return offset + 8;
    }
    Buffer11.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
      return writeDouble(this, value, offset, true, noAssert);
    };
    Buffer11.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
      return writeDouble(this, value, offset, false, noAssert);
    };
    Buffer11.prototype.copy = function copy(target, targetStart, start, end) {
      if (!Buffer11.isBuffer(target)) throw new TypeError("argument should be a Buffer");
      if (!start) start = 0;
      if (!end && end !== 0) end = this.length;
      if (targetStart >= target.length) targetStart = target.length;
      if (!targetStart) targetStart = 0;
      if (end > 0 && end < start) end = start;
      if (end === start) return 0;
      if (target.length === 0 || this.length === 0) return 0;
      if (targetStart < 0) {
        throw new RangeError("targetStart out of bounds");
      }
      if (start < 0 || start >= this.length) throw new RangeError("Index out of range");
      if (end < 0) throw new RangeError("sourceEnd out of bounds");
      if (end > this.length) end = this.length;
      if (target.length - targetStart < end - start) {
        end = target.length - targetStart + start;
      }
      const len = end - start;
      if (this === target && typeof Uint8Array.prototype.copyWithin === "function") {
        this.copyWithin(targetStart, start, end);
      } else {
        Uint8Array.prototype.set.call(
          target,
          this.subarray(start, end),
          targetStart
        );
      }
      return len;
    };
    Buffer11.prototype.fill = function fill(val, start, end, encoding) {
      if (typeof val === "string") {
        if (typeof start === "string") {
          encoding = start;
          start = 0;
          end = this.length;
        } else if (typeof end === "string") {
          encoding = end;
          end = this.length;
        }
        if (encoding !== void 0 && typeof encoding !== "string") {
          throw new TypeError("encoding must be a string");
        }
        if (typeof encoding === "string" && !Buffer11.isEncoding(encoding)) {
          throw new TypeError("Unknown encoding: " + encoding);
        }
        if (val.length === 1) {
          const code = val.charCodeAt(0);
          if (encoding === "utf8" && code < 128 || encoding === "latin1") {
            val = code;
          }
        }
      } else if (typeof val === "number") {
        val = val & 255;
      } else if (typeof val === "boolean") {
        val = Number(val);
      }
      if (start < 0 || this.length < start || this.length < end) {
        throw new RangeError("Out of range index");
      }
      if (end <= start) {
        return this;
      }
      start = start >>> 0;
      end = end === void 0 ? this.length : end >>> 0;
      if (!val) val = 0;
      let i2;
      if (typeof val === "number") {
        for (i2 = start; i2 < end; ++i2) {
          this[i2] = val;
        }
      } else {
        const bytes = Buffer11.isBuffer(val) ? val : Buffer11.from(val, encoding);
        const len = bytes.length;
        if (len === 0) {
          throw new TypeError('The value "' + val + '" is invalid for argument "value"');
        }
        for (i2 = 0; i2 < end - start; ++i2) {
          this[i2 + start] = bytes[i2 % len];
        }
      }
      return this;
    };
    var errors = {};
    function E(sym, getMessage, Base) {
      errors[sym] = class NodeError extends Base {
        constructor() {
          super();
          Object.defineProperty(this, "message", {
            value: getMessage.apply(this, arguments),
            writable: true,
            configurable: true
          });
          this.name = `${this.name} [${sym}]`;
          this.stack;
          delete this.name;
        }
        get code() {
          return sym;
        }
        set code(value) {
          Object.defineProperty(this, "code", {
            configurable: true,
            enumerable: true,
            value,
            writable: true
          });
        }
        toString() {
          return `${this.name} [${sym}]: ${this.message}`;
        }
      };
    }
    E(
      "ERR_BUFFER_OUT_OF_BOUNDS",
      function(name314) {
        if (name314) {
          return `${name314} is outside of buffer bounds`;
        }
        return "Attempt to access memory outside buffer bounds";
      },
      RangeError
    );
    E(
      "ERR_INVALID_ARG_TYPE",
      function(name314, actual) {
        return `The "${name314}" argument must be of type number. Received type ${typeof actual}`;
      },
      TypeError
    );
    E(
      "ERR_OUT_OF_RANGE",
      function(str, range3, input) {
        let msg = `The value of "${str}" is out of range.`;
        let received = input;
        if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {
          received = addNumericalSeparator(String(input));
        } else if (typeof input === "bigint") {
          received = String(input);
          if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {
            received = addNumericalSeparator(received);
          }
          received += "n";
        }
        msg += ` It must be ${range3}. Received ${received}`;
        return msg;
      },
      RangeError
    );
    function addNumericalSeparator(val) {
      let res = "";
      let i2 = val.length;
      const start = val[0] === "-" ? 1 : 0;
      for (; i2 >= start + 4; i2 -= 3) {
        res = `_${val.slice(i2 - 3, i2)}${res}`;
      }
      return `${val.slice(0, i2)}${res}`;
    }
    function checkBounds(buf, offset, byteLength2) {
      validateNumber(offset, "offset");
      if (buf[offset] === void 0 || buf[offset + byteLength2] === void 0) {
        boundsError(offset, buf.length - (byteLength2 + 1));
      }
    }
    function checkIntBI(value, min3, max3, buf, offset, byteLength2) {
      if (value > max3 || value < min3) {
        const n = typeof min3 === "bigint" ? "n" : "";
        let range3;
        if (byteLength2 > 3) {
          if (min3 === 0 || min3 === BigInt(0)) {
            range3 = `>= 0${n} and < 2${n} ** ${(byteLength2 + 1) * 8}${n}`;
          } else {
            range3 = `>= -(2${n} ** ${(byteLength2 + 1) * 8 - 1}${n}) and < 2 ** ${(byteLength2 + 1) * 8 - 1}${n}`;
          }
        } else {
          range3 = `>= ${min3}${n} and <= ${max3}${n}`;
        }
        throw new errors.ERR_OUT_OF_RANGE("value", range3, value);
      }
      checkBounds(buf, offset, byteLength2);
    }
    function validateNumber(value, name314) {
      if (typeof value !== "number") {
        throw new errors.ERR_INVALID_ARG_TYPE(name314, "number", value);
      }
    }
    function boundsError(value, length, type) {
      if (Math.floor(value) !== value) {
        validateNumber(value, type);
        throw new errors.ERR_OUT_OF_RANGE(type || "offset", "an integer", value);
      }
      if (length < 0) {
        throw new errors.ERR_BUFFER_OUT_OF_BOUNDS();
      }
      throw new errors.ERR_OUT_OF_RANGE(
        type || "offset",
        `>= ${type ? 1 : 0} and <= ${length}`,
        value
      );
    }
    var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
    function base64clean(str) {
      str = str.split("=")[0];
      str = str.trim().replace(INVALID_BASE64_RE, "");
      if (str.length < 2) return "";
      while (str.length % 4 !== 0) {
        str = str + "=";
      }
      return str;
    }
    function utf8ToBytes2(string2, units) {
      units = units || Infinity;
      let codePoint;
      const length = string2.length;
      let leadSurrogate = null;
      const bytes = [];
      for (let i2 = 0; i2 < length; ++i2) {
        codePoint = string2.charCodeAt(i2);
        if (codePoint > 55295 && codePoint < 57344) {
          if (!leadSurrogate) {
            if (codePoint > 56319) {
              if ((units -= 3) > -1) bytes.push(239, 191, 189);
              continue;
            } else if (i2 + 1 === length) {
              if ((units -= 3) > -1) bytes.push(239, 191, 189);
              continue;
            }
            leadSurrogate = codePoint;
            continue;
          }
          if (codePoint < 56320) {
            if ((units -= 3) > -1) bytes.push(239, 191, 189);
            leadSurrogate = codePoint;
            continue;
          }
          codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
        } else if (leadSurrogate) {
          if ((units -= 3) > -1) bytes.push(239, 191, 189);
        }
        leadSurrogate = null;
        if (codePoint < 128) {
          if ((units -= 1) < 0) break;
          bytes.push(codePoint);
        } else if (codePoint < 2048) {
          if ((units -= 2) < 0) break;
          bytes.push(
            codePoint >> 6 | 192,
            codePoint & 63 | 128
          );
        } else if (codePoint < 65536) {
          if ((units -= 3) < 0) break;
          bytes.push(
            codePoint >> 12 | 224,
            codePoint >> 6 & 63 | 128,
            codePoint & 63 | 128
          );
        } else if (codePoint < 1114112) {
          if ((units -= 4) < 0) break;
          bytes.push(
            codePoint >> 18 | 240,
            codePoint >> 12 & 63 | 128,
            codePoint >> 6 & 63 | 128,
            codePoint & 63 | 128
          );
        } else {
          throw new Error("Invalid code point");
        }
      }
      return bytes;
    }
    function asciiToBytes(str) {
      const byteArray = [];
      for (let i2 = 0; i2 < str.length; ++i2) {
        byteArray.push(str.charCodeAt(i2) & 255);
      }
      return byteArray;
    }
    function utf16leToBytes(str, units) {
      let c, hi, lo;
      const byteArray = [];
      for (let i2 = 0; i2 < str.length; ++i2) {
        if ((units -= 2) < 0) break;
        c = str.charCodeAt(i2);
        hi = c >> 8;
        lo = c % 256;
        byteArray.push(lo);
        byteArray.push(hi);
      }
      return byteArray;
    }
    function base64ToBytes(str) {
      return base64.toByteArray(base64clean(str));
    }
    function blitBuffer(src, dst, offset, length) {
      let i2;
      for (i2 = 0; i2 < length; ++i2) {
        if (i2 + offset >= dst.length || i2 >= src.length) break;
        dst[i2 + offset] = src[i2];
      }
      return i2;
    }
    function isInstance(obj, type) {
      return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
    }
    function numberIsNaN(obj) {
      return obj !== obj;
    }
    var hexSliceLookupTable = function() {
      const alphabet = "0123456789abcdef";
      const table = new Array(256);
      for (let i2 = 0; i2 < 16; ++i2) {
        const i16 = i2 * 16;
        for (let j = 0; j < 16; ++j) {
          table[i16 + j] = alphabet[i2] + alphabet[j];
        }
      }
      return table;
    }();
    function defineBigIntMethod(fn) {
      return typeof BigInt === "undefined" ? BufferBigIntNotDefined : fn;
    }
    function BufferBigIntNotDefined() {
      throw new Error("BigInt not supported");
    }
  }
});

// browser-external:buffer
var require_buffer2 = __commonJS({
  "browser-external:buffer"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "buffer" has been externalized for browser compatibility. Cannot access "buffer.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/bn.js/lib/bn.js
var require_bn = __commonJS({
  "node_modules/bn.js/lib/bn.js"(exports, module) {
    (function(module2, exports2) {
      "use strict";
      function assert(val, msg) {
        if (!val) throw new Error(msg || "Assertion failed");
      }
      function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
      }
      function BN(number2, base, endian) {
        if (BN.isBN(number2)) {
          return number2;
        }
        this.negative = 0;
        this.words = null;
        this.length = 0;
        this.red = null;
        if (number2 !== null) {
          if (base === "le" || base === "be") {
            endian = base;
            base = 10;
          }
          this._init(number2 || 0, base || 10, endian || "be");
        }
      }
      if (typeof module2 === "object") {
        module2.exports = BN;
      } else {
        exports2.BN = BN;
      }
      BN.BN = BN;
      BN.wordSize = 26;
      var Buffer11;
      try {
        if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
          Buffer11 = window.Buffer;
        } else {
          Buffer11 = require_buffer2().Buffer;
        }
      } catch (e3) {
      }
      BN.isBN = function isBN(num) {
        if (num instanceof BN) {
          return true;
        }
        return num !== null && typeof num === "object" && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
      };
      BN.max = function max3(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
      };
      BN.min = function min3(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
      };
      BN.prototype._init = function init(number2, base, endian) {
        if (typeof number2 === "number") {
          return this._initNumber(number2, base, endian);
        }
        if (typeof number2 === "object") {
          return this._initArray(number2, base, endian);
        }
        if (base === "hex") {
          base = 16;
        }
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number2 = number2.toString().replace(/\s+/g, "");
        var start = 0;
        if (number2[0] === "-") {
          start++;
          this.negative = 1;
        }
        if (start < number2.length) {
          if (base === 16) {
            this._parseHex(number2, start, endian);
          } else {
            this._parseBase(number2, base, start);
            if (endian === "le") {
              this._initArray(this.toArray(), base, endian);
            }
          }
        }
      };
      BN.prototype._initNumber = function _initNumber(number2, base, endian) {
        if (number2 < 0) {
          this.negative = 1;
          number2 = -number2;
        }
        if (number2 < 67108864) {
          this.words = [number2 & 67108863];
          this.length = 1;
        } else if (number2 < 4503599627370496) {
          this.words = [
            number2 & 67108863,
            number2 / 67108864 & 67108863
          ];
          this.length = 2;
        } else {
          assert(number2 < 9007199254740992);
          this.words = [
            number2 & 67108863,
            number2 / 67108864 & 67108863,
            1
          ];
          this.length = 3;
        }
        if (endian !== "le") return;
        this._initArray(this.toArray(), base, endian);
      };
      BN.prototype._initArray = function _initArray(number2, base, endian) {
        assert(typeof number2.length === "number");
        if (number2.length <= 0) {
          this.words = [0];
          this.length = 1;
          return this;
        }
        this.length = Math.ceil(number2.length / 3);
        this.words = new Array(this.length);
        for (var i2 = 0; i2 < this.length; i2++) {
          this.words[i2] = 0;
        }
        var j, w;
        var off = 0;
        if (endian === "be") {
          for (i2 = number2.length - 1, j = 0; i2 >= 0; i2 -= 3) {
            w = number2[i2] | number2[i2 - 1] << 8 | number2[i2 - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        } else if (endian === "le") {
          for (i2 = 0, j = 0; i2 < number2.length; i2 += 3) {
            w = number2[i2] | number2[i2 + 1] << 8 | number2[i2 + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
              off -= 26;
              j++;
            }
          }
        }
        return this.strip();
      };
      function parseHex4Bits(string2, index2) {
        var c = string2.charCodeAt(index2);
        if (c >= 65 && c <= 70) {
          return c - 55;
        } else if (c >= 97 && c <= 102) {
          return c - 87;
        } else {
          return c - 48 & 15;
        }
      }
      function parseHexByte(string2, lowerBound, index2) {
        var r = parseHex4Bits(string2, index2);
        if (index2 - 1 >= lowerBound) {
          r |= parseHex4Bits(string2, index2 - 1) << 4;
        }
        return r;
      }
      BN.prototype._parseHex = function _parseHex(number2, start, endian) {
        this.length = Math.ceil((number2.length - start) / 6);
        this.words = new Array(this.length);
        for (var i2 = 0; i2 < this.length; i2++) {
          this.words[i2] = 0;
        }
        var off = 0;
        var j = 0;
        var w;
        if (endian === "be") {
          for (i2 = number2.length - 1; i2 >= start; i2 -= 2) {
            w = parseHexByte(number2, start, i2) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        } else {
          var parseLength = number2.length - start;
          for (i2 = parseLength % 2 === 0 ? start + 1 : start; i2 < number2.length; i2 += 2) {
            w = parseHexByte(number2, start, i2) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
              off -= 18;
              j += 1;
              this.words[j] |= w >>> 26;
            } else {
              off += 8;
            }
          }
        }
        this.strip();
      };
      function parseBase(str, start, end, mul2) {
        var r = 0;
        var len = Math.min(str.length, end);
        for (var i2 = start; i2 < len; i2++) {
          var c = str.charCodeAt(i2) - 48;
          r *= mul2;
          if (c >= 49) {
            r += c - 49 + 10;
          } else if (c >= 17) {
            r += c - 17 + 10;
          } else {
            r += c;
          }
        }
        return r;
      }
      BN.prototype._parseBase = function _parseBase(number2, base, start) {
        this.words = [0];
        this.length = 1;
        for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base) {
          limbLen++;
        }
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number2.length - start;
        var mod3 = total % limbLen;
        var end = Math.min(total, total - mod3) + start;
        var word = 0;
        for (var i2 = start; i2 < end; i2 += limbLen) {
          word = parseBase(number2, i2, i2 + limbLen, base);
          this.imuln(limbPow);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        if (mod3 !== 0) {
          var pow3 = 1;
          word = parseBase(number2, i2, number2.length, base);
          for (i2 = 0; i2 < mod3; i2++) {
            pow3 *= base;
          }
          this.imuln(pow3);
          if (this.words[0] + word < 67108864) {
            this.words[0] += word;
          } else {
            this._iaddn(word);
          }
        }
        this.strip();
      };
      BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for (var i2 = 0; i2 < this.length; i2++) {
          dest.words[i2] = this.words[i2];
        }
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
      };
      BN.prototype.clone = function clone5() {
        var r = new BN(null);
        this.copy(r);
        return r;
      };
      BN.prototype._expand = function _expand(size2) {
        while (this.length < size2) {
          this.words[this.length++] = 0;
        }
        return this;
      };
      BN.prototype.strip = function strip() {
        while (this.length > 1 && this.words[this.length - 1] === 0) {
          this.length--;
        }
        return this._normSign();
      };
      BN.prototype._normSign = function _normSign() {
        if (this.length === 1 && this.words[0] === 0) {
          this.negative = 0;
        }
        return this;
      };
      BN.prototype.inspect = function inspect() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var zeros3 = [
        "",
        "0",
        "00",
        "000",
        "0000",
        "00000",
        "000000",
        "0000000",
        "00000000",
        "000000000",
        "0000000000",
        "00000000000",
        "000000000000",
        "0000000000000",
        "00000000000000",
        "000000000000000",
        "0000000000000000",
        "00000000000000000",
        "000000000000000000",
        "0000000000000000000",
        "00000000000000000000",
        "000000000000000000000",
        "0000000000000000000000",
        "00000000000000000000000",
        "000000000000000000000000",
        "0000000000000000000000000"
      ];
      var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
      ];
      var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        1e7,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64e6,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        243e5,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
      ];
      BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === "hex") {
          out = "";
          var off = 0;
          var carry = 0;
          for (var i2 = 0; i2 < this.length; i2++) {
            var w = this.words[i2];
            var word = ((w << off | carry) & 16777215).toString(16);
            carry = w >>> 24 - off & 16777215;
            off += 2;
            if (off >= 26) {
              off -= 26;
              i2--;
            }
            if (carry !== 0 || i2 !== this.length - 1) {
              out = zeros3[6 - word.length] + word + out;
            } else {
              out = word + out;
            }
          }
          if (carry !== 0) {
            out = carry.toString(16) + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
          var groupSize = groupSizes[base];
          var groupBase = groupBases[base];
          out = "";
          var c = this.clone();
          c.negative = 0;
          while (!c.isZero()) {
            var r = c.modn(groupBase).toString(base);
            c = c.idivn(groupBase);
            if (!c.isZero()) {
              out = zeros3[groupSize - r.length] + r + out;
            } else {
              out = r + out;
            }
          }
          if (this.isZero()) {
            out = "0" + out;
          }
          while (out.length % padding !== 0) {
            out = "0" + out;
          }
          if (this.negative !== 0) {
            out = "-" + out;
          }
          return out;
        }
        assert(false, "Base should be between 2 and 36");
      };
      BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) {
          ret += this.words[1] * 67108864;
        } else if (this.length === 3 && this.words[2] === 1) {
          ret += 4503599627370496 + this.words[1] * 67108864;
        } else if (this.length > 2) {
          assert(false, "Number can only safely store up to 53 bits");
        }
        return this.negative !== 0 ? -ret : ret;
      };
      BN.prototype.toJSON = function toJSON() {
        return this.toString(16);
      };
      BN.prototype.toBuffer = function toBuffer(endian, length) {
        assert(typeof Buffer11 !== "undefined");
        return this.toArrayLike(Buffer11, endian, length);
      };
      BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
      };
      BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, "byte array longer than desired length");
        assert(reqLength > 0, "Requested array length <= 0");
        this.strip();
        var littleEndian = endian === "le";
        var res = new ArrayType(reqLength);
        var b2, i2;
        var q = this.clone();
        if (!littleEndian) {
          for (i2 = 0; i2 < reqLength - byteLength; i2++) {
            res[i2] = 0;
          }
          for (i2 = 0; !q.isZero(); i2++) {
            b2 = q.andln(255);
            q.iushrn(8);
            res[reqLength - i2 - 1] = b2;
          }
        } else {
          for (i2 = 0; !q.isZero(); i2++) {
            b2 = q.andln(255);
            q.iushrn(8);
            res[i2] = b2;
          }
          for (; i2 < reqLength; i2++) {
            res[i2] = 0;
          }
        }
        return res;
      };
      if (Math.clz32) {
        BN.prototype._countBits = function _countBits(w) {
          return 32 - Math.clz32(w);
        };
      } else {
        BN.prototype._countBits = function _countBits(w) {
          var t = w;
          var r = 0;
          if (t >= 4096) {
            r += 13;
            t >>>= 13;
          }
          if (t >= 64) {
            r += 7;
            t >>>= 7;
          }
          if (t >= 8) {
            r += 4;
            t >>>= 4;
          }
          if (t >= 2) {
            r += 2;
            t >>>= 2;
          }
          return r + t;
        };
      }
      BN.prototype._zeroBits = function _zeroBits(w) {
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
          r += 13;
          t >>>= 13;
        }
        if ((t & 127) === 0) {
          r += 7;
          t >>>= 7;
        }
        if ((t & 15) === 0) {
          r += 4;
          t >>>= 4;
        }
        if ((t & 3) === 0) {
          r += 2;
          t >>>= 2;
        }
        if ((t & 1) === 0) {
          r++;
        }
        return r;
      };
      BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
      };
      function toBitArray(num) {
        var w = new Array(num.bitLength());
        for (var bit = 0; bit < w.length; bit++) {
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          w[bit] = (num.words[off] & 1 << wbit) >>> wbit;
        }
        return w;
      }
      BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for (var i2 = 0; i2 < this.length; i2++) {
          var b2 = this._zeroBits(this.words[i2]);
          r += b2;
          if (b2 !== 26) break;
        }
        return r;
      };
      BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
      };
      BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) {
          return this.abs().inotn(width).iaddn(1);
        }
        return this.clone();
      };
      BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) {
          return this.notn(width).iaddn(1).ineg();
        }
        return this.clone();
      };
      BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
      };
      BN.prototype.neg = function neg() {
        return this.clone().ineg();
      };
      BN.prototype.ineg = function ineg() {
        if (!this.isZero()) {
          this.negative ^= 1;
        }
        return this;
      };
      BN.prototype.iuor = function iuor(num) {
        while (this.length < num.length) {
          this.words[this.length++] = 0;
        }
        for (var i2 = 0; i2 < num.length; i2++) {
          this.words[i2] = this.words[i2] | num.words[i2];
        }
        return this.strip();
      };
      BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
      };
      BN.prototype.or = function or2(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
      };
      BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
      };
      BN.prototype.iuand = function iuand(num) {
        var b2;
        if (this.length > num.length) {
          b2 = num;
        } else {
          b2 = this;
        }
        for (var i2 = 0; i2 < b2.length; i2++) {
          this.words[i2] = this.words[i2] & num.words[i2];
        }
        this.length = b2.length;
        return this.strip();
      };
      BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
      };
      BN.prototype.and = function and2(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
      };
      BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
      };
      BN.prototype.iuxor = function iuxor(num) {
        var a;
        var b2;
        if (this.length > num.length) {
          a = this;
          b2 = num;
        } else {
          a = num;
          b2 = this;
        }
        for (var i2 = 0; i2 < b2.length; i2++) {
          this.words[i2] = a.words[i2] ^ b2.words[i2];
        }
        if (this !== a) {
          for (; i2 < a.length; i2++) {
            this.words[i2] = a.words[i2];
          }
        }
        this.length = a.length;
        return this.strip();
      };
      BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
      };
      BN.prototype.xor = function xor2(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
      };
      BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
      };
      BN.prototype.inotn = function inotn(width) {
        assert(typeof width === "number" && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        this._expand(bytesNeeded);
        if (bitsLeft > 0) {
          bytesNeeded--;
        }
        for (var i2 = 0; i2 < bytesNeeded; i2++) {
          this.words[i2] = ~this.words[i2] & 67108863;
        }
        if (bitsLeft > 0) {
          this.words[i2] = ~this.words[i2] & 67108863 >> 26 - bitsLeft;
        }
        return this.strip();
      };
      BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
      };
      BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === "number" && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) {
          this.words[off] = this.words[off] | 1 << wbit;
        } else {
          this.words[off] = this.words[off] & ~(1 << wbit);
        }
        return this.strip();
      };
      BN.prototype.iadd = function iadd(num) {
        var r;
        if (this.negative !== 0 && num.negative === 0) {
          this.negative = 0;
          r = this.isub(num);
          this.negative ^= 1;
          return this._normSign();
        } else if (this.negative === 0 && num.negative !== 0) {
          num.negative = 0;
          r = this.isub(num);
          num.negative = 1;
          return r._normSign();
        }
        var a, b2;
        if (this.length > num.length) {
          a = this;
          b2 = num;
        } else {
          a = num;
          b2 = this;
        }
        var carry = 0;
        for (var i2 = 0; i2 < b2.length; i2++) {
          r = (a.words[i2] | 0) + (b2.words[i2] | 0) + carry;
          this.words[i2] = r & 67108863;
          carry = r >>> 26;
        }
        for (; carry !== 0 && i2 < a.length; i2++) {
          r = (a.words[i2] | 0) + carry;
          this.words[i2] = r & 67108863;
          carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
          this.words[this.length] = carry;
          this.length++;
        } else if (a !== this) {
          for (; i2 < a.length; i2++) {
            this.words[i2] = a.words[i2];
          }
        }
        return this;
      };
      BN.prototype.add = function add4(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
          num.negative = 0;
          res = this.sub(num);
          num.negative ^= 1;
          return res;
        } else if (num.negative === 0 && this.negative !== 0) {
          this.negative = 0;
          res = num.sub(this);
          this.negative = 1;
          return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
      };
      BN.prototype.isub = function isub(num) {
        if (num.negative !== 0) {
          num.negative = 0;
          var r = this.iadd(num);
          num.negative = 1;
          return r._normSign();
        } else if (this.negative !== 0) {
          this.negative = 0;
          this.iadd(num);
          this.negative = 1;
          return this._normSign();
        }
        var cmp = this.cmp(num);
        if (cmp === 0) {
          this.negative = 0;
          this.length = 1;
          this.words[0] = 0;
          return this;
        }
        var a, b2;
        if (cmp > 0) {
          a = this;
          b2 = num;
        } else {
          a = num;
          b2 = this;
        }
        var carry = 0;
        for (var i2 = 0; i2 < b2.length; i2++) {
          r = (a.words[i2] | 0) - (b2.words[i2] | 0) + carry;
          carry = r >> 26;
          this.words[i2] = r & 67108863;
        }
        for (; carry !== 0 && i2 < a.length; i2++) {
          r = (a.words[i2] | 0) + carry;
          carry = r >> 26;
          this.words[i2] = r & 67108863;
        }
        if (carry === 0 && i2 < a.length && a !== this) {
          for (; i2 < a.length; i2++) {
            this.words[i2] = a.words[i2];
          }
        }
        this.length = Math.max(this.length, i2);
        if (a !== this) {
          this.negative = 1;
        }
        return this.strip();
      };
      BN.prototype.sub = function sub2(num) {
        return this.clone().isub(num);
      };
      function smallMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        var len = self2.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        var a = self2.words[0] | 0;
        var b2 = num.words[0] | 0;
        var r = a * b2;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for (var k = 1; k < len; k++) {
          var ncarry = carry >>> 26;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i2 = k - j | 0;
            a = self2.words[i2] | 0;
            b2 = num.words[j] | 0;
            r = a * b2 + rword;
            ncarry += r / 67108864 | 0;
            rword = r & 67108863;
          }
          out.words[k] = rword | 0;
          carry = ncarry | 0;
        }
        if (carry !== 0) {
          out.words[k] = carry | 0;
        } else {
          out.length--;
        }
        return out.strip();
      }
      var comb10MulTo = function comb10MulTo2(self2, num, out) {
        var a = self2.words;
        var b2 = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b2[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b2[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b22 = b2[2] | 0;
        var bl2 = b22 & 8191;
        var bh2 = b22 >>> 13;
        var b3 = b2[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b2[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b2[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b2[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b2[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b2[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b2[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self2.negative ^ num.negative;
        out.length = 19;
        lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
          o[19] = c;
          out.length++;
        }
        return out;
      };
      if (!Math.imul) {
        comb10MulTo = smallMulTo;
      }
      function bigMulTo(self2, num, out) {
        out.negative = num.negative ^ self2.negative;
        out.length = self2.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for (var k = 0; k < out.length - 1; k++) {
          var ncarry = hncarry;
          hncarry = 0;
          var rword = carry & 67108863;
          var maxJ = Math.min(k, num.length - 1);
          for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
            var i2 = k - j;
            var a = self2.words[i2] | 0;
            var b2 = num.words[j] | 0;
            var r = a * b2;
            var lo = r & 67108863;
            ncarry = ncarry + (r / 67108864 | 0) | 0;
            lo = lo + rword | 0;
            rword = lo & 67108863;
            ncarry = ncarry + (lo >>> 26) | 0;
            hncarry += ncarry >>> 26;
            ncarry &= 67108863;
          }
          out.words[k] = rword;
          carry = ncarry;
          ncarry = hncarry;
        }
        if (carry !== 0) {
          out.words[k] = carry;
        } else {
          out.length--;
        }
        return out.strip();
      }
      function jumboMulTo(self2, num, out) {
        var fftm = new FFTM();
        return fftm.mulp(self2, num, out);
      }
      BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) {
          res = comb10MulTo(this, num, out);
        } else if (len < 63) {
          res = smallMulTo(this, num, out);
        } else if (len < 1024) {
          res = bigMulTo(this, num, out);
        } else {
          res = jumboMulTo(this, num, out);
        }
        return res;
      };
      function FFTM(x, y) {
        this.x = x;
        this.y = y;
      }
      FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for (var i2 = 0; i2 < N; i2++) {
          t[i2] = this.revBin(i2, l, N);
        }
        return t;
      };
      FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for (var i2 = 0; i2 < l; i2++) {
          rb |= (x & 1) << l - i2 - 1;
          x >>= 1;
        }
        return rb;
      };
      FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for (var i2 = 0; i2 < N; i2++) {
          rtws[i2] = rws[rbt[i2]];
          itws[i2] = iws[rbt[i2]];
        }
      };
      FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for (var s = 1; s < N; s <<= 1) {
          var l = s << 1;
          var rtwdf = Math.cos(2 * Math.PI / l);
          var itwdf = Math.sin(2 * Math.PI / l);
          for (var p = 0; p < N; p += l) {
            var rtwdf_ = rtwdf;
            var itwdf_ = itwdf;
            for (var j = 0; j < s; j++) {
              var re2 = rtws[p + j];
              var ie = itws[p + j];
              var ro = rtws[p + j + s];
              var io = itws[p + j + s];
              var rx = rtwdf_ * ro - itwdf_ * io;
              io = rtwdf_ * io + itwdf_ * ro;
              ro = rx;
              rtws[p + j] = re2 + ro;
              itws[p + j] = ie + io;
              rtws[p + j + s] = re2 - ro;
              itws[p + j + s] = ie - io;
              if (j !== l) {
                rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                rtwdf_ = rx;
              }
            }
          }
        }
      };
      FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i2 = 0;
        for (N = N / 2 | 0; N; N = N >>> 1) {
          i2++;
        }
        return 1 << i2 + 1 + odd;
      };
      FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for (var i2 = 0; i2 < N / 2; i2++) {
          var t = rws[i2];
          rws[i2] = rws[N - i2 - 1];
          rws[N - i2 - 1] = t;
          t = iws[i2];
          iws[i2] = -iws[N - i2 - 1];
          iws[N - i2 - 1] = -t;
        }
      };
      FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for (var i2 = 0; i2 < N / 2; i2++) {
          var w = Math.round(ws[2 * i2 + 1] / N) * 8192 + Math.round(ws[2 * i2] / N) + carry;
          ws[i2] = w & 67108863;
          if (w < 67108864) {
            carry = 0;
          } else {
            carry = w / 67108864 | 0;
          }
        }
        return ws;
      };
      FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for (var i2 = 0; i2 < len; i2++) {
          carry = carry + (ws[i2] | 0);
          rws[2 * i2] = carry & 8191;
          carry = carry >>> 13;
          rws[2 * i2 + 1] = carry & 8191;
          carry = carry >>> 13;
        }
        for (i2 = 2 * len; i2 < N; ++i2) {
          rws[i2] = 0;
        }
        assert(carry === 0);
        assert((carry & ~8191) === 0);
      };
      FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for (var i2 = 0; i2 < N; i2++) {
          ph[i2] = 0;
        }
        return ph;
      };
      FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for (var i2 = 0; i2 < N; i2++) {
          var rx = rwst[i2] * nrwst[i2] - iwst[i2] * niwst[i2];
          iwst[i2] = rwst[i2] * niwst[i2] + iwst[i2] * nrwst[i2];
          rwst[i2] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out.strip();
      };
      BN.prototype.mul = function mul2(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
      };
      BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
      };
      BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
      };
      BN.prototype.imuln = function imuln(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        var carry = 0;
        for (var i2 = 0; i2 < this.length; i2++) {
          var w = (this.words[i2] | 0) * num;
          var lo = (w & 67108863) + (carry & 67108863);
          carry >>= 26;
          carry += w / 67108864 | 0;
          carry += lo >>> 26;
          this.words[i2] = lo & 67108863;
        }
        if (carry !== 0) {
          this.words[i2] = carry;
          this.length++;
        }
        this.length = num === 0 ? 1 : this.length;
        return this;
      };
      BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
      };
      BN.prototype.sqr = function sqr() {
        return this.mul(this);
      };
      BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
      };
      BN.prototype.pow = function pow3(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        var res = this;
        for (var i2 = 0; i2 < w.length; i2++, res = res.sqr()) {
          if (w[i2] !== 0) break;
        }
        if (++i2 < w.length) {
          for (var q = res.sqr(); i2 < w.length; i2++, q = q.sqr()) {
            if (w[i2] === 0) continue;
            res = res.mul(q);
          }
        }
        return res;
      };
      BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i2;
        if (r !== 0) {
          var carry = 0;
          for (i2 = 0; i2 < this.length; i2++) {
            var newCarry = this.words[i2] & carryMask;
            var c = (this.words[i2] | 0) - newCarry << r;
            this.words[i2] = c | carry;
            carry = newCarry >>> 26 - r;
          }
          if (carry) {
            this.words[i2] = carry;
            this.length++;
          }
        }
        if (s !== 0) {
          for (i2 = this.length - 1; i2 >= 0; i2--) {
            this.words[i2 + s] = this.words[i2];
          }
          for (i2 = 0; i2 < s; i2++) {
            this.words[i2] = 0;
          }
          this.length += s;
        }
        return this.strip();
      };
      BN.prototype.ishln = function ishln(bits) {
        assert(this.negative === 0);
        return this.iushln(bits);
      };
      BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === "number" && bits >= 0);
        var h;
        if (hint) {
          h = (hint - hint % 26) / 26;
        } else {
          h = 0;
        }
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        if (maskedWords) {
          for (var i2 = 0; i2 < s; i2++) {
            maskedWords.words[i2] = this.words[i2];
          }
          maskedWords.length = s;
        }
        if (s === 0) {
        } else if (this.length > s) {
          this.length -= s;
          for (i2 = 0; i2 < this.length; i2++) {
            this.words[i2] = this.words[i2 + s];
          }
        } else {
          this.words[0] = 0;
          this.length = 1;
        }
        var carry = 0;
        for (i2 = this.length - 1; i2 >= 0 && (carry !== 0 || i2 >= h); i2--) {
          var word = this.words[i2] | 0;
          this.words[i2] = carry << 26 - r | word >>> r;
          carry = word & mask;
        }
        if (maskedWords && carry !== 0) {
          maskedWords.words[maskedWords.length++] = carry;
        }
        if (this.length === 0) {
          this.words[0] = 0;
          this.length = 1;
        }
        return this.strip();
      };
      BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
      };
      BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
      };
      BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
      };
      BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
      };
      BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
      };
      BN.prototype.testn = function testn(bit) {
        assert(typeof bit === "number" && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) return false;
        var w = this.words[s];
        return !!(w & q);
      };
      BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === "number" && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, "imaskn works only with positive numbers");
        if (this.length <= s) {
          return this;
        }
        if (r !== 0) {
          s++;
        }
        this.length = Math.min(s, this.length);
        if (r !== 0) {
          var mask = 67108863 ^ 67108863 >>> r << r;
          this.words[this.length - 1] &= mask;
        }
        return this.strip();
      };
      BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
      };
      BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        if (num < 0) return this.isubn(-num);
        if (this.negative !== 0) {
          if (this.length === 1 && (this.words[0] | 0) < num) {
            this.words[0] = num - (this.words[0] | 0);
            this.negative = 0;
            return this;
          }
          this.negative = 0;
          this.isubn(num);
          this.negative = 1;
          return this;
        }
        return this._iaddn(num);
      };
      BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        for (var i2 = 0; i2 < this.length && this.words[i2] >= 67108864; i2++) {
          this.words[i2] -= 67108864;
          if (i2 === this.length - 1) {
            this.words[i2 + 1] = 1;
          } else {
            this.words[i2 + 1]++;
          }
        }
        this.length = Math.max(this.length, i2 + 1);
        return this;
      };
      BN.prototype.isubn = function isubn(num) {
        assert(typeof num === "number");
        assert(num < 67108864);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
          this.negative = 0;
          this.iaddn(num);
          this.negative = 1;
          return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
          this.words[0] = -this.words[0];
          this.negative = 1;
        } else {
          for (var i2 = 0; i2 < this.length && this.words[i2] < 0; i2++) {
            this.words[i2] += 67108864;
            this.words[i2 + 1] -= 1;
          }
        }
        return this.strip();
      };
      BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
      };
      BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
      };
      BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
      };
      BN.prototype.abs = function abs3() {
        return this.clone().iabs();
      };
      BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul2, shift) {
        var len = num.length + shift;
        var i2;
        this._expand(len);
        var w;
        var carry = 0;
        for (i2 = 0; i2 < num.length; i2++) {
          w = (this.words[i2 + shift] | 0) + carry;
          var right = (num.words[i2] | 0) * mul2;
          w -= right & 67108863;
          carry = (w >> 26) - (right / 67108864 | 0);
          this.words[i2 + shift] = w & 67108863;
        }
        for (; i2 < this.length - shift; i2++) {
          w = (this.words[i2 + shift] | 0) + carry;
          carry = w >> 26;
          this.words[i2 + shift] = w & 67108863;
        }
        if (carry === 0) return this.strip();
        assert(carry === -1);
        carry = 0;
        for (i2 = 0; i2 < this.length; i2++) {
          w = -(this.words[i2] | 0) + carry;
          carry = w >> 26;
          this.words[i2] = w & 67108863;
        }
        this.negative = 1;
        return this.strip();
      };
      BN.prototype._wordDiv = function _wordDiv(num, mode2) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b2 = num;
        var bhi = b2.words[b2.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
          b2 = b2.ushln(shift);
          a.iushln(shift);
          bhi = b2.words[b2.length - 1] | 0;
        }
        var m = a.length - b2.length;
        var q;
        if (mode2 !== "mod") {
          q = new BN(null);
          q.length = m + 1;
          q.words = new Array(q.length);
          for (var i2 = 0; i2 < q.length; i2++) {
            q.words[i2] = 0;
          }
        }
        var diff2 = a.clone()._ishlnsubmul(b2, 1, m);
        if (diff2.negative === 0) {
          a = diff2;
          if (q) {
            q.words[m] = 1;
          }
        }
        for (var j = m - 1; j >= 0; j--) {
          var qj = (a.words[b2.length + j] | 0) * 67108864 + (a.words[b2.length + j - 1] | 0);
          qj = Math.min(qj / bhi | 0, 67108863);
          a._ishlnsubmul(b2, qj, j);
          while (a.negative !== 0) {
            qj--;
            a.negative = 0;
            a._ishlnsubmul(b2, 1, j);
            if (!a.isZero()) {
              a.negative ^= 1;
            }
          }
          if (q) {
            q.words[j] = qj;
          }
        }
        if (q) {
          q.strip();
        }
        a.strip();
        if (mode2 !== "div" && shift !== 0) {
          a.iushrn(shift);
        }
        return {
          div: q || null,
          mod: a
        };
      };
      BN.prototype.divmod = function divmod(num, mode2, positive) {
        assert(!num.isZero());
        if (this.isZero()) {
          return {
            div: new BN(0),
            mod: new BN(0)
          };
        }
        var div2, mod3, res;
        if (this.negative !== 0 && num.negative === 0) {
          res = this.neg().divmod(num, mode2);
          if (mode2 !== "mod") {
            div2 = res.div.neg();
          }
          if (mode2 !== "div") {
            mod3 = res.mod.neg();
            if (positive && mod3.negative !== 0) {
              mod3.iadd(num);
            }
          }
          return {
            div: div2,
            mod: mod3
          };
        }
        if (this.negative === 0 && num.negative !== 0) {
          res = this.divmod(num.neg(), mode2);
          if (mode2 !== "mod") {
            div2 = res.div.neg();
          }
          return {
            div: div2,
            mod: res.mod
          };
        }
        if ((this.negative & num.negative) !== 0) {
          res = this.neg().divmod(num.neg(), mode2);
          if (mode2 !== "div") {
            mod3 = res.mod.neg();
            if (positive && mod3.negative !== 0) {
              mod3.isub(num);
            }
          }
          return {
            div: res.div,
            mod: mod3
          };
        }
        if (num.length > this.length || this.cmp(num) < 0) {
          return {
            div: new BN(0),
            mod: this
          };
        }
        if (num.length === 1) {
          if (mode2 === "div") {
            return {
              div: this.divn(num.words[0]),
              mod: null
            };
          }
          if (mode2 === "mod") {
            return {
              div: null,
              mod: new BN(this.modn(num.words[0]))
            };
          }
          return {
            div: this.divn(num.words[0]),
            mod: new BN(this.modn(num.words[0]))
          };
        }
        return this._wordDiv(num, mode2);
      };
      BN.prototype.div = function div2(num) {
        return this.divmod(num, "div", false).div;
      };
      BN.prototype.mod = function mod3(num) {
        return this.divmod(num, "mod", false).mod;
      };
      BN.prototype.umod = function umod(num) {
        return this.divmod(num, "mod", true).mod;
      };
      BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        if (dm.mod.isZero()) return dm.div;
        var mod3 = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod3.cmp(half);
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
      };
      BN.prototype.modn = function modn(num) {
        assert(num <= 67108863);
        var p = (1 << 26) % num;
        var acc = 0;
        for (var i2 = this.length - 1; i2 >= 0; i2--) {
          acc = (p * acc + (this.words[i2] | 0)) % num;
        }
        return acc;
      };
      BN.prototype.idivn = function idivn(num) {
        assert(num <= 67108863);
        var carry = 0;
        for (var i2 = this.length - 1; i2 >= 0; i2--) {
          var w = (this.words[i2] | 0) + carry * 67108864;
          this.words[i2] = w / num | 0;
          carry = w % num;
        }
        return this.strip();
      };
      BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
      };
      BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) {
          x = x.umod(p);
        } else {
          x = x.clone();
        }
        var A = new BN(1);
        var B = new BN(0);
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while (x.isEven() && y.isEven()) {
          x.iushrn(1);
          y.iushrn(1);
          ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while (!x.isZero()) {
          for (var i2 = 0, im2 = 1; (x.words[0] & im2) === 0 && i2 < 26; ++i2, im2 <<= 1) ;
          if (i2 > 0) {
            x.iushrn(i2);
            while (i2-- > 0) {
              if (A.isOdd() || B.isOdd()) {
                A.iadd(yp);
                B.isub(xp);
              }
              A.iushrn(1);
              B.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) ;
          if (j > 0) {
            y.iushrn(j);
            while (j-- > 0) {
              if (C.isOdd() || D.isOdd()) {
                C.iadd(yp);
                D.isub(xp);
              }
              C.iushrn(1);
              D.iushrn(1);
            }
          }
          if (x.cmp(y) >= 0) {
            x.isub(y);
            A.isub(C);
            B.isub(D);
          } else {
            y.isub(x);
            C.isub(A);
            D.isub(B);
          }
        }
        return {
          a: C,
          b: D,
          gcd: y.iushln(g)
        };
      };
      BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b2 = p.clone();
        if (a.negative !== 0) {
          a = a.umod(p);
        } else {
          a = a.clone();
        }
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b2.clone();
        while (a.cmpn(1) > 0 && b2.cmpn(1) > 0) {
          for (var i2 = 0, im2 = 1; (a.words[0] & im2) === 0 && i2 < 26; ++i2, im2 <<= 1) ;
          if (i2 > 0) {
            a.iushrn(i2);
            while (i2-- > 0) {
              if (x1.isOdd()) {
                x1.iadd(delta);
              }
              x1.iushrn(1);
            }
          }
          for (var j = 0, jm = 1; (b2.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) ;
          if (j > 0) {
            b2.iushrn(j);
            while (j-- > 0) {
              if (x2.isOdd()) {
                x2.iadd(delta);
              }
              x2.iushrn(1);
            }
          }
          if (a.cmp(b2) >= 0) {
            a.isub(b2);
            x1.isub(x2);
          } else {
            b2.isub(a);
            x2.isub(x1);
          }
        }
        var res;
        if (a.cmpn(1) === 0) {
          res = x1;
        } else {
          res = x2;
        }
        if (res.cmpn(0) < 0) {
          res.iadd(p);
        }
        return res;
      };
      BN.prototype.gcd = function gcd2(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b2 = num.clone();
        a.negative = 0;
        b2.negative = 0;
        for (var shift = 0; a.isEven() && b2.isEven(); shift++) {
          a.iushrn(1);
          b2.iushrn(1);
        }
        do {
          while (a.isEven()) {
            a.iushrn(1);
          }
          while (b2.isEven()) {
            b2.iushrn(1);
          }
          var r = a.cmp(b2);
          if (r < 0) {
            var t = a;
            a = b2;
            b2 = t;
          } else if (r === 0 || b2.cmpn(1) === 0) {
            break;
          }
          a.isub(b2);
        } while (true);
        return b2.iushln(shift);
      };
      BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
      };
      BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
      };
      BN.prototype.isOdd = function isOdd2() {
        return (this.words[0] & 1) === 1;
      };
      BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
      };
      BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === "number");
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        if (this.length <= s) {
          this._expand(s + 1);
          this.words[s] |= q;
          return this;
        }
        var carry = q;
        for (var i2 = s; carry !== 0 && i2 < this.length; i2++) {
          var w = this.words[i2] | 0;
          w += carry;
          carry = w >>> 26;
          w &= 67108863;
          this.words[i2] = w;
        }
        if (carry !== 0) {
          this.words[i2] = carry;
          this.length++;
        }
        return this;
      };
      BN.prototype.isZero = function isZero2() {
        return this.length === 1 && this.words[0] === 0;
      };
      BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this.strip();
        var res;
        if (this.length > 1) {
          res = 1;
        } else {
          if (negative) {
            num = -num;
          }
          assert(num <= 67108863, "Number is too big");
          var w = this.words[0] | 0;
          res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
      };
      BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
      };
      BN.prototype.ucmp = function ucmp(num) {
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for (var i2 = this.length - 1; i2 >= 0; i2--) {
          var a = this.words[i2] | 0;
          var b2 = num.words[i2] | 0;
          if (a === b2) continue;
          if (a < b2) {
            res = -1;
          } else if (a > b2) {
            res = 1;
          }
          break;
        }
        return res;
      };
      BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
      };
      BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
      };
      BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
      };
      BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
      };
      BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
      };
      BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
      };
      BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
      };
      BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
      };
      BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
      };
      BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
      };
      BN.red = function red(num) {
        return new Red(num);
      };
      BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        assert(this.negative === 0, "red works only with positives");
        return ctx.convertTo(this)._forceRed(ctx);
      };
      BN.prototype.fromRed = function fromRed() {
        assert(this.red, "fromRed works only with numbers in reduction context");
        return this.red.convertFrom(this);
      };
      BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
      };
      BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, "Already a number in reduction context");
        return this._forceRed(ctx);
      };
      BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, "redAdd works only with red numbers");
        return this.red.add(this, num);
      };
      BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, "redIAdd works only with red numbers");
        return this.red.iadd(this, num);
      };
      BN.prototype.redSub = function redSub(num) {
        assert(this.red, "redSub works only with red numbers");
        return this.red.sub(this, num);
      };
      BN.prototype.redISub = function redISub(num) {
        assert(this.red, "redISub works only with red numbers");
        return this.red.isub(this, num);
      };
      BN.prototype.redShl = function redShl(num) {
        assert(this.red, "redShl works only with red numbers");
        return this.red.shl(this, num);
      };
      BN.prototype.redMul = function redMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.mul(this, num);
      };
      BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, "redMul works only with red numbers");
        this.red._verify2(this, num);
        return this.red.imul(this, num);
      };
      BN.prototype.redSqr = function redSqr() {
        assert(this.red, "redSqr works only with red numbers");
        this.red._verify1(this);
        return this.red.sqr(this);
      };
      BN.prototype.redISqr = function redISqr() {
        assert(this.red, "redISqr works only with red numbers");
        this.red._verify1(this);
        return this.red.isqr(this);
      };
      BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, "redSqrt works only with red numbers");
        this.red._verify1(this);
        return this.red.sqrt(this);
      };
      BN.prototype.redInvm = function redInvm() {
        assert(this.red, "redInvm works only with red numbers");
        this.red._verify1(this);
        return this.red.invm(this);
      };
      BN.prototype.redNeg = function redNeg() {
        assert(this.red, "redNeg works only with red numbers");
        this.red._verify1(this);
        return this.red.neg(this);
      };
      BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, "redPow(normalNum)");
        this.red._verify1(this);
        return this.red.pow(this, num);
      };
      var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
      };
      function MPrime(name314, p) {
        this.name = name314;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
      }
      MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
      };
      MPrime.prototype.ireduce = function ireduce(num) {
        var r = num;
        var rlen;
        do {
          this.split(r, this.tmp);
          r = this.imulK(r);
          r = r.iadd(this.tmp);
          rlen = r.bitLength();
        } while (rlen > this.n);
        var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp === 0) {
          r.words[0] = 0;
          r.length = 1;
        } else if (cmp > 0) {
          r.isub(this.p);
        } else {
          if (r.strip !== void 0) {
            r.strip();
          } else {
            r._strip();
          }
        }
        return r;
      };
      MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
      };
      MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
      };
      function K256() {
        MPrime.call(
          this,
          "k256",
          "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
        );
      }
      inherits(K256, MPrime);
      K256.prototype.split = function split(input, output) {
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for (var i2 = 0; i2 < outLen; i2++) {
          output.words[i2] = input.words[i2];
        }
        output.length = outLen;
        if (input.length <= 9) {
          input.words[0] = 0;
          input.length = 1;
          return;
        }
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for (i2 = 10; i2 < input.length; i2++) {
          var next = input.words[i2] | 0;
          input.words[i2 - 10] = (next & mask) << 4 | prev >>> 22;
          prev = next;
        }
        prev >>>= 22;
        input.words[i2 - 10] = prev;
        if (prev === 0 && input.length > 10) {
          input.length -= 10;
        } else {
          input.length -= 9;
        }
      };
      K256.prototype.imulK = function imulK(num) {
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        var lo = 0;
        for (var i2 = 0; i2 < num.length; i2++) {
          var w = num.words[i2] | 0;
          lo += w * 977;
          num.words[i2] = lo & 67108863;
          lo = w * 64 + (lo / 67108864 | 0);
        }
        if (num.words[num.length - 1] === 0) {
          num.length--;
          if (num.words[num.length - 1] === 0) {
            num.length--;
          }
        }
        return num;
      };
      function P224() {
        MPrime.call(
          this,
          "p224",
          "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
        );
      }
      inherits(P224, MPrime);
      function P192() {
        MPrime.call(
          this,
          "p192",
          "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
        );
      }
      inherits(P192, MPrime);
      function P25519() {
        MPrime.call(
          this,
          "25519",
          "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
        );
      }
      inherits(P25519, MPrime);
      P25519.prototype.imulK = function imulK(num) {
        var carry = 0;
        for (var i2 = 0; i2 < num.length; i2++) {
          var hi = (num.words[i2] | 0) * 19 + carry;
          var lo = hi & 67108863;
          hi >>>= 26;
          num.words[i2] = lo;
          carry = hi;
        }
        if (carry !== 0) {
          num.words[num.length++] = carry;
        }
        return num;
      };
      BN._prime = function prime(name314) {
        if (primes[name314]) return primes[name314];
        var prime2;
        if (name314 === "k256") {
          prime2 = new K256();
        } else if (name314 === "p224") {
          prime2 = new P224();
        } else if (name314 === "p192") {
          prime2 = new P192();
        } else if (name314 === "p25519") {
          prime2 = new P25519();
        } else {
          throw new Error("Unknown prime " + name314);
        }
        primes[name314] = prime2;
        return prime2;
      };
      function Red(m) {
        if (typeof m === "string") {
          var prime = BN._prime(m);
          this.m = prime.p;
          this.prime = prime;
        } else {
          assert(m.gtn(1), "modulus must be greater than 1");
          this.m = m;
          this.prime = null;
        }
      }
      Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, "red works only with positives");
        assert(a.red, "red works only with red numbers");
      };
      Red.prototype._verify2 = function _verify2(a, b2) {
        assert((a.negative | b2.negative) === 0, "red works only with positives");
        assert(
          a.red && a.red === b2.red,
          "red works only with red numbers"
        );
      };
      Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        return a.umod(this.m)._forceRed(this);
      };
      Red.prototype.neg = function neg(a) {
        if (a.isZero()) {
          return a.clone();
        }
        return this.m.sub(a)._forceRed(this);
      };
      Red.prototype.add = function add4(a, b2) {
        this._verify2(a, b2);
        var res = a.add(b2);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.iadd = function iadd(a, b2) {
        this._verify2(a, b2);
        var res = a.iadd(b2);
        if (res.cmp(this.m) >= 0) {
          res.isub(this.m);
        }
        return res;
      };
      Red.prototype.sub = function sub2(a, b2) {
        this._verify2(a, b2);
        var res = a.sub(b2);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Red.prototype.isub = function isub(a, b2) {
        this._verify2(a, b2);
        var res = a.isub(b2);
        if (res.cmpn(0) < 0) {
          res.iadd(this.m);
        }
        return res;
      };
      Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
      };
      Red.prototype.imul = function imul(a, b2) {
        this._verify2(a, b2);
        return this.imod(a.imul(b2));
      };
      Red.prototype.mul = function mul2(a, b2) {
        this._verify2(a, b2);
        return this.imod(a.mul(b2));
      };
      Red.prototype.isqr = function isqr(a) {
        return this.imul(a, a.clone());
      };
      Red.prototype.sqr = function sqr(a) {
        return this.mul(a, a);
      };
      Red.prototype.sqrt = function sqrt3(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        if (mod3 === 3) {
          var pow3 = this.m.add(new BN(1)).iushrn(2);
          return this.pow(a, pow3);
        }
        var q = this.m.subn(1);
        var s = 0;
        while (!q.isZero() && q.andln(1) === 0) {
          s++;
          q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while (this.pow(z, lpow).cmp(nOne) !== 0) {
          z.redIAdd(nOne);
        }
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while (t.cmp(one) !== 0) {
          var tmp = t;
          for (var i2 = 0; tmp.cmp(one) !== 0; i2++) {
            tmp = tmp.redSqr();
          }
          assert(i2 < m);
          var b2 = this.pow(c, new BN(1).iushln(m - i2 - 1));
          r = r.redMul(b2);
          c = b2.redSqr();
          t = t.redMul(c);
          m = i2;
        }
        return r;
      };
      Red.prototype.invm = function invm(a) {
        var inv2 = a._invmp(this.m);
        if (inv2.negative !== 0) {
          inv2.negative = 0;
          return this.imod(inv2).redNeg();
        } else {
          return this.imod(inv2);
        }
      };
      Red.prototype.pow = function pow3(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for (var i2 = 2; i2 < wnd.length; i2++) {
          wnd[i2] = this.mul(wnd[i2 - 1], a);
        }
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) {
          start = 26;
        }
        for (i2 = num.length - 1; i2 >= 0; i2--) {
          var word = num.words[i2];
          for (var j = start - 1; j >= 0; j--) {
            var bit = word >> j & 1;
            if (res !== wnd[0]) {
              res = this.sqr(res);
            }
            if (bit === 0 && current === 0) {
              currentLen = 0;
              continue;
            }
            current <<= 1;
            current |= bit;
            currentLen++;
            if (currentLen !== windowSize && (i2 !== 0 || j !== 0)) continue;
            res = this.mul(res, wnd[current]);
            currentLen = 0;
            current = 0;
          }
          start = 26;
        }
        return res;
      };
      Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
      };
      Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
      };
      BN.mont = function mont(num) {
        return new Mont(num);
      };
      function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) {
          this.shift += 26 - this.shift % 26;
        }
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
      }
      inherits(Mont, Red);
      Mont.prototype.convertTo = function convertTo(num) {
        return this.imod(num.ushln(this.shift));
      };
      Mont.prototype.convertFrom = function convertFrom(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
      };
      Mont.prototype.imul = function imul(a, b2) {
        if (a.isZero() || b2.isZero()) {
          a.words[0] = 0;
          a.length = 1;
          return a;
        }
        var t = a.imul(b2);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.mul = function mul2(a, b2) {
        if (a.isZero() || b2.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b2);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) {
          res = u.isub(this.m);
        } else if (u.cmpn(0) < 0) {
          res = u.iadd(this.m);
        }
        return res._forceRed(this);
      };
      Mont.prototype.invm = function invm(a) {
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
      };
    })(typeof module === "undefined" || module, exports);
  }
});

// node_modules/inherits/inherits_browser.js
var require_inherits_browser = __commonJS({
  "node_modules/inherits/inherits_browser.js"(exports, module) {
    if (typeof Object.create === "function") {
      module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        }
      };
    } else {
      module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {
          };
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
      };
    }
  }
});

// node_modules/safer-buffer/safer.js
var require_safer = __commonJS({
  "node_modules/safer-buffer/safer.js"(exports, module) {
    "use strict";
    var buffer = require_buffer();
    var Buffer11 = buffer.Buffer;
    var safer = {};
    var key;
    for (key in buffer) {
      if (!buffer.hasOwnProperty(key)) continue;
      if (key === "SlowBuffer" || key === "Buffer") continue;
      safer[key] = buffer[key];
    }
    var Safer = safer.Buffer = {};
    for (key in Buffer11) {
      if (!Buffer11.hasOwnProperty(key)) continue;
      if (key === "allocUnsafe" || key === "allocUnsafeSlow") continue;
      Safer[key] = Buffer11[key];
    }
    safer.Buffer.prototype = Buffer11.prototype;
    if (!Safer.from || Safer.from === Uint8Array.from) {
      Safer.from = function(value, encodingOrOffset, length) {
        if (typeof value === "number") {
          throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof value);
        }
        if (value && typeof value.length === "undefined") {
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
        }
        return Buffer11(value, encodingOrOffset, length);
      };
    }
    if (!Safer.alloc) {
      Safer.alloc = function(size2, fill, encoding) {
        if (typeof size2 !== "number") {
          throw new TypeError('The "size" argument must be of type number. Received type ' + typeof size2);
        }
        if (size2 < 0 || size2 >= 2 * (1 << 30)) {
          throw new RangeError('The value "' + size2 + '" is invalid for option "size"');
        }
        var buf = Buffer11(size2);
        if (!fill || fill.length === 0) {
          buf.fill(0);
        } else if (typeof encoding === "string") {
          buf.fill(fill, encoding);
        } else {
          buf.fill(fill);
        }
        return buf;
      };
    }
    if (!safer.kStringMaxLength) {
      try {
        safer.kStringMaxLength = process.binding("buffer").kStringMaxLength;
      } catch (e3) {
      }
    }
    if (!safer.constants) {
      safer.constants = {
        MAX_LENGTH: safer.kMaxLength
      };
      if (safer.kStringMaxLength) {
        safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength;
      }
    }
    module.exports = safer;
  }
});

// node_modules/asn1.js/lib/asn1/base/reporter.js
var require_reporter = __commonJS({
  "node_modules/asn1.js/lib/asn1/base/reporter.js"(exports) {
    "use strict";
    var inherits = require_inherits_browser();
    function Reporter(options) {
      this._reporterState = {
        obj: null,
        path: [],
        options: options || {},
        errors: []
      };
    }
    exports.Reporter = Reporter;
    Reporter.prototype.isError = function isError(obj) {
      return obj instanceof ReporterError;
    };
    Reporter.prototype.save = function save() {
      const state = this._reporterState;
      return { obj: state.obj, pathLen: state.path.length };
    };
    Reporter.prototype.restore = function restore(data) {
      const state = this._reporterState;
      state.obj = data.obj;
      state.path = state.path.slice(0, data.pathLen);
    };
    Reporter.prototype.enterKey = function enterKey(key) {
      return this._reporterState.path.push(key);
    };
    Reporter.prototype.exitKey = function exitKey(index2) {
      const state = this._reporterState;
      state.path = state.path.slice(0, index2 - 1);
    };
    Reporter.prototype.leaveKey = function leaveKey(index2, key, value) {
      const state = this._reporterState;
      this.exitKey(index2);
      if (state.obj !== null)
        state.obj[key] = value;
    };
    Reporter.prototype.path = function path() {
      return this._reporterState.path.join("/");
    };
    Reporter.prototype.enterObject = function enterObject() {
      const state = this._reporterState;
      const prev = state.obj;
      state.obj = {};
      return prev;
    };
    Reporter.prototype.leaveObject = function leaveObject(prev) {
      const state = this._reporterState;
      const now = state.obj;
      state.obj = prev;
      return now;
    };
    Reporter.prototype.error = function error(msg) {
      let err;
      const state = this._reporterState;
      const inherited = msg instanceof ReporterError;
      if (inherited) {
        err = msg;
      } else {
        err = new ReporterError(state.path.map(function(elem) {
          return "[" + JSON.stringify(elem) + "]";
        }).join(""), msg.message || msg, msg.stack);
      }
      if (!state.options.partial)
        throw err;
      if (!inherited)
        state.errors.push(err);
      return err;
    };
    Reporter.prototype.wrapResult = function wrapResult(result) {
      const state = this._reporterState;
      if (!state.options.partial)
        return result;
      return {
        result: this.isError(result) ? null : result,
        errors: state.errors
      };
    };
    function ReporterError(path, msg) {
      this.path = path;
      this.rethrow(msg);
    }
    inherits(ReporterError, Error);
    ReporterError.prototype.rethrow = function rethrow(msg) {
      this.message = msg + " at: " + (this.path || "(shallow)");
      if (Error.captureStackTrace)
        Error.captureStackTrace(this, ReporterError);
      if (!this.stack) {
        try {
          throw new Error(this.message);
        } catch (e3) {
          this.stack = e3.stack;
        }
      }
      return this;
    };
  }
});

// node_modules/asn1.js/lib/asn1/base/buffer.js
var require_buffer3 = __commonJS({
  "node_modules/asn1.js/lib/asn1/base/buffer.js"(exports) {
    "use strict";
    var inherits = require_inherits_browser();
    var Reporter = require_reporter().Reporter;
    var Buffer11 = require_safer().Buffer;
    function DecoderBuffer(base, options) {
      Reporter.call(this, options);
      if (!Buffer11.isBuffer(base)) {
        this.error("Input not Buffer");
        return;
      }
      this.base = base;
      this.offset = 0;
      this.length = base.length;
    }
    inherits(DecoderBuffer, Reporter);
    exports.DecoderBuffer = DecoderBuffer;
    DecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {
      if (data instanceof DecoderBuffer) {
        return true;
      }
      const isCompatible = typeof data === "object" && Buffer11.isBuffer(data.base) && data.constructor.name === "DecoderBuffer" && typeof data.offset === "number" && typeof data.length === "number" && typeof data.save === "function" && typeof data.restore === "function" && typeof data.isEmpty === "function" && typeof data.readUInt8 === "function" && typeof data.skip === "function" && typeof data.raw === "function";
      return isCompatible;
    };
    DecoderBuffer.prototype.save = function save() {
      return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
    };
    DecoderBuffer.prototype.restore = function restore(save) {
      const res = new DecoderBuffer(this.base);
      res.offset = save.offset;
      res.length = this.offset;
      this.offset = save.offset;
      Reporter.prototype.restore.call(this, save.reporter);
      return res;
    };
    DecoderBuffer.prototype.isEmpty = function isEmpty() {
      return this.offset === this.length;
    };
    DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
      if (this.offset + 1 <= this.length)
        return this.base.readUInt8(this.offset++, true);
      else
        return this.error(fail || "DecoderBuffer overrun");
    };
    DecoderBuffer.prototype.skip = function skip(bytes, fail) {
      if (!(this.offset + bytes <= this.length))
        return this.error(fail || "DecoderBuffer overrun");
      const res = new DecoderBuffer(this.base);
      res._reporterState = this._reporterState;
      res.offset = this.offset;
      res.length = this.offset + bytes;
      this.offset += bytes;
      return res;
    };
    DecoderBuffer.prototype.raw = function raw(save) {
      return this.base.slice(save ? save.offset : this.offset, this.length);
    };
    function EncoderBuffer(value, reporter) {
      if (Array.isArray(value)) {
        this.length = 0;
        this.value = value.map(function(item) {
          if (!EncoderBuffer.isEncoderBuffer(item))
            item = new EncoderBuffer(item, reporter);
          this.length += item.length;
          return item;
        }, this);
      } else if (typeof value === "number") {
        if (!(0 <= value && value <= 255))
          return reporter.error("non-byte EncoderBuffer value");
        this.value = value;
        this.length = 1;
      } else if (typeof value === "string") {
        this.value = value;
        this.length = Buffer11.byteLength(value);
      } else if (Buffer11.isBuffer(value)) {
        this.value = value;
        this.length = value.length;
      } else {
        return reporter.error("Unsupported type: " + typeof value);
      }
    }
    exports.EncoderBuffer = EncoderBuffer;
    EncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {
      if (data instanceof EncoderBuffer) {
        return true;
      }
      const isCompatible = typeof data === "object" && data.constructor.name === "EncoderBuffer" && typeof data.length === "number" && typeof data.join === "function";
      return isCompatible;
    };
    EncoderBuffer.prototype.join = function join2(out, offset) {
      if (!out)
        out = Buffer11.alloc(this.length);
      if (!offset)
        offset = 0;
      if (this.length === 0)
        return out;
      if (Array.isArray(this.value)) {
        this.value.forEach(function(item) {
          item.join(out, offset);
          offset += item.length;
        });
      } else {
        if (typeof this.value === "number")
          out[offset] = this.value;
        else if (typeof this.value === "string")
          out.write(this.value, offset);
        else if (Buffer11.isBuffer(this.value))
          this.value.copy(out, offset);
        offset += this.length;
      }
      return out;
    };
  }
});

// node_modules/minimalistic-assert/index.js
var require_minimalistic_assert = __commonJS({
  "node_modules/minimalistic-assert/index.js"(exports, module) {
    module.exports = assert;
    function assert(val, msg) {
      if (!val)
        throw new Error(msg || "Assertion failed");
    }
    assert.equal = function assertEqual(l, r, msg) {
      if (l != r)
        throw new Error(msg || "Assertion failed: " + l + " != " + r);
    };
  }
});

// node_modules/asn1.js/lib/asn1/base/node.js
var require_node = __commonJS({
  "node_modules/asn1.js/lib/asn1/base/node.js"(exports, module) {
    "use strict";
    var Reporter = require_reporter().Reporter;
    var EncoderBuffer = require_buffer3().EncoderBuffer;
    var DecoderBuffer = require_buffer3().DecoderBuffer;
    var assert = require_minimalistic_assert();
    var tags = [
      "seq",
      "seqof",
      "set",
      "setof",
      "objid",
      "bool",
      "gentime",
      "utctime",
      "null_",
      "enum",
      "int",
      "objDesc",
      "bitstr",
      "bmpstr",
      "charstr",
      "genstr",
      "graphstr",
      "ia5str",
      "iso646str",
      "numstr",
      "octstr",
      "printstr",
      "t61str",
      "unistr",
      "utf8str",
      "videostr"
    ];
    var methods = [
      "key",
      "obj",
      "use",
      "optional",
      "explicit",
      "implicit",
      "def",
      "choice",
      "any",
      "contains"
    ].concat(tags);
    var overrided = [
      "_peekTag",
      "_decodeTag",
      "_use",
      "_decodeStr",
      "_decodeObjid",
      "_decodeTime",
      "_decodeNull",
      "_decodeInt",
      "_decodeBool",
      "_decodeList",
      "_encodeComposite",
      "_encodeStr",
      "_encodeObjid",
      "_encodeTime",
      "_encodeNull",
      "_encodeInt",
      "_encodeBool"
    ];
    function Node2(enc, parent, name314) {
      const state = {};
      this._baseState = state;
      state.name = name314;
      state.enc = enc;
      state.parent = parent || null;
      state.children = null;
      state.tag = null;
      state.args = null;
      state.reverseArgs = null;
      state.choice = null;
      state.optional = false;
      state.any = false;
      state.obj = false;
      state.use = null;
      state.useDecoder = null;
      state.key = null;
      state["default"] = null;
      state.explicit = null;
      state.implicit = null;
      state.contains = null;
      if (!state.parent) {
        state.children = [];
        this._wrap();
      }
    }
    module.exports = Node2;
    var stateProps = [
      "enc",
      "parent",
      "children",
      "tag",
      "args",
      "reverseArgs",
      "choice",
      "optional",
      "any",
      "obj",
      "use",
      "alteredUse",
      "key",
      "default",
      "explicit",
      "implicit",
      "contains"
    ];
    Node2.prototype.clone = function clone5() {
      const state = this._baseState;
      const cstate = {};
      stateProps.forEach(function(prop) {
        cstate[prop] = state[prop];
      });
      const res = new this.constructor(cstate.parent);
      res._baseState = cstate;
      return res;
    };
    Node2.prototype._wrap = function wrap() {
      const state = this._baseState;
      methods.forEach(function(method) {
        this[method] = function _wrappedMethod() {
          const clone5 = new this.constructor(this);
          state.children.push(clone5);
          return clone5[method].apply(clone5, arguments);
        };
      }, this);
    };
    Node2.prototype._init = function init(body) {
      const state = this._baseState;
      assert(state.parent === null);
      body.call(this);
      state.children = state.children.filter(function(child) {
        return child._baseState.parent === this;
      }, this);
      assert.equal(state.children.length, 1, "Root node can have only one child");
    };
    Node2.prototype._useArgs = function useArgs(args) {
      const state = this._baseState;
      const children = args.filter(function(arg2) {
        return arg2 instanceof this.constructor;
      }, this);
      args = args.filter(function(arg2) {
        return !(arg2 instanceof this.constructor);
      }, this);
      if (children.length !== 0) {
        assert(state.children === null);
        state.children = children;
        children.forEach(function(child) {
          child._baseState.parent = this;
        }, this);
      }
      if (args.length !== 0) {
        assert(state.args === null);
        state.args = args;
        state.reverseArgs = args.map(function(arg2) {
          if (typeof arg2 !== "object" || arg2.constructor !== Object)
            return arg2;
          const res = {};
          Object.keys(arg2).forEach(function(key) {
            if (key == (key | 0))
              key |= 0;
            const value = arg2[key];
            res[value] = key;
          });
          return res;
        });
      }
    };
    overrided.forEach(function(method) {
      Node2.prototype[method] = function _overrided() {
        const state = this._baseState;
        throw new Error(method + " not implemented for encoding: " + state.enc);
      };
    });
    tags.forEach(function(tag2) {
      Node2.prototype[tag2] = function _tagMethod() {
        const state = this._baseState;
        const args = Array.prototype.slice.call(arguments);
        assert(state.tag === null);
        state.tag = tag2;
        this._useArgs(args);
        return this;
      };
    });
    Node2.prototype.use = function use(item) {
      assert(item);
      const state = this._baseState;
      assert(state.use === null);
      state.use = item;
      return this;
    };
    Node2.prototype.optional = function optional() {
      const state = this._baseState;
      state.optional = true;
      return this;
    };
    Node2.prototype.def = function def(val) {
      const state = this._baseState;
      assert(state["default"] === null);
      state["default"] = val;
      state.optional = true;
      return this;
    };
    Node2.prototype.explicit = function explicit(num) {
      const state = this._baseState;
      assert(state.explicit === null && state.implicit === null);
      state.explicit = num;
      return this;
    };
    Node2.prototype.implicit = function implicit(num) {
      const state = this._baseState;
      assert(state.explicit === null && state.implicit === null);
      state.implicit = num;
      return this;
    };
    Node2.prototype.obj = function obj() {
      const state = this._baseState;
      const args = Array.prototype.slice.call(arguments);
      state.obj = true;
      if (args.length !== 0)
        this._useArgs(args);
      return this;
    };
    Node2.prototype.key = function key(newKey) {
      const state = this._baseState;
      assert(state.key === null);
      state.key = newKey;
      return this;
    };
    Node2.prototype.any = function any() {
      const state = this._baseState;
      state.any = true;
      return this;
    };
    Node2.prototype.choice = function choice(obj) {
      const state = this._baseState;
      assert(state.choice === null);
      state.choice = obj;
      this._useArgs(Object.keys(obj).map(function(key) {
        return obj[key];
      }));
      return this;
    };
    Node2.prototype.contains = function contains(item) {
      const state = this._baseState;
      assert(state.use === null);
      state.contains = item;
      return this;
    };
    Node2.prototype._decode = function decode(input, options) {
      const state = this._baseState;
      if (state.parent === null)
        return input.wrapResult(state.children[0]._decode(input, options));
      let result = state["default"];
      let present = true;
      let prevKey = null;
      if (state.key !== null)
        prevKey = input.enterKey(state.key);
      if (state.optional) {
        let tag2 = null;
        if (state.explicit !== null)
          tag2 = state.explicit;
        else if (state.implicit !== null)
          tag2 = state.implicit;
        else if (state.tag !== null)
          tag2 = state.tag;
        if (tag2 === null && !state.any) {
          const save = input.save();
          try {
            if (state.choice === null)
              this._decodeGeneric(state.tag, input, options);
            else
              this._decodeChoice(input, options);
            present = true;
          } catch (e3) {
            present = false;
          }
          input.restore(save);
        } else {
          present = this._peekTag(input, tag2, state.any);
          if (input.isError(present))
            return present;
        }
      }
      let prevObj;
      if (state.obj && present)
        prevObj = input.enterObject();
      if (present) {
        if (state.explicit !== null) {
          const explicit = this._decodeTag(input, state.explicit);
          if (input.isError(explicit))
            return explicit;
          input = explicit;
        }
        const start = input.offset;
        if (state.use === null && state.choice === null) {
          let save;
          if (state.any)
            save = input.save();
          const body = this._decodeTag(
            input,
            state.implicit !== null ? state.implicit : state.tag,
            state.any
          );
          if (input.isError(body))
            return body;
          if (state.any)
            result = input.raw(save);
          else
            input = body;
        }
        if (options && options.track && state.tag !== null)
          options.track(input.path(), start, input.length, "tagged");
        if (options && options.track && state.tag !== null)
          options.track(input.path(), input.offset, input.length, "content");
        if (state.any) {
        } else if (state.choice === null) {
          result = this._decodeGeneric(state.tag, input, options);
        } else {
          result = this._decodeChoice(input, options);
        }
        if (input.isError(result))
          return result;
        if (!state.any && state.choice === null && state.children !== null) {
          state.children.forEach(function decodeChildren(child) {
            child._decode(input, options);
          });
        }
        if (state.contains && (state.tag === "octstr" || state.tag === "bitstr")) {
          const data = new DecoderBuffer(result);
          result = this._getUse(state.contains, input._reporterState.obj)._decode(data, options);
        }
      }
      if (state.obj && present)
        result = input.leaveObject(prevObj);
      if (state.key !== null && (result !== null || present === true))
        input.leaveKey(prevKey, state.key, result);
      else if (prevKey !== null)
        input.exitKey(prevKey);
      return result;
    };
    Node2.prototype._decodeGeneric = function decodeGeneric(tag2, input, options) {
      const state = this._baseState;
      if (tag2 === "seq" || tag2 === "set")
        return null;
      if (tag2 === "seqof" || tag2 === "setof")
        return this._decodeList(input, tag2, state.args[0], options);
      else if (/str$/.test(tag2))
        return this._decodeStr(input, tag2, options);
      else if (tag2 === "objid" && state.args)
        return this._decodeObjid(input, state.args[0], state.args[1], options);
      else if (tag2 === "objid")
        return this._decodeObjid(input, null, null, options);
      else if (tag2 === "gentime" || tag2 === "utctime")
        return this._decodeTime(input, tag2, options);
      else if (tag2 === "null_")
        return this._decodeNull(input, options);
      else if (tag2 === "bool")
        return this._decodeBool(input, options);
      else if (tag2 === "objDesc")
        return this._decodeStr(input, tag2, options);
      else if (tag2 === "int" || tag2 === "enum")
        return this._decodeInt(input, state.args && state.args[0], options);
      if (state.use !== null) {
        return this._getUse(state.use, input._reporterState.obj)._decode(input, options);
      } else {
        return input.error("unknown tag: " + tag2);
      }
    };
    Node2.prototype._getUse = function _getUse(entity, obj) {
      const state = this._baseState;
      state.useDecoder = this._use(entity, obj);
      assert(state.useDecoder._baseState.parent === null);
      state.useDecoder = state.useDecoder._baseState.children[0];
      if (state.implicit !== state.useDecoder._baseState.implicit) {
        state.useDecoder = state.useDecoder.clone();
        state.useDecoder._baseState.implicit = state.implicit;
      }
      return state.useDecoder;
    };
    Node2.prototype._decodeChoice = function decodeChoice(input, options) {
      const state = this._baseState;
      let result = null;
      let match = false;
      Object.keys(state.choice).some(function(key) {
        const save = input.save();
        const node = state.choice[key];
        try {
          const value = node._decode(input, options);
          if (input.isError(value))
            return false;
          result = { type: key, value };
          match = true;
        } catch (e3) {
          input.restore(save);
          return false;
        }
        return true;
      }, this);
      if (!match)
        return input.error("Choice not matched");
      return result;
    };
    Node2.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
      return new EncoderBuffer(data, this.reporter);
    };
    Node2.prototype._encode = function encode(data, reporter, parent) {
      const state = this._baseState;
      if (state["default"] !== null && state["default"] === data)
        return;
      const result = this._encodeValue(data, reporter, parent);
      if (result === void 0)
        return;
      if (this._skipDefault(result, reporter, parent))
        return;
      return result;
    };
    Node2.prototype._encodeValue = function encode(data, reporter, parent) {
      const state = this._baseState;
      if (state.parent === null)
        return state.children[0]._encode(data, reporter || new Reporter());
      let result = null;
      this.reporter = reporter;
      if (state.optional && data === void 0) {
        if (state["default"] !== null)
          data = state["default"];
        else
          return;
      }
      let content = null;
      let primitive = false;
      if (state.any) {
        result = this._createEncoderBuffer(data);
      } else if (state.choice) {
        result = this._encodeChoice(data, reporter);
      } else if (state.contains) {
        content = this._getUse(state.contains, parent)._encode(data, reporter);
        primitive = true;
      } else if (state.children) {
        content = state.children.map(function(child) {
          if (child._baseState.tag === "null_")
            return child._encode(null, reporter, data);
          if (child._baseState.key === null)
            return reporter.error("Child should have a key");
          const prevKey = reporter.enterKey(child._baseState.key);
          if (typeof data !== "object")
            return reporter.error("Child expected, but input is not object");
          const res = child._encode(data[child._baseState.key], reporter, data);
          reporter.leaveKey(prevKey);
          return res;
        }, this).filter(function(child) {
          return child;
        });
        content = this._createEncoderBuffer(content);
      } else {
        if (state.tag === "seqof" || state.tag === "setof") {
          if (!(state.args && state.args.length === 1))
            return reporter.error("Too many args for : " + state.tag);
          if (!Array.isArray(data))
            return reporter.error("seqof/setof, but data is not Array");
          const child = this.clone();
          child._baseState.implicit = null;
          content = this._createEncoderBuffer(data.map(function(item) {
            const state2 = this._baseState;
            return this._getUse(state2.args[0], data)._encode(item, reporter);
          }, child));
        } else if (state.use !== null) {
          result = this._getUse(state.use, parent)._encode(data, reporter);
        } else {
          content = this._encodePrimitive(state.tag, data);
          primitive = true;
        }
      }
      if (!state.any && state.choice === null) {
        const tag2 = state.implicit !== null ? state.implicit : state.tag;
        const cls = state.implicit === null ? "universal" : "context";
        if (tag2 === null) {
          if (state.use === null)
            reporter.error("Tag could be omitted only for .use()");
        } else {
          if (state.use === null)
            result = this._encodeComposite(tag2, primitive, cls, content);
        }
      }
      if (state.explicit !== null)
        result = this._encodeComposite(state.explicit, false, "context", result);
      return result;
    };
    Node2.prototype._encodeChoice = function encodeChoice(data, reporter) {
      const state = this._baseState;
      const node = state.choice[data.type];
      if (!node) {
        assert(
          false,
          data.type + " not found in " + JSON.stringify(Object.keys(state.choice))
        );
      }
      return node._encode(data.value, reporter);
    };
    Node2.prototype._encodePrimitive = function encodePrimitive(tag2, data) {
      const state = this._baseState;
      if (/str$/.test(tag2))
        return this._encodeStr(data, tag2);
      else if (tag2 === "objid" && state.args)
        return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
      else if (tag2 === "objid")
        return this._encodeObjid(data, null, null);
      else if (tag2 === "gentime" || tag2 === "utctime")
        return this._encodeTime(data, tag2);
      else if (tag2 === "null_")
        return this._encodeNull();
      else if (tag2 === "int" || tag2 === "enum")
        return this._encodeInt(data, state.args && state.reverseArgs[0]);
      else if (tag2 === "bool")
        return this._encodeBool(data);
      else if (tag2 === "objDesc")
        return this._encodeStr(data, tag2);
      else
        throw new Error("Unsupported tag: " + tag2);
    };
    Node2.prototype._isNumstr = function isNumstr(str) {
      return /^[0-9 ]*$/.test(str);
    };
    Node2.prototype._isPrintstr = function isPrintstr(str) {
      return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);
    };
  }
});

// node_modules/asn1.js/lib/asn1/constants/der.js
var require_der = __commonJS({
  "node_modules/asn1.js/lib/asn1/constants/der.js"(exports) {
    "use strict";
    function reverse(map3) {
      const res = {};
      Object.keys(map3).forEach(function(key) {
        if ((key | 0) == key)
          key = key | 0;
        const value = map3[key];
        res[value] = key;
      });
      return res;
    }
    exports.tagClass = {
      0: "universal",
      1: "application",
      2: "context",
      3: "private"
    };
    exports.tagClassByName = reverse(exports.tagClass);
    exports.tag = {
      0: "end",
      1: "bool",
      2: "int",
      3: "bitstr",
      4: "octstr",
      5: "null_",
      6: "objid",
      7: "objDesc",
      8: "external",
      9: "real",
      10: "enum",
      11: "embed",
      12: "utf8str",
      13: "relativeOid",
      16: "seq",
      17: "set",
      18: "numstr",
      19: "printstr",
      20: "t61str",
      21: "videostr",
      22: "ia5str",
      23: "utctime",
      24: "gentime",
      25: "graphstr",
      26: "iso646str",
      27: "genstr",
      28: "unistr",
      29: "charstr",
      30: "bmpstr"
    };
    exports.tagByName = reverse(exports.tag);
  }
});

// node_modules/asn1.js/lib/asn1/encoders/der.js
var require_der2 = __commonJS({
  "node_modules/asn1.js/lib/asn1/encoders/der.js"(exports, module) {
    "use strict";
    var inherits = require_inherits_browser();
    var Buffer11 = require_safer().Buffer;
    var Node2 = require_node();
    var der = require_der();
    function DEREncoder(entity) {
      this.enc = "der";
      this.name = entity.name;
      this.entity = entity;
      this.tree = new DERNode();
      this.tree._init(entity.body);
    }
    module.exports = DEREncoder;
    DEREncoder.prototype.encode = function encode(data, reporter) {
      return this.tree._encode(data, reporter).join();
    };
    function DERNode(parent) {
      Node2.call(this, "der", parent);
    }
    inherits(DERNode, Node2);
    DERNode.prototype._encodeComposite = function encodeComposite(tag2, primitive, cls, content) {
      const encodedTag = encodeTag(tag2, primitive, cls, this.reporter);
      if (content.length < 128) {
        const header2 = Buffer11.alloc(2);
        header2[0] = encodedTag;
        header2[1] = content.length;
        return this._createEncoderBuffer([header2, content]);
      }
      let lenOctets = 1;
      for (let i2 = content.length; i2 >= 256; i2 >>= 8)
        lenOctets++;
      const header = Buffer11.alloc(1 + 1 + lenOctets);
      header[0] = encodedTag;
      header[1] = 128 | lenOctets;
      for (let i2 = 1 + lenOctets, j = content.length; j > 0; i2--, j >>= 8)
        header[i2] = j & 255;
      return this._createEncoderBuffer([header, content]);
    };
    DERNode.prototype._encodeStr = function encodeStr(str, tag2) {
      if (tag2 === "bitstr") {
        return this._createEncoderBuffer([str.unused | 0, str.data]);
      } else if (tag2 === "bmpstr") {
        const buf = Buffer11.alloc(str.length * 2);
        for (let i2 = 0; i2 < str.length; i2++) {
          buf.writeUInt16BE(str.charCodeAt(i2), i2 * 2);
        }
        return this._createEncoderBuffer(buf);
      } else if (tag2 === "numstr") {
        if (!this._isNumstr(str)) {
          return this.reporter.error("Encoding of string type: numstr supports only digits and space");
        }
        return this._createEncoderBuffer(str);
      } else if (tag2 === "printstr") {
        if (!this._isPrintstr(str)) {
          return this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark");
        }
        return this._createEncoderBuffer(str);
      } else if (/str$/.test(tag2)) {
        return this._createEncoderBuffer(str);
      } else if (tag2 === "objDesc") {
        return this._createEncoderBuffer(str);
      } else {
        return this.reporter.error("Encoding of string type: " + tag2 + " unsupported");
      }
    };
    DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
      if (typeof id === "string") {
        if (!values)
          return this.reporter.error("string objid given, but no values map found");
        if (!values.hasOwnProperty(id))
          return this.reporter.error("objid not found in values map");
        id = values[id].split(/[\s.]+/g);
        for (let i2 = 0; i2 < id.length; i2++)
          id[i2] |= 0;
      } else if (Array.isArray(id)) {
        id = id.slice();
        for (let i2 = 0; i2 < id.length; i2++)
          id[i2] |= 0;
      }
      if (!Array.isArray(id)) {
        return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(id));
      }
      if (!relative) {
        if (id[1] >= 40)
          return this.reporter.error("Second objid identifier OOB");
        id.splice(0, 2, id[0] * 40 + id[1]);
      }
      let size2 = 0;
      for (let i2 = 0; i2 < id.length; i2++) {
        let ident = id[i2];
        for (size2++; ident >= 128; ident >>= 7)
          size2++;
      }
      const objid = Buffer11.alloc(size2);
      let offset = objid.length - 1;
      for (let i2 = id.length - 1; i2 >= 0; i2--) {
        let ident = id[i2];
        objid[offset--] = ident & 127;
        while ((ident >>= 7) > 0)
          objid[offset--] = 128 | ident & 127;
      }
      return this._createEncoderBuffer(objid);
    };
    function two(num) {
      if (num < 10)
        return "0" + num;
      else
        return num;
    }
    DERNode.prototype._encodeTime = function encodeTime(time, tag2) {
      let str;
      const date = new Date(time);
      if (tag2 === "gentime") {
        str = [
          two(date.getUTCFullYear()),
          two(date.getUTCMonth() + 1),
          two(date.getUTCDate()),
          two(date.getUTCHours()),
          two(date.getUTCMinutes()),
          two(date.getUTCSeconds()),
          "Z"
        ].join("");
      } else if (tag2 === "utctime") {
        str = [
          two(date.getUTCFullYear() % 100),
          two(date.getUTCMonth() + 1),
          two(date.getUTCDate()),
          two(date.getUTCHours()),
          two(date.getUTCMinutes()),
          two(date.getUTCSeconds()),
          "Z"
        ].join("");
      } else {
        this.reporter.error("Encoding " + tag2 + " time is not supported yet");
      }
      return this._encodeStr(str, "octstr");
    };
    DERNode.prototype._encodeNull = function encodeNull() {
      return this._createEncoderBuffer("");
    };
    DERNode.prototype._encodeInt = function encodeInt(num, values) {
      if (typeof num === "string") {
        if (!values)
          return this.reporter.error("String int or enum given, but no values map");
        if (!values.hasOwnProperty(num)) {
          return this.reporter.error("Values map doesn't contain: " + JSON.stringify(num));
        }
        num = values[num];
      }
      if (typeof num !== "number" && !Buffer11.isBuffer(num)) {
        const numArray = num.toArray();
        if (!num.sign && numArray[0] & 128) {
          numArray.unshift(0);
        }
        num = Buffer11.from(numArray);
      }
      if (Buffer11.isBuffer(num)) {
        let size3 = num.length;
        if (num.length === 0)
          size3++;
        const out2 = Buffer11.alloc(size3);
        num.copy(out2);
        if (num.length === 0)
          out2[0] = 0;
        return this._createEncoderBuffer(out2);
      }
      if (num < 128)
        return this._createEncoderBuffer(num);
      if (num < 256)
        return this._createEncoderBuffer([0, num]);
      let size2 = 1;
      for (let i2 = num; i2 >= 256; i2 >>= 8)
        size2++;
      const out = new Array(size2);
      for (let i2 = out.length - 1; i2 >= 0; i2--) {
        out[i2] = num & 255;
        num >>= 8;
      }
      if (out[0] & 128) {
        out.unshift(0);
      }
      return this._createEncoderBuffer(Buffer11.from(out));
    };
    DERNode.prototype._encodeBool = function encodeBool(value) {
      return this._createEncoderBuffer(value ? 255 : 0);
    };
    DERNode.prototype._use = function use(entity, obj) {
      if (typeof entity === "function")
        entity = entity(obj);
      return entity._getEncoder("der").tree;
    };
    DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
      const state = this._baseState;
      let i2;
      if (state["default"] === null)
        return false;
      const data = dataBuffer.join();
      if (state.defaultBuffer === void 0)
        state.defaultBuffer = this._encodeValue(state["default"], reporter, parent).join();
      if (data.length !== state.defaultBuffer.length)
        return false;
      for (i2 = 0; i2 < data.length; i2++)
        if (data[i2] !== state.defaultBuffer[i2])
          return false;
      return true;
    };
    function encodeTag(tag2, primitive, cls, reporter) {
      let res;
      if (tag2 === "seqof")
        tag2 = "seq";
      else if (tag2 === "setof")
        tag2 = "set";
      if (der.tagByName.hasOwnProperty(tag2))
        res = der.tagByName[tag2];
      else if (typeof tag2 === "number" && (tag2 | 0) === tag2)
        res = tag2;
      else
        return reporter.error("Unknown tag: " + tag2);
      if (res >= 31)
        return reporter.error("Multi-octet tag encoding unsupported");
      if (!primitive)
        res |= 32;
      res |= der.tagClassByName[cls || "universal"] << 6;
      return res;
    }
  }
});

// node_modules/asn1.js/lib/asn1/encoders/pem.js
var require_pem = __commonJS({
  "node_modules/asn1.js/lib/asn1/encoders/pem.js"(exports, module) {
    "use strict";
    var inherits = require_inherits_browser();
    var DEREncoder = require_der2();
    function PEMEncoder(entity) {
      DEREncoder.call(this, entity);
      this.enc = "pem";
    }
    inherits(PEMEncoder, DEREncoder);
    module.exports = PEMEncoder;
    PEMEncoder.prototype.encode = function encode(data, options) {
      const buf = DEREncoder.prototype.encode.call(this, data);
      const p = buf.toString("base64");
      const out = ["-----BEGIN " + options.label + "-----"];
      for (let i2 = 0; i2 < p.length; i2 += 64)
        out.push(p.slice(i2, i2 + 64));
      out.push("-----END " + options.label + "-----");
      return out.join("\n");
    };
  }
});

// node_modules/asn1.js/lib/asn1/encoders/index.js
var require_encoders = __commonJS({
  "node_modules/asn1.js/lib/asn1/encoders/index.js"(exports) {
    "use strict";
    var encoders = exports;
    encoders.der = require_der2();
    encoders.pem = require_pem();
  }
});

// node_modules/asn1.js/lib/asn1/decoders/der.js
var require_der3 = __commonJS({
  "node_modules/asn1.js/lib/asn1/decoders/der.js"(exports, module) {
    "use strict";
    var inherits = require_inherits_browser();
    var bignum = require_bn();
    var DecoderBuffer = require_buffer3().DecoderBuffer;
    var Node2 = require_node();
    var der = require_der();
    function DERDecoder(entity) {
      this.enc = "der";
      this.name = entity.name;
      this.entity = entity;
      this.tree = new DERNode();
      this.tree._init(entity.body);
    }
    module.exports = DERDecoder;
    DERDecoder.prototype.decode = function decode(data, options) {
      if (!DecoderBuffer.isDecoderBuffer(data)) {
        data = new DecoderBuffer(data, options);
      }
      return this.tree._decode(data, options);
    };
    function DERNode(parent) {
      Node2.call(this, "der", parent);
    }
    inherits(DERNode, Node2);
    DERNode.prototype._peekTag = function peekTag(buffer, tag2, any) {
      if (buffer.isEmpty())
        return false;
      const state = buffer.save();
      const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag2 + '"');
      if (buffer.isError(decodedTag))
        return decodedTag;
      buffer.restore(state);
      return decodedTag.tag === tag2 || decodedTag.tagStr === tag2 || decodedTag.tagStr + "of" === tag2 || any;
    };
    DERNode.prototype._decodeTag = function decodeTag(buffer, tag2, any) {
      const decodedTag = derDecodeTag(
        buffer,
        'Failed to decode tag of "' + tag2 + '"'
      );
      if (buffer.isError(decodedTag))
        return decodedTag;
      let len = derDecodeLen(
        buffer,
        decodedTag.primitive,
        'Failed to get length of "' + tag2 + '"'
      );
      if (buffer.isError(len))
        return len;
      if (!any && decodedTag.tag !== tag2 && decodedTag.tagStr !== tag2 && decodedTag.tagStr + "of" !== tag2) {
        return buffer.error('Failed to match tag: "' + tag2 + '"');
      }
      if (decodedTag.primitive || len !== null)
        return buffer.skip(len, 'Failed to match body of: "' + tag2 + '"');
      const state = buffer.save();
      const res = this._skipUntilEnd(
        buffer,
        'Failed to skip indefinite length body: "' + this.tag + '"'
      );
      if (buffer.isError(res))
        return res;
      len = buffer.offset - state.offset;
      buffer.restore(state);
      return buffer.skip(len, 'Failed to match body of: "' + tag2 + '"');
    };
    DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
      for (; ; ) {
        const tag2 = derDecodeTag(buffer, fail);
        if (buffer.isError(tag2))
          return tag2;
        const len = derDecodeLen(buffer, tag2.primitive, fail);
        if (buffer.isError(len))
          return len;
        let res;
        if (tag2.primitive || len !== null)
          res = buffer.skip(len);
        else
          res = this._skipUntilEnd(buffer, fail);
        if (buffer.isError(res))
          return res;
        if (tag2.tagStr === "end")
          break;
      }
    };
    DERNode.prototype._decodeList = function decodeList(buffer, tag2, decoder2, options) {
      const result = [];
      while (!buffer.isEmpty()) {
        const possibleEnd = this._peekTag(buffer, "end");
        if (buffer.isError(possibleEnd))
          return possibleEnd;
        const res = decoder2.decode(buffer, "der", options);
        if (buffer.isError(res) && possibleEnd)
          break;
        result.push(res);
      }
      return result;
    };
    DERNode.prototype._decodeStr = function decodeStr(buffer, tag2) {
      if (tag2 === "bitstr") {
        const unused = buffer.readUInt8();
        if (buffer.isError(unused))
          return unused;
        return { unused, data: buffer.raw() };
      } else if (tag2 === "bmpstr") {
        const raw = buffer.raw();
        if (raw.length % 2 === 1)
          return buffer.error("Decoding of string type: bmpstr length mismatch");
        let str = "";
        for (let i2 = 0; i2 < raw.length / 2; i2++) {
          str += String.fromCharCode(raw.readUInt16BE(i2 * 2));
        }
        return str;
      } else if (tag2 === "numstr") {
        const numstr = buffer.raw().toString("ascii");
        if (!this._isNumstr(numstr)) {
          return buffer.error("Decoding of string type: numstr unsupported characters");
        }
        return numstr;
      } else if (tag2 === "octstr") {
        return buffer.raw();
      } else if (tag2 === "objDesc") {
        return buffer.raw();
      } else if (tag2 === "printstr") {
        const printstr = buffer.raw().toString("ascii");
        if (!this._isPrintstr(printstr)) {
          return buffer.error("Decoding of string type: printstr unsupported characters");
        }
        return printstr;
      } else if (/str$/.test(tag2)) {
        return buffer.raw().toString();
      } else {
        return buffer.error("Decoding of string type: " + tag2 + " unsupported");
      }
    };
    DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
      let result;
      const identifiers = [];
      let ident = 0;
      let subident = 0;
      while (!buffer.isEmpty()) {
        subident = buffer.readUInt8();
        ident <<= 7;
        ident |= subident & 127;
        if ((subident & 128) === 0) {
          identifiers.push(ident);
          ident = 0;
        }
      }
      if (subident & 128)
        identifiers.push(ident);
      const first = identifiers[0] / 40 | 0;
      const second = identifiers[0] % 40;
      if (relative)
        result = identifiers;
      else
        result = [first, second].concat(identifiers.slice(1));
      if (values) {
        let tmp = values[result.join(" ")];
        if (tmp === void 0)
          tmp = values[result.join(".")];
        if (tmp !== void 0)
          result = tmp;
      }
      return result;
    };
    DERNode.prototype._decodeTime = function decodeTime(buffer, tag2) {
      const str = buffer.raw().toString();
      let year;
      let mon;
      let day;
      let hour;
      let min3;
      let sec2;
      if (tag2 === "gentime") {
        year = str.slice(0, 4) | 0;
        mon = str.slice(4, 6) | 0;
        day = str.slice(6, 8) | 0;
        hour = str.slice(8, 10) | 0;
        min3 = str.slice(10, 12) | 0;
        sec2 = str.slice(12, 14) | 0;
      } else if (tag2 === "utctime") {
        year = str.slice(0, 2) | 0;
        mon = str.slice(2, 4) | 0;
        day = str.slice(4, 6) | 0;
        hour = str.slice(6, 8) | 0;
        min3 = str.slice(8, 10) | 0;
        sec2 = str.slice(10, 12) | 0;
        if (year < 70)
          year = 2e3 + year;
        else
          year = 1900 + year;
      } else {
        return buffer.error("Decoding " + tag2 + " time is not supported yet");
      }
      return Date.UTC(year, mon - 1, day, hour, min3, sec2, 0);
    };
    DERNode.prototype._decodeNull = function decodeNull() {
      return null;
    };
    DERNode.prototype._decodeBool = function decodeBool(buffer) {
      const res = buffer.readUInt8();
      if (buffer.isError(res))
        return res;
      else
        return res !== 0;
    };
    DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
      const raw = buffer.raw();
      let res = new bignum(raw);
      if (values)
        res = values[res.toString(10)] || res;
      return res;
    };
    DERNode.prototype._use = function use(entity, obj) {
      if (typeof entity === "function")
        entity = entity(obj);
      return entity._getDecoder("der").tree;
    };
    function derDecodeTag(buf, fail) {
      let tag2 = buf.readUInt8(fail);
      if (buf.isError(tag2))
        return tag2;
      const cls = der.tagClass[tag2 >> 6];
      const primitive = (tag2 & 32) === 0;
      if ((tag2 & 31) === 31) {
        let oct2 = tag2;
        tag2 = 0;
        while ((oct2 & 128) === 128) {
          oct2 = buf.readUInt8(fail);
          if (buf.isError(oct2))
            return oct2;
          tag2 <<= 7;
          tag2 |= oct2 & 127;
        }
      } else {
        tag2 &= 31;
      }
      const tagStr = der.tag[tag2];
      return {
        cls,
        primitive,
        tag: tag2,
        tagStr
      };
    }
    function derDecodeLen(buf, primitive, fail) {
      let len = buf.readUInt8(fail);
      if (buf.isError(len))
        return len;
      if (!primitive && len === 128)
        return null;
      if ((len & 128) === 0) {
        return len;
      }
      const num = len & 127;
      if (num > 4)
        return buf.error("length octect is too long");
      len = 0;
      for (let i2 = 0; i2 < num; i2++) {
        len <<= 8;
        const j = buf.readUInt8(fail);
        if (buf.isError(j))
          return j;
        len |= j;
      }
      return len;
    }
  }
});

// node_modules/asn1.js/lib/asn1/decoders/pem.js
var require_pem2 = __commonJS({
  "node_modules/asn1.js/lib/asn1/decoders/pem.js"(exports, module) {
    "use strict";
    var inherits = require_inherits_browser();
    var Buffer11 = require_safer().Buffer;
    var DERDecoder = require_der3();
    function PEMDecoder(entity) {
      DERDecoder.call(this, entity);
      this.enc = "pem";
    }
    inherits(PEMDecoder, DERDecoder);
    module.exports = PEMDecoder;
    PEMDecoder.prototype.decode = function decode(data, options) {
      const lines = data.toString().split(/[\r\n]+/g);
      const label = options.label.toUpperCase();
      const re2 = /^-----(BEGIN|END) ([^-]+)-----$/;
      let start = -1;
      let end = -1;
      for (let i2 = 0; i2 < lines.length; i2++) {
        const match = lines[i2].match(re2);
        if (match === null)
          continue;
        if (match[2] !== label)
          continue;
        if (start === -1) {
          if (match[1] !== "BEGIN")
            break;
          start = i2;
        } else {
          if (match[1] !== "END")
            break;
          end = i2;
          break;
        }
      }
      if (start === -1 || end === -1)
        throw new Error("PEM section not found for: " + label);
      const base64 = lines.slice(start + 1, end).join("");
      base64.replace(/[^a-z0-9+/=]+/gi, "");
      const input = Buffer11.from(base64, "base64");
      return DERDecoder.prototype.decode.call(this, input, options);
    };
  }
});

// node_modules/asn1.js/lib/asn1/decoders/index.js
var require_decoders = __commonJS({
  "node_modules/asn1.js/lib/asn1/decoders/index.js"(exports) {
    "use strict";
    var decoders = exports;
    decoders.der = require_der3();
    decoders.pem = require_pem2();
  }
});

// node_modules/asn1.js/lib/asn1/api.js
var require_api = __commonJS({
  "node_modules/asn1.js/lib/asn1/api.js"(exports) {
    "use strict";
    var encoders = require_encoders();
    var decoders = require_decoders();
    var inherits = require_inherits_browser();
    var api = exports;
    api.define = function define2(name314, body) {
      return new Entity(name314, body);
    };
    function Entity(name314, body) {
      this.name = name314;
      this.body = body;
      this.decoders = {};
      this.encoders = {};
    }
    Entity.prototype._createNamed = function createNamed(Base) {
      const name314 = this.name;
      function Generated(entity) {
        this._initNamed(entity, name314);
      }
      inherits(Generated, Base);
      Generated.prototype._initNamed = function _initNamed(entity, name315) {
        Base.call(this, entity, name315);
      };
      return new Generated(this);
    };
    Entity.prototype._getDecoder = function _getDecoder(enc) {
      enc = enc || "der";
      if (!this.decoders.hasOwnProperty(enc))
        this.decoders[enc] = this._createNamed(decoders[enc]);
      return this.decoders[enc];
    };
    Entity.prototype.decode = function decode(data, enc, options) {
      return this._getDecoder(enc).decode(data, options);
    };
    Entity.prototype._getEncoder = function _getEncoder(enc) {
      enc = enc || "der";
      if (!this.encoders.hasOwnProperty(enc))
        this.encoders[enc] = this._createNamed(encoders[enc]);
      return this.encoders[enc];
    };
    Entity.prototype.encode = function encode(data, enc, reporter) {
      return this._getEncoder(enc).encode(data, reporter);
    };
  }
});

// node_modules/asn1.js/lib/asn1/base/index.js
var require_base = __commonJS({
  "node_modules/asn1.js/lib/asn1/base/index.js"(exports) {
    "use strict";
    var base = exports;
    base.Reporter = require_reporter().Reporter;
    base.DecoderBuffer = require_buffer3().DecoderBuffer;
    base.EncoderBuffer = require_buffer3().EncoderBuffer;
    base.Node = require_node();
  }
});

// node_modules/asn1.js/lib/asn1/constants/index.js
var require_constants = __commonJS({
  "node_modules/asn1.js/lib/asn1/constants/index.js"(exports) {
    "use strict";
    var constants = exports;
    constants._reverse = function reverse(map3) {
      const res = {};
      Object.keys(map3).forEach(function(key) {
        if ((key | 0) == key)
          key = key | 0;
        const value = map3[key];
        res[value] = key;
      });
      return res;
    };
    constants.der = require_der();
  }
});

// node_modules/asn1.js/lib/asn1.js
var require_asn1 = __commonJS({
  "node_modules/asn1.js/lib/asn1.js"(exports) {
    "use strict";
    var asn1 = exports;
    asn1.bignum = require_bn();
    asn1.define = require_api().define;
    asn1.base = require_base();
    asn1.constants = require_constants();
    asn1.decoders = require_decoders();
    asn1.encoders = require_encoders();
  }
});

// node_modules/ecdsa-secp256r1/index.js
var require_ecdsa_secp256r1 = __commonJS({
  "node_modules/ecdsa-secp256r1/index.js"(exports, module) {
    var crypto3 = require_crypto();
    var asn = require_asn1();
    var BN = require_bn();
    var curve = "prime256v1";
    var jwkCurve = "P-256";
    var curveLength = Math.ceil(256 / 8);
    function ECDSA({ x, y, d: d2 }) {
      if (x.length !== curveLength) throw new TypeError("Public EC Key point X of wrong length");
      if (y.length !== curveLength) throw new TypeError("Public EC Key point Y of wrong length");
      this.x = x;
      this.y = y;
      this.publicCodePoint = Buffer.concat([Buffer.from([4]), x, y]);
      if (d2) {
        this.d = d2;
        this.isPrivate = true;
      } else {
        this.isPrivate = false;
      }
    }
    ECDSA.generateKey = function generateKeys() {
      const ecdh = crypto3.createECDH(curve);
      ecdh.generateKeys();
      return new ECDSA({
        d: ecdh.getPrivateKey(),
        x: ecdh.getPublicKey().slice(1, curveLength + 1),
        y: ecdh.getPublicKey().slice(curveLength + 1)
      });
    };
    ECDSA.fromJWK = function fromJWK(jwk) {
      return new ECDSA({
        x: Buffer.from(jwk.x, "base64"),
        y: Buffer.from(jwk.y, "base64"),
        d: jwk.d ? Buffer.from(jwk.d, "base64") : false
      });
    };
    ECDSA.fromCompressedPublicKey = function fromCompressedPublicKey(compressedKey, format5 = "base64") {
      const key = crypto3.ECDH.convertKey(compressedKey, curve, format5, "base64", "uncompressed");
      const keyBuffer = Buffer.from(key, "base64");
      return new ECDSA({
        x: keyBuffer.slice(1, curveLength + 1),
        y: keyBuffer.slice(curveLength + 1)
      });
    };
    var ASN1 = {
      Rfc5915: asn.define("Rfc5915Key", function() {
        this.seq().obj(
          this.key("version").int(),
          this.key("privateKey").octstr(),
          this.key("parameters").optional().explicit(0).objid({
            "1 2 840 10045 3 1 7": "prime256v1",
            "1 3 132 0 10": "secp256k1",
            "1 3 132 0 34": "secp384r1",
            "1 3 132 0 35": "secp521r1"
          }),
          this.key("publicKey").optional().explicit(1).bitstr()
        );
      }),
      Pkcs8: asn.define("Pkcs8Key", function() {
        this.seq().obj(
          this.key("version").int(),
          this.key("algorithmIdentifier").seq().obj(
            this.key("privateKeyType").objid({
              "1 2 840 10045 2 1": "EC"
            }),
            this.key("parameters").objid({
              "1 2 840 10045 3 1 7": "prime256v1",
              "1 3 132 0 10": "secp256k1",
              "1 3 132 0 34": "secp384r1",
              "1 3 132 0 35": "secp521r1"
            })
          ),
          this.key("privateKey").octstr()
        );
      }),
      Spki: asn.define("SpkiKey", function() {
        this.seq().obj(
          this.key("algorithmIdentifier").seq().obj(
            this.key("publicKeyType").objid({
              "1 2 840 10045 2 1": "EC"
            }),
            this.key("parameters").objid({
              "1 2 840 10045 3 1 7": "prime256v1",
              "1 3 132 0 10": "secp256k1",
              "1 3 132 0 34": "secp384r1",
              "1 3 132 0 35": "secp521r1"
            })
          ),
          this.key("publicKey").bitstr()
        );
      }),
      EcdsaDerSig: asn.define("ECPrivateKey", function() {
        return this.seq().obj(this.key("r").int(), this.key("s").int());
      })
    };
    function hash(object) {
      return crypto3.createHash("sha256").update(typeof object === "string" ? object : JSON.stringify(object)).digest("base64");
    }
    ECDSA.prototype.sign = function sign4(message, format5 = "base64") {
      function removeDerEncoding(signatureBuffer) {
        const { r, s } = ASN1.EcdsaDerSig.decode(signatureBuffer, "der");
        return Buffer.concat([r.toBuffer(), s.toBuffer()]).toString(format5);
      }
      if (!this.isPrivate) throw new Error("EC Private Key needed to sign");
      const sign5 = crypto3.createSign("RSA-SHA256");
      sign5.write(message);
      sign5.end();
      return removeDerEncoding(sign5.sign(this.toPEM()));
    };
    ECDSA.prototype.hashAndSign = async function hashAndSign(message, format5 = "base64") {
      return this.sign(await hash(message), format5);
    };
    ECDSA.prototype.verify = function verify(message, signature2, format5 = "base64") {
      function signatureToDer(signatureBuffer2) {
        const r = new BN(signatureBuffer2.slice(0, curveLength).toString("hex"), 16, "be");
        const s = new BN(signatureBuffer2.slice(curveLength).toString("hex"), 16, "be");
        return ASN1.EcdsaDerSig.encode({ r, s }, "der");
      }
      const verify2 = crypto3.createVerify("RSA-SHA256");
      verify2.write(message);
      verify2.end();
      const key = this.isPrivate ? this.asPublic() : this;
      const signatureBuffer = Buffer.from(signature2, format5);
      return verify2.verify(
        key.toPEM(),
        signatureBuffer.length <= 2 * curveLength ? signatureToDer(signatureBuffer) : signatureBuffer,
        format5
      );
    };
    ECDSA.prototype.hashAndVerify = async function hashAndVerify(message, signature2, format5 = "base64") {
      return this.verify(await hash(message), signature2, format5);
    };
    ECDSA.prototype.asPublic = function asPublic() {
      if (!this.isPrivate) return this;
      return new ECDSA({ x: this.x, y: this.y });
    };
    ECDSA.prototype.toCompressedPublicKey = function toCompressedPublicKey(format5 = "base64") {
      return crypto3.ECDH.convertKey(this.publicCodePoint, curve, "base64", format5, "compressed");
    };
    ECDSA.prototype.toBuffer = function toBuffer(format5) {
      if (format5 === "pem") {
        return Buffer.from(this.toPEM(), "ascii");
      } else if (this.isPrivate) {
        let d2 = this.d;
        while (d2[0] === 0) d2 = d2.slice(1);
        return ASN1.Pkcs8.encode(
          {
            version: 0,
            algorithmIdentifier: {
              privateKeyType: "EC",
              parameters: curve
            },
            // Private key is RFC5915 minus curve
            privateKey: ASN1.Rfc5915.encode(
              {
                version: 1,
                privateKey: d2,
                publicKey: { data: this.publicCodePoint }
              },
              "der"
            )
          },
          "der"
        );
      } else {
        return ASN1.Spki.encode(
          {
            algorithmIdentifier: {
              publicKeyType: "EC",
              parameters: curve
            },
            publicKey: { data: this.publicCodePoint }
          },
          "der"
        );
      }
    };
    ECDSA.prototype.toPEM = function toPEM() {
      return this.isPrivate ? "-----BEGIN PRIVATE KEY-----\n" + this.toBuffer("pkcs8").toString("base64").match(/.{1,64}/g).join("\n") + "\n-----END PRIVATE KEY-----\n" : "-----BEGIN PUBLIC KEY-----\n" + this.toBuffer("spki").toString("base64").match(/.{1,64}/g).join("\n") + "\n-----END PUBLIC KEY-----\n";
    };
    ECDSA.prototype.toJWK = function toJWK() {
      function urlsafe(buffer) {
        return buffer.toString("base64").replace(/\+/g, "-").replace(/\//g, "_").replace(/=/g, "");
      }
      const jwk = {
        kty: "EC",
        crv: jwkCurve,
        x: urlsafe(this.x),
        y: urlsafe(this.y)
      };
      if (this.isPrivate) {
        let d2 = this.d;
        if (d2.length < curveLength) {
          const remaining = curveLength - d2.length;
          d2 = Buffer.concat([Buffer.alloc(remaining).fill(0), d2]);
        }
        jwk.d = urlsafe(d2);
      }
      return jwk;
    };
    module.exports = ECDSA;
  }
});

// node_modules/fraction.js/fraction.js
var require_fraction = __commonJS({
  "node_modules/fraction.js/fraction.js"(exports, module) {
    (function(root) {
      "use strict";
      var MAX_CYCLE_LEN = 2e3;
      var P4 = {
        "s": 1,
        "n": 0,
        "d": 1
      };
      function assign(n, s) {
        if (isNaN(n = parseInt(n, 10))) {
          throw InvalidParameter();
        }
        return n * s;
      }
      function newFraction(n, d2) {
        if (d2 === 0) {
          throw DivisionByZero();
        }
        var f = Object.create(Fraction3.prototype);
        f["s"] = n < 0 ? -1 : 1;
        n = n < 0 ? -n : n;
        var a = gcd2(n, d2);
        f["n"] = n / a;
        f["d"] = d2 / a;
        return f;
      }
      function factorize(num) {
        var factors = {};
        var n = num;
        var i2 = 2;
        var s = 4;
        while (s <= n) {
          while (n % i2 === 0) {
            n /= i2;
            factors[i2] = (factors[i2] || 0) + 1;
          }
          s += 1 + 2 * i2++;
        }
        if (n !== num) {
          if (n > 1)
            factors[n] = (factors[n] || 0) + 1;
        } else {
          factors[num] = (factors[num] || 0) + 1;
        }
        return factors;
      }
      var parse3 = function(p1, p2) {
        var n = 0, d2 = 1, s = 1;
        var v = 0, w = 0, x = 0, y = 1, z = 1;
        var A = 0, B = 1;
        var C = 1, D = 1;
        var N = 1e7;
        var M;
        if (p1 === void 0 || p1 === null) {
        } else if (p2 !== void 0) {
          n = p1;
          d2 = p2;
          s = n * d2;
          if (n % 1 !== 0 || d2 % 1 !== 0) {
            throw NonIntegerParameter();
          }
        } else
          switch (typeof p1) {
            case "object": {
              if ("d" in p1 && "n" in p1) {
                n = p1["n"];
                d2 = p1["d"];
                if ("s" in p1)
                  n *= p1["s"];
              } else if (0 in p1) {
                n = p1[0];
                if (1 in p1)
                  d2 = p1[1];
              } else {
                throw InvalidParameter();
              }
              s = n * d2;
              break;
            }
            case "number": {
              if (p1 < 0) {
                s = p1;
                p1 = -p1;
              }
              if (p1 % 1 === 0) {
                n = p1;
              } else if (p1 > 0) {
                if (p1 >= 1) {
                  z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));
                  p1 /= z;
                }
                while (B <= N && D <= N) {
                  M = (A + C) / (B + D);
                  if (p1 === M) {
                    if (B + D <= N) {
                      n = A + C;
                      d2 = B + D;
                    } else if (D > B) {
                      n = C;
                      d2 = D;
                    } else {
                      n = A;
                      d2 = B;
                    }
                    break;
                  } else {
                    if (p1 > M) {
                      A += C;
                      B += D;
                    } else {
                      C += A;
                      D += B;
                    }
                    if (B > N) {
                      n = C;
                      d2 = D;
                    } else {
                      n = A;
                      d2 = B;
                    }
                  }
                }
                n *= z;
              } else if (isNaN(p1) || isNaN(p2)) {
                d2 = n = NaN;
              }
              break;
            }
            case "string": {
              B = p1.match(/\d+|./g);
              if (B === null)
                throw InvalidParameter();
              if (B[A] === "-") {
                s = -1;
                A++;
              } else if (B[A] === "+") {
                A++;
              }
              if (B.length === A + 1) {
                w = assign(B[A++], s);
              } else if (B[A + 1] === "." || B[A] === ".") {
                if (B[A] !== ".") {
                  v = assign(B[A++], s);
                }
                A++;
                if (A + 1 === B.length || B[A + 1] === "(" && B[A + 3] === ")" || B[A + 1] === "'" && B[A + 3] === "'") {
                  w = assign(B[A], s);
                  y = Math.pow(10, B[A].length);
                  A++;
                }
                if (B[A] === "(" && B[A + 2] === ")" || B[A] === "'" && B[A + 2] === "'") {
                  x = assign(B[A + 1], s);
                  z = Math.pow(10, B[A + 1].length) - 1;
                  A += 3;
                }
              } else if (B[A + 1] === "/" || B[A + 1] === ":") {
                w = assign(B[A], s);
                y = assign(B[A + 2], 1);
                A += 3;
              } else if (B[A + 3] === "/" && B[A + 1] === " ") {
                v = assign(B[A], s);
                w = assign(B[A + 2], s);
                y = assign(B[A + 4], 1);
                A += 5;
              }
              if (B.length <= A) {
                d2 = y * z;
                s = /* void */
                n = x + d2 * v + z * w;
                break;
              }
            }
            default:
              throw InvalidParameter();
          }
        if (d2 === 0) {
          throw DivisionByZero();
        }
        P4["s"] = s < 0 ? -1 : 1;
        P4["n"] = Math.abs(n);
        P4["d"] = Math.abs(d2);
      };
      function modpow(b2, e3, m) {
        var r = 1;
        for (; e3 > 0; b2 = b2 * b2 % m, e3 >>= 1) {
          if (e3 & 1) {
            r = r * b2 % m;
          }
        }
        return r;
      }
      function cycleLen(n, d2) {
        for (; d2 % 2 === 0; d2 /= 2) {
        }
        for (; d2 % 5 === 0; d2 /= 5) {
        }
        if (d2 === 1)
          return 0;
        var rem = 10 % d2;
        var t = 1;
        for (; rem !== 1; t++) {
          rem = rem * 10 % d2;
          if (t > MAX_CYCLE_LEN)
            return 0;
        }
        return t;
      }
      function cycleStart(n, d2, len) {
        var rem1 = 1;
        var rem2 = modpow(10, len, d2);
        for (var t = 0; t < 300; t++) {
          if (rem1 === rem2)
            return t;
          rem1 = rem1 * 10 % d2;
          rem2 = rem2 * 10 % d2;
        }
        return 0;
      }
      function gcd2(a, b2) {
        if (!a)
          return b2;
        if (!b2)
          return a;
        while (1) {
          a %= b2;
          if (!a)
            return b2;
          b2 %= a;
          if (!b2)
            return a;
        }
      }
      ;
      function Fraction3(a, b2) {
        parse3(a, b2);
        if (this instanceof Fraction3) {
          a = gcd2(P4["d"], P4["n"]);
          this["s"] = P4["s"];
          this["n"] = P4["n"] / a;
          this["d"] = P4["d"] / a;
        } else {
          return newFraction(P4["s"] * P4["n"], P4["d"]);
        }
      }
      var DivisionByZero = function() {
        return new Error("Division by Zero");
      };
      var InvalidParameter = function() {
        return new Error("Invalid argument");
      };
      var NonIntegerParameter = function() {
        return new Error("Parameters must be integer");
      };
      Fraction3.prototype = {
        "s": 1,
        "n": 0,
        "d": 1,
        /**
         * Calculates the absolute value
         *
         * Ex: new Fraction(-4).abs() => 4
         **/
        "abs": function() {
          return newFraction(this["n"], this["d"]);
        },
        /**
         * Inverts the sign of the current fraction
         *
         * Ex: new Fraction(-4).neg() => 4
         **/
        "neg": function() {
          return newFraction(-this["s"] * this["n"], this["d"]);
        },
        /**
         * Adds two rational numbers
         *
         * Ex: new Fraction({n: 2, d: 3}).add("14.9") => 467 / 30
         **/
        "add": function(a, b2) {
          parse3(a, b2);
          return newFraction(
            this["s"] * this["n"] * P4["d"] + P4["s"] * this["d"] * P4["n"],
            this["d"] * P4["d"]
          );
        },
        /**
         * Subtracts two rational numbers
         *
         * Ex: new Fraction({n: 2, d: 3}).add("14.9") => -427 / 30
         **/
        "sub": function(a, b2) {
          parse3(a, b2);
          return newFraction(
            this["s"] * this["n"] * P4["d"] - P4["s"] * this["d"] * P4["n"],
            this["d"] * P4["d"]
          );
        },
        /**
         * Multiplies two rational numbers
         *
         * Ex: new Fraction("-17.(345)").mul(3) => 5776 / 111
         **/
        "mul": function(a, b2) {
          parse3(a, b2);
          return newFraction(
            this["s"] * P4["s"] * this["n"] * P4["n"],
            this["d"] * P4["d"]
          );
        },
        /**
         * Divides two rational numbers
         *
         * Ex: new Fraction("-17.(345)").inverse().div(3)
         **/
        "div": function(a, b2) {
          parse3(a, b2);
          return newFraction(
            this["s"] * P4["s"] * this["n"] * P4["d"],
            this["d"] * P4["n"]
          );
        },
        /**
         * Clones the actual object
         *
         * Ex: new Fraction("-17.(345)").clone()
         **/
        "clone": function() {
          return newFraction(this["s"] * this["n"], this["d"]);
        },
        /**
         * Calculates the modulo of two rational numbers - a more precise fmod
         *
         * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)
         **/
        "mod": function(a, b2) {
          if (isNaN(this["n"]) || isNaN(this["d"])) {
            return new Fraction3(NaN);
          }
          if (a === void 0) {
            return newFraction(this["s"] * this["n"] % this["d"], 1);
          }
          parse3(a, b2);
          if (0 === P4["n"] && 0 === this["d"]) {
            throw DivisionByZero();
          }
          return newFraction(
            this["s"] * (P4["d"] * this["n"]) % (P4["n"] * this["d"]),
            P4["d"] * this["d"]
          );
        },
        /**
         * Calculates the fractional gcd of two rational numbers
         *
         * Ex: new Fraction(5,8).gcd(3,7) => 1/56
         */
        "gcd": function(a, b2) {
          parse3(a, b2);
          return newFraction(gcd2(P4["n"], this["n"]) * gcd2(P4["d"], this["d"]), P4["d"] * this["d"]);
        },
        /**
         * Calculates the fractional lcm of two rational numbers
         *
         * Ex: new Fraction(5,8).lcm(3,7) => 15
         */
        "lcm": function(a, b2) {
          parse3(a, b2);
          if (P4["n"] === 0 && this["n"] === 0) {
            return newFraction(0, 1);
          }
          return newFraction(P4["n"] * this["n"], gcd2(P4["n"], this["n"]) * gcd2(P4["d"], this["d"]));
        },
        /**
         * Calculates the ceil of a rational number
         *
         * Ex: new Fraction('4.(3)').ceil() => (5 / 1)
         **/
        "ceil": function(places) {
          places = Math.pow(10, places || 0);
          if (isNaN(this["n"]) || isNaN(this["d"])) {
            return new Fraction3(NaN);
          }
          return newFraction(Math.ceil(places * this["s"] * this["n"] / this["d"]), places);
        },
        /**
         * Calculates the floor of a rational number
         *
         * Ex: new Fraction('4.(3)').floor() => (4 / 1)
         **/
        "floor": function(places) {
          places = Math.pow(10, places || 0);
          if (isNaN(this["n"]) || isNaN(this["d"])) {
            return new Fraction3(NaN);
          }
          return newFraction(Math.floor(places * this["s"] * this["n"] / this["d"]), places);
        },
        /**
         * Rounds a rational numbers
         *
         * Ex: new Fraction('4.(3)').round() => (4 / 1)
         **/
        "round": function(places) {
          places = Math.pow(10, places || 0);
          if (isNaN(this["n"]) || isNaN(this["d"])) {
            return new Fraction3(NaN);
          }
          return newFraction(Math.round(places * this["s"] * this["n"] / this["d"]), places);
        },
        /**
         * Gets the inverse of the fraction, means numerator and denominator are exchanged
         *
         * Ex: new Fraction([-3, 4]).inverse() => -4 / 3
         **/
        "inverse": function() {
          return newFraction(this["s"] * this["d"], this["n"]);
        },
        /**
         * Calculates the fraction to some rational exponent, if possible
         *
         * Ex: new Fraction(-1,2).pow(-3) => -8
         */
        "pow": function(a, b2) {
          parse3(a, b2);
          if (P4["d"] === 1) {
            if (P4["s"] < 0) {
              return newFraction(Math.pow(this["s"] * this["d"], P4["n"]), Math.pow(this["n"], P4["n"]));
            } else {
              return newFraction(Math.pow(this["s"] * this["n"], P4["n"]), Math.pow(this["d"], P4["n"]));
            }
          }
          if (this["s"] < 0) return null;
          var N = factorize(this["n"]);
          var D = factorize(this["d"]);
          var n = 1;
          var d2 = 1;
          for (var k in N) {
            if (k === "1") continue;
            if (k === "0") {
              n = 0;
              break;
            }
            N[k] *= P4["n"];
            if (N[k] % P4["d"] === 0) {
              N[k] /= P4["d"];
            } else return null;
            n *= Math.pow(k, N[k]);
          }
          for (var k in D) {
            if (k === "1") continue;
            D[k] *= P4["n"];
            if (D[k] % P4["d"] === 0) {
              D[k] /= P4["d"];
            } else return null;
            d2 *= Math.pow(k, D[k]);
          }
          if (P4["s"] < 0) {
            return newFraction(d2, n);
          }
          return newFraction(n, d2);
        },
        /**
         * Check if two rational numbers are the same
         *
         * Ex: new Fraction(19.6).equals([98, 5]);
         **/
        "equals": function(a, b2) {
          parse3(a, b2);
          return this["s"] * this["n"] * P4["d"] === P4["s"] * P4["n"] * this["d"];
        },
        /**
         * Check if two rational numbers are the same
         *
         * Ex: new Fraction(19.6).equals([98, 5]);
         **/
        "compare": function(a, b2) {
          parse3(a, b2);
          var t = this["s"] * this["n"] * P4["d"] - P4["s"] * P4["n"] * this["d"];
          return (0 < t) - (t < 0);
        },
        "simplify": function(eps) {
          if (isNaN(this["n"]) || isNaN(this["d"])) {
            return this;
          }
          eps = eps || 1e-3;
          var thisABS = this["abs"]();
          var cont = thisABS["toContinued"]();
          for (var i2 = 1; i2 < cont.length; i2++) {
            var s = newFraction(cont[i2 - 1], 1);
            for (var k = i2 - 2; k >= 0; k--) {
              s = s["inverse"]()["add"](cont[k]);
            }
            if (Math.abs(s["sub"](thisABS).valueOf()) < eps) {
              return s["mul"](this["s"]);
            }
          }
          return this;
        },
        /**
         * Check if two rational numbers are divisible
         *
         * Ex: new Fraction(19.6).divisible(1.5);
         */
        "divisible": function(a, b2) {
          parse3(a, b2);
          return !(!(P4["n"] * this["d"]) || this["n"] * P4["d"] % (P4["n"] * this["d"]));
        },
        /**
         * Returns a decimal representation of the fraction
         *
         * Ex: new Fraction("100.'91823'").valueOf() => 100.91823918239183
         **/
        "valueOf": function() {
          return this["s"] * this["n"] / this["d"];
        },
        /**
         * Returns a string-fraction representation of a Fraction object
         *
         * Ex: new Fraction("1.'3'").toFraction(true) => "4 1/3"
         **/
        "toFraction": function(excludeWhole) {
          var whole, str = "";
          var n = this["n"];
          var d2 = this["d"];
          if (this["s"] < 0) {
            str += "-";
          }
          if (d2 === 1) {
            str += n;
          } else {
            if (excludeWhole && (whole = Math.floor(n / d2)) > 0) {
              str += whole;
              str += " ";
              n %= d2;
            }
            str += n;
            str += "/";
            str += d2;
          }
          return str;
        },
        /**
         * Returns a latex representation of a Fraction object
         *
         * Ex: new Fraction("1.'3'").toLatex() => "\frac{4}{3}"
         **/
        "toLatex": function(excludeWhole) {
          var whole, str = "";
          var n = this["n"];
          var d2 = this["d"];
          if (this["s"] < 0) {
            str += "-";
          }
          if (d2 === 1) {
            str += n;
          } else {
            if (excludeWhole && (whole = Math.floor(n / d2)) > 0) {
              str += whole;
              n %= d2;
            }
            str += "\\frac{";
            str += n;
            str += "}{";
            str += d2;
            str += "}";
          }
          return str;
        },
        /**
         * Returns an array of continued fraction elements
         *
         * Ex: new Fraction("7/8").toContinued() => [0,1,7]
         */
        "toContinued": function() {
          var t;
          var a = this["n"];
          var b2 = this["d"];
          var res = [];
          if (isNaN(a) || isNaN(b2)) {
            return res;
          }
          do {
            res.push(Math.floor(a / b2));
            t = a % b2;
            a = b2;
            b2 = t;
          } while (a !== 1);
          return res;
        },
        /**
         * Creates a string representation of a fraction with all digits
         *
         * Ex: new Fraction("100.'91823'").toString() => "100.(91823)"
         **/
        "toString": function(dec) {
          var N = this["n"];
          var D = this["d"];
          if (isNaN(N) || isNaN(D)) {
            return "NaN";
          }
          dec = dec || 15;
          var cycLen = cycleLen(N, D);
          var cycOff = cycleStart(N, D, cycLen);
          var str = this["s"] < 0 ? "-" : "";
          str += N / D | 0;
          N %= D;
          N *= 10;
          if (N)
            str += ".";
          if (cycLen) {
            for (var i2 = cycOff; i2--; ) {
              str += N / D | 0;
              N %= D;
              N *= 10;
            }
            str += "(";
            for (var i2 = cycLen; i2--; ) {
              str += N / D | 0;
              N %= D;
              N *= 10;
            }
            str += ")";
          } else {
            for (var i2 = dec; N && i2--; ) {
              str += N / D | 0;
              N %= D;
              N *= 10;
            }
          }
          return str;
        }
      };
      if (typeof exports === "object") {
        Object.defineProperty(Fraction3, "__esModule", { "value": true });
        Fraction3["default"] = Fraction3;
        Fraction3["Fraction"] = Fraction3;
        module["exports"] = Fraction3;
      } else {
        root["Fraction"] = Fraction3;
      }
    })(exports);
  }
});

// node_modules/javascript-natural-sort/naturalSort.js
var require_naturalSort = __commonJS({
  "node_modules/javascript-natural-sort/naturalSort.js"(exports, module) {
    module.exports = function naturalSort2(a, b2) {
      "use strict";
      var re2 = /(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi, sre = /(^[ ]*|[ ]*$)/g, dre = /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/, hre = /^0x[0-9a-f]+$/i, ore = /^0/, i2 = function(s) {
        return naturalSort2.insensitive && ("" + s).toLowerCase() || "" + s;
      }, x = i2(a).replace(sre, "") || "", y = i2(b2).replace(sre, "") || "", xN = x.replace(re2, "\0$1\0").replace(/\0$/, "").replace(/^\0/, "").split("\0"), yN = y.replace(re2, "\0$1\0").replace(/\0$/, "").replace(/^\0/, "").split("\0"), xD = parseInt(x.match(hre), 16) || xN.length !== 1 && x.match(dre) && Date.parse(x), yD = parseInt(y.match(hre), 16) || xD && y.match(dre) && Date.parse(y) || null, oFxNcL, oFyNcL;
      if (yD) {
        if (xD < yD) {
          return -1;
        } else if (xD > yD) {
          return 1;
        }
      }
      for (var cLoc = 0, numS = Math.max(xN.length, yN.length); cLoc < numS; cLoc++) {
        oFxNcL = !(xN[cLoc] || "").match(ore) && parseFloat(xN[cLoc]) || xN[cLoc] || 0;
        oFyNcL = !(yN[cLoc] || "").match(ore) && parseFloat(yN[cLoc]) || yN[cLoc] || 0;
        if (isNaN(oFxNcL) !== isNaN(oFyNcL)) {
          return isNaN(oFxNcL) ? 1 : -1;
        } else if (typeof oFxNcL !== typeof oFyNcL) {
          oFxNcL += "";
          oFyNcL += "";
        }
        if (oFxNcL < oFyNcL) {
          return -1;
        }
        if (oFxNcL > oFyNcL) {
          return 1;
        }
      }
      return 0;
    };
  }
});

// node_modules/escape-latex/dist/index.js
var require_dist = __commonJS({
  "node_modules/escape-latex/dist/index.js"(exports, module) {
    "use strict";
    var _extends2 = Object.assign || function(target) {
      for (var i2 = 1; i2 < arguments.length; i2++) {
        var source = arguments[i2];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    var defaultEscapes = {
      "{": "\\{",
      "}": "\\}",
      "\\": "\\textbackslash{}",
      "#": "\\#",
      $: "\\$",
      "%": "\\%",
      "&": "\\&",
      "^": "\\textasciicircum{}",
      _: "\\_",
      "~": "\\textasciitilde{}"
    };
    var formatEscapes = {
      "–": "\\--",
      "—": "\\---",
      " ": "~",
      "	": "\\qquad{}",
      "\r\n": "\\newline{}",
      "\n": "\\newline{}"
    };
    var defaultEscapeMapFn = function defaultEscapeMapFn2(defaultEscapes2, formatEscapes2) {
      return _extends2({}, defaultEscapes2, formatEscapes2);
    };
    module.exports = function(str) {
      var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref$preserveFormatti = _ref.preserveFormatting, preserveFormatting = _ref$preserveFormatti === void 0 ? false : _ref$preserveFormatti, _ref$escapeMapFn = _ref.escapeMapFn, escapeMapFn = _ref$escapeMapFn === void 0 ? defaultEscapeMapFn : _ref$escapeMapFn;
      var runningStr = String(str);
      var result = "";
      var escapes = escapeMapFn(_extends2({}, defaultEscapes), preserveFormatting ? _extends2({}, formatEscapes) : {});
      var escapeKeys = Object.keys(escapes);
      var _loop = function _loop2() {
        var specialCharFound = false;
        escapeKeys.forEach(function(key, index2) {
          if (specialCharFound) {
            return;
          }
          if (runningStr.length >= key.length && runningStr.slice(0, key.length) === key) {
            result += escapes[escapeKeys[index2]];
            runningStr = runningStr.slice(key.length, runningStr.length);
            specialCharFound = true;
          }
        });
        if (!specialCharFound) {
          result += runningStr.slice(0, 1);
          runningStr = runningStr.slice(1, runningStr.length);
        }
      };
      while (runningStr) {
        _loop();
      }
      return result;
    };
  }
});

// node_modules/seedrandom/lib/alea.js
var require_alea = __commonJS({
  "node_modules/seedrandom/lib/alea.js"(exports, module) {
    (function(global2, module2, define2) {
      function Alea(seed) {
        var me = this, mash = Mash();
        me.next = function() {
          var t = 2091639 * me.s0 + me.c * 23283064365386963e-26;
          me.s0 = me.s1;
          me.s1 = me.s2;
          return me.s2 = t - (me.c = t | 0);
        };
        me.c = 1;
        me.s0 = mash(" ");
        me.s1 = mash(" ");
        me.s2 = mash(" ");
        me.s0 -= mash(seed);
        if (me.s0 < 0) {
          me.s0 += 1;
        }
        me.s1 -= mash(seed);
        if (me.s1 < 0) {
          me.s1 += 1;
        }
        me.s2 -= mash(seed);
        if (me.s2 < 0) {
          me.s2 += 1;
        }
        mash = null;
      }
      function copy(f, t) {
        t.c = f.c;
        t.s0 = f.s0;
        t.s1 = f.s1;
        t.s2 = f.s2;
        return t;
      }
      function impl(seed, opts) {
        var xg = new Alea(seed), state = opts && opts.state, prng = xg.next;
        prng.int32 = function() {
          return xg.next() * 4294967296 | 0;
        };
        prng.double = function() {
          return prng() + (prng() * 2097152 | 0) * 11102230246251565e-32;
        };
        prng.quick = prng;
        if (state) {
          if (typeof state == "object") copy(state, xg);
          prng.state = function() {
            return copy(xg, {});
          };
        }
        return prng;
      }
      function Mash() {
        var n = 4022871197;
        var mash = function(data) {
          data = String(data);
          for (var i2 = 0; i2 < data.length; i2++) {
            n += data.charCodeAt(i2);
            var h = 0.02519603282416938 * n;
            n = h >>> 0;
            h -= n;
            h *= n;
            n = h >>> 0;
            h -= n;
            n += h * 4294967296;
          }
          return (n >>> 0) * 23283064365386963e-26;
        };
        return mash;
      }
      if (module2 && module2.exports) {
        module2.exports = impl;
      } else if (define2 && define2.amd) {
        define2(function() {
          return impl;
        });
      } else {
        this.alea = impl;
      }
    })(
      exports,
      typeof module == "object" && module,
      // present in node.js
      typeof define == "function" && define
      // present with an AMD loader
    );
  }
});

// node_modules/seedrandom/lib/xor128.js
var require_xor128 = __commonJS({
  "node_modules/seedrandom/lib/xor128.js"(exports, module) {
    (function(global2, module2, define2) {
      function XorGen(seed) {
        var me = this, strseed = "";
        me.x = 0;
        me.y = 0;
        me.z = 0;
        me.w = 0;
        me.next = function() {
          var t = me.x ^ me.x << 11;
          me.x = me.y;
          me.y = me.z;
          me.z = me.w;
          return me.w ^= me.w >>> 19 ^ t ^ t >>> 8;
        };
        if (seed === (seed | 0)) {
          me.x = seed;
        } else {
          strseed += seed;
        }
        for (var k = 0; k < strseed.length + 64; k++) {
          me.x ^= strseed.charCodeAt(k) | 0;
          me.next();
        }
      }
      function copy(f, t) {
        t.x = f.x;
        t.y = f.y;
        t.z = f.z;
        t.w = f.w;
        return t;
      }
      function impl(seed, opts) {
        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {
          return (xg.next() >>> 0) / 4294967296;
        };
        prng.double = function() {
          do {
            var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 4294967296, result = (top + bot) / (1 << 21);
          } while (result === 0);
          return result;
        };
        prng.int32 = xg.next;
        prng.quick = prng;
        if (state) {
          if (typeof state == "object") copy(state, xg);
          prng.state = function() {
            return copy(xg, {});
          };
        }
        return prng;
      }
      if (module2 && module2.exports) {
        module2.exports = impl;
      } else if (define2 && define2.amd) {
        define2(function() {
          return impl;
        });
      } else {
        this.xor128 = impl;
      }
    })(
      exports,
      typeof module == "object" && module,
      // present in node.js
      typeof define == "function" && define
      // present with an AMD loader
    );
  }
});

// node_modules/seedrandom/lib/xorwow.js
var require_xorwow = __commonJS({
  "node_modules/seedrandom/lib/xorwow.js"(exports, module) {
    (function(global2, module2, define2) {
      function XorGen(seed) {
        var me = this, strseed = "";
        me.next = function() {
          var t = me.x ^ me.x >>> 2;
          me.x = me.y;
          me.y = me.z;
          me.z = me.w;
          me.w = me.v;
          return (me.d = me.d + 362437 | 0) + (me.v = me.v ^ me.v << 4 ^ (t ^ t << 1)) | 0;
        };
        me.x = 0;
        me.y = 0;
        me.z = 0;
        me.w = 0;
        me.v = 0;
        if (seed === (seed | 0)) {
          me.x = seed;
        } else {
          strseed += seed;
        }
        for (var k = 0; k < strseed.length + 64; k++) {
          me.x ^= strseed.charCodeAt(k) | 0;
          if (k == strseed.length) {
            me.d = me.x << 10 ^ me.x >>> 4;
          }
          me.next();
        }
      }
      function copy(f, t) {
        t.x = f.x;
        t.y = f.y;
        t.z = f.z;
        t.w = f.w;
        t.v = f.v;
        t.d = f.d;
        return t;
      }
      function impl(seed, opts) {
        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {
          return (xg.next() >>> 0) / 4294967296;
        };
        prng.double = function() {
          do {
            var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 4294967296, result = (top + bot) / (1 << 21);
          } while (result === 0);
          return result;
        };
        prng.int32 = xg.next;
        prng.quick = prng;
        if (state) {
          if (typeof state == "object") copy(state, xg);
          prng.state = function() {
            return copy(xg, {});
          };
        }
        return prng;
      }
      if (module2 && module2.exports) {
        module2.exports = impl;
      } else if (define2 && define2.amd) {
        define2(function() {
          return impl;
        });
      } else {
        this.xorwow = impl;
      }
    })(
      exports,
      typeof module == "object" && module,
      // present in node.js
      typeof define == "function" && define
      // present with an AMD loader
    );
  }
});

// node_modules/seedrandom/lib/xorshift7.js
var require_xorshift7 = __commonJS({
  "node_modules/seedrandom/lib/xorshift7.js"(exports, module) {
    (function(global2, module2, define2) {
      function XorGen(seed) {
        var me = this;
        me.next = function() {
          var X = me.x, i2 = me.i, t, v, w;
          t = X[i2];
          t ^= t >>> 7;
          v = t ^ t << 24;
          t = X[i2 + 1 & 7];
          v ^= t ^ t >>> 10;
          t = X[i2 + 3 & 7];
          v ^= t ^ t >>> 3;
          t = X[i2 + 4 & 7];
          v ^= t ^ t << 7;
          t = X[i2 + 7 & 7];
          t = t ^ t << 13;
          v ^= t ^ t << 9;
          X[i2] = v;
          me.i = i2 + 1 & 7;
          return v;
        };
        function init(me2, seed2) {
          var j, w, X = [];
          if (seed2 === (seed2 | 0)) {
            w = X[0] = seed2;
          } else {
            seed2 = "" + seed2;
            for (j = 0; j < seed2.length; ++j) {
              X[j & 7] = X[j & 7] << 15 ^ seed2.charCodeAt(j) + X[j + 1 & 7] << 13;
            }
          }
          while (X.length < 8) X.push(0);
          for (j = 0; j < 8 && X[j] === 0; ++j) ;
          if (j == 8) w = X[7] = -1;
          else w = X[j];
          me2.x = X;
          me2.i = 0;
          for (j = 256; j > 0; --j) {
            me2.next();
          }
        }
        init(me, seed);
      }
      function copy(f, t) {
        t.x = f.x.slice();
        t.i = f.i;
        return t;
      }
      function impl(seed, opts) {
        if (seed == null) seed = +/* @__PURE__ */ new Date();
        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {
          return (xg.next() >>> 0) / 4294967296;
        };
        prng.double = function() {
          do {
            var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 4294967296, result = (top + bot) / (1 << 21);
          } while (result === 0);
          return result;
        };
        prng.int32 = xg.next;
        prng.quick = prng;
        if (state) {
          if (state.x) copy(state, xg);
          prng.state = function() {
            return copy(xg, {});
          };
        }
        return prng;
      }
      if (module2 && module2.exports) {
        module2.exports = impl;
      } else if (define2 && define2.amd) {
        define2(function() {
          return impl;
        });
      } else {
        this.xorshift7 = impl;
      }
    })(
      exports,
      typeof module == "object" && module,
      // present in node.js
      typeof define == "function" && define
      // present with an AMD loader
    );
  }
});

// node_modules/seedrandom/lib/xor4096.js
var require_xor4096 = __commonJS({
  "node_modules/seedrandom/lib/xor4096.js"(exports, module) {
    (function(global2, module2, define2) {
      function XorGen(seed) {
        var me = this;
        me.next = function() {
          var w = me.w, X = me.X, i2 = me.i, t, v;
          me.w = w = w + 1640531527 | 0;
          v = X[i2 + 34 & 127];
          t = X[i2 = i2 + 1 & 127];
          v ^= v << 13;
          t ^= t << 17;
          v ^= v >>> 15;
          t ^= t >>> 12;
          v = X[i2] = v ^ t;
          me.i = i2;
          return v + (w ^ w >>> 16) | 0;
        };
        function init(me2, seed2) {
          var t, v, i2, j, w, X = [], limit = 128;
          if (seed2 === (seed2 | 0)) {
            v = seed2;
            seed2 = null;
          } else {
            seed2 = seed2 + "\0";
            v = 0;
            limit = Math.max(limit, seed2.length);
          }
          for (i2 = 0, j = -32; j < limit; ++j) {
            if (seed2) v ^= seed2.charCodeAt((j + 32) % seed2.length);
            if (j === 0) w = v;
            v ^= v << 10;
            v ^= v >>> 15;
            v ^= v << 4;
            v ^= v >>> 13;
            if (j >= 0) {
              w = w + 1640531527 | 0;
              t = X[j & 127] ^= v + w;
              i2 = 0 == t ? i2 + 1 : 0;
            }
          }
          if (i2 >= 128) {
            X[(seed2 && seed2.length || 0) & 127] = -1;
          }
          i2 = 127;
          for (j = 4 * 128; j > 0; --j) {
            v = X[i2 + 34 & 127];
            t = X[i2 = i2 + 1 & 127];
            v ^= v << 13;
            t ^= t << 17;
            v ^= v >>> 15;
            t ^= t >>> 12;
            X[i2] = v ^ t;
          }
          me2.w = w;
          me2.X = X;
          me2.i = i2;
        }
        init(me, seed);
      }
      function copy(f, t) {
        t.i = f.i;
        t.w = f.w;
        t.X = f.X.slice();
        return t;
      }
      ;
      function impl(seed, opts) {
        if (seed == null) seed = +/* @__PURE__ */ new Date();
        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {
          return (xg.next() >>> 0) / 4294967296;
        };
        prng.double = function() {
          do {
            var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 4294967296, result = (top + bot) / (1 << 21);
          } while (result === 0);
          return result;
        };
        prng.int32 = xg.next;
        prng.quick = prng;
        if (state) {
          if (state.X) copy(state, xg);
          prng.state = function() {
            return copy(xg, {});
          };
        }
        return prng;
      }
      if (module2 && module2.exports) {
        module2.exports = impl;
      } else if (define2 && define2.amd) {
        define2(function() {
          return impl;
        });
      } else {
        this.xor4096 = impl;
      }
    })(
      exports,
      // window object or global
      typeof module == "object" && module,
      // present in node.js
      typeof define == "function" && define
      // present with an AMD loader
    );
  }
});

// node_modules/seedrandom/lib/tychei.js
var require_tychei = __commonJS({
  "node_modules/seedrandom/lib/tychei.js"(exports, module) {
    (function(global2, module2, define2) {
      function XorGen(seed) {
        var me = this, strseed = "";
        me.next = function() {
          var b2 = me.b, c = me.c, d2 = me.d, a = me.a;
          b2 = b2 << 25 ^ b2 >>> 7 ^ c;
          c = c - d2 | 0;
          d2 = d2 << 24 ^ d2 >>> 8 ^ a;
          a = a - b2 | 0;
          me.b = b2 = b2 << 20 ^ b2 >>> 12 ^ c;
          me.c = c = c - d2 | 0;
          me.d = d2 << 16 ^ c >>> 16 ^ a;
          return me.a = a - b2 | 0;
        };
        me.a = 0;
        me.b = 0;
        me.c = 2654435769 | 0;
        me.d = 1367130551;
        if (seed === Math.floor(seed)) {
          me.a = seed / 4294967296 | 0;
          me.b = seed | 0;
        } else {
          strseed += seed;
        }
        for (var k = 0; k < strseed.length + 20; k++) {
          me.b ^= strseed.charCodeAt(k) | 0;
          me.next();
        }
      }
      function copy(f, t) {
        t.a = f.a;
        t.b = f.b;
        t.c = f.c;
        t.d = f.d;
        return t;
      }
      ;
      function impl(seed, opts) {
        var xg = new XorGen(seed), state = opts && opts.state, prng = function() {
          return (xg.next() >>> 0) / 4294967296;
        };
        prng.double = function() {
          do {
            var top = xg.next() >>> 11, bot = (xg.next() >>> 0) / 4294967296, result = (top + bot) / (1 << 21);
          } while (result === 0);
          return result;
        };
        prng.int32 = xg.next;
        prng.quick = prng;
        if (state) {
          if (typeof state == "object") copy(state, xg);
          prng.state = function() {
            return copy(xg, {});
          };
        }
        return prng;
      }
      if (module2 && module2.exports) {
        module2.exports = impl;
      } else if (define2 && define2.amd) {
        define2(function() {
          return impl;
        });
      } else {
        this.tychei = impl;
      }
    })(
      exports,
      typeof module == "object" && module,
      // present in node.js
      typeof define == "function" && define
      // present with an AMD loader
    );
  }
});

// node_modules/seedrandom/seedrandom.js
var require_seedrandom = __commonJS({
  "node_modules/seedrandom/seedrandom.js"(exports, module) {
    (function(global2, pool, math2) {
      var width = 256, chunks = 6, digits2 = 52, rngname = "random", startdenom = math2.pow(width, chunks), significance = math2.pow(2, digits2), overflow = significance * 2, mask = width - 1, nodecrypto;
      function seedrandom2(seed, options, callback) {
        var key = [];
        options = options == true ? { entropy: true } : options || {};
        var shortseed = mixkey(flatten3(
          options.entropy ? [seed, tostring(pool)] : seed == null ? autoseed() : seed,
          3
        ), key);
        var arc4 = new ARC4(key);
        var prng = function() {
          var n = arc4.g(chunks), d2 = startdenom, x = 0;
          while (n < significance) {
            n = (n + x) * width;
            d2 *= width;
            x = arc4.g(1);
          }
          while (n >= overflow) {
            n /= 2;
            d2 /= 2;
            x >>>= 1;
          }
          return (n + x) / d2;
        };
        prng.int32 = function() {
          return arc4.g(4) | 0;
        };
        prng.quick = function() {
          return arc4.g(4) / 4294967296;
        };
        prng.double = prng;
        mixkey(tostring(arc4.S), pool);
        return (options.pass || callback || function(prng2, seed2, is_math_call, state) {
          if (state) {
            if (state.S) {
              copy(state, arc4);
            }
            prng2.state = function() {
              return copy(arc4, {});
            };
          }
          if (is_math_call) {
            math2[rngname] = prng2;
            return seed2;
          } else return prng2;
        })(
          prng,
          shortseed,
          "global" in options ? options.global : this == math2,
          options.state
        );
      }
      function ARC4(key) {
        var t, keylen = key.length, me = this, i2 = 0, j = me.i = me.j = 0, s = me.S = [];
        if (!keylen) {
          key = [keylen++];
        }
        while (i2 < width) {
          s[i2] = i2++;
        }
        for (i2 = 0; i2 < width; i2++) {
          s[i2] = s[j = mask & j + key[i2 % keylen] + (t = s[i2])];
          s[j] = t;
        }
        (me.g = function(count2) {
          var t2, r = 0, i3 = me.i, j2 = me.j, s2 = me.S;
          while (count2--) {
            t2 = s2[i3 = mask & i3 + 1];
            r = r * width + s2[mask & (s2[i3] = s2[j2 = mask & j2 + t2]) + (s2[j2] = t2)];
          }
          me.i = i3;
          me.j = j2;
          return r;
        })(width);
      }
      function copy(f, t) {
        t.i = f.i;
        t.j = f.j;
        t.S = f.S.slice();
        return t;
      }
      ;
      function flatten3(obj, depth) {
        var result = [], typ = typeof obj, prop;
        if (depth && typ == "object") {
          for (prop in obj) {
            try {
              result.push(flatten3(obj[prop], depth - 1));
            } catch (e3) {
            }
          }
        }
        return result.length ? result : typ == "string" ? obj : obj + "\0";
      }
      function mixkey(seed, key) {
        var stringseed = seed + "", smear, j = 0;
        while (j < stringseed.length) {
          key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);
        }
        return tostring(key);
      }
      function autoseed() {
        try {
          var out;
          if (nodecrypto && (out = nodecrypto.randomBytes)) {
            out = out(width);
          } else {
            out = new Uint8Array(width);
            (global2.crypto || global2.msCrypto).getRandomValues(out);
          }
          return tostring(out);
        } catch (e3) {
          var browser = global2.navigator, plugins = browser && browser.plugins;
          return [+/* @__PURE__ */ new Date(), global2, plugins, global2.screen, tostring(pool)];
        }
      }
      function tostring(a) {
        return String.fromCharCode.apply(0, a);
      }
      mixkey(math2.random(), pool);
      if (typeof module == "object" && module.exports) {
        module.exports = seedrandom2;
        try {
          nodecrypto = require_crypto();
        } catch (ex) {
        }
      } else if (typeof define == "function" && define.amd) {
        define(function() {
          return seedrandom2;
        });
      } else {
        math2["seed" + rngname] = seedrandom2;
      }
    })(
      // global: `self` in browsers (including strict mode and web workers),
      // otherwise `this` in Node and other environments
      typeof self !== "undefined" ? self : exports,
      [],
      // pool: entropy pool starts empty
      Math
      // math: package containing random, pow, and seedrandom
    );
  }
});

// node_modules/seedrandom/index.js
var require_seedrandom2 = __commonJS({
  "node_modules/seedrandom/index.js"(exports, module) {
    var alea = require_alea();
    var xor128 = require_xor128();
    var xorwow = require_xorwow();
    var xorshift7 = require_xorshift7();
    var xor4096 = require_xor4096();
    var tychei = require_tychei();
    var sr = require_seedrandom();
    sr.alea = alea;
    sr.xor128 = xor128;
    sr.xorwow = xorwow;
    sr.xorshift7 = xorshift7;
    sr.xor4096 = xor4096;
    sr.tychei = tychei;
    module.exports = sr;
  }
});

// node_modules/tiny-emitter/index.js
var require_tiny_emitter = __commonJS({
  "node_modules/tiny-emitter/index.js"(exports, module) {
    function E() {
    }
    E.prototype = {
      on: function(name314, callback, ctx) {
        var e3 = this.e || (this.e = {});
        (e3[name314] || (e3[name314] = [])).push({
          fn: callback,
          ctx
        });
        return this;
      },
      once: function(name314, callback, ctx) {
        var self2 = this;
        function listener() {
          self2.off(name314, listener);
          callback.apply(ctx, arguments);
        }
        ;
        listener._ = callback;
        return this.on(name314, listener, ctx);
      },
      emit: function(name314) {
        var data = [].slice.call(arguments, 1);
        var evtArr = ((this.e || (this.e = {}))[name314] || []).slice();
        var i2 = 0;
        var len = evtArr.length;
        for (i2; i2 < len; i2++) {
          evtArr[i2].fn.apply(evtArr[i2].ctx, data);
        }
        return this;
      },
      off: function(name314, callback) {
        var e3 = this.e || (this.e = {});
        var evts = e3[name314];
        var liveEvents = [];
        if (evts && callback) {
          for (var i2 = 0, len = evts.length; i2 < len; i2++) {
            if (evts[i2].fn !== callback && evts[i2].fn._ !== callback)
              liveEvents.push(evts[i2]);
          }
        }
        liveEvents.length ? e3[name314] = liveEvents : delete e3[name314];
        return this;
      }
    };
    module.exports = E;
    module.exports.TinyEmitter = E;
  }
});

// node_modules/structured-headers/dist/types.js
var require_types = __commonJS({
  "node_modules/structured-headers/dist/types.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ByteSequence = void 0;
    var ByteSequence = class {
      constructor(base64Value) {
        this.base64Value = base64Value;
      }
      toBase64() {
        return this.base64Value;
      }
    };
    exports.ByteSequence = ByteSequence;
  }
});

// node_modules/structured-headers/dist/util.js
var require_util = __commonJS({
  "node_modules/structured-headers/dist/util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isByteSequence = exports.isInnerList = exports.isValidKeyStr = exports.isValidTokenStr = exports.isAscii = void 0;
    var asciiRe = /^[\x20-\x7E]*$/;
    var tokenRe = /^[a-zA-Z*][:/!#$%&'*+\-.^_`|~A-Za-z0-9]*$/;
    var keyRe = /^[a-z*][*\-_.a-z0-9]*$/;
    function isAscii(str) {
      return asciiRe.test(str);
    }
    exports.isAscii = isAscii;
    function isValidTokenStr(str) {
      return tokenRe.test(str);
    }
    exports.isValidTokenStr = isValidTokenStr;
    function isValidKeyStr(str) {
      return keyRe.test(str);
    }
    exports.isValidKeyStr = isValidKeyStr;
    function isInnerList(input) {
      return Array.isArray(input[0]);
    }
    exports.isInnerList = isInnerList;
    function isByteSequence(input) {
      return typeof input === "object" && "base64Value" in input;
    }
    exports.isByteSequence = isByteSequence;
  }
});

// node_modules/structured-headers/dist/token.js
var require_token = __commonJS({
  "node_modules/structured-headers/dist/token.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Token = void 0;
    var util_1 = require_util();
    var Token = class {
      constructor(value) {
        if (!(0, util_1.isValidTokenStr)(value)) {
          throw new TypeError("Invalid character in Token string. Tokens must start with *, A-Z and the rest of the string may only contain a-z, A-Z, 0-9, :/!#$%&'*+-.^_`|~");
        }
        this.value = value;
      }
      toString() {
        return this.value;
      }
    };
    exports.Token = Token;
  }
});

// node_modules/structured-headers/dist/serializer.js
var require_serializer = __commonJS({
  "node_modules/structured-headers/dist/serializer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.serializeKey = exports.serializeParameters = exports.serializeToken = exports.serializeByteSequence = exports.serializeBoolean = exports.serializeString = exports.serializeDecimal = exports.serializeInteger = exports.serializeBareItem = exports.serializeInnerList = exports.serializeItem = exports.serializeDictionary = exports.serializeList = exports.SerializeError = void 0;
    var types_1 = require_types();
    var token_1 = require_token();
    var util_1 = require_util();
    var SerializeError = class extends Error {
    };
    exports.SerializeError = SerializeError;
    function serializeList(input) {
      return input.map((value) => {
        if ((0, util_1.isInnerList)(value)) {
          return serializeInnerList(value);
        } else {
          return serializeItem(value);
        }
      }).join(", ");
    }
    exports.serializeList = serializeList;
    function serializeDictionary2(input) {
      return Array.from(input.entries()).map(([key, value]) => {
        let out = serializeKey(key);
        if (value[0] === true) {
          out += serializeParameters(value[1]);
        } else {
          out += "=";
          if ((0, util_1.isInnerList)(value)) {
            out += serializeInnerList(value);
          } else {
            out += serializeItem(value);
          }
        }
        return out;
      }).join(", ");
    }
    exports.serializeDictionary = serializeDictionary2;
    function serializeItem(input) {
      return serializeBareItem(input[0]) + serializeParameters(input[1]);
    }
    exports.serializeItem = serializeItem;
    function serializeInnerList(input) {
      return `(${input[0].map((value) => serializeItem(value)).join(" ")})${serializeParameters(input[1])}`;
    }
    exports.serializeInnerList = serializeInnerList;
    function serializeBareItem(input) {
      if (typeof input === "number") {
        if (Number.isInteger(input)) {
          return serializeInteger(input);
        }
        return serializeDecimal(input);
      }
      if (typeof input === "string") {
        return serializeString(input);
      }
      if (input instanceof token_1.Token) {
        return serializeToken(input);
      }
      if (input instanceof types_1.ByteSequence) {
        return serializeByteSequence(input);
      }
      if (typeof input === "boolean") {
        return serializeBoolean(input);
      }
      throw new SerializeError(`Cannot serialize values of type ${typeof input}`);
    }
    exports.serializeBareItem = serializeBareItem;
    function serializeInteger(input) {
      if (input < -999999999999999 || input > 999999999999999) {
        throw new SerializeError("Structured headers can only encode integers in the range range of -999,999,999,999,999 to 999,999,999,999,999 inclusive");
      }
      return input.toString();
    }
    exports.serializeInteger = serializeInteger;
    function serializeDecimal(input) {
      const out = input.toFixed(3).replace(/0+$/, "");
      const signifantDigits = out.split(".")[0].replace("-", "").length;
      if (signifantDigits > 12) {
        throw new SerializeError("Fractional numbers are not allowed to have more than 12 significant digits before the decimal point");
      }
      return out;
    }
    exports.serializeDecimal = serializeDecimal;
    function serializeString(input) {
      if (!(0, util_1.isAscii)(input)) {
        throw new SerializeError("Only ASCII strings may be serialized");
      }
      return `"${input.replace(/("|\\)/g, (v) => "\\" + v)}"`;
    }
    exports.serializeString = serializeString;
    function serializeBoolean(input) {
      return input ? "?1" : "?0";
    }
    exports.serializeBoolean = serializeBoolean;
    function serializeByteSequence(input) {
      return `:${input.toBase64()}:`;
    }
    exports.serializeByteSequence = serializeByteSequence;
    function serializeToken(input) {
      return input.toString();
    }
    exports.serializeToken = serializeToken;
    function serializeParameters(input) {
      return Array.from(input).map(([key, value]) => {
        let out = ";" + serializeKey(key);
        if (value !== true) {
          out += "=" + serializeBareItem(value);
        }
        return out;
      }).join("");
    }
    exports.serializeParameters = serializeParameters;
    function serializeKey(input) {
      if (!(0, util_1.isValidKeyStr)(input)) {
        throw new SerializeError("Keys in dictionaries must only contain lowercase letter, numbers, _-*. and must start with a letter or *");
      }
      return input;
    }
    exports.serializeKey = serializeKey;
  }
});

// node_modules/structured-headers/dist/parser.js
var require_parser = __commonJS({
  "node_modules/structured-headers/dist/parser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ParseError = exports.parseItem = exports.parseList = exports.parseDictionary = void 0;
    var types_1 = require_types();
    var token_1 = require_token();
    var util_1 = require_util();
    function parseDictionary2(input) {
      const parser2 = new Parser2(input);
      return parser2.parseDictionary();
    }
    exports.parseDictionary = parseDictionary2;
    function parseList(input) {
      const parser2 = new Parser2(input);
      return parser2.parseList();
    }
    exports.parseList = parseList;
    function parseItem(input) {
      const parser2 = new Parser2(input);
      return parser2.parseItem();
    }
    exports.parseItem = parseItem;
    var ParseError = class extends Error {
      constructor(position, message) {
        super(`Parse error: ${message} at offset ${position}`);
      }
    };
    exports.ParseError = ParseError;
    var Parser2 = class {
      constructor(input) {
        this.input = input;
        this.pos = 0;
      }
      parseDictionary() {
        this.skipWS();
        const dictionary = /* @__PURE__ */ new Map();
        while (!this.eof()) {
          const thisKey = this.parseKey();
          let member;
          if (this.lookChar() === "=") {
            this.pos++;
            member = this.parseItemOrInnerList();
          } else {
            member = [true, this.parseParameters()];
          }
          dictionary.set(thisKey, member);
          this.skipOWS();
          if (this.eof()) {
            return dictionary;
          }
          this.expectChar(",");
          this.pos++;
          this.skipOWS();
          if (this.eof()) {
            throw new ParseError(this.pos, "Dictionary contained a trailing comma");
          }
        }
        return dictionary;
      }
      parseList() {
        this.skipWS();
        const members = [];
        while (!this.eof()) {
          members.push(this.parseItemOrInnerList());
          this.skipOWS();
          if (this.eof()) {
            return members;
          }
          this.expectChar(",");
          this.pos++;
          this.skipOWS();
          if (this.eof()) {
            throw new ParseError(this.pos, "A list may not end with a trailing comma");
          }
        }
        return members;
      }
      parseItem(standaloneItem = true) {
        if (standaloneItem)
          this.skipWS();
        const result = [
          this.parseBareItem(),
          this.parseParameters()
        ];
        if (standaloneItem)
          this.checkTrail();
        return result;
      }
      parseItemOrInnerList() {
        if (this.lookChar() === "(") {
          return this.parseInnerList();
        } else {
          return this.parseItem(false);
        }
      }
      parseInnerList() {
        this.expectChar("(");
        this.pos++;
        const innerList = [];
        while (!this.eof()) {
          this.skipWS();
          if (this.lookChar() === ")") {
            this.pos++;
            return [
              innerList,
              this.parseParameters()
            ];
          }
          innerList.push(this.parseItem(false));
          const nextChar = this.lookChar();
          if (nextChar !== " " && nextChar !== ")") {
            throw new ParseError(this.pos, "Expected a whitespace or ) after every item in an inner list");
          }
        }
        throw new ParseError(this.pos, "Could not find end of inner list");
      }
      parseBareItem() {
        const char = this.lookChar();
        if (char.match(/^[-0-9]/)) {
          return this.parseIntegerOrDecimal();
        }
        if (char === '"') {
          return this.parseString();
        }
        if (char.match(/^[A-Za-z*]/)) {
          return this.parseToken();
        }
        if (char === ":") {
          return this.parseByteSequence();
        }
        if (char === "?") {
          return this.parseBoolean();
        }
        throw new ParseError(this.pos, "Unexpected input");
      }
      parseParameters() {
        const parameters = /* @__PURE__ */ new Map();
        while (!this.eof()) {
          const char = this.lookChar();
          if (char !== ";") {
            break;
          }
          this.pos++;
          this.skipWS();
          const key = this.parseKey();
          let value = true;
          if (this.lookChar() === "=") {
            this.pos++;
            value = this.parseBareItem();
          }
          parameters.set(key, value);
        }
        return parameters;
      }
      parseIntegerOrDecimal() {
        let type = "integer";
        let sign4 = 1;
        let inputNumber = "";
        if (this.lookChar() === "-") {
          sign4 = -1;
          this.pos++;
        }
        if (!isDigit(this.lookChar())) {
          throw new ParseError(this.pos, "Expected a digit (0-9)");
        }
        while (!this.eof()) {
          const char = this.getChar();
          if (isDigit(char)) {
            inputNumber += char;
          } else if (type === "integer" && char === ".") {
            if (inputNumber.length > 12) {
              throw new ParseError(this.pos, "Exceeded maximum decimal length");
            }
            inputNumber += ".";
            type = "decimal";
          } else {
            this.pos--;
            break;
          }
          if (type === "integer" && inputNumber.length > 15) {
            throw new ParseError(this.pos, "Exceeded maximum integer length");
          }
          if (type === "decimal" && inputNumber.length > 16) {
            throw new ParseError(this.pos, "Exceeded maximum decimal length");
          }
        }
        if (type === "integer") {
          return parseInt(inputNumber, 10) * sign4;
        } else {
          if (inputNumber.endsWith(".")) {
            throw new ParseError(this.pos, "Decimal cannot end on a period");
          }
          if (inputNumber.split(".")[1].length > 3) {
            throw new ParseError(this.pos, "Number of digits after the decimal point cannot exceed 3");
          }
          return parseFloat(inputNumber) * sign4;
        }
      }
      parseString() {
        let outputString = "";
        this.expectChar('"');
        this.pos++;
        while (!this.eof()) {
          const char = this.getChar();
          if (char === "\\") {
            if (this.eof()) {
              throw new ParseError(this.pos, "Unexpected end of input");
            }
            const nextChar = this.getChar();
            if (nextChar !== "\\" && nextChar !== '"') {
              throw new ParseError(this.pos, "A backslash must be followed by another backslash or double quote");
            }
            outputString += nextChar;
          } else if (char === '"') {
            return outputString;
          } else if (!(0, util_1.isAscii)(char)) {
            throw new Error("Strings must be in the ASCII range");
          } else {
            outputString += char;
          }
        }
        throw new ParseError(this.pos, "Unexpected end of input");
      }
      parseToken() {
        let outputString = "";
        while (!this.eof()) {
          const char = this.lookChar();
          if (!/^[:/!#$%&'*+\-.^_`|~A-Za-z0-9]$/.test(char)) {
            return new token_1.Token(outputString);
          }
          outputString += this.getChar();
        }
        return new token_1.Token(outputString);
      }
      parseByteSequence() {
        this.expectChar(":");
        this.pos++;
        const endPos = this.input.indexOf(":", this.pos);
        if (endPos === -1) {
          throw new ParseError(this.pos, 'Could not find a closing ":" character to mark end of Byte Sequence');
        }
        const b64Content = this.input.substring(this.pos, endPos);
        this.pos += b64Content.length + 1;
        if (!/^[A-Za-z0-9+/=]*$/.test(b64Content)) {
          throw new ParseError(this.pos, "ByteSequence does not contain a valid base64 string");
        }
        return new types_1.ByteSequence(b64Content);
      }
      parseBoolean() {
        this.expectChar("?");
        this.pos++;
        const char = this.getChar();
        if (char === "1") {
          return true;
        }
        if (char === "0") {
          return false;
        }
        throw new ParseError(this.pos, 'Unexpected character. Expected a "1" or a "0"');
      }
      parseKey() {
        if (!this.lookChar().match(/^[a-z*]/)) {
          throw new ParseError(this.pos, "A key must begin with an asterisk or letter (a-z)");
        }
        let outputString = "";
        while (!this.eof()) {
          const char = this.lookChar();
          if (!/^[a-z0-9_\-.*]$/.test(char)) {
            return outputString;
          }
          outputString += this.getChar();
        }
        return outputString;
      }
      /**
       * Looks at the next character without advancing the cursor.
       */
      lookChar() {
        return this.input[this.pos];
      }
      /**
       * Checks if the next character is 'char', and fail otherwise.
       */
      expectChar(char) {
        if (this.lookChar() !== char) {
          throw new ParseError(this.pos, `Expected ${char}`);
        }
      }
      getChar() {
        return this.input[this.pos++];
      }
      eof() {
        return this.pos >= this.input.length;
      }
      // Advances the pointer to skip all whitespace.
      skipOWS() {
        while (true) {
          const c = this.input.substr(this.pos, 1);
          if (c === " " || c === "	") {
            this.pos++;
          } else {
            break;
          }
        }
      }
      // Advances the pointer to skip all spaces
      skipWS() {
        while (this.lookChar() === " ") {
          this.pos++;
        }
      }
      // At the end of parsing, we need to make sure there are no bytes after the
      // header except whitespace.
      checkTrail() {
        this.skipWS();
        if (!this.eof()) {
          throw new ParseError(this.pos, "Unexpected characters at end of input");
        }
      }
    };
    exports.default = Parser2;
    var isDigitRegex = /^[0-9]$/;
    function isDigit(char) {
      return isDigitRegex.test(char);
    }
  }
});

// node_modules/structured-headers/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/structured-headers/dist/index.js"(exports) {
    "use strict";
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = exports && exports.__exportStar || function(m, exports2) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p)) __createBinding(exports2, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Token = void 0;
    __exportStar(require_serializer(), exports);
    __exportStar(require_parser(), exports);
    __exportStar(require_types(), exports);
    __exportStar(require_util(), exports);
    var token_1 = require_token();
    Object.defineProperty(exports, "Token", { enumerable: true, get: function() {
      return token_1.Token;
    } });
  }
});

// node_modules/signify-ts/dist/signify-ts.mjs
var import_libsodium_wrappers_sumo = __toESM(require_libsodium_wrappers(), 1);
var import_libsodium_wrappers_sumo2 = __toESM(require_libsodium_wrappers(), 1);
var import_buffer = __toESM(require_buffer(), 1);
var import_buffer2 = __toESM(require_buffer(), 1);
var import_libsodium_wrappers_sumo3 = __toESM(require_libsodium_wrappers(), 1);
var import_ecdsa_secp256r1 = __toESM(require_ecdsa_secp256r1(), 1);
var import_libsodium_wrappers_sumo4 = __toESM(require_libsodium_wrappers(), 1);
var import_buffer3 = __toESM(require_buffer(), 1);
var import_buffer4 = __toESM(require_buffer(), 1);
var import_libsodium_wrappers_sumo5 = __toESM(require_libsodium_wrappers(), 1);
var import_libsodium_wrappers_sumo6 = __toESM(require_libsodium_wrappers(), 1);

// node_modules/@noble/hashes/esm/crypto.js
var crypto2 = typeof globalThis === "object" && "crypto" in globalThis ? globalThis.crypto : void 0;

// node_modules/@noble/hashes/esm/utils.js
function isBytes(a) {
  return a instanceof Uint8Array || ArrayBuffer.isView(a) && a.constructor.name === "Uint8Array";
}
function anumber(n) {
  if (!Number.isSafeInteger(n) || n < 0)
    throw new Error("positive integer expected, got " + n);
}
function abytes(b2, ...lengths) {
  if (!isBytes(b2))
    throw new Error("Uint8Array expected");
  if (lengths.length > 0 && !lengths.includes(b2.length))
    throw new Error("Uint8Array expected of length " + lengths + ", got length=" + b2.length);
}
function aexists(instance, checkFinished = true) {
  if (instance.destroyed)
    throw new Error("Hash instance has been destroyed");
  if (checkFinished && instance.finished)
    throw new Error("Hash#digest() has already been called");
}
function aoutput(out, instance) {
  abytes(out);
  const min3 = instance.outputLen;
  if (out.length < min3) {
    throw new Error("digestInto() expects output buffer of length at least " + min3);
  }
}
function u8(arr) {
  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);
}
function u32(arr) {
  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
}
function clean(...arrays) {
  for (let i2 = 0; i2 < arrays.length; i2++) {
    arrays[i2].fill(0);
  }
}
function rotr(word, shift) {
  return word << 32 - shift | word >>> shift;
}
var isLE = (() => new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68)();
function byteSwap(word) {
  return word << 24 & 4278190080 | word << 8 & 16711680 | word >>> 8 & 65280 | word >>> 24 & 255;
}
var swap8IfBE = isLE ? (n) => n : (n) => byteSwap(n);
function byteSwap32(arr) {
  for (let i2 = 0; i2 < arr.length; i2++) {
    arr[i2] = byteSwap(arr[i2]);
  }
  return arr;
}
var swap32IfBE = isLE ? (u) => u : byteSwap32;
var hasHexBuiltin = (() => (
  // @ts-ignore
  typeof Uint8Array.from([]).toHex === "function" && typeof Uint8Array.fromHex === "function"
))();
var hexes = Array.from({ length: 256 }, (_, i2) => i2.toString(16).padStart(2, "0"));
function utf8ToBytes(str) {
  if (typeof str !== "string")
    throw new Error("string expected");
  return new Uint8Array(new TextEncoder().encode(str));
}
function toBytes(data) {
  if (typeof data === "string")
    data = utf8ToBytes(data);
  abytes(data);
  return data;
}
var Hash = class {
};
function createOptHasher(hashCons) {
  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
  const tmp = hashCons({});
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;
  hashC.create = (opts) => hashCons(opts);
  return hashC;
}
function createXOFer(hashCons) {
  const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();
  const tmp = hashCons({});
  hashC.outputLen = tmp.outputLen;
  hashC.blockLen = tmp.blockLen;
  hashC.create = (opts) => hashCons(opts);
  return hashC;
}

// node_modules/@noble/hashes/esm/_md.js
var SHA256_IV = Uint32Array.from([
  1779033703,
  3144134277,
  1013904242,
  2773480762,
  1359893119,
  2600822924,
  528734635,
  1541459225
]);
var SHA224_IV = Uint32Array.from([
  3238371032,
  914150663,
  812702999,
  4144912697,
  4290775857,
  1750603025,
  1694076839,
  3204075428
]);
var SHA384_IV = Uint32Array.from([
  3418070365,
  3238371032,
  1654270250,
  914150663,
  2438529370,
  812702999,
  355462360,
  4144912697,
  1731405415,
  4290775857,
  2394180231,
  1750603025,
  3675008525,
  1694076839,
  1203062813,
  3204075428
]);
var SHA512_IV = Uint32Array.from([
  1779033703,
  4089235720,
  3144134277,
  2227873595,
  1013904242,
  4271175723,
  2773480762,
  1595750129,
  1359893119,
  2917565137,
  2600822924,
  725511199,
  528734635,
  4215389547,
  1541459225,
  327033209
]);

// node_modules/@noble/hashes/esm/_u64.js
var U32_MASK64 = BigInt(2 ** 32 - 1);
var _32n = BigInt(32);
function fromBig(n, le = false) {
  if (le)
    return { h: Number(n & U32_MASK64), l: Number(n >> _32n & U32_MASK64) };
  return { h: Number(n >> _32n & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };
}
var rotrSH = (h, l, s) => h >>> s | l << 32 - s;
var rotrSL = (h, l, s) => h << 32 - s | l >>> s;
var rotrBH = (h, l, s) => h << 64 - s | l >>> s - 32;
var rotrBL = (h, l, s) => h >>> s - 32 | l << 64 - s;
var rotr32H = (_h, l) => l;
var rotr32L = (h, _l) => h;
function add(Ah, Al, Bh, Bl) {
  const l = (Al >>> 0) + (Bl >>> 0);
  return { h: Ah + Bh + (l / 2 ** 32 | 0) | 0, l: l | 0 };
}
var add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);
var add3H = (low, Ah, Bh, Ch) => Ah + Bh + Ch + (low / 2 ** 32 | 0) | 0;

// node_modules/@noble/hashes/esm/_blake.js
var BSIGMA = Uint8Array.from([
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  14,
  10,
  4,
  8,
  9,
  15,
  13,
  6,
  1,
  12,
  0,
  2,
  11,
  7,
  5,
  3,
  11,
  8,
  12,
  0,
  5,
  2,
  15,
  13,
  10,
  14,
  3,
  6,
  7,
  1,
  9,
  4,
  7,
  9,
  3,
  1,
  13,
  12,
  11,
  14,
  2,
  6,
  5,
  10,
  4,
  0,
  15,
  8,
  9,
  0,
  5,
  7,
  2,
  4,
  10,
  15,
  14,
  1,
  11,
  12,
  6,
  8,
  3,
  13,
  2,
  12,
  6,
  10,
  0,
  11,
  8,
  3,
  4,
  13,
  7,
  5,
  15,
  14,
  1,
  9,
  12,
  5,
  1,
  15,
  14,
  13,
  4,
  10,
  0,
  7,
  6,
  3,
  9,
  2,
  8,
  11,
  13,
  11,
  7,
  14,
  12,
  1,
  3,
  9,
  5,
  0,
  15,
  4,
  8,
  6,
  2,
  10,
  6,
  15,
  14,
  9,
  11,
  3,
  0,
  8,
  12,
  2,
  13,
  7,
  1,
  4,
  10,
  5,
  10,
  2,
  8,
  4,
  7,
  6,
  1,
  5,
  15,
  11,
  9,
  14,
  3,
  12,
  13,
  0,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  14,
  10,
  4,
  8,
  9,
  15,
  13,
  6,
  1,
  12,
  0,
  2,
  11,
  7,
  5,
  3,
  // Blake1, unused in others
  11,
  8,
  12,
  0,
  5,
  2,
  15,
  13,
  10,
  14,
  3,
  6,
  7,
  1,
  9,
  4,
  7,
  9,
  3,
  1,
  13,
  12,
  11,
  14,
  2,
  6,
  5,
  10,
  4,
  0,
  15,
  8,
  9,
  0,
  5,
  7,
  2,
  4,
  10,
  15,
  14,
  1,
  11,
  12,
  6,
  8,
  3,
  13,
  2,
  12,
  6,
  10,
  0,
  11,
  8,
  3,
  4,
  13,
  7,
  5,
  15,
  14,
  1,
  9
]);
function G1s(a, b2, c, d2, x) {
  a = a + b2 + x | 0;
  d2 = rotr(d2 ^ a, 16);
  c = c + d2 | 0;
  b2 = rotr(b2 ^ c, 12);
  return { a, b: b2, c, d: d2 };
}
function G2s(a, b2, c, d2, x) {
  a = a + b2 + x | 0;
  d2 = rotr(d2 ^ a, 8);
  c = c + d2 | 0;
  b2 = rotr(b2 ^ c, 7);
  return { a, b: b2, c, d: d2 };
}

// node_modules/@noble/hashes/esm/blake2.js
var B2B_IV = Uint32Array.from([
  4089235720,
  1779033703,
  2227873595,
  3144134277,
  4271175723,
  1013904242,
  1595750129,
  2773480762,
  2917565137,
  1359893119,
  725511199,
  2600822924,
  4215389547,
  528734635,
  327033209,
  1541459225
]);
var BBUF = new Uint32Array(32);
function G1b(a, b2, c, d2, msg, x) {
  const Xl = msg[x], Xh = msg[x + 1];
  let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1];
  let Bl = BBUF[2 * b2], Bh = BBUF[2 * b2 + 1];
  let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1];
  let Dl = BBUF[2 * d2], Dh = BBUF[2 * d2 + 1];
  let ll = add3L(Al, Bl, Xl);
  Ah = add3H(ll, Ah, Bh, Xh);
  Al = ll | 0;
  ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });
  ({ Dh, Dl } = { Dh: rotr32H(Dh, Dl), Dl: rotr32L(Dh, Dl) });
  ({ h: Ch, l: Cl } = add(Ch, Cl, Dh, Dl));
  ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });
  ({ Bh, Bl } = { Bh: rotrSH(Bh, Bl, 24), Bl: rotrSL(Bh, Bl, 24) });
  BBUF[2 * a] = Al, BBUF[2 * a + 1] = Ah;
  BBUF[2 * b2] = Bl, BBUF[2 * b2 + 1] = Bh;
  BBUF[2 * c] = Cl, BBUF[2 * c + 1] = Ch;
  BBUF[2 * d2] = Dl, BBUF[2 * d2 + 1] = Dh;
}
function G2b(a, b2, c, d2, msg, x) {
  const Xl = msg[x], Xh = msg[x + 1];
  let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1];
  let Bl = BBUF[2 * b2], Bh = BBUF[2 * b2 + 1];
  let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1];
  let Dl = BBUF[2 * d2], Dh = BBUF[2 * d2 + 1];
  let ll = add3L(Al, Bl, Xl);
  Ah = add3H(ll, Ah, Bh, Xh);
  Al = ll | 0;
  ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });
  ({ Dh, Dl } = { Dh: rotrSH(Dh, Dl, 16), Dl: rotrSL(Dh, Dl, 16) });
  ({ h: Ch, l: Cl } = add(Ch, Cl, Dh, Dl));
  ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });
  ({ Bh, Bl } = { Bh: rotrBH(Bh, Bl, 63), Bl: rotrBL(Bh, Bl, 63) });
  BBUF[2 * a] = Al, BBUF[2 * a + 1] = Ah;
  BBUF[2 * b2] = Bl, BBUF[2 * b2 + 1] = Bh;
  BBUF[2 * c] = Cl, BBUF[2 * c + 1] = Ch;
  BBUF[2 * d2] = Dl, BBUF[2 * d2 + 1] = Dh;
}
function checkBlake2Opts(outputLen, opts = {}, keyLen, saltLen, persLen) {
  anumber(keyLen);
  if (outputLen < 0 || outputLen > keyLen)
    throw new Error("outputLen bigger than keyLen");
  const { key, salt, personalization } = opts;
  if (key !== void 0 && (key.length < 1 || key.length > keyLen))
    throw new Error("key length must be undefined or 1.." + keyLen);
  if (salt !== void 0 && salt.length !== saltLen)
    throw new Error("salt must be undefined or " + saltLen);
  if (personalization !== void 0 && personalization.length !== persLen)
    throw new Error("personalization must be undefined or " + persLen);
}
var BLAKE2 = class extends Hash {
  constructor(blockLen, outputLen) {
    super();
    this.finished = false;
    this.destroyed = false;
    this.length = 0;
    this.pos = 0;
    anumber(blockLen);
    anumber(outputLen);
    this.blockLen = blockLen;
    this.outputLen = outputLen;
    this.buffer = new Uint8Array(blockLen);
    this.buffer32 = u32(this.buffer);
  }
  update(data) {
    aexists(this);
    data = toBytes(data);
    abytes(data);
    const { blockLen, buffer, buffer32 } = this;
    const len = data.length;
    const offset = data.byteOffset;
    const buf = data.buffer;
    for (let pos = 0; pos < len; ) {
      if (this.pos === blockLen) {
        swap32IfBE(buffer32);
        this.compress(buffer32, 0, false);
        swap32IfBE(buffer32);
        this.pos = 0;
      }
      const take = Math.min(blockLen - this.pos, len - pos);
      const dataOffset = offset + pos;
      if (take === blockLen && !(dataOffset % 4) && pos + take < len) {
        const data32 = new Uint32Array(buf, dataOffset, Math.floor((len - pos) / 4));
        swap32IfBE(data32);
        for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {
          this.length += blockLen;
          this.compress(data32, pos32, false);
        }
        swap32IfBE(data32);
        continue;
      }
      buffer.set(data.subarray(pos, pos + take), this.pos);
      this.pos += take;
      this.length += take;
      pos += take;
    }
    return this;
  }
  digestInto(out) {
    aexists(this);
    aoutput(out, this);
    const { pos, buffer32 } = this;
    this.finished = true;
    clean(this.buffer.subarray(pos));
    swap32IfBE(buffer32);
    this.compress(buffer32, 0, true);
    swap32IfBE(buffer32);
    const out32 = u32(out);
    this.get().forEach((v, i2) => out32[i2] = swap8IfBE(v));
  }
  digest() {
    const { buffer, outputLen } = this;
    this.digestInto(buffer);
    const res = buffer.slice(0, outputLen);
    this.destroy();
    return res;
  }
  _cloneInto(to2) {
    const { buffer, length, finished, destroyed, outputLen, pos } = this;
    to2 || (to2 = new this.constructor({ dkLen: outputLen }));
    to2.set(...this.get());
    to2.buffer.set(buffer);
    to2.destroyed = destroyed;
    to2.finished = finished;
    to2.length = length;
    to2.pos = pos;
    to2.outputLen = outputLen;
    return to2;
  }
  clone() {
    return this._cloneInto();
  }
};
var BLAKE2b = class extends BLAKE2 {
  constructor(opts = {}) {
    const olen = opts.dkLen === void 0 ? 64 : opts.dkLen;
    super(128, olen);
    this.v0l = B2B_IV[0] | 0;
    this.v0h = B2B_IV[1] | 0;
    this.v1l = B2B_IV[2] | 0;
    this.v1h = B2B_IV[3] | 0;
    this.v2l = B2B_IV[4] | 0;
    this.v2h = B2B_IV[5] | 0;
    this.v3l = B2B_IV[6] | 0;
    this.v3h = B2B_IV[7] | 0;
    this.v4l = B2B_IV[8] | 0;
    this.v4h = B2B_IV[9] | 0;
    this.v5l = B2B_IV[10] | 0;
    this.v5h = B2B_IV[11] | 0;
    this.v6l = B2B_IV[12] | 0;
    this.v6h = B2B_IV[13] | 0;
    this.v7l = B2B_IV[14] | 0;
    this.v7h = B2B_IV[15] | 0;
    checkBlake2Opts(olen, opts, 64, 16, 16);
    let { key, personalization, salt } = opts;
    let keyLength = 0;
    if (key !== void 0) {
      key = toBytes(key);
      keyLength = key.length;
    }
    this.v0l ^= this.outputLen | keyLength << 8 | 1 << 16 | 1 << 24;
    if (salt !== void 0) {
      salt = toBytes(salt);
      const slt = u32(salt);
      this.v4l ^= swap8IfBE(slt[0]);
      this.v4h ^= swap8IfBE(slt[1]);
      this.v5l ^= swap8IfBE(slt[2]);
      this.v5h ^= swap8IfBE(slt[3]);
    }
    if (personalization !== void 0) {
      personalization = toBytes(personalization);
      const pers = u32(personalization);
      this.v6l ^= swap8IfBE(pers[0]);
      this.v6h ^= swap8IfBE(pers[1]);
      this.v7l ^= swap8IfBE(pers[2]);
      this.v7h ^= swap8IfBE(pers[3]);
    }
    if (key !== void 0) {
      const tmp = new Uint8Array(this.blockLen);
      tmp.set(key);
      this.update(tmp);
    }
  }
  // prettier-ignore
  get() {
    let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;
    return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];
  }
  // prettier-ignore
  set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {
    this.v0l = v0l | 0;
    this.v0h = v0h | 0;
    this.v1l = v1l | 0;
    this.v1h = v1h | 0;
    this.v2l = v2l | 0;
    this.v2h = v2h | 0;
    this.v3l = v3l | 0;
    this.v3h = v3h | 0;
    this.v4l = v4l | 0;
    this.v4h = v4h | 0;
    this.v5l = v5l | 0;
    this.v5h = v5h | 0;
    this.v6l = v6l | 0;
    this.v6h = v6h | 0;
    this.v7l = v7l | 0;
    this.v7h = v7h | 0;
  }
  compress(msg, offset, isLast) {
    this.get().forEach((v, i2) => BBUF[i2] = v);
    BBUF.set(B2B_IV, 16);
    let { h, l } = fromBig(BigInt(this.length));
    BBUF[24] = B2B_IV[8] ^ l;
    BBUF[25] = B2B_IV[9] ^ h;
    if (isLast) {
      BBUF[28] = ~BBUF[28];
      BBUF[29] = ~BBUF[29];
    }
    let j = 0;
    const s = BSIGMA;
    for (let i2 = 0; i2 < 12; i2++) {
      G1b(0, 4, 8, 12, msg, offset + 2 * s[j++]);
      G2b(0, 4, 8, 12, msg, offset + 2 * s[j++]);
      G1b(1, 5, 9, 13, msg, offset + 2 * s[j++]);
      G2b(1, 5, 9, 13, msg, offset + 2 * s[j++]);
      G1b(2, 6, 10, 14, msg, offset + 2 * s[j++]);
      G2b(2, 6, 10, 14, msg, offset + 2 * s[j++]);
      G1b(3, 7, 11, 15, msg, offset + 2 * s[j++]);
      G2b(3, 7, 11, 15, msg, offset + 2 * s[j++]);
      G1b(0, 5, 10, 15, msg, offset + 2 * s[j++]);
      G2b(0, 5, 10, 15, msg, offset + 2 * s[j++]);
      G1b(1, 6, 11, 12, msg, offset + 2 * s[j++]);
      G2b(1, 6, 11, 12, msg, offset + 2 * s[j++]);
      G1b(2, 7, 8, 13, msg, offset + 2 * s[j++]);
      G2b(2, 7, 8, 13, msg, offset + 2 * s[j++]);
      G1b(3, 4, 9, 14, msg, offset + 2 * s[j++]);
      G2b(3, 4, 9, 14, msg, offset + 2 * s[j++]);
    }
    this.v0l ^= BBUF[0] ^ BBUF[16];
    this.v0h ^= BBUF[1] ^ BBUF[17];
    this.v1l ^= BBUF[2] ^ BBUF[18];
    this.v1h ^= BBUF[3] ^ BBUF[19];
    this.v2l ^= BBUF[4] ^ BBUF[20];
    this.v2h ^= BBUF[5] ^ BBUF[21];
    this.v3l ^= BBUF[6] ^ BBUF[22];
    this.v3h ^= BBUF[7] ^ BBUF[23];
    this.v4l ^= BBUF[8] ^ BBUF[24];
    this.v4h ^= BBUF[9] ^ BBUF[25];
    this.v5l ^= BBUF[10] ^ BBUF[26];
    this.v5h ^= BBUF[11] ^ BBUF[27];
    this.v6l ^= BBUF[12] ^ BBUF[28];
    this.v6h ^= BBUF[13] ^ BBUF[29];
    this.v7l ^= BBUF[14] ^ BBUF[30];
    this.v7h ^= BBUF[15] ^ BBUF[31];
    clean(BBUF);
  }
  destroy() {
    this.destroyed = true;
    clean(this.buffer32);
    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
};
var blake2b = createOptHasher((opts) => new BLAKE2b(opts));
function compress(s, offset, msg, rounds, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) {
  let j = 0;
  for (let i2 = 0; i2 < rounds; i2++) {
    ({ a: v0, b: v4, c: v8, d: v12 } = G1s(v0, v4, v8, v12, msg[offset + s[j++]]));
    ({ a: v0, b: v4, c: v8, d: v12 } = G2s(v0, v4, v8, v12, msg[offset + s[j++]]));
    ({ a: v1, b: v5, c: v9, d: v13 } = G1s(v1, v5, v9, v13, msg[offset + s[j++]]));
    ({ a: v1, b: v5, c: v9, d: v13 } = G2s(v1, v5, v9, v13, msg[offset + s[j++]]));
    ({ a: v2, b: v6, c: v10, d: v14 } = G1s(v2, v6, v10, v14, msg[offset + s[j++]]));
    ({ a: v2, b: v6, c: v10, d: v14 } = G2s(v2, v6, v10, v14, msg[offset + s[j++]]));
    ({ a: v3, b: v7, c: v11, d: v15 } = G1s(v3, v7, v11, v15, msg[offset + s[j++]]));
    ({ a: v3, b: v7, c: v11, d: v15 } = G2s(v3, v7, v11, v15, msg[offset + s[j++]]));
    ({ a: v0, b: v5, c: v10, d: v15 } = G1s(v0, v5, v10, v15, msg[offset + s[j++]]));
    ({ a: v0, b: v5, c: v10, d: v15 } = G2s(v0, v5, v10, v15, msg[offset + s[j++]]));
    ({ a: v1, b: v6, c: v11, d: v12 } = G1s(v1, v6, v11, v12, msg[offset + s[j++]]));
    ({ a: v1, b: v6, c: v11, d: v12 } = G2s(v1, v6, v11, v12, msg[offset + s[j++]]));
    ({ a: v2, b: v7, c: v8, d: v13 } = G1s(v2, v7, v8, v13, msg[offset + s[j++]]));
    ({ a: v2, b: v7, c: v8, d: v13 } = G2s(v2, v7, v8, v13, msg[offset + s[j++]]));
    ({ a: v3, b: v4, c: v9, d: v14 } = G1s(v3, v4, v9, v14, msg[offset + s[j++]]));
    ({ a: v3, b: v4, c: v9, d: v14 } = G2s(v3, v4, v9, v14, msg[offset + s[j++]]));
  }
  return { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 };
}
var B2S_IV = SHA256_IV;
var BLAKE2s = class extends BLAKE2 {
  constructor(opts = {}) {
    const olen = opts.dkLen === void 0 ? 32 : opts.dkLen;
    super(64, olen);
    this.v0 = B2S_IV[0] | 0;
    this.v1 = B2S_IV[1] | 0;
    this.v2 = B2S_IV[2] | 0;
    this.v3 = B2S_IV[3] | 0;
    this.v4 = B2S_IV[4] | 0;
    this.v5 = B2S_IV[5] | 0;
    this.v6 = B2S_IV[6] | 0;
    this.v7 = B2S_IV[7] | 0;
    checkBlake2Opts(olen, opts, 32, 8, 8);
    let { key, personalization, salt } = opts;
    let keyLength = 0;
    if (key !== void 0) {
      key = toBytes(key);
      keyLength = key.length;
    }
    this.v0 ^= this.outputLen | keyLength << 8 | 1 << 16 | 1 << 24;
    if (salt !== void 0) {
      salt = toBytes(salt);
      const slt = u32(salt);
      this.v4 ^= swap8IfBE(slt[0]);
      this.v5 ^= swap8IfBE(slt[1]);
    }
    if (personalization !== void 0) {
      personalization = toBytes(personalization);
      const pers = u32(personalization);
      this.v6 ^= swap8IfBE(pers[0]);
      this.v7 ^= swap8IfBE(pers[1]);
    }
    if (key !== void 0) {
      abytes(key);
      const tmp = new Uint8Array(this.blockLen);
      tmp.set(key);
      this.update(tmp);
    }
  }
  get() {
    const { v0, v1, v2, v3, v4, v5, v6, v7 } = this;
    return [v0, v1, v2, v3, v4, v5, v6, v7];
  }
  // prettier-ignore
  set(v0, v1, v2, v3, v4, v5, v6, v7) {
    this.v0 = v0 | 0;
    this.v1 = v1 | 0;
    this.v2 = v2 | 0;
    this.v3 = v3 | 0;
    this.v4 = v4 | 0;
    this.v5 = v5 | 0;
    this.v6 = v6 | 0;
    this.v7 = v7 | 0;
  }
  compress(msg, offset, isLast) {
    const { h, l } = fromBig(BigInt(this.length));
    const { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 } = compress(BSIGMA, offset, msg, 10, this.v0, this.v1, this.v2, this.v3, this.v4, this.v5, this.v6, this.v7, B2S_IV[0], B2S_IV[1], B2S_IV[2], B2S_IV[3], l ^ B2S_IV[4], h ^ B2S_IV[5], isLast ? ~B2S_IV[6] : B2S_IV[6], B2S_IV[7]);
    this.v0 ^= v0 ^ v8;
    this.v1 ^= v1 ^ v9;
    this.v2 ^= v2 ^ v10;
    this.v3 ^= v3 ^ v11;
    this.v4 ^= v4 ^ v12;
    this.v5 ^= v5 ^ v13;
    this.v6 ^= v6 ^ v14;
    this.v7 ^= v7 ^ v15;
  }
  destroy() {
    this.destroyed = true;
    clean(this.buffer32);
    this.set(0, 0, 0, 0, 0, 0, 0, 0);
  }
};
var blake2s = createOptHasher((opts) => new BLAKE2s(opts));

// node_modules/@noble/hashes/esm/blake3.js
var B3_Flags = {
  CHUNK_START: 1,
  CHUNK_END: 2,
  PARENT: 4,
  ROOT: 8,
  KEYED_HASH: 16,
  DERIVE_KEY_CONTEXT: 32,
  DERIVE_KEY_MATERIAL: 64
};
var B3_IV = SHA256_IV.slice();
var B3_SIGMA = (() => {
  const Id = Array.from({ length: 16 }, (_, i2) => i2);
  const permute = (arr) => [2, 6, 3, 10, 7, 0, 4, 13, 1, 11, 12, 5, 9, 14, 15, 8].map((i2) => arr[i2]);
  const res = [];
  for (let i2 = 0, v = Id; i2 < 7; i2++, v = permute(v))
    res.push(...v);
  return Uint8Array.from(res);
})();
var BLAKE3 = class _BLAKE3 extends BLAKE2 {
  constructor(opts = {}, flags = 0) {
    super(64, opts.dkLen === void 0 ? 32 : opts.dkLen);
    this.chunkPos = 0;
    this.chunksDone = 0;
    this.flags = 0 | 0;
    this.stack = [];
    this.posOut = 0;
    this.bufferOut32 = new Uint32Array(16);
    this.chunkOut = 0;
    this.enableXOF = true;
    const { key, context } = opts;
    const hasContext = context !== void 0;
    if (key !== void 0) {
      if (hasContext)
        throw new Error('Only "key" or "context" can be specified at same time');
      const k = toBytes(key).slice();
      abytes(k, 32);
      this.IV = u32(k);
      swap32IfBE(this.IV);
      this.flags = flags | B3_Flags.KEYED_HASH;
    } else if (hasContext) {
      const ctx = toBytes(context);
      const contextKey = new _BLAKE3({ dkLen: 32 }, B3_Flags.DERIVE_KEY_CONTEXT).update(ctx).digest();
      this.IV = u32(contextKey);
      swap32IfBE(this.IV);
      this.flags = flags | B3_Flags.DERIVE_KEY_MATERIAL;
    } else {
      this.IV = B3_IV.slice();
      this.flags = flags;
    }
    this.state = this.IV.slice();
    this.bufferOut = u8(this.bufferOut32);
  }
  // Unused
  get() {
    return [];
  }
  set() {
  }
  b2Compress(counter, flags, buf, bufPos = 0) {
    const { state: s, pos } = this;
    const { h, l } = fromBig(BigInt(counter), true);
    const { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 } = compress(B3_SIGMA, bufPos, buf, 7, s[0], s[1], s[2], s[3], s[4], s[5], s[6], s[7], B3_IV[0], B3_IV[1], B3_IV[2], B3_IV[3], h, l, pos, flags);
    s[0] = v0 ^ v8;
    s[1] = v1 ^ v9;
    s[2] = v2 ^ v10;
    s[3] = v3 ^ v11;
    s[4] = v4 ^ v12;
    s[5] = v5 ^ v13;
    s[6] = v6 ^ v14;
    s[7] = v7 ^ v15;
  }
  compress(buf, bufPos = 0, isLast = false) {
    let flags = this.flags;
    if (!this.chunkPos)
      flags |= B3_Flags.CHUNK_START;
    if (this.chunkPos === 15 || isLast)
      flags |= B3_Flags.CHUNK_END;
    if (!isLast)
      this.pos = this.blockLen;
    this.b2Compress(this.chunksDone, flags, buf, bufPos);
    this.chunkPos += 1;
    if (this.chunkPos === 16 || isLast) {
      let chunk = this.state;
      this.state = this.IV.slice();
      for (let last, chunks = this.chunksDone + 1; isLast || !(chunks & 1); chunks >>= 1) {
        if (!(last = this.stack.pop()))
          break;
        this.buffer32.set(last, 0);
        this.buffer32.set(chunk, 8);
        this.pos = this.blockLen;
        this.b2Compress(0, this.flags | B3_Flags.PARENT, this.buffer32, 0);
        chunk = this.state;
        this.state = this.IV.slice();
      }
      this.chunksDone++;
      this.chunkPos = 0;
      this.stack.push(chunk);
    }
    this.pos = 0;
  }
  _cloneInto(to2) {
    to2 = super._cloneInto(to2);
    const { IV, flags, state, chunkPos, posOut, chunkOut, stack, chunksDone } = this;
    to2.state.set(state.slice());
    to2.stack = stack.map((i2) => Uint32Array.from(i2));
    to2.IV.set(IV);
    to2.flags = flags;
    to2.chunkPos = chunkPos;
    to2.chunksDone = chunksDone;
    to2.posOut = posOut;
    to2.chunkOut = chunkOut;
    to2.enableXOF = this.enableXOF;
    to2.bufferOut32.set(this.bufferOut32);
    return to2;
  }
  destroy() {
    this.destroyed = true;
    clean(this.state, this.buffer32, this.IV, this.bufferOut32);
    clean(...this.stack);
  }
  // Same as b2Compress, but doesn't modify state and returns 16 u32 array (instead of 8)
  b2CompressOut() {
    const { state: s, pos, flags, buffer32, bufferOut32: out32 } = this;
    const { h, l } = fromBig(BigInt(this.chunkOut++));
    swap32IfBE(buffer32);
    const { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 } = compress(B3_SIGMA, 0, buffer32, 7, s[0], s[1], s[2], s[3], s[4], s[5], s[6], s[7], B3_IV[0], B3_IV[1], B3_IV[2], B3_IV[3], l, h, pos, flags);
    out32[0] = v0 ^ v8;
    out32[1] = v1 ^ v9;
    out32[2] = v2 ^ v10;
    out32[3] = v3 ^ v11;
    out32[4] = v4 ^ v12;
    out32[5] = v5 ^ v13;
    out32[6] = v6 ^ v14;
    out32[7] = v7 ^ v15;
    out32[8] = s[0] ^ v8;
    out32[9] = s[1] ^ v9;
    out32[10] = s[2] ^ v10;
    out32[11] = s[3] ^ v11;
    out32[12] = s[4] ^ v12;
    out32[13] = s[5] ^ v13;
    out32[14] = s[6] ^ v14;
    out32[15] = s[7] ^ v15;
    swap32IfBE(buffer32);
    swap32IfBE(out32);
    this.posOut = 0;
  }
  finish() {
    if (this.finished)
      return;
    this.finished = true;
    clean(this.buffer.subarray(this.pos));
    let flags = this.flags | B3_Flags.ROOT;
    if (this.stack.length) {
      flags |= B3_Flags.PARENT;
      swap32IfBE(this.buffer32);
      this.compress(this.buffer32, 0, true);
      swap32IfBE(this.buffer32);
      this.chunksDone = 0;
      this.pos = this.blockLen;
    } else {
      flags |= (!this.chunkPos ? B3_Flags.CHUNK_START : 0) | B3_Flags.CHUNK_END;
    }
    this.flags = flags;
    this.b2CompressOut();
  }
  writeInto(out) {
    aexists(this, false);
    abytes(out);
    this.finish();
    const { blockLen, bufferOut } = this;
    for (let pos = 0, len = out.length; pos < len; ) {
      if (this.posOut >= blockLen)
        this.b2CompressOut();
      const take = Math.min(blockLen - this.posOut, len - pos);
      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);
      this.posOut += take;
      pos += take;
    }
    return out;
  }
  xofInto(out) {
    if (!this.enableXOF)
      throw new Error("XOF is not possible after digest call");
    return this.writeInto(out);
  }
  xof(bytes) {
    anumber(bytes);
    return this.xofInto(new Uint8Array(bytes));
  }
  digestInto(out) {
    aoutput(out, this);
    if (this.finished)
      throw new Error("digest() was already called");
    this.enableXOF = false;
    this.writeInto(out);
    this.destroy();
    return out;
  }
  digest() {
    return this.digestInto(new Uint8Array(this.outputLen));
  }
};
var blake3 = createXOFer((opts) => new BLAKE3(opts));

// node_modules/signify-ts/dist/signify-ts.mjs
var import_buffer5 = __toESM(require_buffer(), 1);
var import_buffer6 = __toESM(require_buffer(), 1);
var import_buffer7 = __toESM(require_buffer(), 1);

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e3 = 1; e3 < arguments.length; e3++) {
      var t = arguments[e3];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}

// node_modules/mathjs/lib/esm/core/config.js
var DEFAULT_CONFIG = {
  // minimum relative difference between two compared values,
  // used by all comparison functions
  epsilon: 1e-12,
  // type of default matrix output. Choose 'matrix' (default) or 'array'
  matrix: "Matrix",
  // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction
  number: "number",
  // number of significant digits in BigNumbers
  precision: 64,
  // predictable output type of functions. When true, output type depends only
  // on the input types. When false (default), output type can vary depending
  // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when
  // predictable is false, and returns `NaN` when true.
  predictable: false,
  // random seed for seeded pseudo random number generation
  // null = randomly seed
  randomSeed: null
};

// node_modules/mathjs/lib/esm/utils/is.js
function isNumber(x) {
  return typeof x === "number";
}
function isBigNumber(x) {
  if (!x || typeof x !== "object" || typeof x.constructor !== "function") {
    return false;
  }
  if (x.isBigNumber === true && typeof x.constructor.prototype === "object" && x.constructor.prototype.isBigNumber === true) {
    return true;
  }
  if (typeof x.constructor.isDecimal === "function" && x.constructor.isDecimal(x) === true) {
    return true;
  }
  return false;
}
function isComplex(x) {
  return x && typeof x === "object" && Object.getPrototypeOf(x).isComplex === true || false;
}
function isFraction(x) {
  return x && typeof x === "object" && Object.getPrototypeOf(x).isFraction === true || false;
}
function isUnit(x) {
  return x && x.constructor.prototype.isUnit === true || false;
}
function isString(x) {
  return typeof x === "string";
}
var isArray = Array.isArray;
function isMatrix(x) {
  return x && x.constructor.prototype.isMatrix === true || false;
}
function isCollection(x) {
  return Array.isArray(x) || isMatrix(x);
}
function isDenseMatrix(x) {
  return x && x.isDenseMatrix && x.constructor.prototype.isMatrix === true || false;
}
function isSparseMatrix(x) {
  return x && x.isSparseMatrix && x.constructor.prototype.isMatrix === true || false;
}
function isRange(x) {
  return x && x.constructor.prototype.isRange === true || false;
}
function isIndex(x) {
  return x && x.constructor.prototype.isIndex === true || false;
}
function isBoolean(x) {
  return typeof x === "boolean";
}
function isResultSet(x) {
  return x && x.constructor.prototype.isResultSet === true || false;
}
function isHelp(x) {
  return x && x.constructor.prototype.isHelp === true || false;
}
function isFunction(x) {
  return typeof x === "function";
}
function isDate(x) {
  return x instanceof Date;
}
function isRegExp(x) {
  return x instanceof RegExp;
}
function isObject(x) {
  return !!(x && typeof x === "object" && x.constructor === Object && !isComplex(x) && !isFraction(x));
}
function isNull(x) {
  return x === null;
}
function isUndefined(x) {
  return x === void 0;
}
function isAccessorNode(x) {
  return x && x.isAccessorNode === true && x.constructor.prototype.isNode === true || false;
}
function isArrayNode(x) {
  return x && x.isArrayNode === true && x.constructor.prototype.isNode === true || false;
}
function isAssignmentNode(x) {
  return x && x.isAssignmentNode === true && x.constructor.prototype.isNode === true || false;
}
function isBlockNode(x) {
  return x && x.isBlockNode === true && x.constructor.prototype.isNode === true || false;
}
function isConditionalNode(x) {
  return x && x.isConditionalNode === true && x.constructor.prototype.isNode === true || false;
}
function isConstantNode(x) {
  return x && x.isConstantNode === true && x.constructor.prototype.isNode === true || false;
}
function rule2Node(node) {
  return isConstantNode(node) || isOperatorNode(node) && node.args.length === 1 && isConstantNode(node.args[0]) && "-+~".includes(node.op);
}
function isFunctionAssignmentNode(x) {
  return x && x.isFunctionAssignmentNode === true && x.constructor.prototype.isNode === true || false;
}
function isFunctionNode(x) {
  return x && x.isFunctionNode === true && x.constructor.prototype.isNode === true || false;
}
function isIndexNode(x) {
  return x && x.isIndexNode === true && x.constructor.prototype.isNode === true || false;
}
function isNode(x) {
  return x && x.isNode === true && x.constructor.prototype.isNode === true || false;
}
function isObjectNode(x) {
  return x && x.isObjectNode === true && x.constructor.prototype.isNode === true || false;
}
function isOperatorNode(x) {
  return x && x.isOperatorNode === true && x.constructor.prototype.isNode === true || false;
}
function isParenthesisNode(x) {
  return x && x.isParenthesisNode === true && x.constructor.prototype.isNode === true || false;
}
function isRangeNode(x) {
  return x && x.isRangeNode === true && x.constructor.prototype.isNode === true || false;
}
function isRelationalNode(x) {
  return x && x.isRelationalNode === true && x.constructor.prototype.isNode === true || false;
}
function isSymbolNode(x) {
  return x && x.isSymbolNode === true && x.constructor.prototype.isNode === true || false;
}
function isChain(x) {
  return x && x.constructor.prototype.isChain === true || false;
}
function typeOf(x) {
  var t = typeof x;
  if (t === "object") {
    if (x === null) return "null";
    if (isBigNumber(x)) return "BigNumber";
    if (x.constructor && x.constructor.name) return x.constructor.name;
    return "Object";
  }
  return t;
}

// node_modules/mathjs/lib/esm/utils/object.js
function clone(x) {
  var type = typeof x;
  if (type === "number" || type === "string" || type === "boolean" || x === null || x === void 0) {
    return x;
  }
  if (typeof x.clone === "function") {
    return x.clone();
  }
  if (Array.isArray(x)) {
    return x.map(function(value) {
      return clone(value);
    });
  }
  if (x instanceof Date) return new Date(x.valueOf());
  if (isBigNumber(x)) return x;
  if (isObject(x)) {
    return mapObject(x, clone);
  }
  throw new TypeError("Cannot clone: unknown type of value (value: ".concat(x, ")"));
}
function mapObject(object, callback) {
  var clone5 = {};
  for (var key in object) {
    if (hasOwnProperty(object, key)) {
      clone5[key] = callback(object[key]);
    }
  }
  return clone5;
}
function extend(a, b2) {
  for (var prop in b2) {
    if (hasOwnProperty(b2, prop)) {
      a[prop] = b2[prop];
    }
  }
  return a;
}
function deepStrictEqual(a, b2) {
  var prop, i2, len;
  if (Array.isArray(a)) {
    if (!Array.isArray(b2)) {
      return false;
    }
    if (a.length !== b2.length) {
      return false;
    }
    for (i2 = 0, len = a.length; i2 < len; i2++) {
      if (!deepStrictEqual(a[i2], b2[i2])) {
        return false;
      }
    }
    return true;
  } else if (typeof a === "function") {
    return a === b2;
  } else if (a instanceof Object) {
    if (Array.isArray(b2) || !(b2 instanceof Object)) {
      return false;
    }
    for (prop in a) {
      if (!(prop in b2) || !deepStrictEqual(a[prop], b2[prop])) {
        return false;
      }
    }
    for (prop in b2) {
      if (!(prop in a)) {
        return false;
      }
    }
    return true;
  } else {
    return a === b2;
  }
}
function lazy(object, prop, valueResolver) {
  var _uninitialized = true;
  var _value;
  Object.defineProperty(object, prop, {
    get: function get() {
      if (_uninitialized) {
        _value = valueResolver();
        _uninitialized = false;
      }
      return _value;
    },
    set: function set(value) {
      _value = value;
      _uninitialized = false;
    },
    configurable: true,
    enumerable: true
  });
}
function hasOwnProperty(object, property) {
  return object && Object.hasOwnProperty.call(object, property);
}
function pickShallow(object, properties2) {
  var copy = {};
  for (var i2 = 0; i2 < properties2.length; i2++) {
    var key = properties2[i2];
    var value = object[key];
    if (value !== void 0) {
      copy[key] = value;
    }
  }
  return copy;
}

// node_modules/mathjs/lib/esm/core/function/config.js
var MATRIX_OPTIONS = ["Matrix", "Array"];
var NUMBER_OPTIONS = ["number", "BigNumber", "Fraction"];

// node_modules/mathjs/lib/esm/entry/configReadonly.js
var config = function config2(options) {
  if (options) {
    throw new Error("The global config is readonly. \nPlease create a mathjs instance if you want to change the default configuration. \nExample:\n\n  import { create, all } from 'mathjs';\n  const mathjs = create(all);\n  mathjs.config({ number: 'BigNumber' });\n");
  }
  return Object.freeze(DEFAULT_CONFIG);
};
_extends(config, DEFAULT_CONFIG, {
  MATRIX_OPTIONS,
  NUMBER_OPTIONS
});

// node_modules/typed-function/lib/esm/typed-function.mjs
function ok() {
  return true;
}
function notOk() {
  return false;
}
function undef() {
  return void 0;
}
var NOT_TYPED_FUNCTION = "Argument is not a typed-function.";
function create() {
  function isPlainObject2(x) {
    return typeof x === "object" && x !== null && x.constructor === Object;
  }
  const _types = [{
    name: "number",
    test: function(x) {
      return typeof x === "number";
    }
  }, {
    name: "string",
    test: function(x) {
      return typeof x === "string";
    }
  }, {
    name: "boolean",
    test: function(x) {
      return typeof x === "boolean";
    }
  }, {
    name: "Function",
    test: function(x) {
      return typeof x === "function";
    }
  }, {
    name: "Array",
    test: Array.isArray
  }, {
    name: "Date",
    test: function(x) {
      return x instanceof Date;
    }
  }, {
    name: "RegExp",
    test: function(x) {
      return x instanceof RegExp;
    }
  }, {
    name: "Object",
    test: isPlainObject2
  }, {
    name: "null",
    test: function(x) {
      return x === null;
    }
  }, {
    name: "undefined",
    test: function(x) {
      return x === void 0;
    }
  }];
  const anyType = {
    name: "any",
    test: ok,
    isAny: true
  };
  let typeMap;
  let typeList;
  let nConversions = 0;
  let typed2 = {
    createCount: 0
  };
  function findType(typeName) {
    const type = typeMap.get(typeName);
    if (type) {
      return type;
    }
    let message = 'Unknown type "' + typeName + '"';
    const name314 = typeName.toLowerCase();
    let otherName;
    for (otherName of typeList) {
      if (otherName.toLowerCase() === name314) {
        message += '. Did you mean "' + otherName + '" ?';
        break;
      }
    }
    throw new TypeError(message);
  }
  function addTypes(types) {
    let beforeSpec = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "any";
    const beforeIndex = beforeSpec ? findType(beforeSpec).index : typeList.length;
    const newTypes = [];
    for (let i2 = 0; i2 < types.length; ++i2) {
      if (!types[i2] || typeof types[i2].name !== "string" || typeof types[i2].test !== "function") {
        throw new TypeError("Object with properties {name: string, test: function} expected");
      }
      const typeName = types[i2].name;
      if (typeMap.has(typeName)) {
        throw new TypeError('Duplicate type name "' + typeName + '"');
      }
      newTypes.push(typeName);
      typeMap.set(typeName, {
        name: typeName,
        test: types[i2].test,
        isAny: types[i2].isAny,
        index: beforeIndex + i2,
        conversionsTo: []
        // Newly added type can't have any conversions to it
      });
    }
    const affectedTypes = typeList.slice(beforeIndex);
    typeList = typeList.slice(0, beforeIndex).concat(newTypes).concat(affectedTypes);
    for (let i2 = beforeIndex + newTypes.length; i2 < typeList.length; ++i2) {
      typeMap.get(typeList[i2]).index = i2;
    }
  }
  function clear() {
    typeMap = /* @__PURE__ */ new Map();
    typeList = [];
    nConversions = 0;
    addTypes([anyType], false);
  }
  clear();
  addTypes(_types);
  function clearConversions() {
    let typeName;
    for (typeName of typeList) {
      typeMap.get(typeName).conversionsTo = [];
    }
    nConversions = 0;
  }
  function findTypeNames(value) {
    const matches = typeList.filter((name314) => {
      const type = typeMap.get(name314);
      return !type.isAny && type.test(value);
    });
    if (matches.length) {
      return matches;
    }
    return ["any"];
  }
  function isTypedFunction(entity) {
    return entity && typeof entity === "function" && "_typedFunctionData" in entity;
  }
  function findSignature(fn, signature2, options) {
    if (!isTypedFunction(fn)) {
      throw new TypeError(NOT_TYPED_FUNCTION);
    }
    const exact = options && options.exact;
    const stringSignature = Array.isArray(signature2) ? signature2.join(",") : signature2;
    const params = parseSignature(stringSignature);
    const canonicalSignature = stringifyParams(params);
    if (!exact || canonicalSignature in fn.signatures) {
      const match = fn._typedFunctionData.signatureMap.get(canonicalSignature);
      if (match) {
        return match;
      }
    }
    const nParams = params.length;
    let remainingSignatures;
    if (exact) {
      remainingSignatures = [];
      let name314;
      for (name314 in fn.signatures) {
        remainingSignatures.push(fn._typedFunctionData.signatureMap.get(name314));
      }
    } else {
      remainingSignatures = fn._typedFunctionData.signatures;
    }
    for (let i2 = 0; i2 < nParams; ++i2) {
      const want = params[i2];
      const filteredSignatures = [];
      let possibility;
      for (possibility of remainingSignatures) {
        const have = getParamAtIndex(possibility.params, i2);
        if (!have || want.restParam && !have.restParam) {
          continue;
        }
        if (!have.hasAny) {
          const haveTypes = paramTypeSet(have);
          if (want.types.some((wtype) => !haveTypes.has(wtype.name))) {
            continue;
          }
        }
        filteredSignatures.push(possibility);
      }
      remainingSignatures = filteredSignatures;
      if (remainingSignatures.length === 0) break;
    }
    let candidate;
    for (candidate of remainingSignatures) {
      if (candidate.params.length <= nParams) {
        return candidate;
      }
    }
    throw new TypeError("Signature not found (signature: " + (fn.name || "unnamed") + "(" + stringifyParams(params, ", ") + "))");
  }
  function find(fn, signature2, options) {
    return findSignature(fn, signature2, options).implementation;
  }
  function convert(value, typeName) {
    const type = findType(typeName);
    if (type.test(value)) {
      return value;
    }
    const conversions = type.conversionsTo;
    if (conversions.length === 0) {
      throw new Error("There are no conversions to " + typeName + " defined.");
    }
    for (let i2 = 0; i2 < conversions.length; i2++) {
      const fromType = findType(conversions[i2].from);
      if (fromType.test(value)) {
        return conversions[i2].convert(value);
      }
    }
    throw new Error("Cannot convert " + value + " to " + typeName);
  }
  function stringifyParams(params) {
    let separator = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : ",";
    return params.map((p) => p.name).join(separator);
  }
  function parseParam(param) {
    const restParam = param.indexOf("...") === 0;
    const types = !restParam ? param : param.length > 3 ? param.slice(3) : "any";
    const typeDefs = types.split("|").map((s) => findType(s.trim()));
    let hasAny = false;
    let paramName = restParam ? "..." : "";
    const exactTypes = typeDefs.map(function(type) {
      hasAny = type.isAny || hasAny;
      paramName += type.name + "|";
      return {
        name: type.name,
        typeIndex: type.index,
        test: type.test,
        isAny: type.isAny,
        conversion: null,
        conversionIndex: -1
      };
    });
    return {
      types: exactTypes,
      name: paramName.slice(0, -1),
      // remove trailing '|' from above
      hasAny,
      hasConversion: false,
      restParam
    };
  }
  function expandParam(param) {
    const typeNames = param.types.map((t) => t.name);
    const matchingConversions = availableConversions(typeNames);
    let hasAny = param.hasAny;
    let newName = param.name;
    const convertibleTypes = matchingConversions.map(function(conversion) {
      const type = findType(conversion.from);
      hasAny = type.isAny || hasAny;
      newName += "|" + conversion.from;
      return {
        name: conversion.from,
        typeIndex: type.index,
        test: type.test,
        isAny: type.isAny,
        conversion,
        conversionIndex: conversion.index
      };
    });
    return {
      types: param.types.concat(convertibleTypes),
      name: newName,
      hasAny,
      hasConversion: convertibleTypes.length > 0,
      restParam: param.restParam
    };
  }
  function paramTypeSet(param) {
    if (!param.typeSet) {
      param.typeSet = /* @__PURE__ */ new Set();
      param.types.forEach((type) => param.typeSet.add(type.name));
    }
    return param.typeSet;
  }
  function parseSignature(rawSignature) {
    const params = [];
    if (typeof rawSignature !== "string") {
      throw new TypeError("Signatures must be strings");
    }
    const signature2 = rawSignature.trim();
    if (signature2 === "") {
      return params;
    }
    const rawParams = signature2.split(",");
    for (let i2 = 0; i2 < rawParams.length; ++i2) {
      const parsedParam = parseParam(rawParams[i2].trim());
      if (parsedParam.restParam && i2 !== rawParams.length - 1) {
        throw new SyntaxError('Unexpected rest parameter "' + rawParams[i2] + '": only allowed for the last parameter');
      }
      if (parsedParam.types.length === 0) {
        return null;
      }
      params.push(parsedParam);
    }
    return params;
  }
  function hasRestParam(params) {
    const param = last(params);
    return param ? param.restParam : false;
  }
  function compileTest(param) {
    if (!param || param.types.length === 0) {
      return ok;
    } else if (param.types.length === 1) {
      return findType(param.types[0].name).test;
    } else if (param.types.length === 2) {
      const test0 = findType(param.types[0].name).test;
      const test1 = findType(param.types[1].name).test;
      return function or2(x) {
        return test0(x) || test1(x);
      };
    } else {
      const tests = param.types.map(function(type) {
        return findType(type.name).test;
      });
      return function or2(x) {
        for (let i2 = 0; i2 < tests.length; i2++) {
          if (tests[i2](x)) {
            return true;
          }
        }
        return false;
      };
    }
  }
  function compileTests(params) {
    let tests, test0, test1;
    if (hasRestParam(params)) {
      tests = initial(params).map(compileTest);
      const varIndex = tests.length;
      const lastTest = compileTest(last(params));
      const testRestParam = function(args) {
        for (let i2 = varIndex; i2 < args.length; i2++) {
          if (!lastTest(args[i2])) {
            return false;
          }
        }
        return true;
      };
      return function testArgs(args) {
        for (let i2 = 0; i2 < tests.length; i2++) {
          if (!tests[i2](args[i2])) {
            return false;
          }
        }
        return testRestParam(args) && args.length >= varIndex + 1;
      };
    } else {
      if (params.length === 0) {
        return function testArgs(args) {
          return args.length === 0;
        };
      } else if (params.length === 1) {
        test0 = compileTest(params[0]);
        return function testArgs(args) {
          return test0(args[0]) && args.length === 1;
        };
      } else if (params.length === 2) {
        test0 = compileTest(params[0]);
        test1 = compileTest(params[1]);
        return function testArgs(args) {
          return test0(args[0]) && test1(args[1]) && args.length === 2;
        };
      } else {
        tests = params.map(compileTest);
        return function testArgs(args) {
          for (let i2 = 0; i2 < tests.length; i2++) {
            if (!tests[i2](args[i2])) {
              return false;
            }
          }
          return args.length === tests.length;
        };
      }
    }
  }
  function getParamAtIndex(params, index2) {
    return index2 < params.length ? params[index2] : hasRestParam(params) ? last(params) : null;
  }
  function getTypeSetAtIndex(params, index2) {
    const param = getParamAtIndex(params, index2);
    if (!param) {
      return /* @__PURE__ */ new Set();
    }
    return paramTypeSet(param);
  }
  function isExactType(type) {
    return type.conversion === null || type.conversion === void 0;
  }
  function mergeExpectedParams(signatures, index2) {
    const typeSet = /* @__PURE__ */ new Set();
    signatures.forEach((signature2) => {
      const paramSet = getTypeSetAtIndex(signature2.params, index2);
      let name314;
      for (name314 of paramSet) {
        typeSet.add(name314);
      }
    });
    return typeSet.has("any") ? ["any"] : Array.from(typeSet);
  }
  function createError(name314, args, signatures) {
    let err, expected;
    const _name = name314 || "unnamed";
    let matchingSignatures = signatures;
    let index2;
    for (index2 = 0; index2 < args.length; index2++) {
      const nextMatchingDefs = [];
      matchingSignatures.forEach((signature2) => {
        const param = getParamAtIndex(signature2.params, index2);
        const test = compileTest(param);
        if ((index2 < signature2.params.length || hasRestParam(signature2.params)) && test(args[index2])) {
          nextMatchingDefs.push(signature2);
        }
      });
      if (nextMatchingDefs.length === 0) {
        expected = mergeExpectedParams(matchingSignatures, index2);
        if (expected.length > 0) {
          const actualTypes = findTypeNames(args[index2]);
          err = new TypeError("Unexpected type of argument in function " + _name + " (expected: " + expected.join(" or ") + ", actual: " + actualTypes.join(" | ") + ", index: " + index2 + ")");
          err.data = {
            category: "wrongType",
            fn: _name,
            index: index2,
            actual: actualTypes,
            expected
          };
          return err;
        }
      } else {
        matchingSignatures = nextMatchingDefs;
      }
    }
    const lengths = matchingSignatures.map(function(signature2) {
      return hasRestParam(signature2.params) ? Infinity : signature2.params.length;
    });
    if (args.length < Math.min.apply(null, lengths)) {
      expected = mergeExpectedParams(matchingSignatures, index2);
      err = new TypeError("Too few arguments in function " + _name + " (expected: " + expected.join(" or ") + ", index: " + args.length + ")");
      err.data = {
        category: "tooFewArgs",
        fn: _name,
        index: args.length,
        expected
      };
      return err;
    }
    const maxLength = Math.max.apply(null, lengths);
    if (args.length > maxLength) {
      err = new TypeError("Too many arguments in function " + _name + " (expected: " + maxLength + ", actual: " + args.length + ")");
      err.data = {
        category: "tooManyArgs",
        fn: _name,
        index: args.length,
        expectedLength: maxLength
      };
      return err;
    }
    const argTypes = [];
    for (let i2 = 0; i2 < args.length; ++i2) {
      argTypes.push(findTypeNames(args[i2]).join("|"));
    }
    err = new TypeError('Arguments of type "' + argTypes.join(", ") + '" do not match any of the defined signatures of function ' + _name + ".");
    err.data = {
      category: "mismatch",
      actual: argTypes
    };
    return err;
  }
  function getLowestTypeIndex(param) {
    let min3 = typeList.length + 1;
    for (let i2 = 0; i2 < param.types.length; i2++) {
      if (isExactType(param.types[i2])) {
        min3 = Math.min(min3, param.types[i2].typeIndex);
      }
    }
    return min3;
  }
  function getLowestConversionIndex(param) {
    let min3 = nConversions + 1;
    for (let i2 = 0; i2 < param.types.length; i2++) {
      if (!isExactType(param.types[i2])) {
        min3 = Math.min(min3, param.types[i2].conversionIndex);
      }
    }
    return min3;
  }
  function compareParams(param1, param2) {
    if (param1.hasAny) {
      if (!param2.hasAny) {
        return 1;
      }
    } else if (param2.hasAny) {
      return -1;
    }
    if (param1.restParam) {
      if (!param2.restParam) {
        return 1;
      }
    } else if (param2.restParam) {
      return -1;
    }
    if (param1.hasConversion) {
      if (!param2.hasConversion) {
        return 1;
      }
    } else if (param2.hasConversion) {
      return -1;
    }
    const typeDiff = getLowestTypeIndex(param1) - getLowestTypeIndex(param2);
    if (typeDiff < 0) {
      return -1;
    }
    if (typeDiff > 0) {
      return 1;
    }
    const convDiff = getLowestConversionIndex(param1) - getLowestConversionIndex(param2);
    if (convDiff < 0) {
      return -1;
    }
    if (convDiff > 0) {
      return 1;
    }
    return 0;
  }
  function compareSignatures(signature1, signature2) {
    const pars1 = signature1.params;
    const pars2 = signature2.params;
    const last1 = last(pars1);
    const last2 = last(pars2);
    const hasRest1 = hasRestParam(pars1);
    const hasRest2 = hasRestParam(pars2);
    if (hasRest1 && last1.hasAny) {
      if (!hasRest2 || !last2.hasAny) {
        return 1;
      }
    } else if (hasRest2 && last2.hasAny) {
      return -1;
    }
    let any1 = 0;
    let conv1 = 0;
    let par;
    for (par of pars1) {
      if (par.hasAny) ++any1;
      if (par.hasConversion) ++conv1;
    }
    let any2 = 0;
    let conv2 = 0;
    for (par of pars2) {
      if (par.hasAny) ++any2;
      if (par.hasConversion) ++conv2;
    }
    if (any1 !== any2) {
      return any1 - any2;
    }
    if (hasRest1 && last1.hasConversion) {
      if (!hasRest2 || !last2.hasConversion) {
        return 1;
      }
    } else if (hasRest2 && last2.hasConversion) {
      return -1;
    }
    if (conv1 !== conv2) {
      return conv1 - conv2;
    }
    if (hasRest1) {
      if (!hasRest2) {
        return 1;
      }
    } else if (hasRest2) {
      return -1;
    }
    const lengthCriterion = (pars1.length - pars2.length) * (hasRest1 ? -1 : 1);
    if (lengthCriterion !== 0) {
      return lengthCriterion;
    }
    const comparisons = [];
    let tc = 0;
    for (let i2 = 0; i2 < pars1.length; ++i2) {
      const thisComparison = compareParams(pars1[i2], pars2[i2]);
      comparisons.push(thisComparison);
      tc += thisComparison;
    }
    if (tc !== 0) {
      return tc;
    }
    let c;
    for (c of comparisons) {
      if (c !== 0) {
        return c;
      }
    }
    return 0;
  }
  function availableConversions(typeNames) {
    if (typeNames.length === 0) {
      return [];
    }
    const types = typeNames.map(findType);
    if (typeNames.length > 1) {
      types.sort((t1, t2) => t1.index - t2.index);
    }
    let matches = types[0].conversionsTo;
    if (typeNames.length === 1) {
      return matches;
    }
    matches = matches.concat([]);
    const knownTypes = new Set(typeNames);
    for (let i2 = 1; i2 < types.length; ++i2) {
      let newMatch;
      for (newMatch of types[i2].conversionsTo) {
        if (!knownTypes.has(newMatch.from)) {
          matches.push(newMatch);
          knownTypes.add(newMatch.from);
        }
      }
    }
    return matches;
  }
  function compileArgsPreprocessing(params, fn) {
    let fnConvert = fn;
    if (params.some((p) => p.hasConversion)) {
      const restParam = hasRestParam(params);
      const compiledConversions = params.map(compileArgConversion);
      fnConvert = function convertArgs() {
        const args = [];
        const last2 = restParam ? arguments.length - 1 : arguments.length;
        for (let i2 = 0; i2 < last2; i2++) {
          args[i2] = compiledConversions[i2](arguments[i2]);
        }
        if (restParam) {
          args[last2] = arguments[last2].map(compiledConversions[last2]);
        }
        return fn.apply(this, args);
      };
    }
    let fnPreprocess = fnConvert;
    if (hasRestParam(params)) {
      const offset = params.length - 1;
      fnPreprocess = function preprocessRestParams() {
        return fnConvert.apply(this, slice(arguments, 0, offset).concat([slice(arguments, offset)]));
      };
    }
    return fnPreprocess;
  }
  function compileArgConversion(param) {
    let test0, test1, conversion0, conversion1;
    const tests = [];
    const conversions = [];
    param.types.forEach(function(type) {
      if (type.conversion) {
        tests.push(findType(type.conversion.from).test);
        conversions.push(type.conversion.convert);
      }
    });
    switch (conversions.length) {
      case 0:
        return function convertArg(arg2) {
          return arg2;
        };
      case 1:
        test0 = tests[0];
        conversion0 = conversions[0];
        return function convertArg(arg2) {
          if (test0(arg2)) {
            return conversion0(arg2);
          }
          return arg2;
        };
      case 2:
        test0 = tests[0];
        test1 = tests[1];
        conversion0 = conversions[0];
        conversion1 = conversions[1];
        return function convertArg(arg2) {
          if (test0(arg2)) {
            return conversion0(arg2);
          }
          if (test1(arg2)) {
            return conversion1(arg2);
          }
          return arg2;
        };
      default:
        return function convertArg(arg2) {
          for (let i2 = 0; i2 < conversions.length; i2++) {
            if (tests[i2](arg2)) {
              return conversions[i2](arg2);
            }
          }
          return arg2;
        };
    }
  }
  function splitParams(params) {
    function _splitParams(params2, index2, paramsSoFar) {
      if (index2 < params2.length) {
        const param = params2[index2];
        let resultingParams = [];
        if (param.restParam) {
          const exactTypes = param.types.filter(isExactType);
          if (exactTypes.length < param.types.length) {
            resultingParams.push({
              types: exactTypes,
              name: "..." + exactTypes.map((t) => t.name).join("|"),
              hasAny: exactTypes.some((t) => t.isAny),
              hasConversion: false,
              restParam: true
            });
          }
          resultingParams.push(param);
        } else {
          resultingParams = param.types.map(function(type) {
            return {
              types: [type],
              name: type.name,
              hasAny: type.isAny,
              hasConversion: type.conversion,
              restParam: false
            };
          });
        }
        return flatMap(resultingParams, function(nextParam) {
          return _splitParams(params2, index2 + 1, paramsSoFar.concat([nextParam]));
        });
      } else {
        return [paramsSoFar];
      }
    }
    return _splitParams(params, 0, []);
  }
  function conflicting(params1, params2) {
    const ii = Math.max(params1.length, params2.length);
    for (let i2 = 0; i2 < ii; i2++) {
      const typeSet1 = getTypeSetAtIndex(params1, i2);
      const typeSet2 = getTypeSetAtIndex(params2, i2);
      let overlap = false;
      let name314;
      for (name314 of typeSet2) {
        if (typeSet1.has(name314)) {
          overlap = true;
          break;
        }
      }
      if (!overlap) {
        return false;
      }
    }
    const len1 = params1.length;
    const len2 = params2.length;
    const restParam1 = hasRestParam(params1);
    const restParam2 = hasRestParam(params2);
    return restParam1 ? restParam2 ? len1 === len2 : len2 >= len1 : restParam2 ? len1 >= len2 : len1 === len2;
  }
  function clearResolutions(functionList) {
    return functionList.map((fn) => {
      if (isReferToSelf(fn)) {
        return referToSelf(fn.referToSelf.callback);
      }
      if (isReferTo(fn)) {
        return makeReferTo(fn.referTo.references, fn.referTo.callback);
      }
      return fn;
    });
  }
  function collectResolutions(references, functionList, signatureMap) {
    const resolvedReferences = [];
    let reference;
    for (reference of references) {
      let resolution = signatureMap[reference];
      if (typeof resolution !== "number") {
        throw new TypeError('No definition for referenced signature "' + reference + '"');
      }
      resolution = functionList[resolution];
      if (typeof resolution !== "function") {
        return false;
      }
      resolvedReferences.push(resolution);
    }
    return resolvedReferences;
  }
  function resolveReferences(functionList, signatureMap, self2) {
    const resolvedFunctions = clearResolutions(functionList);
    const isResolved = new Array(resolvedFunctions.length).fill(false);
    let leftUnresolved = true;
    while (leftUnresolved) {
      leftUnresolved = false;
      let nothingResolved = true;
      for (let i2 = 0; i2 < resolvedFunctions.length; ++i2) {
        if (isResolved[i2]) continue;
        const fn = resolvedFunctions[i2];
        if (isReferToSelf(fn)) {
          resolvedFunctions[i2] = fn.referToSelf.callback(self2);
          resolvedFunctions[i2].referToSelf = fn.referToSelf;
          isResolved[i2] = true;
          nothingResolved = false;
        } else if (isReferTo(fn)) {
          const resolvedReferences = collectResolutions(fn.referTo.references, resolvedFunctions, signatureMap);
          if (resolvedReferences) {
            resolvedFunctions[i2] = fn.referTo.callback.apply(this, resolvedReferences);
            resolvedFunctions[i2].referTo = fn.referTo;
            isResolved[i2] = true;
            nothingResolved = false;
          } else {
            leftUnresolved = true;
          }
        }
      }
      if (nothingResolved && leftUnresolved) {
        throw new SyntaxError("Circular reference detected in resolving typed.referTo");
      }
    }
    return resolvedFunctions;
  }
  function validateDeprecatedThis(signaturesMap) {
    const deprecatedThisRegex = /\bthis(\(|\.signatures\b)/;
    Object.keys(signaturesMap).forEach((signature2) => {
      const fn = signaturesMap[signature2];
      if (deprecatedThisRegex.test(fn.toString())) {
        throw new SyntaxError("Using `this` to self-reference a function is deprecated since typed-function@3. Use typed.referTo and typed.referToSelf instead.");
      }
    });
  }
  function createTypedFunction(name314, rawSignaturesMap) {
    typed2.createCount++;
    if (Object.keys(rawSignaturesMap).length === 0) {
      throw new SyntaxError("No signatures provided");
    }
    if (typed2.warnAgainstDeprecatedThis) {
      validateDeprecatedThis(rawSignaturesMap);
    }
    const parsedParams = [];
    const originalFunctions = [];
    const signaturesMap = {};
    const preliminarySignatures = [];
    let signature2;
    for (signature2 in rawSignaturesMap) {
      if (!Object.prototype.hasOwnProperty.call(rawSignaturesMap, signature2)) {
        continue;
      }
      const params = parseSignature(signature2);
      if (!params) continue;
      parsedParams.forEach(function(pp) {
        if (conflicting(pp, params)) {
          throw new TypeError('Conflicting signatures "' + stringifyParams(pp) + '" and "' + stringifyParams(params) + '".');
        }
      });
      parsedParams.push(params);
      const functionIndex = originalFunctions.length;
      originalFunctions.push(rawSignaturesMap[signature2]);
      const conversionParams = params.map(expandParam);
      let sp;
      for (sp of splitParams(conversionParams)) {
        const spName = stringifyParams(sp);
        preliminarySignatures.push({
          params: sp,
          name: spName,
          fn: functionIndex
        });
        if (sp.every((p) => !p.hasConversion)) {
          signaturesMap[spName] = functionIndex;
        }
      }
    }
    preliminarySignatures.sort(compareSignatures);
    const resolvedFunctions = resolveReferences(originalFunctions, signaturesMap, theTypedFn);
    let s;
    for (s in signaturesMap) {
      if (Object.prototype.hasOwnProperty.call(signaturesMap, s)) {
        signaturesMap[s] = resolvedFunctions[signaturesMap[s]];
      }
    }
    const signatures = [];
    const internalSignatureMap = /* @__PURE__ */ new Map();
    for (s of preliminarySignatures) {
      if (!internalSignatureMap.has(s.name)) {
        s.fn = resolvedFunctions[s.fn];
        signatures.push(s);
        internalSignatureMap.set(s.name, s);
      }
    }
    const ok0 = signatures[0] && signatures[0].params.length <= 2 && !hasRestParam(signatures[0].params);
    const ok1 = signatures[1] && signatures[1].params.length <= 2 && !hasRestParam(signatures[1].params);
    const ok2 = signatures[2] && signatures[2].params.length <= 2 && !hasRestParam(signatures[2].params);
    const ok3 = signatures[3] && signatures[3].params.length <= 2 && !hasRestParam(signatures[3].params);
    const ok4 = signatures[4] && signatures[4].params.length <= 2 && !hasRestParam(signatures[4].params);
    const ok5 = signatures[5] && signatures[5].params.length <= 2 && !hasRestParam(signatures[5].params);
    const allOk = ok0 && ok1 && ok2 && ok3 && ok4 && ok5;
    for (let i2 = 0; i2 < signatures.length; ++i2) {
      signatures[i2].test = compileTests(signatures[i2].params);
    }
    const test00 = ok0 ? compileTest(signatures[0].params[0]) : notOk;
    const test10 = ok1 ? compileTest(signatures[1].params[0]) : notOk;
    const test20 = ok2 ? compileTest(signatures[2].params[0]) : notOk;
    const test30 = ok3 ? compileTest(signatures[3].params[0]) : notOk;
    const test40 = ok4 ? compileTest(signatures[4].params[0]) : notOk;
    const test50 = ok5 ? compileTest(signatures[5].params[0]) : notOk;
    const test01 = ok0 ? compileTest(signatures[0].params[1]) : notOk;
    const test11 = ok1 ? compileTest(signatures[1].params[1]) : notOk;
    const test21 = ok2 ? compileTest(signatures[2].params[1]) : notOk;
    const test31 = ok3 ? compileTest(signatures[3].params[1]) : notOk;
    const test41 = ok4 ? compileTest(signatures[4].params[1]) : notOk;
    const test51 = ok5 ? compileTest(signatures[5].params[1]) : notOk;
    for (let i2 = 0; i2 < signatures.length; ++i2) {
      signatures[i2].implementation = compileArgsPreprocessing(signatures[i2].params, signatures[i2].fn);
    }
    const fn0 = ok0 ? signatures[0].implementation : undef;
    const fn1 = ok1 ? signatures[1].implementation : undef;
    const fn2 = ok2 ? signatures[2].implementation : undef;
    const fn3 = ok3 ? signatures[3].implementation : undef;
    const fn4 = ok4 ? signatures[4].implementation : undef;
    const fn5 = ok5 ? signatures[5].implementation : undef;
    const len0 = ok0 ? signatures[0].params.length : -1;
    const len1 = ok1 ? signatures[1].params.length : -1;
    const len2 = ok2 ? signatures[2].params.length : -1;
    const len3 = ok3 ? signatures[3].params.length : -1;
    const len4 = ok4 ? signatures[4].params.length : -1;
    const len5 = ok5 ? signatures[5].params.length : -1;
    const iStart = allOk ? 6 : 0;
    const iEnd = signatures.length;
    const tests = signatures.map((s2) => s2.test);
    const fns = signatures.map((s2) => s2.implementation);
    const generic = function generic2() {
      "use strict";
      for (let i2 = iStart; i2 < iEnd; i2++) {
        if (tests[i2](arguments)) {
          return fns[i2].apply(this, arguments);
        }
      }
      return typed2.onMismatch(name314, arguments, signatures);
    };
    function theTypedFn(arg0, arg1) {
      "use strict";
      if (arguments.length === len0 && test00(arg0) && test01(arg1)) {
        return fn0.apply(this, arguments);
      }
      if (arguments.length === len1 && test10(arg0) && test11(arg1)) {
        return fn1.apply(this, arguments);
      }
      if (arguments.length === len2 && test20(arg0) && test21(arg1)) {
        return fn2.apply(this, arguments);
      }
      if (arguments.length === len3 && test30(arg0) && test31(arg1)) {
        return fn3.apply(this, arguments);
      }
      if (arguments.length === len4 && test40(arg0) && test41(arg1)) {
        return fn4.apply(this, arguments);
      }
      if (arguments.length === len5 && test50(arg0) && test51(arg1)) {
        return fn5.apply(this, arguments);
      }
      return generic.apply(this, arguments);
    }
    try {
      Object.defineProperty(theTypedFn, "name", {
        value: name314
      });
    } catch (err) {
    }
    theTypedFn.signatures = signaturesMap;
    theTypedFn._typedFunctionData = {
      signatures,
      signatureMap: internalSignatureMap
    };
    return theTypedFn;
  }
  function _onMismatch(name314, args, signatures) {
    throw createError(name314, args, signatures);
  }
  function initial(arr) {
    return slice(arr, 0, arr.length - 1);
  }
  function last(arr) {
    return arr[arr.length - 1];
  }
  function slice(arr, start, end) {
    return Array.prototype.slice.call(arr, start, end);
  }
  function findInArray(arr, test) {
    for (let i2 = 0; i2 < arr.length; i2++) {
      if (test(arr[i2])) {
        return arr[i2];
      }
    }
    return void 0;
  }
  function flatMap(arr, callback) {
    return Array.prototype.concat.apply([], arr.map(callback));
  }
  function referTo() {
    const references = initial(arguments).map((s) => stringifyParams(parseSignature(s)));
    const callback = last(arguments);
    if (typeof callback !== "function") {
      throw new TypeError("Callback function expected as last argument");
    }
    return makeReferTo(references, callback);
  }
  function makeReferTo(references, callback) {
    return {
      referTo: {
        references,
        callback
      }
    };
  }
  function referToSelf(callback) {
    if (typeof callback !== "function") {
      throw new TypeError("Callback function expected as first argument");
    }
    return {
      referToSelf: {
        callback
      }
    };
  }
  function isReferTo(objectOrFn) {
    return objectOrFn && typeof objectOrFn.referTo === "object" && Array.isArray(objectOrFn.referTo.references) && typeof objectOrFn.referTo.callback === "function";
  }
  function isReferToSelf(objectOrFn) {
    return objectOrFn && typeof objectOrFn.referToSelf === "object" && typeof objectOrFn.referToSelf.callback === "function";
  }
  function checkName(nameSoFar, newName) {
    if (!nameSoFar) {
      return newName;
    }
    if (newName && newName !== nameSoFar) {
      const err = new Error("Function names do not match (expected: " + nameSoFar + ", actual: " + newName + ")");
      err.data = {
        actual: newName,
        expected: nameSoFar
      };
      throw err;
    }
    return nameSoFar;
  }
  function getObjectName(obj) {
    let name314;
    for (const key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key) && (isTypedFunction(obj[key]) || typeof obj[key].signature === "string")) {
        name314 = checkName(name314, obj[key].name);
      }
    }
    return name314;
  }
  function mergeSignatures(dest, source) {
    let key;
    for (key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        if (key in dest) {
          if (source[key] !== dest[key]) {
            const err = new Error('Signature "' + key + '" is defined twice');
            err.data = {
              signature: key,
              sourceFunction: source[key],
              destFunction: dest[key]
            };
            throw err;
          }
        }
        dest[key] = source[key];
      }
    }
  }
  const saveTyped = typed2;
  typed2 = function(maybeName) {
    const named = typeof maybeName === "string";
    const start = named ? 1 : 0;
    let name314 = named ? maybeName : "";
    const allSignatures = {};
    for (let i2 = start; i2 < arguments.length; ++i2) {
      const item = arguments[i2];
      let theseSignatures = {};
      let thisName;
      if (typeof item === "function") {
        thisName = item.name;
        if (typeof item.signature === "string") {
          theseSignatures[item.signature] = item;
        } else if (isTypedFunction(item)) {
          theseSignatures = item.signatures;
        }
      } else if (isPlainObject2(item)) {
        theseSignatures = item;
        if (!named) {
          thisName = getObjectName(item);
        }
      }
      if (Object.keys(theseSignatures).length === 0) {
        const err = new TypeError("Argument to 'typed' at index " + i2 + " is not a (typed) function, nor an object with signatures as keys and functions as values.");
        err.data = {
          index: i2,
          argument: item
        };
        throw err;
      }
      if (!named) {
        name314 = checkName(name314, thisName);
      }
      mergeSignatures(allSignatures, theseSignatures);
    }
    return createTypedFunction(name314 || "", allSignatures);
  };
  typed2.create = create;
  typed2.createCount = saveTyped.createCount;
  typed2.onMismatch = _onMismatch;
  typed2.throwMismatchError = _onMismatch;
  typed2.createError = createError;
  typed2.clear = clear;
  typed2.clearConversions = clearConversions;
  typed2.addTypes = addTypes;
  typed2._findType = findType;
  typed2.referTo = referTo;
  typed2.referToSelf = referToSelf;
  typed2.convert = convert;
  typed2.findSignature = findSignature;
  typed2.find = find;
  typed2.isTypedFunction = isTypedFunction;
  typed2.warnAgainstDeprecatedThis = true;
  typed2.addType = function(type, beforeObjectTest) {
    let before = "any";
    if (beforeObjectTest !== false && typeMap.has("Object")) {
      before = "Object";
    }
    typed2.addTypes([type], before);
  };
  function _validateConversion(conversion) {
    if (!conversion || typeof conversion.from !== "string" || typeof conversion.to !== "string" || typeof conversion.convert !== "function") {
      throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");
    }
    if (conversion.to === conversion.from) {
      throw new SyntaxError('Illegal to define conversion from "' + conversion.from + '" to itself.');
    }
  }
  typed2.addConversion = function(conversion) {
    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      override: false
    };
    _validateConversion(conversion);
    const to2 = findType(conversion.to);
    const existing = to2.conversionsTo.find((other) => other.from === conversion.from);
    if (existing) {
      if (options && options.override) {
        typed2.removeConversion({
          from: existing.from,
          to: conversion.to,
          convert: existing.convert
        });
      } else {
        throw new Error('There is already a conversion from "' + conversion.from + '" to "' + to2.name + '"');
      }
    }
    to2.conversionsTo.push({
      from: conversion.from,
      convert: conversion.convert,
      index: nConversions++
    });
  };
  typed2.addConversions = function(conversions, options) {
    conversions.forEach((conversion) => typed2.addConversion(conversion, options));
  };
  typed2.removeConversion = function(conversion) {
    _validateConversion(conversion);
    const to2 = findType(conversion.to);
    const existingConversion = findInArray(to2.conversionsTo, (c) => c.from === conversion.from);
    if (!existingConversion) {
      throw new Error("Attempt to remove nonexistent conversion from " + conversion.from + " to " + conversion.to);
    }
    if (existingConversion.convert !== conversion.convert) {
      throw new Error("Conversion to remove does not match existing conversion");
    }
    const index2 = to2.conversionsTo.indexOf(existingConversion);
    to2.conversionsTo.splice(index2, 1);
  };
  typed2.resolve = function(tf, argList) {
    if (!isTypedFunction(tf)) {
      throw new TypeError(NOT_TYPED_FUNCTION);
    }
    const sigs = tf._typedFunctionData.signatures;
    for (let i2 = 0; i2 < sigs.length; ++i2) {
      if (sigs[i2].test(argList)) {
        return sigs[i2];
      }
    }
    return null;
  };
  return typed2;
}
var typed_function_default = create();

// node_modules/mathjs/lib/esm/utils/number.js
function isInteger(value) {
  if (typeof value === "boolean") {
    return true;
  }
  return isFinite(value) ? value === Math.round(value) : false;
}
var sign = Math.sign || function(x) {
  if (x > 0) {
    return 1;
  } else if (x < 0) {
    return -1;
  } else {
    return 0;
  }
};
var log2 = Math.log2 || function log22(x) {
  return Math.log(x) / Math.LN2;
};
var log10 = Math.log10 || function log102(x) {
  return Math.log(x) / Math.LN10;
};
var log1p = Math.log1p || function(x) {
  return Math.log(x + 1);
};
var cbrt = Math.cbrt || function cbrt2(x) {
  if (x === 0) {
    return x;
  }
  var negate = x < 0;
  var result;
  if (negate) {
    x = -x;
  }
  if (isFinite(x)) {
    result = Math.exp(Math.log(x) / 3);
    result = (x / (result * result) + 2 * result) / 3;
  } else {
    result = x;
  }
  return negate ? -result : result;
};
var expm1 = Math.expm1 || function expm12(x) {
  return x >= 2e-4 || x <= -2e-4 ? Math.exp(x) - 1 : x + x * x / 2 + x * x * x / 6;
};
function formatNumberToBase(n, base, size2) {
  var prefixes = {
    2: "0b",
    8: "0o",
    16: "0x"
  };
  var prefix = prefixes[base];
  var suffix = "";
  if (size2) {
    if (size2 < 1) {
      throw new Error("size must be in greater than 0");
    }
    if (!isInteger(size2)) {
      throw new Error("size must be an integer");
    }
    if (n > 2 ** (size2 - 1) - 1 || n < -(2 ** (size2 - 1))) {
      throw new Error("Value must be in range [-2^".concat(size2 - 1, ", 2^").concat(size2 - 1, "-1]"));
    }
    if (!isInteger(n)) {
      throw new Error("Value must be an integer");
    }
    if (n < 0) {
      n = n + 2 ** size2;
    }
    suffix = "i".concat(size2);
  }
  var sign4 = "";
  if (n < 0) {
    n = -n;
    sign4 = "-";
  }
  return "".concat(sign4).concat(prefix).concat(n.toString(base)).concat(suffix);
}
function format(value, options) {
  if (typeof options === "function") {
    return options(value);
  }
  if (value === Infinity) {
    return "Infinity";
  } else if (value === -Infinity) {
    return "-Infinity";
  } else if (isNaN(value)) {
    return "NaN";
  }
  var {
    notation,
    precision,
    wordSize
  } = normalizeFormatOptions(options);
  switch (notation) {
    case "fixed":
      return toFixed(value, precision);
    case "exponential":
      return toExponential(value, precision);
    case "engineering":
      return toEngineering(value, precision);
    case "bin":
      return formatNumberToBase(value, 2, wordSize);
    case "oct":
      return formatNumberToBase(value, 8, wordSize);
    case "hex":
      return formatNumberToBase(value, 16, wordSize);
    case "auto":
      return toPrecision(value, precision, options).replace(/((\.\d*?)(0+))($|e)/, function() {
        var digits2 = arguments[2];
        var e3 = arguments[4];
        return digits2 !== "." ? digits2 + e3 : e3;
      });
    default:
      throw new Error('Unknown notation "' + notation + '". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.');
  }
}
function normalizeFormatOptions(options) {
  var notation = "auto";
  var precision;
  var wordSize;
  if (options !== void 0) {
    if (isNumber(options)) {
      precision = options;
    } else if (isBigNumber(options)) {
      precision = options.toNumber();
    } else if (isObject(options)) {
      if (options.precision !== void 0) {
        precision = _toNumberOrThrow(options.precision, () => {
          throw new Error('Option "precision" must be a number or BigNumber');
        });
      }
      if (options.wordSize !== void 0) {
        wordSize = _toNumberOrThrow(options.wordSize, () => {
          throw new Error('Option "wordSize" must be a number or BigNumber');
        });
      }
      if (options.notation) {
        notation = options.notation;
      }
    } else {
      throw new Error("Unsupported type of options, number, BigNumber, or object expected");
    }
  }
  return {
    notation,
    precision,
    wordSize
  };
}
function splitNumber(value) {
  var match = String(value).toLowerCase().match(/^(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);
  if (!match) {
    throw new SyntaxError("Invalid number " + value);
  }
  var sign4 = match[1];
  var digits2 = match[2];
  var exponent = parseFloat(match[4] || "0");
  var dot2 = digits2.indexOf(".");
  exponent += dot2 !== -1 ? dot2 - 1 : digits2.length - 1;
  var coefficients = digits2.replace(".", "").replace(/^0*/, function(zeros3) {
    exponent -= zeros3.length;
    return "";
  }).replace(/0*$/, "").split("").map(function(d2) {
    return parseInt(d2);
  });
  if (coefficients.length === 0) {
    coefficients.push(0);
    exponent++;
  }
  return {
    sign: sign4,
    coefficients,
    exponent
  };
}
function toEngineering(value, precision) {
  if (isNaN(value) || !isFinite(value)) {
    return String(value);
  }
  var split = splitNumber(value);
  var rounded = roundDigits(split, precision);
  var e3 = rounded.exponent;
  var c = rounded.coefficients;
  var newExp = e3 % 3 === 0 ? e3 : e3 < 0 ? e3 - 3 - e3 % 3 : e3 - e3 % 3;
  if (isNumber(precision)) {
    while (precision > c.length || e3 - newExp + 1 > c.length) {
      c.push(0);
    }
  } else {
    var missingZeros = Math.abs(e3 - newExp) - (c.length - 1);
    for (var i2 = 0; i2 < missingZeros; i2++) {
      c.push(0);
    }
  }
  var expDiff = Math.abs(e3 - newExp);
  var decimalIdx = 1;
  while (expDiff > 0) {
    decimalIdx++;
    expDiff--;
  }
  var decimals = c.slice(decimalIdx).join("");
  var decimalVal = isNumber(precision) && decimals.length || decimals.match(/[1-9]/) ? "." + decimals : "";
  var str = c.slice(0, decimalIdx).join("") + decimalVal + "e" + (e3 >= 0 ? "+" : "") + newExp.toString();
  return rounded.sign + str;
}
function toFixed(value, precision) {
  if (isNaN(value) || !isFinite(value)) {
    return String(value);
  }
  var splitValue = splitNumber(value);
  var rounded = typeof precision === "number" ? roundDigits(splitValue, splitValue.exponent + 1 + precision) : splitValue;
  var c = rounded.coefficients;
  var p = rounded.exponent + 1;
  var pp = p + (precision || 0);
  if (c.length < pp) {
    c = c.concat(zeros(pp - c.length));
  }
  if (p < 0) {
    c = zeros(-p + 1).concat(c);
    p = 1;
  }
  if (p < c.length) {
    c.splice(p, 0, p === 0 ? "0." : ".");
  }
  return rounded.sign + c.join("");
}
function toExponential(value, precision) {
  if (isNaN(value) || !isFinite(value)) {
    return String(value);
  }
  var split = splitNumber(value);
  var rounded = precision ? roundDigits(split, precision) : split;
  var c = rounded.coefficients;
  var e3 = rounded.exponent;
  if (c.length < precision) {
    c = c.concat(zeros(precision - c.length));
  }
  var first = c.shift();
  return rounded.sign + first + (c.length > 0 ? "." + c.join("") : "") + "e" + (e3 >= 0 ? "+" : "") + e3;
}
function toPrecision(value, precision, options) {
  if (isNaN(value) || !isFinite(value)) {
    return String(value);
  }
  var lowerExp = _toNumberOrDefault(options === null || options === void 0 ? void 0 : options.lowerExp, -3);
  var upperExp = _toNumberOrDefault(options === null || options === void 0 ? void 0 : options.upperExp, 5);
  var split = splitNumber(value);
  var rounded = precision ? roundDigits(split, precision) : split;
  if (rounded.exponent < lowerExp || rounded.exponent >= upperExp) {
    return toExponential(value, precision);
  } else {
    var c = rounded.coefficients;
    var e3 = rounded.exponent;
    if (c.length < precision) {
      c = c.concat(zeros(precision - c.length));
    }
    c = c.concat(zeros(e3 - c.length + 1 + (c.length < precision ? precision - c.length : 0)));
    c = zeros(-e3).concat(c);
    var dot2 = e3 > 0 ? e3 : 0;
    if (dot2 < c.length - 1) {
      c.splice(dot2 + 1, 0, ".");
    }
    return rounded.sign + c.join("");
  }
}
function roundDigits(split, precision) {
  var rounded = {
    sign: split.sign,
    coefficients: split.coefficients,
    exponent: split.exponent
  };
  var c = rounded.coefficients;
  while (precision <= 0) {
    c.unshift(0);
    rounded.exponent++;
    precision++;
  }
  if (c.length > precision) {
    var removed = c.splice(precision, c.length - precision);
    if (removed[0] >= 5) {
      var i2 = precision - 1;
      c[i2]++;
      while (c[i2] === 10) {
        c.pop();
        if (i2 === 0) {
          c.unshift(0);
          rounded.exponent++;
          i2++;
        }
        i2--;
        c[i2]++;
      }
    }
  }
  return rounded;
}
function zeros(length) {
  var arr = [];
  for (var i2 = 0; i2 < length; i2++) {
    arr.push(0);
  }
  return arr;
}
function digits(value) {
  return value.toExponential().replace(/e.*$/, "").replace(/^0\.?0*|\./, "").length;
}
var DBL_EPSILON = Number.EPSILON || 2220446049250313e-31;
function nearlyEqual(x, y, epsilon) {
  if (epsilon === null || epsilon === void 0) {
    return x === y;
  }
  if (x === y) {
    return true;
  }
  if (isNaN(x) || isNaN(y)) {
    return false;
  }
  if (isFinite(x) && isFinite(y)) {
    var diff2 = Math.abs(x - y);
    if (diff2 <= DBL_EPSILON) {
      return true;
    } else {
      return diff2 <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;
    }
  }
  return false;
}
var acosh = Math.acosh || function(x) {
  return Math.log(Math.sqrt(x * x - 1) + x);
};
var asinh = Math.asinh || function(x) {
  return Math.log(Math.sqrt(x * x + 1) + x);
};
var atanh = Math.atanh || function(x) {
  return Math.log((1 + x) / (1 - x)) / 2;
};
var cosh = Math.cosh || function(x) {
  return (Math.exp(x) + Math.exp(-x)) / 2;
};
var sinh = Math.sinh || function(x) {
  return (Math.exp(x) - Math.exp(-x)) / 2;
};
var tanh = Math.tanh || function(x) {
  var e3 = Math.exp(2 * x);
  return (e3 - 1) / (e3 + 1);
};
function copysign(x, y) {
  var signx = x > 0 ? true : x < 0 ? false : 1 / x === Infinity;
  var signy = y > 0 ? true : y < 0 ? false : 1 / y === Infinity;
  return signx ^ signy ? -x : x;
}
function _toNumberOrThrow(value, onError) {
  if (isNumber(value)) {
    return value;
  } else if (isBigNumber(value)) {
    return value.toNumber();
  } else {
    onError();
  }
}
function _toNumberOrDefault(value, defaultValue) {
  if (isNumber(value)) {
    return value;
  } else if (isBigNumber(value)) {
    return value.toNumber();
  } else {
    return defaultValue;
  }
}

// node_modules/mathjs/lib/esm/utils/factory.js
function factory(name314, dependencies314, create3, meta) {
  function assertAndCreate(scope) {
    var deps = pickShallow(scope, dependencies314.map(stripOptionalNotation));
    assertDependencies(name314, dependencies314, scope);
    return create3(deps);
  }
  assertAndCreate.isFactory = true;
  assertAndCreate.fn = name314;
  assertAndCreate.dependencies = dependencies314.slice().sort();
  if (meta) {
    assertAndCreate.meta = meta;
  }
  return assertAndCreate;
}
function assertDependencies(name314, dependencies314, scope) {
  var allDefined = dependencies314.filter((dependency) => !isOptionalDependency(dependency)).every((dependency) => scope[dependency] !== void 0);
  if (!allDefined) {
    var missingDependencies = dependencies314.filter((dependency) => scope[dependency] === void 0);
    throw new Error('Cannot create function "'.concat(name314, '", ') + "some dependencies are missing: ".concat(missingDependencies.map((d2) => '"'.concat(d2, '"')).join(", "), "."));
  }
}
function isOptionalDependency(dependency) {
  return dependency && dependency[0] === "?";
}
function stripOptionalNotation(dependency) {
  return dependency && dependency[0] === "?" ? dependency.slice(1) : dependency;
}

// node_modules/mathjs/lib/esm/utils/customs.js
function getSafeProperty(object, prop) {
  if (isPlainObject(object) && isSafeProperty(object, prop)) {
    return object[prop];
  }
  if (typeof object[prop] === "function" && isSafeMethod(object, prop)) {
    throw new Error('Cannot access method "' + prop + '" as a property');
  }
  throw new Error('No access to property "' + prop + '"');
}
function setSafeProperty(object, prop, value) {
  if (isPlainObject(object) && isSafeProperty(object, prop)) {
    object[prop] = value;
    return value;
  }
  throw new Error('No access to property "' + prop + '"');
}
function hasSafeProperty(object, prop) {
  return prop in object;
}
function isSafeProperty(object, prop) {
  if (!object || typeof object !== "object") {
    return false;
  }
  if (hasOwnProperty(safeNativeProperties, prop)) {
    return true;
  }
  if (prop in Object.prototype) {
    return false;
  }
  if (prop in Function.prototype) {
    return false;
  }
  return true;
}
function getSafeMethod(object, method) {
  if (!isSafeMethod(object, method)) {
    throw new Error('No access to method "' + method + '"');
  }
  return object[method];
}
function isSafeMethod(object, method) {
  if (object === null || object === void 0 || typeof object[method] !== "function") {
    return false;
  }
  if (hasOwnProperty(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {
    return false;
  }
  if (hasOwnProperty(safeNativeMethods, method)) {
    return true;
  }
  if (method in Object.prototype) {
    return false;
  }
  if (method in Function.prototype) {
    return false;
  }
  return true;
}
function isPlainObject(object) {
  return typeof object === "object" && object && object.constructor === Object;
}
var safeNativeProperties = {
  length: true,
  name: true
};
var safeNativeMethods = {
  toString: true,
  valueOf: true,
  toLocaleString: true
};

// node_modules/mathjs/lib/esm/utils/map.js
var ObjectWrappingMap = class {
  constructor(object) {
    this.wrappedObject = object;
    this[Symbol.iterator] = this.entries;
  }
  keys() {
    return Object.keys(this.wrappedObject).values();
  }
  get(key) {
    return getSafeProperty(this.wrappedObject, key);
  }
  set(key, value) {
    setSafeProperty(this.wrappedObject, key, value);
    return this;
  }
  has(key) {
    return hasSafeProperty(this.wrappedObject, key);
  }
  entries() {
    return mapIterator(this.keys(), (key) => [key, this.get(key)]);
  }
  forEach(callback) {
    for (var key of this.keys()) {
      callback(this.get(key), key, this);
    }
  }
  delete(key) {
    delete this.wrappedObject[key];
  }
  clear() {
    for (var key of this.keys()) {
      this.delete(key);
    }
  }
  get size() {
    return Object.keys(this.wrappedObject).length;
  }
};
var PartitionedMap = class {
  /**
   * @param {Map} a
   * @param {Map} b
   * @param {Set} bKeys
   */
  constructor(a, b2, bKeys) {
    this.a = a;
    this.b = b2;
    this.bKeys = bKeys;
    this[Symbol.iterator] = this.entries;
  }
  get(key) {
    return this.bKeys.has(key) ? this.b.get(key) : this.a.get(key);
  }
  set(key, value) {
    if (this.bKeys.has(key)) {
      this.b.set(key, value);
    } else {
      this.a.set(key, value);
    }
    return this;
  }
  has(key) {
    return this.b.has(key) || this.a.has(key);
  }
  keys() {
    return (/* @__PURE__ */ new Set([...this.a.keys(), ...this.b.keys()]))[Symbol.iterator]();
  }
  entries() {
    return mapIterator(this.keys(), (key) => [key, this.get(key)]);
  }
  forEach(callback) {
    for (var key of this.keys()) {
      callback(this.get(key), key, this);
    }
  }
  delete(key) {
    return this.bKeys.has(key) ? this.b.delete(key) : this.a.delete(key);
  }
  clear() {
    this.a.clear();
    this.b.clear();
  }
  get size() {
    return [...this.keys()].length;
  }
};
function mapIterator(it, callback) {
  return {
    next: () => {
      var n = it.next();
      return n.done ? n : {
        value: callback(n.value),
        done: false
      };
    }
  };
}
function createEmptyMap() {
  return /* @__PURE__ */ new Map();
}
function createMap(mapOrObject) {
  if (!mapOrObject) {
    return createEmptyMap();
  }
  if (isMap(mapOrObject)) {
    return mapOrObject;
  }
  if (isObject(mapOrObject)) {
    return new ObjectWrappingMap(mapOrObject);
  }
  throw new Error("createMap can create maps from objects or Maps");
}
function toObject(map3) {
  if (map3 instanceof ObjectWrappingMap) {
    return map3.wrappedObject;
  }
  var object = {};
  for (var key of map3.keys()) {
    var value = map3.get(key);
    setSafeProperty(object, key, value);
  }
  return object;
}
function isMap(object) {
  if (!object) {
    return false;
  }
  return object instanceof Map || object instanceof ObjectWrappingMap || typeof object.set === "function" && typeof object.get === "function" && typeof object.keys === "function" && typeof object.has === "function";
}

// node_modules/mathjs/lib/esm/core/function/typed.js
var _createTyped2 = function _createTyped() {
  _createTyped2 = typed_function_default.create;
  return typed_function_default;
};
var dependencies = ["?BigNumber", "?Complex", "?DenseMatrix", "?Fraction"];
var createTyped = factory("typed", dependencies, function createTyped2(_ref) {
  var {
    BigNumber: BigNumber2,
    Complex: Complex3,
    DenseMatrix: DenseMatrix2,
    Fraction: Fraction3
  } = _ref;
  var typed2 = _createTyped2();
  typed2.clear();
  typed2.addTypes([
    {
      name: "number",
      test: isNumber
    },
    {
      name: "Complex",
      test: isComplex
    },
    {
      name: "BigNumber",
      test: isBigNumber
    },
    {
      name: "Fraction",
      test: isFraction
    },
    {
      name: "Unit",
      test: isUnit
    },
    // The following type matches a valid variable name, i.e., an alphanumeric
    // string starting with an alphabetic character. It is used (at least)
    // in the definition of the derivative() function, as the argument telling
    // what to differentiate over must (currently) be a variable.
    {
      name: "identifier",
      test: (s) => isString && /^(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE3F\uDE40\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDF02\uDF04-\uDF10\uDF12-\uDF33\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883\uD885-\uD887][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2F\uDC41-\uDC46]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD32\uDD50-\uDD52\uDD55\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E\uDF25-\uDF2A]|\uD838[\uDC30-\uDC6D\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDCD0-\uDCEB\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF39\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A\uDF50-\uDFFF]|\uD888[\uDC00-\uDFAF])*$/.test(s)
    },
    {
      name: "string",
      test: isString
    },
    {
      name: "Chain",
      test: isChain
    },
    {
      name: "Array",
      test: isArray
    },
    {
      name: "Matrix",
      test: isMatrix
    },
    {
      name: "DenseMatrix",
      test: isDenseMatrix
    },
    {
      name: "SparseMatrix",
      test: isSparseMatrix
    },
    {
      name: "Range",
      test: isRange
    },
    {
      name: "Index",
      test: isIndex
    },
    {
      name: "boolean",
      test: isBoolean
    },
    {
      name: "ResultSet",
      test: isResultSet
    },
    {
      name: "Help",
      test: isHelp
    },
    {
      name: "function",
      test: isFunction
    },
    {
      name: "Date",
      test: isDate
    },
    {
      name: "RegExp",
      test: isRegExp
    },
    {
      name: "null",
      test: isNull
    },
    {
      name: "undefined",
      test: isUndefined
    },
    {
      name: "AccessorNode",
      test: isAccessorNode
    },
    {
      name: "ArrayNode",
      test: isArrayNode
    },
    {
      name: "AssignmentNode",
      test: isAssignmentNode
    },
    {
      name: "BlockNode",
      test: isBlockNode
    },
    {
      name: "ConditionalNode",
      test: isConditionalNode
    },
    {
      name: "ConstantNode",
      test: isConstantNode
    },
    {
      name: "FunctionNode",
      test: isFunctionNode
    },
    {
      name: "FunctionAssignmentNode",
      test: isFunctionAssignmentNode
    },
    {
      name: "IndexNode",
      test: isIndexNode
    },
    {
      name: "Node",
      test: isNode
    },
    {
      name: "ObjectNode",
      test: isObjectNode
    },
    {
      name: "OperatorNode",
      test: isOperatorNode
    },
    {
      name: "ParenthesisNode",
      test: isParenthesisNode
    },
    {
      name: "RangeNode",
      test: isRangeNode
    },
    {
      name: "RelationalNode",
      test: isRelationalNode
    },
    {
      name: "SymbolNode",
      test: isSymbolNode
    },
    {
      name: "Map",
      test: isMap
    },
    {
      name: "Object",
      test: isObject
    }
    // order 'Object' last, it matches on other classes too
  ]);
  typed2.addConversions([{
    from: "number",
    to: "BigNumber",
    convert: function convert(x) {
      if (!BigNumber2) {
        throwNoBignumber(x);
      }
      if (digits(x) > 15) {
        throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: " + x + "). Use function bignumber(x) to convert to BigNumber.");
      }
      return new BigNumber2(x);
    }
  }, {
    from: "number",
    to: "Complex",
    convert: function convert(x) {
      if (!Complex3) {
        throwNoComplex(x);
      }
      return new Complex3(x, 0);
    }
  }, {
    from: "BigNumber",
    to: "Complex",
    convert: function convert(x) {
      if (!Complex3) {
        throwNoComplex(x);
      }
      return new Complex3(x.toNumber(), 0);
    }
  }, {
    from: "Fraction",
    to: "BigNumber",
    convert: function convert(x) {
      throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.");
    }
  }, {
    from: "Fraction",
    to: "Complex",
    convert: function convert(x) {
      if (!Complex3) {
        throwNoComplex(x);
      }
      return new Complex3(x.valueOf(), 0);
    }
  }, {
    from: "number",
    to: "Fraction",
    convert: function convert(x) {
      if (!Fraction3) {
        throwNoFraction(x);
      }
      var f = new Fraction3(x);
      if (f.valueOf() !== x) {
        throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: " + x + "). Use function fraction(x) to convert to Fraction.");
      }
      return f;
    }
  }, {
    // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`
    //  from: 'Fraction',
    //  to: 'number',
    //  convert: function (x) {
    //    return x.valueOf()
    //  }
    // }, {
    from: "string",
    to: "number",
    convert: function convert(x) {
      var n = Number(x);
      if (isNaN(n)) {
        throw new Error('Cannot convert "' + x + '" to a number');
      }
      return n;
    }
  }, {
    from: "string",
    to: "BigNumber",
    convert: function convert(x) {
      if (!BigNumber2) {
        throwNoBignumber(x);
      }
      try {
        return new BigNumber2(x);
      } catch (err) {
        throw new Error('Cannot convert "' + x + '" to BigNumber');
      }
    }
  }, {
    from: "string",
    to: "Fraction",
    convert: function convert(x) {
      if (!Fraction3) {
        throwNoFraction(x);
      }
      try {
        return new Fraction3(x);
      } catch (err) {
        throw new Error('Cannot convert "' + x + '" to Fraction');
      }
    }
  }, {
    from: "string",
    to: "Complex",
    convert: function convert(x) {
      if (!Complex3) {
        throwNoComplex(x);
      }
      try {
        return new Complex3(x);
      } catch (err) {
        throw new Error('Cannot convert "' + x + '" to Complex');
      }
    }
  }, {
    from: "boolean",
    to: "number",
    convert: function convert(x) {
      return +x;
    }
  }, {
    from: "boolean",
    to: "BigNumber",
    convert: function convert(x) {
      if (!BigNumber2) {
        throwNoBignumber(x);
      }
      return new BigNumber2(+x);
    }
  }, {
    from: "boolean",
    to: "Fraction",
    convert: function convert(x) {
      if (!Fraction3) {
        throwNoFraction(x);
      }
      return new Fraction3(+x);
    }
  }, {
    from: "boolean",
    to: "string",
    convert: function convert(x) {
      return String(x);
    }
  }, {
    from: "Array",
    to: "Matrix",
    convert: function convert(array) {
      if (!DenseMatrix2) {
        throwNoMatrix();
      }
      return new DenseMatrix2(array);
    }
  }, {
    from: "Matrix",
    to: "Array",
    convert: function convert(matrix2) {
      return matrix2.valueOf();
    }
  }]);
  typed2.onMismatch = (name314, args, signatures) => {
    var usualError = typed2.createError(name314, args, signatures);
    if (["wrongType", "mismatch"].includes(usualError.data.category) && args.length === 1 && isCollection(args[0]) && // check if the function can be unary:
    signatures.some((sig) => !sig.params.includes(","))) {
      var err = new TypeError("Function '".concat(name314, "' doesn't apply to matrices. To call it ") + "elementwise on a matrix 'M', try 'map(M, ".concat(name314, ")'."));
      err.data = usualError.data;
      throw err;
    }
    throw usualError;
  };
  typed2.onMismatch = (name314, args, signatures) => {
    var usualError = typed2.createError(name314, args, signatures);
    if (["wrongType", "mismatch"].includes(usualError.data.category) && args.length === 1 && isCollection(args[0]) && // check if the function can be unary:
    signatures.some((sig) => !sig.params.includes(","))) {
      var err = new TypeError("Function '".concat(name314, "' doesn't apply to matrices. To call it ") + "elementwise on a matrix 'M', try 'map(M, ".concat(name314, ")'."));
      err.data = usualError.data;
      throw err;
    }
    throw usualError;
  };
  return typed2;
});
function throwNoBignumber(x) {
  throw new Error("Cannot convert value ".concat(x, " into a BigNumber: no class 'BigNumber' provided"));
}
function throwNoComplex(x) {
  throw new Error("Cannot convert value ".concat(x, " into a Complex number: no class 'Complex' provided"));
}
function throwNoMatrix() {
  throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided");
}
function throwNoFraction(x) {
  throw new Error("Cannot convert value ".concat(x, " into a Fraction, no class 'Fraction' provided."));
}

// node_modules/mathjs/lib/esm/type/resultset/ResultSet.js
var name = "ResultSet";
var dependencies2 = [];
var createResultSet = factory(name, dependencies2, () => {
  function ResultSet2(entries) {
    if (!(this instanceof ResultSet2)) {
      throw new SyntaxError("Constructor must be called with the new operator");
    }
    this.entries = entries || [];
  }
  ResultSet2.prototype.type = "ResultSet";
  ResultSet2.prototype.isResultSet = true;
  ResultSet2.prototype.valueOf = function() {
    return this.entries;
  };
  ResultSet2.prototype.toString = function() {
    return "[" + this.entries.join(", ") + "]";
  };
  ResultSet2.prototype.toJSON = function() {
    return {
      mathjs: "ResultSet",
      entries: this.entries
    };
  };
  ResultSet2.fromJSON = function(json) {
    return new ResultSet2(json.entries);
  };
  return ResultSet2;
}, {
  isClass: true
});

// node_modules/decimal.js/decimal.mjs
var EXP_LIMIT = 9e15;
var MAX_DIGITS = 1e9;
var NUMERALS = "0123456789abcdef";
var LN10 = "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058";
var PI = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789";
var DEFAULTS = {
  // These values must be integers within the stated ranges (inclusive).
  // Most of these values can be changed at run-time using the `Decimal.config` method.
  // The maximum number of significant digits of the result of a calculation or base conversion.
  // E.g. `Decimal.config({ precision: 20 });`
  precision: 20,
  // 1 to MAX_DIGITS
  // The rounding mode used when rounding to `precision`.
  //
  // ROUND_UP         0 Away from zero.
  // ROUND_DOWN       1 Towards zero.
  // ROUND_CEIL       2 Towards +Infinity.
  // ROUND_FLOOR      3 Towards -Infinity.
  // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.
  // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.
  // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.
  // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.
  // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.
  //
  // E.g.
  // `Decimal.rounding = 4;`
  // `Decimal.rounding = Decimal.ROUND_HALF_UP;`
  rounding: 4,
  // 0 to 8
  // The modulo mode used when calculating the modulus: a mod n.
  // The quotient (q = a / n) is calculated according to the corresponding rounding mode.
  // The remainder (r) is calculated as: r = a - n * q.
  //
  // UP         0 The remainder is positive if the dividend is negative, else is negative.
  // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).
  // FLOOR      3 The remainder has the same sign as the divisor (Python %).
  // HALF_EVEN  6 The IEEE 754 remainder function.
  // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.
  //
  // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian
  // division (9) are commonly used for the modulus operation. The other rounding modes can also
  // be used, but they may not give useful results.
  modulo: 1,
  // 0 to 9
  // The exponent value at and beneath which `toString` returns exponential notation.
  // JavaScript numbers: -7
  toExpNeg: -7,
  // 0 to -EXP_LIMIT
  // The exponent value at and above which `toString` returns exponential notation.
  // JavaScript numbers: 21
  toExpPos: 21,
  // 0 to EXP_LIMIT
  // The minimum exponent value, beneath which underflow to zero occurs.
  // JavaScript numbers: -324  (5e-324)
  minE: -EXP_LIMIT,
  // -1 to -EXP_LIMIT
  // The maximum exponent value, above which overflow to Infinity occurs.
  // JavaScript numbers: 308  (1.7976931348623157e+308)
  maxE: EXP_LIMIT,
  // 1 to EXP_LIMIT
  // Whether to use cryptographically-secure random number generation, if available.
  crypto: false
  // true/false
};
var inexact;
var quadrant;
var external = true;
var decimalError = "[DecimalError] ";
var invalidArgument = decimalError + "Invalid argument: ";
var precisionLimitExceeded = decimalError + "Precision limit exceeded";
var cryptoUnavailable = decimalError + "crypto unavailable";
var tag = "[object Decimal]";
var mathfloor = Math.floor;
var mathpow = Math.pow;
var isBinary = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i;
var isHex = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i;
var isOctal = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i;
var isDecimal = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
var BASE = 1e7;
var LOG_BASE = 7;
var MAX_SAFE_INTEGER = 9007199254740991;
var LN10_PRECISION = LN10.length - 1;
var PI_PRECISION = PI.length - 1;
var P = { toStringTag: tag };
P.absoluteValue = P.abs = function() {
  var x = new this.constructor(this);
  if (x.s < 0) x.s = 1;
  return finalise(x);
};
P.ceil = function() {
  return finalise(new this.constructor(this), this.e + 1, 2);
};
P.clampedTo = P.clamp = function(min3, max3) {
  var k, x = this, Ctor = x.constructor;
  min3 = new Ctor(min3);
  max3 = new Ctor(max3);
  if (!min3.s || !max3.s) return new Ctor(NaN);
  if (min3.gt(max3)) throw Error(invalidArgument + max3);
  k = x.cmp(min3);
  return k < 0 ? min3 : x.cmp(max3) > 0 ? max3 : new Ctor(x);
};
P.comparedTo = P.cmp = function(y) {
  var i2, j, xdL, ydL, x = this, xd = x.d, yd = (y = new x.constructor(y)).d, xs = x.s, ys = y.s;
  if (!xd || !yd) {
    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;
  }
  if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;
  if (xs !== ys) return xs;
  if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;
  xdL = xd.length;
  ydL = yd.length;
  for (i2 = 0, j = xdL < ydL ? xdL : ydL; i2 < j; ++i2) {
    if (xd[i2] !== yd[i2]) return xd[i2] > yd[i2] ^ xs < 0 ? 1 : -1;
  }
  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;
};
P.cosine = P.cos = function() {
  var pr, rm, x = this, Ctor = x.constructor;
  if (!x.d) return new Ctor(NaN);
  if (!x.d[0]) return new Ctor(1);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;
  Ctor.rounding = 1;
  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);
};
P.cubeRoot = P.cbrt = function() {
  var e3, m, n, r, rep, s, sd, t, t3, t3plusx, x = this, Ctor = x.constructor;
  if (!x.isFinite() || x.isZero()) return new Ctor(x);
  external = false;
  s = x.s * mathpow(x.s * x, 1 / 3);
  if (!s || Math.abs(s) == 1 / 0) {
    n = digitsToString(x.d);
    e3 = x.e;
    if (s = (e3 - n.length + 1) % 3) n += s == 1 || s == -2 ? "0" : "00";
    s = mathpow(n, 1 / 3);
    e3 = mathfloor((e3 + 1) / 3) - (e3 % 3 == (e3 < 0 ? -1 : 2));
    if (s == 1 / 0) {
      n = "5e" + e3;
    } else {
      n = s.toExponential();
      n = n.slice(0, n.indexOf("e") + 1) + e3;
    }
    r = new Ctor(n);
    r.s = x.s;
  } else {
    r = new Ctor(s.toString());
  }
  sd = (e3 = Ctor.precision) + 3;
  for (; ; ) {
    t = r;
    t3 = t.times(t).times(t);
    t3plusx = t3.plus(x);
    r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);
    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {
      n = n.slice(sd - 3, sd + 1);
      if (n == "9999" || !rep && n == "4999") {
        if (!rep) {
          finalise(t, e3 + 1, 0);
          if (t.times(t).times(t).eq(x)) {
            r = t;
            break;
          }
        }
        sd += 4;
        rep = 1;
      } else {
        if (!+n || !+n.slice(1) && n.charAt(0) == "5") {
          finalise(r, e3 + 1, 1);
          m = !r.times(r).times(r).eq(x);
        }
        break;
      }
    }
  }
  external = true;
  return finalise(r, e3, Ctor.rounding, m);
};
P.decimalPlaces = P.dp = function() {
  var w, d2 = this.d, n = NaN;
  if (d2) {
    w = d2.length - 1;
    n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;
    w = d2[w];
    if (w) for (; w % 10 == 0; w /= 10) n--;
    if (n < 0) n = 0;
  }
  return n;
};
P.dividedBy = P.div = function(y) {
  return divide(this, new this.constructor(y));
};
P.dividedToIntegerBy = P.divToInt = function(y) {
  var x = this, Ctor = x.constructor;
  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);
};
P.equals = P.eq = function(y) {
  return this.cmp(y) === 0;
};
P.floor = function() {
  return finalise(new this.constructor(this), this.e + 1, 3);
};
P.greaterThan = P.gt = function(y) {
  return this.cmp(y) > 0;
};
P.greaterThanOrEqualTo = P.gte = function(y) {
  var k = this.cmp(y);
  return k == 1 || k === 0;
};
P.hyperbolicCosine = P.cosh = function() {
  var k, n, pr, rm, len, x = this, Ctor = x.constructor, one = new Ctor(1);
  if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);
  if (x.isZero()) return one;
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
  Ctor.rounding = 1;
  len = x.d.length;
  if (len < 32) {
    k = Math.ceil(len / 3);
    n = (1 / tinyPow(4, k)).toString();
  } else {
    k = 16;
    n = "2.3283064365386962890625e-10";
  }
  x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);
  var cosh2_x, i2 = k, d8 = new Ctor(8);
  for (; i2--; ) {
    cosh2_x = x.times(x);
    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));
  }
  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);
};
P.hyperbolicSine = P.sinh = function() {
  var k, pr, rm, len, x = this, Ctor = x.constructor;
  if (!x.isFinite() || x.isZero()) return new Ctor(x);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;
  Ctor.rounding = 1;
  len = x.d.length;
  if (len < 3) {
    x = taylorSeries(Ctor, 2, x, x, true);
  } else {
    k = 1.4 * Math.sqrt(len);
    k = k > 16 ? 16 : k | 0;
    x = x.times(1 / tinyPow(5, k));
    x = taylorSeries(Ctor, 2, x, x, true);
    var sinh2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);
    for (; k--; ) {
      sinh2_x = x.times(x);
      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));
    }
  }
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return finalise(x, pr, rm, true);
};
P.hyperbolicTangent = P.tanh = function() {
  var pr, rm, x = this, Ctor = x.constructor;
  if (!x.isFinite()) return new Ctor(x.s);
  if (x.isZero()) return new Ctor(x);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + 7;
  Ctor.rounding = 1;
  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);
};
P.inverseCosine = P.acos = function() {
  var x = this, Ctor = x.constructor, k = x.abs().cmp(1), pr = Ctor.precision, rm = Ctor.rounding;
  if (k !== -1) {
    return k === 0 ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0) : new Ctor(NaN);
  }
  if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);
  Ctor.precision = pr + 6;
  Ctor.rounding = 1;
  x = new Ctor(1).minus(x).div(x.plus(1)).sqrt().atan();
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return x.times(2);
};
P.inverseHyperbolicCosine = P.acosh = function() {
  var pr, rm, x = this, Ctor = x.constructor;
  if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);
  if (!x.isFinite()) return new Ctor(x);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;
  Ctor.rounding = 1;
  external = false;
  x = x.times(x).minus(1).sqrt().plus(x);
  external = true;
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return x.ln();
};
P.inverseHyperbolicSine = P.asinh = function() {
  var pr, rm, x = this, Ctor = x.constructor;
  if (!x.isFinite() || x.isZero()) return new Ctor(x);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;
  Ctor.rounding = 1;
  external = false;
  x = x.times(x).plus(1).sqrt().plus(x);
  external = true;
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return x.ln();
};
P.inverseHyperbolicTangent = P.atanh = function() {
  var pr, rm, wpr, xsd, x = this, Ctor = x.constructor;
  if (!x.isFinite()) return new Ctor(NaN);
  if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  xsd = x.sd();
  if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);
  Ctor.precision = wpr = xsd - x.e;
  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);
  Ctor.precision = pr + 4;
  Ctor.rounding = 1;
  x = x.ln();
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return x.times(0.5);
};
P.inverseSine = P.asin = function() {
  var halfPi, k, pr, rm, x = this, Ctor = x.constructor;
  if (x.isZero()) return new Ctor(x);
  k = x.abs().cmp(1);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  if (k !== -1) {
    if (k === 0) {
      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);
      halfPi.s = x.s;
      return halfPi;
    }
    return new Ctor(NaN);
  }
  Ctor.precision = pr + 6;
  Ctor.rounding = 1;
  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return x.times(2);
};
P.inverseTangent = P.atan = function() {
  var i2, j, k, n, px, t, r, wpr, x2, x = this, Ctor = x.constructor, pr = Ctor.precision, rm = Ctor.rounding;
  if (!x.isFinite()) {
    if (!x.s) return new Ctor(NaN);
    if (pr + 4 <= PI_PRECISION) {
      r = getPi(Ctor, pr + 4, rm).times(0.5);
      r.s = x.s;
      return r;
    }
  } else if (x.isZero()) {
    return new Ctor(x);
  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {
    r = getPi(Ctor, pr + 4, rm).times(0.25);
    r.s = x.s;
    return r;
  }
  Ctor.precision = wpr = pr + 10;
  Ctor.rounding = 1;
  k = Math.min(28, wpr / LOG_BASE + 2 | 0);
  for (i2 = k; i2; --i2) x = x.div(x.times(x).plus(1).sqrt().plus(1));
  external = false;
  j = Math.ceil(wpr / LOG_BASE);
  n = 1;
  x2 = x.times(x);
  r = new Ctor(x);
  px = x;
  for (; i2 !== -1; ) {
    px = px.times(x2);
    t = r.minus(px.div(n += 2));
    px = px.times(x2);
    r = t.plus(px.div(n += 2));
    if (r.d[j] !== void 0) for (i2 = j; r.d[i2] === t.d[i2] && i2--; ) ;
  }
  if (k) r = r.times(2 << k - 1);
  external = true;
  return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);
};
P.isFinite = function() {
  return !!this.d;
};
P.isInteger = P.isInt = function() {
  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;
};
P.isNaN = function() {
  return !this.s;
};
P.isNegative = P.isNeg = function() {
  return this.s < 0;
};
P.isPositive = P.isPos = function() {
  return this.s > 0;
};
P.isZero = function() {
  return !!this.d && this.d[0] === 0;
};
P.lessThan = P.lt = function(y) {
  return this.cmp(y) < 0;
};
P.lessThanOrEqualTo = P.lte = function(y) {
  return this.cmp(y) < 1;
};
P.logarithm = P.log = function(base) {
  var isBase10, d2, denominator, k, inf, num, sd, r, arg2 = this, Ctor = arg2.constructor, pr = Ctor.precision, rm = Ctor.rounding, guard = 5;
  if (base == null) {
    base = new Ctor(10);
    isBase10 = true;
  } else {
    base = new Ctor(base);
    d2 = base.d;
    if (base.s < 0 || !d2 || !d2[0] || base.eq(1)) return new Ctor(NaN);
    isBase10 = base.eq(10);
  }
  d2 = arg2.d;
  if (arg2.s < 0 || !d2 || !d2[0] || arg2.eq(1)) {
    return new Ctor(d2 && !d2[0] ? -1 / 0 : arg2.s != 1 ? NaN : d2 ? 0 : 1 / 0);
  }
  if (isBase10) {
    if (d2.length > 1) {
      inf = true;
    } else {
      for (k = d2[0]; k % 10 === 0; ) k /= 10;
      inf = k !== 1;
    }
  }
  external = false;
  sd = pr + guard;
  num = naturalLogarithm(arg2, sd);
  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);
  r = divide(num, denominator, sd, 1);
  if (checkRoundingDigits(r.d, k = pr, rm)) {
    do {
      sd += 10;
      num = naturalLogarithm(arg2, sd);
      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);
      r = divide(num, denominator, sd, 1);
      if (!inf) {
        if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {
          r = finalise(r, pr + 1, 0);
        }
        break;
      }
    } while (checkRoundingDigits(r.d, k += 10, rm));
  }
  external = true;
  return finalise(r, pr, rm);
};
P.minus = P.sub = function(y) {
  var d2, e3, i2, j, k, len, pr, rm, xd, xe, xLTy, yd, x = this, Ctor = x.constructor;
  y = new Ctor(y);
  if (!x.d || !y.d) {
    if (!x.s || !y.s) y = new Ctor(NaN);
    else if (x.d) y.s = -y.s;
    else y = new Ctor(y.d || x.s !== y.s ? x : NaN);
    return y;
  }
  if (x.s != y.s) {
    y.s = -y.s;
    return x.plus(y);
  }
  xd = x.d;
  yd = y.d;
  pr = Ctor.precision;
  rm = Ctor.rounding;
  if (!xd[0] || !yd[0]) {
    if (yd[0]) y.s = -y.s;
    else if (xd[0]) y = new Ctor(x);
    else return new Ctor(rm === 3 ? -0 : 0);
    return external ? finalise(y, pr, rm) : y;
  }
  e3 = mathfloor(y.e / LOG_BASE);
  xe = mathfloor(x.e / LOG_BASE);
  xd = xd.slice();
  k = xe - e3;
  if (k) {
    xLTy = k < 0;
    if (xLTy) {
      d2 = xd;
      k = -k;
      len = yd.length;
    } else {
      d2 = yd;
      e3 = xe;
      len = xd.length;
    }
    i2 = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;
    if (k > i2) {
      k = i2;
      d2.length = 1;
    }
    d2.reverse();
    for (i2 = k; i2--; ) d2.push(0);
    d2.reverse();
  } else {
    i2 = xd.length;
    len = yd.length;
    xLTy = i2 < len;
    if (xLTy) len = i2;
    for (i2 = 0; i2 < len; i2++) {
      if (xd[i2] != yd[i2]) {
        xLTy = xd[i2] < yd[i2];
        break;
      }
    }
    k = 0;
  }
  if (xLTy) {
    d2 = xd;
    xd = yd;
    yd = d2;
    y.s = -y.s;
  }
  len = xd.length;
  for (i2 = yd.length - len; i2 > 0; --i2) xd[len++] = 0;
  for (i2 = yd.length; i2 > k; ) {
    if (xd[--i2] < yd[i2]) {
      for (j = i2; j && xd[--j] === 0; ) xd[j] = BASE - 1;
      --xd[j];
      xd[i2] += BASE;
    }
    xd[i2] -= yd[i2];
  }
  for (; xd[--len] === 0; ) xd.pop();
  for (; xd[0] === 0; xd.shift()) --e3;
  if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);
  y.d = xd;
  y.e = getBase10Exponent(xd, e3);
  return external ? finalise(y, pr, rm) : y;
};
P.modulo = P.mod = function(y) {
  var q, x = this, Ctor = x.constructor;
  y = new Ctor(y);
  if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);
  if (!y.d || x.d && !x.d[0]) {
    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);
  }
  external = false;
  if (Ctor.modulo == 9) {
    q = divide(x, y.abs(), 0, 3, 1);
    q.s *= y.s;
  } else {
    q = divide(x, y, 0, Ctor.modulo, 1);
  }
  q = q.times(y);
  external = true;
  return x.minus(q);
};
P.naturalExponential = P.exp = function() {
  return naturalExponential(this);
};
P.naturalLogarithm = P.ln = function() {
  return naturalLogarithm(this);
};
P.negated = P.neg = function() {
  var x = new this.constructor(this);
  x.s = -x.s;
  return finalise(x);
};
P.plus = P.add = function(y) {
  var carry, d2, e3, i2, k, len, pr, rm, xd, yd, x = this, Ctor = x.constructor;
  y = new Ctor(y);
  if (!x.d || !y.d) {
    if (!x.s || !y.s) y = new Ctor(NaN);
    else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);
    return y;
  }
  if (x.s != y.s) {
    y.s = -y.s;
    return x.minus(y);
  }
  xd = x.d;
  yd = y.d;
  pr = Ctor.precision;
  rm = Ctor.rounding;
  if (!xd[0] || !yd[0]) {
    if (!yd[0]) y = new Ctor(x);
    return external ? finalise(y, pr, rm) : y;
  }
  k = mathfloor(x.e / LOG_BASE);
  e3 = mathfloor(y.e / LOG_BASE);
  xd = xd.slice();
  i2 = k - e3;
  if (i2) {
    if (i2 < 0) {
      d2 = xd;
      i2 = -i2;
      len = yd.length;
    } else {
      d2 = yd;
      e3 = k;
      len = xd.length;
    }
    k = Math.ceil(pr / LOG_BASE);
    len = k > len ? k + 1 : len + 1;
    if (i2 > len) {
      i2 = len;
      d2.length = 1;
    }
    d2.reverse();
    for (; i2--; ) d2.push(0);
    d2.reverse();
  }
  len = xd.length;
  i2 = yd.length;
  if (len - i2 < 0) {
    i2 = len;
    d2 = yd;
    yd = xd;
    xd = d2;
  }
  for (carry = 0; i2; ) {
    carry = (xd[--i2] = xd[i2] + yd[i2] + carry) / BASE | 0;
    xd[i2] %= BASE;
  }
  if (carry) {
    xd.unshift(carry);
    ++e3;
  }
  for (len = xd.length; xd[--len] == 0; ) xd.pop();
  y.d = xd;
  y.e = getBase10Exponent(xd, e3);
  return external ? finalise(y, pr, rm) : y;
};
P.precision = P.sd = function(z) {
  var k, x = this;
  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);
  if (x.d) {
    k = getPrecision(x.d);
    if (z && x.e + 1 > k) k = x.e + 1;
  } else {
    k = NaN;
  }
  return k;
};
P.round = function() {
  var x = this, Ctor = x.constructor;
  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);
};
P.sine = P.sin = function() {
  var pr, rm, x = this, Ctor = x.constructor;
  if (!x.isFinite()) return new Ctor(NaN);
  if (x.isZero()) return new Ctor(x);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;
  Ctor.rounding = 1;
  x = sine(Ctor, toLessThanHalfPi(Ctor, x));
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);
};
P.squareRoot = P.sqrt = function() {
  var m, n, sd, r, rep, t, x = this, d2 = x.d, e3 = x.e, s = x.s, Ctor = x.constructor;
  if (s !== 1 || !d2 || !d2[0]) {
    return new Ctor(!s || s < 0 && (!d2 || d2[0]) ? NaN : d2 ? x : 1 / 0);
  }
  external = false;
  s = Math.sqrt(+x);
  if (s == 0 || s == 1 / 0) {
    n = digitsToString(d2);
    if ((n.length + e3) % 2 == 0) n += "0";
    s = Math.sqrt(n);
    e3 = mathfloor((e3 + 1) / 2) - (e3 < 0 || e3 % 2);
    if (s == 1 / 0) {
      n = "5e" + e3;
    } else {
      n = s.toExponential();
      n = n.slice(0, n.indexOf("e") + 1) + e3;
    }
    r = new Ctor(n);
  } else {
    r = new Ctor(s.toString());
  }
  sd = (e3 = Ctor.precision) + 3;
  for (; ; ) {
    t = r;
    r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);
    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {
      n = n.slice(sd - 3, sd + 1);
      if (n == "9999" || !rep && n == "4999") {
        if (!rep) {
          finalise(t, e3 + 1, 0);
          if (t.times(t).eq(x)) {
            r = t;
            break;
          }
        }
        sd += 4;
        rep = 1;
      } else {
        if (!+n || !+n.slice(1) && n.charAt(0) == "5") {
          finalise(r, e3 + 1, 1);
          m = !r.times(r).eq(x);
        }
        break;
      }
    }
  }
  external = true;
  return finalise(r, e3, Ctor.rounding, m);
};
P.tangent = P.tan = function() {
  var pr, rm, x = this, Ctor = x.constructor;
  if (!x.isFinite()) return new Ctor(NaN);
  if (x.isZero()) return new Ctor(x);
  pr = Ctor.precision;
  rm = Ctor.rounding;
  Ctor.precision = pr + 10;
  Ctor.rounding = 1;
  x = x.sin();
  x.s = 1;
  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);
  Ctor.precision = pr;
  Ctor.rounding = rm;
  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);
};
P.times = P.mul = function(y) {
  var carry, e3, i2, k, r, rL, t, xdL, ydL, x = this, Ctor = x.constructor, xd = x.d, yd = (y = new Ctor(y)).d;
  y.s *= x.s;
  if (!xd || !xd[0] || !yd || !yd[0]) {
    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd ? NaN : !xd || !yd ? y.s / 0 : y.s * 0);
  }
  e3 = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);
  xdL = xd.length;
  ydL = yd.length;
  if (xdL < ydL) {
    r = xd;
    xd = yd;
    yd = r;
    rL = xdL;
    xdL = ydL;
    ydL = rL;
  }
  r = [];
  rL = xdL + ydL;
  for (i2 = rL; i2--; ) r.push(0);
  for (i2 = ydL; --i2 >= 0; ) {
    carry = 0;
    for (k = xdL + i2; k > i2; ) {
      t = r[k] + yd[i2] * xd[k - i2 - 1] + carry;
      r[k--] = t % BASE | 0;
      carry = t / BASE | 0;
    }
    r[k] = (r[k] + carry) % BASE | 0;
  }
  for (; !r[--rL]; ) r.pop();
  if (carry) ++e3;
  else r.shift();
  y.d = r;
  y.e = getBase10Exponent(r, e3);
  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;
};
P.toBinary = function(sd, rm) {
  return toStringBinary(this, 2, sd, rm);
};
P.toDecimalPlaces = P.toDP = function(dp, rm) {
  var x = this, Ctor = x.constructor;
  x = new Ctor(x);
  if (dp === void 0) return x;
  checkInt32(dp, 0, MAX_DIGITS);
  if (rm === void 0) rm = Ctor.rounding;
  else checkInt32(rm, 0, 8);
  return finalise(x, dp + x.e + 1, rm);
};
P.toExponential = function(dp, rm) {
  var str, x = this, Ctor = x.constructor;
  if (dp === void 0) {
    str = finiteToString(x, true);
  } else {
    checkInt32(dp, 0, MAX_DIGITS);
    if (rm === void 0) rm = Ctor.rounding;
    else checkInt32(rm, 0, 8);
    x = finalise(new Ctor(x), dp + 1, rm);
    str = finiteToString(x, true, dp + 1);
  }
  return x.isNeg() && !x.isZero() ? "-" + str : str;
};
P.toFixed = function(dp, rm) {
  var str, y, x = this, Ctor = x.constructor;
  if (dp === void 0) {
    str = finiteToString(x);
  } else {
    checkInt32(dp, 0, MAX_DIGITS);
    if (rm === void 0) rm = Ctor.rounding;
    else checkInt32(rm, 0, 8);
    y = finalise(new Ctor(x), dp + x.e + 1, rm);
    str = finiteToString(y, false, dp + y.e + 1);
  }
  return x.isNeg() && !x.isZero() ? "-" + str : str;
};
P.toFraction = function(maxD) {
  var d2, d0, d1, d22, e3, k, n, n0, n16, pr, q, r, x = this, xd = x.d, Ctor = x.constructor;
  if (!xd) return new Ctor(x);
  n16 = d0 = new Ctor(1);
  d1 = n0 = new Ctor(0);
  d2 = new Ctor(d1);
  e3 = d2.e = getPrecision(xd) - x.e - 1;
  k = e3 % LOG_BASE;
  d2.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);
  if (maxD == null) {
    maxD = e3 > 0 ? d2 : n16;
  } else {
    n = new Ctor(maxD);
    if (!n.isInt() || n.lt(n16)) throw Error(invalidArgument + n);
    maxD = n.gt(d2) ? e3 > 0 ? d2 : n16 : n;
  }
  external = false;
  n = new Ctor(digitsToString(xd));
  pr = Ctor.precision;
  Ctor.precision = e3 = xd.length * LOG_BASE * 2;
  for (; ; ) {
    q = divide(n, d2, 0, 1, 1);
    d22 = d0.plus(q.times(d1));
    if (d22.cmp(maxD) == 1) break;
    d0 = d1;
    d1 = d22;
    d22 = n16;
    n16 = n0.plus(q.times(d22));
    n0 = d22;
    d22 = d2;
    d2 = n.minus(q.times(d22));
    n = d22;
  }
  d22 = divide(maxD.minus(d0), d1, 0, 1, 1);
  n0 = n0.plus(d22.times(n16));
  d0 = d0.plus(d22.times(d1));
  n0.s = n16.s = x.s;
  r = divide(n16, d1, e3, 1).minus(x).abs().cmp(divide(n0, d0, e3, 1).minus(x).abs()) < 1 ? [n16, d1] : [n0, d0];
  Ctor.precision = pr;
  external = true;
  return r;
};
P.toHexadecimal = P.toHex = function(sd, rm) {
  return toStringBinary(this, 16, sd, rm);
};
P.toNearest = function(y, rm) {
  var x = this, Ctor = x.constructor;
  x = new Ctor(x);
  if (y == null) {
    if (!x.d) return x;
    y = new Ctor(1);
    rm = Ctor.rounding;
  } else {
    y = new Ctor(y);
    if (rm === void 0) {
      rm = Ctor.rounding;
    } else {
      checkInt32(rm, 0, 8);
    }
    if (!x.d) return y.s ? x : y;
    if (!y.d) {
      if (y.s) y.s = x.s;
      return y;
    }
  }
  if (y.d[0]) {
    external = false;
    x = divide(x, y, 0, rm, 1).times(y);
    external = true;
    finalise(x);
  } else {
    y.s = x.s;
    x = y;
  }
  return x;
};
P.toNumber = function() {
  return +this;
};
P.toOctal = function(sd, rm) {
  return toStringBinary(this, 8, sd, rm);
};
P.toPower = P.pow = function(y) {
  var e3, k, pr, r, rm, s, x = this, Ctor = x.constructor, yn = +(y = new Ctor(y));
  if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));
  x = new Ctor(x);
  if (x.eq(1)) return x;
  pr = Ctor.precision;
  rm = Ctor.rounding;
  if (y.eq(1)) return finalise(x, pr, rm);
  e3 = mathfloor(y.e / LOG_BASE);
  if (e3 >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {
    r = intPow(Ctor, x, k, pr);
    return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);
  }
  s = x.s;
  if (s < 0) {
    if (e3 < y.d.length - 1) return new Ctor(NaN);
    if ((y.d[e3] & 1) == 0) s = 1;
    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {
      x.s = s;
      return x;
    }
  }
  k = mathpow(+x, yn);
  e3 = k == 0 || !isFinite(k) ? mathfloor(yn * (Math.log("0." + digitsToString(x.d)) / Math.LN10 + x.e + 1)) : new Ctor(k + "").e;
  if (e3 > Ctor.maxE + 1 || e3 < Ctor.minE - 1) return new Ctor(e3 > 0 ? s / 0 : 0);
  external = false;
  Ctor.rounding = x.s = 1;
  k = Math.min(12, (e3 + "").length);
  r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);
  if (r.d) {
    r = finalise(r, pr + 5, 1);
    if (checkRoundingDigits(r.d, pr, rm)) {
      e3 = pr + 10;
      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e3 + k)), e3), e3 + 5, 1);
      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {
        r = finalise(r, pr + 1, 0);
      }
    }
  }
  r.s = s;
  external = true;
  Ctor.rounding = rm;
  return finalise(r, pr, rm);
};
P.toPrecision = function(sd, rm) {
  var str, x = this, Ctor = x.constructor;
  if (sd === void 0) {
    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
  } else {
    checkInt32(sd, 1, MAX_DIGITS);
    if (rm === void 0) rm = Ctor.rounding;
    else checkInt32(rm, 0, 8);
    x = finalise(new Ctor(x), sd, rm);
    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);
  }
  return x.isNeg() && !x.isZero() ? "-" + str : str;
};
P.toSignificantDigits = P.toSD = function(sd, rm) {
  var x = this, Ctor = x.constructor;
  if (sd === void 0) {
    sd = Ctor.precision;
    rm = Ctor.rounding;
  } else {
    checkInt32(sd, 1, MAX_DIGITS);
    if (rm === void 0) rm = Ctor.rounding;
    else checkInt32(rm, 0, 8);
  }
  return finalise(new Ctor(x), sd, rm);
};
P.toString = function() {
  var x = this, Ctor = x.constructor, str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
  return x.isNeg() && !x.isZero() ? "-" + str : str;
};
P.truncated = P.trunc = function() {
  return finalise(new this.constructor(this), this.e + 1, 1);
};
P.valueOf = P.toJSON = function() {
  var x = this, Ctor = x.constructor, str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);
  return x.isNeg() ? "-" + str : str;
};
function digitsToString(d2) {
  var i2, k, ws, indexOfLastWord = d2.length - 1, str = "", w = d2[0];
  if (indexOfLastWord > 0) {
    str += w;
    for (i2 = 1; i2 < indexOfLastWord; i2++) {
      ws = d2[i2] + "";
      k = LOG_BASE - ws.length;
      if (k) str += getZeroString(k);
      str += ws;
    }
    w = d2[i2];
    ws = w + "";
    k = LOG_BASE - ws.length;
    if (k) str += getZeroString(k);
  } else if (w === 0) {
    return "0";
  }
  for (; w % 10 === 0; ) w /= 10;
  return str + w;
}
function checkInt32(i2, min3, max3) {
  if (i2 !== ~~i2 || i2 < min3 || i2 > max3) {
    throw Error(invalidArgument + i2);
  }
}
function checkRoundingDigits(d2, i2, rm, repeating) {
  var di, k, r, rd;
  for (k = d2[0]; k >= 10; k /= 10) --i2;
  if (--i2 < 0) {
    i2 += LOG_BASE;
    di = 0;
  } else {
    di = Math.ceil((i2 + 1) / LOG_BASE);
    i2 %= LOG_BASE;
  }
  k = mathpow(10, LOG_BASE - i2);
  rd = d2[di] % k | 0;
  if (repeating == null) {
    if (i2 < 3) {
      if (i2 == 0) rd = rd / 100 | 0;
      else if (i2 == 1) rd = rd / 10 | 0;
      r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 5e4 || rd == 0;
    } else {
      r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) && (d2[di + 1] / k / 100 | 0) == mathpow(10, i2 - 2) - 1 || (rd == k / 2 || rd == 0) && (d2[di + 1] / k / 100 | 0) == 0;
    }
  } else {
    if (i2 < 4) {
      if (i2 == 0) rd = rd / 1e3 | 0;
      else if (i2 == 1) rd = rd / 100 | 0;
      else if (i2 == 2) rd = rd / 10 | 0;
      r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;
    } else {
      r = ((repeating || rm < 4) && rd + 1 == k || !repeating && rm > 3 && rd + 1 == k / 2) && (d2[di + 1] / k / 1e3 | 0) == mathpow(10, i2 - 3) - 1;
    }
  }
  return r;
}
function convertBase(str, baseIn, baseOut) {
  var j, arr = [0], arrL, i2 = 0, strL = str.length;
  for (; i2 < strL; ) {
    for (arrL = arr.length; arrL--; ) arr[arrL] *= baseIn;
    arr[0] += NUMERALS.indexOf(str.charAt(i2++));
    for (j = 0; j < arr.length; j++) {
      if (arr[j] > baseOut - 1) {
        if (arr[j + 1] === void 0) arr[j + 1] = 0;
        arr[j + 1] += arr[j] / baseOut | 0;
        arr[j] %= baseOut;
      }
    }
  }
  return arr.reverse();
}
function cosine(Ctor, x) {
  var k, len, y;
  if (x.isZero()) return x;
  len = x.d.length;
  if (len < 32) {
    k = Math.ceil(len / 3);
    y = (1 / tinyPow(4, k)).toString();
  } else {
    k = 16;
    y = "2.3283064365386962890625e-10";
  }
  Ctor.precision += k;
  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));
  for (var i2 = k; i2--; ) {
    var cos2x = x.times(x);
    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);
  }
  Ctor.precision -= k;
  return x;
}
var divide = /* @__PURE__ */ function() {
  function multiplyInteger(x, k, base) {
    var temp, carry = 0, i2 = x.length;
    for (x = x.slice(); i2--; ) {
      temp = x[i2] * k + carry;
      x[i2] = temp % base | 0;
      carry = temp / base | 0;
    }
    if (carry) x.unshift(carry);
    return x;
  }
  function compare2(a, b2, aL, bL) {
    var i2, r;
    if (aL != bL) {
      r = aL > bL ? 1 : -1;
    } else {
      for (i2 = r = 0; i2 < aL; i2++) {
        if (a[i2] != b2[i2]) {
          r = a[i2] > b2[i2] ? 1 : -1;
          break;
        }
      }
    }
    return r;
  }
  function subtract2(a, b2, aL, base) {
    var i2 = 0;
    for (; aL--; ) {
      a[aL] -= i2;
      i2 = a[aL] < b2[aL] ? 1 : 0;
      a[aL] = i2 * base + a[aL] - b2[aL];
    }
    for (; !a[0] && a.length > 1; ) a.shift();
  }
  return function(x, y, pr, rm, dp, base) {
    var cmp, e3, i2, k, logBase, more, prod2, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0, yL, yz, Ctor = x.constructor, sign4 = x.s == y.s ? 1 : -1, xd = x.d, yd = y.d;
    if (!xd || !xd[0] || !yd || !yd[0]) {
      return new Ctor(
        // Return NaN if either NaN, or both Infinity or 0.
        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN : (
          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.
          xd && xd[0] == 0 || !yd ? sign4 * 0 : sign4 / 0
        )
      );
    }
    if (base) {
      logBase = 1;
      e3 = x.e - y.e;
    } else {
      base = BASE;
      logBase = LOG_BASE;
      e3 = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);
    }
    yL = yd.length;
    xL = xd.length;
    q = new Ctor(sign4);
    qd = q.d = [];
    for (i2 = 0; yd[i2] == (xd[i2] || 0); i2++) ;
    if (yd[i2] > (xd[i2] || 0)) e3--;
    if (pr == null) {
      sd = pr = Ctor.precision;
      rm = Ctor.rounding;
    } else if (dp) {
      sd = pr + (x.e - y.e) + 1;
    } else {
      sd = pr;
    }
    if (sd < 0) {
      qd.push(1);
      more = true;
    } else {
      sd = sd / logBase + 2 | 0;
      i2 = 0;
      if (yL == 1) {
        k = 0;
        yd = yd[0];
        sd++;
        for (; (i2 < xL || k) && sd--; i2++) {
          t = k * base + (xd[i2] || 0);
          qd[i2] = t / yd | 0;
          k = t % yd | 0;
        }
        more = k || i2 < xL;
      } else {
        k = base / (yd[0] + 1) | 0;
        if (k > 1) {
          yd = multiplyInteger(yd, k, base);
          xd = multiplyInteger(xd, k, base);
          yL = yd.length;
          xL = xd.length;
        }
        xi = yL;
        rem = xd.slice(0, yL);
        remL = rem.length;
        for (; remL < yL; ) rem[remL++] = 0;
        yz = yd.slice();
        yz.unshift(0);
        yd0 = yd[0];
        if (yd[1] >= base / 2) ++yd0;
        do {
          k = 0;
          cmp = compare2(yd, rem, yL, remL);
          if (cmp < 0) {
            rem0 = rem[0];
            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);
            k = rem0 / yd0 | 0;
            if (k > 1) {
              if (k >= base) k = base - 1;
              prod2 = multiplyInteger(yd, k, base);
              prodL = prod2.length;
              remL = rem.length;
              cmp = compare2(prod2, rem, prodL, remL);
              if (cmp == 1) {
                k--;
                subtract2(prod2, yL < prodL ? yz : yd, prodL, base);
              }
            } else {
              if (k == 0) cmp = k = 1;
              prod2 = yd.slice();
            }
            prodL = prod2.length;
            if (prodL < remL) prod2.unshift(0);
            subtract2(rem, prod2, remL, base);
            if (cmp == -1) {
              remL = rem.length;
              cmp = compare2(yd, rem, yL, remL);
              if (cmp < 1) {
                k++;
                subtract2(rem, yL < remL ? yz : yd, remL, base);
              }
            }
            remL = rem.length;
          } else if (cmp === 0) {
            k++;
            rem = [0];
          }
          qd[i2++] = k;
          if (cmp && rem[0]) {
            rem[remL++] = xd[xi] || 0;
          } else {
            rem = [xd[xi]];
            remL = 1;
          }
        } while ((xi++ < xL || rem[0] !== void 0) && sd--);
        more = rem[0] !== void 0;
      }
      if (!qd[0]) qd.shift();
    }
    if (logBase == 1) {
      q.e = e3;
      inexact = more;
    } else {
      for (i2 = 1, k = qd[0]; k >= 10; k /= 10) i2++;
      q.e = i2 + e3 * logBase - 1;
      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);
    }
    return q;
  };
}();
function finalise(x, sd, rm, isTruncated) {
  var digits2, i2, j, k, rd, roundUp, w, xd, xdi, Ctor = x.constructor;
  out: if (sd != null) {
    xd = x.d;
    if (!xd) return x;
    for (digits2 = 1, k = xd[0]; k >= 10; k /= 10) digits2++;
    i2 = sd - digits2;
    if (i2 < 0) {
      i2 += LOG_BASE;
      j = sd;
      w = xd[xdi = 0];
      rd = w / mathpow(10, digits2 - j - 1) % 10 | 0;
    } else {
      xdi = Math.ceil((i2 + 1) / LOG_BASE);
      k = xd.length;
      if (xdi >= k) {
        if (isTruncated) {
          for (; k++ <= xdi; ) xd.push(0);
          w = rd = 0;
          digits2 = 1;
          i2 %= LOG_BASE;
          j = i2 - LOG_BASE + 1;
        } else {
          break out;
        }
      } else {
        w = k = xd[xdi];
        for (digits2 = 1; k >= 10; k /= 10) digits2++;
        i2 %= LOG_BASE;
        j = i2 - LOG_BASE + digits2;
        rd = j < 0 ? 0 : w / mathpow(10, digits2 - j - 1) % 10 | 0;
      }
    }
    isTruncated = isTruncated || sd < 0 || xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits2 - j - 1));
    roundUp = rm < 4 ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2)) : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 && // Check whether the digit to the left of the rounding digit is odd.
    (i2 > 0 ? j > 0 ? w / mathpow(10, digits2 - j) : 0 : xd[xdi - 1]) % 10 & 1 || rm == (x.s < 0 ? 8 : 7));
    if (sd < 1 || !xd[0]) {
      xd.length = 0;
      if (roundUp) {
        sd -= x.e + 1;
        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);
        x.e = -sd || 0;
      } else {
        xd[0] = x.e = 0;
      }
      return x;
    }
    if (i2 == 0) {
      xd.length = xdi;
      k = 1;
      xdi--;
    } else {
      xd.length = xdi + 1;
      k = mathpow(10, LOG_BASE - i2);
      xd[xdi] = j > 0 ? (w / mathpow(10, digits2 - j) % mathpow(10, j) | 0) * k : 0;
    }
    if (roundUp) {
      for (; ; ) {
        if (xdi == 0) {
          for (i2 = 1, j = xd[0]; j >= 10; j /= 10) i2++;
          j = xd[0] += k;
          for (k = 1; j >= 10; j /= 10) k++;
          if (i2 != k) {
            x.e++;
            if (xd[0] == BASE) xd[0] = 1;
          }
          break;
        } else {
          xd[xdi] += k;
          if (xd[xdi] != BASE) break;
          xd[xdi--] = 0;
          k = 1;
        }
      }
    }
    for (i2 = xd.length; xd[--i2] === 0; ) xd.pop();
  }
  if (external) {
    if (x.e > Ctor.maxE) {
      x.d = null;
      x.e = NaN;
    } else if (x.e < Ctor.minE) {
      x.e = 0;
      x.d = [0];
    }
  }
  return x;
}
function finiteToString(x, isExp, sd) {
  if (!x.isFinite()) return nonFiniteToString(x);
  var k, e3 = x.e, str = digitsToString(x.d), len = str.length;
  if (isExp) {
    if (sd && (k = sd - len) > 0) {
      str = str.charAt(0) + "." + str.slice(1) + getZeroString(k);
    } else if (len > 1) {
      str = str.charAt(0) + "." + str.slice(1);
    }
    str = str + (x.e < 0 ? "e" : "e+") + x.e;
  } else if (e3 < 0) {
    str = "0." + getZeroString(-e3 - 1) + str;
    if (sd && (k = sd - len) > 0) str += getZeroString(k);
  } else if (e3 >= len) {
    str += getZeroString(e3 + 1 - len);
    if (sd && (k = sd - e3 - 1) > 0) str = str + "." + getZeroString(k);
  } else {
    if ((k = e3 + 1) < len) str = str.slice(0, k) + "." + str.slice(k);
    if (sd && (k = sd - len) > 0) {
      if (e3 + 1 === len) str += ".";
      str += getZeroString(k);
    }
  }
  return str;
}
function getBase10Exponent(digits2, e3) {
  var w = digits2[0];
  for (e3 *= LOG_BASE; w >= 10; w /= 10) e3++;
  return e3;
}
function getLn10(Ctor, sd, pr) {
  if (sd > LN10_PRECISION) {
    external = true;
    if (pr) Ctor.precision = pr;
    throw Error(precisionLimitExceeded);
  }
  return finalise(new Ctor(LN10), sd, 1, true);
}
function getPi(Ctor, sd, rm) {
  if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);
  return finalise(new Ctor(PI), sd, rm, true);
}
function getPrecision(digits2) {
  var w = digits2.length - 1, len = w * LOG_BASE + 1;
  w = digits2[w];
  if (w) {
    for (; w % 10 == 0; w /= 10) len--;
    for (w = digits2[0]; w >= 10; w /= 10) len++;
  }
  return len;
}
function getZeroString(k) {
  var zs = "";
  for (; k--; ) zs += "0";
  return zs;
}
function intPow(Ctor, x, n, pr) {
  var isTruncated, r = new Ctor(1), k = Math.ceil(pr / LOG_BASE + 4);
  external = false;
  for (; ; ) {
    if (n % 2) {
      r = r.times(x);
      if (truncate(r.d, k)) isTruncated = true;
    }
    n = mathfloor(n / 2);
    if (n === 0) {
      n = r.d.length - 1;
      if (isTruncated && r.d[n] === 0) ++r.d[n];
      break;
    }
    x = x.times(x);
    truncate(x.d, k);
  }
  external = true;
  return r;
}
function isOdd(n) {
  return n.d[n.d.length - 1] & 1;
}
function maxOrMin(Ctor, args, n) {
  var k, y, x = new Ctor(args[0]), i2 = 0;
  for (; ++i2 < args.length; ) {
    y = new Ctor(args[i2]);
    if (!y.s) {
      x = y;
      break;
    }
    k = x.cmp(y);
    if (k === n || k === 0 && x.s === n) {
      x = y;
    }
  }
  return x;
}
function naturalExponential(x, sd) {
  var denominator, guard, j, pow3, sum3, t, wpr, rep = 0, i2 = 0, k = 0, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;
  if (!x.d || !x.d[0] || x.e > 17) {
    return new Ctor(x.d ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0 : x.s ? x.s < 0 ? 0 : x : 0 / 0);
  }
  if (sd == null) {
    external = false;
    wpr = pr;
  } else {
    wpr = sd;
  }
  t = new Ctor(0.03125);
  while (x.e > -2) {
    x = x.times(t);
    k += 5;
  }
  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;
  wpr += guard;
  denominator = pow3 = sum3 = new Ctor(1);
  Ctor.precision = wpr;
  for (; ; ) {
    pow3 = finalise(pow3.times(x), wpr, 1);
    denominator = denominator.times(++i2);
    t = sum3.plus(divide(pow3, denominator, wpr, 1));
    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum3.d).slice(0, wpr)) {
      j = k;
      while (j--) sum3 = finalise(sum3.times(sum3), wpr, 1);
      if (sd == null) {
        if (rep < 3 && checkRoundingDigits(sum3.d, wpr - guard, rm, rep)) {
          Ctor.precision = wpr += 10;
          denominator = pow3 = t = new Ctor(1);
          i2 = 0;
          rep++;
        } else {
          return finalise(sum3, Ctor.precision = pr, rm, external = true);
        }
      } else {
        Ctor.precision = pr;
        return sum3;
      }
    }
    sum3 = t;
  }
}
function naturalLogarithm(y, sd) {
  var c, c0, denominator, e3, numerator, rep, sum3, t, wpr, x1, x2, n = 1, guard = 10, x = y, xd = x.d, Ctor = x.constructor, rm = Ctor.rounding, pr = Ctor.precision;
  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {
    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);
  }
  if (sd == null) {
    external = false;
    wpr = pr;
  } else {
    wpr = sd;
  }
  Ctor.precision = wpr += guard;
  c = digitsToString(xd);
  c0 = c.charAt(0);
  if (Math.abs(e3 = x.e) < 15e14) {
    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {
      x = x.times(y);
      c = digitsToString(x.d);
      c0 = c.charAt(0);
      n++;
    }
    e3 = x.e;
    if (c0 > 1) {
      x = new Ctor("0." + c);
      e3++;
    } else {
      x = new Ctor(c0 + "." + c.slice(1));
    }
  } else {
    t = getLn10(Ctor, wpr + 2, pr).times(e3 + "");
    x = naturalLogarithm(new Ctor(c0 + "." + c.slice(1)), wpr - guard).plus(t);
    Ctor.precision = pr;
    return sd == null ? finalise(x, pr, rm, external = true) : x;
  }
  x1 = x;
  sum3 = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);
  x2 = finalise(x.times(x), wpr, 1);
  denominator = 3;
  for (; ; ) {
    numerator = finalise(numerator.times(x2), wpr, 1);
    t = sum3.plus(divide(numerator, new Ctor(denominator), wpr, 1));
    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum3.d).slice(0, wpr)) {
      sum3 = sum3.times(2);
      if (e3 !== 0) sum3 = sum3.plus(getLn10(Ctor, wpr + 2, pr).times(e3 + ""));
      sum3 = divide(sum3, new Ctor(n), wpr, 1);
      if (sd == null) {
        if (checkRoundingDigits(sum3.d, wpr - guard, rm, rep)) {
          Ctor.precision = wpr += guard;
          t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);
          x2 = finalise(x.times(x), wpr, 1);
          denominator = rep = 1;
        } else {
          return finalise(sum3, Ctor.precision = pr, rm, external = true);
        }
      } else {
        Ctor.precision = pr;
        return sum3;
      }
    }
    sum3 = t;
    denominator += 2;
  }
}
function nonFiniteToString(x) {
  return String(x.s * x.s / 0);
}
function parseDecimal(x, str) {
  var e3, i2, len;
  if ((e3 = str.indexOf(".")) > -1) str = str.replace(".", "");
  if ((i2 = str.search(/e/i)) > 0) {
    if (e3 < 0) e3 = i2;
    e3 += +str.slice(i2 + 1);
    str = str.substring(0, i2);
  } else if (e3 < 0) {
    e3 = str.length;
  }
  for (i2 = 0; str.charCodeAt(i2) === 48; i2++) ;
  for (len = str.length; str.charCodeAt(len - 1) === 48; --len) ;
  str = str.slice(i2, len);
  if (str) {
    len -= i2;
    x.e = e3 = e3 - i2 - 1;
    x.d = [];
    i2 = (e3 + 1) % LOG_BASE;
    if (e3 < 0) i2 += LOG_BASE;
    if (i2 < len) {
      if (i2) x.d.push(+str.slice(0, i2));
      for (len -= LOG_BASE; i2 < len; ) x.d.push(+str.slice(i2, i2 += LOG_BASE));
      str = str.slice(i2);
      i2 = LOG_BASE - str.length;
    } else {
      i2 -= len;
    }
    for (; i2--; ) str += "0";
    x.d.push(+str);
    if (external) {
      if (x.e > x.constructor.maxE) {
        x.d = null;
        x.e = NaN;
      } else if (x.e < x.constructor.minE) {
        x.e = 0;
        x.d = [0];
      }
    }
  } else {
    x.e = 0;
    x.d = [0];
  }
  return x;
}
function parseOther(x, str) {
  var base, Ctor, divisor, i2, isFloat, len, p, xd, xe;
  if (str.indexOf("_") > -1) {
    str = str.replace(/(\d)_(?=\d)/g, "$1");
    if (isDecimal.test(str)) return parseDecimal(x, str);
  } else if (str === "Infinity" || str === "NaN") {
    if (!+str) x.s = NaN;
    x.e = NaN;
    x.d = null;
    return x;
  }
  if (isHex.test(str)) {
    base = 16;
    str = str.toLowerCase();
  } else if (isBinary.test(str)) {
    base = 2;
  } else if (isOctal.test(str)) {
    base = 8;
  } else {
    throw Error(invalidArgument + str);
  }
  i2 = str.search(/p/i);
  if (i2 > 0) {
    p = +str.slice(i2 + 1);
    str = str.substring(2, i2);
  } else {
    str = str.slice(2);
  }
  i2 = str.indexOf(".");
  isFloat = i2 >= 0;
  Ctor = x.constructor;
  if (isFloat) {
    str = str.replace(".", "");
    len = str.length;
    i2 = len - i2;
    divisor = intPow(Ctor, new Ctor(base), i2, i2 * 2);
  }
  xd = convertBase(str, base, BASE);
  xe = xd.length - 1;
  for (i2 = xe; xd[i2] === 0; --i2) xd.pop();
  if (i2 < 0) return new Ctor(x.s * 0);
  x.e = getBase10Exponent(xd, xe);
  x.d = xd;
  external = false;
  if (isFloat) x = divide(x, divisor, len * 4);
  if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));
  external = true;
  return x;
}
function sine(Ctor, x) {
  var k, len = x.d.length;
  if (len < 3) {
    return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);
  }
  k = 1.4 * Math.sqrt(len);
  k = k > 16 ? 16 : k | 0;
  x = x.times(1 / tinyPow(5, k));
  x = taylorSeries(Ctor, 2, x, x);
  var sin2_x, d5 = new Ctor(5), d16 = new Ctor(16), d20 = new Ctor(20);
  for (; k--; ) {
    sin2_x = x.times(x);
    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));
  }
  return x;
}
function taylorSeries(Ctor, n, x, y, isHyperbolic) {
  var j, t, u, x2, i2 = 1, pr = Ctor.precision, k = Math.ceil(pr / LOG_BASE);
  external = false;
  x2 = x.times(x);
  u = new Ctor(y);
  for (; ; ) {
    t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);
    u = isHyperbolic ? y.plus(t) : y.minus(t);
    y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);
    t = u.plus(y);
    if (t.d[k] !== void 0) {
      for (j = k; t.d[j] === u.d[j] && j--; ) ;
      if (j == -1) break;
    }
    j = u;
    u = y;
    y = t;
    t = j;
    i2++;
  }
  external = true;
  t.d.length = k + 1;
  return t;
}
function tinyPow(b2, e3) {
  var n = b2;
  while (--e3) n *= b2;
  return n;
}
function toLessThanHalfPi(Ctor, x) {
  var t, isNeg = x.s < 0, pi3 = getPi(Ctor, Ctor.precision, 1), halfPi = pi3.times(0.5);
  x = x.abs();
  if (x.lte(halfPi)) {
    quadrant = isNeg ? 4 : 1;
    return x;
  }
  t = x.divToInt(pi3);
  if (t.isZero()) {
    quadrant = isNeg ? 3 : 2;
  } else {
    x = x.minus(t.times(pi3));
    if (x.lte(halfPi)) {
      quadrant = isOdd(t) ? isNeg ? 2 : 3 : isNeg ? 4 : 1;
      return x;
    }
    quadrant = isOdd(t) ? isNeg ? 1 : 4 : isNeg ? 3 : 2;
  }
  return x.minus(pi3).abs();
}
function toStringBinary(x, baseOut, sd, rm) {
  var base, e3, i2, k, len, roundUp, str, xd, y, Ctor = x.constructor, isExp = sd !== void 0;
  if (isExp) {
    checkInt32(sd, 1, MAX_DIGITS);
    if (rm === void 0) rm = Ctor.rounding;
    else checkInt32(rm, 0, 8);
  } else {
    sd = Ctor.precision;
    rm = Ctor.rounding;
  }
  if (!x.isFinite()) {
    str = nonFiniteToString(x);
  } else {
    str = finiteToString(x);
    i2 = str.indexOf(".");
    if (isExp) {
      base = 2;
      if (baseOut == 16) {
        sd = sd * 4 - 3;
      } else if (baseOut == 8) {
        sd = sd * 3 - 2;
      }
    } else {
      base = baseOut;
    }
    if (i2 >= 0) {
      str = str.replace(".", "");
      y = new Ctor(1);
      y.e = str.length - i2;
      y.d = convertBase(finiteToString(y), 10, base);
      y.e = y.d.length;
    }
    xd = convertBase(str, 10, base);
    e3 = len = xd.length;
    for (; xd[--len] == 0; ) xd.pop();
    if (!xd[0]) {
      str = isExp ? "0p+0" : "0";
    } else {
      if (i2 < 0) {
        e3--;
      } else {
        x = new Ctor(x);
        x.d = xd;
        x.e = e3;
        x = divide(x, y, sd, rm, 0, base);
        xd = x.d;
        e3 = x.e;
        roundUp = inexact;
      }
      i2 = xd[sd];
      k = base / 2;
      roundUp = roundUp || xd[sd + 1] !== void 0;
      roundUp = rm < 4 ? (i2 !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2)) : i2 > k || i2 === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 || rm === (x.s < 0 ? 8 : 7));
      xd.length = sd;
      if (roundUp) {
        for (; ++xd[--sd] > base - 1; ) {
          xd[sd] = 0;
          if (!sd) {
            ++e3;
            xd.unshift(1);
          }
        }
      }
      for (len = xd.length; !xd[len - 1]; --len) ;
      for (i2 = 0, str = ""; i2 < len; i2++) str += NUMERALS.charAt(xd[i2]);
      if (isExp) {
        if (len > 1) {
          if (baseOut == 16 || baseOut == 8) {
            i2 = baseOut == 16 ? 4 : 3;
            for (--len; len % i2; len++) str += "0";
            xd = convertBase(str, base, baseOut);
            for (len = xd.length; !xd[len - 1]; --len) ;
            for (i2 = 1, str = "1."; i2 < len; i2++) str += NUMERALS.charAt(xd[i2]);
          } else {
            str = str.charAt(0) + "." + str.slice(1);
          }
        }
        str = str + (e3 < 0 ? "p" : "p+") + e3;
      } else if (e3 < 0) {
        for (; ++e3; ) str = "0" + str;
        str = "0." + str;
      } else {
        if (++e3 > len) for (e3 -= len; e3--; ) str += "0";
        else if (e3 < len) str = str.slice(0, e3) + "." + str.slice(e3);
      }
    }
    str = (baseOut == 16 ? "0x" : baseOut == 2 ? "0b" : baseOut == 8 ? "0o" : "") + str;
  }
  return x.s < 0 ? "-" + str : str;
}
function truncate(arr, len) {
  if (arr.length > len) {
    arr.length = len;
    return true;
  }
}
function abs(x) {
  return new this(x).abs();
}
function acos(x) {
  return new this(x).acos();
}
function acosh2(x) {
  return new this(x).acosh();
}
function add2(x, y) {
  return new this(x).plus(y);
}
function asin(x) {
  return new this(x).asin();
}
function asinh2(x) {
  return new this(x).asinh();
}
function atan(x) {
  return new this(x).atan();
}
function atanh2(x) {
  return new this(x).atanh();
}
function atan2(y, x) {
  y = new this(y);
  x = new this(x);
  var r, pr = this.precision, rm = this.rounding, wpr = pr + 4;
  if (!y.s || !x.s) {
    r = new this(NaN);
  } else if (!y.d && !x.d) {
    r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);
    r.s = y.s;
  } else if (!x.d || y.isZero()) {
    r = x.s < 0 ? getPi(this, pr, rm) : new this(0);
    r.s = y.s;
  } else if (!y.d || x.isZero()) {
    r = getPi(this, wpr, 1).times(0.5);
    r.s = y.s;
  } else if (x.s < 0) {
    this.precision = wpr;
    this.rounding = 1;
    r = this.atan(divide(y, x, wpr, 1));
    x = getPi(this, wpr, 1);
    this.precision = pr;
    this.rounding = rm;
    r = y.s < 0 ? r.minus(x) : r.plus(x);
  } else {
    r = this.atan(divide(y, x, wpr, 1));
  }
  return r;
}
function cbrt3(x) {
  return new this(x).cbrt();
}
function ceil(x) {
  return finalise(x = new this(x), x.e + 1, 2);
}
function clamp(x, min3, max3) {
  return new this(x).clamp(min3, max3);
}
function config3(obj) {
  if (!obj || typeof obj !== "object") throw Error(decimalError + "Object expected");
  var i2, p, v, useDefaults = obj.defaults === true, ps = [
    "precision",
    1,
    MAX_DIGITS,
    "rounding",
    0,
    8,
    "toExpNeg",
    -EXP_LIMIT,
    0,
    "toExpPos",
    0,
    EXP_LIMIT,
    "maxE",
    0,
    EXP_LIMIT,
    "minE",
    -EXP_LIMIT,
    0,
    "modulo",
    0,
    9
  ];
  for (i2 = 0; i2 < ps.length; i2 += 3) {
    if (p = ps[i2], useDefaults) this[p] = DEFAULTS[p];
    if ((v = obj[p]) !== void 0) {
      if (mathfloor(v) === v && v >= ps[i2 + 1] && v <= ps[i2 + 2]) this[p] = v;
      else throw Error(invalidArgument + p + ": " + v);
    }
  }
  if (p = "crypto", useDefaults) this[p] = DEFAULTS[p];
  if ((v = obj[p]) !== void 0) {
    if (v === true || v === false || v === 0 || v === 1) {
      if (v) {
        if (typeof crypto != "undefined" && crypto && (crypto.getRandomValues || crypto.randomBytes)) {
          this[p] = true;
        } else {
          throw Error(cryptoUnavailable);
        }
      } else {
        this[p] = false;
      }
    } else {
      throw Error(invalidArgument + p + ": " + v);
    }
  }
  return this;
}
function cos(x) {
  return new this(x).cos();
}
function cosh2(x) {
  return new this(x).cosh();
}
function clone2(obj) {
  var i2, p, ps;
  function Decimal2(v) {
    var e3, i3, t, x = this;
    if (!(x instanceof Decimal2)) return new Decimal2(v);
    x.constructor = Decimal2;
    if (isDecimalInstance(v)) {
      x.s = v.s;
      if (external) {
        if (!v.d || v.e > Decimal2.maxE) {
          x.e = NaN;
          x.d = null;
        } else if (v.e < Decimal2.minE) {
          x.e = 0;
          x.d = [0];
        } else {
          x.e = v.e;
          x.d = v.d.slice();
        }
      } else {
        x.e = v.e;
        x.d = v.d ? v.d.slice() : v.d;
      }
      return;
    }
    t = typeof v;
    if (t === "number") {
      if (v === 0) {
        x.s = 1 / v < 0 ? -1 : 1;
        x.e = 0;
        x.d = [0];
        return;
      }
      if (v < 0) {
        v = -v;
        x.s = -1;
      } else {
        x.s = 1;
      }
      if (v === ~~v && v < 1e7) {
        for (e3 = 0, i3 = v; i3 >= 10; i3 /= 10) e3++;
        if (external) {
          if (e3 > Decimal2.maxE) {
            x.e = NaN;
            x.d = null;
          } else if (e3 < Decimal2.minE) {
            x.e = 0;
            x.d = [0];
          } else {
            x.e = e3;
            x.d = [v];
          }
        } else {
          x.e = e3;
          x.d = [v];
        }
        return;
      }
      if (v * 0 !== 0) {
        if (!v) x.s = NaN;
        x.e = NaN;
        x.d = null;
        return;
      }
      return parseDecimal(x, v.toString());
    }
    if (t === "string") {
      if ((i3 = v.charCodeAt(0)) === 45) {
        v = v.slice(1);
        x.s = -1;
      } else {
        if (i3 === 43) v = v.slice(1);
        x.s = 1;
      }
      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);
    }
    if (t === "bigint") {
      if (v < 0) {
        v = -v;
        x.s = -1;
      } else {
        x.s = 1;
      }
      return parseDecimal(x, v.toString());
    }
    throw Error(invalidArgument + v);
  }
  Decimal2.prototype = P;
  Decimal2.ROUND_UP = 0;
  Decimal2.ROUND_DOWN = 1;
  Decimal2.ROUND_CEIL = 2;
  Decimal2.ROUND_FLOOR = 3;
  Decimal2.ROUND_HALF_UP = 4;
  Decimal2.ROUND_HALF_DOWN = 5;
  Decimal2.ROUND_HALF_EVEN = 6;
  Decimal2.ROUND_HALF_CEIL = 7;
  Decimal2.ROUND_HALF_FLOOR = 8;
  Decimal2.EUCLID = 9;
  Decimal2.config = Decimal2.set = config3;
  Decimal2.clone = clone2;
  Decimal2.isDecimal = isDecimalInstance;
  Decimal2.abs = abs;
  Decimal2.acos = acos;
  Decimal2.acosh = acosh2;
  Decimal2.add = add2;
  Decimal2.asin = asin;
  Decimal2.asinh = asinh2;
  Decimal2.atan = atan;
  Decimal2.atanh = atanh2;
  Decimal2.atan2 = atan2;
  Decimal2.cbrt = cbrt3;
  Decimal2.ceil = ceil;
  Decimal2.clamp = clamp;
  Decimal2.cos = cos;
  Decimal2.cosh = cosh2;
  Decimal2.div = div;
  Decimal2.exp = exp;
  Decimal2.floor = floor;
  Decimal2.hypot = hypot;
  Decimal2.ln = ln;
  Decimal2.log = log;
  Decimal2.log10 = log103;
  Decimal2.log2 = log23;
  Decimal2.max = max;
  Decimal2.min = min;
  Decimal2.mod = mod;
  Decimal2.mul = mul;
  Decimal2.pow = pow;
  Decimal2.random = random;
  Decimal2.round = round;
  Decimal2.sign = sign2;
  Decimal2.sin = sin;
  Decimal2.sinh = sinh2;
  Decimal2.sqrt = sqrt;
  Decimal2.sub = sub;
  Decimal2.sum = sum;
  Decimal2.tan = tan;
  Decimal2.tanh = tanh2;
  Decimal2.trunc = trunc;
  if (obj === void 0) obj = {};
  if (obj) {
    if (obj.defaults !== true) {
      ps = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"];
      for (i2 = 0; i2 < ps.length; ) if (!obj.hasOwnProperty(p = ps[i2++])) obj[p] = this[p];
    }
  }
  Decimal2.config(obj);
  return Decimal2;
}
function div(x, y) {
  return new this(x).div(y);
}
function exp(x) {
  return new this(x).exp();
}
function floor(x) {
  return finalise(x = new this(x), x.e + 1, 3);
}
function hypot() {
  var i2, n, t = new this(0);
  external = false;
  for (i2 = 0; i2 < arguments.length; ) {
    n = new this(arguments[i2++]);
    if (!n.d) {
      if (n.s) {
        external = true;
        return new this(1 / 0);
      }
      t = n;
    } else if (t.d) {
      t = t.plus(n.times(n));
    }
  }
  external = true;
  return t.sqrt();
}
function isDecimalInstance(obj) {
  return obj instanceof Decimal || obj && obj.toStringTag === tag || false;
}
function ln(x) {
  return new this(x).ln();
}
function log(x, y) {
  return new this(x).log(y);
}
function log23(x) {
  return new this(x).log(2);
}
function log103(x) {
  return new this(x).log(10);
}
function max() {
  return maxOrMin(this, arguments, -1);
}
function min() {
  return maxOrMin(this, arguments, 1);
}
function mod(x, y) {
  return new this(x).mod(y);
}
function mul(x, y) {
  return new this(x).mul(y);
}
function pow(x, y) {
  return new this(x).pow(y);
}
function random(sd) {
  var d2, e3, k, n, i2 = 0, r = new this(1), rd = [];
  if (sd === void 0) sd = this.precision;
  else checkInt32(sd, 1, MAX_DIGITS);
  k = Math.ceil(sd / LOG_BASE);
  if (!this.crypto) {
    for (; i2 < k; ) rd[i2++] = Math.random() * 1e7 | 0;
  } else if (crypto.getRandomValues) {
    d2 = crypto.getRandomValues(new Uint32Array(k));
    for (; i2 < k; ) {
      n = d2[i2];
      if (n >= 429e7) {
        d2[i2] = crypto.getRandomValues(new Uint32Array(1))[0];
      } else {
        rd[i2++] = n % 1e7;
      }
    }
  } else if (crypto.randomBytes) {
    d2 = crypto.randomBytes(k *= 4);
    for (; i2 < k; ) {
      n = d2[i2] + (d2[i2 + 1] << 8) + (d2[i2 + 2] << 16) + ((d2[i2 + 3] & 127) << 24);
      if (n >= 214e7) {
        crypto.randomBytes(4).copy(d2, i2);
      } else {
        rd.push(n % 1e7);
        i2 += 4;
      }
    }
    i2 = k / 4;
  } else {
    throw Error(cryptoUnavailable);
  }
  k = rd[--i2];
  sd %= LOG_BASE;
  if (k && sd) {
    n = mathpow(10, LOG_BASE - sd);
    rd[i2] = (k / n | 0) * n;
  }
  for (; rd[i2] === 0; i2--) rd.pop();
  if (i2 < 0) {
    e3 = 0;
    rd = [0];
  } else {
    e3 = -1;
    for (; rd[0] === 0; e3 -= LOG_BASE) rd.shift();
    for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;
    if (k < LOG_BASE) e3 -= LOG_BASE - k;
  }
  r.e = e3;
  r.d = rd;
  return r;
}
function round(x) {
  return finalise(x = new this(x), x.e + 1, this.rounding);
}
function sign2(x) {
  x = new this(x);
  return x.d ? x.d[0] ? x.s : 0 * x.s : x.s || NaN;
}
function sin(x) {
  return new this(x).sin();
}
function sinh2(x) {
  return new this(x).sinh();
}
function sqrt(x) {
  return new this(x).sqrt();
}
function sub(x, y) {
  return new this(x).sub(y);
}
function sum() {
  var i2 = 0, args = arguments, x = new this(args[i2]);
  external = false;
  for (; x.s && ++i2 < args.length; ) x = x.plus(args[i2]);
  external = true;
  return finalise(x, this.precision, this.rounding);
}
function tan(x) {
  return new this(x).tan();
}
function tanh2(x) {
  return new this(x).tanh();
}
function trunc(x) {
  return finalise(x = new this(x), x.e + 1, 1);
}
P[Symbol.for("nodejs.util.inspect.custom")] = P.toString;
P[Symbol.toStringTag] = "Decimal";
var Decimal = P.constructor = clone2(DEFAULTS);
LN10 = new Decimal(LN10);
PI = new Decimal(PI);
var decimal_default = Decimal;

// node_modules/mathjs/lib/esm/type/bignumber/BigNumber.js
var name2 = "BigNumber";
var dependencies3 = ["?on", "config"];
var createBigNumberClass = factory(name2, dependencies3, (_ref) => {
  var {
    on,
    config: config4
  } = _ref;
  var BigNumber2 = decimal_default.clone({
    precision: config4.precision,
    modulo: decimal_default.EUCLID
  });
  BigNumber2.prototype = Object.create(BigNumber2.prototype);
  BigNumber2.prototype.type = "BigNumber";
  BigNumber2.prototype.isBigNumber = true;
  BigNumber2.prototype.toJSON = function() {
    return {
      mathjs: "BigNumber",
      value: this.toString()
    };
  };
  BigNumber2.fromJSON = function(json) {
    return new BigNumber2(json.value);
  };
  if (on) {
    on("config", function(curr, prev) {
      if (curr.precision !== prev.precision) {
        BigNumber2.config({
          precision: curr.precision
        });
      }
    });
  }
  return BigNumber2;
}, {
  isClass: true
});

// node_modules/complex.js/dist/complex.mjs
var cosh3 = Math.cosh || function(x) {
  return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;
};
var sinh3 = Math.sinh || function(x) {
  return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;
};
var cosm1 = function(x) {
  const b2 = Math.PI / 4;
  if (-b2 > x || x > b2) {
    return Math.cos(x) - 1;
  }
  const xx = x * x;
  return xx * (xx * (xx * (xx * (xx * (xx * (xx * (xx / 20922789888e3 - 1 / 87178291200) + 1 / 479001600) - 1 / 3628800) + 1 / 40320) - 1 / 720) + 1 / 24) - 1 / 2);
};
var hypot2 = function(x, y) {
  x = Math.abs(x);
  y = Math.abs(y);
  if (x < y) [x, y] = [y, x];
  if (x < 1e8) return Math.sqrt(x * x + y * y);
  y /= x;
  return x * Math.sqrt(1 + y * y);
};
var parser_exit = function() {
  throw SyntaxError("Invalid Param");
};
function logHypot(a, b2) {
  const _a7 = Math.abs(a);
  const _b = Math.abs(b2);
  if (a === 0) {
    return Math.log(_b);
  }
  if (b2 === 0) {
    return Math.log(_a7);
  }
  if (_a7 < 3e3 && _b < 3e3) {
    return Math.log(a * a + b2 * b2) * 0.5;
  }
  a = a * 0.5;
  b2 = b2 * 0.5;
  return 0.5 * Math.log(a * a + b2 * b2) + Math.LN2;
}
var P2 = { "re": 0, "im": 0 };
var parse = function(a, b2) {
  const z = P2;
  if (a === void 0 || a === null) {
    z["re"] = z["im"] = 0;
  } else if (b2 !== void 0) {
    z["re"] = a;
    z["im"] = b2;
  } else
    switch (typeof a) {
      case "object":
        if ("im" in a && "re" in a) {
          z["re"] = a["re"];
          z["im"] = a["im"];
        } else if ("abs" in a && "arg" in a) {
          if (!isFinite(a["abs"]) && isFinite(a["arg"])) {
            return Complex["INFINITY"];
          }
          z["re"] = a["abs"] * Math.cos(a["arg"]);
          z["im"] = a["abs"] * Math.sin(a["arg"]);
        } else if ("r" in a && "phi" in a) {
          if (!isFinite(a["r"]) && isFinite(a["phi"])) {
            return Complex["INFINITY"];
          }
          z["re"] = a["r"] * Math.cos(a["phi"]);
          z["im"] = a["r"] * Math.sin(a["phi"]);
        } else if (a.length === 2) {
          z["re"] = a[0];
          z["im"] = a[1];
        } else {
          parser_exit();
        }
        break;
      case "string":
        z["im"] = /* void */
        z["re"] = 0;
        const tokens = a.replace(/_/g, "").match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g);
        let plus = 1;
        let minus = 0;
        if (tokens === null) {
          parser_exit();
        }
        for (let i2 = 0; i2 < tokens.length; i2++) {
          const c = tokens[i2];
          if (c === " " || c === "	" || c === "\n") {
          } else if (c === "+") {
            plus++;
          } else if (c === "-") {
            minus++;
          } else if (c === "i" || c === "I") {
            if (plus + minus === 0) {
              parser_exit();
            }
            if (tokens[i2 + 1] !== " " && !isNaN(tokens[i2 + 1])) {
              z["im"] += parseFloat((minus % 2 ? "-" : "") + tokens[i2 + 1]);
              i2++;
            } else {
              z["im"] += parseFloat((minus % 2 ? "-" : "") + "1");
            }
            plus = minus = 0;
          } else {
            if (plus + minus === 0 || isNaN(c)) {
              parser_exit();
            }
            if (tokens[i2 + 1] === "i" || tokens[i2 + 1] === "I") {
              z["im"] += parseFloat((minus % 2 ? "-" : "") + c);
              i2++;
            } else {
              z["re"] += parseFloat((minus % 2 ? "-" : "") + c);
            }
            plus = minus = 0;
          }
        }
        if (plus + minus > 0) {
          parser_exit();
        }
        break;
      case "number":
        z["im"] = 0;
        z["re"] = a;
        break;
      default:
        parser_exit();
    }
  if (isNaN(z["re"]) || isNaN(z["im"])) {
  }
  return z;
};
function Complex(a, b2) {
  if (!(this instanceof Complex)) {
    return new Complex(a, b2);
  }
  const z = parse(a, b2);
  this["re"] = z["re"];
  this["im"] = z["im"];
}
Complex.prototype = {
  "re": 0,
  "im": 0,
  /**
   * Calculates the sign of a complex number, which is a normalized complex
   *
   * @returns {Complex}
   */
  "sign": function() {
    const abs3 = hypot2(this["re"], this["im"]);
    return new Complex(
      this["re"] / abs3,
      this["im"] / abs3
    );
  },
  /**
   * Adds two complex numbers
   *
   * @returns {Complex}
   */
  "add": function(a, b2) {
    const z = parse(a, b2);
    const tInfin = this["isInfinite"]();
    const zInfin = !(isFinite(z["re"]) && isFinite(z["im"]));
    if (tInfin || zInfin) {
      if (tInfin && zInfin) {
        return Complex["NAN"];
      }
      return Complex["INFINITY"];
    }
    return new Complex(
      this["re"] + z["re"],
      this["im"] + z["im"]
    );
  },
  /**
   * Subtracts two complex numbers
   *
   * @returns {Complex}
   */
  "sub": function(a, b2) {
    const z = parse(a, b2);
    const tInfin = this["isInfinite"]();
    const zInfin = !(isFinite(z["re"]) && isFinite(z["im"]));
    if (tInfin || zInfin) {
      if (tInfin && zInfin) {
        return Complex["NAN"];
      }
      return Complex["INFINITY"];
    }
    return new Complex(
      this["re"] - z["re"],
      this["im"] - z["im"]
    );
  },
  /**
   * Multiplies two complex numbers
   *
   * @returns {Complex}
   */
  "mul": function(a, b2) {
    const z = parse(a, b2);
    const tInfin = this["isInfinite"]();
    const zInfin = !(isFinite(z["re"]) && isFinite(z["im"]));
    const tIsZero = this["re"] === 0 && this["im"] === 0;
    const zIsZero = z["re"] === 0 && z["im"] === 0;
    if (tInfin && zIsZero || zInfin && tIsZero) {
      return Complex["NAN"];
    }
    if (tInfin || zInfin) {
      return Complex["INFINITY"];
    }
    if (z["im"] === 0 && this["im"] === 0) {
      return new Complex(this["re"] * z["re"], 0);
    }
    return new Complex(
      this["re"] * z["re"] - this["im"] * z["im"],
      this["re"] * z["im"] + this["im"] * z["re"]
    );
  },
  /**
   * Divides two complex numbers
   *
   * @returns {Complex}
   */
  "div": function(a, b2) {
    const z = parse(a, b2);
    const tInfin = this["isInfinite"]();
    const zInfin = !(isFinite(z["re"]) && isFinite(z["im"]));
    const tIsZero = this["re"] === 0 && this["im"] === 0;
    const zIsZero = z["re"] === 0 && z["im"] === 0;
    if (tIsZero && zIsZero || tInfin && zInfin) {
      return Complex["NAN"];
    }
    if (zIsZero || tInfin) {
      return Complex["INFINITY"];
    }
    if (tIsZero || zInfin) {
      return Complex["ZERO"];
    }
    if (0 === z["im"]) {
      return new Complex(this["re"] / z["re"], this["im"] / z["re"]);
    }
    if (Math.abs(z["re"]) < Math.abs(z["im"])) {
      const x = z["re"] / z["im"];
      const t = z["re"] * x + z["im"];
      return new Complex(
        (this["re"] * x + this["im"]) / t,
        (this["im"] * x - this["re"]) / t
      );
    } else {
      const x = z["im"] / z["re"];
      const t = z["im"] * x + z["re"];
      return new Complex(
        (this["re"] + this["im"] * x) / t,
        (this["im"] - this["re"] * x) / t
      );
    }
  },
  /**
   * Calculate the power of two complex numbers
   *
   * @returns {Complex}
   */
  "pow": function(a, b2) {
    const z = parse(a, b2);
    const tIsZero = this["re"] === 0 && this["im"] === 0;
    const zIsZero = z["re"] === 0 && z["im"] === 0;
    if (zIsZero) {
      return Complex["ONE"];
    }
    if (z["im"] === 0) {
      if (this["im"] === 0 && this["re"] > 0) {
        return new Complex(Math.pow(this["re"], z["re"]), 0);
      } else if (this["re"] === 0) {
        switch ((z["re"] % 4 + 4) % 4) {
          case 0:
            return new Complex(Math.pow(this["im"], z["re"]), 0);
          case 1:
            return new Complex(0, Math.pow(this["im"], z["re"]));
          case 2:
            return new Complex(-Math.pow(this["im"], z["re"]), 0);
          case 3:
            return new Complex(0, -Math.pow(this["im"], z["re"]));
        }
      }
    }
    if (tIsZero && z["re"] > 0) {
      return Complex["ZERO"];
    }
    const arg2 = Math.atan2(this["im"], this["re"]);
    const loh = logHypot(this["re"], this["im"]);
    let re2 = Math.exp(z["re"] * loh - z["im"] * arg2);
    let im2 = z["im"] * loh + z["re"] * arg2;
    return new Complex(
      re2 * Math.cos(im2),
      re2 * Math.sin(im2)
    );
  },
  /**
   * Calculate the complex square root
   *
   * @returns {Complex}
   */
  "sqrt": function() {
    const a = this["re"];
    const b2 = this["im"];
    if (b2 === 0) {
      if (a >= 0) {
        return new Complex(Math.sqrt(a), 0);
      } else {
        return new Complex(0, Math.sqrt(-a));
      }
    }
    const r = hypot2(a, b2);
    let re2 = Math.sqrt(0.5 * (r + Math.abs(a)));
    let im2 = Math.abs(b2) / (2 * re2);
    if (a >= 0) {
      return new Complex(re2, b2 < 0 ? -im2 : im2);
    } else {
      return new Complex(im2, b2 < 0 ? -re2 : re2);
    }
  },
  /**
   * Calculate the complex exponent
   *
   * @returns {Complex}
   */
  "exp": function() {
    const er = Math.exp(this["re"]);
    if (this["im"] === 0) {
      return new Complex(er, 0);
    }
    return new Complex(
      er * Math.cos(this["im"]),
      er * Math.sin(this["im"])
    );
  },
  /**
   * Calculate the complex exponent and subtracts one.
   *
   * This may be more accurate than `Complex(x).exp().sub(1)` if
   * `x` is small.
   *
   * @returns {Complex}
   */
  "expm1": function() {
    const a = this["re"];
    const b2 = this["im"];
    return new Complex(
      Math.expm1(a) * Math.cos(b2) + cosm1(b2),
      Math.exp(a) * Math.sin(b2)
    );
  },
  /**
   * Calculate the natural log
   *
   * @returns {Complex}
   */
  "log": function() {
    const a = this["re"];
    const b2 = this["im"];
    if (b2 === 0 && a > 0) {
      return new Complex(Math.log(a), 0);
    }
    return new Complex(
      logHypot(a, b2),
      Math.atan2(b2, a)
    );
  },
  /**
   * Calculate the magnitude of the complex number
   *
   * @returns {number}
   */
  "abs": function() {
    return hypot2(this["re"], this["im"]);
  },
  /**
   * Calculate the angle of the complex number
   *
   * @returns {number}
   */
  "arg": function() {
    return Math.atan2(this["im"], this["re"]);
  },
  /**
   * Calculate the sine of the complex number
   *
   * @returns {Complex}
   */
  "sin": function() {
    const a = this["re"];
    const b2 = this["im"];
    return new Complex(
      Math.sin(a) * cosh3(b2),
      Math.cos(a) * sinh3(b2)
    );
  },
  /**
   * Calculate the cosine
   *
   * @returns {Complex}
   */
  "cos": function() {
    const a = this["re"];
    const b2 = this["im"];
    return new Complex(
      Math.cos(a) * cosh3(b2),
      -Math.sin(a) * sinh3(b2)
    );
  },
  /**
   * Calculate the tangent
   *
   * @returns {Complex}
   */
  "tan": function() {
    const a = 2 * this["re"];
    const b2 = 2 * this["im"];
    const d2 = Math.cos(a) + cosh3(b2);
    return new Complex(
      Math.sin(a) / d2,
      sinh3(b2) / d2
    );
  },
  /**
   * Calculate the cotangent
   *
   * @returns {Complex}
   */
  "cot": function() {
    const a = 2 * this["re"];
    const b2 = 2 * this["im"];
    const d2 = Math.cos(a) - cosh3(b2);
    return new Complex(
      -Math.sin(a) / d2,
      sinh3(b2) / d2
    );
  },
  /**
   * Calculate the secant
   *
   * @returns {Complex}
   */
  "sec": function() {
    const a = this["re"];
    const b2 = this["im"];
    const d2 = 0.5 * cosh3(2 * b2) + 0.5 * Math.cos(2 * a);
    return new Complex(
      Math.cos(a) * cosh3(b2) / d2,
      Math.sin(a) * sinh3(b2) / d2
    );
  },
  /**
   * Calculate the cosecans
   *
   * @returns {Complex}
   */
  "csc": function() {
    const a = this["re"];
    const b2 = this["im"];
    const d2 = 0.5 * cosh3(2 * b2) - 0.5 * Math.cos(2 * a);
    return new Complex(
      Math.sin(a) * cosh3(b2) / d2,
      -Math.cos(a) * sinh3(b2) / d2
    );
  },
  /**
   * Calculate the complex arcus sinus
   *
   * @returns {Complex}
   */
  "asin": function() {
    const a = this["re"];
    const b2 = this["im"];
    const t1 = new Complex(
      b2 * b2 - a * a + 1,
      -2 * a * b2
    )["sqrt"]();
    const t2 = new Complex(
      t1["re"] - b2,
      t1["im"] + a
    )["log"]();
    return new Complex(t2["im"], -t2["re"]);
  },
  /**
   * Calculate the complex arcus cosinus
   *
   * @returns {Complex}
   */
  "acos": function() {
    const a = this["re"];
    const b2 = this["im"];
    const t1 = new Complex(
      b2 * b2 - a * a + 1,
      -2 * a * b2
    )["sqrt"]();
    const t2 = new Complex(
      t1["re"] - b2,
      t1["im"] + a
    )["log"]();
    return new Complex(Math.PI / 2 - t2["im"], t2["re"]);
  },
  /**
   * Calculate the complex arcus tangent
   *
   * @returns {Complex}
   */
  "atan": function() {
    const a = this["re"];
    const b2 = this["im"];
    if (a === 0) {
      if (b2 === 1) {
        return new Complex(0, Infinity);
      }
      if (b2 === -1) {
        return new Complex(0, -Infinity);
      }
    }
    const d2 = a * a + (1 - b2) * (1 - b2);
    const t1 = new Complex(
      (1 - b2 * b2 - a * a) / d2,
      -2 * a / d2
    ).log();
    return new Complex(-0.5 * t1["im"], 0.5 * t1["re"]);
  },
  /**
   * Calculate the complex arcus cotangent
   *
   * @returns {Complex}
   */
  "acot": function() {
    const a = this["re"];
    const b2 = this["im"];
    if (b2 === 0) {
      return new Complex(Math.atan2(1, a), 0);
    }
    const d2 = a * a + b2 * b2;
    return d2 !== 0 ? new Complex(
      a / d2,
      -b2 / d2
    ).atan() : new Complex(
      a !== 0 ? a / 0 : 0,
      b2 !== 0 ? -b2 / 0 : 0
    ).atan();
  },
  /**
   * Calculate the complex arcus secant
   *
   * @returns {Complex}
   */
  "asec": function() {
    const a = this["re"];
    const b2 = this["im"];
    if (a === 0 && b2 === 0) {
      return new Complex(0, Infinity);
    }
    const d2 = a * a + b2 * b2;
    return d2 !== 0 ? new Complex(
      a / d2,
      -b2 / d2
    ).acos() : new Complex(
      a !== 0 ? a / 0 : 0,
      b2 !== 0 ? -b2 / 0 : 0
    ).acos();
  },
  /**
   * Calculate the complex arcus cosecans
   *
   * @returns {Complex}
   */
  "acsc": function() {
    const a = this["re"];
    const b2 = this["im"];
    if (a === 0 && b2 === 0) {
      return new Complex(Math.PI / 2, Infinity);
    }
    const d2 = a * a + b2 * b2;
    return d2 !== 0 ? new Complex(
      a / d2,
      -b2 / d2
    ).asin() : new Complex(
      a !== 0 ? a / 0 : 0,
      b2 !== 0 ? -b2 / 0 : 0
    ).asin();
  },
  /**
   * Calculate the complex sinh
   *
   * @returns {Complex}
   */
  "sinh": function() {
    const a = this["re"];
    const b2 = this["im"];
    return new Complex(
      sinh3(a) * Math.cos(b2),
      cosh3(a) * Math.sin(b2)
    );
  },
  /**
   * Calculate the complex cosh
   *
   * @returns {Complex}
   */
  "cosh": function() {
    const a = this["re"];
    const b2 = this["im"];
    return new Complex(
      cosh3(a) * Math.cos(b2),
      sinh3(a) * Math.sin(b2)
    );
  },
  /**
   * Calculate the complex tanh
   *
   * @returns {Complex}
   */
  "tanh": function() {
    const a = 2 * this["re"];
    const b2 = 2 * this["im"];
    const d2 = cosh3(a) + Math.cos(b2);
    return new Complex(
      sinh3(a) / d2,
      Math.sin(b2) / d2
    );
  },
  /**
   * Calculate the complex coth
   *
   * @returns {Complex}
   */
  "coth": function() {
    const a = 2 * this["re"];
    const b2 = 2 * this["im"];
    const d2 = cosh3(a) - Math.cos(b2);
    return new Complex(
      sinh3(a) / d2,
      -Math.sin(b2) / d2
    );
  },
  /**
   * Calculate the complex coth
   *
   * @returns {Complex}
   */
  "csch": function() {
    const a = this["re"];
    const b2 = this["im"];
    const d2 = Math.cos(2 * b2) - cosh3(2 * a);
    return new Complex(
      -2 * sinh3(a) * Math.cos(b2) / d2,
      2 * cosh3(a) * Math.sin(b2) / d2
    );
  },
  /**
   * Calculate the complex sech
   *
   * @returns {Complex}
   */
  "sech": function() {
    const a = this["re"];
    const b2 = this["im"];
    const d2 = Math.cos(2 * b2) + cosh3(2 * a);
    return new Complex(
      2 * cosh3(a) * Math.cos(b2) / d2,
      -2 * sinh3(a) * Math.sin(b2) / d2
    );
  },
  /**
   * Calculate the complex asinh
   *
   * @returns {Complex}
   */
  "asinh": function() {
    let tmp = this["im"];
    this["im"] = -this["re"];
    this["re"] = tmp;
    const res = this["asin"]();
    this["re"] = -this["im"];
    this["im"] = tmp;
    tmp = res["re"];
    res["re"] = -res["im"];
    res["im"] = tmp;
    return res;
  },
  /**
   * Calculate the complex acosh
   *
   * @returns {Complex}
   */
  "acosh": function() {
    const res = this["acos"]();
    if (res["im"] <= 0) {
      const tmp = res["re"];
      res["re"] = -res["im"];
      res["im"] = tmp;
    } else {
      const tmp = res["im"];
      res["im"] = -res["re"];
      res["re"] = tmp;
    }
    return res;
  },
  /**
   * Calculate the complex atanh
   *
   * @returns {Complex}
   */
  "atanh": function() {
    const a = this["re"];
    const b2 = this["im"];
    const noIM = a > 1 && b2 === 0;
    const oneMinus = 1 - a;
    const onePlus = 1 + a;
    const d2 = oneMinus * oneMinus + b2 * b2;
    const x = d2 !== 0 ? new Complex(
      (onePlus * oneMinus - b2 * b2) / d2,
      (b2 * oneMinus + onePlus * b2) / d2
    ) : new Complex(
      a !== -1 ? a / 0 : 0,
      b2 !== 0 ? b2 / 0 : 0
    );
    const temp = x["re"];
    x["re"] = logHypot(x["re"], x["im"]) / 2;
    x["im"] = Math.atan2(x["im"], temp) / 2;
    if (noIM) {
      x["im"] = -x["im"];
    }
    return x;
  },
  /**
   * Calculate the complex acoth
   *
   * @returns {Complex}
   */
  "acoth": function() {
    const a = this["re"];
    const b2 = this["im"];
    if (a === 0 && b2 === 0) {
      return new Complex(0, Math.PI / 2);
    }
    const d2 = a * a + b2 * b2;
    return d2 !== 0 ? new Complex(
      a / d2,
      -b2 / d2
    ).atanh() : new Complex(
      a !== 0 ? a / 0 : 0,
      b2 !== 0 ? -b2 / 0 : 0
    ).atanh();
  },
  /**
   * Calculate the complex acsch
   *
   * @returns {Complex}
   */
  "acsch": function() {
    const a = this["re"];
    const b2 = this["im"];
    if (b2 === 0) {
      return new Complex(
        a !== 0 ? Math.log(a + Math.sqrt(a * a + 1)) : Infinity,
        0
      );
    }
    const d2 = a * a + b2 * b2;
    return d2 !== 0 ? new Complex(
      a / d2,
      -b2 / d2
    ).asinh() : new Complex(
      a !== 0 ? a / 0 : 0,
      b2 !== 0 ? -b2 / 0 : 0
    ).asinh();
  },
  /**
   * Calculate the complex asech
   *
   * @returns {Complex}
   */
  "asech": function() {
    const a = this["re"];
    const b2 = this["im"];
    if (this["isZero"]()) {
      return Complex["INFINITY"];
    }
    const d2 = a * a + b2 * b2;
    return d2 !== 0 ? new Complex(
      a / d2,
      -b2 / d2
    ).acosh() : new Complex(
      a !== 0 ? a / 0 : 0,
      b2 !== 0 ? -b2 / 0 : 0
    ).acosh();
  },
  /**
   * Calculate the complex inverse 1/z
   *
   * @returns {Complex}
   */
  "inverse": function() {
    if (this["isZero"]()) {
      return Complex["INFINITY"];
    }
    if (this["isInfinite"]()) {
      return Complex["ZERO"];
    }
    const a = this["re"];
    const b2 = this["im"];
    const d2 = a * a + b2 * b2;
    return new Complex(a / d2, -b2 / d2);
  },
  /**
   * Returns the complex conjugate
   *
   * @returns {Complex}
   */
  "conjugate": function() {
    return new Complex(this["re"], -this["im"]);
  },
  /**
   * Gets the negated complex number
   *
   * @returns {Complex}
   */
  "neg": function() {
    return new Complex(-this["re"], -this["im"]);
  },
  /**
   * Ceils the actual complex number
   *
   * @returns {Complex}
   */
  "ceil": function(places) {
    places = Math.pow(10, places || 0);
    return new Complex(
      Math.ceil(this["re"] * places) / places,
      Math.ceil(this["im"] * places) / places
    );
  },
  /**
   * Floors the actual complex number
   *
   * @returns {Complex}
   */
  "floor": function(places) {
    places = Math.pow(10, places || 0);
    return new Complex(
      Math.floor(this["re"] * places) / places,
      Math.floor(this["im"] * places) / places
    );
  },
  /**
   * Ceils the actual complex number
   *
   * @returns {Complex}
   */
  "round": function(places) {
    places = Math.pow(10, places || 0);
    return new Complex(
      Math.round(this["re"] * places) / places,
      Math.round(this["im"] * places) / places
    );
  },
  /**
   * Compares two complex numbers
   *
   * **Note:** new Complex(Infinity).equals(Infinity) === false
   *
   * @returns {boolean}
   */
  "equals": function(a, b2) {
    const z = parse(a, b2);
    return Math.abs(z["re"] - this["re"]) <= Complex["EPSILON"] && Math.abs(z["im"] - this["im"]) <= Complex["EPSILON"];
  },
  /**
   * Clones the actual object
   *
   * @returns {Complex}
   */
  "clone": function() {
    return new Complex(this["re"], this["im"]);
  },
  /**
   * Gets a string of the actual complex number
   *
   * @returns {string}
   */
  "toString": function() {
    let a = this["re"];
    let b2 = this["im"];
    let ret = "";
    if (this["isNaN"]()) {
      return "NaN";
    }
    if (this["isInfinite"]()) {
      return "Infinity";
    }
    if (Math.abs(a) < Complex["EPSILON"]) {
      a = 0;
    }
    if (Math.abs(b2) < Complex["EPSILON"]) {
      b2 = 0;
    }
    if (b2 === 0) {
      return ret + a;
    }
    if (a !== 0) {
      ret += a;
      ret += " ";
      if (b2 < 0) {
        b2 = -b2;
        ret += "-";
      } else {
        ret += "+";
      }
      ret += " ";
    } else if (b2 < 0) {
      b2 = -b2;
      ret += "-";
    }
    if (1 !== b2) {
      ret += b2;
    }
    return ret + "i";
  },
  /**
   * Returns the actual number as a vector
   *
   * @returns {Array}
   */
  "toVector": function() {
    return [this["re"], this["im"]];
  },
  /**
   * Returns the actual real value of the current object
   *
   * @returns {number|null}
   */
  "valueOf": function() {
    if (this["im"] === 0) {
      return this["re"];
    }
    return null;
  },
  /**
   * Determines whether a complex number is not on the Riemann sphere.
   *
   * @returns {boolean}
   */
  "isNaN": function() {
    return isNaN(this["re"]) || isNaN(this["im"]);
  },
  /**
   * Determines whether or not a complex number is at the zero pole of the
   * Riemann sphere.
   *
   * @returns {boolean}
   */
  "isZero": function() {
    return this["im"] === 0 && this["re"] === 0;
  },
  /**
   * Determines whether a complex number is not at the infinity pole of the
   * Riemann sphere.
   *
   * @returns {boolean}
   */
  "isFinite": function() {
    return isFinite(this["re"]) && isFinite(this["im"]);
  },
  /**
   * Determines whether or not a complex number is at the infinity pole of the
   * Riemann sphere.
   *
   * @returns {boolean}
   */
  "isInfinite": function() {
    return !this["isFinite"]();
  }
};
Complex["ZERO"] = new Complex(0, 0);
Complex["ONE"] = new Complex(1, 0);
Complex["I"] = new Complex(0, 1);
Complex["PI"] = new Complex(Math.PI, 0);
Complex["E"] = new Complex(Math.E, 0);
Complex["INFINITY"] = new Complex(Infinity, Infinity);
Complex["NAN"] = new Complex(NaN, NaN);
Complex["EPSILON"] = 1e-15;

// node_modules/mathjs/lib/esm/type/complex/Complex.js
var name3 = "Complex";
var dependencies4 = [];
var createComplexClass = factory(name3, dependencies4, () => {
  Object.defineProperty(Complex, "name", {
    value: "Complex"
  });
  Complex.prototype.constructor = Complex;
  Complex.prototype.type = "Complex";
  Complex.prototype.isComplex = true;
  Complex.prototype.toJSON = function() {
    return {
      mathjs: "Complex",
      re: this.re,
      im: this.im
    };
  };
  Complex.prototype.toPolar = function() {
    return {
      r: this.abs(),
      phi: this.arg()
    };
  };
  Complex.prototype.format = function(options) {
    var str = "";
    var im2 = this.im;
    var re2 = this.re;
    var strRe = format(this.re, options);
    var strIm = format(this.im, options);
    var precision = isNumber(options) ? options : options ? options.precision : null;
    if (precision !== null) {
      var epsilon = Math.pow(10, -precision);
      if (Math.abs(re2 / im2) < epsilon) {
        re2 = 0;
      }
      if (Math.abs(im2 / re2) < epsilon) {
        im2 = 0;
      }
    }
    if (im2 === 0) {
      str = strRe;
    } else if (re2 === 0) {
      if (im2 === 1) {
        str = "i";
      } else if (im2 === -1) {
        str = "-i";
      } else {
        str = strIm + "i";
      }
    } else {
      if (im2 < 0) {
        if (im2 === -1) {
          str = strRe + " - i";
        } else {
          str = strRe + " - " + strIm.substring(1) + "i";
        }
      } else {
        if (im2 === 1) {
          str = strRe + " + i";
        } else {
          str = strRe + " + " + strIm + "i";
        }
      }
    }
    return str;
  };
  Complex.fromPolar = function(args) {
    switch (arguments.length) {
      case 1: {
        var arg2 = arguments[0];
        if (typeof arg2 === "object") {
          return Complex(arg2);
        } else {
          throw new TypeError("Input has to be an object with r and phi keys.");
        }
      }
      case 2: {
        var r = arguments[0];
        var phi3 = arguments[1];
        if (isNumber(r)) {
          if (isUnit(phi3) && phi3.hasBase("ANGLE")) {
            phi3 = phi3.toNumber("rad");
          }
          if (isNumber(phi3)) {
            return new Complex({
              r,
              phi: phi3
            });
          }
          throw new TypeError("Phi is not a number nor an angle unit.");
        } else {
          throw new TypeError("Radius r is not a number.");
        }
      }
      default:
        throw new SyntaxError("Wrong number of arguments in function fromPolar");
    }
  };
  Complex.prototype.valueOf = Complex.prototype.toString;
  Complex.fromJSON = function(json) {
    return new Complex(json);
  };
  Complex.compare = function(a, b2) {
    if (a.re > b2.re) {
      return 1;
    }
    if (a.re < b2.re) {
      return -1;
    }
    if (a.im > b2.im) {
      return 1;
    }
    if (a.im < b2.im) {
      return -1;
    }
    return 0;
  };
  return Complex;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/type/fraction/Fraction.js
var import_fraction = __toESM(require_fraction(), 1);
var name4 = "Fraction";
var dependencies5 = [];
var createFractionClass = factory(name4, dependencies5, () => {
  Object.defineProperty(import_fraction.default, "name", {
    value: "Fraction"
  });
  import_fraction.default.prototype.constructor = import_fraction.default;
  import_fraction.default.prototype.type = "Fraction";
  import_fraction.default.prototype.isFraction = true;
  import_fraction.default.prototype.toJSON = function() {
    return {
      mathjs: "Fraction",
      n: this.s * this.n,
      d: this.d
    };
  };
  import_fraction.default.fromJSON = function(json) {
    return new import_fraction.default(json);
  };
  return import_fraction.default;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/type/matrix/Range.js
var name5 = "Range";
var dependencies6 = [];
var createRangeClass = factory(name5, dependencies6, () => {
  function Range2(start, end, step) {
    if (!(this instanceof Range2)) {
      throw new SyntaxError("Constructor must be called with the new operator");
    }
    var hasStart = start !== null && start !== void 0;
    var hasEnd = end !== null && end !== void 0;
    var hasStep = step !== null && step !== void 0;
    if (hasStart) {
      if (isBigNumber(start)) {
        start = start.toNumber();
      } else if (typeof start !== "number") {
        throw new TypeError("Parameter start must be a number");
      }
    }
    if (hasEnd) {
      if (isBigNumber(end)) {
        end = end.toNumber();
      } else if (typeof end !== "number") {
        throw new TypeError("Parameter end must be a number");
      }
    }
    if (hasStep) {
      if (isBigNumber(step)) {
        step = step.toNumber();
      } else if (typeof step !== "number") {
        throw new TypeError("Parameter step must be a number");
      }
    }
    this.start = hasStart ? parseFloat(start) : 0;
    this.end = hasEnd ? parseFloat(end) : 0;
    this.step = hasStep ? parseFloat(step) : 1;
  }
  Range2.prototype.type = "Range";
  Range2.prototype.isRange = true;
  Range2.parse = function(str) {
    if (typeof str !== "string") {
      return null;
    }
    var args = str.split(":");
    var nums = args.map(function(arg2) {
      return parseFloat(arg2);
    });
    var invalid = nums.some(function(num) {
      return isNaN(num);
    });
    if (invalid) {
      return null;
    }
    switch (nums.length) {
      case 2:
        return new Range2(nums[0], nums[1]);
      case 3:
        return new Range2(nums[0], nums[2], nums[1]);
      default:
        return null;
    }
  };
  Range2.prototype.clone = function() {
    return new Range2(this.start, this.end, this.step);
  };
  Range2.prototype.size = function() {
    var len = 0;
    var start = this.start;
    var step = this.step;
    var end = this.end;
    var diff2 = end - start;
    if (sign(step) === sign(diff2)) {
      len = Math.ceil(diff2 / step);
    } else if (diff2 === 0) {
      len = 0;
    }
    if (isNaN(len)) {
      len = 0;
    }
    return [len];
  };
  Range2.prototype.min = function() {
    var size2 = this.size()[0];
    if (size2 > 0) {
      if (this.step > 0) {
        return this.start;
      } else {
        return this.start + (size2 - 1) * this.step;
      }
    } else {
      return void 0;
    }
  };
  Range2.prototype.max = function() {
    var size2 = this.size()[0];
    if (size2 > 0) {
      if (this.step > 0) {
        return this.start + (size2 - 1) * this.step;
      } else {
        return this.start;
      }
    } else {
      return void 0;
    }
  };
  Range2.prototype.forEach = function(callback) {
    var x = this.start;
    var step = this.step;
    var end = this.end;
    var i2 = 0;
    if (step > 0) {
      while (x < end) {
        callback(x, [i2], this);
        x += step;
        i2++;
      }
    } else if (step < 0) {
      while (x > end) {
        callback(x, [i2], this);
        x += step;
        i2++;
      }
    }
  };
  Range2.prototype.map = function(callback) {
    var array = [];
    this.forEach(function(value, index2, obj) {
      array[index2[0]] = callback(value, index2, obj);
    });
    return array;
  };
  Range2.prototype.toArray = function() {
    var array = [];
    this.forEach(function(value, index2) {
      array[index2[0]] = value;
    });
    return array;
  };
  Range2.prototype.valueOf = function() {
    return this.toArray();
  };
  Range2.prototype.format = function(options) {
    var str = format(this.start, options);
    if (this.step !== 1) {
      str += ":" + format(this.step, options);
    }
    str += ":" + format(this.end, options);
    return str;
  };
  Range2.prototype.toString = function() {
    return this.format();
  };
  Range2.prototype.toJSON = function() {
    return {
      mathjs: "Range",
      start: this.start,
      end: this.end,
      step: this.step
    };
  };
  Range2.fromJSON = function(json) {
    return new Range2(json.start, json.end, json.step);
  };
  return Range2;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/type/matrix/Matrix.js
var name6 = "Matrix";
var dependencies7 = [];
var createMatrixClass = factory(name6, dependencies7, () => {
  function Matrix2() {
    if (!(this instanceof Matrix2)) {
      throw new SyntaxError("Constructor must be called with the new operator");
    }
  }
  Matrix2.prototype.type = "Matrix";
  Matrix2.prototype.isMatrix = true;
  Matrix2.prototype.storage = function() {
    throw new Error("Cannot invoke storage on a Matrix interface");
  };
  Matrix2.prototype.datatype = function() {
    throw new Error("Cannot invoke datatype on a Matrix interface");
  };
  Matrix2.prototype.create = function(data, datatype) {
    throw new Error("Cannot invoke create on a Matrix interface");
  };
  Matrix2.prototype.subset = function(index2, replacement, defaultValue) {
    throw new Error("Cannot invoke subset on a Matrix interface");
  };
  Matrix2.prototype.get = function(index2) {
    throw new Error("Cannot invoke get on a Matrix interface");
  };
  Matrix2.prototype.set = function(index2, value, defaultValue) {
    throw new Error("Cannot invoke set on a Matrix interface");
  };
  Matrix2.prototype.resize = function(size2, defaultValue) {
    throw new Error("Cannot invoke resize on a Matrix interface");
  };
  Matrix2.prototype.reshape = function(size2, defaultValue) {
    throw new Error("Cannot invoke reshape on a Matrix interface");
  };
  Matrix2.prototype.clone = function() {
    throw new Error("Cannot invoke clone on a Matrix interface");
  };
  Matrix2.prototype.size = function() {
    throw new Error("Cannot invoke size on a Matrix interface");
  };
  Matrix2.prototype.map = function(callback, skipZeros) {
    throw new Error("Cannot invoke map on a Matrix interface");
  };
  Matrix2.prototype.forEach = function(callback) {
    throw new Error("Cannot invoke forEach on a Matrix interface");
  };
  Matrix2.prototype[Symbol.iterator] = function() {
    throw new Error("Cannot iterate a Matrix interface");
  };
  Matrix2.prototype.toArray = function() {
    throw new Error("Cannot invoke toArray on a Matrix interface");
  };
  Matrix2.prototype.valueOf = function() {
    throw new Error("Cannot invoke valueOf on a Matrix interface");
  };
  Matrix2.prototype.format = function(options) {
    throw new Error("Cannot invoke format on a Matrix interface");
  };
  Matrix2.prototype.toString = function() {
    throw new Error("Cannot invoke toString on a Matrix interface");
  };
  return Matrix2;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/utils/bignumber/formatter.js
function formatBigNumberToBase(n, base, size2) {
  var BigNumberCtor = n.constructor;
  var big2 = new BigNumberCtor(2);
  var suffix = "";
  if (size2) {
    if (size2 < 1) {
      throw new Error("size must be in greater than 0");
    }
    if (!isInteger(size2)) {
      throw new Error("size must be an integer");
    }
    if (n.greaterThan(big2.pow(size2 - 1).sub(1)) || n.lessThan(big2.pow(size2 - 1).mul(-1))) {
      throw new Error("Value must be in range [-2^".concat(size2 - 1, ", 2^").concat(size2 - 1, "-1]"));
    }
    if (!n.isInteger()) {
      throw new Error("Value must be an integer");
    }
    if (n.lessThan(0)) {
      n = n.add(big2.pow(size2));
    }
    suffix = "i".concat(size2);
  }
  switch (base) {
    case 2:
      return "".concat(n.toBinary()).concat(suffix);
    case 8:
      return "".concat(n.toOctal()).concat(suffix);
    case 16:
      return "".concat(n.toHexadecimal()).concat(suffix);
    default:
      throw new Error("Base ".concat(base, " not supported "));
  }
}
function format2(value, options) {
  if (typeof options === "function") {
    return options(value);
  }
  if (!value.isFinite()) {
    return value.isNaN() ? "NaN" : value.gt(0) ? "Infinity" : "-Infinity";
  }
  var {
    notation,
    precision,
    wordSize
  } = normalizeFormatOptions(options);
  switch (notation) {
    case "fixed":
      return toFixed2(value, precision);
    case "exponential":
      return toExponential2(value, precision);
    case "engineering":
      return toEngineering2(value, precision);
    case "bin":
      return formatBigNumberToBase(value, 2, wordSize);
    case "oct":
      return formatBigNumberToBase(value, 8, wordSize);
    case "hex":
      return formatBigNumberToBase(value, 16, wordSize);
    case "auto": {
      var lowerExp = _toNumberOrDefault2(options === null || options === void 0 ? void 0 : options.lowerExp, -3);
      var upperExp = _toNumberOrDefault2(options === null || options === void 0 ? void 0 : options.upperExp, 5);
      if (value.isZero()) return "0";
      var str;
      var rounded = value.toSignificantDigits(precision);
      var exp3 = rounded.e;
      if (exp3 >= lowerExp && exp3 < upperExp) {
        str = rounded.toFixed();
      } else {
        str = toExponential2(value, precision);
      }
      return str.replace(/((\.\d*?)(0+))($|e)/, function() {
        var digits2 = arguments[2];
        var e3 = arguments[4];
        return digits2 !== "." ? digits2 + e3 : e3;
      });
    }
    default:
      throw new Error('Unknown notation "' + notation + '". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.');
  }
}
function toEngineering2(value, precision) {
  var e3 = value.e;
  var newExp = e3 % 3 === 0 ? e3 : e3 < 0 ? e3 - 3 - e3 % 3 : e3 - e3 % 3;
  var valueWithoutExp = value.mul(Math.pow(10, -newExp));
  var valueStr = valueWithoutExp.toPrecision(precision);
  if (valueStr.includes("e")) {
    var BigNumber2 = value.constructor;
    valueStr = new BigNumber2(valueStr).toFixed();
  }
  return valueStr + "e" + (e3 >= 0 ? "+" : "") + newExp.toString();
}
function toExponential2(value, precision) {
  if (precision !== void 0) {
    return value.toExponential(precision - 1);
  } else {
    return value.toExponential();
  }
}
function toFixed2(value, precision) {
  return value.toFixed(precision);
}
function _toNumberOrDefault2(value, defaultValue) {
  if (isNumber(value)) {
    return value;
  } else if (isBigNumber(value)) {
    return value.toNumber();
  } else {
    return defaultValue;
  }
}

// node_modules/mathjs/lib/esm/utils/string.js
function endsWith(text, search) {
  var start = text.length - search.length;
  var end = text.length;
  return text.substring(start, end) === search;
}
function format3(value, options) {
  var result = _format(value, options);
  if (options && typeof options === "object" && "truncate" in options && result.length > options.truncate) {
    return result.substring(0, options.truncate - 3) + "...";
  }
  return result;
}
function _format(value, options) {
  if (typeof value === "number") {
    return format(value, options);
  }
  if (isBigNumber(value)) {
    return format2(value, options);
  }
  if (looksLikeFraction(value)) {
    if (!options || options.fraction !== "decimal") {
      return value.s * value.n + "/" + value.d;
    } else {
      return value.toString();
    }
  }
  if (Array.isArray(value)) {
    return formatArray(value, options);
  }
  if (isString(value)) {
    return stringify(value);
  }
  if (typeof value === "function") {
    return value.syntax ? String(value.syntax) : "function";
  }
  if (value && typeof value === "object") {
    if (typeof value.format === "function") {
      return value.format(options);
    } else if (value && value.toString(options) !== {}.toString()) {
      return value.toString(options);
    } else {
      var entries = Object.keys(value).map((key) => {
        return stringify(key) + ": " + format3(value[key], options);
      });
      return "{" + entries.join(", ") + "}";
    }
  }
  return String(value);
}
function stringify(value) {
  var text = String(value);
  var escaped = "";
  var i2 = 0;
  while (i2 < text.length) {
    var c = text.charAt(i2);
    escaped += c in controlCharacters ? controlCharacters[c] : c;
    i2++;
  }
  return '"' + escaped + '"';
}
var controlCharacters = {
  '"': '\\"',
  "\\": "\\\\",
  "\b": "\\b",
  "\f": "\\f",
  "\n": "\\n",
  "\r": "\\r",
  "	": "\\t"
};
function escape2(value) {
  var text = String(value);
  text = text.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
  return text;
}
function formatArray(array, options) {
  if (Array.isArray(array)) {
    var str = "[";
    var len = array.length;
    for (var i2 = 0; i2 < len; i2++) {
      if (i2 !== 0) {
        str += ", ";
      }
      str += formatArray(array[i2], options);
    }
    str += "]";
    return str;
  } else {
    return format3(array, options);
  }
}
function looksLikeFraction(value) {
  return value && typeof value === "object" && typeof value.s === "number" && typeof value.n === "number" && typeof value.d === "number" || false;
}
function compareText(x, y) {
  if (!isString(x)) {
    throw new TypeError("Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: " + typeOf(x) + ", index: 0)");
  }
  if (!isString(y)) {
    throw new TypeError("Unexpected type of argument in function compareText (expected: string or Array or Matrix, actual: " + typeOf(y) + ", index: 1)");
  }
  return x === y ? 0 : x > y ? 1 : -1;
}

// node_modules/mathjs/lib/esm/error/DimensionError.js
function DimensionError(actual, expected, relation) {
  if (!(this instanceof DimensionError)) {
    throw new SyntaxError("Constructor must be called with the new operator");
  }
  this.actual = actual;
  this.expected = expected;
  this.relation = relation;
  this.message = "Dimension mismatch (" + (Array.isArray(actual) ? "[" + actual.join(", ") + "]" : actual) + " " + (this.relation || "!=") + " " + (Array.isArray(expected) ? "[" + expected.join(", ") + "]" : expected) + ")";
  this.stack = new Error().stack;
}
DimensionError.prototype = new RangeError();
DimensionError.prototype.constructor = RangeError;
DimensionError.prototype.name = "DimensionError";
DimensionError.prototype.isDimensionError = true;

// node_modules/mathjs/lib/esm/error/IndexError.js
function IndexError(index2, min3, max3) {
  if (!(this instanceof IndexError)) {
    throw new SyntaxError("Constructor must be called with the new operator");
  }
  this.index = index2;
  if (arguments.length < 3) {
    this.min = 0;
    this.max = min3;
  } else {
    this.min = min3;
    this.max = max3;
  }
  if (this.min !== void 0 && this.index < this.min) {
    this.message = "Index out of range (" + this.index + " < " + this.min + ")";
  } else if (this.max !== void 0 && this.index >= this.max) {
    this.message = "Index out of range (" + this.index + " > " + (this.max - 1) + ")";
  } else {
    this.message = "Index out of range (" + this.index + ")";
  }
  this.stack = new Error().stack;
}
IndexError.prototype = new RangeError();
IndexError.prototype.constructor = RangeError;
IndexError.prototype.name = "IndexError";
IndexError.prototype.isIndexError = true;

// node_modules/mathjs/lib/esm/utils/array.js
function arraySize(x) {
  var s = [];
  while (Array.isArray(x)) {
    s.push(x.length);
    x = x[0];
  }
  return s;
}
function _validate(array, size2, dim) {
  var i2;
  var len = array.length;
  if (len !== size2[dim]) {
    throw new DimensionError(len, size2[dim]);
  }
  if (dim < size2.length - 1) {
    var dimNext = dim + 1;
    for (i2 = 0; i2 < len; i2++) {
      var child = array[i2];
      if (!Array.isArray(child)) {
        throw new DimensionError(size2.length - 1, size2.length, "<");
      }
      _validate(array[i2], size2, dimNext);
    }
  } else {
    for (i2 = 0; i2 < len; i2++) {
      if (Array.isArray(array[i2])) {
        throw new DimensionError(size2.length + 1, size2.length, ">");
      }
    }
  }
}
function validate(array, size2) {
  var isScalar = size2.length === 0;
  if (isScalar) {
    if (Array.isArray(array)) {
      throw new DimensionError(array.length, 0);
    }
  } else {
    _validate(array, size2, 0);
  }
}
function validateIndexSourceSize(value, index2) {
  var valueSize = value.isMatrix ? value._size : arraySize(value);
  var sourceSize = index2._sourceSize;
  sourceSize.forEach((sourceDim, i2) => {
    if (sourceDim !== null && sourceDim !== valueSize[i2]) {
      throw new DimensionError(sourceDim, valueSize[i2]);
    }
  });
}
function validateIndex(index2, length) {
  if (index2 !== void 0) {
    if (!isNumber(index2) || !isInteger(index2)) {
      throw new TypeError("Index must be an integer (value: " + index2 + ")");
    }
    if (index2 < 0 || typeof length === "number" && index2 >= length) {
      throw new IndexError(index2, length);
    }
  }
}
function isEmptyIndex(index2) {
  for (var i2 = 0; i2 < index2._dimensions.length; ++i2) {
    var dimension = index2._dimensions[i2];
    if (dimension._data && isArray(dimension._data)) {
      if (dimension._size[0] === 0) {
        return true;
      }
    } else if (dimension.isRange) {
      if (dimension.start === dimension.end) {
        return true;
      }
    } else if (isString(dimension)) {
      if (dimension.length === 0) {
        return true;
      }
    }
  }
  return false;
}
function resize(array, size2, defaultValue) {
  if (!Array.isArray(size2)) {
    throw new TypeError("Array expected");
  }
  if (size2.length === 0) {
    throw new Error("Resizing to scalar is not supported");
  }
  size2.forEach(function(value) {
    if (!isNumber(value) || !isInteger(value) || value < 0) {
      throw new TypeError("Invalid size, must contain positive integers (size: " + format3(size2) + ")");
    }
  });
  if (isNumber(array) || isBigNumber(array)) {
    array = [array];
  }
  var _defaultValue = defaultValue !== void 0 ? defaultValue : 0;
  _resize(array, size2, 0, _defaultValue);
  return array;
}
function _resize(array, size2, dim, defaultValue) {
  var i2;
  var elem;
  var oldLen = array.length;
  var newLen = size2[dim];
  var minLen = Math.min(oldLen, newLen);
  array.length = newLen;
  if (dim < size2.length - 1) {
    var dimNext = dim + 1;
    for (i2 = 0; i2 < minLen; i2++) {
      elem = array[i2];
      if (!Array.isArray(elem)) {
        elem = [elem];
        array[i2] = elem;
      }
      _resize(elem, size2, dimNext, defaultValue);
    }
    for (i2 = minLen; i2 < newLen; i2++) {
      elem = [];
      array[i2] = elem;
      _resize(elem, size2, dimNext, defaultValue);
    }
  } else {
    for (i2 = 0; i2 < minLen; i2++) {
      while (Array.isArray(array[i2])) {
        array[i2] = array[i2][0];
      }
    }
    for (i2 = minLen; i2 < newLen; i2++) {
      array[i2] = defaultValue;
    }
  }
}
function reshape(array, sizes) {
  var flatArray = flatten(array);
  var currentLength = flatArray.length;
  if (!Array.isArray(array) || !Array.isArray(sizes)) {
    throw new TypeError("Array expected");
  }
  if (sizes.length === 0) {
    throw new DimensionError(0, currentLength, "!=");
  }
  sizes = processSizesWildcard(sizes, currentLength);
  var newLength = product(sizes);
  if (currentLength !== newLength) {
    throw new DimensionError(newLength, currentLength, "!=");
  }
  try {
    return _reshape(flatArray, sizes);
  } catch (e3) {
    if (e3 instanceof DimensionError) {
      throw new DimensionError(newLength, currentLength, "!=");
    }
    throw e3;
  }
}
function processSizesWildcard(sizes, currentLength) {
  var newLength = product(sizes);
  var processedSizes = sizes.slice();
  var WILDCARD = -1;
  var wildCardIndex = sizes.indexOf(WILDCARD);
  var isMoreThanOneWildcard = sizes.indexOf(WILDCARD, wildCardIndex + 1) >= 0;
  if (isMoreThanOneWildcard) {
    throw new Error("More than one wildcard in sizes");
  }
  var hasWildcard = wildCardIndex >= 0;
  var canReplaceWildcard = currentLength % newLength === 0;
  if (hasWildcard) {
    if (canReplaceWildcard) {
      processedSizes[wildCardIndex] = -currentLength / newLength;
    } else {
      throw new Error("Could not replace wildcard, since " + currentLength + " is no multiple of " + -newLength);
    }
  }
  return processedSizes;
}
function product(array) {
  return array.reduce((prev, curr) => prev * curr, 1);
}
function _reshape(array, sizes) {
  var tmpArray = array;
  var tmpArray2;
  for (var sizeIndex = sizes.length - 1; sizeIndex > 0; sizeIndex--) {
    var size2 = sizes[sizeIndex];
    tmpArray2 = [];
    var length = tmpArray.length / size2;
    for (var i2 = 0; i2 < length; i2++) {
      tmpArray2.push(tmpArray.slice(i2 * size2, (i2 + 1) * size2));
    }
    tmpArray = tmpArray2;
  }
  return tmpArray;
}
function squeeze(array, size2) {
  var s = size2 || arraySize(array);
  while (Array.isArray(array) && array.length === 1) {
    array = array[0];
    s.shift();
  }
  var dims = s.length;
  while (s[dims - 1] === 1) {
    dims--;
  }
  if (dims < s.length) {
    array = _squeeze(array, dims, 0);
    s.length = dims;
  }
  return array;
}
function _squeeze(array, dims, dim) {
  var i2, ii;
  if (dim < dims) {
    var next = dim + 1;
    for (i2 = 0, ii = array.length; i2 < ii; i2++) {
      array[i2] = _squeeze(array[i2], dims, next);
    }
  } else {
    while (Array.isArray(array)) {
      array = array[0];
    }
  }
  return array;
}
function unsqueeze(array, dims, outer, size2) {
  var s = size2 || arraySize(array);
  if (outer) {
    for (var i2 = 0; i2 < outer; i2++) {
      array = [array];
      s.unshift(1);
    }
  }
  array = _unsqueeze(array, dims, 0);
  while (s.length < dims) {
    s.push(1);
  }
  return array;
}
function _unsqueeze(array, dims, dim) {
  var i2, ii;
  if (Array.isArray(array)) {
    var next = dim + 1;
    for (i2 = 0, ii = array.length; i2 < ii; i2++) {
      array[i2] = _unsqueeze(array[i2], dims, next);
    }
  } else {
    for (var d2 = dim; d2 < dims; d2++) {
      array = [array];
    }
  }
  return array;
}
function flatten(array) {
  if (!Array.isArray(array)) {
    return array;
  }
  var flat = [];
  array.forEach(function callback(value) {
    if (Array.isArray(value)) {
      value.forEach(callback);
    } else {
      flat.push(value);
    }
  });
  return flat;
}
function map(array, callback) {
  return Array.prototype.map.call(array, callback);
}
function forEach(array, callback) {
  Array.prototype.forEach.call(array, callback);
}
function filter(array, callback) {
  if (arraySize(array).length !== 1) {
    throw new Error("Only one dimensional matrices supported");
  }
  return Array.prototype.filter.call(array, callback);
}
function filterRegExp(array, regexp) {
  if (arraySize(array).length !== 1) {
    throw new Error("Only one dimensional matrices supported");
  }
  return Array.prototype.filter.call(array, (entry) => regexp.test(entry));
}
function join(array, separator) {
  return Array.prototype.join.call(array, separator);
}
function identify(a) {
  if (!Array.isArray(a)) {
    throw new TypeError("Array input expected");
  }
  if (a.length === 0) {
    return a;
  }
  var b2 = [];
  var count2 = 0;
  b2[0] = {
    value: a[0],
    identifier: 0
  };
  for (var i2 = 1; i2 < a.length; i2++) {
    if (a[i2] === a[i2 - 1]) {
      count2++;
    } else {
      count2 = 0;
    }
    b2.push({
      value: a[i2],
      identifier: count2
    });
  }
  return b2;
}
function generalize(a) {
  if (!Array.isArray(a)) {
    throw new TypeError("Array input expected");
  }
  if (a.length === 0) {
    return a;
  }
  var b2 = [];
  for (var i2 = 0; i2 < a.length; i2++) {
    b2.push(a[i2].value);
  }
  return b2;
}
function getArrayDataType(array, typeOf3) {
  var type;
  var length = 0;
  for (var i2 = 0; i2 < array.length; i2++) {
    var item = array[i2];
    var _isArray = Array.isArray(item);
    if (i2 === 0 && _isArray) {
      length = item.length;
    }
    if (_isArray && item.length !== length) {
      return void 0;
    }
    var itemType = _isArray ? getArrayDataType(item, typeOf3) : typeOf3(item);
    if (type === void 0) {
      type = itemType;
    } else if (type !== itemType) {
      return "mixed";
    } else {
    }
  }
  return type;
}
function concatRecursive(a, b2, concatDim, dim) {
  if (dim < concatDim) {
    if (a.length !== b2.length) {
      throw new DimensionError(a.length, b2.length);
    }
    var c = [];
    for (var i2 = 0; i2 < a.length; i2++) {
      c[i2] = concatRecursive(a[i2], b2[i2], concatDim, dim + 1);
    }
    return c;
  } else {
    return a.concat(b2);
  }
}
function concat() {
  var arrays = Array.prototype.slice.call(arguments, 0, -1);
  var concatDim = Array.prototype.slice.call(arguments, -1);
  if (arrays.length === 1) {
    return arrays[0];
  }
  if (arrays.length > 1) {
    return arrays.slice(1).reduce(function(A, B) {
      return concatRecursive(A, B, concatDim, 0);
    }, arrays[0]);
  } else {
    throw new Error("Wrong number of arguments in function concat");
  }
}
function broadcastSizes() {
  for (var _len = arguments.length, sizes = new Array(_len), _key = 0; _key < _len; _key++) {
    sizes[_key] = arguments[_key];
  }
  var dimensions = sizes.map((s) => s.length);
  var N = Math.max(...dimensions);
  var sizeMax = new Array(N).fill(null);
  for (var i2 = 0; i2 < sizes.length; i2++) {
    var size2 = sizes[i2];
    var dim = dimensions[i2];
    for (var j = 0; j < dim; j++) {
      var n = N - dim + j;
      if (size2[j] > sizeMax[n]) {
        sizeMax[n] = size2[j];
      }
    }
  }
  for (var _i = 0; _i < sizes.length; _i++) {
    checkBroadcastingRules(sizes[_i], sizeMax);
  }
  return sizeMax;
}
function checkBroadcastingRules(size2, toSize) {
  var N = toSize.length;
  var dim = size2.length;
  for (var j = 0; j < dim; j++) {
    var n = N - dim + j;
    if (size2[j] < toSize[n] && size2[j] > 1 || size2[j] > toSize[n]) {
      throw new Error("shape missmatch: missmatch is found in arg with shape (".concat(size2, ") not possible to broadcast dimension ").concat(dim, " with size ").concat(size2[j], " to size ").concat(toSize[n]));
    }
  }
}
function broadcastTo(array, toSize) {
  var Asize = arraySize(array);
  if (deepStrictEqual(Asize, toSize)) {
    return array;
  }
  checkBroadcastingRules(Asize, toSize);
  var broadcastedSize = broadcastSizes(Asize, toSize);
  var N = broadcastedSize.length;
  var paddedSize = [...Array(N - Asize.length).fill(1), ...Asize];
  var A = clone3(array);
  if (Asize.length < N) {
    A = reshape(A, paddedSize);
    Asize = arraySize(A);
  }
  for (var dim = 0; dim < N; dim++) {
    if (Asize[dim] < broadcastedSize[dim]) {
      A = stretch(A, broadcastedSize[dim], dim);
      Asize = arraySize(A);
    }
  }
  return A;
}
function stretch(arrayToStretch, sizeToStretch, dimToStretch) {
  return concat(...Array(sizeToStretch).fill(arrayToStretch), dimToStretch);
}
function clone3(array) {
  return _extends([], array);
}

// node_modules/mathjs/lib/esm/utils/lruQueue.js
function lruQueue(limit) {
  var size2 = 0;
  var base = 1;
  var queue = /* @__PURE__ */ Object.create(null);
  var map3 = /* @__PURE__ */ Object.create(null);
  var index2 = 0;
  var del = function del2(id) {
    var oldIndex = map3[id];
    if (!oldIndex) return;
    delete queue[oldIndex];
    delete map3[id];
    --size2;
    if (base !== oldIndex) return;
    if (!size2) {
      index2 = 0;
      base = 1;
      return;
    }
    while (!Object.prototype.hasOwnProperty.call(queue, ++base)) {
    }
  };
  limit = Math.abs(limit);
  return {
    hit: function hit(id) {
      var oldIndex = map3[id];
      var nuIndex = ++index2;
      queue[nuIndex] = id;
      map3[id] = nuIndex;
      if (!oldIndex) {
        ++size2;
        if (size2 <= limit) return void 0;
        id = queue[base];
        del(id);
        return id;
      }
      delete queue[oldIndex];
      if (base !== oldIndex) return void 0;
      while (!Object.prototype.hasOwnProperty.call(queue, ++base)) {
      }
      return void 0;
    },
    delete: del,
    clear: function clear() {
      size2 = index2 = 0;
      base = 1;
      queue = /* @__PURE__ */ Object.create(null);
      map3 = /* @__PURE__ */ Object.create(null);
    }
  };
}

// node_modules/mathjs/lib/esm/utils/function.js
function memoize(fn) {
  var {
    hasher: hasher2,
    limit
  } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  limit = limit == null ? Number.POSITIVE_INFINITY : limit;
  hasher2 = hasher2 == null ? JSON.stringify : hasher2;
  return function memoize2() {
    if (typeof memoize2.cache !== "object") {
      memoize2.cache = {
        values: /* @__PURE__ */ new Map(),
        lru: lruQueue(limit || Number.POSITIVE_INFINITY)
      };
    }
    var args = [];
    for (var i2 = 0; i2 < arguments.length; i2++) {
      args[i2] = arguments[i2];
    }
    var hash = hasher2(args);
    if (memoize2.cache.values.has(hash)) {
      memoize2.cache.lru.hit(hash);
      return memoize2.cache.values.get(hash);
    }
    var newVal = fn.apply(fn, args);
    memoize2.cache.values.set(hash, newVal);
    memoize2.cache.values.delete(memoize2.cache.lru.hit(hash));
    return newVal;
  };
}
function maxArgumentCount(fn) {
  return Object.keys(fn.signatures || {}).reduce(function(args, signature2) {
    var count2 = (signature2.match(/,/g) || []).length + 1;
    return Math.max(args, count2);
  }, -1);
}

// node_modules/mathjs/lib/esm/type/matrix/DenseMatrix.js
var name7 = "DenseMatrix";
var dependencies8 = ["Matrix"];
var createDenseMatrixClass = factory(name7, dependencies8, (_ref) => {
  var {
    Matrix: Matrix2
  } = _ref;
  function DenseMatrix2(data, datatype) {
    if (!(this instanceof DenseMatrix2)) {
      throw new SyntaxError("Constructor must be called with the new operator");
    }
    if (datatype && !isString(datatype)) {
      throw new Error("Invalid datatype: " + datatype);
    }
    if (isMatrix(data)) {
      if (data.type === "DenseMatrix") {
        this._data = clone(data._data);
        this._size = clone(data._size);
        this._datatype = datatype || data._datatype;
      } else {
        this._data = data.toArray();
        this._size = data.size();
        this._datatype = datatype || data._datatype;
      }
    } else if (data && isArray(data.data) && isArray(data.size)) {
      this._data = data.data;
      this._size = data.size;
      validate(this._data, this._size);
      this._datatype = datatype || data.datatype;
    } else if (isArray(data)) {
      this._data = preprocess(data);
      this._size = arraySize(this._data);
      validate(this._data, this._size);
      this._datatype = datatype;
    } else if (data) {
      throw new TypeError("Unsupported type of data (" + typeOf(data) + ")");
    } else {
      this._data = [];
      this._size = [0];
      this._datatype = datatype;
    }
  }
  DenseMatrix2.prototype = new Matrix2();
  DenseMatrix2.prototype.createDenseMatrix = function(data, datatype) {
    return new DenseMatrix2(data, datatype);
  };
  Object.defineProperty(DenseMatrix2, "name", {
    value: "DenseMatrix"
  });
  DenseMatrix2.prototype.constructor = DenseMatrix2;
  DenseMatrix2.prototype.type = "DenseMatrix";
  DenseMatrix2.prototype.isDenseMatrix = true;
  DenseMatrix2.prototype.getDataType = function() {
    return getArrayDataType(this._data, typeOf);
  };
  DenseMatrix2.prototype.storage = function() {
    return "dense";
  };
  DenseMatrix2.prototype.datatype = function() {
    return this._datatype;
  };
  DenseMatrix2.prototype.create = function(data, datatype) {
    return new DenseMatrix2(data, datatype);
  };
  DenseMatrix2.prototype.subset = function(index2, replacement, defaultValue) {
    switch (arguments.length) {
      case 1:
        return _get(this, index2);
      case 2:
      case 3:
        return _set(this, index2, replacement, defaultValue);
      default:
        throw new SyntaxError("Wrong number of arguments");
    }
  };
  DenseMatrix2.prototype.get = function(index2) {
    if (!isArray(index2)) {
      throw new TypeError("Array expected");
    }
    if (index2.length !== this._size.length) {
      throw new DimensionError(index2.length, this._size.length);
    }
    for (var x = 0; x < index2.length; x++) {
      validateIndex(index2[x], this._size[x]);
    }
    var data = this._data;
    for (var i2 = 0, ii = index2.length; i2 < ii; i2++) {
      var indexI = index2[i2];
      validateIndex(indexI, data.length);
      data = data[indexI];
    }
    return data;
  };
  DenseMatrix2.prototype.set = function(index2, value, defaultValue) {
    if (!isArray(index2)) {
      throw new TypeError("Array expected");
    }
    if (index2.length < this._size.length) {
      throw new DimensionError(index2.length, this._size.length, "<");
    }
    var i2, ii, indexI;
    var size2 = index2.map(function(i3) {
      return i3 + 1;
    });
    _fit(this, size2, defaultValue);
    var data = this._data;
    for (i2 = 0, ii = index2.length - 1; i2 < ii; i2++) {
      indexI = index2[i2];
      validateIndex(indexI, data.length);
      data = data[indexI];
    }
    indexI = index2[index2.length - 1];
    validateIndex(indexI, data.length);
    data[indexI] = value;
    return this;
  };
  function _get(matrix2, index2) {
    if (!isIndex(index2)) {
      throw new TypeError("Invalid index");
    }
    var isScalar = index2.isScalar();
    if (isScalar) {
      return matrix2.get(index2.min());
    } else {
      var size2 = index2.size();
      if (size2.length !== matrix2._size.length) {
        throw new DimensionError(size2.length, matrix2._size.length);
      }
      var min3 = index2.min();
      var max3 = index2.max();
      for (var i2 = 0, ii = matrix2._size.length; i2 < ii; i2++) {
        validateIndex(min3[i2], matrix2._size[i2]);
        validateIndex(max3[i2], matrix2._size[i2]);
      }
      return new DenseMatrix2(_getSubmatrix(matrix2._data, index2, size2.length, 0), matrix2._datatype);
    }
  }
  function _getSubmatrix(data, index2, dims, dim) {
    var last = dim === dims - 1;
    var range3 = index2.dimension(dim);
    if (last) {
      return range3.map(function(i2) {
        validateIndex(i2, data.length);
        return data[i2];
      }).valueOf();
    } else {
      return range3.map(function(i2) {
        validateIndex(i2, data.length);
        var child = data[i2];
        return _getSubmatrix(child, index2, dims, dim + 1);
      }).valueOf();
    }
  }
  function _set(matrix2, index2, submatrix, defaultValue) {
    if (!index2 || index2.isIndex !== true) {
      throw new TypeError("Invalid index");
    }
    var iSize = index2.size();
    var isScalar = index2.isScalar();
    var sSize;
    if (isMatrix(submatrix)) {
      sSize = submatrix.size();
      submatrix = submatrix.valueOf();
    } else {
      sSize = arraySize(submatrix);
    }
    if (isScalar) {
      if (sSize.length !== 0) {
        throw new TypeError("Scalar expected");
      }
      matrix2.set(index2.min(), submatrix, defaultValue);
    } else {
      if (!deepStrictEqual(sSize, iSize)) {
        try {
          if (sSize.length === 0) {
            submatrix = broadcastTo([submatrix], iSize);
          } else {
            submatrix = broadcastTo(submatrix, iSize);
          }
          sSize = arraySize(submatrix);
        } catch (_unused) {
        }
      }
      if (iSize.length < matrix2._size.length) {
        throw new DimensionError(iSize.length, matrix2._size.length, "<");
      }
      if (sSize.length < iSize.length) {
        var i2 = 0;
        var outer = 0;
        while (iSize[i2] === 1 && sSize[i2] === 1) {
          i2++;
        }
        while (iSize[i2] === 1) {
          outer++;
          i2++;
        }
        submatrix = unsqueeze(submatrix, iSize.length, outer, sSize);
      }
      if (!deepStrictEqual(iSize, sSize)) {
        throw new DimensionError(iSize, sSize, ">");
      }
      var size2 = index2.max().map(function(i3) {
        return i3 + 1;
      });
      _fit(matrix2, size2, defaultValue);
      var dims = iSize.length;
      var dim = 0;
      _setSubmatrix(matrix2._data, index2, submatrix, dims, dim);
    }
    return matrix2;
  }
  function _setSubmatrix(data, index2, submatrix, dims, dim) {
    var last = dim === dims - 1;
    var range3 = index2.dimension(dim);
    if (last) {
      range3.forEach(function(dataIndex, subIndex) {
        validateIndex(dataIndex);
        data[dataIndex] = submatrix[subIndex[0]];
      });
    } else {
      range3.forEach(function(dataIndex, subIndex) {
        validateIndex(dataIndex);
        _setSubmatrix(data[dataIndex], index2, submatrix[subIndex[0]], dims, dim + 1);
      });
    }
  }
  DenseMatrix2.prototype.resize = function(size2, defaultValue, copy) {
    if (!isCollection(size2)) {
      throw new TypeError("Array or Matrix expected");
    }
    var sizeArray = size2.valueOf().map((value) => {
      return Array.isArray(value) && value.length === 1 ? value[0] : value;
    });
    var m = copy ? this.clone() : this;
    return _resize2(m, sizeArray, defaultValue);
  };
  function _resize2(matrix2, size2, defaultValue) {
    if (size2.length === 0) {
      var v = matrix2._data;
      while (isArray(v)) {
        v = v[0];
      }
      return v;
    }
    matrix2._size = size2.slice(0);
    matrix2._data = resize(matrix2._data, matrix2._size, defaultValue);
    return matrix2;
  }
  DenseMatrix2.prototype.reshape = function(size2, copy) {
    var m = copy ? this.clone() : this;
    m._data = reshape(m._data, size2);
    var currentLength = m._size.reduce((length, size3) => length * size3);
    m._size = processSizesWildcard(size2, currentLength);
    return m;
  };
  function _fit(matrix2, size2, defaultValue) {
    var newSize = matrix2._size.slice(0);
    var changed = false;
    while (newSize.length < size2.length) {
      newSize.push(0);
      changed = true;
    }
    for (var i2 = 0, ii = size2.length; i2 < ii; i2++) {
      if (size2[i2] > newSize[i2]) {
        newSize[i2] = size2[i2];
        changed = true;
      }
    }
    if (changed) {
      _resize2(matrix2, newSize, defaultValue);
    }
  }
  DenseMatrix2.prototype.clone = function() {
    var m = new DenseMatrix2({
      data: clone(this._data),
      size: clone(this._size),
      datatype: this._datatype
    });
    return m;
  };
  DenseMatrix2.prototype.size = function() {
    return this._size.slice(0);
  };
  DenseMatrix2.prototype.map = function(callback) {
    var me = this;
    var args = maxArgumentCount(callback);
    var recurse = function recurse2(value, index2) {
      if (isArray(value)) {
        return value.map(function(child, i2) {
          return recurse2(child, index2.concat(i2));
        });
      } else {
        if (args === 1) {
          return callback(value);
        } else if (args === 2) {
          return callback(value, index2);
        } else {
          return callback(value, index2, me);
        }
      }
    };
    var data = recurse(this._data, []);
    var datatype = this._datatype !== void 0 ? getArrayDataType(data, typeOf) : void 0;
    return new DenseMatrix2(data, datatype);
  };
  DenseMatrix2.prototype.forEach = function(callback) {
    var me = this;
    var recurse = function recurse2(value, index2) {
      if (isArray(value)) {
        value.forEach(function(child, i2) {
          recurse2(child, index2.concat(i2));
        });
      } else {
        callback(value, index2, me);
      }
    };
    recurse(this._data, []);
  };
  DenseMatrix2.prototype[Symbol.iterator] = function* () {
    var recurse = function* recurse2(value, index2) {
      if (isArray(value)) {
        for (var i2 = 0; i2 < value.length; i2++) {
          yield* recurse2(value[i2], index2.concat(i2));
        }
      } else {
        yield {
          value,
          index: index2
        };
      }
    };
    yield* recurse(this._data, []);
  };
  DenseMatrix2.prototype.rows = function() {
    var result = [];
    var s = this.size();
    if (s.length !== 2) {
      throw new TypeError("Rows can only be returned for a 2D matrix.");
    }
    var data = this._data;
    for (var row2 of data) {
      result.push(new DenseMatrix2([row2], this._datatype));
    }
    return result;
  };
  DenseMatrix2.prototype.columns = function() {
    var _this = this;
    var result = [];
    var s = this.size();
    if (s.length !== 2) {
      throw new TypeError("Rows can only be returned for a 2D matrix.");
    }
    var data = this._data;
    var _loop = function _loop2(i3) {
      var col = data.map((row2) => [row2[i3]]);
      result.push(new DenseMatrix2(col, _this._datatype));
    };
    for (var i2 = 0; i2 < s[1]; i2++) {
      _loop(i2);
    }
    return result;
  };
  DenseMatrix2.prototype.toArray = function() {
    return clone(this._data);
  };
  DenseMatrix2.prototype.valueOf = function() {
    return this._data;
  };
  DenseMatrix2.prototype.format = function(options) {
    return format3(this._data, options);
  };
  DenseMatrix2.prototype.toString = function() {
    return format3(this._data);
  };
  DenseMatrix2.prototype.toJSON = function() {
    return {
      mathjs: "DenseMatrix",
      data: this._data,
      size: this._size,
      datatype: this._datatype
    };
  };
  DenseMatrix2.prototype.diagonal = function(k) {
    if (k) {
      if (isBigNumber(k)) {
        k = k.toNumber();
      }
      if (!isNumber(k) || !isInteger(k)) {
        throw new TypeError("The parameter k must be an integer number");
      }
    } else {
      k = 0;
    }
    var kSuper = k > 0 ? k : 0;
    var kSub = k < 0 ? -k : 0;
    var rows = this._size[0];
    var columns = this._size[1];
    var n = Math.min(rows - kSub, columns - kSuper);
    var data = [];
    for (var i2 = 0; i2 < n; i2++) {
      data[i2] = this._data[i2 + kSub][i2 + kSuper];
    }
    return new DenseMatrix2({
      data,
      size: [n],
      datatype: this._datatype
    });
  };
  DenseMatrix2.diagonal = function(size2, value, k, defaultValue) {
    if (!isArray(size2)) {
      throw new TypeError("Array expected, size parameter");
    }
    if (size2.length !== 2) {
      throw new Error("Only two dimensions matrix are supported");
    }
    size2 = size2.map(function(s) {
      if (isBigNumber(s)) {
        s = s.toNumber();
      }
      if (!isNumber(s) || !isInteger(s) || s < 1) {
        throw new Error("Size values must be positive integers");
      }
      return s;
    });
    if (k) {
      if (isBigNumber(k)) {
        k = k.toNumber();
      }
      if (!isNumber(k) || !isInteger(k)) {
        throw new TypeError("The parameter k must be an integer number");
      }
    } else {
      k = 0;
    }
    var kSuper = k > 0 ? k : 0;
    var kSub = k < 0 ? -k : 0;
    var rows = size2[0];
    var columns = size2[1];
    var n = Math.min(rows - kSub, columns - kSuper);
    var _value;
    if (isArray(value)) {
      if (value.length !== n) {
        throw new Error("Invalid value array length");
      }
      _value = function _value2(i2) {
        return value[i2];
      };
    } else if (isMatrix(value)) {
      var ms = value.size();
      if (ms.length !== 1 || ms[0] !== n) {
        throw new Error("Invalid matrix length");
      }
      _value = function _value2(i2) {
        return value.get([i2]);
      };
    } else {
      _value = function _value2() {
        return value;
      };
    }
    if (!defaultValue) {
      defaultValue = isBigNumber(_value(0)) ? _value(0).mul(0) : 0;
    }
    var data = [];
    if (size2.length > 0) {
      data = resize(data, size2, defaultValue);
      for (var d2 = 0; d2 < n; d2++) {
        data[d2 + kSub][d2 + kSuper] = _value(d2);
      }
    }
    return new DenseMatrix2({
      data,
      size: [rows, columns]
    });
  };
  DenseMatrix2.fromJSON = function(json) {
    return new DenseMatrix2(json);
  };
  DenseMatrix2.prototype.swapRows = function(i2, j) {
    if (!isNumber(i2) || !isInteger(i2) || !isNumber(j) || !isInteger(j)) {
      throw new Error("Row index must be positive integers");
    }
    if (this._size.length !== 2) {
      throw new Error("Only two dimensional matrix is supported");
    }
    validateIndex(i2, this._size[0]);
    validateIndex(j, this._size[0]);
    DenseMatrix2._swapRows(i2, j, this._data);
    return this;
  };
  DenseMatrix2._swapRows = function(i2, j, data) {
    var vi = data[i2];
    data[i2] = data[j];
    data[j] = vi;
  };
  function preprocess(data) {
    if (isMatrix(data)) {
      return preprocess(data.valueOf());
    }
    if (isArray(data)) {
      return data.map(preprocess);
    }
    return data;
  }
  return DenseMatrix2;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/function/utils/clone.js
var name8 = "clone";
var dependencies9 = ["typed"];
var createClone = factory(name8, dependencies9, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name8, {
    any: clone
  });
});

// node_modules/mathjs/lib/esm/utils/switch.js
function _switch(mat) {
  var I = mat.length;
  var J = mat[0].length;
  var i2, j;
  var ret = [];
  for (j = 0; j < J; j++) {
    var tmp = [];
    for (i2 = 0; i2 < I; i2++) {
      tmp.push(mat[i2][j]);
    }
    ret.push(tmp);
  }
  return ret;
}

// node_modules/mathjs/lib/esm/utils/collection.js
function containsCollections(array) {
  for (var i2 = 0; i2 < array.length; i2++) {
    if (isCollection(array[i2])) {
      return true;
    }
  }
  return false;
}
function deepForEach(array, callback) {
  if (isMatrix(array)) {
    array = array.valueOf();
  }
  for (var i2 = 0, ii = array.length; i2 < ii; i2++) {
    var value = array[i2];
    if (Array.isArray(value)) {
      deepForEach(value, callback);
    } else {
      callback(value);
    }
  }
}
function deepMap(array, callback, skipZeros) {
  if (array && typeof array.map === "function") {
    return array.map(function(x) {
      return deepMap(x, callback, skipZeros);
    });
  } else {
    return callback(array);
  }
}
function reduce(mat, dim, callback) {
  var size2 = Array.isArray(mat) ? arraySize(mat) : mat.size();
  if (dim < 0 || dim >= size2.length) {
    throw new IndexError(dim, size2.length);
  }
  if (isMatrix(mat)) {
    return mat.create(_reduce(mat.valueOf(), dim, callback));
  } else {
    return _reduce(mat, dim, callback);
  }
}
function _reduce(mat, dim, callback) {
  var i2, ret, val, tran;
  if (dim <= 0) {
    if (!Array.isArray(mat[0])) {
      val = mat[0];
      for (i2 = 1; i2 < mat.length; i2++) {
        val = callback(val, mat[i2]);
      }
      return val;
    } else {
      tran = _switch(mat);
      ret = [];
      for (i2 = 0; i2 < tran.length; i2++) {
        ret[i2] = _reduce(tran[i2], dim - 1, callback);
      }
      return ret;
    }
  } else {
    ret = [];
    for (i2 = 0; i2 < mat.length; i2++) {
      ret[i2] = _reduce(mat[i2], dim - 1, callback);
    }
    return ret;
  }
}
function scatter(a, j, w, x, u, mark, cindex, f, inverse, update, value) {
  var avalues = a._values;
  var aindex = a._index;
  var aptr = a._ptr;
  var k, k0, k1, i2;
  if (x) {
    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
      i2 = aindex[k];
      if (w[i2] !== mark) {
        w[i2] = mark;
        cindex.push(i2);
        if (update) {
          x[i2] = inverse ? f(avalues[k], value) : f(value, avalues[k]);
          u[i2] = mark;
        } else {
          x[i2] = avalues[k];
        }
      } else {
        x[i2] = inverse ? f(avalues[k], x[i2]) : f(x[i2], avalues[k]);
        u[i2] = mark;
      }
    }
  } else {
    for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
      i2 = aindex[k];
      if (w[i2] !== mark) {
        w[i2] = mark;
        cindex.push(i2);
      } else {
        u[i2] = mark;
      }
    }
  }
}

// node_modules/mathjs/lib/esm/function/utils/isInteger.js
var name9 = "isInteger";
var dependencies10 = ["typed"];
var createIsInteger = factory(name9, dependencies10, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name9, {
    number: isInteger,
    // TODO: what to do with isInteger(add(0.1, 0.2))  ?
    BigNumber: function BigNumber2(x) {
      return x.isInt();
    },
    Fraction: function Fraction3(x) {
      return x.d === 1 && isFinite(x.n);
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/plain/number/arithmetic.js
var n1 = "number";
var n2 = "number, number";
function absNumber(a) {
  return Math.abs(a);
}
absNumber.signature = n1;
function addNumber(a, b2) {
  return a + b2;
}
addNumber.signature = n2;
function subtractNumber(a, b2) {
  return a - b2;
}
subtractNumber.signature = n2;
function multiplyNumber(a, b2) {
  return a * b2;
}
multiplyNumber.signature = n2;
function divideNumber(a, b2) {
  return a / b2;
}
divideNumber.signature = n2;
function unaryMinusNumber(x) {
  return -x;
}
unaryMinusNumber.signature = n1;
function unaryPlusNumber(x) {
  return x;
}
unaryPlusNumber.signature = n1;
function cbrtNumber(x) {
  return cbrt(x);
}
cbrtNumber.signature = n1;
function cubeNumber(x) {
  return x * x * x;
}
cubeNumber.signature = n1;
function expNumber(x) {
  return Math.exp(x);
}
expNumber.signature = n1;
function expm1Number(x) {
  return expm1(x);
}
expm1Number.signature = n1;
function gcdNumber(a, b2) {
  if (!isInteger(a) || !isInteger(b2)) {
    throw new Error("Parameters in function gcd must be integer numbers");
  }
  var r;
  while (b2 !== 0) {
    r = a % b2;
    a = b2;
    b2 = r;
  }
  return a < 0 ? -a : a;
}
gcdNumber.signature = n2;
function lcmNumber(a, b2) {
  if (!isInteger(a) || !isInteger(b2)) {
    throw new Error("Parameters in function lcm must be integer numbers");
  }
  if (a === 0 || b2 === 0) {
    return 0;
  }
  var t;
  var prod2 = a * b2;
  while (b2 !== 0) {
    t = b2;
    b2 = a % t;
    a = t;
  }
  return Math.abs(prod2 / a);
}
lcmNumber.signature = n2;
function logNumber(x, y) {
  if (y) {
    return Math.log(x) / Math.log(y);
  }
  return Math.log(x);
}
function log10Number(x) {
  return log10(x);
}
log10Number.signature = n1;
function log2Number(x) {
  return log2(x);
}
log2Number.signature = n1;
function log1pNumber(x) {
  return log1p(x);
}
log1pNumber.signature = n1;
function modNumber(x, y) {
  return y === 0 ? x : x - y * Math.floor(x / y);
}
modNumber.signature = n2;
function nthRootNumber(a) {
  var root = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;
  var inv2 = root < 0;
  if (inv2) {
    root = -root;
  }
  if (root === 0) {
    throw new Error("Root must be non-zero");
  }
  if (a < 0 && Math.abs(root) % 2 !== 1) {
    throw new Error("Root must be odd when a is negative.");
  }
  if (a === 0) {
    return inv2 ? Infinity : 0;
  }
  if (!isFinite(a)) {
    return inv2 ? 0 : a;
  }
  var x = Math.pow(Math.abs(a), 1 / root);
  x = a < 0 ? -x : x;
  return inv2 ? 1 / x : x;
}
function signNumber(x) {
  return sign(x);
}
signNumber.signature = n1;
function sqrtNumber(x) {
  return Math.sqrt(x);
}
sqrtNumber.signature = n1;
function squareNumber(x) {
  return x * x;
}
squareNumber.signature = n1;
function xgcdNumber(a, b2) {
  var t;
  var q;
  var r;
  var x = 0;
  var lastx = 1;
  var y = 1;
  var lasty = 0;
  if (!isInteger(a) || !isInteger(b2)) {
    throw new Error("Parameters in function xgcd must be integer numbers");
  }
  while (b2) {
    q = Math.floor(a / b2);
    r = a - q * b2;
    t = x;
    x = lastx - q * x;
    lastx = t;
    t = y;
    y = lasty - q * y;
    lasty = t;
    a = b2;
    b2 = r;
  }
  var res;
  if (a < 0) {
    res = [-a, -lastx, -lasty];
  } else {
    res = [a, a ? lastx : 0, lasty];
  }
  return res;
}
xgcdNumber.signature = n2;
function powNumber(x, y) {
  if (x * x < 1 && y === Infinity || x * x > 1 && y === -Infinity) {
    return 0;
  }
  return Math.pow(x, y);
}
powNumber.signature = n2;
function roundNumber(value) {
  var decimals = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  if (!isInteger(decimals) || decimals < 0 || decimals > 15) {
    throw new Error("Number of decimals in function round must be an integer from 0 to 15 inclusive");
  }
  return parseFloat(toFixed(value, decimals));
}
function normNumber(x) {
  return Math.abs(x);
}
normNumber.signature = n1;

// node_modules/mathjs/lib/esm/plain/number/bitwise.js
var n12 = "number";
var n22 = "number, number";
function bitAndNumber(x, y) {
  if (!isInteger(x) || !isInteger(y)) {
    throw new Error("Integers expected in function bitAnd");
  }
  return x & y;
}
bitAndNumber.signature = n22;
function bitNotNumber(x) {
  if (!isInteger(x)) {
    throw new Error("Integer expected in function bitNot");
  }
  return ~x;
}
bitNotNumber.signature = n12;
function bitOrNumber(x, y) {
  if (!isInteger(x) || !isInteger(y)) {
    throw new Error("Integers expected in function bitOr");
  }
  return x | y;
}
bitOrNumber.signature = n22;
function bitXorNumber(x, y) {
  if (!isInteger(x) || !isInteger(y)) {
    throw new Error("Integers expected in function bitXor");
  }
  return x ^ y;
}
bitXorNumber.signature = n22;
function leftShiftNumber(x, y) {
  if (!isInteger(x) || !isInteger(y)) {
    throw new Error("Integers expected in function leftShift");
  }
  return x << y;
}
leftShiftNumber.signature = n22;
function rightArithShiftNumber(x, y) {
  if (!isInteger(x) || !isInteger(y)) {
    throw new Error("Integers expected in function rightArithShift");
  }
  return x >> y;
}
rightArithShiftNumber.signature = n22;
function rightLogShiftNumber(x, y) {
  if (!isInteger(x) || !isInteger(y)) {
    throw new Error("Integers expected in function rightLogShift");
  }
  return x >>> y;
}
rightLogShiftNumber.signature = n22;

// node_modules/mathjs/lib/esm/utils/product.js
function product2(i2, n) {
  if (n < i2) {
    return 1;
  }
  if (n === i2) {
    return n;
  }
  var half = n + i2 >> 1;
  return product2(i2, half) * product2(half + 1, n);
}

// node_modules/mathjs/lib/esm/plain/number/combinations.js
function combinationsNumber(n, k) {
  if (!isInteger(n) || n < 0) {
    throw new TypeError("Positive integer value expected in function combinations");
  }
  if (!isInteger(k) || k < 0) {
    throw new TypeError("Positive integer value expected in function combinations");
  }
  if (k > n) {
    throw new TypeError("k must be less than or equal to n");
  }
  var nMinusk = n - k;
  var answer = 1;
  var firstnumerator = k < nMinusk ? nMinusk + 1 : k + 1;
  var nextdivisor = 2;
  var lastdivisor = k < nMinusk ? k : nMinusk;
  for (var nextnumerator = firstnumerator; nextnumerator <= n; ++nextnumerator) {
    answer *= nextnumerator;
    while (nextdivisor <= lastdivisor && answer % nextdivisor === 0) {
      answer /= nextdivisor;
      ++nextdivisor;
    }
  }
  if (nextdivisor <= lastdivisor) {
    answer /= product2(nextdivisor, lastdivisor);
  }
  return answer;
}
combinationsNumber.signature = "number, number";

// node_modules/mathjs/lib/esm/plain/number/constants.js
var pi = Math.PI;
var tau = 2 * Math.PI;
var e = Math.E;
var phi = 1.618033988749895;

// node_modules/mathjs/lib/esm/plain/number/logical.js
var n13 = "number";
var n23 = "number, number";
function notNumber(x) {
  return !x;
}
notNumber.signature = n13;
function orNumber(x, y) {
  return !!(x || y);
}
orNumber.signature = n23;
function xorNumber(x, y) {
  return !!x !== !!y;
}
xorNumber.signature = n23;
function andNumber(x, y) {
  return !!(x && y);
}
andNumber.signature = n23;

// node_modules/mathjs/lib/esm/plain/number/probability.js
function gammaNumber(n) {
  var x;
  if (isInteger(n)) {
    if (n <= 0) {
      return isFinite(n) ? Infinity : NaN;
    }
    if (n > 171) {
      return Infinity;
    }
    return product2(1, n - 1);
  }
  if (n < 0.5) {
    return Math.PI / (Math.sin(Math.PI * n) * gammaNumber(1 - n));
  }
  if (n >= 171.35) {
    return Infinity;
  }
  if (n > 85) {
    var twoN = n * n;
    var threeN = twoN * n;
    var fourN = threeN * n;
    var fiveN = fourN * n;
    return Math.sqrt(2 * Math.PI / n) * Math.pow(n / Math.E, n) * (1 + 1 / (12 * n) + 1 / (288 * twoN) - 139 / (51840 * threeN) - 571 / (2488320 * fourN) + 163879 / (209018880 * fiveN) + 5246819 / (75246796800 * fiveN * n));
  }
  --n;
  x = gammaP[0];
  for (var i2 = 1; i2 < gammaP.length; ++i2) {
    x += gammaP[i2] / (n + i2);
  }
  var t = n + gammaG + 0.5;
  return Math.sqrt(2 * Math.PI) * Math.pow(t, n + 0.5) * Math.exp(-t) * x;
}
gammaNumber.signature = "number";
var gammaG = 4.7421875;
var gammaP = [0.9999999999999971, 57.15623566586292, -59.59796035547549, 14.136097974741746, -0.4919138160976202, 3399464998481189e-20, 4652362892704858e-20, -9837447530487956e-20, 1580887032249125e-19, -21026444172410488e-20, 21743961811521265e-20, -1643181065367639e-19, 8441822398385275e-20, -26190838401581408e-21, 36899182659531625e-22];
var lnSqrt2PI = 0.9189385332046728;
var lgammaG = 5;
var lgammaN = 7;
var lgammaSeries = [1.000000000190015, 76.18009172947146, -86.50532032941678, 24.01409824083091, -1.231739572450155, 0.001208650973866179, -5395239384953e-18];
function lgammaNumber(n) {
  if (n < 0) return NaN;
  if (n === 0) return Infinity;
  if (!isFinite(n)) return n;
  if (n < 0.5) {
    return Math.log(Math.PI / Math.sin(Math.PI * n)) - lgammaNumber(1 - n);
  }
  n = n - 1;
  var base = n + lgammaG + 0.5;
  var sum3 = lgammaSeries[0];
  for (var i2 = lgammaN - 1; i2 >= 1; i2--) {
    sum3 += lgammaSeries[i2] / (n + i2);
  }
  return lnSqrt2PI + (n + 0.5) * Math.log(base) - base + Math.log(sum3);
}
lgammaNumber.signature = "number";

// node_modules/mathjs/lib/esm/plain/number/trigonometry.js
var n14 = "number";
var n24 = "number, number";
function acosNumber(x) {
  return Math.acos(x);
}
acosNumber.signature = n14;
function acoshNumber(x) {
  return acosh(x);
}
acoshNumber.signature = n14;
function acotNumber(x) {
  return Math.atan(1 / x);
}
acotNumber.signature = n14;
function acothNumber(x) {
  return isFinite(x) ? (Math.log((x + 1) / x) + Math.log(x / (x - 1))) / 2 : 0;
}
acothNumber.signature = n14;
function acscNumber(x) {
  return Math.asin(1 / x);
}
acscNumber.signature = n14;
function acschNumber(x) {
  var xInv = 1 / x;
  return Math.log(xInv + Math.sqrt(xInv * xInv + 1));
}
acschNumber.signature = n14;
function asecNumber(x) {
  return Math.acos(1 / x);
}
asecNumber.signature = n14;
function asechNumber(x) {
  var xInv = 1 / x;
  var ret = Math.sqrt(xInv * xInv - 1);
  return Math.log(ret + xInv);
}
asechNumber.signature = n14;
function asinNumber(x) {
  return Math.asin(x);
}
asinNumber.signature = n14;
function asinhNumber(x) {
  return asinh(x);
}
asinhNumber.signature = n14;
function atanNumber(x) {
  return Math.atan(x);
}
atanNumber.signature = n14;
function atan2Number(y, x) {
  return Math.atan2(y, x);
}
atan2Number.signature = n24;
function atanhNumber(x) {
  return atanh(x);
}
atanhNumber.signature = n14;
function cosNumber(x) {
  return Math.cos(x);
}
cosNumber.signature = n14;
function coshNumber(x) {
  return cosh(x);
}
coshNumber.signature = n14;
function cotNumber(x) {
  return 1 / Math.tan(x);
}
cotNumber.signature = n14;
function cothNumber(x) {
  var e3 = Math.exp(2 * x);
  return (e3 + 1) / (e3 - 1);
}
cothNumber.signature = n14;
function cscNumber(x) {
  return 1 / Math.sin(x);
}
cscNumber.signature = n14;
function cschNumber(x) {
  if (x === 0) {
    return Number.POSITIVE_INFINITY;
  } else {
    return Math.abs(2 / (Math.exp(x) - Math.exp(-x))) * sign(x);
  }
}
cschNumber.signature = n14;
function secNumber(x) {
  return 1 / Math.cos(x);
}
secNumber.signature = n14;
function sechNumber(x) {
  return 2 / (Math.exp(x) + Math.exp(-x));
}
sechNumber.signature = n14;
function sinNumber(x) {
  return Math.sin(x);
}
sinNumber.signature = n14;
function sinhNumber(x) {
  return sinh(x);
}
sinhNumber.signature = n14;
function tanNumber(x) {
  return Math.tan(x);
}
tanNumber.signature = n14;
function tanhNumber(x) {
  return tanh(x);
}
tanhNumber.signature = n14;

// node_modules/mathjs/lib/esm/plain/number/utils.js
var n15 = "number";
function isIntegerNumber(x) {
  return isInteger(x);
}
isIntegerNumber.signature = n15;
function isNegativeNumber(x) {
  return x < 0;
}
isNegativeNumber.signature = n15;
function isPositiveNumber(x) {
  return x > 0;
}
isPositiveNumber.signature = n15;
function isZeroNumber(x) {
  return x === 0;
}
isZeroNumber.signature = n15;
function isNaNNumber(x) {
  return Number.isNaN(x);
}
isNaNNumber.signature = n15;

// node_modules/mathjs/lib/esm/function/utils/isNegative.js
var name10 = "isNegative";
var dependencies11 = ["typed"];
var createIsNegative = factory(name10, dependencies11, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name10, {
    number: isNegativeNumber,
    BigNumber: function BigNumber2(x) {
      return x.isNeg() && !x.isZero() && !x.isNaN();
    },
    Fraction: function Fraction3(x) {
      return x.s < 0;
    },
    Unit: typed2.referToSelf((self2) => (x) => typed2.find(self2, x.valueType())(x.value)),
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/utils/isNumeric.js
var name11 = "isNumeric";
var dependencies12 = ["typed"];
var createIsNumeric = factory(name11, dependencies12, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name11, {
    "number | BigNumber | Fraction | boolean": () => true,
    "Complex | Unit | string | null | undefined | Node": () => false,
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/utils/hasNumericValue.js
var name12 = "hasNumericValue";
var dependencies13 = ["typed", "isNumeric"];
var createHasNumericValue = factory(name12, dependencies13, (_ref) => {
  var {
    typed: typed2,
    isNumeric: isNumeric2
  } = _ref;
  return typed2(name12, {
    boolean: () => true,
    string: function string2(x) {
      return x.trim().length > 0 && !isNaN(Number(x));
    },
    any: function any(x) {
      return isNumeric2(x);
    }
  });
});

// node_modules/mathjs/lib/esm/function/utils/isPositive.js
var name13 = "isPositive";
var dependencies14 = ["typed"];
var createIsPositive = factory(name13, dependencies14, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name13, {
    number: isPositiveNumber,
    BigNumber: function BigNumber2(x) {
      return !x.isNeg() && !x.isZero() && !x.isNaN();
    },
    Fraction: function Fraction3(x) {
      return x.s > 0 && x.n > 0;
    },
    Unit: typed2.referToSelf((self2) => (x) => typed2.find(self2, x.valueType())(x.value)),
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/utils/isZero.js
var name14 = "isZero";
var dependencies15 = ["typed"];
var createIsZero = factory(name14, dependencies15, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name14, {
    number: isZeroNumber,
    BigNumber: function BigNumber2(x) {
      return x.isZero();
    },
    Complex: function Complex3(x) {
      return x.re === 0 && x.im === 0;
    },
    Fraction: function Fraction3(x) {
      return x.d === 1 && x.n === 0;
    },
    Unit: typed2.referToSelf((self2) => (x) => typed2.find(self2, x.valueType())(x.value)),
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/utils/isNaN.js
var name15 = "isNaN";
var dependencies16 = ["typed"];
var createIsNaN = factory(name15, dependencies16, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name15, {
    number: isNaNNumber,
    BigNumber: function BigNumber2(x) {
      return x.isNaN();
    },
    Fraction: function Fraction3(x) {
      return false;
    },
    Complex: function Complex3(x) {
      return x.isNaN();
    },
    Unit: function Unit2(x) {
      return Number.isNaN(x.value);
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/utils/typeOf.js
var name16 = "typeOf";
var dependencies17 = ["typed"];
var createTypeOf = factory(name16, dependencies17, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name16, {
    any: typeOf
  });
});

// node_modules/mathjs/lib/esm/utils/bignumber/nearlyEqual.js
function nearlyEqual2(x, y, epsilon) {
  if (epsilon === null || epsilon === void 0) {
    return x.eq(y);
  }
  if (x.eq(y)) {
    return true;
  }
  if (x.isNaN() || y.isNaN()) {
    return false;
  }
  if (x.isFinite() && y.isFinite()) {
    var diff2 = x.minus(y).abs();
    if (diff2.isZero()) {
      return true;
    } else {
      var max3 = x.constructor.max(x.abs(), y.abs());
      return diff2.lte(max3.times(epsilon));
    }
  }
  return false;
}

// node_modules/mathjs/lib/esm/utils/complex.js
function complexEquals(x, y, epsilon) {
  return nearlyEqual(x.re, y.re, epsilon) && nearlyEqual(x.im, y.im, epsilon);
}

// node_modules/mathjs/lib/esm/function/relational/compareUnits.js
var createCompareUnits = factory("compareUnits", ["typed"], (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return {
    "Unit, Unit": typed2.referToSelf((self2) => (x, y) => {
      if (!x.equalBase(y)) {
        throw new Error("Cannot compare units with different base");
      }
      return typed2.find(self2, [x.valueType(), y.valueType()])(x.value, y.value);
    })
  };
});

// node_modules/mathjs/lib/esm/function/relational/equalScalar.js
var name17 = "equalScalar";
var dependencies18 = ["typed", "config"];
var createEqualScalar = factory(name17, dependencies18, (_ref) => {
  var {
    typed: typed2,
    config: config4
  } = _ref;
  var compareUnits = createCompareUnits({
    typed: typed2
  });
  return typed2(name17, {
    "boolean, boolean": function booleanBoolean(x, y) {
      return x === y;
    },
    "number, number": function numberNumber(x, y) {
      return nearlyEqual(x, y, config4.epsilon);
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return x.eq(y) || nearlyEqual2(x, y, config4.epsilon);
    },
    "Fraction, Fraction": function FractionFraction(x, y) {
      return x.equals(y);
    },
    "Complex, Complex": function ComplexComplex(x, y) {
      return complexEquals(x, y, config4.epsilon);
    }
  }, compareUnits);
});
var createEqualScalarNumber = factory(name17, ["typed", "config"], (_ref2) => {
  var {
    typed: typed2,
    config: config4
  } = _ref2;
  return typed2(name17, {
    "number, number": function numberNumber(x, y) {
      return nearlyEqual(x, y, config4.epsilon);
    }
  });
});

// node_modules/mathjs/lib/esm/type/matrix/SparseMatrix.js
var name18 = "SparseMatrix";
var dependencies19 = ["typed", "equalScalar", "Matrix"];
var createSparseMatrixClass = factory(name18, dependencies19, (_ref) => {
  var {
    typed: typed2,
    equalScalar: equalScalar2,
    Matrix: Matrix2
  } = _ref;
  function SparseMatrix2(data, datatype) {
    if (!(this instanceof SparseMatrix2)) {
      throw new SyntaxError("Constructor must be called with the new operator");
    }
    if (datatype && !isString(datatype)) {
      throw new Error("Invalid datatype: " + datatype);
    }
    if (isMatrix(data)) {
      _createFromMatrix(this, data, datatype);
    } else if (data && isArray(data.index) && isArray(data.ptr) && isArray(data.size)) {
      this._values = data.values;
      this._index = data.index;
      this._ptr = data.ptr;
      this._size = data.size;
      this._datatype = datatype || data.datatype;
    } else if (isArray(data)) {
      _createFromArray(this, data, datatype);
    } else if (data) {
      throw new TypeError("Unsupported type of data (" + typeOf(data) + ")");
    } else {
      this._values = [];
      this._index = [];
      this._ptr = [0];
      this._size = [0, 0];
      this._datatype = datatype;
    }
  }
  function _createFromMatrix(matrix2, source, datatype) {
    if (source.type === "SparseMatrix") {
      matrix2._values = source._values ? clone(source._values) : void 0;
      matrix2._index = clone(source._index);
      matrix2._ptr = clone(source._ptr);
      matrix2._size = clone(source._size);
      matrix2._datatype = datatype || source._datatype;
    } else {
      _createFromArray(matrix2, source.valueOf(), datatype || source._datatype);
    }
  }
  function _createFromArray(matrix2, data, datatype) {
    matrix2._values = [];
    matrix2._index = [];
    matrix2._ptr = [];
    matrix2._datatype = datatype;
    var rows = data.length;
    var columns = 0;
    var eq = equalScalar2;
    var zero = 0;
    if (isString(datatype)) {
      eq = typed2.find(equalScalar2, [datatype, datatype]) || equalScalar2;
      zero = typed2.convert(0, datatype);
    }
    if (rows > 0) {
      var j = 0;
      do {
        matrix2._ptr.push(matrix2._index.length);
        for (var i2 = 0; i2 < rows; i2++) {
          var row2 = data[i2];
          if (isArray(row2)) {
            if (j === 0 && columns < row2.length) {
              columns = row2.length;
            }
            if (j < row2.length) {
              var v = row2[j];
              if (!eq(v, zero)) {
                matrix2._values.push(v);
                matrix2._index.push(i2);
              }
            }
          } else {
            if (j === 0 && columns < 1) {
              columns = 1;
            }
            if (!eq(row2, zero)) {
              matrix2._values.push(row2);
              matrix2._index.push(i2);
            }
          }
        }
        j++;
      } while (j < columns);
    }
    matrix2._ptr.push(matrix2._index.length);
    matrix2._size = [rows, columns];
  }
  SparseMatrix2.prototype = new Matrix2();
  SparseMatrix2.prototype.createSparseMatrix = function(data, datatype) {
    return new SparseMatrix2(data, datatype);
  };
  Object.defineProperty(SparseMatrix2, "name", {
    value: "SparseMatrix"
  });
  SparseMatrix2.prototype.constructor = SparseMatrix2;
  SparseMatrix2.prototype.type = "SparseMatrix";
  SparseMatrix2.prototype.isSparseMatrix = true;
  SparseMatrix2.prototype.getDataType = function() {
    return getArrayDataType(this._values, typeOf);
  };
  SparseMatrix2.prototype.storage = function() {
    return "sparse";
  };
  SparseMatrix2.prototype.datatype = function() {
    return this._datatype;
  };
  SparseMatrix2.prototype.create = function(data, datatype) {
    return new SparseMatrix2(data, datatype);
  };
  SparseMatrix2.prototype.density = function() {
    var rows = this._size[0];
    var columns = this._size[1];
    return rows !== 0 && columns !== 0 ? this._index.length / (rows * columns) : 0;
  };
  SparseMatrix2.prototype.subset = function(index2, replacement, defaultValue) {
    if (!this._values) {
      throw new Error("Cannot invoke subset on a Pattern only matrix");
    }
    switch (arguments.length) {
      case 1:
        return _getsubset(this, index2);
      case 2:
      case 3:
        return _setsubset(this, index2, replacement, defaultValue);
      default:
        throw new SyntaxError("Wrong number of arguments");
    }
  };
  function _getsubset(matrix2, idx) {
    if (!isIndex(idx)) {
      throw new TypeError("Invalid index");
    }
    var isScalar = idx.isScalar();
    if (isScalar) {
      return matrix2.get(idx.min());
    }
    var size2 = idx.size();
    if (size2.length !== matrix2._size.length) {
      throw new DimensionError(size2.length, matrix2._size.length);
    }
    var i2, ii, k, kk;
    var min3 = idx.min();
    var max3 = idx.max();
    for (i2 = 0, ii = matrix2._size.length; i2 < ii; i2++) {
      validateIndex(min3[i2], matrix2._size[i2]);
      validateIndex(max3[i2], matrix2._size[i2]);
    }
    var mvalues = matrix2._values;
    var mindex = matrix2._index;
    var mptr = matrix2._ptr;
    var rows = idx.dimension(0);
    var columns = idx.dimension(1);
    var w = [];
    var pv = [];
    rows.forEach(function(i3, r) {
      pv[i3] = r[0];
      w[i3] = true;
    });
    var values = mvalues ? [] : void 0;
    var index2 = [];
    var ptr = [];
    columns.forEach(function(j) {
      ptr.push(index2.length);
      for (k = mptr[j], kk = mptr[j + 1]; k < kk; k++) {
        i2 = mindex[k];
        if (w[i2] === true) {
          index2.push(pv[i2]);
          if (values) {
            values.push(mvalues[k]);
          }
        }
      }
    });
    ptr.push(index2.length);
    return new SparseMatrix2({
      values,
      index: index2,
      ptr,
      size: size2,
      datatype: matrix2._datatype
    });
  }
  function _setsubset(matrix2, index2, submatrix, defaultValue) {
    if (!index2 || index2.isIndex !== true) {
      throw new TypeError("Invalid index");
    }
    var iSize = index2.size();
    var isScalar = index2.isScalar();
    var sSize;
    if (isMatrix(submatrix)) {
      sSize = submatrix.size();
      submatrix = submatrix.toArray();
    } else {
      sSize = arraySize(submatrix);
    }
    if (isScalar) {
      if (sSize.length !== 0) {
        throw new TypeError("Scalar expected");
      }
      matrix2.set(index2.min(), submatrix, defaultValue);
    } else {
      if (iSize.length !== 1 && iSize.length !== 2) {
        throw new DimensionError(iSize.length, matrix2._size.length, "<");
      }
      if (sSize.length < iSize.length) {
        var i2 = 0;
        var outer = 0;
        while (iSize[i2] === 1 && sSize[i2] === 1) {
          i2++;
        }
        while (iSize[i2] === 1) {
          outer++;
          i2++;
        }
        submatrix = unsqueeze(submatrix, iSize.length, outer, sSize);
      }
      if (!deepStrictEqual(iSize, sSize)) {
        throw new DimensionError(iSize, sSize, ">");
      }
      if (iSize.length === 1) {
        var range3 = index2.dimension(0);
        range3.forEach(function(dataIndex, subIndex) {
          validateIndex(dataIndex);
          matrix2.set([dataIndex, 0], submatrix[subIndex[0]], defaultValue);
        });
      } else {
        var firstDimensionRange = index2.dimension(0);
        var secondDimensionRange = index2.dimension(1);
        firstDimensionRange.forEach(function(firstDataIndex, firstSubIndex) {
          validateIndex(firstDataIndex);
          secondDimensionRange.forEach(function(secondDataIndex, secondSubIndex) {
            validateIndex(secondDataIndex);
            matrix2.set([firstDataIndex, secondDataIndex], submatrix[firstSubIndex[0]][secondSubIndex[0]], defaultValue);
          });
        });
      }
    }
    return matrix2;
  }
  SparseMatrix2.prototype.get = function(index2) {
    if (!isArray(index2)) {
      throw new TypeError("Array expected");
    }
    if (index2.length !== this._size.length) {
      throw new DimensionError(index2.length, this._size.length);
    }
    if (!this._values) {
      throw new Error("Cannot invoke get on a Pattern only matrix");
    }
    var i2 = index2[0];
    var j = index2[1];
    validateIndex(i2, this._size[0]);
    validateIndex(j, this._size[1]);
    var k = _getValueIndex(i2, this._ptr[j], this._ptr[j + 1], this._index);
    if (k < this._ptr[j + 1] && this._index[k] === i2) {
      return this._values[k];
    }
    return 0;
  };
  SparseMatrix2.prototype.set = function(index2, v, defaultValue) {
    if (!isArray(index2)) {
      throw new TypeError("Array expected");
    }
    if (index2.length !== this._size.length) {
      throw new DimensionError(index2.length, this._size.length);
    }
    if (!this._values) {
      throw new Error("Cannot invoke set on a Pattern only matrix");
    }
    var i2 = index2[0];
    var j = index2[1];
    var rows = this._size[0];
    var columns = this._size[1];
    var eq = equalScalar2;
    var zero = 0;
    if (isString(this._datatype)) {
      eq = typed2.find(equalScalar2, [this._datatype, this._datatype]) || equalScalar2;
      zero = typed2.convert(0, this._datatype);
    }
    if (i2 > rows - 1 || j > columns - 1) {
      _resize2(this, Math.max(i2 + 1, rows), Math.max(j + 1, columns), defaultValue);
      rows = this._size[0];
      columns = this._size[1];
    }
    validateIndex(i2, rows);
    validateIndex(j, columns);
    var k = _getValueIndex(i2, this._ptr[j], this._ptr[j + 1], this._index);
    if (k < this._ptr[j + 1] && this._index[k] === i2) {
      if (!eq(v, zero)) {
        this._values[k] = v;
      } else {
        _remove(k, j, this._values, this._index, this._ptr);
      }
    } else {
      if (!eq(v, zero)) {
        _insert(k, i2, j, v, this._values, this._index, this._ptr);
      }
    }
    return this;
  };
  function _getValueIndex(i2, top, bottom, index2) {
    if (bottom - top === 0) {
      return bottom;
    }
    for (var r = top; r < bottom; r++) {
      if (index2[r] === i2) {
        return r;
      }
    }
    return top;
  }
  function _remove(k, j, values, index2, ptr) {
    values.splice(k, 1);
    index2.splice(k, 1);
    for (var x = j + 1; x < ptr.length; x++) {
      ptr[x]--;
    }
  }
  function _insert(k, i2, j, v, values, index2, ptr) {
    values.splice(k, 0, v);
    index2.splice(k, 0, i2);
    for (var x = j + 1; x < ptr.length; x++) {
      ptr[x]++;
    }
  }
  SparseMatrix2.prototype.resize = function(size2, defaultValue, copy) {
    if (!isCollection(size2)) {
      throw new TypeError("Array or Matrix expected");
    }
    var sizeArray = size2.valueOf().map((value) => {
      return Array.isArray(value) && value.length === 1 ? value[0] : value;
    });
    if (sizeArray.length !== 2) {
      throw new Error("Only two dimensions matrix are supported");
    }
    sizeArray.forEach(function(value) {
      if (!isNumber(value) || !isInteger(value) || value < 0) {
        throw new TypeError("Invalid size, must contain positive integers (size: " + format3(sizeArray) + ")");
      }
    });
    var m = copy ? this.clone() : this;
    return _resize2(m, sizeArray[0], sizeArray[1], defaultValue);
  };
  function _resize2(matrix2, rows, columns, defaultValue) {
    var value = defaultValue || 0;
    var eq = equalScalar2;
    var zero = 0;
    if (isString(matrix2._datatype)) {
      eq = typed2.find(equalScalar2, [matrix2._datatype, matrix2._datatype]) || equalScalar2;
      zero = typed2.convert(0, matrix2._datatype);
      value = typed2.convert(value, matrix2._datatype);
    }
    var ins = !eq(value, zero);
    var r = matrix2._size[0];
    var c = matrix2._size[1];
    var i2, j, k;
    if (columns > c) {
      for (j = c; j < columns; j++) {
        matrix2._ptr[j] = matrix2._values.length;
        if (ins) {
          for (i2 = 0; i2 < r; i2++) {
            matrix2._values.push(value);
            matrix2._index.push(i2);
          }
        }
      }
      matrix2._ptr[columns] = matrix2._values.length;
    } else if (columns < c) {
      matrix2._ptr.splice(columns + 1, c - columns);
      matrix2._values.splice(matrix2._ptr[columns], matrix2._values.length);
      matrix2._index.splice(matrix2._ptr[columns], matrix2._index.length);
    }
    c = columns;
    if (rows > r) {
      if (ins) {
        var n = 0;
        for (j = 0; j < c; j++) {
          matrix2._ptr[j] = matrix2._ptr[j] + n;
          k = matrix2._ptr[j + 1] + n;
          var p = 0;
          for (i2 = r; i2 < rows; i2++, p++) {
            matrix2._values.splice(k + p, 0, value);
            matrix2._index.splice(k + p, 0, i2);
            n++;
          }
        }
        matrix2._ptr[c] = matrix2._values.length;
      }
    } else if (rows < r) {
      var d2 = 0;
      for (j = 0; j < c; j++) {
        matrix2._ptr[j] = matrix2._ptr[j] - d2;
        var k0 = matrix2._ptr[j];
        var k1 = matrix2._ptr[j + 1] - d2;
        for (k = k0; k < k1; k++) {
          i2 = matrix2._index[k];
          if (i2 > rows - 1) {
            matrix2._values.splice(k, 1);
            matrix2._index.splice(k, 1);
            d2++;
          }
        }
      }
      matrix2._ptr[j] = matrix2._values.length;
    }
    matrix2._size[0] = rows;
    matrix2._size[1] = columns;
    return matrix2;
  }
  SparseMatrix2.prototype.reshape = function(sizes, copy) {
    if (!isArray(sizes)) {
      throw new TypeError("Array expected");
    }
    if (sizes.length !== 2) {
      throw new Error("Sparse matrices can only be reshaped in two dimensions");
    }
    sizes.forEach(function(value) {
      if (!isNumber(value) || !isInteger(value) || value <= -2 || value === 0) {
        throw new TypeError("Invalid size, must contain positive integers or -1 (size: " + format3(sizes) + ")");
      }
    });
    var currentLength = this._size[0] * this._size[1];
    sizes = processSizesWildcard(sizes, currentLength);
    var newLength = sizes[0] * sizes[1];
    if (currentLength !== newLength) {
      throw new Error("Reshaping sparse matrix will result in the wrong number of elements");
    }
    var m = copy ? this.clone() : this;
    if (this._size[0] === sizes[0] && this._size[1] === sizes[1]) {
      return m;
    }
    var colIndex = [];
    for (var i2 = 0; i2 < m._ptr.length; i2++) {
      for (var j = 0; j < m._ptr[i2 + 1] - m._ptr[i2]; j++) {
        colIndex.push(i2);
      }
    }
    var values = m._values.slice();
    var rowIndex = m._index.slice();
    for (var _i = 0; _i < m._index.length; _i++) {
      var r1 = rowIndex[_i];
      var c1 = colIndex[_i];
      var flat = r1 * m._size[1] + c1;
      colIndex[_i] = flat % sizes[1];
      rowIndex[_i] = Math.floor(flat / sizes[1]);
    }
    m._values.length = 0;
    m._index.length = 0;
    m._ptr.length = sizes[1] + 1;
    m._size = sizes.slice();
    for (var _i2 = 0; _i2 < m._ptr.length; _i2++) {
      m._ptr[_i2] = 0;
    }
    for (var h = 0; h < values.length; h++) {
      var _i3 = rowIndex[h];
      var _j = colIndex[h];
      var v = values[h];
      var k = _getValueIndex(_i3, m._ptr[_j], m._ptr[_j + 1], m._index);
      _insert(k, _i3, _j, v, m._values, m._index, m._ptr);
    }
    return m;
  };
  SparseMatrix2.prototype.clone = function() {
    var m = new SparseMatrix2({
      values: this._values ? clone(this._values) : void 0,
      index: clone(this._index),
      ptr: clone(this._ptr),
      size: clone(this._size),
      datatype: this._datatype
    });
    return m;
  };
  SparseMatrix2.prototype.size = function() {
    return this._size.slice(0);
  };
  SparseMatrix2.prototype.map = function(callback, skipZeros) {
    if (!this._values) {
      throw new Error("Cannot invoke map on a Pattern only matrix");
    }
    var me = this;
    var rows = this._size[0];
    var columns = this._size[1];
    var args = maxArgumentCount(callback);
    var invoke = function invoke2(v, i2, j) {
      if (args === 1) return callback(v);
      if (args === 2) return callback(v, [i2, j]);
      return callback(v, [i2, j], me);
    };
    return _map3(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros);
  };
  function _map3(matrix2, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {
    var values = [];
    var index2 = [];
    var ptr = [];
    var eq = equalScalar2;
    var zero = 0;
    if (isString(matrix2._datatype)) {
      eq = typed2.find(equalScalar2, [matrix2._datatype, matrix2._datatype]) || equalScalar2;
      zero = typed2.convert(0, matrix2._datatype);
    }
    var invoke = function invoke2(v, x, y) {
      v = callback(v, x, y);
      if (!eq(v, zero)) {
        values.push(v);
        index2.push(x);
      }
    };
    for (var j = minColumn; j <= maxColumn; j++) {
      ptr.push(values.length);
      var k0 = matrix2._ptr[j];
      var k1 = matrix2._ptr[j + 1];
      if (skipZeros) {
        for (var k = k0; k < k1; k++) {
          var i2 = matrix2._index[k];
          if (i2 >= minRow && i2 <= maxRow) {
            invoke(matrix2._values[k], i2 - minRow, j - minColumn);
          }
        }
      } else {
        var _values = {};
        for (var _k = k0; _k < k1; _k++) {
          var _i4 = matrix2._index[_k];
          _values[_i4] = matrix2._values[_k];
        }
        for (var _i5 = minRow; _i5 <= maxRow; _i5++) {
          var value = _i5 in _values ? _values[_i5] : 0;
          invoke(value, _i5 - minRow, j - minColumn);
        }
      }
    }
    ptr.push(values.length);
    return new SparseMatrix2({
      values,
      index: index2,
      ptr,
      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]
    });
  }
  SparseMatrix2.prototype.forEach = function(callback, skipZeros) {
    if (!this._values) {
      throw new Error("Cannot invoke forEach on a Pattern only matrix");
    }
    var me = this;
    var rows = this._size[0];
    var columns = this._size[1];
    for (var j = 0; j < columns; j++) {
      var k0 = this._ptr[j];
      var k1 = this._ptr[j + 1];
      if (skipZeros) {
        for (var k = k0; k < k1; k++) {
          var i2 = this._index[k];
          callback(this._values[k], [i2, j], me);
        }
      } else {
        var values = {};
        for (var _k2 = k0; _k2 < k1; _k2++) {
          var _i6 = this._index[_k2];
          values[_i6] = this._values[_k2];
        }
        for (var _i7 = 0; _i7 < rows; _i7++) {
          var value = _i7 in values ? values[_i7] : 0;
          callback(value, [_i7, j], me);
        }
      }
    }
  };
  SparseMatrix2.prototype[Symbol.iterator] = function* () {
    if (!this._values) {
      throw new Error("Cannot iterate a Pattern only matrix");
    }
    var columns = this._size[1];
    for (var j = 0; j < columns; j++) {
      var k0 = this._ptr[j];
      var k1 = this._ptr[j + 1];
      for (var k = k0; k < k1; k++) {
        var i2 = this._index[k];
        yield {
          value: this._values[k],
          index: [i2, j]
        };
      }
    }
  };
  SparseMatrix2.prototype.toArray = function() {
    return _toArray(this._values, this._index, this._ptr, this._size, true);
  };
  SparseMatrix2.prototype.valueOf = function() {
    return _toArray(this._values, this._index, this._ptr, this._size, false);
  };
  function _toArray(values, index2, ptr, size2, copy) {
    var rows = size2[0];
    var columns = size2[1];
    var a = [];
    var i2, j;
    for (i2 = 0; i2 < rows; i2++) {
      a[i2] = [];
      for (j = 0; j < columns; j++) {
        a[i2][j] = 0;
      }
    }
    for (j = 0; j < columns; j++) {
      var k0 = ptr[j];
      var k1 = ptr[j + 1];
      for (var k = k0; k < k1; k++) {
        i2 = index2[k];
        a[i2][j] = values ? copy ? clone(values[k]) : values[k] : 1;
      }
    }
    return a;
  }
  SparseMatrix2.prototype.format = function(options) {
    var rows = this._size[0];
    var columns = this._size[1];
    var density = this.density();
    var str = "Sparse Matrix [" + format3(rows, options) + " x " + format3(columns, options) + "] density: " + format3(density, options) + "\n";
    for (var j = 0; j < columns; j++) {
      var k0 = this._ptr[j];
      var k1 = this._ptr[j + 1];
      for (var k = k0; k < k1; k++) {
        var i2 = this._index[k];
        str += "\n    (" + format3(i2, options) + ", " + format3(j, options) + ") ==> " + (this._values ? format3(this._values[k], options) : "X");
      }
    }
    return str;
  };
  SparseMatrix2.prototype.toString = function() {
    return format3(this.toArray());
  };
  SparseMatrix2.prototype.toJSON = function() {
    return {
      mathjs: "SparseMatrix",
      values: this._values,
      index: this._index,
      ptr: this._ptr,
      size: this._size,
      datatype: this._datatype
    };
  };
  SparseMatrix2.prototype.diagonal = function(k) {
    if (k) {
      if (isBigNumber(k)) {
        k = k.toNumber();
      }
      if (!isNumber(k) || !isInteger(k)) {
        throw new TypeError("The parameter k must be an integer number");
      }
    } else {
      k = 0;
    }
    var kSuper = k > 0 ? k : 0;
    var kSub = k < 0 ? -k : 0;
    var rows = this._size[0];
    var columns = this._size[1];
    var n = Math.min(rows - kSub, columns - kSuper);
    var values = [];
    var index2 = [];
    var ptr = [];
    ptr[0] = 0;
    for (var j = kSuper; j < columns && values.length < n; j++) {
      var k0 = this._ptr[j];
      var k1 = this._ptr[j + 1];
      for (var x = k0; x < k1; x++) {
        var i2 = this._index[x];
        if (i2 === j - kSuper + kSub) {
          values.push(this._values[x]);
          index2[values.length - 1] = i2 - kSub;
          break;
        }
      }
    }
    ptr.push(values.length);
    return new SparseMatrix2({
      values,
      index: index2,
      ptr,
      size: [n, 1]
    });
  };
  SparseMatrix2.fromJSON = function(json) {
    return new SparseMatrix2(json);
  };
  SparseMatrix2.diagonal = function(size2, value, k, defaultValue, datatype) {
    if (!isArray(size2)) {
      throw new TypeError("Array expected, size parameter");
    }
    if (size2.length !== 2) {
      throw new Error("Only two dimensions matrix are supported");
    }
    size2 = size2.map(function(s) {
      if (isBigNumber(s)) {
        s = s.toNumber();
      }
      if (!isNumber(s) || !isInteger(s) || s < 1) {
        throw new Error("Size values must be positive integers");
      }
      return s;
    });
    if (k) {
      if (isBigNumber(k)) {
        k = k.toNumber();
      }
      if (!isNumber(k) || !isInteger(k)) {
        throw new TypeError("The parameter k must be an integer number");
      }
    } else {
      k = 0;
    }
    var eq = equalScalar2;
    var zero = 0;
    if (isString(datatype)) {
      eq = typed2.find(equalScalar2, [datatype, datatype]) || equalScalar2;
      zero = typed2.convert(0, datatype);
    }
    var kSuper = k > 0 ? k : 0;
    var kSub = k < 0 ? -k : 0;
    var rows = size2[0];
    var columns = size2[1];
    var n = Math.min(rows - kSub, columns - kSuper);
    var _value;
    if (isArray(value)) {
      if (value.length !== n) {
        throw new Error("Invalid value array length");
      }
      _value = function _value2(i3) {
        return value[i3];
      };
    } else if (isMatrix(value)) {
      var ms = value.size();
      if (ms.length !== 1 || ms[0] !== n) {
        throw new Error("Invalid matrix length");
      }
      _value = function _value2(i3) {
        return value.get([i3]);
      };
    } else {
      _value = function _value2() {
        return value;
      };
    }
    var values = [];
    var index2 = [];
    var ptr = [];
    for (var j = 0; j < columns; j++) {
      ptr.push(values.length);
      var i2 = j - kSuper;
      if (i2 >= 0 && i2 < n) {
        var v = _value(i2);
        if (!eq(v, zero)) {
          index2.push(i2 + kSub);
          values.push(v);
        }
      }
    }
    ptr.push(values.length);
    return new SparseMatrix2({
      values,
      index: index2,
      ptr,
      size: [rows, columns]
    });
  };
  SparseMatrix2.prototype.swapRows = function(i2, j) {
    if (!isNumber(i2) || !isInteger(i2) || !isNumber(j) || !isInteger(j)) {
      throw new Error("Row index must be positive integers");
    }
    if (this._size.length !== 2) {
      throw new Error("Only two dimensional matrix is supported");
    }
    validateIndex(i2, this._size[0]);
    validateIndex(j, this._size[0]);
    SparseMatrix2._swapRows(i2, j, this._size[1], this._values, this._index, this._ptr);
    return this;
  };
  SparseMatrix2._forEachRow = function(j, values, index2, ptr, callback) {
    var k0 = ptr[j];
    var k1 = ptr[j + 1];
    for (var k = k0; k < k1; k++) {
      callback(index2[k], values[k]);
    }
  };
  SparseMatrix2._swapRows = function(x, y, columns, values, index2, ptr) {
    for (var j = 0; j < columns; j++) {
      var k0 = ptr[j];
      var k1 = ptr[j + 1];
      var kx = _getValueIndex(x, k0, k1, index2);
      var ky = _getValueIndex(y, k0, k1, index2);
      if (kx < k1 && ky < k1 && index2[kx] === x && index2[ky] === y) {
        if (values) {
          var v = values[kx];
          values[kx] = values[ky];
          values[ky] = v;
        }
        continue;
      }
      if (kx < k1 && index2[kx] === x && (ky >= k1 || index2[ky] !== y)) {
        var vx = values ? values[kx] : void 0;
        index2.splice(ky, 0, y);
        if (values) {
          values.splice(ky, 0, vx);
        }
        index2.splice(ky <= kx ? kx + 1 : kx, 1);
        if (values) {
          values.splice(ky <= kx ? kx + 1 : kx, 1);
        }
        continue;
      }
      if (ky < k1 && index2[ky] === y && (kx >= k1 || index2[kx] !== x)) {
        var vy = values ? values[ky] : void 0;
        index2.splice(kx, 0, x);
        if (values) {
          values.splice(kx, 0, vy);
        }
        index2.splice(kx <= ky ? ky + 1 : ky, 1);
        if (values) {
          values.splice(kx <= ky ? ky + 1 : ky, 1);
        }
      }
    }
  };
  return SparseMatrix2;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/type/number.js
var name19 = "number";
var dependencies20 = ["typed"];
function getNonDecimalNumberParts(input) {
  var nonDecimalWithRadixMatch = input.match(/(0[box])([0-9a-fA-F]*)\.([0-9a-fA-F]*)/);
  if (nonDecimalWithRadixMatch) {
    var radix = {
      "0b": 2,
      "0o": 8,
      "0x": 16
    }[nonDecimalWithRadixMatch[1]];
    var integerPart = nonDecimalWithRadixMatch[2];
    var fractionalPart = nonDecimalWithRadixMatch[3];
    return {
      input,
      radix,
      integerPart,
      fractionalPart
    };
  } else {
    return null;
  }
}
function makeNumberFromNonDecimalParts(parts) {
  var n = parseInt(parts.integerPart, parts.radix);
  var f = 0;
  for (var i2 = 0; i2 < parts.fractionalPart.length; i2++) {
    var digitValue = parseInt(parts.fractionalPart[i2], parts.radix);
    f += digitValue / Math.pow(parts.radix, i2 + 1);
  }
  var result = n + f;
  if (isNaN(result)) {
    throw new SyntaxError('String "' + parts.input + '" is not a valid number');
  }
  return result;
}
var createNumber = factory(name19, dependencies20, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  var number2 = typed2("number", {
    "": function _() {
      return 0;
    },
    number: function number3(x) {
      return x;
    },
    string: function string2(x) {
      if (x === "NaN") return NaN;
      var nonDecimalNumberParts = getNonDecimalNumberParts(x);
      if (nonDecimalNumberParts) {
        return makeNumberFromNonDecimalParts(nonDecimalNumberParts);
      }
      var size2 = 0;
      var wordSizeSuffixMatch = x.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);
      if (wordSizeSuffixMatch) {
        size2 = Number(wordSizeSuffixMatch[2]);
        x = wordSizeSuffixMatch[1];
      }
      var num = Number(x);
      if (isNaN(num)) {
        throw new SyntaxError('String "' + x + '" is not a valid number');
      }
      if (wordSizeSuffixMatch) {
        if (num > 2 ** size2 - 1) {
          throw new SyntaxError('String "'.concat(x, '" is out of range'));
        }
        if (num >= 2 ** (size2 - 1)) {
          num = num - 2 ** size2;
        }
      }
      return num;
    },
    BigNumber: function BigNumber2(x) {
      return x.toNumber();
    },
    Fraction: function Fraction3(x) {
      return x.valueOf();
    },
    Unit: typed2.referToSelf((self2) => (x) => {
      var clone5 = x.clone();
      clone5.value = self2(x.value);
      return clone5;
    }),
    null: function _null2(x) {
      return 0;
    },
    "Unit, string | Unit": function UnitStringUnit(unit2, valuelessUnit) {
      return unit2.toNumber(valuelessUnit);
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
  number2.fromJSON = function(json) {
    return parseFloat(json.value);
  };
  return number2;
});

// node_modules/mathjs/lib/esm/type/string.js
var name20 = "string";
var dependencies21 = ["typed"];
var createString = factory(name20, dependencies21, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name20, {
    "": function _() {
      return "";
    },
    number: format,
    null: function _null2(x) {
      return "null";
    },
    boolean: function boolean2(x) {
      return x + "";
    },
    string: function string2(x) {
      return x;
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2)),
    any: function any(x) {
      return String(x);
    }
  });
});

// node_modules/mathjs/lib/esm/type/boolean.js
var name21 = "boolean";
var dependencies22 = ["typed"];
var createBoolean = factory(name21, dependencies22, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name21, {
    "": function _() {
      return false;
    },
    boolean: function boolean2(x) {
      return x;
    },
    number: function number2(x) {
      return !!x;
    },
    null: function _null2(x) {
      return false;
    },
    BigNumber: function BigNumber2(x) {
      return !x.isZero();
    },
    string: function string2(x) {
      var lcase = x.toLowerCase();
      if (lcase === "true") {
        return true;
      } else if (lcase === "false") {
        return false;
      }
      var num = Number(x);
      if (x !== "" && !isNaN(num)) {
        return !!num;
      }
      throw new Error('Cannot convert "' + x + '" to a boolean');
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/type/bignumber/function/bignumber.js
var name22 = "bignumber";
var dependencies23 = ["typed", "BigNumber"];
var createBignumber = factory(name22, dependencies23, (_ref) => {
  var {
    typed: typed2,
    BigNumber: BigNumber2
  } = _ref;
  return typed2("bignumber", {
    "": function _() {
      return new BigNumber2(0);
    },
    number: function number2(x) {
      return new BigNumber2(x + "");
    },
    string: function string2(x) {
      var wordSizeSuffixMatch = x.match(/(0[box][0-9a-fA-F]*)i([0-9]*)/);
      if (wordSizeSuffixMatch) {
        var size2 = wordSizeSuffixMatch[2];
        var n = BigNumber2(wordSizeSuffixMatch[1]);
        var twoPowSize = new BigNumber2(2).pow(Number(size2));
        if (n.gt(twoPowSize.sub(1))) {
          throw new SyntaxError('String "'.concat(x, '" is out of range'));
        }
        var twoPowSizeSubOne = new BigNumber2(2).pow(Number(size2) - 1);
        if (n.gte(twoPowSizeSubOne)) {
          return n.sub(twoPowSize);
        } else {
          return n;
        }
      }
      return new BigNumber2(x);
    },
    BigNumber: function BigNumber3(x) {
      return x;
    },
    Unit: typed2.referToSelf((self2) => (x) => {
      var clone5 = x.clone();
      clone5.value = self2(x.value);
      return clone5;
    }),
    Fraction: function Fraction3(x) {
      return new BigNumber2(x.n).div(x.d).times(x.s);
    },
    null: function _null2(x) {
      return new BigNumber2(0);
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/type/complex/function/complex.js
var name23 = "complex";
var dependencies24 = ["typed", "Complex"];
var createComplex = factory(name23, dependencies24, (_ref) => {
  var {
    typed: typed2,
    Complex: Complex3
  } = _ref;
  return typed2("complex", {
    "": function _() {
      return Complex3.ZERO;
    },
    number: function number2(x) {
      return new Complex3(x, 0);
    },
    "number, number": function numberNumber(re2, im2) {
      return new Complex3(re2, im2);
    },
    // TODO: this signature should be redundant
    "BigNumber, BigNumber": function BigNumberBigNumber(re2, im2) {
      return new Complex3(re2.toNumber(), im2.toNumber());
    },
    Fraction: function Fraction3(x) {
      return new Complex3(x.valueOf(), 0);
    },
    Complex: function Complex4(x) {
      return x.clone();
    },
    string: function string2(x) {
      return Complex3(x);
    },
    null: function _null2(x) {
      return Complex3(0);
    },
    Object: function Object2(x) {
      if ("re" in x && "im" in x) {
        return new Complex3(x.re, x.im);
      }
      if ("r" in x && "phi" in x || "abs" in x && "arg" in x) {
        return new Complex3(x);
      }
      throw new Error("Expected object with properties (re and im) or (r and phi) or (abs and arg)");
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/type/fraction/function/fraction.js
var name24 = "fraction";
var dependencies25 = ["typed", "Fraction"];
var createFraction = factory(name24, dependencies25, (_ref) => {
  var {
    typed: typed2,
    Fraction: Fraction3
  } = _ref;
  return typed2("fraction", {
    number: function number2(x) {
      if (!isFinite(x) || isNaN(x)) {
        throw new Error(x + " cannot be represented as a fraction");
      }
      return new Fraction3(x);
    },
    string: function string2(x) {
      return new Fraction3(x);
    },
    "number, number": function numberNumber(numerator, denominator) {
      return new Fraction3(numerator, denominator);
    },
    null: function _null2(x) {
      return new Fraction3(0);
    },
    BigNumber: function BigNumber2(x) {
      return new Fraction3(x.toString());
    },
    Fraction: function Fraction4(x) {
      return x;
    },
    Unit: typed2.referToSelf((self2) => (x) => {
      var clone5 = x.clone();
      clone5.value = self2(x.value);
      return clone5;
    }),
    Object: function Object2(x) {
      return new Fraction3(x);
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/type/matrix/function/matrix.js
var name25 = "matrix";
var dependencies26 = ["typed", "Matrix", "DenseMatrix", "SparseMatrix"];
var createMatrix = factory(name25, dependencies26, (_ref) => {
  var {
    typed: typed2,
    Matrix: Matrix2,
    DenseMatrix: DenseMatrix2,
    SparseMatrix: SparseMatrix2
  } = _ref;
  return typed2(name25, {
    "": function _() {
      return _create([]);
    },
    string: function string2(format5) {
      return _create([], format5);
    },
    "string, string": function stringString(format5, datatype) {
      return _create([], format5, datatype);
    },
    Array: function Array2(data) {
      return _create(data);
    },
    Matrix: function Matrix3(data) {
      return _create(data, data.storage());
    },
    "Array | Matrix, string": _create,
    "Array | Matrix, string, string": _create
  });
  function _create(data, format5, datatype) {
    if (format5 === "dense" || format5 === "default" || format5 === void 0) {
      return new DenseMatrix2(data, datatype);
    }
    if (format5 === "sparse") {
      return new SparseMatrix2(data, datatype);
    }
    throw new TypeError("Unknown matrix type " + JSON.stringify(format5) + ".");
  }
});

// node_modules/mathjs/lib/esm/function/matrix/matrixFromFunction.js
var name26 = "matrixFromFunction";
var dependencies27 = ["typed", "matrix", "isZero"];
var createMatrixFromFunction = factory(name26, dependencies27, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    isZero: isZero2
  } = _ref;
  return typed2(name26, {
    "Array | Matrix, function, string, string": function ArrayMatrixFunctionStringString(size2, fn, format5, datatype) {
      return _create(size2, fn, format5, datatype);
    },
    "Array | Matrix, function, string": function ArrayMatrixFunctionString(size2, fn, format5) {
      return _create(size2, fn, format5);
    },
    "Matrix, function": function MatrixFunction(size2, fn) {
      return _create(size2, fn, "dense");
    },
    "Array, function": function ArrayFunction(size2, fn) {
      return _create(size2, fn, "dense").toArray();
    },
    "Array | Matrix, string, function": function ArrayMatrixStringFunction(size2, format5, fn) {
      return _create(size2, fn, format5);
    },
    "Array | Matrix, string, string, function": function ArrayMatrixStringStringFunction(size2, format5, datatype, fn) {
      return _create(size2, fn, format5, datatype);
    }
  });
  function _create(size2, fn, format5, datatype) {
    var m;
    if (datatype !== void 0) {
      m = matrix2(format5, datatype);
    } else {
      m = matrix2(format5);
    }
    m.resize(size2);
    m.forEach(function(_, index2) {
      var val = fn(index2);
      if (isZero2(val)) return;
      m.set(index2, val);
    });
    return m;
  }
});

// node_modules/mathjs/lib/esm/function/matrix/matrixFromRows.js
var name27 = "matrixFromRows";
var dependencies28 = ["typed", "matrix", "flatten", "size"];
var createMatrixFromRows = factory(name27, dependencies28, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    flatten: flatten3,
    size: size2
  } = _ref;
  return typed2(name27, {
    "...Array": function Array2(arr) {
      return _createArray(arr);
    },
    "...Matrix": function Matrix2(arr) {
      return matrix2(_createArray(arr.map((m) => m.toArray())));
    }
    // TODO implement this properly for SparseMatrix
  });
  function _createArray(arr) {
    if (arr.length === 0) throw new TypeError("At least one row is needed to construct a matrix.");
    var N = checkVectorTypeAndReturnLength(arr[0]);
    var result = [];
    for (var row2 of arr) {
      var rowLength = checkVectorTypeAndReturnLength(row2);
      if (rowLength !== N) {
        throw new TypeError("The vectors had different length: " + (N | 0) + " ≠ " + (rowLength | 0));
      }
      result.push(flatten3(row2));
    }
    return result;
  }
  function checkVectorTypeAndReturnLength(vec) {
    var s = size2(vec);
    if (s.length === 1) {
      return s[0];
    } else if (s.length === 2) {
      if (s[0] === 1) {
        return s[1];
      } else if (s[1] === 1) {
        return s[0];
      } else {
        throw new TypeError("At least one of the arguments is not a vector.");
      }
    } else {
      throw new TypeError("Only one- or two-dimensional vectors are supported.");
    }
  }
});

// node_modules/mathjs/lib/esm/function/matrix/matrixFromColumns.js
var name28 = "matrixFromColumns";
var dependencies29 = ["typed", "matrix", "flatten", "size"];
var createMatrixFromColumns = factory(name28, dependencies29, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    flatten: flatten3,
    size: size2
  } = _ref;
  return typed2(name28, {
    "...Array": function Array2(arr) {
      return _createArray(arr);
    },
    "...Matrix": function Matrix2(arr) {
      return matrix2(_createArray(arr.map((m) => m.toArray())));
    }
    // TODO implement this properly for SparseMatrix
  });
  function _createArray(arr) {
    if (arr.length === 0) throw new TypeError("At least one column is needed to construct a matrix.");
    var N = checkVectorTypeAndReturnLength(arr[0]);
    var result = [];
    for (var i2 = 0; i2 < N; i2++) {
      result[i2] = [];
    }
    for (var col of arr) {
      var colLength = checkVectorTypeAndReturnLength(col);
      if (colLength !== N) {
        throw new TypeError("The vectors had different length: " + (N | 0) + " ≠ " + (colLength | 0));
      }
      var f = flatten3(col);
      for (var _i = 0; _i < N; _i++) {
        result[_i].push(f[_i]);
      }
    }
    return result;
  }
  function checkVectorTypeAndReturnLength(vec) {
    var s = size2(vec);
    if (s.length === 1) {
      return s[0];
    } else if (s.length === 2) {
      if (s[0] === 1) {
        return s[1];
      } else if (s[1] === 1) {
        return s[0];
      } else {
        throw new TypeError("At least one of the arguments is not a vector.");
      }
    } else {
      throw new TypeError("Only one- or two-dimensional vectors are supported.");
    }
  }
});

// node_modules/mathjs/lib/esm/type/unit/function/splitUnit.js
var name29 = "splitUnit";
var dependencies30 = ["typed"];
var createSplitUnit = factory(name29, dependencies30, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name29, {
    "Unit, Array": function UnitArray(unit2, parts) {
      return unit2.splitUnit(parts);
    }
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/unaryMinus.js
var name30 = "unaryMinus";
var dependencies31 = ["typed"];
var createUnaryMinus = factory(name30, dependencies31, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name30, {
    number: unaryMinusNumber,
    "Complex | BigNumber | Fraction": (x) => x.neg(),
    Unit: typed2.referToSelf((self2) => (x) => {
      var res = x.clone();
      res.value = typed2.find(self2, res.valueType())(x.value);
      return res;
    }),
    // deep map collection, skip zeros since unaryMinus(0) = 0
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2, true))
    // TODO: add support for string
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/unaryPlus.js
var name31 = "unaryPlus";
var dependencies32 = ["typed", "config", "BigNumber"];
var createUnaryPlus = factory(name31, dependencies32, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    BigNumber: BigNumber2
  } = _ref;
  return typed2(name31, {
    number: unaryPlusNumber,
    Complex: function Complex3(x) {
      return x;
    },
    BigNumber: function BigNumber3(x) {
      return x;
    },
    Fraction: function Fraction3(x) {
      return x;
    },
    Unit: function Unit2(x) {
      return x.clone();
    },
    // deep map collection, skip zeros since unaryPlus(0) = 0
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2, true)),
    "boolean | string": function booleanString(x) {
      return config4.number === "BigNumber" ? new BigNumber2(+x) : +x;
    }
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/abs.js
var name32 = "abs";
var dependencies33 = ["typed"];
var createAbs = factory(name32, dependencies33, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name32, {
    number: absNumber,
    "Complex | BigNumber | Fraction | Unit": (x) => x.abs(),
    // deep map collection, skip zeros since abs(0) = 0
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2, true))
  });
});

// node_modules/mathjs/lib/esm/function/matrix/apply.js
var name33 = "apply";
var dependencies34 = ["typed", "isInteger"];
var createApply = factory(name33, dependencies34, (_ref) => {
  var {
    typed: typed2,
    isInteger: isInteger3
  } = _ref;
  return typed2(name33, {
    "Array | Matrix, number | BigNumber, function": function ArrayMatrixNumberBigNumberFunction(mat, dim, callback) {
      if (!isInteger3(dim)) {
        throw new TypeError("Integer number expected for dimension");
      }
      var size2 = Array.isArray(mat) ? arraySize(mat) : mat.size();
      if (dim < 0 || dim >= size2.length) {
        throw new IndexError(dim, size2.length);
      }
      if (isMatrix(mat)) {
        return mat.create(_apply(mat.valueOf(), dim, callback));
      } else {
        return _apply(mat, dim, callback);
      }
    }
  });
});
function _apply(mat, dim, callback) {
  var i2, ret, tran;
  if (dim <= 0) {
    if (!Array.isArray(mat[0])) {
      return callback(mat);
    } else {
      tran = _switch2(mat);
      ret = [];
      for (i2 = 0; i2 < tran.length; i2++) {
        ret[i2] = _apply(tran[i2], dim - 1, callback);
      }
      return ret;
    }
  } else {
    ret = [];
    for (i2 = 0; i2 < mat.length; i2++) {
      ret[i2] = _apply(mat[i2], dim - 1, callback);
    }
    return ret;
  }
}
function _switch2(mat) {
  var I = mat.length;
  var J = mat[0].length;
  var i2, j;
  var ret = [];
  for (j = 0; j < J; j++) {
    var tmp = [];
    for (i2 = 0; i2 < I; i2++) {
      tmp.push(mat[i2][j]);
    }
    ret.push(tmp);
  }
  return ret;
}

// node_modules/mathjs/lib/esm/function/arithmetic/addScalar.js
var name34 = "addScalar";
var dependencies35 = ["typed"];
var createAddScalar = factory(name34, dependencies35, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name34, {
    "number, number": addNumber,
    "Complex, Complex": function ComplexComplex(x, y) {
      return x.add(y);
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return x.plus(y);
    },
    "Fraction, Fraction": function FractionFraction(x, y) {
      return x.add(y);
    },
    "Unit, Unit": typed2.referToSelf((self2) => (x, y) => {
      if (x.value === null || x.value === void 0) {
        throw new Error("Parameter x contains a unit with undefined value");
      }
      if (y.value === null || y.value === void 0) {
        throw new Error("Parameter y contains a unit with undefined value");
      }
      if (!x.equalBase(y)) throw new Error("Units do not match");
      var res = x.clone();
      res.value = typed2.find(self2, [res.valueType(), y.valueType()])(res.value, y.value);
      res.fixPrefix = false;
      return res;
    })
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/subtractScalar.js
var name35 = "subtractScalar";
var dependencies36 = ["typed"];
var createSubtractScalar = factory(name35, dependencies36, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name35, {
    "number, number": subtractNumber,
    "Complex, Complex": function ComplexComplex(x, y) {
      return x.sub(y);
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return x.minus(y);
    },
    "Fraction, Fraction": function FractionFraction(x, y) {
      return x.sub(y);
    },
    "Unit, Unit": typed2.referToSelf((self2) => (x, y) => {
      if (x.value === null || x.value === void 0) {
        throw new Error("Parameter x contains a unit with undefined value");
      }
      if (y.value === null || y.value === void 0) {
        throw new Error("Parameter y contains a unit with undefined value");
      }
      if (!x.equalBase(y)) throw new Error("Units do not match");
      var res = x.clone();
      res.value = typed2.find(self2, [res.valueType(), y.valueType()])(res.value, y.value);
      res.fixPrefix = false;
      return res;
    })
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/cbrt.js
var name36 = "cbrt";
var dependencies37 = ["config", "typed", "isNegative", "unaryMinus", "matrix", "Complex", "BigNumber", "Fraction"];
var createCbrt = factory(name36, dependencies37, (_ref) => {
  var {
    config: config4,
    typed: typed2,
    isNegative: isNegative2,
    unaryMinus: unaryMinus2,
    matrix: matrix2,
    Complex: Complex3,
    BigNumber: BigNumber2,
    Fraction: Fraction3
  } = _ref;
  return typed2(name36, {
    number: cbrtNumber,
    // note: signature 'number, boolean' is also supported,
    //       created by typed as it knows how to convert number to Complex
    Complex: _cbrtComplex,
    "Complex, boolean": _cbrtComplex,
    BigNumber: function BigNumber3(x) {
      return x.cbrt();
    },
    Unit: _cbrtUnit
  });
  function _cbrtComplex(x, allRoots) {
    var arg3 = x.arg() / 3;
    var abs3 = x.abs();
    var principal = new Complex3(cbrtNumber(abs3), 0).mul(new Complex3(0, arg3).exp());
    if (allRoots) {
      var all2 = [principal, new Complex3(cbrtNumber(abs3), 0).mul(new Complex3(0, arg3 + Math.PI * 2 / 3).exp()), new Complex3(cbrtNumber(abs3), 0).mul(new Complex3(0, arg3 - Math.PI * 2 / 3).exp())];
      return config4.matrix === "Array" ? all2 : matrix2(all2);
    } else {
      return principal;
    }
  }
  function _cbrtUnit(x) {
    if (x.value && isComplex(x.value)) {
      var result = x.clone();
      result.value = 1;
      result = result.pow(1 / 3);
      result.value = _cbrtComplex(x.value);
      return result;
    } else {
      var negate = isNegative2(x.value);
      if (negate) {
        x.value = unaryMinus2(x.value);
      }
      var third;
      if (isBigNumber(x.value)) {
        third = new BigNumber2(1).div(3);
      } else if (isFraction(x.value)) {
        third = new Fraction3(1, 3);
      } else {
        third = 1 / 3;
      }
      var _result = x.pow(third);
      if (negate) {
        _result.value = unaryMinus2(_result.value);
      }
      return _result;
    }
  }
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo11xS0s.js
var name37 = "matAlgo11xS0s";
var dependencies38 = ["typed", "equalScalar"];
var createMatAlgo11xS0s = factory(name37, dependencies38, (_ref) => {
  var {
    typed: typed2,
    equalScalar: equalScalar2
  } = _ref;
  return function matAlgo11xS0s(s, b2, callback, inverse) {
    var avalues = s._values;
    var aindex = s._index;
    var aptr = s._ptr;
    var asize = s._size;
    var adt = s._datatype;
    if (!avalues) {
      throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");
    }
    var rows = asize[0];
    var columns = asize[1];
    var dt;
    var eq = equalScalar2;
    var zero = 0;
    var cf = callback;
    if (typeof adt === "string") {
      dt = adt;
      eq = typed2.find(equalScalar2, [dt, dt]);
      zero = typed2.convert(0, dt);
      b2 = typed2.convert(b2, dt);
      cf = typed2.find(callback, [dt, dt]);
    }
    var cvalues = [];
    var cindex = [];
    var cptr = [];
    for (var j = 0; j < columns; j++) {
      cptr[j] = cindex.length;
      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
        var i2 = aindex[k];
        var v = inverse ? cf(b2, avalues[k]) : cf(avalues[k], b2);
        if (!eq(v, zero)) {
          cindex.push(i2);
          cvalues.push(v);
        }
      }
    }
    cptr[columns] = cindex.length;
    return s.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: dt
    });
  };
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo12xSfs.js
var name38 = "matAlgo12xSfs";
var dependencies39 = ["typed", "DenseMatrix"];
var createMatAlgo12xSfs = factory(name38, dependencies39, (_ref) => {
  var {
    typed: typed2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  return function matAlgo12xSfs(s, b2, callback, inverse) {
    var avalues = s._values;
    var aindex = s._index;
    var aptr = s._ptr;
    var asize = s._size;
    var adt = s._datatype;
    if (!avalues) {
      throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");
    }
    var rows = asize[0];
    var columns = asize[1];
    var dt;
    var cf = callback;
    if (typeof adt === "string") {
      dt = adt;
      b2 = typed2.convert(b2, dt);
      cf = typed2.find(callback, [dt, dt]);
    }
    var cdata = [];
    var x = [];
    var w = [];
    for (var j = 0; j < columns; j++) {
      var mark = j + 1;
      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
        var r = aindex[k];
        x[r] = avalues[k];
        w[r] = mark;
      }
      for (var i2 = 0; i2 < rows; i2++) {
        if (j === 0) {
          cdata[i2] = [];
        }
        if (w[i2] === mark) {
          cdata[i2][j] = inverse ? cf(b2, x[i2]) : cf(x[i2], b2);
        } else {
          cdata[i2][j] = inverse ? cf(b2, 0) : cf(0, b2);
        }
      }
    }
    return new DenseMatrix2({
      data: cdata,
      size: [rows, columns],
      datatype: dt
    });
  };
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo14xDs.js
var name39 = "matAlgo14xDs";
var dependencies40 = ["typed"];
var createMatAlgo14xDs = factory(name39, dependencies40, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return function matAlgo14xDs(a, b2, callback, inverse) {
    var adata = a._data;
    var asize = a._size;
    var adt = a._datatype;
    var dt;
    var cf = callback;
    if (typeof adt === "string") {
      dt = adt;
      b2 = typed2.convert(b2, dt);
      cf = typed2.find(callback, [dt, dt]);
    }
    var cdata = asize.length > 0 ? _iterate(cf, 0, asize, asize[0], adata, b2, inverse) : [];
    return a.createDenseMatrix({
      data: cdata,
      size: clone(asize),
      datatype: dt
    });
  };
  function _iterate(f, level, s, n, av, bv, inverse) {
    var cv = [];
    if (level === s.length - 1) {
      for (var i2 = 0; i2 < n; i2++) {
        cv[i2] = inverse ? f(bv, av[i2]) : f(av[i2], bv);
      }
    } else {
      for (var j = 0; j < n; j++) {
        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv, inverse);
      }
    }
    return cv;
  }
});

// node_modules/mathjs/lib/esm/function/arithmetic/ceil.js
var name40 = "ceil";
var dependencies41 = ["typed", "config", "round", "matrix", "equalScalar", "zeros", "DenseMatrix"];
var createCeilNumber = factory(name40, ["typed", "config", "round"], (_ref) => {
  var {
    typed: typed2,
    config: config4,
    round: round3
  } = _ref;
  return typed2(name40, {
    number: function number2(x) {
      if (nearlyEqual(x, round3(x), config4.epsilon)) {
        return round3(x);
      } else {
        return Math.ceil(x);
      }
    },
    "number, number": function numberNumber(x, n) {
      if (nearlyEqual(x, round3(x, n), config4.epsilon)) {
        return round3(x, n);
      } else {
        var [number2, exponent] = "".concat(x, "e").split("e");
        var result = Math.ceil(Number("".concat(number2, "e").concat(Number(exponent) + n)));
        [number2, exponent] = "".concat(result, "e").split("e");
        return Number("".concat(number2, "e").concat(Number(exponent) - n));
      }
    }
  });
});
var createCeil = factory(name40, dependencies41, (_ref2) => {
  var {
    typed: typed2,
    config: config4,
    round: round3,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    DenseMatrix: DenseMatrix2
  } = _ref2;
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo14xDs = createMatAlgo14xDs({
    typed: typed2
  });
  var ceilNumber = createCeilNumber({
    typed: typed2,
    config: config4,
    round: round3
  });
  return typed2("ceil", {
    number: ceilNumber.signatures.number,
    "number,number": ceilNumber.signatures["number,number"],
    Complex: function Complex3(x) {
      return x.ceil();
    },
    "Complex, number": function ComplexNumber(x, n) {
      return x.ceil(n);
    },
    "Complex, BigNumber": function ComplexBigNumber(x, n) {
      return x.ceil(n.toNumber());
    },
    BigNumber: function BigNumber2(x) {
      if (nearlyEqual2(x, round3(x), config4.epsilon)) {
        return round3(x);
      } else {
        return x.ceil();
      }
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, n) {
      if (nearlyEqual2(x, round3(x, n), config4.epsilon)) {
        return round3(x, n);
      } else {
        return x.toDecimalPlaces(n.toNumber(), decimal_default.ROUND_CEIL);
      }
    },
    Fraction: function Fraction3(x) {
      return x.ceil();
    },
    "Fraction, number": function FractionNumber(x, n) {
      return x.ceil(n);
    },
    "Fraction, BigNumber": function FractionBigNumber(x, n) {
      return x.ceil(n.toNumber());
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => {
      return deepMap(x, self2, true);
    }),
    "Array, number | BigNumber": typed2.referToSelf((self2) => (x, n) => {
      return deepMap(x, (i2) => self2(i2, n), true);
    }),
    "SparseMatrix, number | BigNumber": typed2.referToSelf((self2) => (x, y) => {
      return matAlgo11xS0s(x, y, self2, false);
    }),
    "DenseMatrix, number | BigNumber": typed2.referToSelf((self2) => (x, y) => {
      return matAlgo14xDs(x, y, self2, false);
    }),
    "number | Complex | Fraction | BigNumber, Array": typed2.referToSelf((self2) => (x, y) => {
      return matAlgo14xDs(matrix2(y), x, self2, true).valueOf();
    }),
    "number | Complex | Fraction | BigNumber, Matrix": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(x, 0)) return zeros3(y.size(), y.storage());
      if (y.storage() === "dense") {
        return matAlgo14xDs(y, x, self2, true);
      }
      return matAlgo12xSfs(y, x, self2, true);
    })
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/cube.js
var name41 = "cube";
var dependencies42 = ["typed"];
var createCube = factory(name41, dependencies42, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name41, {
    number: cubeNumber,
    Complex: function Complex3(x) {
      return x.mul(x).mul(x);
    },
    BigNumber: function BigNumber2(x) {
      return x.times(x).times(x);
    },
    Fraction: function Fraction3(x) {
      return x.pow(3);
    },
    Unit: function Unit2(x) {
      return x.pow(3);
    }
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/exp.js
var name42 = "exp";
var dependencies43 = ["typed"];
var createExp = factory(name42, dependencies43, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name42, {
    number: expNumber,
    Complex: function Complex3(x) {
      return x.exp();
    },
    BigNumber: function BigNumber2(x) {
      return x.exp();
    }
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/expm1.js
var name43 = "expm1";
var dependencies44 = ["typed", "Complex"];
var createExpm1 = factory(name43, dependencies44, (_ref) => {
  var {
    typed: typed2,
    Complex: _Complex
  } = _ref;
  return typed2(name43, {
    number: expm1Number,
    Complex: function Complex3(x) {
      var r = Math.exp(x.re);
      return new _Complex(r * Math.cos(x.im) - 1, r * Math.sin(x.im));
    },
    BigNumber: function BigNumber2(x) {
      return x.exp().minus(1);
    }
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/fix.js
var name44 = "fix";
var dependencies45 = ["typed", "Complex", "matrix", "ceil", "floor", "equalScalar", "zeros", "DenseMatrix"];
var createFixNumber = factory(name44, ["typed", "ceil", "floor"], (_ref) => {
  var {
    typed: typed2,
    ceil: ceil3,
    floor: floor3
  } = _ref;
  return typed2(name44, {
    number: function number2(x) {
      return x > 0 ? floor3(x) : ceil3(x);
    },
    "number, number": function numberNumber(x, n) {
      return x > 0 ? floor3(x, n) : ceil3(x, n);
    }
  });
});
var createFix = factory(name44, dependencies45, (_ref2) => {
  var {
    typed: typed2,
    Complex: _Complex,
    matrix: matrix2,
    ceil: ceil3,
    floor: floor3,
    equalScalar: equalScalar2,
    zeros: zeros3,
    DenseMatrix: DenseMatrix2
  } = _ref2;
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo14xDs = createMatAlgo14xDs({
    typed: typed2
  });
  var fixNumber = createFixNumber({
    typed: typed2,
    ceil: ceil3,
    floor: floor3
  });
  return typed2("fix", {
    number: fixNumber.signatures.number,
    "number, number | BigNumber": fixNumber.signatures["number,number"],
    Complex: function Complex3(x) {
      return new _Complex(x.re > 0 ? Math.floor(x.re) : Math.ceil(x.re), x.im > 0 ? Math.floor(x.im) : Math.ceil(x.im));
    },
    "Complex, number": function ComplexNumber(x, n) {
      return new _Complex(x.re > 0 ? floor3(x.re, n) : ceil3(x.re, n), x.im > 0 ? floor3(x.im, n) : ceil3(x.im, n));
    },
    "Complex, BigNumber": function ComplexBigNumber(x, bn) {
      var n = bn.toNumber();
      return new _Complex(x.re > 0 ? floor3(x.re, n) : ceil3(x.re, n), x.im > 0 ? floor3(x.im, n) : ceil3(x.im, n));
    },
    BigNumber: function BigNumber2(x) {
      return x.isNegative() ? ceil3(x) : floor3(x);
    },
    "BigNumber, number | BigNumber": function BigNumberNumberBigNumber(x, n) {
      return x.isNegative() ? ceil3(x, n) : floor3(x, n);
    },
    Fraction: function Fraction3(x) {
      return x.s < 0 ? x.ceil() : x.floor();
    },
    "Fraction, number | BigNumber": function FractionNumberBigNumber(x, n) {
      return x.s < 0 ? ceil3(x, n) : floor3(x, n);
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => {
      return deepMap(x, self2, true);
    }),
    "Array | Matrix, number | BigNumber": typed2.referToSelf((self2) => (x, n) => {
      return deepMap(x, (i2) => self2(i2, n), true);
    }),
    "number | Complex | Fraction | BigNumber, Array": typed2.referToSelf((self2) => (x, y) => {
      return matAlgo14xDs(matrix2(y), x, self2, true).valueOf();
    }),
    "number | Complex | Fraction | BigNumber, Matrix": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(x, 0)) return zeros3(y.size(), y.storage());
      if (y.storage() === "dense") {
        return matAlgo14xDs(y, x, self2, true);
      }
      return matAlgo12xSfs(y, x, self2, true);
    })
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/floor.js
var name45 = "floor";
var dependencies46 = ["typed", "config", "round", "matrix", "equalScalar", "zeros", "DenseMatrix"];
var createFloorNumber = factory(name45, ["typed", "config", "round"], (_ref) => {
  var {
    typed: typed2,
    config: config4,
    round: round3
  } = _ref;
  return typed2(name45, {
    number: function number2(x) {
      if (nearlyEqual(x, round3(x), config4.epsilon)) {
        return round3(x);
      } else {
        return Math.floor(x);
      }
    },
    "number, number": function numberNumber(x, n) {
      if (nearlyEqual(x, round3(x, n), config4.epsilon)) {
        return round3(x, n);
      } else {
        var [number2, exponent] = "".concat(x, "e").split("e");
        var result = Math.floor(Number("".concat(number2, "e").concat(Number(exponent) + n)));
        [number2, exponent] = "".concat(result, "e").split("e");
        return Number("".concat(number2, "e").concat(Number(exponent) - n));
      }
    }
  });
});
var createFloor = factory(name45, dependencies46, (_ref2) => {
  var {
    typed: typed2,
    config: config4,
    round: round3,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    DenseMatrix: DenseMatrix2
  } = _ref2;
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo14xDs = createMatAlgo14xDs({
    typed: typed2
  });
  var floorNumber = createFloorNumber({
    typed: typed2,
    config: config4,
    round: round3
  });
  return typed2("floor", {
    number: floorNumber.signatures.number,
    "number,number": floorNumber.signatures["number,number"],
    Complex: function Complex3(x) {
      return x.floor();
    },
    "Complex, number": function ComplexNumber(x, n) {
      return x.floor(n);
    },
    "Complex, BigNumber": function ComplexBigNumber(x, n) {
      return x.floor(n.toNumber());
    },
    BigNumber: function BigNumber2(x) {
      if (nearlyEqual2(x, round3(x), config4.epsilon)) {
        return round3(x);
      } else {
        return x.floor();
      }
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, n) {
      if (nearlyEqual2(x, round3(x, n), config4.epsilon)) {
        return round3(x, n);
      } else {
        return x.toDecimalPlaces(n.toNumber(), decimal_default.ROUND_FLOOR);
      }
    },
    Fraction: function Fraction3(x) {
      return x.floor();
    },
    "Fraction, number": function FractionNumber(x, n) {
      return x.floor(n);
    },
    "Fraction, BigNumber": function FractionBigNumber(x, n) {
      return x.floor(n.toNumber());
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => {
      return deepMap(x, self2, true);
    }),
    "Array, number | BigNumber": typed2.referToSelf((self2) => (x, n) => {
      return deepMap(x, (i2) => self2(i2, n), true);
    }),
    "SparseMatrix, number | BigNumber": typed2.referToSelf((self2) => (x, y) => {
      return matAlgo11xS0s(x, y, self2, false);
    }),
    "DenseMatrix, number | BigNumber": typed2.referToSelf((self2) => (x, y) => {
      return matAlgo14xDs(x, y, self2, false);
    }),
    "number | Complex | Fraction | BigNumber, Array": typed2.referToSelf((self2) => (x, y) => {
      return matAlgo14xDs(matrix2(y), x, self2, true).valueOf();
    }),
    "number | Complex | Fraction | BigNumber, Matrix": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(x, 0)) return zeros3(y.size(), y.storage());
      if (y.storage() === "dense") {
        return matAlgo14xDs(y, x, self2, true);
      }
      return matAlgo12xSfs(y, x, self2, true);
    })
  });
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo02xDS0.js
var name46 = "matAlgo02xDS0";
var dependencies47 = ["typed", "equalScalar"];
var createMatAlgo02xDS0 = factory(name46, dependencies47, (_ref) => {
  var {
    typed: typed2,
    equalScalar: equalScalar2
  } = _ref;
  return function matAlgo02xDS0(denseMatrix, sparseMatrix, callback, inverse) {
    var adata = denseMatrix._data;
    var asize = denseMatrix._size;
    var adt = denseMatrix._datatype || denseMatrix.getDataType();
    var bvalues = sparseMatrix._values;
    var bindex = sparseMatrix._index;
    var bptr = sparseMatrix._ptr;
    var bsize = sparseMatrix._size;
    var bdt = sparseMatrix._datatype || sparseMatrix._data === void 0 ? sparseMatrix._datatype : sparseMatrix.getDataType();
    if (asize.length !== bsize.length) {
      throw new DimensionError(asize.length, bsize.length);
    }
    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError("Dimension mismatch. Matrix A (" + asize + ") must match Matrix B (" + bsize + ")");
    }
    if (!bvalues) {
      throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");
    }
    var rows = asize[0];
    var columns = asize[1];
    var dt;
    var eq = equalScalar2;
    var zero = 0;
    var cf = callback;
    if (typeof adt === "string" && adt === bdt && adt !== "mixed") {
      dt = adt;
      eq = typed2.find(equalScalar2, [dt, dt]);
      zero = typed2.convert(0, dt);
      cf = typed2.find(callback, [dt, dt]);
    }
    var cvalues = [];
    var cindex = [];
    var cptr = [];
    for (var j = 0; j < columns; j++) {
      cptr[j] = cindex.length;
      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {
        var i2 = bindex[k];
        var cij = inverse ? cf(bvalues[k], adata[i2][j]) : cf(adata[i2][j], bvalues[k]);
        if (!eq(cij, zero)) {
          cindex.push(i2);
          cvalues.push(cij);
        }
      }
    }
    cptr[columns] = cindex.length;
    return sparseMatrix.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: adt === denseMatrix._datatype && bdt === sparseMatrix._datatype ? dt : void 0
    });
  };
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo03xDSf.js
var name47 = "matAlgo03xDSf";
var dependencies48 = ["typed"];
var createMatAlgo03xDSf = factory(name47, dependencies48, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return function matAlgo03xDSf(denseMatrix, sparseMatrix, callback, inverse) {
    var adata = denseMatrix._data;
    var asize = denseMatrix._size;
    var adt = denseMatrix._datatype || denseMatrix.getDataType();
    var bvalues = sparseMatrix._values;
    var bindex = sparseMatrix._index;
    var bptr = sparseMatrix._ptr;
    var bsize = sparseMatrix._size;
    var bdt = sparseMatrix._datatype || sparseMatrix._data === void 0 ? sparseMatrix._datatype : sparseMatrix.getDataType();
    if (asize.length !== bsize.length) {
      throw new DimensionError(asize.length, bsize.length);
    }
    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError("Dimension mismatch. Matrix A (" + asize + ") must match Matrix B (" + bsize + ")");
    }
    if (!bvalues) {
      throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");
    }
    var rows = asize[0];
    var columns = asize[1];
    var dt;
    var zero = 0;
    var cf = callback;
    if (typeof adt === "string" && adt === bdt && adt !== "mixed") {
      dt = adt;
      zero = typed2.convert(0, dt);
      cf = typed2.find(callback, [dt, dt]);
    }
    var cdata = [];
    for (var z = 0; z < rows; z++) {
      cdata[z] = [];
    }
    var x = [];
    var w = [];
    for (var j = 0; j < columns; j++) {
      var mark = j + 1;
      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {
        var i2 = bindex[k];
        x[i2] = inverse ? cf(bvalues[k], adata[i2][j]) : cf(adata[i2][j], bvalues[k]);
        w[i2] = mark;
      }
      for (var y = 0; y < rows; y++) {
        if (w[y] === mark) {
          cdata[y][j] = x[y];
        } else {
          cdata[y][j] = inverse ? cf(zero, adata[y][j]) : cf(adata[y][j], zero);
        }
      }
    }
    return denseMatrix.createDenseMatrix({
      data: cdata,
      size: [rows, columns],
      datatype: adt === denseMatrix._datatype && bdt === sparseMatrix._datatype ? dt : void 0
    });
  };
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo05xSfSf.js
var name48 = "matAlgo05xSfSf";
var dependencies49 = ["typed", "equalScalar"];
var createMatAlgo05xSfSf = factory(name48, dependencies49, (_ref) => {
  var {
    typed: typed2,
    equalScalar: equalScalar2
  } = _ref;
  return function matAlgo05xSfSf(a, b2, callback) {
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var asize = a._size;
    var adt = a._datatype || a._data === void 0 ? a._datatype : a.getDataType();
    var bvalues = b2._values;
    var bindex = b2._index;
    var bptr = b2._ptr;
    var bsize = b2._size;
    var bdt = b2._datatype || b2._data === void 0 ? b2._datatype : b2.getDataType();
    if (asize.length !== bsize.length) {
      throw new DimensionError(asize.length, bsize.length);
    }
    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError("Dimension mismatch. Matrix A (" + asize + ") must match Matrix B (" + bsize + ")");
    }
    var rows = asize[0];
    var columns = asize[1];
    var dt;
    var eq = equalScalar2;
    var zero = 0;
    var cf = callback;
    if (typeof adt === "string" && adt === bdt && adt !== "mixed") {
      dt = adt;
      eq = typed2.find(equalScalar2, [dt, dt]);
      zero = typed2.convert(0, dt);
      cf = typed2.find(callback, [dt, dt]);
    }
    var cvalues = avalues && bvalues ? [] : void 0;
    var cindex = [];
    var cptr = [];
    var xa = cvalues ? [] : void 0;
    var xb = cvalues ? [] : void 0;
    var wa = [];
    var wb = [];
    var i2, j, k, k1;
    for (j = 0; j < columns; j++) {
      cptr[j] = cindex.length;
      var mark = j + 1;
      for (k = aptr[j], k1 = aptr[j + 1]; k < k1; k++) {
        i2 = aindex[k];
        cindex.push(i2);
        wa[i2] = mark;
        if (xa) {
          xa[i2] = avalues[k];
        }
      }
      for (k = bptr[j], k1 = bptr[j + 1]; k < k1; k++) {
        i2 = bindex[k];
        if (wa[i2] !== mark) {
          cindex.push(i2);
        }
        wb[i2] = mark;
        if (xb) {
          xb[i2] = bvalues[k];
        }
      }
      if (cvalues) {
        k = cptr[j];
        while (k < cindex.length) {
          i2 = cindex[k];
          var wai = wa[i2];
          var wbi = wb[i2];
          if (wai === mark || wbi === mark) {
            var va = wai === mark ? xa[i2] : zero;
            var vb = wbi === mark ? xb[i2] : zero;
            var vc = cf(va, vb);
            if (!eq(vc, zero)) {
              cvalues.push(vc);
              k++;
            } else {
              cindex.splice(k, 1);
            }
          }
        }
      }
    }
    cptr[columns] = cindex.length;
    return a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
  };
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo13xDD.js
var name49 = "matAlgo13xDD";
var dependencies50 = ["typed"];
var createMatAlgo13xDD = factory(name49, dependencies50, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return function matAlgo13xDD(a, b2, callback) {
    var adata = a._data;
    var asize = a._size;
    var adt = a._datatype;
    var bdata = b2._data;
    var bsize = b2._size;
    var bdt = b2._datatype;
    var csize = [];
    if (asize.length !== bsize.length) {
      throw new DimensionError(asize.length, bsize.length);
    }
    for (var s = 0; s < asize.length; s++) {
      if (asize[s] !== bsize[s]) {
        throw new RangeError("Dimension mismatch. Matrix A (" + asize + ") must match Matrix B (" + bsize + ")");
      }
      csize[s] = asize[s];
    }
    var dt;
    var cf = callback;
    if (typeof adt === "string" && adt === bdt) {
      dt = adt;
      cf = typed2.find(callback, [dt, dt]);
    }
    var cdata = csize.length > 0 ? _iterate(cf, 0, csize, csize[0], adata, bdata) : [];
    return a.createDenseMatrix({
      data: cdata,
      size: csize,
      datatype: dt
    });
  };
  function _iterate(f, level, s, n, av, bv) {
    var cv = [];
    if (level === s.length - 1) {
      for (var i2 = 0; i2 < n; i2++) {
        cv[i2] = f(av[i2], bv[i2]);
      }
    } else {
      for (var j = 0; j < n; j++) {
        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv[j]);
      }
    }
    return cv;
  }
});

// node_modules/mathjs/lib/esm/type/matrix/utils/broadcast.js
var name50 = "broadcast";
var dependancies = ["concat"];
var createBroadcast = factory(name50, dependancies, (_ref) => {
  var {
    concat: concat4
  } = _ref;
  return function(A, B) {
    var N = Math.max(A._size.length, B._size.length);
    if (A._size.length === B._size.length) {
      if (A._size.every((dim2, i2) => dim2 === B._size[i2])) {
        return [A, B];
      }
    }
    var sizeA = _padLeft(A._size, N, 0);
    var sizeB = _padLeft(B._size, N, 0);
    var sizeMax = [];
    for (var dim = 0; dim < N; dim++) {
      sizeMax[dim] = Math.max(sizeA[dim], sizeB[dim]);
    }
    checkBroadcastingRules(sizeA, sizeMax);
    checkBroadcastingRules(sizeB, sizeMax);
    var AA = A.clone();
    var BB = B.clone();
    if (AA._size.length < N) {
      AA.reshape(_padLeft(AA._size, N, 1));
    } else if (BB._size.length < N) {
      BB.reshape(_padLeft(BB._size, N, 1));
    }
    for (var _dim = 0; _dim < N; _dim++) {
      if (AA._size[_dim] < sizeMax[_dim]) {
        AA = _stretch(AA, sizeMax[_dim], _dim);
      }
      if (BB._size[_dim] < sizeMax[_dim]) {
        BB = _stretch(BB, sizeMax[_dim], _dim);
      }
    }
    return [AA, BB];
  };
  function _padLeft(shape, N, filler) {
    return [...Array(N - shape.length).fill(filler), ...shape];
  }
  function _stretch(arrayToStretch, sizeToStretch, dimToStretch) {
    return concat4(...Array(sizeToStretch).fill(arrayToStretch), dimToStretch);
  }
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matrixAlgorithmSuite.js
var name51 = "matrixAlgorithmSuite";
var dependencies51 = ["typed", "matrix", "concat"];
var createMatrixAlgorithmSuite = factory(name51, dependencies51, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  } = _ref;
  var matAlgo13xDD = createMatAlgo13xDD({
    typed: typed2
  });
  var matAlgo14xDs = createMatAlgo14xDs({
    typed: typed2
  });
  var broadcast = createBroadcast({
    concat: concat4
  });
  return function matrixAlgorithmSuite(options) {
    var elop = options.elop;
    var SD = options.SD || options.DS;
    var matrixSignatures;
    if (elop) {
      matrixSignatures = {
        "DenseMatrix, DenseMatrix": (x, y) => matAlgo13xDD(...broadcast(x, y), elop),
        "Array, Array": (x, y) => matAlgo13xDD(...broadcast(matrix2(x), matrix2(y)), elop).valueOf(),
        "Array, DenseMatrix": (x, y) => matAlgo13xDD(...broadcast(matrix2(x), y), elop),
        "DenseMatrix, Array": (x, y) => matAlgo13xDD(...broadcast(x, matrix2(y)), elop)
      };
      if (options.SS) {
        matrixSignatures["SparseMatrix, SparseMatrix"] = (x, y) => options.SS(...broadcast(x, y), elop, false);
      }
      if (options.DS) {
        matrixSignatures["DenseMatrix, SparseMatrix"] = (x, y) => options.DS(...broadcast(x, y), elop, false);
        matrixSignatures["Array, SparseMatrix"] = (x, y) => options.DS(...broadcast(matrix2(x), y), elop, false);
      }
      if (SD) {
        matrixSignatures["SparseMatrix, DenseMatrix"] = (x, y) => SD(...broadcast(y, x), elop, true);
        matrixSignatures["SparseMatrix, Array"] = (x, y) => SD(...broadcast(matrix2(y), x), elop, true);
      }
    } else {
      matrixSignatures = {
        "DenseMatrix, DenseMatrix": typed2.referToSelf((self2) => (x, y) => {
          return matAlgo13xDD(...broadcast(x, y), self2);
        }),
        "Array, Array": typed2.referToSelf((self2) => (x, y) => {
          return matAlgo13xDD(...broadcast(matrix2(x), matrix2(y)), self2).valueOf();
        }),
        "Array, DenseMatrix": typed2.referToSelf((self2) => (x, y) => {
          return matAlgo13xDD(...broadcast(matrix2(x), y), self2);
        }),
        "DenseMatrix, Array": typed2.referToSelf((self2) => (x, y) => {
          return matAlgo13xDD(...broadcast(x, matrix2(y)), self2);
        })
      };
      if (options.SS) {
        matrixSignatures["SparseMatrix, SparseMatrix"] = typed2.referToSelf((self2) => (x, y) => {
          return options.SS(...broadcast(x, y), self2, false);
        });
      }
      if (options.DS) {
        matrixSignatures["DenseMatrix, SparseMatrix"] = typed2.referToSelf((self2) => (x, y) => {
          return options.DS(...broadcast(x, y), self2, false);
        });
        matrixSignatures["Array, SparseMatrix"] = typed2.referToSelf((self2) => (x, y) => {
          return options.DS(...broadcast(matrix2(x), y), self2, false);
        });
      }
      if (SD) {
        matrixSignatures["SparseMatrix, DenseMatrix"] = typed2.referToSelf((self2) => (x, y) => {
          return SD(...broadcast(y, x), self2, true);
        });
        matrixSignatures["SparseMatrix, Array"] = typed2.referToSelf((self2) => (x, y) => {
          return SD(...broadcast(matrix2(y), x), self2, true);
        });
      }
    }
    var scalar = options.scalar || "any";
    var Ds = options.Ds || options.Ss;
    if (Ds) {
      if (elop) {
        matrixSignatures["DenseMatrix," + scalar] = (x, y) => matAlgo14xDs(x, y, elop, false);
        matrixSignatures[scalar + ", DenseMatrix"] = (x, y) => matAlgo14xDs(y, x, elop, true);
        matrixSignatures["Array," + scalar] = (x, y) => matAlgo14xDs(matrix2(x), y, elop, false).valueOf();
        matrixSignatures[scalar + ", Array"] = (x, y) => matAlgo14xDs(matrix2(y), x, elop, true).valueOf();
      } else {
        matrixSignatures["DenseMatrix," + scalar] = typed2.referToSelf((self2) => (x, y) => {
          return matAlgo14xDs(x, y, self2, false);
        });
        matrixSignatures[scalar + ", DenseMatrix"] = typed2.referToSelf((self2) => (x, y) => {
          return matAlgo14xDs(y, x, self2, true);
        });
        matrixSignatures["Array," + scalar] = typed2.referToSelf((self2) => (x, y) => {
          return matAlgo14xDs(matrix2(x), y, self2, false).valueOf();
        });
        matrixSignatures[scalar + ", Array"] = typed2.referToSelf((self2) => (x, y) => {
          return matAlgo14xDs(matrix2(y), x, self2, true).valueOf();
        });
      }
    }
    var sS = options.sS !== void 0 ? options.sS : options.Ss;
    if (elop) {
      if (options.Ss) {
        matrixSignatures["SparseMatrix," + scalar] = (x, y) => options.Ss(x, y, elop, false);
      }
      if (sS) {
        matrixSignatures[scalar + ", SparseMatrix"] = (x, y) => sS(y, x, elop, true);
      }
    } else {
      if (options.Ss) {
        matrixSignatures["SparseMatrix," + scalar] = typed2.referToSelf((self2) => (x, y) => {
          return options.Ss(x, y, self2, false);
        });
      }
      if (sS) {
        matrixSignatures[scalar + ", SparseMatrix"] = typed2.referToSelf((self2) => (x, y) => {
          return sS(y, x, self2, true);
        });
      }
    }
    if (elop && elop.signatures) {
      extend(matrixSignatures, elop.signatures);
    }
    return matrixSignatures;
  };
});

// node_modules/mathjs/lib/esm/function/arithmetic/mod.js
var name52 = "mod";
var dependencies52 = ["typed", "config", "round", "matrix", "equalScalar", "zeros", "DenseMatrix", "concat"];
var createMod = factory(name52, dependencies52, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    round: round3,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var floor3 = createFloor({
    typed: typed2,
    config: config4,
    round: round3,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo02xDS0 = createMatAlgo02xDS0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo05xSfSf = createMatAlgo05xSfSf({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name52, {
    "number, number": _modNumber,
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return y.isZero() ? x : x.sub(y.mul(floor3(x.div(y))));
    },
    "Fraction, Fraction": function FractionFraction(x, y) {
      return y.equals(0) ? x : x.sub(y.mul(floor3(x.div(y))));
    }
  }, matrixAlgorithmSuite({
    SS: matAlgo05xSfSf,
    DS: matAlgo03xDSf,
    SD: matAlgo02xDS0,
    Ss: matAlgo11xS0s,
    sS: matAlgo12xSfs
  }));
  function _modNumber(x, y) {
    return y === 0 ? x : x - y * floor3(x / y);
  }
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo01xDSid.js
var name53 = "matAlgo01xDSid";
var dependencies53 = ["typed"];
var createMatAlgo01xDSid = factory(name53, dependencies53, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return function algorithm1(denseMatrix, sparseMatrix, callback, inverse) {
    var adata = denseMatrix._data;
    var asize = denseMatrix._size;
    var adt = denseMatrix._datatype || denseMatrix.getDataType();
    var bvalues = sparseMatrix._values;
    var bindex = sparseMatrix._index;
    var bptr = sparseMatrix._ptr;
    var bsize = sparseMatrix._size;
    var bdt = sparseMatrix._datatype || sparseMatrix._data === void 0 ? sparseMatrix._datatype : sparseMatrix.getDataType();
    if (asize.length !== bsize.length) {
      throw new DimensionError(asize.length, bsize.length);
    }
    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError("Dimension mismatch. Matrix A (" + asize + ") must match Matrix B (" + bsize + ")");
    }
    if (!bvalues) {
      throw new Error("Cannot perform operation on Dense Matrix and Pattern Sparse Matrix");
    }
    var rows = asize[0];
    var columns = asize[1];
    var dt = typeof adt === "string" && adt !== "mixed" && adt === bdt ? adt : void 0;
    var cf = dt ? typed2.find(callback, [dt, dt]) : callback;
    var i2, j;
    var cdata = [];
    for (i2 = 0; i2 < rows; i2++) {
      cdata[i2] = [];
    }
    var x = [];
    var w = [];
    for (j = 0; j < columns; j++) {
      var mark = j + 1;
      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {
        i2 = bindex[k];
        x[i2] = inverse ? cf(bvalues[k], adata[i2][j]) : cf(adata[i2][j], bvalues[k]);
        w[i2] = mark;
      }
      for (i2 = 0; i2 < rows; i2++) {
        if (w[i2] === mark) {
          cdata[i2][j] = x[i2];
        } else {
          cdata[i2][j] = adata[i2][j];
        }
      }
    }
    return denseMatrix.createDenseMatrix({
      data: cdata,
      size: [rows, columns],
      datatype: adt === denseMatrix._datatype && bdt === sparseMatrix._datatype ? dt : void 0
    });
  };
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo04xSidSid.js
var name54 = "matAlgo04xSidSid";
var dependencies54 = ["typed", "equalScalar"];
var createMatAlgo04xSidSid = factory(name54, dependencies54, (_ref) => {
  var {
    typed: typed2,
    equalScalar: equalScalar2
  } = _ref;
  return function matAlgo04xSidSid(a, b2, callback) {
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var asize = a._size;
    var adt = a._datatype || a._data === void 0 ? a._datatype : a.getDataType();
    var bvalues = b2._values;
    var bindex = b2._index;
    var bptr = b2._ptr;
    var bsize = b2._size;
    var bdt = b2._datatype || b2._data === void 0 ? b2._datatype : b2.getDataType();
    if (asize.length !== bsize.length) {
      throw new DimensionError(asize.length, bsize.length);
    }
    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError("Dimension mismatch. Matrix A (" + asize + ") must match Matrix B (" + bsize + ")");
    }
    var rows = asize[0];
    var columns = asize[1];
    var dt;
    var eq = equalScalar2;
    var zero = 0;
    var cf = callback;
    if (typeof adt === "string" && adt === bdt && adt !== "mixed") {
      dt = adt;
      eq = typed2.find(equalScalar2, [dt, dt]);
      zero = typed2.convert(0, dt);
      cf = typed2.find(callback, [dt, dt]);
    }
    var cvalues = avalues && bvalues ? [] : void 0;
    var cindex = [];
    var cptr = [];
    var xa = avalues && bvalues ? [] : void 0;
    var xb = avalues && bvalues ? [] : void 0;
    var wa = [];
    var wb = [];
    var i2, j, k, k0, k1;
    for (j = 0; j < columns; j++) {
      cptr[j] = cindex.length;
      var mark = j + 1;
      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
        i2 = aindex[k];
        cindex.push(i2);
        wa[i2] = mark;
        if (xa) {
          xa[i2] = avalues[k];
        }
      }
      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {
        i2 = bindex[k];
        if (wa[i2] === mark) {
          if (xa) {
            var v = cf(xa[i2], bvalues[k]);
            if (!eq(v, zero)) {
              xa[i2] = v;
            } else {
              wa[i2] = null;
            }
          }
        } else {
          cindex.push(i2);
          wb[i2] = mark;
          if (xb) {
            xb[i2] = bvalues[k];
          }
        }
      }
      if (xa && xb) {
        k = cptr[j];
        while (k < cindex.length) {
          i2 = cindex[k];
          if (wa[i2] === mark) {
            cvalues[k] = xa[i2];
            k++;
          } else if (wb[i2] === mark) {
            cvalues[k] = xb[i2];
            k++;
          } else {
            cindex.splice(k, 1);
          }
        }
      }
    }
    cptr[columns] = cindex.length;
    return a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
  };
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo10xSids.js
var name55 = "matAlgo10xSids";
var dependencies55 = ["typed", "DenseMatrix"];
var createMatAlgo10xSids = factory(name55, dependencies55, (_ref) => {
  var {
    typed: typed2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  return function matAlgo10xSids(s, b2, callback, inverse) {
    var avalues = s._values;
    var aindex = s._index;
    var aptr = s._ptr;
    var asize = s._size;
    var adt = s._datatype;
    if (!avalues) {
      throw new Error("Cannot perform operation on Pattern Sparse Matrix and Scalar value");
    }
    var rows = asize[0];
    var columns = asize[1];
    var dt;
    var cf = callback;
    if (typeof adt === "string") {
      dt = adt;
      b2 = typed2.convert(b2, dt);
      cf = typed2.find(callback, [dt, dt]);
    }
    var cdata = [];
    var x = [];
    var w = [];
    for (var j = 0; j < columns; j++) {
      var mark = j + 1;
      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
        var r = aindex[k];
        x[r] = avalues[k];
        w[r] = mark;
      }
      for (var i2 = 0; i2 < rows; i2++) {
        if (j === 0) {
          cdata[i2] = [];
        }
        if (w[i2] === mark) {
          cdata[i2][j] = inverse ? cf(b2, x[i2]) : cf(x[i2], b2);
        } else {
          cdata[i2][j] = b2;
        }
      }
    }
    return new DenseMatrix2({
      data: cdata,
      size: [rows, columns],
      datatype: dt
    });
  };
});

// node_modules/mathjs/lib/esm/error/ArgumentsError.js
function ArgumentsError(fn, count2, min3, max3) {
  if (!(this instanceof ArgumentsError)) {
    throw new SyntaxError("Constructor must be called with the new operator");
  }
  this.fn = fn;
  this.count = count2;
  this.min = min3;
  this.max = max3;
  this.message = "Wrong number of arguments in function " + fn + " (" + count2 + " provided, " + min3 + (max3 !== void 0 && max3 !== null ? "-" + max3 : "") + " expected)";
  this.stack = new Error().stack;
}
ArgumentsError.prototype = new Error();
ArgumentsError.prototype.constructor = Error;
ArgumentsError.prototype.name = "ArgumentsError";
ArgumentsError.prototype.isArgumentsError = true;

// node_modules/mathjs/lib/esm/function/arithmetic/gcd.js
var name56 = "gcd";
var dependencies56 = ["typed", "config", "round", "matrix", "equalScalar", "zeros", "BigNumber", "DenseMatrix", "concat"];
var gcdTypes = "number | BigNumber | Fraction | Matrix | Array";
var gcdManyTypesSignature = "".concat(gcdTypes, ", ").concat(gcdTypes, ", ...").concat(gcdTypes);
function is1d(array) {
  return !array.some((element) => Array.isArray(element));
}
var createGcd = factory(name56, dependencies56, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    config: config4,
    round: round3,
    equalScalar: equalScalar2,
    zeros: zeros3,
    BigNumber: BigNumber2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var mod3 = createMod({
    typed: typed2,
    config: config4,
    round: round3,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  });
  var matAlgo01xDSid = createMatAlgo01xDSid({
    typed: typed2
  });
  var matAlgo04xSidSid = createMatAlgo04xSidSid({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo10xSids = createMatAlgo10xSids({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name56, {
    "number, number": _gcdNumber,
    "BigNumber, BigNumber": _gcdBigNumber,
    "Fraction, Fraction": (x, y) => x.gcd(y)
  }, matrixAlgorithmSuite({
    SS: matAlgo04xSidSid,
    DS: matAlgo01xDSid,
    Ss: matAlgo10xSids
  }), {
    [gcdManyTypesSignature]: typed2.referToSelf((self2) => (a, b2, args) => {
      var res = self2(a, b2);
      for (var i2 = 0; i2 < args.length; i2++) {
        res = self2(res, args[i2]);
      }
      return res;
    }),
    Array: typed2.referToSelf((self2) => (array) => {
      if (array.length === 1 && Array.isArray(array[0]) && is1d(array[0])) {
        return self2(...array[0]);
      }
      if (is1d(array)) {
        return self2(...array);
      }
      throw new ArgumentsError("gcd() supports only 1d matrices!");
    }),
    Matrix: typed2.referToSelf((self2) => (matrix3) => {
      return self2(matrix3.toArray());
    })
  });
  function _gcdNumber(a, b2) {
    if (!isInteger(a) || !isInteger(b2)) {
      throw new Error("Parameters in function gcd must be integer numbers");
    }
    var r;
    while (b2 !== 0) {
      r = mod3(a, b2);
      a = b2;
      b2 = r;
    }
    return a < 0 ? -a : a;
  }
  function _gcdBigNumber(a, b2) {
    if (!a.isInt() || !b2.isInt()) {
      throw new Error("Parameters in function gcd must be integer numbers");
    }
    var zero = new BigNumber2(0);
    while (!b2.isZero()) {
      var r = mod3(a, b2);
      a = b2;
      b2 = r;
    }
    return a.lt(zero) ? a.neg() : a;
  }
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo06xS0S0.js
var name57 = "matAlgo06xS0S0";
var dependencies57 = ["typed", "equalScalar"];
var createMatAlgo06xS0S0 = factory(name57, dependencies57, (_ref) => {
  var {
    typed: typed2,
    equalScalar: equalScalar2
  } = _ref;
  return function matAlgo06xS0S0(a, b2, callback) {
    var avalues = a._values;
    var asize = a._size;
    var adt = a._datatype || a._data === void 0 ? a._datatype : a.getDataType();
    var bvalues = b2._values;
    var bsize = b2._size;
    var bdt = b2._datatype || b2._data === void 0 ? b2._datatype : b2.getDataType();
    if (asize.length !== bsize.length) {
      throw new DimensionError(asize.length, bsize.length);
    }
    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError("Dimension mismatch. Matrix A (" + asize + ") must match Matrix B (" + bsize + ")");
    }
    var rows = asize[0];
    var columns = asize[1];
    var dt;
    var eq = equalScalar2;
    var zero = 0;
    var cf = callback;
    if (typeof adt === "string" && adt === bdt && adt !== "mixed") {
      dt = adt;
      eq = typed2.find(equalScalar2, [dt, dt]);
      zero = typed2.convert(0, dt);
      cf = typed2.find(callback, [dt, dt]);
    }
    var cvalues = avalues && bvalues ? [] : void 0;
    var cindex = [];
    var cptr = [];
    var x = cvalues ? [] : void 0;
    var w = [];
    var u = [];
    for (var j = 0; j < columns; j++) {
      cptr[j] = cindex.length;
      var mark = j + 1;
      scatter(a, j, w, x, u, mark, cindex, cf);
      scatter(b2, j, w, x, u, mark, cindex, cf);
      if (x) {
        var k = cptr[j];
        while (k < cindex.length) {
          var i2 = cindex[k];
          if (u[i2] === mark) {
            var v = x[i2];
            if (!eq(v, zero)) {
              cvalues.push(v);
              k++;
            } else {
              cindex.splice(k, 1);
            }
          } else {
            cindex.splice(k, 1);
          }
        }
      } else {
        var p = cptr[j];
        while (p < cindex.length) {
          var r = cindex[p];
          if (u[r] !== mark) {
            cindex.splice(p, 1);
          } else {
            p++;
          }
        }
      }
    }
    cptr[columns] = cindex.length;
    return a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
  };
});

// node_modules/mathjs/lib/esm/function/arithmetic/lcm.js
var name58 = "lcm";
var dependencies58 = ["typed", "matrix", "equalScalar", "concat"];
var createLcm = factory(name58, dependencies58, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    concat: concat4
  } = _ref;
  var matAlgo02xDS0 = createMatAlgo02xDS0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo06xS0S0 = createMatAlgo06xS0S0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  var lcmTypes = "number | BigNumber | Fraction | Matrix | Array";
  var lcmManySignature = {};
  lcmManySignature["".concat(lcmTypes, ", ").concat(lcmTypes, ", ...").concat(lcmTypes)] = typed2.referToSelf((self2) => (a, b2, args) => {
    var res = self2(a, b2);
    for (var i2 = 0; i2 < args.length; i2++) {
      res = self2(res, args[i2]);
    }
    return res;
  });
  return typed2(name58, {
    "number, number": lcmNumber,
    "BigNumber, BigNumber": _lcmBigNumber,
    "Fraction, Fraction": (x, y) => x.lcm(y)
  }, matrixAlgorithmSuite({
    SS: matAlgo06xS0S0,
    DS: matAlgo02xDS0,
    Ss: matAlgo11xS0s
  }), lcmManySignature);
  function _lcmBigNumber(a, b2) {
    if (!a.isInt() || !b2.isInt()) {
      throw new Error("Parameters in function lcm must be integer numbers");
    }
    if (a.isZero()) {
      return a;
    }
    if (b2.isZero()) {
      return b2;
    }
    var prod2 = a.times(b2);
    while (!b2.isZero()) {
      var t = b2;
      b2 = a.mod(t);
      a = t;
    }
    return prod2.div(a).abs();
  }
});

// node_modules/mathjs/lib/esm/function/arithmetic/log10.js
var name59 = "log10";
var dependencies59 = ["typed", "config", "Complex"];
var createLog10 = factory(name59, dependencies59, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    Complex: _Complex
  } = _ref;
  return typed2(name59, {
    number: function number2(x) {
      if (x >= 0 || config4.predictable) {
        return log10Number(x);
      } else {
        return new _Complex(x, 0).log().div(Math.LN10);
      }
    },
    Complex: function Complex3(x) {
      return new _Complex(x).log().div(Math.LN10);
    },
    BigNumber: function BigNumber2(x) {
      if (!x.isNegative() || config4.predictable) {
        return x.log();
      } else {
        return new _Complex(x.toNumber(), 0).log().div(Math.LN10);
      }
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/log2.js
var name60 = "log2";
var dependencies60 = ["typed", "config", "Complex"];
var createLog2 = factory(name60, dependencies60, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    Complex: Complex3
  } = _ref;
  return typed2(name60, {
    number: function number2(x) {
      if (x >= 0 || config4.predictable) {
        return log2Number(x);
      } else {
        return _log2Complex(new Complex3(x, 0));
      }
    },
    Complex: _log2Complex,
    BigNumber: function BigNumber2(x) {
      if (!x.isNegative() || config4.predictable) {
        return x.log(2);
      } else {
        return _log2Complex(new Complex3(x.toNumber(), 0));
      }
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
  function _log2Complex(x) {
    var newX = Math.sqrt(x.re * x.re + x.im * x.im);
    return new Complex3(Math.log2 ? Math.log2(newX) : Math.log(newX) / Math.LN2, Math.atan2(x.im, x.re) / Math.LN2);
  }
});

// node_modules/mathjs/lib/esm/function/arithmetic/multiplyScalar.js
var name61 = "multiplyScalar";
var dependencies61 = ["typed"];
var createMultiplyScalar = factory(name61, dependencies61, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2("multiplyScalar", {
    "number, number": multiplyNumber,
    "Complex, Complex": function ComplexComplex(x, y) {
      return x.mul(y);
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return x.times(y);
    },
    "Fraction, Fraction": function FractionFraction(x, y) {
      return x.mul(y);
    },
    "number | Fraction | BigNumber | Complex, Unit": (x, y) => y.multiply(x),
    "Unit, number | Fraction | BigNumber | Complex | Unit": (x, y) => x.multiply(y)
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/multiply.js
var name62 = "multiply";
var dependencies62 = ["typed", "matrix", "addScalar", "multiplyScalar", "equalScalar", "dot"];
var createMultiply = factory(name62, dependencies62, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    addScalar: addScalar2,
    multiplyScalar: multiplyScalar2,
    equalScalar: equalScalar2,
    dot: dot2
  } = _ref;
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo14xDs = createMatAlgo14xDs({
    typed: typed2
  });
  function _validateMatrixDimensions(size1, size2) {
    switch (size1.length) {
      case 1:
        switch (size2.length) {
          case 1:
            if (size1[0] !== size2[0]) {
              throw new RangeError("Dimension mismatch in multiplication. Vectors must have the same length");
            }
            break;
          case 2:
            if (size1[0] !== size2[0]) {
              throw new RangeError("Dimension mismatch in multiplication. Vector length (" + size1[0] + ") must match Matrix rows (" + size2[0] + ")");
            }
            break;
          default:
            throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has " + size2.length + " dimensions)");
        }
        break;
      case 2:
        switch (size2.length) {
          case 1:
            if (size1[1] !== size2[0]) {
              throw new RangeError("Dimension mismatch in multiplication. Matrix columns (" + size1[1] + ") must match Vector length (" + size2[0] + ")");
            }
            break;
          case 2:
            if (size1[1] !== size2[0]) {
              throw new RangeError("Dimension mismatch in multiplication. Matrix A columns (" + size1[1] + ") must match Matrix B rows (" + size2[0] + ")");
            }
            break;
          default:
            throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix B has " + size2.length + " dimensions)");
        }
        break;
      default:
        throw new Error("Can only multiply a 1 or 2 dimensional matrix (Matrix A has " + size1.length + " dimensions)");
    }
  }
  function _multiplyVectorVector(a, b2, n) {
    if (n === 0) {
      throw new Error("Cannot multiply two empty vectors");
    }
    return dot2(a, b2);
  }
  function _multiplyVectorMatrix(a, b2) {
    if (b2.storage() !== "dense") {
      throw new Error("Support for SparseMatrix not implemented");
    }
    return _multiplyVectorDenseMatrix(a, b2);
  }
  function _multiplyVectorDenseMatrix(a, b2) {
    var adata = a._data;
    var asize = a._size;
    var adt = a._datatype || a.getDataType();
    var bdata = b2._data;
    var bsize = b2._size;
    var bdt = b2._datatype || b2.getDataType();
    var alength = asize[0];
    var bcolumns = bsize[1];
    var dt;
    var af = addScalar2;
    var mf = multiplyScalar2;
    if (adt && bdt && adt === bdt && typeof adt === "string" && adt !== "mixed") {
      dt = adt;
      af = typed2.find(addScalar2, [dt, dt]);
      mf = typed2.find(multiplyScalar2, [dt, dt]);
    }
    var c = [];
    for (var j = 0; j < bcolumns; j++) {
      var sum3 = mf(adata[0], bdata[0][j]);
      for (var i2 = 1; i2 < alength; i2++) {
        sum3 = af(sum3, mf(adata[i2], bdata[i2][j]));
      }
      c[j] = sum3;
    }
    return a.createDenseMatrix({
      data: c,
      size: [bcolumns],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
  }
  var _multiplyMatrixVector = typed2("_multiplyMatrixVector", {
    "DenseMatrix, any": _multiplyDenseMatrixVector,
    "SparseMatrix, any": _multiplySparseMatrixVector
  });
  var _multiplyMatrixMatrix = typed2("_multiplyMatrixMatrix", {
    "DenseMatrix, DenseMatrix": _multiplyDenseMatrixDenseMatrix,
    "DenseMatrix, SparseMatrix": _multiplyDenseMatrixSparseMatrix,
    "SparseMatrix, DenseMatrix": _multiplySparseMatrixDenseMatrix,
    "SparseMatrix, SparseMatrix": _multiplySparseMatrixSparseMatrix
  });
  function _multiplyDenseMatrixVector(a, b2) {
    var adata = a._data;
    var asize = a._size;
    var adt = a._datatype || a.getDataType();
    var bdata = b2._data;
    var bdt = b2._datatype || b2.getDataType();
    var arows = asize[0];
    var acolumns = asize[1];
    var dt;
    var af = addScalar2;
    var mf = multiplyScalar2;
    if (adt && bdt && adt === bdt && typeof adt === "string" && adt !== "mixed") {
      dt = adt;
      af = typed2.find(addScalar2, [dt, dt]);
      mf = typed2.find(multiplyScalar2, [dt, dt]);
    }
    var c = [];
    for (var i2 = 0; i2 < arows; i2++) {
      var row2 = adata[i2];
      var sum3 = mf(row2[0], bdata[0]);
      for (var j = 1; j < acolumns; j++) {
        sum3 = af(sum3, mf(row2[j], bdata[j]));
      }
      c[i2] = sum3;
    }
    return a.createDenseMatrix({
      data: c,
      size: [arows],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
  }
  function _multiplyDenseMatrixDenseMatrix(a, b2) {
    var adata = a._data;
    var asize = a._size;
    var adt = a._datatype || a.getDataType();
    var bdata = b2._data;
    var bsize = b2._size;
    var bdt = b2._datatype || b2.getDataType();
    var arows = asize[0];
    var acolumns = asize[1];
    var bcolumns = bsize[1];
    var dt;
    var af = addScalar2;
    var mf = multiplyScalar2;
    if (adt && bdt && adt === bdt && typeof adt === "string" && adt !== "mixed" && adt !== "mixed") {
      dt = adt;
      af = typed2.find(addScalar2, [dt, dt]);
      mf = typed2.find(multiplyScalar2, [dt, dt]);
    }
    var c = [];
    for (var i2 = 0; i2 < arows; i2++) {
      var row2 = adata[i2];
      c[i2] = [];
      for (var j = 0; j < bcolumns; j++) {
        var sum3 = mf(row2[0], bdata[0][j]);
        for (var x = 1; x < acolumns; x++) {
          sum3 = af(sum3, mf(row2[x], bdata[x][j]));
        }
        c[i2][j] = sum3;
      }
    }
    return a.createDenseMatrix({
      data: c,
      size: [arows, bcolumns],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
  }
  function _multiplyDenseMatrixSparseMatrix(a, b2) {
    var adata = a._data;
    var asize = a._size;
    var adt = a._datatype || a.getDataType();
    var bvalues = b2._values;
    var bindex = b2._index;
    var bptr = b2._ptr;
    var bsize = b2._size;
    var bdt = b2._datatype || b2._data === void 0 ? b2._datatype : b2.getDataType();
    if (!bvalues) {
      throw new Error("Cannot multiply Dense Matrix times Pattern only Matrix");
    }
    var arows = asize[0];
    var bcolumns = bsize[1];
    var dt;
    var af = addScalar2;
    var mf = multiplyScalar2;
    var eq = equalScalar2;
    var zero = 0;
    if (adt && bdt && adt === bdt && typeof adt === "string" && adt !== "mixed") {
      dt = adt;
      af = typed2.find(addScalar2, [dt, dt]);
      mf = typed2.find(multiplyScalar2, [dt, dt]);
      eq = typed2.find(equalScalar2, [dt, dt]);
      zero = typed2.convert(0, dt);
    }
    var cvalues = [];
    var cindex = [];
    var cptr = [];
    var c = b2.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [arows, bcolumns],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
    for (var jb = 0; jb < bcolumns; jb++) {
      cptr[jb] = cindex.length;
      var kb0 = bptr[jb];
      var kb1 = bptr[jb + 1];
      if (kb1 > kb0) {
        var last = 0;
        for (var i2 = 0; i2 < arows; i2++) {
          var mark = i2 + 1;
          var cij = void 0;
          for (var kb = kb0; kb < kb1; kb++) {
            var ib = bindex[kb];
            if (last !== mark) {
              cij = mf(adata[i2][ib], bvalues[kb]);
              last = mark;
            } else {
              cij = af(cij, mf(adata[i2][ib], bvalues[kb]));
            }
          }
          if (last === mark && !eq(cij, zero)) {
            cindex.push(i2);
            cvalues.push(cij);
          }
        }
      }
    }
    cptr[bcolumns] = cindex.length;
    return c;
  }
  function _multiplySparseMatrixVector(a, b2) {
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var adt = a._datatype || a._data === void 0 ? a._datatype : a.getDataType();
    if (!avalues) {
      throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");
    }
    var bdata = b2._data;
    var bdt = b2._datatype || b2.getDataType();
    var arows = a._size[0];
    var brows = b2._size[0];
    var cvalues = [];
    var cindex = [];
    var cptr = [];
    var dt;
    var af = addScalar2;
    var mf = multiplyScalar2;
    var eq = equalScalar2;
    var zero = 0;
    if (adt && bdt && adt === bdt && typeof adt === "string" && adt !== "mixed") {
      dt = adt;
      af = typed2.find(addScalar2, [dt, dt]);
      mf = typed2.find(multiplyScalar2, [dt, dt]);
      eq = typed2.find(equalScalar2, [dt, dt]);
      zero = typed2.convert(0, dt);
    }
    var x = [];
    var w = [];
    cptr[0] = 0;
    for (var ib = 0; ib < brows; ib++) {
      var vbi = bdata[ib];
      if (!eq(vbi, zero)) {
        for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {
          var ia = aindex[ka];
          if (!w[ia]) {
            w[ia] = true;
            cindex.push(ia);
            x[ia] = mf(vbi, avalues[ka]);
          } else {
            x[ia] = af(x[ia], mf(vbi, avalues[ka]));
          }
        }
      }
    }
    for (var p1 = cindex.length, p = 0; p < p1; p++) {
      var ic = cindex[p];
      cvalues[p] = x[ic];
    }
    cptr[1] = cindex.length;
    return a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [arows, 1],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
  }
  function _multiplySparseMatrixDenseMatrix(a, b2) {
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var adt = a._datatype || a._data === void 0 ? a._datatype : a.getDataType();
    if (!avalues) {
      throw new Error("Cannot multiply Pattern only Matrix times Dense Matrix");
    }
    var bdata = b2._data;
    var bdt = b2._datatype || b2.getDataType();
    var arows = a._size[0];
    var brows = b2._size[0];
    var bcolumns = b2._size[1];
    var dt;
    var af = addScalar2;
    var mf = multiplyScalar2;
    var eq = equalScalar2;
    var zero = 0;
    if (adt && bdt && adt === bdt && typeof adt === "string" && adt !== "mixed") {
      dt = adt;
      af = typed2.find(addScalar2, [dt, dt]);
      mf = typed2.find(multiplyScalar2, [dt, dt]);
      eq = typed2.find(equalScalar2, [dt, dt]);
      zero = typed2.convert(0, dt);
    }
    var cvalues = [];
    var cindex = [];
    var cptr = [];
    var c = a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [arows, bcolumns],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
    var x = [];
    var w = [];
    for (var jb = 0; jb < bcolumns; jb++) {
      cptr[jb] = cindex.length;
      var mark = jb + 1;
      for (var ib = 0; ib < brows; ib++) {
        var vbij = bdata[ib][jb];
        if (!eq(vbij, zero)) {
          for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {
            var ia = aindex[ka];
            if (w[ia] !== mark) {
              w[ia] = mark;
              cindex.push(ia);
              x[ia] = mf(vbij, avalues[ka]);
            } else {
              x[ia] = af(x[ia], mf(vbij, avalues[ka]));
            }
          }
        }
      }
      for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {
        var ic = cindex[p];
        cvalues[p] = x[ic];
      }
    }
    cptr[bcolumns] = cindex.length;
    return c;
  }
  function _multiplySparseMatrixSparseMatrix(a, b2) {
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var adt = a._datatype || a._data === void 0 ? a._datatype : a.getDataType();
    var bvalues = b2._values;
    var bindex = b2._index;
    var bptr = b2._ptr;
    var bdt = b2._datatype || b2._data === void 0 ? b2._datatype : b2.getDataType();
    var arows = a._size[0];
    var bcolumns = b2._size[1];
    var values = avalues && bvalues;
    var dt;
    var af = addScalar2;
    var mf = multiplyScalar2;
    if (adt && bdt && adt === bdt && typeof adt === "string" && adt !== "mixed") {
      dt = adt;
      af = typed2.find(addScalar2, [dt, dt]);
      mf = typed2.find(multiplyScalar2, [dt, dt]);
    }
    var cvalues = values ? [] : void 0;
    var cindex = [];
    var cptr = [];
    var c = a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [arows, bcolumns],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
    var x = values ? [] : void 0;
    var w = [];
    var ka, ka0, ka1, kb, kb0, kb1, ia, ib;
    for (var jb = 0; jb < bcolumns; jb++) {
      cptr[jb] = cindex.length;
      var mark = jb + 1;
      for (kb0 = bptr[jb], kb1 = bptr[jb + 1], kb = kb0; kb < kb1; kb++) {
        ib = bindex[kb];
        if (values) {
          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {
            ia = aindex[ka];
            if (w[ia] !== mark) {
              w[ia] = mark;
              cindex.push(ia);
              x[ia] = mf(bvalues[kb], avalues[ka]);
            } else {
              x[ia] = af(x[ia], mf(bvalues[kb], avalues[ka]));
            }
          }
        } else {
          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {
            ia = aindex[ka];
            if (w[ia] !== mark) {
              w[ia] = mark;
              cindex.push(ia);
            }
          }
        }
      }
      if (values) {
        for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {
          var ic = cindex[p];
          cvalues[p] = x[ic];
        }
      }
    }
    cptr[bcolumns] = cindex.length;
    return c;
  }
  return typed2(name62, multiplyScalar2, {
    // we extend the signatures of multiplyScalar with signatures dealing with matrices
    "Array, Array": typed2.referTo("Matrix, Matrix", (selfMM) => (x, y) => {
      _validateMatrixDimensions(arraySize(x), arraySize(y));
      var m = selfMM(matrix2(x), matrix2(y));
      return isMatrix(m) ? m.valueOf() : m;
    }),
    "Matrix, Matrix": function MatrixMatrix(x, y) {
      var xsize = x.size();
      var ysize = y.size();
      _validateMatrixDimensions(xsize, ysize);
      if (xsize.length === 1) {
        if (ysize.length === 1) {
          return _multiplyVectorVector(x, y, xsize[0]);
        }
        return _multiplyVectorMatrix(x, y);
      }
      if (ysize.length === 1) {
        return _multiplyMatrixVector(x, y);
      }
      return _multiplyMatrixMatrix(x, y);
    },
    "Matrix, Array": typed2.referTo("Matrix,Matrix", (selfMM) => (x, y) => selfMM(x, matrix2(y))),
    "Array, Matrix": typed2.referToSelf((self2) => (x, y) => {
      return self2(matrix2(x, y.storage()), y);
    }),
    "SparseMatrix, any": function SparseMatrixAny(x, y) {
      return matAlgo11xS0s(x, y, multiplyScalar2, false);
    },
    "DenseMatrix, any": function DenseMatrixAny(x, y) {
      return matAlgo14xDs(x, y, multiplyScalar2, false);
    },
    "any, SparseMatrix": function anySparseMatrix(x, y) {
      return matAlgo11xS0s(y, x, multiplyScalar2, true);
    },
    "any, DenseMatrix": function anyDenseMatrix(x, y) {
      return matAlgo14xDs(y, x, multiplyScalar2, true);
    },
    "Array, any": function ArrayAny(x, y) {
      return matAlgo14xDs(matrix2(x), y, multiplyScalar2, false).valueOf();
    },
    "any, Array": function anyArray(x, y) {
      return matAlgo14xDs(matrix2(y), x, multiplyScalar2, true).valueOf();
    },
    "any, any": multiplyScalar2,
    "any, any, ...any": typed2.referToSelf((self2) => (x, y, rest) => {
      var result = self2(x, y);
      for (var i2 = 0; i2 < rest.length; i2++) {
        result = self2(result, rest[i2]);
      }
      return result;
    })
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/nthRoot.js
var name63 = "nthRoot";
var dependencies63 = ["typed", "matrix", "equalScalar", "BigNumber", "concat"];
var createNthRoot = factory(name63, dependencies63, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    BigNumber: _BigNumber,
    concat: concat4
  } = _ref;
  var matAlgo01xDSid = createMatAlgo01xDSid({
    typed: typed2
  });
  var matAlgo02xDS0 = createMatAlgo02xDS0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo06xS0S0 = createMatAlgo06xS0S0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  function complexErr() {
    throw new Error("Complex number not supported in function nthRoot. Use nthRoots instead.");
  }
  return typed2(name63, {
    number: nthRootNumber,
    "number, number": nthRootNumber,
    BigNumber: (x) => _bigNthRoot(x, new _BigNumber(2)),
    "BigNumber, BigNumber": _bigNthRoot,
    Complex: complexErr,
    "Complex, number": complexErr,
    Array: typed2.referTo("DenseMatrix,number", (selfDn) => (x) => selfDn(matrix2(x), 2).valueOf()),
    DenseMatrix: typed2.referTo("DenseMatrix,number", (selfDn) => (x) => selfDn(x, 2)),
    SparseMatrix: typed2.referTo("SparseMatrix,number", (selfSn) => (x) => selfSn(x, 2)),
    "SparseMatrix, SparseMatrix": typed2.referToSelf((self2) => (x, y) => {
      if (y.density() === 1) {
        return matAlgo06xS0S0(x, y, self2);
      } else {
        throw new Error("Root must be non-zero");
      }
    }),
    "DenseMatrix, SparseMatrix": typed2.referToSelf((self2) => (x, y) => {
      if (y.density() === 1) {
        return matAlgo01xDSid(x, y, self2, false);
      } else {
        throw new Error("Root must be non-zero");
      }
    }),
    "Array, SparseMatrix": typed2.referTo("DenseMatrix,SparseMatrix", (selfDS) => (x, y) => selfDS(matrix2(x), y)),
    "number | BigNumber, SparseMatrix": typed2.referToSelf((self2) => (x, y) => {
      if (y.density() === 1) {
        return matAlgo11xS0s(y, x, self2, true);
      } else {
        throw new Error("Root must be non-zero");
      }
    })
  }, matrixAlgorithmSuite({
    scalar: "number | BigNumber",
    SD: matAlgo02xDS0,
    Ss: matAlgo11xS0s,
    sS: false
  }));
  function _bigNthRoot(a, root) {
    var precision = _BigNumber.precision;
    var Big = _BigNumber.clone({
      precision: precision + 2
    });
    var zero = new _BigNumber(0);
    var one = new Big(1);
    var inv2 = root.isNegative();
    if (inv2) {
      root = root.neg();
    }
    if (root.isZero()) {
      throw new Error("Root must be non-zero");
    }
    if (a.isNegative() && !root.abs().mod(2).equals(1)) {
      throw new Error("Root must be odd when a is negative.");
    }
    if (a.isZero()) {
      return inv2 ? new Big(Infinity) : 0;
    }
    if (!a.isFinite()) {
      return inv2 ? zero : a;
    }
    var x = a.abs().pow(one.div(root));
    x = a.isNeg() ? x.neg() : x;
    return new _BigNumber((inv2 ? one.div(x) : x).toPrecision(precision));
  }
});
var createNthRootNumber = factory(name63, ["typed"], (_ref2) => {
  var {
    typed: typed2
  } = _ref2;
  return typed2(name63, {
    number: nthRootNumber,
    "number, number": nthRootNumber
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/sign.js
var name64 = "sign";
var dependencies64 = ["typed", "BigNumber", "Fraction", "complex"];
var createSign = factory(name64, dependencies64, (_ref) => {
  var {
    typed: typed2,
    BigNumber: _BigNumber,
    complex: complex2,
    Fraction: _Fraction
  } = _ref;
  return typed2(name64, {
    number: signNumber,
    Complex: function Complex3(x) {
      return x.im === 0 ? complex2(signNumber(x.re)) : x.sign();
    },
    BigNumber: function BigNumber2(x) {
      return new _BigNumber(x.cmp(0));
    },
    Fraction: function Fraction3(x) {
      return new _Fraction(x.s, 1);
    },
    // deep map collection, skip zeros since sign(0) = 0
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2, true)),
    Unit: typed2.referToSelf((self2) => (x) => {
      if (!x._isDerived() && x.units[0].unit.offset !== 0) {
        throw new TypeError("sign is ambiguous for units with offset");
      }
      return typed2.find(self2, x.valueType())(x.value);
    })
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/sqrt.js
var name65 = "sqrt";
var dependencies65 = ["config", "typed", "Complex"];
var createSqrt = factory(name65, dependencies65, (_ref) => {
  var {
    config: config4,
    typed: typed2,
    Complex: Complex3
  } = _ref;
  return typed2("sqrt", {
    number: _sqrtNumber,
    Complex: function Complex4(x) {
      return x.sqrt();
    },
    BigNumber: function BigNumber2(x) {
      if (!x.isNegative() || config4.predictable) {
        return x.sqrt();
      } else {
        return _sqrtNumber(x.toNumber());
      }
    },
    Unit: function Unit2(x) {
      return x.pow(0.5);
    }
  });
  function _sqrtNumber(x) {
    if (isNaN(x)) {
      return NaN;
    } else if (x >= 0 || config4.predictable) {
      return Math.sqrt(x);
    } else {
      return new Complex3(x, 0).sqrt();
    }
  }
});

// node_modules/mathjs/lib/esm/function/arithmetic/square.js
var name66 = "square";
var dependencies66 = ["typed"];
var createSquare = factory(name66, dependencies66, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name66, {
    number: squareNumber,
    Complex: function Complex3(x) {
      return x.mul(x);
    },
    BigNumber: function BigNumber2(x) {
      return x.times(x);
    },
    Fraction: function Fraction3(x) {
      return x.mul(x);
    },
    Unit: function Unit2(x) {
      return x.pow(2);
    }
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/subtract.js
var name67 = "subtract";
var dependencies67 = ["typed", "matrix", "equalScalar", "subtractScalar", "unaryMinus", "DenseMatrix", "concat"];
var createSubtract = factory(name67, dependencies67, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    subtractScalar: subtractScalar2,
    unaryMinus: unaryMinus2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo01xDSid = createMatAlgo01xDSid({
    typed: typed2
  });
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo05xSfSf = createMatAlgo05xSfSf({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo10xSids = createMatAlgo10xSids({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name67, {
    "any, any": subtractScalar2
  }, matrixAlgorithmSuite({
    elop: subtractScalar2,
    SS: matAlgo05xSfSf,
    DS: matAlgo01xDSid,
    SD: matAlgo03xDSf,
    Ss: matAlgo12xSfs,
    sS: matAlgo10xSids
  }));
});

// node_modules/mathjs/lib/esm/function/arithmetic/xgcd.js
var name68 = "xgcd";
var dependencies68 = ["typed", "config", "matrix", "BigNumber"];
var createXgcd = factory(name68, dependencies68, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    matrix: matrix2,
    BigNumber: BigNumber2
  } = _ref;
  return typed2(name68, {
    "number, number": function numberNumber(a, b2) {
      var res = xgcdNumber(a, b2);
      return config4.matrix === "Array" ? res : matrix2(res);
    },
    "BigNumber, BigNumber": _xgcdBigNumber
    // TODO: implement support for Fraction
  });
  function _xgcdBigNumber(a, b2) {
    var t;
    var q;
    var r;
    var zero = new BigNumber2(0);
    var one = new BigNumber2(1);
    var x = zero;
    var lastx = one;
    var y = one;
    var lasty = zero;
    if (!a.isInt() || !b2.isInt()) {
      throw new Error("Parameters in function xgcd must be integer numbers");
    }
    while (!b2.isZero()) {
      q = a.div(b2).floor();
      r = a.mod(b2);
      t = x;
      x = lastx.minus(q.times(x));
      lastx = t;
      t = y;
      y = lasty.minus(q.times(y));
      lasty = t;
      a = b2;
      b2 = r;
    }
    var res;
    if (a.lt(zero)) {
      res = [a.neg(), lastx.neg(), lasty.neg()];
    } else {
      res = [a, !a.isZero() ? lastx : 0, lasty];
    }
    return config4.matrix === "Array" ? res : matrix2(res);
  }
});

// node_modules/mathjs/lib/esm/function/arithmetic/invmod.js
var name69 = "invmod";
var dependencies69 = ["typed", "config", "BigNumber", "xgcd", "equal", "smaller", "mod", "add", "isInteger"];
var createInvmod = factory(name69, dependencies69, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    BigNumber: BigNumber2,
    xgcd: xgcd2,
    equal: equal2,
    smaller: smaller2,
    mod: mod3,
    add: add4,
    isInteger: isInteger3
  } = _ref;
  return typed2(name69, {
    "number, number": invmod2,
    "BigNumber, BigNumber": invmod2
  });
  function invmod2(a, b2) {
    if (!isInteger3(a) || !isInteger3(b2)) throw new Error("Parameters in function invmod must be integer numbers");
    a = mod3(a, b2);
    if (equal2(b2, 0)) throw new Error("Divisor must be non zero");
    var res = xgcd2(a, b2);
    res = res.valueOf();
    var [gcd2, inv2] = res;
    if (!equal2(gcd2, BigNumber2(1))) return NaN;
    inv2 = mod3(inv2, b2);
    if (smaller2(inv2, BigNumber2(0))) inv2 = add4(inv2, b2);
    return inv2;
  }
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo09xS0Sf.js
var name70 = "matAlgo09xS0Sf";
var dependencies70 = ["typed", "equalScalar"];
var createMatAlgo09xS0Sf = factory(name70, dependencies70, (_ref) => {
  var {
    typed: typed2,
    equalScalar: equalScalar2
  } = _ref;
  return function matAlgo09xS0Sf(a, b2, callback) {
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var asize = a._size;
    var adt = a._datatype || a._data === void 0 ? a._datatype : a.getDataType();
    var bvalues = b2._values;
    var bindex = b2._index;
    var bptr = b2._ptr;
    var bsize = b2._size;
    var bdt = b2._datatype || b2._data === void 0 ? b2._datatype : b2.getDataType();
    if (asize.length !== bsize.length) {
      throw new DimensionError(asize.length, bsize.length);
    }
    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError("Dimension mismatch. Matrix A (" + asize + ") must match Matrix B (" + bsize + ")");
    }
    var rows = asize[0];
    var columns = asize[1];
    var dt;
    var eq = equalScalar2;
    var zero = 0;
    var cf = callback;
    if (typeof adt === "string" && adt === bdt && adt !== "mixed") {
      dt = adt;
      eq = typed2.find(equalScalar2, [dt, dt]);
      zero = typed2.convert(0, dt);
      cf = typed2.find(callback, [dt, dt]);
    }
    var cvalues = avalues && bvalues ? [] : void 0;
    var cindex = [];
    var cptr = [];
    var x = cvalues ? [] : void 0;
    var w = [];
    var i2, j, k, k0, k1;
    for (j = 0; j < columns; j++) {
      cptr[j] = cindex.length;
      var mark = j + 1;
      if (x) {
        for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {
          i2 = bindex[k];
          w[i2] = mark;
          x[i2] = bvalues[k];
        }
      }
      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
        i2 = aindex[k];
        if (x) {
          var vb = w[i2] === mark ? x[i2] : zero;
          var vc = cf(avalues[k], vb);
          if (!eq(vc, zero)) {
            cindex.push(i2);
            cvalues.push(vc);
          }
        } else {
          cindex.push(i2);
        }
      }
    }
    cptr[columns] = cindex.length;
    return a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
  };
});

// node_modules/mathjs/lib/esm/function/arithmetic/dotMultiply.js
var name71 = "dotMultiply";
var dependencies71 = ["typed", "matrix", "equalScalar", "multiplyScalar", "concat"];
var createDotMultiply = factory(name71, dependencies71, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    multiplyScalar: multiplyScalar2,
    concat: concat4
  } = _ref;
  var matAlgo02xDS0 = createMatAlgo02xDS0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo09xS0Sf = createMatAlgo09xS0Sf({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name71, matrixAlgorithmSuite({
    elop: multiplyScalar2,
    SS: matAlgo09xS0Sf,
    DS: matAlgo02xDS0,
    Ss: matAlgo11xS0s
  }));
});

// node_modules/mathjs/lib/esm/utils/bignumber/bitwise.js
function bitAndBigNumber(x, y) {
  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {
    throw new Error("Integers expected in function bitAnd");
  }
  var BigNumber2 = x.constructor;
  if (x.isNaN() || y.isNaN()) {
    return new BigNumber2(NaN);
  }
  if (x.isZero() || y.eq(-1) || x.eq(y)) {
    return x;
  }
  if (y.isZero() || x.eq(-1)) {
    return y;
  }
  if (!x.isFinite() || !y.isFinite()) {
    if (!x.isFinite() && !y.isFinite()) {
      if (x.isNegative() === y.isNegative()) {
        return x;
      }
      return new BigNumber2(0);
    }
    if (!x.isFinite()) {
      if (y.isNegative()) {
        return x;
      }
      if (x.isNegative()) {
        return new BigNumber2(0);
      }
      return y;
    }
    if (!y.isFinite()) {
      if (x.isNegative()) {
        return y;
      }
      if (y.isNegative()) {
        return new BigNumber2(0);
      }
      return x;
    }
  }
  return bitwise(x, y, function(a, b2) {
    return a & b2;
  });
}
function bitNotBigNumber(x) {
  if (x.isFinite() && !x.isInteger()) {
    throw new Error("Integer expected in function bitNot");
  }
  var BigNumber2 = x.constructor;
  var prevPrec = BigNumber2.precision;
  BigNumber2.config({
    precision: 1e9
  });
  var result = x.plus(new BigNumber2(1));
  result.s = -result.s || null;
  BigNumber2.config({
    precision: prevPrec
  });
  return result;
}
function bitOrBigNumber(x, y) {
  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {
    throw new Error("Integers expected in function bitOr");
  }
  var BigNumber2 = x.constructor;
  if (x.isNaN() || y.isNaN()) {
    return new BigNumber2(NaN);
  }
  var negOne = new BigNumber2(-1);
  if (x.isZero() || y.eq(negOne) || x.eq(y)) {
    return y;
  }
  if (y.isZero() || x.eq(negOne)) {
    return x;
  }
  if (!x.isFinite() || !y.isFinite()) {
    if (!x.isFinite() && !x.isNegative() && y.isNegative() || x.isNegative() && !y.isNegative() && !y.isFinite()) {
      return negOne;
    }
    if (x.isNegative() && y.isNegative()) {
      return x.isFinite() ? x : y;
    }
    return x.isFinite() ? y : x;
  }
  return bitwise(x, y, function(a, b2) {
    return a | b2;
  });
}
function bitwise(x, y, func) {
  var BigNumber2 = x.constructor;
  var xBits, yBits;
  var xSign = +(x.s < 0);
  var ySign = +(y.s < 0);
  if (xSign) {
    xBits = decCoefficientToBinaryString(bitNotBigNumber(x));
    for (var i2 = 0; i2 < xBits.length; ++i2) {
      xBits[i2] ^= 1;
    }
  } else {
    xBits = decCoefficientToBinaryString(x);
  }
  if (ySign) {
    yBits = decCoefficientToBinaryString(bitNotBigNumber(y));
    for (var _i = 0; _i < yBits.length; ++_i) {
      yBits[_i] ^= 1;
    }
  } else {
    yBits = decCoefficientToBinaryString(y);
  }
  var minBits, maxBits, minSign;
  if (xBits.length <= yBits.length) {
    minBits = xBits;
    maxBits = yBits;
    minSign = xSign;
  } else {
    minBits = yBits;
    maxBits = xBits;
    minSign = ySign;
  }
  var shortLen = minBits.length;
  var longLen = maxBits.length;
  var expFuncVal = func(xSign, ySign) ^ 1;
  var outVal = new BigNumber2(expFuncVal ^ 1);
  var twoPower = new BigNumber2(1);
  var two = new BigNumber2(2);
  var prevPrec = BigNumber2.precision;
  BigNumber2.config({
    precision: 1e9
  });
  while (shortLen > 0) {
    if (func(minBits[--shortLen], maxBits[--longLen]) === expFuncVal) {
      outVal = outVal.plus(twoPower);
    }
    twoPower = twoPower.times(two);
  }
  while (longLen > 0) {
    if (func(minSign, maxBits[--longLen]) === expFuncVal) {
      outVal = outVal.plus(twoPower);
    }
    twoPower = twoPower.times(two);
  }
  BigNumber2.config({
    precision: prevPrec
  });
  if (expFuncVal === 0) {
    outVal.s = -outVal.s;
  }
  return outVal;
}
function decCoefficientToBinaryString(x) {
  var a = x.d;
  var r = a[0] + "";
  for (var i2 = 1; i2 < a.length; ++i2) {
    var s = a[i2] + "";
    for (var z = 7 - s.length; z--; ) {
      s = "0" + s;
    }
    r += s;
  }
  var j = r.length;
  while (r.charAt(j) === "0") {
    j--;
  }
  var xe = x.e;
  var str = r.slice(0, j + 1 || 1);
  var strL = str.length;
  if (xe > 0) {
    if (++xe > strL) {
      xe -= strL;
      while (xe--) {
        str += "0";
      }
    } else if (xe < strL) {
      str = str.slice(0, xe) + "." + str.slice(xe);
    }
  }
  var arr = [0];
  for (var _i2 = 0; _i2 < str.length; ) {
    var arrL = arr.length;
    while (arrL--) {
      arr[arrL] *= 10;
    }
    arr[0] += parseInt(str.charAt(_i2++));
    for (var _j = 0; _j < arr.length; ++_j) {
      if (arr[_j] > 1) {
        if (arr[_j + 1] === null || arr[_j + 1] === void 0) {
          arr[_j + 1] = 0;
        }
        arr[_j + 1] += arr[_j] >> 1;
        arr[_j] &= 1;
      }
    }
  }
  return arr.reverse();
}
function bitXor(x, y) {
  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {
    throw new Error("Integers expected in function bitXor");
  }
  var BigNumber2 = x.constructor;
  if (x.isNaN() || y.isNaN()) {
    return new BigNumber2(NaN);
  }
  if (x.isZero()) {
    return y;
  }
  if (y.isZero()) {
    return x;
  }
  if (x.eq(y)) {
    return new BigNumber2(0);
  }
  var negOne = new BigNumber2(-1);
  if (x.eq(negOne)) {
    return bitNotBigNumber(y);
  }
  if (y.eq(negOne)) {
    return bitNotBigNumber(x);
  }
  if (!x.isFinite() || !y.isFinite()) {
    if (!x.isFinite() && !y.isFinite()) {
      return negOne;
    }
    return new BigNumber2(x.isNegative() === y.isNegative() ? Infinity : -Infinity);
  }
  return bitwise(x, y, function(a, b2) {
    return a ^ b2;
  });
}
function leftShiftBigNumber(x, y) {
  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {
    throw new Error("Integers expected in function leftShift");
  }
  var BigNumber2 = x.constructor;
  if (x.isNaN() || y.isNaN() || y.isNegative() && !y.isZero()) {
    return new BigNumber2(NaN);
  }
  if (x.isZero() || y.isZero()) {
    return x;
  }
  if (!x.isFinite() && !y.isFinite()) {
    return new BigNumber2(NaN);
  }
  if (y.lt(55)) {
    return x.times(Math.pow(2, y.toNumber()) + "");
  }
  return x.times(new BigNumber2(2).pow(y));
}
function rightArithShiftBigNumber(x, y) {
  if (x.isFinite() && !x.isInteger() || y.isFinite() && !y.isInteger()) {
    throw new Error("Integers expected in function rightArithShift");
  }
  var BigNumber2 = x.constructor;
  if (x.isNaN() || y.isNaN() || y.isNegative() && !y.isZero()) {
    return new BigNumber2(NaN);
  }
  if (x.isZero() || y.isZero()) {
    return x;
  }
  if (!y.isFinite()) {
    if (x.isNegative()) {
      return new BigNumber2(-1);
    }
    if (!x.isFinite()) {
      return new BigNumber2(NaN);
    }
    return new BigNumber2(0);
  }
  if (y.lt(55)) {
    return x.div(Math.pow(2, y.toNumber()) + "").floor();
  }
  return x.div(new BigNumber2(2).pow(y)).floor();
}

// node_modules/mathjs/lib/esm/function/bitwise/bitAnd.js
var name72 = "bitAnd";
var dependencies72 = ["typed", "matrix", "equalScalar", "concat"];
var createBitAnd = factory(name72, dependencies72, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    concat: concat4
  } = _ref;
  var matAlgo02xDS0 = createMatAlgo02xDS0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo06xS0S0 = createMatAlgo06xS0S0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name72, {
    "number, number": bitAndNumber,
    "BigNumber, BigNumber": bitAndBigNumber
  }, matrixAlgorithmSuite({
    SS: matAlgo06xS0S0,
    DS: matAlgo02xDS0,
    Ss: matAlgo11xS0s
  }));
});

// node_modules/mathjs/lib/esm/function/bitwise/bitNot.js
var name73 = "bitNot";
var dependencies73 = ["typed"];
var createBitNot = factory(name73, dependencies73, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name73, {
    number: bitNotNumber,
    BigNumber: bitNotBigNumber,
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/bitwise/bitOr.js
var name74 = "bitOr";
var dependencies74 = ["typed", "matrix", "equalScalar", "DenseMatrix", "concat"];
var createBitOr = factory(name74, dependencies74, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo01xDSid = createMatAlgo01xDSid({
    typed: typed2
  });
  var matAlgo04xSidSid = createMatAlgo04xSidSid({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo10xSids = createMatAlgo10xSids({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name74, {
    "number, number": bitOrNumber,
    "BigNumber, BigNumber": bitOrBigNumber
  }, matrixAlgorithmSuite({
    SS: matAlgo04xSidSid,
    DS: matAlgo01xDSid,
    Ss: matAlgo10xSids
  }));
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo07xSSf.js
var name75 = "matAlgo07xSSf";
var dependencies75 = ["typed", "DenseMatrix"];
var createMatAlgo07xSSf = factory(name75, dependencies75, (_ref) => {
  var {
    typed: typed2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  return function matAlgo07xSSf(a, b2, callback) {
    var asize = a._size;
    var adt = a._datatype || a._data === void 0 ? a._datatype : a.getDataType();
    var bsize = b2._size;
    var bdt = b2._datatype || b2._data === void 0 ? b2._datatype : b2.getDataType();
    if (asize.length !== bsize.length) {
      throw new DimensionError(asize.length, bsize.length);
    }
    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError("Dimension mismatch. Matrix A (" + asize + ") must match Matrix B (" + bsize + ")");
    }
    var rows = asize[0];
    var columns = asize[1];
    var dt;
    var zero = 0;
    var cf = callback;
    if (typeof adt === "string" && adt === bdt && adt !== "mixed") {
      dt = adt;
      zero = typed2.convert(0, dt);
      cf = typed2.find(callback, [dt, dt]);
    }
    var i2, j;
    var cdata = [];
    for (i2 = 0; i2 < rows; i2++) {
      cdata[i2] = [];
    }
    var xa = [];
    var xb = [];
    var wa = [];
    var wb = [];
    for (j = 0; j < columns; j++) {
      var mark = j + 1;
      _scatter(a, j, wa, xa, mark);
      _scatter(b2, j, wb, xb, mark);
      for (i2 = 0; i2 < rows; i2++) {
        var va = wa[i2] === mark ? xa[i2] : zero;
        var vb = wb[i2] === mark ? xb[i2] : zero;
        cdata[i2][j] = cf(va, vb);
      }
    }
    return new DenseMatrix2({
      data: cdata,
      size: [rows, columns],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
  };
  function _scatter(m, j, w, x, mark) {
    var values = m._values;
    var index2 = m._index;
    var ptr = m._ptr;
    for (var k = ptr[j], k1 = ptr[j + 1]; k < k1; k++) {
      var i2 = index2[k];
      w[i2] = mark;
      x[i2] = values[k];
    }
  }
});

// node_modules/mathjs/lib/esm/function/bitwise/bitXor.js
var name76 = "bitXor";
var dependencies76 = ["typed", "matrix", "DenseMatrix", "concat"];
var createBitXor = factory(name76, dependencies76, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo07xSSf = createMatAlgo07xSSf({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name76, {
    "number, number": bitXorNumber,
    "BigNumber, BigNumber": bitXor
  }, matrixAlgorithmSuite({
    SS: matAlgo07xSSf,
    DS: matAlgo03xDSf,
    Ss: matAlgo12xSfs
  }));
});

// node_modules/mathjs/lib/esm/function/complex/arg.js
var name77 = "arg";
var dependencies77 = ["typed"];
var createArg = factory(name77, dependencies77, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name77, {
    number: function number2(x) {
      return Math.atan2(0, x);
    },
    BigNumber: function BigNumber2(x) {
      return x.constructor.atan2(0, x);
    },
    Complex: function Complex3(x) {
      return x.arg();
    },
    // TODO: implement BigNumber support for function arg
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/complex/conj.js
var name78 = "conj";
var dependencies78 = ["typed"];
var createConj = factory(name78, dependencies78, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name78, {
    "number | BigNumber | Fraction": (x) => x,
    Complex: (x) => x.conjugate(),
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/complex/im.js
var name79 = "im";
var dependencies79 = ["typed"];
var createIm = factory(name79, dependencies79, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name79, {
    number: () => 0,
    "BigNumber | Fraction": (x) => x.mul(0),
    Complex: (x) => x.im,
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/complex/re.js
var name80 = "re";
var dependencies80 = ["typed"];
var createRe = factory(name80, dependencies80, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name80, {
    "number | BigNumber | Fraction": (x) => x,
    Complex: (x) => x.re,
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/logical/not.js
var name81 = "not";
var dependencies81 = ["typed"];
var createNot = factory(name81, dependencies81, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name81, {
    "null | undefined": () => true,
    number: notNumber,
    Complex: function Complex3(x) {
      return x.re === 0 && x.im === 0;
    },
    BigNumber: function BigNumber2(x) {
      return x.isZero() || x.isNaN();
    },
    Unit: typed2.referToSelf((self2) => (x) => typed2.find(self2, x.valueType())(x.value)),
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/logical/or.js
var name82 = "or";
var dependencies82 = ["typed", "matrix", "equalScalar", "DenseMatrix", "concat"];
var createOr = factory(name82, dependencies82, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo05xSfSf = createMatAlgo05xSfSf({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name82, {
    "number, number": orNumber,
    "Complex, Complex": function ComplexComplex(x, y) {
      return x.re !== 0 || x.im !== 0 || y.re !== 0 || y.im !== 0;
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return !x.isZero() && !x.isNaN() || !y.isZero() && !y.isNaN();
    },
    "Unit, Unit": typed2.referToSelf((self2) => (x, y) => self2(x.value || 0, y.value || 0))
  }, matrixAlgorithmSuite({
    SS: matAlgo05xSfSf,
    DS: matAlgo03xDSf,
    Ss: matAlgo12xSfs
  }));
});

// node_modules/mathjs/lib/esm/function/logical/xor.js
var name83 = "xor";
var dependencies83 = ["typed", "matrix", "DenseMatrix", "concat"];
var createXor = factory(name83, dependencies83, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo07xSSf = createMatAlgo07xSSf({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name83, {
    "number, number": xorNumber,
    "Complex, Complex": function ComplexComplex(x, y) {
      return (x.re !== 0 || x.im !== 0) !== (y.re !== 0 || y.im !== 0);
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return (!x.isZero() && !x.isNaN()) !== (!y.isZero() && !y.isNaN());
    },
    "Unit, Unit": typed2.referToSelf((self2) => (x, y) => self2(x.value || 0, y.value || 0))
  }, matrixAlgorithmSuite({
    SS: matAlgo07xSSf,
    DS: matAlgo03xDSf,
    Ss: matAlgo12xSfs
  }));
});

// node_modules/mathjs/lib/esm/function/matrix/concat.js
var name84 = "concat";
var dependencies84 = ["typed", "matrix", "isInteger"];
var createConcat = factory(name84, dependencies84, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    isInteger: isInteger3
  } = _ref;
  return typed2(name84, {
    // TODO: change signature to '...Array | Matrix, dim?' when supported
    "...Array | Matrix | number | BigNumber": function ArrayMatrixNumberBigNumber(args) {
      var i2;
      var len = args.length;
      var dim = -1;
      var prevDim;
      var asMatrix = false;
      var matrices = [];
      for (i2 = 0; i2 < len; i2++) {
        var arg2 = args[i2];
        if (isMatrix(arg2)) {
          asMatrix = true;
        }
        if (isNumber(arg2) || isBigNumber(arg2)) {
          if (i2 !== len - 1) {
            throw new Error("Dimension must be specified as last argument");
          }
          prevDim = dim;
          dim = arg2.valueOf();
          if (!isInteger3(dim)) {
            throw new TypeError("Integer number expected for dimension");
          }
          if (dim < 0 || i2 > 0 && dim > prevDim) {
            throw new IndexError(dim, prevDim + 1);
          }
        } else {
          var m = clone(arg2).valueOf();
          var size2 = arraySize(m);
          matrices[i2] = m;
          prevDim = dim;
          dim = size2.length - 1;
          if (i2 > 0 && dim !== prevDim) {
            throw new DimensionError(prevDim + 1, dim + 1);
          }
        }
      }
      if (matrices.length === 0) {
        throw new SyntaxError("At least one matrix expected");
      }
      var res = matrices.shift();
      while (matrices.length) {
        res = concat(res, matrices.shift(), dim);
      }
      return asMatrix ? matrix2(res) : res;
    },
    "...string": function string2(args) {
      return args.join("");
    }
  });
});

// node_modules/mathjs/lib/esm/function/matrix/column.js
var name85 = "column";
var dependencies85 = ["typed", "Index", "matrix", "range"];
var createColumn = factory(name85, dependencies85, (_ref) => {
  var {
    typed: typed2,
    Index: Index2,
    matrix: matrix2,
    range: range3
  } = _ref;
  return typed2(name85, {
    "Matrix, number": _column,
    "Array, number": function ArrayNumber(value, column2) {
      return _column(matrix2(clone(value)), column2).valueOf();
    }
  });
  function _column(value, column2) {
    if (value.size().length !== 2) {
      throw new Error("Only two dimensional matrix is supported");
    }
    validateIndex(column2, value.size()[1]);
    var rowRange = range3(0, value.size()[0]);
    var index2 = new Index2(rowRange, column2);
    var result = value.subset(index2);
    return isMatrix(result) ? result : matrix2([[result]]);
  }
});

// node_modules/mathjs/lib/esm/function/matrix/count.js
var name86 = "count";
var dependencies86 = ["typed", "size", "prod"];
var createCount = factory(name86, dependencies86, (_ref) => {
  var {
    typed: typed2,
    size: size2,
    prod: prod2
  } = _ref;
  return typed2(name86, {
    string: function string2(x) {
      return x.length;
    },
    "Matrix | Array": function MatrixArray(x) {
      return prod2(size2(x));
    }
  });
});

// node_modules/mathjs/lib/esm/function/matrix/cross.js
var name87 = "cross";
var dependencies87 = ["typed", "matrix", "subtract", "multiply"];
var createCross = factory(name87, dependencies87, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    subtract: subtract2,
    multiply: multiply2
  } = _ref;
  return typed2(name87, {
    "Matrix, Matrix": function MatrixMatrix(x, y) {
      return matrix2(_cross(x.toArray(), y.toArray()));
    },
    "Matrix, Array": function MatrixArray(x, y) {
      return matrix2(_cross(x.toArray(), y));
    },
    "Array, Matrix": function ArrayMatrix(x, y) {
      return matrix2(_cross(x, y.toArray()));
    },
    "Array, Array": _cross
  });
  function _cross(x, y) {
    var highestDimension = Math.max(arraySize(x).length, arraySize(y).length);
    x = squeeze(x);
    y = squeeze(y);
    var xSize = arraySize(x);
    var ySize = arraySize(y);
    if (xSize.length !== 1 || ySize.length !== 1 || xSize[0] !== 3 || ySize[0] !== 3) {
      throw new RangeError("Vectors with length 3 expected (Size A = [" + xSize.join(", ") + "], B = [" + ySize.join(", ") + "])");
    }
    var product3 = [subtract2(multiply2(x[1], y[2]), multiply2(x[2], y[1])), subtract2(multiply2(x[2], y[0]), multiply2(x[0], y[2])), subtract2(multiply2(x[0], y[1]), multiply2(x[1], y[0]))];
    if (highestDimension > 1) {
      return [product3];
    } else {
      return product3;
    }
  }
});

// node_modules/mathjs/lib/esm/function/matrix/diag.js
var name88 = "diag";
var dependencies88 = ["typed", "matrix", "DenseMatrix", "SparseMatrix"];
var createDiag = factory(name88, dependencies88, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    DenseMatrix: DenseMatrix2,
    SparseMatrix: SparseMatrix2
  } = _ref;
  return typed2(name88, {
    // FIXME: simplify this huge amount of signatures as soon as typed-function supports optional arguments
    Array: function Array2(x) {
      return _diag(x, 0, arraySize(x), null);
    },
    "Array, number": function ArrayNumber(x, k) {
      return _diag(x, k, arraySize(x), null);
    },
    "Array, BigNumber": function ArrayBigNumber(x, k) {
      return _diag(x, k.toNumber(), arraySize(x), null);
    },
    "Array, string": function ArrayString(x, format5) {
      return _diag(x, 0, arraySize(x), format5);
    },
    "Array, number, string": function ArrayNumberString(x, k, format5) {
      return _diag(x, k, arraySize(x), format5);
    },
    "Array, BigNumber, string": function ArrayBigNumberString(x, k, format5) {
      return _diag(x, k.toNumber(), arraySize(x), format5);
    },
    Matrix: function Matrix2(x) {
      return _diag(x, 0, x.size(), x.storage());
    },
    "Matrix, number": function MatrixNumber(x, k) {
      return _diag(x, k, x.size(), x.storage());
    },
    "Matrix, BigNumber": function MatrixBigNumber(x, k) {
      return _diag(x, k.toNumber(), x.size(), x.storage());
    },
    "Matrix, string": function MatrixString(x, format5) {
      return _diag(x, 0, x.size(), format5);
    },
    "Matrix, number, string": function MatrixNumberString(x, k, format5) {
      return _diag(x, k, x.size(), format5);
    },
    "Matrix, BigNumber, string": function MatrixBigNumberString(x, k, format5) {
      return _diag(x, k.toNumber(), x.size(), format5);
    }
  });
  function _diag(x, k, size2, format5) {
    if (!isInteger(k)) {
      throw new TypeError("Second parameter in function diag must be an integer");
    }
    var kSuper = k > 0 ? k : 0;
    var kSub = k < 0 ? -k : 0;
    switch (size2.length) {
      case 1:
        return _createDiagonalMatrix(x, k, format5, size2[0], kSub, kSuper);
      case 2:
        return _getDiagonal(x, k, format5, size2, kSub, kSuper);
    }
    throw new RangeError("Matrix for function diag must be 2 dimensional");
  }
  function _createDiagonalMatrix(x, k, format5, l, kSub, kSuper) {
    var ms = [l + kSub, l + kSuper];
    if (format5 && format5 !== "sparse" && format5 !== "dense") {
      throw new TypeError("Unknown matrix type ".concat(format5, '"'));
    }
    var m = format5 === "sparse" ? SparseMatrix2.diagonal(ms, x, k) : DenseMatrix2.diagonal(ms, x, k);
    return format5 !== null ? m : m.valueOf();
  }
  function _getDiagonal(x, k, format5, s, kSub, kSuper) {
    if (isMatrix(x)) {
      var dm = x.diagonal(k);
      if (format5 !== null) {
        if (format5 !== dm.storage()) {
          return matrix2(dm, format5);
        }
        return dm;
      }
      return dm.valueOf();
    }
    var n = Math.min(s[0] - kSub, s[1] - kSuper);
    var vector = [];
    for (var i2 = 0; i2 < n; i2++) {
      vector[i2] = x[i2 + kSub][i2 + kSuper];
    }
    return format5 !== null ? matrix2(vector) : vector;
  }
});

// node_modules/mathjs/lib/esm/utils/applyCallback.js
function applyCallback(callback, value, index2, array, mappingFnName) {
  if (typed_function_default.isTypedFunction(callback)) {
    var args3 = [value, index2, array];
    var signature3 = typed_function_default.resolve(callback, args3);
    if (signature3) {
      return tryWithArgs(signature3.implementation, args3);
    }
    var args2 = [value, index2];
    var signature2 = typed_function_default.resolve(callback, args2);
    if (signature2) {
      return tryWithArgs(signature2.implementation, args2);
    }
    var args1 = [value];
    var signature1 = typed_function_default.resolve(callback, args1);
    if (signature1) {
      return tryWithArgs(signature1.implementation, args1);
    }
    return tryWithArgs(callback, args3);
  } else {
    return callback(value, index2, array);
  }
  function tryWithArgs(signature4, args) {
    try {
      return signature4.apply(signature4, args);
    } catch (err) {
      var _err$data;
      if (err instanceof TypeError && ((_err$data = err.data) === null || _err$data === void 0 ? void 0 : _err$data.category) === "wrongType") {
        var argsDesc = [];
        argsDesc.push("value: ".concat(typeOf(value)));
        if (args.length >= 2) {
          argsDesc.push("index: ".concat(typeOf(index2)));
        }
        if (args.length >= 3) {
          argsDesc.push("array: ".concat(typeOf(array)));
        }
        throw new TypeError("Function ".concat(mappingFnName, " cannot apply callback arguments ") + "".concat(callback.name, "(").concat(argsDesc.join(", "), ") at index ").concat(JSON.stringify(index2)));
      } else {
        throw new TypeError("Function ".concat(mappingFnName, " cannot apply callback arguments ") + "to function ".concat(callback.name, ": ").concat(err.message));
      }
    }
  }
}

// node_modules/mathjs/lib/esm/function/matrix/filter.js
var name89 = "filter";
var dependencies89 = ["typed"];
var createFilter = factory(name89, dependencies89, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2("filter", {
    "Array, function": _filterCallback,
    "Matrix, function": function MatrixFunction(x, test) {
      return x.create(_filterCallback(x.toArray(), test));
    },
    "Array, RegExp": filterRegExp,
    "Matrix, RegExp": function MatrixRegExp(x, test) {
      return x.create(filterRegExp(x.toArray(), test));
    }
  });
});
function _filterCallback(x, callback) {
  return filter(x, function(value, index2, array) {
    return applyCallback(callback, value, [index2], array, "filter");
  });
}

// node_modules/mathjs/lib/esm/function/matrix/flatten.js
var name90 = "flatten";
var dependencies90 = ["typed", "matrix"];
var createFlatten = factory(name90, dependencies90, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2
  } = _ref;
  return typed2(name90, {
    Array: function Array2(x) {
      return flatten(x);
    },
    Matrix: function Matrix2(x) {
      var flat = flatten(x.toArray());
      return matrix2(flat);
    }
  });
});

// node_modules/mathjs/lib/esm/function/matrix/forEach.js
var name91 = "forEach";
var dependencies91 = ["typed"];
var createForEach = factory(name91, dependencies91, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name91, {
    "Array, function": _forEach,
    "Matrix, function": function MatrixFunction(x, callback) {
      x.forEach(callback);
    }
  });
});
function _forEach(array, callback) {
  var recurse = function recurse2(value, index2) {
    if (Array.isArray(value)) {
      forEach(value, function(child, i2) {
        recurse2(child, index2.concat(i2));
      });
    } else {
      return applyCallback(callback, value, index2, array, "forEach");
    }
  };
  recurse(array, []);
}

// node_modules/mathjs/lib/esm/function/matrix/getMatrixDataType.js
var name92 = "getMatrixDataType";
var dependencies92 = ["typed"];
var createGetMatrixDataType = factory(name92, dependencies92, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name92, {
    Array: function Array2(x) {
      return getArrayDataType(x, typeOf);
    },
    Matrix: function Matrix2(x) {
      return x.getDataType();
    }
  });
});

// node_modules/mathjs/lib/esm/function/matrix/identity.js
var name93 = "identity";
var dependencies93 = ["typed", "config", "matrix", "BigNumber", "DenseMatrix", "SparseMatrix"];
var createIdentity = factory(name93, dependencies93, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    matrix: matrix2,
    BigNumber: BigNumber2,
    DenseMatrix: DenseMatrix2,
    SparseMatrix: SparseMatrix2
  } = _ref;
  return typed2(name93, {
    "": function _() {
      return config4.matrix === "Matrix" ? matrix2([]) : [];
    },
    string: function string2(format5) {
      return matrix2(format5);
    },
    "number | BigNumber": function numberBigNumber(rows) {
      return _identity(rows, rows, config4.matrix === "Matrix" ? "dense" : void 0);
    },
    "number | BigNumber, string": function numberBigNumberString(rows, format5) {
      return _identity(rows, rows, format5);
    },
    "number | BigNumber, number | BigNumber": function numberBigNumberNumberBigNumber(rows, cols) {
      return _identity(rows, cols, config4.matrix === "Matrix" ? "dense" : void 0);
    },
    "number | BigNumber, number | BigNumber, string": function numberBigNumberNumberBigNumberString(rows, cols, format5) {
      return _identity(rows, cols, format5);
    },
    Array: function Array2(size2) {
      return _identityVector(size2);
    },
    "Array, string": function ArrayString(size2, format5) {
      return _identityVector(size2, format5);
    },
    Matrix: function Matrix2(size2) {
      return _identityVector(size2.valueOf(), size2.storage());
    },
    "Matrix, string": function MatrixString(size2, format5) {
      return _identityVector(size2.valueOf(), format5);
    }
  });
  function _identityVector(size2, format5) {
    switch (size2.length) {
      case 0:
        return format5 ? matrix2(format5) : [];
      case 1:
        return _identity(size2[0], size2[0], format5);
      case 2:
        return _identity(size2[0], size2[1], format5);
      default:
        throw new Error("Vector containing two values expected");
    }
  }
  function _identity(rows, cols, format5) {
    var Big = isBigNumber(rows) || isBigNumber(cols) ? BigNumber2 : null;
    if (isBigNumber(rows)) rows = rows.toNumber();
    if (isBigNumber(cols)) cols = cols.toNumber();
    if (!isInteger(rows) || rows < 1) {
      throw new Error("Parameters in function identity must be positive integers");
    }
    if (!isInteger(cols) || cols < 1) {
      throw new Error("Parameters in function identity must be positive integers");
    }
    var one = Big ? new BigNumber2(1) : 1;
    var defaultValue = Big ? new Big(0) : 0;
    var size2 = [rows, cols];
    if (format5) {
      if (format5 === "sparse") {
        return SparseMatrix2.diagonal(size2, one, 0, defaultValue);
      }
      if (format5 === "dense") {
        return DenseMatrix2.diagonal(size2, one, 0, defaultValue);
      }
      throw new TypeError('Unknown matrix type "'.concat(format5, '"'));
    }
    var res = resize([], size2, defaultValue);
    var minimum = rows < cols ? rows : cols;
    for (var d2 = 0; d2 < minimum; d2++) {
      res[d2][d2] = one;
    }
    return res;
  }
});

// node_modules/mathjs/lib/esm/function/matrix/kron.js
var name94 = "kron";
var dependencies94 = ["typed", "matrix", "multiplyScalar"];
var createKron = factory(name94, dependencies94, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    multiplyScalar: multiplyScalar2
  } = _ref;
  return typed2(name94, {
    "Matrix, Matrix": function MatrixMatrix(x, y) {
      return matrix2(_kron(x.toArray(), y.toArray()));
    },
    "Matrix, Array": function MatrixArray(x, y) {
      return matrix2(_kron(x.toArray(), y));
    },
    "Array, Matrix": function ArrayMatrix(x, y) {
      return matrix2(_kron(x, y.toArray()));
    },
    "Array, Array": _kron
  });
  function _kron(a, b2) {
    if (arraySize(a).length === 1) {
      a = [a];
    }
    if (arraySize(b2).length === 1) {
      b2 = [b2];
    }
    if (arraySize(a).length > 2 || arraySize(b2).length > 2) {
      throw new RangeError("Vectors with dimensions greater then 2 are not supported expected (Size x = " + JSON.stringify(a.length) + ", y = " + JSON.stringify(b2.length) + ")");
    }
    var t = [];
    var r = [];
    return a.map(function(a2) {
      return b2.map(function(b3) {
        r = [];
        t.push(r);
        return a2.map(function(y) {
          return b3.map(function(x) {
            return r.push(multiplyScalar2(y, x));
          });
        });
      });
    }) && t;
  }
});

// node_modules/mathjs/lib/esm/function/matrix/map.js
var name95 = "map";
var dependencies95 = ["typed"];
var createMap2 = factory(name95, dependencies95, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name95, {
    "Array, function": _map,
    "Matrix, function": function MatrixFunction(x, callback) {
      return x.map(callback);
    }
  });
});
function _map(array, callback) {
  var recurse = function recurse2(value, index2) {
    if (Array.isArray(value)) {
      return value.map(function(child, i2) {
        return recurse2(child, index2.concat(i2));
      });
    } else {
      return applyCallback(callback, value, index2, array, "map");
    }
  };
  return recurse(array, []);
}

// node_modules/mathjs/lib/esm/function/matrix/diff.js
var name96 = "diff";
var dependencies96 = ["typed", "matrix", "subtract", "number"];
var createDiff = factory(name96, dependencies96, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    subtract: subtract2,
    number: number2
  } = _ref;
  return typed2(name96, {
    "Array | Matrix": function ArrayMatrix(arr) {
      if (isMatrix(arr)) {
        return matrix2(_diff(arr.toArray()));
      } else {
        return _diff(arr);
      }
    },
    "Array | Matrix, number": function ArrayMatrixNumber(arr, dim) {
      if (!isInteger(dim)) throw new RangeError("Dimension must be a whole number");
      if (isMatrix(arr)) {
        return matrix2(_recursive(arr.toArray(), dim));
      } else {
        return _recursive(arr, dim);
      }
    },
    "Array, BigNumber": typed2.referTo("Array,number", (selfAn) => (arr, dim) => selfAn(arr, number2(dim))),
    "Matrix, BigNumber": typed2.referTo("Matrix,number", (selfMn) => (arr, dim) => selfMn(arr, number2(dim)))
  });
  function _recursive(arr, dim) {
    if (isMatrix(arr)) {
      arr = arr.toArray();
    }
    if (!Array.isArray(arr)) {
      throw RangeError("Array/Matrix does not have that many dimensions");
    }
    if (dim > 0) {
      var result = [];
      arr.forEach((element) => {
        result.push(_recursive(element, dim - 1));
      });
      return result;
    } else if (dim === 0) {
      return _diff(arr);
    } else {
      throw RangeError("Cannot have negative dimension");
    }
  }
  function _diff(arr) {
    var result = [];
    var size2 = arr.length;
    for (var i2 = 1; i2 < size2; i2++) {
      result.push(_ElementDiff(arr[i2 - 1], arr[i2]));
    }
    return result;
  }
  function _ElementDiff(obj1, obj2) {
    if (isMatrix(obj1)) obj1 = obj1.toArray();
    if (isMatrix(obj2)) obj2 = obj2.toArray();
    var obj1IsArray = Array.isArray(obj1);
    var obj2IsArray = Array.isArray(obj2);
    if (obj1IsArray && obj2IsArray) {
      return _ArrayDiff(obj1, obj2);
    }
    if (!obj1IsArray && !obj2IsArray) {
      return subtract2(obj2, obj1);
    }
    throw TypeError("Cannot calculate difference between 1 array and 1 non-array");
  }
  function _ArrayDiff(arr1, arr2) {
    if (arr1.length !== arr2.length) {
      throw RangeError("Not all sub-arrays have the same length");
    }
    var result = [];
    var size2 = arr1.length;
    for (var i2 = 0; i2 < size2; i2++) {
      result.push(_ElementDiff(arr1[i2], arr2[i2]));
    }
    return result;
  }
});

// node_modules/mathjs/lib/esm/function/matrix/ones.js
var name97 = "ones";
var dependencies97 = ["typed", "config", "matrix", "BigNumber"];
var createOnes = factory(name97, dependencies97, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    matrix: matrix2,
    BigNumber: BigNumber2
  } = _ref;
  return typed2("ones", {
    "": function _() {
      return config4.matrix === "Array" ? _ones([]) : _ones([], "default");
    },
    // math.ones(m, n, p, ..., format)
    // TODO: more accurate signature '...number | BigNumber, string' as soon as typed-function supports this
    "...number | BigNumber | string": function numberBigNumberString(size2) {
      var last = size2[size2.length - 1];
      if (typeof last === "string") {
        var format5 = size2.pop();
        return _ones(size2, format5);
      } else if (config4.matrix === "Array") {
        return _ones(size2);
      } else {
        return _ones(size2, "default");
      }
    },
    Array: _ones,
    Matrix: function Matrix2(size2) {
      var format5 = size2.storage();
      return _ones(size2.valueOf(), format5);
    },
    "Array | Matrix, string": function ArrayMatrixString(size2, format5) {
      return _ones(size2.valueOf(), format5);
    }
  });
  function _ones(size2, format5) {
    var hasBigNumbers = _normalize(size2);
    var defaultValue = hasBigNumbers ? new BigNumber2(1) : 1;
    _validate2(size2);
    if (format5) {
      var m = matrix2(format5);
      if (size2.length > 0) {
        return m.resize(size2, defaultValue);
      }
      return m;
    } else {
      var arr = [];
      if (size2.length > 0) {
        return resize(arr, size2, defaultValue);
      }
      return arr;
    }
  }
  function _normalize(size2) {
    var hasBigNumbers = false;
    size2.forEach(function(value, index2, arr) {
      if (isBigNumber(value)) {
        hasBigNumbers = true;
        arr[index2] = value.toNumber();
      }
    });
    return hasBigNumbers;
  }
  function _validate2(size2) {
    size2.forEach(function(value) {
      if (typeof value !== "number" || !isInteger(value) || value < 0) {
        throw new Error("Parameters in function ones must be positive integers");
      }
    });
  }
});

// node_modules/mathjs/lib/esm/utils/noop.js
function noBignumber() {
  throw new Error('No "bignumber" implementation available');
}
function noFraction() {
  throw new Error('No "fraction" implementation available');
}
function noMatrix() {
  throw new Error('No "matrix" implementation available');
}

// node_modules/mathjs/lib/esm/function/matrix/range.js
var name98 = "range";
var dependencies98 = ["typed", "config", "?matrix", "?bignumber", "smaller", "smallerEq", "larger", "largerEq", "add", "isPositive"];
var createRange = factory(name98, dependencies98, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    matrix: matrix2,
    bignumber: bignumber2,
    smaller: smaller2,
    smallerEq: smallerEq2,
    larger: larger2,
    largerEq: largerEq2,
    add: add4,
    isPositive: isPositive2
  } = _ref;
  return typed2(name98, {
    // TODO: simplify signatures when typed-function supports default values and optional arguments
    // TODO: a number or boolean should not be converted to string here
    string: _strRange,
    "string, boolean": _strRange,
    "number, number": function numberNumber(start, end) {
      return _out(_range(start, end, 1, false));
    },
    "number, number, number": function numberNumberNumber(start, end, step) {
      return _out(_range(start, end, step, false));
    },
    "number, number, boolean": function numberNumberBoolean(start, end, includeEnd) {
      return _out(_range(start, end, 1, includeEnd));
    },
    "number, number, number, boolean": function numberNumberNumberBoolean(start, end, step, includeEnd) {
      return _out(_range(start, end, step, includeEnd));
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(start, end) {
      var BigNumber2 = start.constructor;
      return _out(_range(start, end, new BigNumber2(1), false));
    },
    "BigNumber, BigNumber, BigNumber": function BigNumberBigNumberBigNumber(start, end, step) {
      return _out(_range(start, end, step, false));
    },
    "BigNumber, BigNumber, boolean": function BigNumberBigNumberBoolean(start, end, includeEnd) {
      var BigNumber2 = start.constructor;
      return _out(_range(start, end, new BigNumber2(1), includeEnd));
    },
    "BigNumber, BigNumber, BigNumber, boolean": function BigNumberBigNumberBigNumberBoolean(start, end, step, includeEnd) {
      return _out(_range(start, end, step, includeEnd));
    },
    "Unit, Unit, Unit": function UnitUnitUnit(start, end, step) {
      return _out(_range(start, end, step, false));
    },
    "Unit, Unit, Unit, boolean": function UnitUnitUnitBoolean(start, end, step, includeEnd) {
      return _out(_range(start, end, step, includeEnd));
    }
  });
  function _out(arr) {
    if (config4.matrix === "Matrix") {
      return matrix2 ? matrix2(arr) : noMatrix();
    }
    return arr;
  }
  function _strRange(str, includeEnd) {
    var r = _parse(str);
    if (!r) {
      throw new SyntaxError('String "' + str + '" is no valid range');
    }
    if (config4.number === "BigNumber") {
      if (bignumber2 === void 0) {
        noBignumber();
      }
      return _out(_range(bignumber2(r.start), bignumber2(r.end), bignumber2(r.step)), includeEnd);
    } else {
      return _out(_range(r.start, r.end, r.step, includeEnd));
    }
  }
  function _range(start, end, step, includeEnd) {
    var array = [];
    var ongoing = isPositive2(step) ? includeEnd ? smallerEq2 : smaller2 : includeEnd ? largerEq2 : larger2;
    var x = start;
    while (ongoing(x, end)) {
      array.push(x);
      x = add4(x, step);
    }
    return array;
  }
  function _parse(str) {
    var args = str.split(":");
    var nums = args.map(function(arg2) {
      return Number(arg2);
    });
    var invalid = nums.some(function(num) {
      return isNaN(num);
    });
    if (invalid) {
      return null;
    }
    switch (nums.length) {
      case 2:
        return {
          start: nums[0],
          end: nums[1],
          step: 1
        };
      case 3:
        return {
          start: nums[0],
          end: nums[2],
          step: nums[1]
        };
      default:
        return null;
    }
  }
});

// node_modules/mathjs/lib/esm/function/matrix/reshape.js
var name99 = "reshape";
var dependencies99 = ["typed", "isInteger", "matrix"];
var createReshape = factory(name99, dependencies99, (_ref) => {
  var {
    typed: typed2,
    isInteger: isInteger3
  } = _ref;
  return typed2(name99, {
    "Matrix, Array": function MatrixArray(x, sizes) {
      return x.reshape(sizes, true);
    },
    "Array, Array": function ArrayArray(x, sizes) {
      sizes.forEach(function(size2) {
        if (!isInteger3(size2)) {
          throw new TypeError("Invalid size for dimension: " + size2);
        }
      });
      return reshape(x, sizes);
    }
  });
});

// node_modules/mathjs/lib/esm/function/matrix/resize.js
var name100 = "resize";
var dependencies100 = ["config", "matrix"];
var createResize = factory(name100, dependencies100, (_ref) => {
  var {
    config: config4,
    matrix: matrix2
  } = _ref;
  return function resize3(x, size2, defaultValue) {
    if (arguments.length !== 2 && arguments.length !== 3) {
      throw new ArgumentsError("resize", arguments.length, 2, 3);
    }
    if (isMatrix(size2)) {
      size2 = size2.valueOf();
    }
    if (isBigNumber(size2[0])) {
      size2 = size2.map(function(value) {
        return !isBigNumber(value) ? value : value.toNumber();
      });
    }
    if (isMatrix(x)) {
      return x.resize(size2, defaultValue, true);
    }
    if (typeof x === "string") {
      return _resizeString(x, size2, defaultValue);
    }
    var asMatrix = Array.isArray(x) ? false : config4.matrix !== "Array";
    if (size2.length === 0) {
      while (Array.isArray(x)) {
        x = x[0];
      }
      return clone(x);
    } else {
      if (!Array.isArray(x)) {
        x = [x];
      }
      x = clone(x);
      var res = resize(x, size2, defaultValue);
      return asMatrix ? matrix2(res) : res;
    }
  };
  function _resizeString(str, size2, defaultChar) {
    if (defaultChar !== void 0) {
      if (typeof defaultChar !== "string" || defaultChar.length !== 1) {
        throw new TypeError("Single character expected as defaultValue");
      }
    } else {
      defaultChar = " ";
    }
    if (size2.length !== 1) {
      throw new DimensionError(size2.length, 1);
    }
    var len = size2[0];
    if (typeof len !== "number" || !isInteger(len)) {
      throw new TypeError("Invalid size, must contain positive integers (size: " + format3(size2) + ")");
    }
    if (str.length > len) {
      return str.substring(0, len);
    } else if (str.length < len) {
      var res = str;
      for (var i2 = 0, ii = len - str.length; i2 < ii; i2++) {
        res += defaultChar;
      }
      return res;
    } else {
      return str;
    }
  }
});

// node_modules/mathjs/lib/esm/function/matrix/rotate.js
var name101 = "rotate";
var dependencies101 = ["typed", "multiply", "rotationMatrix"];
var createRotate = factory(name101, dependencies101, (_ref) => {
  var {
    typed: typed2,
    multiply: multiply2,
    rotationMatrix: rotationMatrix2
  } = _ref;
  return typed2(name101, {
    "Array , number | BigNumber | Complex | Unit": function ArrayNumberBigNumberComplexUnit(w, theta) {
      _validateSize(w, 2);
      var matrixRes = multiply2(rotationMatrix2(theta), w);
      return matrixRes.toArray();
    },
    "Matrix , number | BigNumber | Complex | Unit": function MatrixNumberBigNumberComplexUnit(w, theta) {
      _validateSize(w, 2);
      return multiply2(rotationMatrix2(theta), w);
    },
    "Array, number | BigNumber | Complex | Unit, Array | Matrix": function ArrayNumberBigNumberComplexUnitArrayMatrix(w, theta, v) {
      _validateSize(w, 3);
      var matrixRes = multiply2(rotationMatrix2(theta, v), w);
      return matrixRes;
    },
    "Matrix, number | BigNumber | Complex | Unit, Array | Matrix": function MatrixNumberBigNumberComplexUnitArrayMatrix(w, theta, v) {
      _validateSize(w, 3);
      return multiply2(rotationMatrix2(theta, v), w);
    }
  });
  function _validateSize(v, expectedSize) {
    var actualSize = Array.isArray(v) ? arraySize(v) : v.size();
    if (actualSize.length > 2) {
      throw new RangeError("Vector must be of dimensions 1x".concat(expectedSize));
    }
    if (actualSize.length === 2 && actualSize[1] !== 1) {
      throw new RangeError("Vector must be of dimensions 1x".concat(expectedSize));
    }
    if (actualSize[0] !== expectedSize) {
      throw new RangeError("Vector must be of dimensions 1x".concat(expectedSize));
    }
  }
});

// node_modules/mathjs/lib/esm/function/matrix/rotationMatrix.js
var name102 = "rotationMatrix";
var dependencies102 = ["typed", "config", "multiplyScalar", "addScalar", "unaryMinus", "norm", "matrix", "BigNumber", "DenseMatrix", "SparseMatrix", "cos", "sin"];
var createRotationMatrix = factory(name102, dependencies102, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    multiplyScalar: multiplyScalar2,
    addScalar: addScalar2,
    unaryMinus: unaryMinus2,
    norm: norm2,
    BigNumber: BigNumber2,
    matrix: matrix2,
    DenseMatrix: DenseMatrix2,
    SparseMatrix: SparseMatrix2,
    cos: cos3,
    sin: sin3
  } = _ref;
  return typed2(name102, {
    "": function _() {
      return config4.matrix === "Matrix" ? matrix2([]) : [];
    },
    string: function string2(format5) {
      return matrix2(format5);
    },
    "number | BigNumber | Complex | Unit": function numberBigNumberComplexUnit(theta) {
      return _rotationMatrix2x2(theta, config4.matrix === "Matrix" ? "dense" : void 0);
    },
    "number | BigNumber | Complex | Unit, string": function numberBigNumberComplexUnitString(theta, format5) {
      return _rotationMatrix2x2(theta, format5);
    },
    "number | BigNumber | Complex | Unit, Array": function numberBigNumberComplexUnitArray(theta, v) {
      var matrixV = matrix2(v);
      _validateVector(matrixV);
      return _rotationMatrix3x3(theta, matrixV, void 0);
    },
    "number | BigNumber | Complex | Unit, Matrix": function numberBigNumberComplexUnitMatrix(theta, v) {
      _validateVector(v);
      var storageType = v.storage() || (config4.matrix === "Matrix" ? "dense" : void 0);
      return _rotationMatrix3x3(theta, v, storageType);
    },
    "number | BigNumber | Complex | Unit, Array, string": function numberBigNumberComplexUnitArrayString(theta, v, format5) {
      var matrixV = matrix2(v);
      _validateVector(matrixV);
      return _rotationMatrix3x3(theta, matrixV, format5);
    },
    "number | BigNumber | Complex | Unit, Matrix, string": function numberBigNumberComplexUnitMatrixString(theta, v, format5) {
      _validateVector(v);
      return _rotationMatrix3x3(theta, v, format5);
    }
  });
  function _rotationMatrix2x2(theta, format5) {
    var Big = isBigNumber(theta);
    var minusOne = Big ? new BigNumber2(-1) : -1;
    var cosTheta = cos3(theta);
    var sinTheta = sin3(theta);
    var data = [[cosTheta, multiplyScalar2(minusOne, sinTheta)], [sinTheta, cosTheta]];
    return _convertToFormat(data, format5);
  }
  function _validateVector(v) {
    var size2 = v.size();
    if (size2.length < 1 || size2[0] !== 3) {
      throw new RangeError("Vector must be of dimensions 1x3");
    }
  }
  function _mul(array) {
    return array.reduce((p, curr) => multiplyScalar2(p, curr));
  }
  function _convertToFormat(data, format5) {
    if (format5) {
      if (format5 === "sparse") {
        return new SparseMatrix2(data);
      }
      if (format5 === "dense") {
        return new DenseMatrix2(data);
      }
      throw new TypeError('Unknown matrix type "'.concat(format5, '"'));
    }
    return data;
  }
  function _rotationMatrix3x3(theta, v, format5) {
    var normV = norm2(v);
    if (normV === 0) {
      throw new RangeError("Rotation around zero vector");
    }
    var Big = isBigNumber(theta) ? BigNumber2 : null;
    var one = Big ? new Big(1) : 1;
    var minusOne = Big ? new Big(-1) : -1;
    var vx = Big ? new Big(v.get([0]) / normV) : v.get([0]) / normV;
    var vy = Big ? new Big(v.get([1]) / normV) : v.get([1]) / normV;
    var vz = Big ? new Big(v.get([2]) / normV) : v.get([2]) / normV;
    var c = cos3(theta);
    var oneMinusC = addScalar2(one, unaryMinus2(c));
    var s = sin3(theta);
    var r11 = addScalar2(c, _mul([vx, vx, oneMinusC]));
    var r12 = addScalar2(_mul([vx, vy, oneMinusC]), _mul([minusOne, vz, s]));
    var r13 = addScalar2(_mul([vx, vz, oneMinusC]), _mul([vy, s]));
    var r21 = addScalar2(_mul([vx, vy, oneMinusC]), _mul([vz, s]));
    var r22 = addScalar2(c, _mul([vy, vy, oneMinusC]));
    var r23 = addScalar2(_mul([vy, vz, oneMinusC]), _mul([minusOne, vx, s]));
    var r31 = addScalar2(_mul([vx, vz, oneMinusC]), _mul([minusOne, vy, s]));
    var r32 = addScalar2(_mul([vy, vz, oneMinusC]), _mul([vx, s]));
    var r33 = addScalar2(c, _mul([vz, vz, oneMinusC]));
    var data = [[r11, r12, r13], [r21, r22, r23], [r31, r32, r33]];
    return _convertToFormat(data, format5);
  }
});

// node_modules/mathjs/lib/esm/function/matrix/row.js
var name103 = "row";
var dependencies103 = ["typed", "Index", "matrix", "range"];
var createRow = factory(name103, dependencies103, (_ref) => {
  var {
    typed: typed2,
    Index: Index2,
    matrix: matrix2,
    range: range3
  } = _ref;
  return typed2(name103, {
    "Matrix, number": _row,
    "Array, number": function ArrayNumber(value, row2) {
      return _row(matrix2(clone(value)), row2).valueOf();
    }
  });
  function _row(value, row2) {
    if (value.size().length !== 2) {
      throw new Error("Only two dimensional matrix is supported");
    }
    validateIndex(row2, value.size()[0]);
    var columnRange = range3(0, value.size()[1]);
    var index2 = new Index2(row2, columnRange);
    var result = value.subset(index2);
    return isMatrix(result) ? result : matrix2([[result]]);
  }
});

// node_modules/mathjs/lib/esm/function/matrix/size.js
var name104 = "size";
var dependencies104 = ["typed", "config", "?matrix"];
var createSize = factory(name104, dependencies104, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    matrix: matrix2
  } = _ref;
  return typed2(name104, {
    Matrix: function Matrix2(x) {
      return x.create(x.size());
    },
    Array: arraySize,
    string: function string2(x) {
      return config4.matrix === "Array" ? [x.length] : matrix2([x.length]);
    },
    "number | Complex | BigNumber | Unit | boolean | null": function numberComplexBigNumberUnitBooleanNull(x) {
      return config4.matrix === "Array" ? [] : matrix2 ? matrix2([]) : noMatrix();
    }
  });
});

// node_modules/mathjs/lib/esm/function/matrix/squeeze.js
var name105 = "squeeze";
var dependencies105 = ["typed", "matrix"];
var createSqueeze = factory(name105, dependencies105, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2
  } = _ref;
  return typed2(name105, {
    Array: function Array2(x) {
      return squeeze(clone(x));
    },
    Matrix: function Matrix2(x) {
      var res = squeeze(x.toArray());
      return Array.isArray(res) ? matrix2(res) : res;
    },
    any: function any(x) {
      return clone(x);
    }
  });
});

// node_modules/mathjs/lib/esm/function/matrix/subset.js
var name106 = "subset";
var dependencies106 = ["typed", "matrix", "zeros", "add"];
var createSubset = factory(name106, dependencies106, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    zeros: zeros3,
    add: add4
  } = _ref;
  return typed2(name106, {
    // get subset
    "Matrix, Index": function MatrixIndex(value, index2) {
      if (isEmptyIndex(index2)) {
        return matrix2();
      }
      validateIndexSourceSize(value, index2);
      return value.subset(index2);
    },
    "Array, Index": typed2.referTo("Matrix, Index", function(subsetRef) {
      return function(value, index2) {
        var subsetResult = subsetRef(matrix2(value), index2);
        return index2.isScalar() ? subsetResult : subsetResult.valueOf();
      };
    }),
    "Object, Index": _getObjectProperty,
    "string, Index": _getSubstring,
    // set subset
    "Matrix, Index, any, any": function MatrixIndexAnyAny(value, index2, replacement, defaultValue) {
      if (isEmptyIndex(index2)) {
        return value;
      }
      validateIndexSourceSize(value, index2);
      return value.clone().subset(index2, _broadcastReplacement(replacement, index2), defaultValue);
    },
    "Array, Index, any, any": typed2.referTo("Matrix, Index, any, any", function(subsetRef) {
      return function(value, index2, replacement, defaultValue) {
        var subsetResult = subsetRef(matrix2(value), index2, replacement, defaultValue);
        return subsetResult.isMatrix ? subsetResult.valueOf() : subsetResult;
      };
    }),
    "Array, Index, any": typed2.referTo("Matrix, Index, any, any", function(subsetRef) {
      return function(value, index2, replacement) {
        return subsetRef(matrix2(value), index2, replacement, void 0).valueOf();
      };
    }),
    "Matrix, Index, any": typed2.referTo("Matrix, Index, any, any", function(subsetRef) {
      return function(value, index2, replacement) {
        return subsetRef(value, index2, replacement, void 0);
      };
    }),
    "string, Index, string": _setSubstring,
    "string, Index, string, string": _setSubstring,
    "Object, Index, any": _setObjectProperty
  });
  function _broadcastReplacement(replacement, index2) {
    if (typeof replacement === "string") {
      throw new Error("can't boradcast a string");
    }
    if (index2._isScalar) {
      return replacement;
    }
    var indexSize = index2.size();
    if (indexSize.every((d2) => d2 > 0)) {
      try {
        return add4(replacement, zeros3(indexSize));
      } catch (error) {
        return replacement;
      }
    } else {
      return replacement;
    }
  }
});
function _getSubstring(str, index2) {
  if (!isIndex(index2)) {
    throw new TypeError("Index expected");
  }
  if (isEmptyIndex(index2)) {
    return "";
  }
  validateIndexSourceSize(Array.from(str), index2);
  if (index2.size().length !== 1) {
    throw new DimensionError(index2.size().length, 1);
  }
  var strLen = str.length;
  validateIndex(index2.min()[0], strLen);
  validateIndex(index2.max()[0], strLen);
  var range3 = index2.dimension(0);
  var substr = "";
  range3.forEach(function(v) {
    substr += str.charAt(v);
  });
  return substr;
}
function _setSubstring(str, index2, replacement, defaultValue) {
  if (!index2 || index2.isIndex !== true) {
    throw new TypeError("Index expected");
  }
  if (isEmptyIndex(index2)) {
    return str;
  }
  validateIndexSourceSize(Array.from(str), index2);
  if (index2.size().length !== 1) {
    throw new DimensionError(index2.size().length, 1);
  }
  if (defaultValue !== void 0) {
    if (typeof defaultValue !== "string" || defaultValue.length !== 1) {
      throw new TypeError("Single character expected as defaultValue");
    }
  } else {
    defaultValue = " ";
  }
  var range3 = index2.dimension(0);
  var len = range3.size()[0];
  if (len !== replacement.length) {
    throw new DimensionError(range3.size()[0], replacement.length);
  }
  var strLen = str.length;
  validateIndex(index2.min()[0]);
  validateIndex(index2.max()[0]);
  var chars = [];
  for (var i2 = 0; i2 < strLen; i2++) {
    chars[i2] = str.charAt(i2);
  }
  range3.forEach(function(v, i3) {
    chars[v] = replacement.charAt(i3[0]);
  });
  if (chars.length > strLen) {
    for (var _i = strLen - 1, _len = chars.length; _i < _len; _i++) {
      if (!chars[_i]) {
        chars[_i] = defaultValue;
      }
    }
  }
  return chars.join("");
}
function _getObjectProperty(object, index2) {
  if (isEmptyIndex(index2)) {
    return void 0;
  }
  if (index2.size().length !== 1) {
    throw new DimensionError(index2.size(), 1);
  }
  var key = index2.dimension(0);
  if (typeof key !== "string") {
    throw new TypeError("String expected as index to retrieve an object property");
  }
  return getSafeProperty(object, key);
}
function _setObjectProperty(object, index2, replacement) {
  if (isEmptyIndex(index2)) {
    return object;
  }
  if (index2.size().length !== 1) {
    throw new DimensionError(index2.size(), 1);
  }
  var key = index2.dimension(0);
  if (typeof key !== "string") {
    throw new TypeError("String expected as index to retrieve an object property");
  }
  var updated = clone(object);
  setSafeProperty(updated, key, replacement);
  return updated;
}

// node_modules/mathjs/lib/esm/function/matrix/transpose.js
var name107 = "transpose";
var dependencies107 = ["typed", "matrix"];
var createTranspose = factory(name107, dependencies107, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2
  } = _ref;
  return typed2(name107, {
    Array: (x) => transposeMatrix(matrix2(x)).valueOf(),
    Matrix: transposeMatrix,
    any: clone
    // scalars
  });
  function transposeMatrix(x) {
    var size2 = x.size();
    var c;
    switch (size2.length) {
      case 1:
        c = x.clone();
        break;
      case 2:
        {
          var rows = size2[0];
          var columns = size2[1];
          if (columns === 0) {
            throw new RangeError("Cannot transpose a 2D matrix with no columns (size: " + format3(size2) + ")");
          }
          switch (x.storage()) {
            case "dense":
              c = _denseTranspose(x, rows, columns);
              break;
            case "sparse":
              c = _sparseTranspose(x, rows, columns);
              break;
          }
        }
        break;
      default:
        throw new RangeError("Matrix must be a vector or two dimensional (size: " + format3(size2) + ")");
    }
    return c;
  }
  function _denseTranspose(m, rows, columns) {
    var data = m._data;
    var transposed = [];
    var transposedRow;
    for (var j = 0; j < columns; j++) {
      transposedRow = transposed[j] = [];
      for (var i2 = 0; i2 < rows; i2++) {
        transposedRow[i2] = clone(data[i2][j]);
      }
    }
    return m.createDenseMatrix({
      data: transposed,
      size: [columns, rows],
      datatype: m._datatype
    });
  }
  function _sparseTranspose(m, rows, columns) {
    var values = m._values;
    var index2 = m._index;
    var ptr = m._ptr;
    var cvalues = values ? [] : void 0;
    var cindex = [];
    var cptr = [];
    var w = [];
    for (var x = 0; x < rows; x++) {
      w[x] = 0;
    }
    var p, l, j;
    for (p = 0, l = index2.length; p < l; p++) {
      w[index2[p]]++;
    }
    var sum3 = 0;
    for (var i2 = 0; i2 < rows; i2++) {
      cptr.push(sum3);
      sum3 += w[i2];
      w[i2] = cptr[i2];
    }
    cptr.push(sum3);
    for (j = 0; j < columns; j++) {
      for (var k0 = ptr[j], k1 = ptr[j + 1], k = k0; k < k1; k++) {
        var q = w[index2[k]]++;
        cindex[q] = j;
        if (values) {
          cvalues[q] = clone(values[k]);
        }
      }
    }
    return m.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [columns, rows],
      datatype: m._datatype
    });
  }
});

// node_modules/mathjs/lib/esm/function/matrix/ctranspose.js
var name108 = "ctranspose";
var dependencies108 = ["typed", "transpose", "conj"];
var createCtranspose = factory(name108, dependencies108, (_ref) => {
  var {
    typed: typed2,
    transpose: transpose2,
    conj: conj2
  } = _ref;
  return typed2(name108, {
    any: function any(x) {
      return conj2(transpose2(x));
    }
  });
});

// node_modules/mathjs/lib/esm/function/matrix/zeros.js
var name109 = "zeros";
var dependencies109 = ["typed", "config", "matrix", "BigNumber"];
var createZeros = factory(name109, dependencies109, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    matrix: matrix2,
    BigNumber: BigNumber2
  } = _ref;
  return typed2(name109, {
    "": function _() {
      return config4.matrix === "Array" ? _zeros([]) : _zeros([], "default");
    },
    // math.zeros(m, n, p, ..., format)
    // TODO: more accurate signature '...number | BigNumber, string' as soon as typed-function supports this
    "...number | BigNumber | string": function numberBigNumberString(size2) {
      var last = size2[size2.length - 1];
      if (typeof last === "string") {
        var format5 = size2.pop();
        return _zeros(size2, format5);
      } else if (config4.matrix === "Array") {
        return _zeros(size2);
      } else {
        return _zeros(size2, "default");
      }
    },
    Array: _zeros,
    Matrix: function Matrix2(size2) {
      var format5 = size2.storage();
      return _zeros(size2.valueOf(), format5);
    },
    "Array | Matrix, string": function ArrayMatrixString(size2, format5) {
      return _zeros(size2.valueOf(), format5);
    }
  });
  function _zeros(size2, format5) {
    var hasBigNumbers = _normalize(size2);
    var defaultValue = hasBigNumbers ? new BigNumber2(0) : 0;
    _validate2(size2);
    if (format5) {
      var m = matrix2(format5);
      if (size2.length > 0) {
        return m.resize(size2, defaultValue);
      }
      return m;
    } else {
      var arr = [];
      if (size2.length > 0) {
        return resize(arr, size2, defaultValue);
      }
      return arr;
    }
  }
  function _normalize(size2) {
    var hasBigNumbers = false;
    size2.forEach(function(value, index2, arr) {
      if (isBigNumber(value)) {
        hasBigNumbers = true;
        arr[index2] = value.toNumber();
      }
    });
    return hasBigNumbers;
  }
  function _validate2(size2) {
    size2.forEach(function(value) {
      if (typeof value !== "number" || !isInteger(value) || value < 0) {
        throw new Error("Parameters in function zeros must be positive integers");
      }
    });
  }
});

// node_modules/mathjs/lib/esm/function/matrix/fft.js
var name110 = "fft";
var dependencies110 = ["typed", "matrix", "addScalar", "multiplyScalar", "divideScalar", "exp", "tau", "i", "dotDivide", "conj", "pow", "ceil", "log2"];
var createFft = factory(name110, dependencies110, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    addScalar: addScalar2,
    multiplyScalar: multiplyScalar2,
    divideScalar: divideScalar2,
    exp: exp3,
    tau: tau3,
    i: I,
    dotDivide: dotDivide2,
    conj: conj2,
    pow: pow3,
    ceil: ceil3,
    log2: log25
  } = _ref;
  return typed2(name110, {
    Array: _ndFft,
    Matrix: function Matrix2(matrix3) {
      return matrix3.create(_ndFft(matrix3.toArray()));
    }
  });
  function _ndFft(arr) {
    var size2 = arraySize(arr);
    if (size2.length === 1) return _fft(arr, size2[0]);
    return _1dFft(arr.map((slice) => _ndFft(slice, size2.slice(1))), 0);
  }
  function _1dFft(arr, dim) {
    var size2 = arraySize(arr);
    if (dim !== 0) return new Array(size2[0]).fill(0).map((_, i2) => _1dFft(arr[i2], dim - 1));
    if (size2.length === 1) return _fft(arr);
    function _transpose(arr2) {
      var size3 = arraySize(arr2);
      return new Array(size3[1]).fill(0).map((_, j) => new Array(size3[0]).fill(0).map((_2, i2) => arr2[i2][j]));
    }
    return _transpose(_1dFft(_transpose(arr), 1));
  }
  function _czt(arr) {
    var n = arr.length;
    var w = exp3(divideScalar2(multiplyScalar2(-1, multiplyScalar2(I, tau3)), n));
    var chirp = [];
    for (var i2 = 1 - n; i2 < n; i2++) {
      chirp.push(pow3(w, divideScalar2(pow3(i2, 2), 2)));
    }
    var N2 = pow3(2, ceil3(log25(n + n - 1)));
    var xp = [...new Array(n).fill(0).map((_, i3) => multiplyScalar2(arr[i3], chirp[n - 1 + i3])), ...new Array(N2 - n).fill(0)];
    var ichirp = [...new Array(n + n - 1).fill(0).map((_, i3) => divideScalar2(1, chirp[i3])), ...new Array(N2 - (n + n - 1)).fill(0)];
    var fftXp = _fft(xp);
    var fftIchirp = _fft(ichirp);
    var fftProduct = new Array(N2).fill(0).map((_, i3) => multiplyScalar2(fftXp[i3], fftIchirp[i3]));
    var ifftProduct = dotDivide2(conj2(_ndFft(conj2(fftProduct))), N2);
    var ret = [];
    for (var _i = n - 1; _i < n + n - 1; _i++) {
      ret.push(multiplyScalar2(ifftProduct[_i], chirp[_i]));
    }
    return ret;
  }
  function _fft(arr) {
    var len = arr.length;
    if (len === 1) return [arr[0]];
    if (len % 2 === 0) {
      var ret = [..._fft(arr.filter((_, i2) => i2 % 2 === 0), len / 2), ..._fft(arr.filter((_, i2) => i2 % 2 === 1), len / 2)];
      for (var k = 0; k < len / 2; k++) {
        var p = ret[k];
        var q = multiplyScalar2(ret[k + len / 2], exp3(multiplyScalar2(multiplyScalar2(tau3, I), divideScalar2(-k, len))));
        ret[k] = addScalar2(p, q);
        ret[k + len / 2] = addScalar2(p, multiplyScalar2(-1, q));
      }
      return ret;
    } else {
      return _czt(arr);
    }
  }
});

// node_modules/mathjs/lib/esm/function/matrix/ifft.js
var name111 = "ifft";
var dependencies111 = ["typed", "fft", "dotDivide", "conj"];
var createIfft = factory(name111, dependencies111, (_ref) => {
  var {
    typed: typed2,
    fft: fft2,
    dotDivide: dotDivide2,
    conj: conj2
  } = _ref;
  return typed2(name111, {
    "Array | Matrix": function ArrayMatrix(arr) {
      var size2 = isMatrix(arr) ? arr.size() : arraySize(arr);
      return dotDivide2(conj2(fft2(conj2(arr))), size2.reduce((acc, curr) => acc * curr, 1));
    }
  });
});

// node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(o) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
    return typeof o2;
  } : function(o2) {
    return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
  }, _typeof(o);
}

// node_modules/@babel/runtime/helpers/esm/toPrimitive.js
function toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e3 = t[Symbol.toPrimitive];
  if (void 0 !== e3) {
    var i2 = e3.call(t, r || "default");
    if ("object" != _typeof(i2)) return i2;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}

// node_modules/@babel/runtime/helpers/esm/toPropertyKey.js
function toPropertyKey(t) {
  var i2 = toPrimitive(t, "string");
  return "symbol" == _typeof(i2) ? i2 : i2 + "";
}

// node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(e3, r, t) {
  return (r = toPropertyKey(r)) in e3 ? Object.defineProperty(e3, r, {
    value: t,
    enumerable: true,
    configurable: true,
    writable: true
  }) : e3[r] = t, e3;
}

// node_modules/mathjs/lib/esm/function/numeric/solveODE.js
function ownKeys(e3, r) {
  var t = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e3);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e3, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e3) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e3, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e3, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e3;
}
var name112 = "solveODE";
var dependencies112 = ["typed", "add", "subtract", "multiply", "divide", "max", "map", "abs", "isPositive", "isNegative", "larger", "smaller", "matrix", "bignumber", "unaryMinus"];
var createSolveODE = factory(name112, dependencies112, (_ref) => {
  var {
    typed: typed2,
    add: add4,
    subtract: subtract2,
    multiply: multiply2,
    divide: divide3,
    max: max3,
    map: map3,
    abs: abs3,
    isPositive: isPositive2,
    isNegative: isNegative2,
    larger: larger2,
    smaller: smaller2,
    matrix: matrix2,
    bignumber: bignumber2,
    unaryMinus: unaryMinus2
  } = _ref;
  function _rk(butcherTableau) {
    return function(f, tspan, y0, options) {
      var wrongTSpan = !(tspan.length === 2 && (tspan.every(isNumOrBig) || tspan.every(isUnit)));
      if (wrongTSpan) {
        throw new Error('"tspan" must be an Array of two numeric values or two units [tStart, tEnd]');
      }
      var t0 = tspan[0];
      var tf = tspan[1];
      var isForwards = larger2(tf, t0);
      var firstStep = options.firstStep;
      if (firstStep !== void 0 && !isPositive2(firstStep)) {
        throw new Error('"firstStep" must be positive');
      }
      var maxStep = options.maxStep;
      if (maxStep !== void 0 && !isPositive2(maxStep)) {
        throw new Error('"maxStep" must be positive');
      }
      var minStep = options.minStep;
      if (minStep && isNegative2(minStep)) {
        throw new Error('"minStep" must be positive or zero');
      }
      var timeVars = [t0, tf, firstStep, minStep, maxStep].filter((x) => x !== void 0);
      if (!(timeVars.every(isNumOrBig) || timeVars.every(isUnit))) {
        throw new Error('Inconsistent type of "t" dependant variables');
      }
      var steps = 1;
      var tol = options.tol ? options.tol : 1e-4;
      var minDelta = options.minDelta ? options.minDelta : 0.2;
      var maxDelta = options.maxDelta ? options.maxDelta : 5;
      var maxIter = options.maxIter ? options.maxIter : 1e4;
      var hasBigNumbers = [t0, tf, ...y0, maxStep, minStep].some(isBigNumber);
      var [a, c, b2, bp] = hasBigNumbers ? [bignumber2(butcherTableau.a), bignumber2(butcherTableau.c), bignumber2(butcherTableau.b), bignumber2(butcherTableau.bp)] : [butcherTableau.a, butcherTableau.c, butcherTableau.b, butcherTableau.bp];
      var h = firstStep ? isForwards ? firstStep : unaryMinus2(firstStep) : divide3(subtract2(tf, t0), steps);
      var t = [t0];
      var y = [y0];
      var deltaB = subtract2(b2, bp);
      var n = 0;
      var iter = 0;
      var ongoing = _createOngoing(isForwards);
      var trimStep = _createTrimStep(isForwards);
      while (ongoing(t[n], tf)) {
        var k = [];
        h = trimStep(t[n], tf, h);
        k.push(f(t[n], y[n]));
        for (var i2 = 1; i2 < c.length; ++i2) {
          k.push(f(add4(t[n], multiply2(c[i2], h)), add4(y[n], multiply2(h, a[i2], k))));
        }
        var TE = max3(abs3(map3(multiply2(deltaB, k), (X) => isUnit(X) ? X.value : X)));
        if (TE < tol && tol / TE > 1 / 4) {
          t.push(add4(t[n], h));
          y.push(add4(y[n], multiply2(h, b2, k)));
          n++;
        }
        var delta = 0.84 * (tol / TE) ** (1 / 5);
        if (smaller2(delta, minDelta)) {
          delta = minDelta;
        } else if (larger2(delta, maxDelta)) {
          delta = maxDelta;
        }
        delta = hasBigNumbers ? bignumber2(delta) : delta;
        h = multiply2(h, delta);
        if (maxStep && larger2(abs3(h), maxStep)) {
          h = isForwards ? maxStep : unaryMinus2(maxStep);
        } else if (minStep && smaller2(abs3(h), minStep)) {
          h = isForwards ? minStep : unaryMinus2(minStep);
        }
        iter++;
        if (iter > maxIter) {
          throw new Error("Maximum number of iterations reached, try changing options");
        }
      }
      return {
        t,
        y
      };
    };
  }
  function _rk23(f, tspan, y0, options) {
    var a = [[], [1 / 2], [0, 3 / 4], [2 / 9, 1 / 3, 4 / 9]];
    var c = [null, 1 / 2, 3 / 4, 1];
    var b2 = [2 / 9, 1 / 3, 4 / 9, 0];
    var bp = [7 / 24, 1 / 4, 1 / 3, 1 / 8];
    var butcherTableau = {
      a,
      c,
      b: b2,
      bp
    };
    return _rk(butcherTableau)(f, tspan, y0, options);
  }
  function _rk45(f, tspan, y0, options) {
    var a = [[], [1 / 5], [3 / 40, 9 / 40], [44 / 45, -56 / 15, 32 / 9], [19372 / 6561, -25360 / 2187, 64448 / 6561, -212 / 729], [9017 / 3168, -355 / 33, 46732 / 5247, 49 / 176, -5103 / 18656], [35 / 384, 0, 500 / 1113, 125 / 192, -2187 / 6784, 11 / 84]];
    var c = [null, 1 / 5, 3 / 10, 4 / 5, 8 / 9, 1, 1];
    var b2 = [35 / 384, 0, 500 / 1113, 125 / 192, -2187 / 6784, 11 / 84, 0];
    var bp = [5179 / 57600, 0, 7571 / 16695, 393 / 640, -92097 / 339200, 187 / 2100, 1 / 40];
    var butcherTableau = {
      a,
      c,
      b: b2,
      bp
    };
    return _rk(butcherTableau)(f, tspan, y0, options);
  }
  function _solveODE(f, tspan, y0, opt) {
    var method = opt.method ? opt.method : "RK45";
    var methods = {
      RK23: _rk23,
      RK45: _rk45
    };
    if (method.toUpperCase() in methods) {
      var methodOptions = _objectSpread({}, opt);
      delete methodOptions.method;
      return methods[method.toUpperCase()](f, tspan, y0, methodOptions);
    } else {
      var methodsWithQuotes = Object.keys(methods).map((x) => '"'.concat(x, '"'));
      var availableMethodsString = "".concat(methodsWithQuotes.slice(0, -1).join(", "), " and ").concat(methodsWithQuotes.slice(-1));
      throw new Error('Unavailable method "'.concat(method, '". Available methods are ').concat(availableMethodsString));
    }
  }
  function _createOngoing(isForwards) {
    return isForwards ? smaller2 : larger2;
  }
  function _createTrimStep(isForwards) {
    var outOfBounds = isForwards ? larger2 : smaller2;
    return function(t, tf, h) {
      var next = add4(t, h);
      return outOfBounds(next, tf) ? subtract2(tf, t) : h;
    };
  }
  function isNumOrBig(x) {
    return isBigNumber(x) || isNumber(x);
  }
  function _matrixSolveODE(f, T, y0, options) {
    var sol = _solveODE(f, T.toArray(), y0.toArray(), options);
    return {
      t: matrix2(sol.t),
      y: matrix2(sol.y)
    };
  }
  return typed2("solveODE", {
    "function, Array, Array, Object": _solveODE,
    "function, Matrix, Matrix, Object": _matrixSolveODE,
    "function, Array, Array": (f, T, y0) => _solveODE(f, T, y0, {}),
    "function, Matrix, Matrix": (f, T, y0) => _matrixSolveODE(f, T, y0, {}),
    "function, Array, number | BigNumber | Unit": (f, T, y0) => {
      var sol = _solveODE(f, T, [y0], {});
      return {
        t: sol.t,
        y: sol.y.map((Y) => Y[0])
      };
    },
    "function, Matrix, number | BigNumber | Unit": (f, T, y0) => {
      var sol = _solveODE(f, T.toArray(), [y0], {});
      return {
        t: matrix2(sol.t),
        y: matrix2(sol.y.map((Y) => Y[0]))
      };
    },
    "function, Array, number | BigNumber | Unit, Object": (f, T, y0, options) => {
      var sol = _solveODE(f, T, [y0], options);
      return {
        t: sol.t,
        y: sol.y.map((Y) => Y[0])
      };
    },
    "function, Matrix, number | BigNumber | Unit, Object": (f, T, y0, options) => {
      var sol = _solveODE(f, T.toArray(), [y0], options);
      return {
        t: matrix2(sol.t),
        y: matrix2(sol.y.map((Y) => Y[0]))
      };
    }
  });
});

// node_modules/mathjs/lib/esm/function/special/erf.js
var name113 = "erf";
var dependencies113 = ["typed"];
var createErf = factory(name113, dependencies113, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2("name", {
    number: function number2(x) {
      var y = Math.abs(x);
      if (y >= MAX_NUM) {
        return sign(x);
      }
      if (y <= THRESH) {
        return sign(x) * erf1(y);
      }
      if (y <= 4) {
        return sign(x) * (1 - erfc2(y));
      }
      return sign(x) * (1 - erfc3(y));
    },
    "Array | Matrix": typed2.referToSelf((self2) => (n) => deepMap(n, self2))
    // TODO: For complex numbers, use the approximation for the Faddeeva function
    //  from "More Efficient Computation of the Complex Error Function" (AMS)
  });
  function erf1(y) {
    var ysq = y * y;
    var xnum = P3[0][4] * ysq;
    var xden = ysq;
    var i2;
    for (i2 = 0; i2 < 3; i2 += 1) {
      xnum = (xnum + P3[0][i2]) * ysq;
      xden = (xden + Q[0][i2]) * ysq;
    }
    return y * (xnum + P3[0][3]) / (xden + Q[0][3]);
  }
  function erfc2(y) {
    var xnum = P3[1][8] * y;
    var xden = y;
    var i2;
    for (i2 = 0; i2 < 7; i2 += 1) {
      xnum = (xnum + P3[1][i2]) * y;
      xden = (xden + Q[1][i2]) * y;
    }
    var result = (xnum + P3[1][7]) / (xden + Q[1][7]);
    var ysq = parseInt(y * 16) / 16;
    var del = (y - ysq) * (y + ysq);
    return Math.exp(-ysq * ysq) * Math.exp(-del) * result;
  }
  function erfc3(y) {
    var ysq = 1 / (y * y);
    var xnum = P3[2][5] * ysq;
    var xden = ysq;
    var i2;
    for (i2 = 0; i2 < 4; i2 += 1) {
      xnum = (xnum + P3[2][i2]) * ysq;
      xden = (xden + Q[2][i2]) * ysq;
    }
    var result = ysq * (xnum + P3[2][4]) / (xden + Q[2][4]);
    result = (SQRPI - result) / y;
    ysq = parseInt(y * 16) / 16;
    var del = (y - ysq) * (y + ysq);
    return Math.exp(-ysq * ysq) * Math.exp(-del) * result;
  }
});
var THRESH = 0.46875;
var SQRPI = 0.5641895835477563;
var P3 = [[3.1611237438705655, 113.86415415105016, 377.485237685302, 3209.3775891384694, 0.18577770618460315], [0.5641884969886701, 8.883149794388377, 66.11919063714163, 298.6351381974001, 881.952221241769, 1712.0476126340707, 2051.0783778260716, 1230.3393547979972, 21531153547440383e-24], [0.30532663496123236, 0.36034489994980445, 0.12578172611122926, 0.016083785148742275, 6587491615298378e-19, 0.016315387137302097]];
var Q = [[23.601290952344122, 244.02463793444417, 1282.6165260773723, 2844.236833439171], [15.744926110709835, 117.6939508913125, 537.1811018620099, 1621.3895745666903, 3290.7992357334597, 4362.619090143247, 3439.3676741437216, 1230.3393548037495], [2.568520192289822, 1.8729528499234604, 0.5279051029514285, 0.06051834131244132, 0.0023352049762686918]];
var MAX_NUM = Math.pow(2, 53);

// node_modules/mathjs/lib/esm/function/special/zeta.js
var name114 = "zeta";
var dependencies114 = ["typed", "config", "multiply", "pow", "divide", "factorial", "equal", "smallerEq", "isNegative", "gamma", "sin", "subtract", "add", "?Complex", "?BigNumber", "pi"];
var createZeta = factory(name114, dependencies114, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    multiply: multiply2,
    pow: pow3,
    divide: divide3,
    factorial: factorial2,
    equal: equal2,
    smallerEq: smallerEq2,
    isNegative: isNegative2,
    gamma: gamma2,
    sin: sin3,
    subtract: subtract2,
    add: add4,
    Complex: Complex3,
    BigNumber: _BigNumber,
    pi: pi3
  } = _ref;
  return typed2(name114, {
    number: (s) => zetaNumeric(s, (value) => value, () => 20),
    BigNumber: (s) => zetaNumeric(s, (value) => new _BigNumber(value), () => {
      return Math.abs(Math.log10(config4.epsilon));
    }),
    Complex: zetaComplex
  });
  function zetaNumeric(s, createValue, determineDigits) {
    if (equal2(s, 0)) {
      return createValue(-0.5);
    }
    if (equal2(s, 1)) {
      return createValue(NaN);
    }
    if (!isFinite(s)) {
      return isNegative2(s) ? createValue(NaN) : createValue(1);
    }
    return zeta2(s, createValue, determineDigits, (s2) => s2);
  }
  function zetaComplex(s) {
    if (s.re === 0 && s.im === 0) {
      return new Complex3(-0.5);
    }
    if (s.re === 1) {
      return new Complex3(NaN, NaN);
    }
    if (s.re === Infinity && s.im === 0) {
      return new Complex3(1);
    }
    if (s.im === Infinity || s.re === -Infinity) {
      return new Complex3(NaN, NaN);
    }
    return zeta2(s, (value) => value, (s2) => Math.round(1.3 * 15 + 0.9 * Math.abs(s2.im)), (s2) => s2.re);
  }
  function zeta2(s, createValue, determineDigits, getRe) {
    var n = determineDigits(s);
    if (getRe(s) > -(n - 1) / 2) {
      return f(s, createValue(n), createValue);
    } else {
      var c = multiply2(pow3(2, s), pow3(createValue(pi3), subtract2(s, 1)));
      c = multiply2(c, sin3(multiply2(divide3(createValue(pi3), 2), s)));
      c = multiply2(c, gamma2(subtract2(1, s)));
      return multiply2(c, zeta2(subtract2(1, s), createValue, determineDigits, getRe));
    }
  }
  function d2(k, n) {
    var S = k;
    for (var j = k; smallerEq2(j, n); j = add4(j, 1)) {
      var factor = divide3(multiply2(factorial2(add4(n, subtract2(j, 1))), pow3(4, j)), multiply2(factorial2(subtract2(n, j)), factorial2(multiply2(2, j))));
      S = add4(S, factor);
    }
    return multiply2(n, S);
  }
  function f(s, n, createValue) {
    var c = divide3(1, multiply2(d2(createValue(0), n), subtract2(1, pow3(2, subtract2(1, s)))));
    var S = createValue(0);
    for (var k = createValue(1); smallerEq2(k, n); k = add4(k, 1)) {
      S = add4(S, divide3(multiply2((-1) ** (k - 1), d2(k, n)), pow3(k, s)));
    }
    return multiply2(c, S);
  }
});

// node_modules/mathjs/lib/esm/function/statistics/mode.js
var name115 = "mode";
var dependencies115 = ["typed", "isNaN", "isNumeric"];
var createMode = factory(name115, dependencies115, (_ref) => {
  var {
    typed: typed2,
    isNaN: isNaN3,
    isNumeric: isNumeric2
  } = _ref;
  return typed2(name115, {
    "Array | Matrix": _mode,
    "...": function _(args) {
      return _mode(args);
    }
  });
  function _mode(values) {
    values = flatten(values.valueOf());
    var num = values.length;
    if (num === 0) {
      throw new Error("Cannot calculate mode of an empty array");
    }
    var count2 = {};
    var mode2 = [];
    var max3 = 0;
    for (var i2 = 0; i2 < values.length; i2++) {
      var value = values[i2];
      if (isNumeric2(value) && isNaN3(value)) {
        throw new Error("Cannot calculate mode of an array containing NaN values");
      }
      if (!(value in count2)) {
        count2[value] = 0;
      }
      count2[value]++;
      if (count2[value] === max3) {
        mode2.push(value);
      } else if (count2[value] > max3) {
        max3 = count2[value];
        mode2 = [value];
      }
    }
    return mode2;
  }
});

// node_modules/mathjs/lib/esm/function/statistics/utils/improveErrorMessage.js
function improveErrorMessage(err, fnName, value) {
  var details;
  if (String(err).includes("Unexpected type")) {
    details = arguments.length > 2 ? " (type: " + typeOf(value) + ", value: " + JSON.stringify(value) + ")" : " (type: " + err.data.actual + ")";
    return new TypeError("Cannot calculate " + fnName + ", unexpected type of argument" + details);
  }
  if (String(err).includes("complex numbers")) {
    details = arguments.length > 2 ? " (type: " + typeOf(value) + ", value: " + JSON.stringify(value) + ")" : "";
    return new TypeError("Cannot calculate " + fnName + ", no ordering relation is defined for complex numbers" + details);
  }
  return err;
}

// node_modules/mathjs/lib/esm/function/statistics/prod.js
var name116 = "prod";
var dependencies116 = ["typed", "config", "multiplyScalar", "numeric"];
var createProd = factory(name116, dependencies116, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    multiplyScalar: multiplyScalar2,
    numeric: numeric3
  } = _ref;
  return typed2(name116, {
    // prod([a, b, c, d, ...])
    "Array | Matrix": _prod,
    // prod([a, b, c, d, ...], dim)
    "Array | Matrix, number | BigNumber": function ArrayMatrixNumberBigNumber(array, dim) {
      throw new Error("prod(A, dim) is not yet supported");
    },
    // prod(a, b, c, d, ...)
    "...": function _(args) {
      return _prod(args);
    }
  });
  function _prod(array) {
    var prod2;
    deepForEach(array, function(value) {
      try {
        prod2 = prod2 === void 0 ? value : multiplyScalar2(prod2, value);
      } catch (err) {
        throw improveErrorMessage(err, "prod", value);
      }
    });
    if (typeof prod2 === "string") {
      prod2 = numeric3(prod2, config4.number);
    }
    if (prod2 === void 0) {
      throw new Error("Cannot calculate prod of an empty array");
    }
    return prod2;
  }
});

// node_modules/mathjs/lib/esm/function/string/format.js
var name117 = "format";
var dependencies117 = ["typed"];
var createFormat = factory(name117, dependencies117, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name117, {
    any: format3,
    "any, Object | function | number | BigNumber": format3
  });
});

// node_modules/mathjs/lib/esm/function/string/bin.js
var name118 = "bin";
var dependencies118 = ["typed", "format"];
var createBin = factory(name118, dependencies118, (_ref) => {
  var {
    typed: typed2,
    format: format5
  } = _ref;
  return typed2(name118, {
    "number | BigNumber": function numberBigNumber(n) {
      return format5(n, {
        notation: "bin"
      });
    },
    "number | BigNumber, number | BigNumber": function numberBigNumberNumberBigNumber(n, wordSize) {
      return format5(n, {
        notation: "bin",
        wordSize
      });
    }
  });
});

// node_modules/mathjs/lib/esm/function/string/oct.js
var name119 = "oct";
var dependencies119 = ["typed", "format"];
var createOct = factory(name119, dependencies119, (_ref) => {
  var {
    typed: typed2,
    format: format5
  } = _ref;
  return typed2(name119, {
    "number | BigNumber": function numberBigNumber(n) {
      return format5(n, {
        notation: "oct"
      });
    },
    "number | BigNumber, number | BigNumber": function numberBigNumberNumberBigNumber(n, wordSize) {
      return format5(n, {
        notation: "oct",
        wordSize
      });
    }
  });
});

// node_modules/mathjs/lib/esm/function/string/hex.js
var name120 = "hex";
var dependencies120 = ["typed", "format"];
var createHex = factory(name120, dependencies120, (_ref) => {
  var {
    typed: typed2,
    format: format5
  } = _ref;
  return typed2(name120, {
    "number | BigNumber": function numberBigNumber(n) {
      return format5(n, {
        notation: "hex"
      });
    },
    "number | BigNumber, number | BigNumber": function numberBigNumberNumberBigNumber(n, wordSize) {
      return format5(n, {
        notation: "hex",
        wordSize
      });
    }
  });
});

// node_modules/mathjs/lib/esm/utils/print.js
var printTemplate = /\$([\w.]+)/g;

// node_modules/mathjs/lib/esm/function/string/print.js
var name121 = "print";
var dependencies121 = ["typed"];
var createPrint = factory(name121, dependencies121, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name121, {
    // note: Matrix will be converted automatically to an Array
    "string, Object | Array": _print,
    "string, Object | Array, number | Object": _print
  });
});
function _print(template, values, options) {
  return template.replace(printTemplate, function(original, key) {
    var keys = key.split(".");
    var value = values[keys.shift()];
    if (value !== void 0 && value.isMatrix) {
      value = value.toArray();
    }
    while (keys.length && value !== void 0) {
      var k = keys.shift();
      value = k ? value[k] : value + ".";
    }
    if (value !== void 0) {
      if (!isString(value)) {
        return format3(value, options);
      } else {
        return value;
      }
    }
    return original;
  });
}

// node_modules/mathjs/lib/esm/function/unit/to.js
var name122 = "to";
var dependencies122 = ["typed", "matrix", "concat"];
var createTo = factory(name122, dependencies122, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  } = _ref;
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name122, {
    "Unit, Unit | string": (x, unit2) => x.to(unit2)
  }, matrixAlgorithmSuite({
    Ds: true
  }));
});

// node_modules/mathjs/lib/esm/function/utils/isPrime.js
var name123 = "isPrime";
var dependencies123 = ["typed"];
var createIsPrime = factory(name123, dependencies123, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name123, {
    number: function number2(x) {
      if (x * 0 !== 0) {
        return false;
      }
      if (x <= 3) {
        return x > 1;
      }
      if (x % 2 === 0 || x % 3 === 0) {
        return false;
      }
      for (var i2 = 5; i2 * i2 <= x; i2 += 6) {
        if (x % i2 === 0 || x % (i2 + 2) === 0) {
          return false;
        }
      }
      return true;
    },
    BigNumber: function BigNumber2(n) {
      if (n.toNumber() * 0 !== 0) {
        return false;
      }
      if (n.lte(3)) return n.gt(1);
      if (n.mod(2).eq(0) || n.mod(3).eq(0)) return false;
      if (n.lt(Math.pow(2, 32))) {
        var x = n.toNumber();
        for (var i2 = 5; i2 * i2 <= x; i2 += 6) {
          if (x % i2 === 0 || x % (i2 + 2) === 0) {
            return false;
          }
        }
        return true;
      }
      function modPow(base, exponent, modulus) {
        var accumulator = 1;
        while (!exponent.eq(0)) {
          if (exponent.mod(2).eq(0)) {
            exponent = exponent.div(2);
            base = base.mul(base).mod(modulus);
          } else {
            exponent = exponent.sub(1);
            accumulator = base.mul(accumulator).mod(modulus);
          }
        }
        return accumulator;
      }
      var Decimal2 = n.constructor.clone({
        precision: n.toFixed(0).length * 2
      });
      n = new Decimal2(n);
      var r = 0;
      var d2 = n.sub(1);
      while (d2.mod(2).eq(0)) {
        d2 = d2.div(2);
        r += 1;
      }
      var bases = null;
      if (n.lt("3317044064679887385961981")) {
        bases = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41].filter((x2) => x2 < n);
      } else {
        var max3 = Math.min(n.toNumber() - 2, Math.floor(2 * Math.pow(n.toFixed(0).length * Math.log(10), 2)));
        bases = [];
        for (var _i = 2; _i <= max3; _i += 1) {
          bases.push(max3);
        }
      }
      for (var _i2 = 0; _i2 < bases.length; _i2 += 1) {
        var a = bases[_i2];
        var adn = modPow(n.sub(n).add(a), d2, n);
        if (!adn.eq(1)) {
          for (var _i3 = 0, _x = adn; !_x.eq(n.sub(1)); _i3 += 1, _x = _x.mul(_x).mod(n)) {
            if (_i3 === r - 1) {
              return false;
            }
          }
        }
      }
      return true;
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/function/utils/numeric.js
var name124 = "numeric";
var dependencies124 = ["number", "?bignumber", "?fraction"];
var createNumeric = factory(name124, dependencies124, (_ref) => {
  var {
    number: _number,
    bignumber: bignumber2,
    fraction: fraction2
  } = _ref;
  var validInputTypes = {
    string: true,
    number: true,
    BigNumber: true,
    Fraction: true
  };
  var validOutputTypes = {
    number: (x) => _number(x),
    BigNumber: bignumber2 ? (x) => bignumber2(x) : noBignumber,
    Fraction: fraction2 ? (x) => fraction2(x) : noFraction
  };
  return function numeric3(value) {
    var outputType = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "number";
    var check = arguments.length > 2 ? arguments[2] : void 0;
    if (check !== void 0) {
      throw new SyntaxError("numeric() takes one or two arguments");
    }
    var inputType = typeOf(value);
    if (!(inputType in validInputTypes)) {
      throw new TypeError("Cannot convert " + value + ' of type "' + inputType + '"; valid input types are ' + Object.keys(validInputTypes).join(", "));
    }
    if (!(outputType in validOutputTypes)) {
      throw new TypeError("Cannot convert " + value + ' to type "' + outputType + '"; valid output types are ' + Object.keys(validOutputTypes).join(", "));
    }
    if (outputType === inputType) {
      return value;
    } else {
      return validOutputTypes[outputType](value);
    }
  };
});

// node_modules/mathjs/lib/esm/function/arithmetic/divideScalar.js
var name125 = "divideScalar";
var dependencies125 = ["typed", "numeric"];
var createDivideScalar = factory(name125, dependencies125, (_ref) => {
  var {
    typed: typed2,
    numeric: numeric3
  } = _ref;
  return typed2(name125, {
    "number, number": function numberNumber(x, y) {
      return x / y;
    },
    "Complex, Complex": function ComplexComplex(x, y) {
      return x.div(y);
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return x.div(y);
    },
    "Fraction, Fraction": function FractionFraction(x, y) {
      return x.div(y);
    },
    "Unit, number | Complex | Fraction | BigNumber | Unit": (x, y) => x.divide(y),
    "number | Fraction | Complex | BigNumber, Unit": (x, y) => y.divideInto(x)
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/pow.js
var name126 = "pow";
var dependencies126 = ["typed", "config", "identity", "multiply", "matrix", "inv", "fraction", "number", "Complex"];
var createPow = factory(name126, dependencies126, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    identity: identity2,
    multiply: multiply2,
    matrix: matrix2,
    inv: inv2,
    number: number2,
    fraction: fraction2,
    Complex: Complex3
  } = _ref;
  return typed2(name126, {
    "number, number": _pow,
    "Complex, Complex": function ComplexComplex(x, y) {
      return x.pow(y);
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      if (y.isInteger() || x >= 0 || config4.predictable) {
        return x.pow(y);
      } else {
        return new Complex3(x.toNumber(), 0).pow(y.toNumber(), 0);
      }
    },
    "Fraction, Fraction": function FractionFraction(x, y) {
      var result = x.pow(y);
      if (result != null) {
        return result;
      }
      if (config4.predictable) {
        throw new Error("Result of pow is non-rational and cannot be expressed as a fraction");
      } else {
        return _pow(x.valueOf(), y.valueOf());
      }
    },
    "Array, number": _powArray,
    "Array, BigNumber": function ArrayBigNumber(x, y) {
      return _powArray(x, y.toNumber());
    },
    "Matrix, number": _powMatrix,
    "Matrix, BigNumber": function MatrixBigNumber(x, y) {
      return _powMatrix(x, y.toNumber());
    },
    "Unit, number | BigNumber": function UnitNumberBigNumber(x, y) {
      return x.pow(y);
    }
  });
  function _pow(x, y) {
    if (config4.predictable && !isInteger(y) && x < 0) {
      try {
        var yFrac = fraction2(y);
        var yNum = number2(yFrac);
        if (y === yNum || Math.abs((y - yNum) / y) < 1e-14) {
          if (yFrac.d % 2 === 1) {
            return (yFrac.n % 2 === 0 ? 1 : -1) * Math.pow(-x, y);
          }
        }
      } catch (ex) {
      }
    }
    if (config4.predictable && (x < -1 && y === Infinity || x > -1 && x < 0 && y === -Infinity)) {
      return NaN;
    }
    if (isInteger(y) || x >= 0 || config4.predictable) {
      return powNumber(x, y);
    } else {
      if (x * x < 1 && y === Infinity || x * x > 1 && y === -Infinity) {
        return 0;
      }
      return new Complex3(x, 0).pow(y, 0);
    }
  }
  function _powArray(x, y) {
    if (!isInteger(y)) {
      throw new TypeError("For A^b, b must be an integer (value is " + y + ")");
    }
    var s = arraySize(x);
    if (s.length !== 2) {
      throw new Error("For A^b, A must be 2 dimensional (A has " + s.length + " dimensions)");
    }
    if (s[0] !== s[1]) {
      throw new Error("For A^b, A must be square (size is " + s[0] + "x" + s[1] + ")");
    }
    if (y < 0) {
      try {
        return _powArray(inv2(x), -y);
      } catch (error) {
        if (error.message === "Cannot calculate inverse, determinant is zero") {
          throw new TypeError("For A^b, when A is not invertible, b must be a positive integer (value is " + y + ")");
        }
        throw error;
      }
    }
    var res = identity2(s[0]).valueOf();
    var px = x;
    while (y >= 1) {
      if ((y & 1) === 1) {
        res = multiply2(px, res);
      }
      y >>= 1;
      px = multiply2(px, px);
    }
    return res;
  }
  function _powMatrix(x, y) {
    return matrix2(_powArray(x.valueOf(), y));
  }
});

// node_modules/mathjs/lib/esm/function/arithmetic/round.js
var NO_INT = "Number of decimals in function round must be an integer";
var name127 = "round";
var dependencies127 = ["typed", "config", "matrix", "equalScalar", "zeros", "BigNumber", "DenseMatrix"];
var createRound = factory(name127, dependencies127, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    BigNumber: _BigNumber,
    DenseMatrix: DenseMatrix2
  } = _ref;
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo14xDs = createMatAlgo14xDs({
    typed: typed2
  });
  function toExponent(epsilon) {
    return Math.abs(splitNumber(epsilon).exponent);
  }
  return typed2(name127, {
    number: function number2(x) {
      var xEpsilon = roundNumber(x, toExponent(config4.epsilon));
      var xSelected = nearlyEqual(x, xEpsilon, config4.epsilon) ? xEpsilon : x;
      return roundNumber(xSelected);
    },
    "number, number": function numberNumber(x, n) {
      var epsilonExponent = toExponent(config4.epsilon);
      if (n >= epsilonExponent) {
        return roundNumber(x, n);
      }
      var xEpsilon = roundNumber(x, epsilonExponent);
      var xSelected = nearlyEqual(x, xEpsilon, config4.epsilon) ? xEpsilon : x;
      return roundNumber(xSelected, n);
    },
    "number, BigNumber": function numberBigNumber(x, n) {
      if (!n.isInteger()) {
        throw new TypeError(NO_INT);
      }
      return new _BigNumber(x).toDecimalPlaces(n.toNumber());
    },
    Complex: function Complex3(x) {
      return x.round();
    },
    "Complex, number": function ComplexNumber(x, n) {
      if (n % 1) {
        throw new TypeError(NO_INT);
      }
      return x.round(n);
    },
    "Complex, BigNumber": function ComplexBigNumber(x, n) {
      if (!n.isInteger()) {
        throw new TypeError(NO_INT);
      }
      var _n = n.toNumber();
      return x.round(_n);
    },
    BigNumber: function BigNumber2(x) {
      var xEpsilon = new _BigNumber(x).toDecimalPlaces(toExponent(config4.epsilon));
      var xSelected = nearlyEqual2(x, xEpsilon, config4.epsilon) ? xEpsilon : x;
      return xSelected.toDecimalPlaces(0);
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, n) {
      if (!n.isInteger()) {
        throw new TypeError(NO_INT);
      }
      var epsilonExponent = toExponent(config4.epsilon);
      if (n >= epsilonExponent) {
        return x.toDecimalPlaces(n.toNumber());
      }
      var xEpsilon = x.toDecimalPlaces(epsilonExponent);
      var xSelected = nearlyEqual2(x, xEpsilon, config4.epsilon) ? xEpsilon : x;
      return xSelected.toDecimalPlaces(n.toNumber());
    },
    Fraction: function Fraction3(x) {
      return x.round();
    },
    "Fraction, number": function FractionNumber(x, n) {
      if (n % 1) {
        throw new TypeError(NO_INT);
      }
      return x.round(n);
    },
    "Fraction, BigNumber": function FractionBigNumber(x, n) {
      if (!n.isInteger()) {
        throw new TypeError(NO_INT);
      }
      return x.round(n.toNumber());
    },
    "Unit, number, Unit": typed2.referToSelf((self2) => function(x, n, unit2) {
      var valueless = x.toNumeric(unit2);
      return unit2.multiply(self2(valueless, n));
    }),
    "Unit, BigNumber, Unit": typed2.referToSelf((self2) => (x, n, unit2) => self2(x, n.toNumber(), unit2)),
    "Unit, Unit": typed2.referToSelf((self2) => (x, unit2) => self2(x, 0, unit2)),
    "Array | Matrix, number, Unit": typed2.referToSelf((self2) => (x, n, unit2) => {
      return deepMap(x, (value) => self2(value, n, unit2), true);
    }),
    "Array | Matrix, BigNumber, Unit": typed2.referToSelf((self2) => (x, n, unit2) => self2(x, n.toNumber(), unit2)),
    "Array | Matrix, Unit": typed2.referToSelf((self2) => (x, unit2) => self2(x, 0, unit2)),
    "Array | Matrix": typed2.referToSelf((self2) => (x) => {
      return deepMap(x, self2, true);
    }),
    "SparseMatrix, number | BigNumber": typed2.referToSelf((self2) => (x, n) => {
      return matAlgo11xS0s(x, n, self2, false);
    }),
    "DenseMatrix, number | BigNumber": typed2.referToSelf((self2) => (x, n) => {
      return matAlgo14xDs(x, n, self2, false);
    }),
    "Array, number | BigNumber": typed2.referToSelf((self2) => (x, n) => {
      return matAlgo14xDs(matrix2(x), n, self2, false).valueOf();
    }),
    "number | Complex | BigNumber | Fraction, SparseMatrix": typed2.referToSelf((self2) => (x, n) => {
      if (equalScalar2(x, 0)) {
        return zeros3(n.size(), n.storage());
      }
      return matAlgo12xSfs(n, x, self2, true);
    }),
    "number | Complex | BigNumber | Fraction, DenseMatrix": typed2.referToSelf((self2) => (x, n) => {
      if (equalScalar2(x, 0)) {
        return zeros3(n.size(), n.storage());
      }
      return matAlgo14xDs(n, x, self2, true);
    }),
    "number | Complex | BigNumber | Fraction, Array": typed2.referToSelf((self2) => (x, n) => {
      return matAlgo14xDs(matrix2(n), x, self2, true).valueOf();
    })
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/log.js
var name128 = "log";
var dependencies128 = ["config", "typed", "divideScalar", "Complex"];
var createLog = factory(name128, dependencies128, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    divideScalar: divideScalar2,
    Complex: Complex3
  } = _ref;
  return typed2(name128, {
    number: function number2(x) {
      if (x >= 0 || config4.predictable) {
        return logNumber(x);
      } else {
        return new Complex3(x, 0).log();
      }
    },
    Complex: function Complex4(x) {
      return x.log();
    },
    BigNumber: function BigNumber2(x) {
      if (!x.isNegative() || config4.predictable) {
        return x.ln();
      } else {
        return new Complex3(x.toNumber(), 0).log();
      }
    },
    "any, any": typed2.referToSelf((self2) => (x, base) => {
      return divideScalar2(self2(x), self2(base));
    })
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/log1p.js
var name129 = "log1p";
var dependencies129 = ["typed", "config", "divideScalar", "log", "Complex"];
var createLog1p = factory(name129, dependencies129, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    divideScalar: divideScalar2,
    log: log4,
    Complex: Complex3
  } = _ref;
  return typed2(name129, {
    number: function number2(x) {
      if (x >= -1 || config4.predictable) {
        return log1p(x);
      } else {
        return _log1pComplex(new Complex3(x, 0));
      }
    },
    Complex: _log1pComplex,
    BigNumber: function BigNumber2(x) {
      var y = x.plus(1);
      if (!y.isNegative() || config4.predictable) {
        return y.ln();
      } else {
        return _log1pComplex(new Complex3(x.toNumber(), 0));
      }
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2)),
    "any, any": typed2.referToSelf((self2) => (x, base) => {
      return divideScalar2(self2(x), log4(base));
    })
  });
  function _log1pComplex(x) {
    var xRe1p = x.re + 1;
    return new Complex3(Math.log(Math.sqrt(xRe1p * xRe1p + x.im * x.im)), Math.atan2(x.im, xRe1p));
  }
});

// node_modules/mathjs/lib/esm/function/arithmetic/nthRoots.js
var name130 = "nthRoots";
var dependencies130 = ["config", "typed", "divideScalar", "Complex"];
var createNthRoots = factory(name130, dependencies130, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    divideScalar: divideScalar2,
    Complex: Complex3
  } = _ref;
  var _calculateExactResult = [function realPos(val) {
    return new Complex3(val, 0);
  }, function imagPos(val) {
    return new Complex3(0, val);
  }, function realNeg(val) {
    return new Complex3(-val, 0);
  }, function imagNeg(val) {
    return new Complex3(0, -val);
  }];
  function _nthComplexRoots(a, root) {
    if (root < 0) throw new Error("Root must be greater than zero");
    if (root === 0) throw new Error("Root must be non-zero");
    if (root % 1 !== 0) throw new Error("Root must be an integer");
    if (a === 0 || a.abs() === 0) return [new Complex3(0, 0)];
    var aIsNumeric = typeof a === "number";
    var offset;
    if (aIsNumeric || a.re === 0 || a.im === 0) {
      if (aIsNumeric) {
        offset = 2 * +(a < 0);
      } else if (a.im === 0) {
        offset = 2 * +(a.re < 0);
      } else {
        offset = 2 * +(a.im < 0) + 1;
      }
    }
    var arg2 = a.arg();
    var abs3 = a.abs();
    var roots = [];
    var r = Math.pow(abs3, 1 / root);
    for (var k = 0; k < root; k++) {
      var halfPiFactor = (offset + 4 * k) / root;
      if (halfPiFactor === Math.round(halfPiFactor)) {
        roots.push(_calculateExactResult[halfPiFactor % 4](r));
        continue;
      }
      roots.push(new Complex3({
        r,
        phi: (arg2 + 2 * Math.PI * k) / root
      }));
    }
    return roots;
  }
  return typed2(name130, {
    Complex: function Complex4(x) {
      return _nthComplexRoots(x, 2);
    },
    "Complex, number": _nthComplexRoots
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/dotPow.js
var name131 = "dotPow";
var dependencies131 = ["typed", "equalScalar", "matrix", "pow", "DenseMatrix", "concat"];
var createDotPow = factory(name131, dependencies131, (_ref) => {
  var {
    typed: typed2,
    equalScalar: equalScalar2,
    matrix: matrix2,
    pow: pow3,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo07xSSf = createMatAlgo07xSSf({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  var powScalarSignatures = {};
  for (var signature2 in pow3.signatures) {
    if (Object.prototype.hasOwnProperty.call(pow3.signatures, signature2)) {
      if (!signature2.includes("Matrix") && !signature2.includes("Array")) {
        powScalarSignatures[signature2] = pow3.signatures[signature2];
      }
    }
  }
  var powScalar = typed2(powScalarSignatures);
  return typed2(name131, matrixAlgorithmSuite({
    elop: powScalar,
    SS: matAlgo07xSSf,
    DS: matAlgo03xDSf,
    Ss: matAlgo11xS0s,
    sS: matAlgo12xSfs
  }));
});

// node_modules/mathjs/lib/esm/function/arithmetic/dotDivide.js
var name132 = "dotDivide";
var dependencies132 = ["typed", "matrix", "equalScalar", "divideScalar", "DenseMatrix", "concat"];
var createDotDivide = factory(name132, dependencies132, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    divideScalar: divideScalar2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo02xDS0 = createMatAlgo02xDS0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo07xSSf = createMatAlgo07xSSf({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name132, matrixAlgorithmSuite({
    elop: divideScalar2,
    SS: matAlgo07xSSf,
    DS: matAlgo03xDSf,
    SD: matAlgo02xDS0,
    Ss: matAlgo11xS0s,
    sS: matAlgo12xSfs
  }));
});

// node_modules/mathjs/lib/esm/function/algebra/solver/utils/solveValidation.js
function createSolveValidation(_ref) {
  var {
    DenseMatrix: DenseMatrix2
  } = _ref;
  return function solveValidation(m, b2, copy) {
    var mSize = m.size();
    if (mSize.length !== 2) {
      throw new RangeError("Matrix must be two dimensional (size: " + format3(mSize) + ")");
    }
    var rows = mSize[0];
    var columns = mSize[1];
    if (rows !== columns) {
      throw new RangeError("Matrix must be square (size: " + format3(mSize) + ")");
    }
    var data = [];
    if (isMatrix(b2)) {
      var bSize = b2.size();
      var bdata = b2._data;
      if (bSize.length === 1) {
        if (bSize[0] !== rows) {
          throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");
        }
        for (var i2 = 0; i2 < rows; i2++) {
          data[i2] = [bdata[i2]];
        }
        return new DenseMatrix2({
          data,
          size: [rows, 1],
          datatype: b2._datatype
        });
      }
      if (bSize.length === 2) {
        if (bSize[0] !== rows || bSize[1] !== 1) {
          throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");
        }
        if (isDenseMatrix(b2)) {
          if (copy) {
            data = [];
            for (var _i = 0; _i < rows; _i++) {
              data[_i] = [bdata[_i][0]];
            }
            return new DenseMatrix2({
              data,
              size: [rows, 1],
              datatype: b2._datatype
            });
          }
          return b2;
        }
        if (isSparseMatrix(b2)) {
          for (var _i2 = 0; _i2 < rows; _i2++) {
            data[_i2] = [0];
          }
          var values = b2._values;
          var index2 = b2._index;
          var ptr = b2._ptr;
          for (var k1 = ptr[1], k = ptr[0]; k < k1; k++) {
            var _i3 = index2[k];
            data[_i3][0] = values[k];
          }
          return new DenseMatrix2({
            data,
            size: [rows, 1],
            datatype: b2._datatype
          });
        }
      }
      throw new RangeError("Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.");
    }
    if (isArray(b2)) {
      var bsize = arraySize(b2);
      if (bsize.length === 1) {
        if (bsize[0] !== rows) {
          throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");
        }
        for (var _i4 = 0; _i4 < rows; _i4++) {
          data[_i4] = [b2[_i4]];
        }
        return new DenseMatrix2({
          data,
          size: [rows, 1]
        });
      }
      if (bsize.length === 2) {
        if (bsize[0] !== rows || bsize[1] !== 1) {
          throw new RangeError("Dimension mismatch. Matrix columns must match vector length.");
        }
        for (var _i5 = 0; _i5 < rows; _i5++) {
          data[_i5] = [b2[_i5][0]];
        }
        return new DenseMatrix2({
          data,
          size: [rows, 1]
        });
      }
      throw new RangeError("Dimension mismatch. The right side has to be either 1- or 2-dimensional vector.");
    }
  };
}

// node_modules/mathjs/lib/esm/function/algebra/solver/lsolve.js
var name133 = "lsolve";
var dependencies133 = ["typed", "matrix", "divideScalar", "multiplyScalar", "subtractScalar", "equalScalar", "DenseMatrix"];
var createLsolve = factory(name133, dependencies133, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    divideScalar: divideScalar2,
    multiplyScalar: multiplyScalar2,
    subtractScalar: subtractScalar2,
    equalScalar: equalScalar2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  var solveValidation = createSolveValidation({
    DenseMatrix: DenseMatrix2
  });
  return typed2(name133, {
    "SparseMatrix, Array | Matrix": function SparseMatrixArrayMatrix(m, b2) {
      return _sparseForwardSubstitution(m, b2);
    },
    "DenseMatrix, Array | Matrix": function DenseMatrixArrayMatrix(m, b2) {
      return _denseForwardSubstitution(m, b2);
    },
    "Array, Array | Matrix": function ArrayArrayMatrix(a, b2) {
      var m = matrix2(a);
      var r = _denseForwardSubstitution(m, b2);
      return r.valueOf();
    }
  });
  function _denseForwardSubstitution(m, b2) {
    b2 = solveValidation(m, b2, true);
    var bdata = b2._data;
    var rows = m._size[0];
    var columns = m._size[1];
    var x = [];
    var mdata = m._data;
    for (var j = 0; j < columns; j++) {
      var bj = bdata[j][0] || 0;
      var xj = void 0;
      if (!equalScalar2(bj, 0)) {
        var vjj = mdata[j][j];
        if (equalScalar2(vjj, 0)) {
          throw new Error("Linear system cannot be solved since matrix is singular");
        }
        xj = divideScalar2(bj, vjj);
        for (var i2 = j + 1; i2 < rows; i2++) {
          bdata[i2] = [subtractScalar2(bdata[i2][0] || 0, multiplyScalar2(xj, mdata[i2][j]))];
        }
      } else {
        xj = 0;
      }
      x[j] = [xj];
    }
    return new DenseMatrix2({
      data: x,
      size: [rows, 1]
    });
  }
  function _sparseForwardSubstitution(m, b2) {
    b2 = solveValidation(m, b2, true);
    var bdata = b2._data;
    var rows = m._size[0];
    var columns = m._size[1];
    var values = m._values;
    var index2 = m._index;
    var ptr = m._ptr;
    var x = [];
    for (var j = 0; j < columns; j++) {
      var bj = bdata[j][0] || 0;
      if (!equalScalar2(bj, 0)) {
        var vjj = 0;
        var jValues = [];
        var jIndices = [];
        var firstIndex = ptr[j];
        var lastIndex = ptr[j + 1];
        for (var k = firstIndex; k < lastIndex; k++) {
          var i2 = index2[k];
          if (i2 === j) {
            vjj = values[k];
          } else if (i2 > j) {
            jValues.push(values[k]);
            jIndices.push(i2);
          }
        }
        if (equalScalar2(vjj, 0)) {
          throw new Error("Linear system cannot be solved since matrix is singular");
        }
        var xj = divideScalar2(bj, vjj);
        for (var _k = 0, l = jIndices.length; _k < l; _k++) {
          var _i = jIndices[_k];
          bdata[_i] = [subtractScalar2(bdata[_i][0] || 0, multiplyScalar2(xj, jValues[_k]))];
        }
        x[j] = [xj];
      } else {
        x[j] = [0];
      }
    }
    return new DenseMatrix2({
      data: x,
      size: [rows, 1]
    });
  }
});

// node_modules/mathjs/lib/esm/function/algebra/solver/usolve.js
var name134 = "usolve";
var dependencies134 = ["typed", "matrix", "divideScalar", "multiplyScalar", "subtractScalar", "equalScalar", "DenseMatrix"];
var createUsolve = factory(name134, dependencies134, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    divideScalar: divideScalar2,
    multiplyScalar: multiplyScalar2,
    subtractScalar: subtractScalar2,
    equalScalar: equalScalar2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  var solveValidation = createSolveValidation({
    DenseMatrix: DenseMatrix2
  });
  return typed2(name134, {
    "SparseMatrix, Array | Matrix": function SparseMatrixArrayMatrix(m, b2) {
      return _sparseBackwardSubstitution(m, b2);
    },
    "DenseMatrix, Array | Matrix": function DenseMatrixArrayMatrix(m, b2) {
      return _denseBackwardSubstitution(m, b2);
    },
    "Array, Array | Matrix": function ArrayArrayMatrix(a, b2) {
      var m = matrix2(a);
      var r = _denseBackwardSubstitution(m, b2);
      return r.valueOf();
    }
  });
  function _denseBackwardSubstitution(m, b2) {
    b2 = solveValidation(m, b2, true);
    var bdata = b2._data;
    var rows = m._size[0];
    var columns = m._size[1];
    var x = [];
    var mdata = m._data;
    for (var j = columns - 1; j >= 0; j--) {
      var bj = bdata[j][0] || 0;
      var xj = void 0;
      if (!equalScalar2(bj, 0)) {
        var vjj = mdata[j][j];
        if (equalScalar2(vjj, 0)) {
          throw new Error("Linear system cannot be solved since matrix is singular");
        }
        xj = divideScalar2(bj, vjj);
        for (var i2 = j - 1; i2 >= 0; i2--) {
          bdata[i2] = [subtractScalar2(bdata[i2][0] || 0, multiplyScalar2(xj, mdata[i2][j]))];
        }
      } else {
        xj = 0;
      }
      x[j] = [xj];
    }
    return new DenseMatrix2({
      data: x,
      size: [rows, 1]
    });
  }
  function _sparseBackwardSubstitution(m, b2) {
    b2 = solveValidation(m, b2, true);
    var bdata = b2._data;
    var rows = m._size[0];
    var columns = m._size[1];
    var values = m._values;
    var index2 = m._index;
    var ptr = m._ptr;
    var x = [];
    for (var j = columns - 1; j >= 0; j--) {
      var bj = bdata[j][0] || 0;
      if (!equalScalar2(bj, 0)) {
        var vjj = 0;
        var jValues = [];
        var jIndices = [];
        var firstIndex = ptr[j];
        var lastIndex = ptr[j + 1];
        for (var k = lastIndex - 1; k >= firstIndex; k--) {
          var i2 = index2[k];
          if (i2 === j) {
            vjj = values[k];
          } else if (i2 < j) {
            jValues.push(values[k]);
            jIndices.push(i2);
          }
        }
        if (equalScalar2(vjj, 0)) {
          throw new Error("Linear system cannot be solved since matrix is singular");
        }
        var xj = divideScalar2(bj, vjj);
        for (var _k = 0, _lastIndex = jIndices.length; _k < _lastIndex; _k++) {
          var _i = jIndices[_k];
          bdata[_i] = [subtractScalar2(bdata[_i][0], multiplyScalar2(xj, jValues[_k]))];
        }
        x[j] = [xj];
      } else {
        x[j] = [0];
      }
    }
    return new DenseMatrix2({
      data: x,
      size: [rows, 1]
    });
  }
});

// node_modules/mathjs/lib/esm/function/algebra/solver/lsolveAll.js
var name135 = "lsolveAll";
var dependencies135 = ["typed", "matrix", "divideScalar", "multiplyScalar", "subtractScalar", "equalScalar", "DenseMatrix"];
var createLsolveAll = factory(name135, dependencies135, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    divideScalar: divideScalar2,
    multiplyScalar: multiplyScalar2,
    subtractScalar: subtractScalar2,
    equalScalar: equalScalar2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  var solveValidation = createSolveValidation({
    DenseMatrix: DenseMatrix2
  });
  return typed2(name135, {
    "SparseMatrix, Array | Matrix": function SparseMatrixArrayMatrix(m, b2) {
      return _sparseForwardSubstitution(m, b2);
    },
    "DenseMatrix, Array | Matrix": function DenseMatrixArrayMatrix(m, b2) {
      return _denseForwardSubstitution(m, b2);
    },
    "Array, Array | Matrix": function ArrayArrayMatrix(a, b2) {
      var m = matrix2(a);
      var R = _denseForwardSubstitution(m, b2);
      return R.map((r) => r.valueOf());
    }
  });
  function _denseForwardSubstitution(m, b_) {
    var B = [solveValidation(m, b_, true)._data.map((e3) => e3[0])];
    var M = m._data;
    var rows = m._size[0];
    var columns = m._size[1];
    for (var i2 = 0; i2 < columns; i2++) {
      var L = B.length;
      for (var k = 0; k < L; k++) {
        var b2 = B[k];
        if (!equalScalar2(M[i2][i2], 0)) {
          b2[i2] = divideScalar2(b2[i2], M[i2][i2]);
          for (var j = i2 + 1; j < columns; j++) {
            b2[j] = subtractScalar2(b2[j], multiplyScalar2(b2[i2], M[j][i2]));
          }
        } else if (!equalScalar2(b2[i2], 0)) {
          if (k === 0) {
            return [];
          } else {
            B.splice(k, 1);
            k -= 1;
            L -= 1;
          }
        } else if (k === 0) {
          var bNew = [...b2];
          bNew[i2] = 1;
          for (var _j = i2 + 1; _j < columns; _j++) {
            bNew[_j] = subtractScalar2(bNew[_j], M[_j][i2]);
          }
          B.push(bNew);
        }
      }
    }
    return B.map((x) => new DenseMatrix2({
      data: x.map((e3) => [e3]),
      size: [rows, 1]
    }));
  }
  function _sparseForwardSubstitution(m, b_) {
    var B = [solveValidation(m, b_, true)._data.map((e3) => e3[0])];
    var rows = m._size[0];
    var columns = m._size[1];
    var values = m._values;
    var index2 = m._index;
    var ptr = m._ptr;
    for (var i2 = 0; i2 < columns; i2++) {
      var L = B.length;
      for (var k = 0; k < L; k++) {
        var b2 = B[k];
        var iValues = [];
        var iIndices = [];
        var firstIndex = ptr[i2];
        var lastIndex = ptr[i2 + 1];
        var Mii = 0;
        for (var j = firstIndex; j < lastIndex; j++) {
          var J = index2[j];
          if (J === i2) {
            Mii = values[j];
          } else if (J > i2) {
            iValues.push(values[j]);
            iIndices.push(J);
          }
        }
        if (!equalScalar2(Mii, 0)) {
          b2[i2] = divideScalar2(b2[i2], Mii);
          for (var _j2 = 0, _lastIndex = iIndices.length; _j2 < _lastIndex; _j2++) {
            var _J = iIndices[_j2];
            b2[_J] = subtractScalar2(b2[_J], multiplyScalar2(b2[i2], iValues[_j2]));
          }
        } else if (!equalScalar2(b2[i2], 0)) {
          if (k === 0) {
            return [];
          } else {
            B.splice(k, 1);
            k -= 1;
            L -= 1;
          }
        } else if (k === 0) {
          var bNew = [...b2];
          bNew[i2] = 1;
          for (var _j3 = 0, _lastIndex2 = iIndices.length; _j3 < _lastIndex2; _j3++) {
            var _J2 = iIndices[_j3];
            bNew[_J2] = subtractScalar2(bNew[_J2], iValues[_j3]);
          }
          B.push(bNew);
        }
      }
    }
    return B.map((x) => new DenseMatrix2({
      data: x.map((e3) => [e3]),
      size: [rows, 1]
    }));
  }
});

// node_modules/mathjs/lib/esm/function/algebra/solver/usolveAll.js
var name136 = "usolveAll";
var dependencies136 = ["typed", "matrix", "divideScalar", "multiplyScalar", "subtractScalar", "equalScalar", "DenseMatrix"];
var createUsolveAll = factory(name136, dependencies136, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    divideScalar: divideScalar2,
    multiplyScalar: multiplyScalar2,
    subtractScalar: subtractScalar2,
    equalScalar: equalScalar2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  var solveValidation = createSolveValidation({
    DenseMatrix: DenseMatrix2
  });
  return typed2(name136, {
    "SparseMatrix, Array | Matrix": function SparseMatrixArrayMatrix(m, b2) {
      return _sparseBackwardSubstitution(m, b2);
    },
    "DenseMatrix, Array | Matrix": function DenseMatrixArrayMatrix(m, b2) {
      return _denseBackwardSubstitution(m, b2);
    },
    "Array, Array | Matrix": function ArrayArrayMatrix(a, b2) {
      var m = matrix2(a);
      var R = _denseBackwardSubstitution(m, b2);
      return R.map((r) => r.valueOf());
    }
  });
  function _denseBackwardSubstitution(m, b_) {
    var B = [solveValidation(m, b_, true)._data.map((e3) => e3[0])];
    var M = m._data;
    var rows = m._size[0];
    var columns = m._size[1];
    for (var i2 = columns - 1; i2 >= 0; i2--) {
      var L = B.length;
      for (var k = 0; k < L; k++) {
        var b2 = B[k];
        if (!equalScalar2(M[i2][i2], 0)) {
          b2[i2] = divideScalar2(b2[i2], M[i2][i2]);
          for (var j = i2 - 1; j >= 0; j--) {
            b2[j] = subtractScalar2(b2[j], multiplyScalar2(b2[i2], M[j][i2]));
          }
        } else if (!equalScalar2(b2[i2], 0)) {
          if (k === 0) {
            return [];
          } else {
            B.splice(k, 1);
            k -= 1;
            L -= 1;
          }
        } else if (k === 0) {
          var bNew = [...b2];
          bNew[i2] = 1;
          for (var _j = i2 - 1; _j >= 0; _j--) {
            bNew[_j] = subtractScalar2(bNew[_j], M[_j][i2]);
          }
          B.push(bNew);
        }
      }
    }
    return B.map((x) => new DenseMatrix2({
      data: x.map((e3) => [e3]),
      size: [rows, 1]
    }));
  }
  function _sparseBackwardSubstitution(m, b_) {
    var B = [solveValidation(m, b_, true)._data.map((e3) => e3[0])];
    var rows = m._size[0];
    var columns = m._size[1];
    var values = m._values;
    var index2 = m._index;
    var ptr = m._ptr;
    for (var i2 = columns - 1; i2 >= 0; i2--) {
      var L = B.length;
      for (var k = 0; k < L; k++) {
        var b2 = B[k];
        var iValues = [];
        var iIndices = [];
        var firstIndex = ptr[i2];
        var lastIndex = ptr[i2 + 1];
        var Mii = 0;
        for (var j = lastIndex - 1; j >= firstIndex; j--) {
          var J = index2[j];
          if (J === i2) {
            Mii = values[j];
          } else if (J < i2) {
            iValues.push(values[j]);
            iIndices.push(J);
          }
        }
        if (!equalScalar2(Mii, 0)) {
          b2[i2] = divideScalar2(b2[i2], Mii);
          for (var _j2 = 0, _lastIndex = iIndices.length; _j2 < _lastIndex; _j2++) {
            var _J = iIndices[_j2];
            b2[_J] = subtractScalar2(b2[_J], multiplyScalar2(b2[i2], iValues[_j2]));
          }
        } else if (!equalScalar2(b2[i2], 0)) {
          if (k === 0) {
            return [];
          } else {
            B.splice(k, 1);
            k -= 1;
            L -= 1;
          }
        } else if (k === 0) {
          var bNew = [...b2];
          bNew[i2] = 1;
          for (var _j3 = 0, _lastIndex2 = iIndices.length; _j3 < _lastIndex2; _j3++) {
            var _J2 = iIndices[_j3];
            bNew[_J2] = subtractScalar2(bNew[_J2], iValues[_j3]);
          }
          B.push(bNew);
        }
      }
    }
    return B.map((x) => new DenseMatrix2({
      data: x.map((e3) => [e3]),
      size: [rows, 1]
    }));
  }
});

// node_modules/mathjs/lib/esm/type/matrix/utils/matAlgo08xS0Sid.js
var name137 = "matAlgo08xS0Sid";
var dependencies137 = ["typed", "equalScalar"];
var createMatAlgo08xS0Sid = factory(name137, dependencies137, (_ref) => {
  var {
    typed: typed2,
    equalScalar: equalScalar2
  } = _ref;
  return function matAlgo08xS0Sid(a, b2, callback) {
    var avalues = a._values;
    var aindex = a._index;
    var aptr = a._ptr;
    var asize = a._size;
    var adt = a._datatype || a._data === void 0 ? a._datatype : a.getDataType();
    var bvalues = b2._values;
    var bindex = b2._index;
    var bptr = b2._ptr;
    var bsize = b2._size;
    var bdt = b2._datatype || b2._data === void 0 ? b2._datatype : b2.getDataType();
    if (asize.length !== bsize.length) {
      throw new DimensionError(asize.length, bsize.length);
    }
    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {
      throw new RangeError("Dimension mismatch. Matrix A (" + asize + ") must match Matrix B (" + bsize + ")");
    }
    if (!avalues || !bvalues) {
      throw new Error("Cannot perform operation on Pattern Sparse Matrices");
    }
    var rows = asize[0];
    var columns = asize[1];
    var dt;
    var eq = equalScalar2;
    var zero = 0;
    var cf = callback;
    if (typeof adt === "string" && adt === bdt && adt !== "mixed") {
      dt = adt;
      eq = typed2.find(equalScalar2, [dt, dt]);
      zero = typed2.convert(0, dt);
      cf = typed2.find(callback, [dt, dt]);
    }
    var cvalues = [];
    var cindex = [];
    var cptr = [];
    var x = [];
    var w = [];
    var k, k0, k1, i2;
    for (var j = 0; j < columns; j++) {
      cptr[j] = cindex.length;
      var mark = j + 1;
      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {
        i2 = aindex[k];
        w[i2] = mark;
        x[i2] = avalues[k];
        cindex.push(i2);
      }
      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {
        i2 = bindex[k];
        if (w[i2] === mark) {
          x[i2] = cf(x[i2], bvalues[k]);
        }
      }
      k = cptr[j];
      while (k < cindex.length) {
        i2 = cindex[k];
        var v = x[i2];
        if (!eq(v, zero)) {
          cvalues.push(v);
          k++;
        } else {
          cindex.splice(k, 1);
        }
      }
    }
    cptr[columns] = cindex.length;
    return a.createSparseMatrix({
      values: cvalues,
      index: cindex,
      ptr: cptr,
      size: [rows, columns],
      datatype: adt === a._datatype && bdt === b2._datatype ? dt : void 0
    });
  };
});

// node_modules/mathjs/lib/esm/function/bitwise/useMatrixForArrayScalar.js
var createUseMatrixForArrayScalar = factory("useMatrixForArrayScalar", ["typed", "matrix"], (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2
  } = _ref;
  return {
    "Array, number": typed2.referTo("DenseMatrix, number", (selfDn) => (x, y) => selfDn(matrix2(x), y).valueOf()),
    "Array, BigNumber": typed2.referTo("DenseMatrix, BigNumber", (selfDB) => (x, y) => selfDB(matrix2(x), y).valueOf()),
    "number, Array": typed2.referTo("number, DenseMatrix", (selfnD) => (x, y) => selfnD(x, matrix2(y)).valueOf()),
    "BigNumber, Array": typed2.referTo("BigNumber, DenseMatrix", (selfBD) => (x, y) => selfBD(x, matrix2(y)).valueOf())
  };
});

// node_modules/mathjs/lib/esm/function/bitwise/leftShift.js
var name138 = "leftShift";
var dependencies138 = ["typed", "matrix", "equalScalar", "zeros", "DenseMatrix", "concat"];
var createLeftShift = factory(name138, dependencies138, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo01xDSid = createMatAlgo01xDSid({
    typed: typed2
  });
  var matAlgo02xDS0 = createMatAlgo02xDS0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo08xS0Sid = createMatAlgo08xS0Sid({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo10xSids = createMatAlgo10xSids({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo14xDs = createMatAlgo14xDs({
    typed: typed2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  var useMatrixForArrayScalar = createUseMatrixForArrayScalar({
    typed: typed2,
    matrix: matrix2
  });
  return typed2(name138, {
    "number, number": leftShiftNumber,
    "BigNumber, BigNumber": leftShiftBigNumber,
    "SparseMatrix, number | BigNumber": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(y, 0)) {
        return x.clone();
      }
      return matAlgo11xS0s(x, y, self2, false);
    }),
    "DenseMatrix, number | BigNumber": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(y, 0)) {
        return x.clone();
      }
      return matAlgo14xDs(x, y, self2, false);
    }),
    "number | BigNumber, SparseMatrix": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(x, 0)) {
        return zeros3(y.size(), y.storage());
      }
      return matAlgo10xSids(y, x, self2, true);
    }),
    "number | BigNumber, DenseMatrix": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(x, 0)) {
        return zeros3(y.size(), y.storage());
      }
      return matAlgo14xDs(y, x, self2, true);
    })
  }, useMatrixForArrayScalar, matrixAlgorithmSuite({
    SS: matAlgo08xS0Sid,
    DS: matAlgo01xDSid,
    SD: matAlgo02xDS0
  }));
});

// node_modules/mathjs/lib/esm/function/bitwise/rightArithShift.js
var name139 = "rightArithShift";
var dependencies139 = ["typed", "matrix", "equalScalar", "zeros", "DenseMatrix", "concat"];
var createRightArithShift = factory(name139, dependencies139, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo01xDSid = createMatAlgo01xDSid({
    typed: typed2
  });
  var matAlgo02xDS0 = createMatAlgo02xDS0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo08xS0Sid = createMatAlgo08xS0Sid({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo10xSids = createMatAlgo10xSids({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo14xDs = createMatAlgo14xDs({
    typed: typed2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  var useMatrixForArrayScalar = createUseMatrixForArrayScalar({
    typed: typed2,
    matrix: matrix2
  });
  return typed2(name139, {
    "number, number": rightArithShiftNumber,
    "BigNumber, BigNumber": rightArithShiftBigNumber,
    "SparseMatrix, number | BigNumber": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(y, 0)) {
        return x.clone();
      }
      return matAlgo11xS0s(x, y, self2, false);
    }),
    "DenseMatrix, number | BigNumber": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(y, 0)) {
        return x.clone();
      }
      return matAlgo14xDs(x, y, self2, false);
    }),
    "number | BigNumber, SparseMatrix": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(x, 0)) {
        return zeros3(y.size(), y.storage());
      }
      return matAlgo10xSids(y, x, self2, true);
    }),
    "number | BigNumber, DenseMatrix": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(x, 0)) {
        return zeros3(y.size(), y.storage());
      }
      return matAlgo14xDs(y, x, self2, true);
    })
  }, useMatrixForArrayScalar, matrixAlgorithmSuite({
    SS: matAlgo08xS0Sid,
    DS: matAlgo01xDSid,
    SD: matAlgo02xDS0
  }));
});

// node_modules/mathjs/lib/esm/function/bitwise/rightLogShift.js
var name140 = "rightLogShift";
var dependencies140 = ["typed", "matrix", "equalScalar", "zeros", "DenseMatrix", "concat"];
var createRightLogShift = factory(name140, dependencies140, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo01xDSid = createMatAlgo01xDSid({
    typed: typed2
  });
  var matAlgo02xDS0 = createMatAlgo02xDS0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo08xS0Sid = createMatAlgo08xS0Sid({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo10xSids = createMatAlgo10xSids({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo14xDs = createMatAlgo14xDs({
    typed: typed2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  var useMatrixForArrayScalar = createUseMatrixForArrayScalar({
    typed: typed2,
    matrix: matrix2
  });
  return typed2(name140, {
    "number, number": rightLogShiftNumber,
    // 'BigNumber, BigNumber': ..., // TODO: implement BigNumber support for rightLogShift
    "SparseMatrix, number | BigNumber": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(y, 0)) {
        return x.clone();
      }
      return matAlgo11xS0s(x, y, self2, false);
    }),
    "DenseMatrix, number | BigNumber": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(y, 0)) {
        return x.clone();
      }
      return matAlgo14xDs(x, y, self2, false);
    }),
    "number | BigNumber, SparseMatrix": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(x, 0)) {
        return zeros3(y.size(), y.storage());
      }
      return matAlgo10xSids(y, x, self2, true);
    }),
    "number | BigNumber, DenseMatrix": typed2.referToSelf((self2) => (x, y) => {
      if (equalScalar2(x, 0)) {
        return zeros3(y.size(), y.storage());
      }
      return matAlgo14xDs(y, x, self2, true);
    })
  }, useMatrixForArrayScalar, matrixAlgorithmSuite({
    SS: matAlgo08xS0Sid,
    DS: matAlgo01xDSid,
    SD: matAlgo02xDS0
  }));
});

// node_modules/mathjs/lib/esm/function/logical/and.js
var name141 = "and";
var dependencies141 = ["typed", "matrix", "equalScalar", "zeros", "not", "concat"];
var createAnd = factory(name141, dependencies141, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    not: not2,
    concat: concat4
  } = _ref;
  var matAlgo02xDS0 = createMatAlgo02xDS0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo06xS0S0 = createMatAlgo06xS0S0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo14xDs = createMatAlgo14xDs({
    typed: typed2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name141, {
    "number, number": andNumber,
    "Complex, Complex": function ComplexComplex(x, y) {
      return (x.re !== 0 || x.im !== 0) && (y.re !== 0 || y.im !== 0);
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return !x.isZero() && !y.isZero() && !x.isNaN() && !y.isNaN();
    },
    "Unit, Unit": typed2.referToSelf((self2) => (x, y) => self2(x.value || 0, y.value || 0)),
    "SparseMatrix, any": typed2.referToSelf((self2) => (x, y) => {
      if (not2(y)) {
        return zeros3(x.size(), x.storage());
      }
      return matAlgo11xS0s(x, y, self2, false);
    }),
    "DenseMatrix, any": typed2.referToSelf((self2) => (x, y) => {
      if (not2(y)) {
        return zeros3(x.size(), x.storage());
      }
      return matAlgo14xDs(x, y, self2, false);
    }),
    "any, SparseMatrix": typed2.referToSelf((self2) => (x, y) => {
      if (not2(x)) {
        return zeros3(x.size(), x.storage());
      }
      return matAlgo11xS0s(y, x, self2, true);
    }),
    "any, DenseMatrix": typed2.referToSelf((self2) => (x, y) => {
      if (not2(x)) {
        return zeros3(x.size(), x.storage());
      }
      return matAlgo14xDs(y, x, self2, true);
    }),
    "Array, any": typed2.referToSelf((self2) => (x, y) => {
      return self2(matrix2(x), y).valueOf();
    }),
    "any, Array": typed2.referToSelf((self2) => (x, y) => {
      return self2(x, matrix2(y)).valueOf();
    })
  }, matrixAlgorithmSuite({
    SS: matAlgo06xS0S0,
    DS: matAlgo02xDS0
  }));
});

// node_modules/mathjs/lib/esm/function/relational/compare.js
var name142 = "compare";
var dependencies142 = ["typed", "config", "matrix", "equalScalar", "BigNumber", "Fraction", "DenseMatrix", "concat"];
var createCompare = factory(name142, dependencies142, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    equalScalar: equalScalar2,
    matrix: matrix2,
    BigNumber: BigNumber2,
    Fraction: Fraction3,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo05xSfSf = createMatAlgo05xSfSf({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  var compareUnits = createCompareUnits({
    typed: typed2
  });
  return typed2(name142, createCompareNumber({
    typed: typed2,
    config: config4
  }), {
    "boolean, boolean": function booleanBoolean(x, y) {
      return x === y ? 0 : x > y ? 1 : -1;
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return nearlyEqual2(x, y, config4.epsilon) ? new BigNumber2(0) : new BigNumber2(x.cmp(y));
    },
    "Fraction, Fraction": function FractionFraction(x, y) {
      return new Fraction3(x.compare(y));
    },
    "Complex, Complex": function ComplexComplex() {
      throw new TypeError("No ordering relation is defined for complex numbers");
    }
  }, compareUnits, matrixAlgorithmSuite({
    SS: matAlgo05xSfSf,
    DS: matAlgo03xDSf,
    Ss: matAlgo12xSfs
  }));
});
var createCompareNumber = factory(name142, ["typed", "config"], (_ref2) => {
  var {
    typed: typed2,
    config: config4
  } = _ref2;
  return typed2(name142, {
    "number, number": function numberNumber(x, y) {
      return nearlyEqual(x, y, config4.epsilon) ? 0 : x > y ? 1 : -1;
    }
  });
});

// node_modules/mathjs/lib/esm/function/relational/compareNatural.js
var import_javascript_natural_sort = __toESM(require_naturalSort(), 1);
var name143 = "compareNatural";
var dependencies143 = ["typed", "compare"];
var createCompareNatural = factory(name143, dependencies143, (_ref) => {
  var {
    typed: typed2,
    compare: compare2
  } = _ref;
  var compareBooleans = compare2.signatures["boolean,boolean"];
  return typed2(name143, {
    "any, any": _compareNatural
  });
  function _compareNatural(x, y) {
    var typeX = typeOf(x);
    var typeY = typeOf(y);
    var c;
    if ((typeX === "number" || typeX === "BigNumber" || typeX === "Fraction") && (typeY === "number" || typeY === "BigNumber" || typeY === "Fraction")) {
      c = compare2(x, y);
      if (c.toString() !== "0") {
        return c > 0 ? 1 : -1;
      } else {
        return (0, import_javascript_natural_sort.default)(typeX, typeY);
      }
    }
    var matTypes = ["Array", "DenseMatrix", "SparseMatrix"];
    if (matTypes.includes(typeX) || matTypes.includes(typeY)) {
      c = compareMatricesAndArrays(_compareNatural, x, y);
      if (c !== 0) {
        return c;
      } else {
        return (0, import_javascript_natural_sort.default)(typeX, typeY);
      }
    }
    if (typeX !== typeY) {
      return (0, import_javascript_natural_sort.default)(typeX, typeY);
    }
    if (typeX === "Complex") {
      return compareComplexNumbers(x, y);
    }
    if (typeX === "Unit") {
      if (x.equalBase(y)) {
        return _compareNatural(x.value, y.value);
      }
      return compareArrays(_compareNatural, x.formatUnits(), y.formatUnits());
    }
    if (typeX === "boolean") {
      return compareBooleans(x, y);
    }
    if (typeX === "string") {
      return (0, import_javascript_natural_sort.default)(x, y);
    }
    if (typeX === "Object") {
      return compareObjects(_compareNatural, x, y);
    }
    if (typeX === "null") {
      return 0;
    }
    if (typeX === "undefined") {
      return 0;
    }
    throw new TypeError('Unsupported type of value "' + typeX + '"');
  }
  function compareMatricesAndArrays(compareNatural2, x, y) {
    if (isSparseMatrix(x) && isSparseMatrix(y)) {
      return compareArrays(compareNatural2, x.toJSON().values, y.toJSON().values);
    }
    if (isSparseMatrix(x)) {
      return compareMatricesAndArrays(compareNatural2, x.toArray(), y);
    }
    if (isSparseMatrix(y)) {
      return compareMatricesAndArrays(compareNatural2, x, y.toArray());
    }
    if (isDenseMatrix(x)) {
      return compareMatricesAndArrays(compareNatural2, x.toJSON().data, y);
    }
    if (isDenseMatrix(y)) {
      return compareMatricesAndArrays(compareNatural2, x, y.toJSON().data);
    }
    if (!Array.isArray(x)) {
      return compareMatricesAndArrays(compareNatural2, [x], y);
    }
    if (!Array.isArray(y)) {
      return compareMatricesAndArrays(compareNatural2, x, [y]);
    }
    return compareArrays(compareNatural2, x, y);
  }
  function compareArrays(compareNatural2, x, y) {
    for (var i2 = 0, ii = Math.min(x.length, y.length); i2 < ii; i2++) {
      var v = compareNatural2(x[i2], y[i2]);
      if (v !== 0) {
        return v;
      }
    }
    if (x.length > y.length) {
      return 1;
    }
    if (x.length < y.length) {
      return -1;
    }
    return 0;
  }
  function compareObjects(compareNatural2, x, y) {
    var keysX = Object.keys(x);
    var keysY = Object.keys(y);
    keysX.sort(import_javascript_natural_sort.default);
    keysY.sort(import_javascript_natural_sort.default);
    var c = compareArrays(compareNatural2, keysX, keysY);
    if (c !== 0) {
      return c;
    }
    for (var i2 = 0; i2 < keysX.length; i2++) {
      var v = compareNatural2(x[keysX[i2]], y[keysY[i2]]);
      if (v !== 0) {
        return v;
      }
    }
    return 0;
  }
});
function compareComplexNumbers(x, y) {
  if (x.re > y.re) {
    return 1;
  }
  if (x.re < y.re) {
    return -1;
  }
  if (x.im > y.im) {
    return 1;
  }
  if (x.im < y.im) {
    return -1;
  }
  return 0;
}

// node_modules/mathjs/lib/esm/function/relational/compareText.js
var name144 = "compareText";
var dependencies144 = ["typed", "matrix", "concat"];
compareText.signature = "any, any";
var createCompareText = factory(name144, dependencies144, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  } = _ref;
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name144, compareText, matrixAlgorithmSuite({
    elop: compareText,
    Ds: true
  }));
});
var createCompareTextNumber = factory(name144, ["typed"], (_ref2) => {
  var {
    typed: typed2
  } = _ref2;
  return typed2(name144, compareText);
});

// node_modules/mathjs/lib/esm/function/relational/equal.js
var name145 = "equal";
var dependencies145 = ["typed", "matrix", "equalScalar", "DenseMatrix", "concat"];
var createEqual = factory(name145, dependencies145, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo07xSSf = createMatAlgo07xSSf({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name145, createEqualNumber({
    typed: typed2,
    equalScalar: equalScalar2
  }), matrixAlgorithmSuite({
    elop: equalScalar2,
    SS: matAlgo07xSSf,
    DS: matAlgo03xDSf,
    Ss: matAlgo12xSfs
  }));
});
var createEqualNumber = factory(name145, ["typed", "equalScalar"], (_ref2) => {
  var {
    typed: typed2,
    equalScalar: equalScalar2
  } = _ref2;
  return typed2(name145, {
    "any, any": function anyAny(x, y) {
      if (x === null) {
        return y === null;
      }
      if (y === null) {
        return x === null;
      }
      if (x === void 0) {
        return y === void 0;
      }
      if (y === void 0) {
        return x === void 0;
      }
      return equalScalar2(x, y);
    }
  });
});

// node_modules/mathjs/lib/esm/function/relational/equalText.js
var name146 = "equalText";
var dependencies146 = ["typed", "compareText", "isZero"];
var createEqualText = factory(name146, dependencies146, (_ref) => {
  var {
    typed: typed2,
    compareText: compareText3,
    isZero: isZero2
  } = _ref;
  return typed2(name146, {
    "any, any": function anyAny(x, y) {
      return isZero2(compareText3(x, y));
    }
  });
});

// node_modules/mathjs/lib/esm/function/relational/smaller.js
var name147 = "smaller";
var dependencies147 = ["typed", "config", "matrix", "DenseMatrix", "concat"];
var createSmaller = factory(name147, dependencies147, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    matrix: matrix2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo07xSSf = createMatAlgo07xSSf({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  var compareUnits = createCompareUnits({
    typed: typed2
  });
  return typed2(name147, createSmallerNumber({
    typed: typed2,
    config: config4
  }), {
    "boolean, boolean": (x, y) => x < y,
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return x.lt(y) && !nearlyEqual2(x, y, config4.epsilon);
    },
    "Fraction, Fraction": (x, y) => x.compare(y) === -1,
    "Complex, Complex": function ComplexComplex(x, y) {
      throw new TypeError("No ordering relation is defined for complex numbers");
    }
  }, compareUnits, matrixAlgorithmSuite({
    SS: matAlgo07xSSf,
    DS: matAlgo03xDSf,
    Ss: matAlgo12xSfs
  }));
});
var createSmallerNumber = factory(name147, ["typed", "config"], (_ref2) => {
  var {
    typed: typed2,
    config: config4
  } = _ref2;
  return typed2(name147, {
    "number, number": function numberNumber(x, y) {
      return x < y && !nearlyEqual(x, y, config4.epsilon);
    }
  });
});

// node_modules/mathjs/lib/esm/function/relational/smallerEq.js
var name148 = "smallerEq";
var dependencies148 = ["typed", "config", "matrix", "DenseMatrix", "concat"];
var createSmallerEq = factory(name148, dependencies148, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    matrix: matrix2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo07xSSf = createMatAlgo07xSSf({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  var compareUnits = createCompareUnits({
    typed: typed2
  });
  return typed2(name148, createSmallerEqNumber({
    typed: typed2,
    config: config4
  }), {
    "boolean, boolean": (x, y) => x <= y,
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return x.lte(y) || nearlyEqual2(x, y, config4.epsilon);
    },
    "Fraction, Fraction": (x, y) => x.compare(y) !== 1,
    "Complex, Complex": function ComplexComplex() {
      throw new TypeError("No ordering relation is defined for complex numbers");
    }
  }, compareUnits, matrixAlgorithmSuite({
    SS: matAlgo07xSSf,
    DS: matAlgo03xDSf,
    Ss: matAlgo12xSfs
  }));
});
var createSmallerEqNumber = factory(name148, ["typed", "config"], (_ref2) => {
  var {
    typed: typed2,
    config: config4
  } = _ref2;
  return typed2(name148, {
    "number, number": function numberNumber(x, y) {
      return x <= y || nearlyEqual(x, y, config4.epsilon);
    }
  });
});

// node_modules/mathjs/lib/esm/function/relational/larger.js
var name149 = "larger";
var dependencies149 = ["typed", "config", "matrix", "DenseMatrix", "concat"];
var createLarger = factory(name149, dependencies149, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    matrix: matrix2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo07xSSf = createMatAlgo07xSSf({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  var compareUnits = createCompareUnits({
    typed: typed2
  });
  return typed2(name149, createLargerNumber({
    typed: typed2,
    config: config4
  }), {
    "boolean, boolean": (x, y) => x > y,
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return x.gt(y) && !nearlyEqual2(x, y, config4.epsilon);
    },
    "Fraction, Fraction": (x, y) => x.compare(y) === 1,
    "Complex, Complex": function ComplexComplex() {
      throw new TypeError("No ordering relation is defined for complex numbers");
    }
  }, compareUnits, matrixAlgorithmSuite({
    SS: matAlgo07xSSf,
    DS: matAlgo03xDSf,
    Ss: matAlgo12xSfs
  }));
});
var createLargerNumber = factory(name149, ["typed", "config"], (_ref2) => {
  var {
    typed: typed2,
    config: config4
  } = _ref2;
  return typed2(name149, {
    "number, number": function numberNumber(x, y) {
      return x > y && !nearlyEqual(x, y, config4.epsilon);
    }
  });
});

// node_modules/mathjs/lib/esm/function/relational/largerEq.js
var name150 = "largerEq";
var dependencies150 = ["typed", "config", "matrix", "DenseMatrix", "concat"];
var createLargerEq = factory(name150, dependencies150, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    matrix: matrix2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo07xSSf = createMatAlgo07xSSf({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  var compareUnits = createCompareUnits({
    typed: typed2
  });
  return typed2(name150, createLargerEqNumber({
    typed: typed2,
    config: config4
  }), {
    "boolean, boolean": (x, y) => x >= y,
    "BigNumber, BigNumber": function BigNumberBigNumber(x, y) {
      return x.gte(y) || nearlyEqual2(x, y, config4.epsilon);
    },
    "Fraction, Fraction": (x, y) => x.compare(y) !== -1,
    "Complex, Complex": function ComplexComplex() {
      throw new TypeError("No ordering relation is defined for complex numbers");
    }
  }, compareUnits, matrixAlgorithmSuite({
    SS: matAlgo07xSSf,
    DS: matAlgo03xDSf,
    Ss: matAlgo12xSfs
  }));
});
var createLargerEqNumber = factory(name150, ["typed", "config"], (_ref2) => {
  var {
    typed: typed2,
    config: config4
  } = _ref2;
  return typed2(name150, {
    "number, number": function numberNumber(x, y) {
      return x >= y || nearlyEqual(x, y, config4.epsilon);
    }
  });
});

// node_modules/mathjs/lib/esm/function/relational/deepEqual.js
var name151 = "deepEqual";
var dependencies151 = ["typed", "equal"];
var createDeepEqual = factory(name151, dependencies151, (_ref) => {
  var {
    typed: typed2,
    equal: equal2
  } = _ref;
  return typed2(name151, {
    "any, any": function anyAny(x, y) {
      return _deepEqual(x.valueOf(), y.valueOf());
    }
  });
  function _deepEqual(x, y) {
    if (Array.isArray(x)) {
      if (Array.isArray(y)) {
        var len = x.length;
        if (len !== y.length) {
          return false;
        }
        for (var i2 = 0; i2 < len; i2++) {
          if (!_deepEqual(x[i2], y[i2])) {
            return false;
          }
        }
        return true;
      } else {
        return false;
      }
    } else {
      if (Array.isArray(y)) {
        return false;
      } else {
        return equal2(x, y);
      }
    }
  }
});

// node_modules/mathjs/lib/esm/function/relational/unequal.js
var name152 = "unequal";
var dependencies152 = ["typed", "config", "equalScalar", "matrix", "DenseMatrix", "concat"];
var createUnequal = factory(name152, dependencies152, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    equalScalar: equalScalar2,
    matrix: matrix2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo07xSSf = createMatAlgo07xSSf({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name152, createUnequalNumber({
    typed: typed2,
    equalScalar: equalScalar2
  }), matrixAlgorithmSuite({
    elop: _unequal,
    SS: matAlgo07xSSf,
    DS: matAlgo03xDSf,
    Ss: matAlgo12xSfs
  }));
  function _unequal(x, y) {
    return !equalScalar2(x, y);
  }
});
var createUnequalNumber = factory(name152, ["typed", "equalScalar"], (_ref2) => {
  var {
    typed: typed2,
    equalScalar: equalScalar2
  } = _ref2;
  return typed2(name152, {
    "any, any": function anyAny(x, y) {
      if (x === null) {
        return y !== null;
      }
      if (y === null) {
        return x !== null;
      }
      if (x === void 0) {
        return y !== void 0;
      }
      if (y === void 0) {
        return x !== void 0;
      }
      return !equalScalar2(x, y);
    }
  });
});

// node_modules/mathjs/lib/esm/function/matrix/partitionSelect.js
var name153 = "partitionSelect";
var dependencies153 = ["typed", "isNumeric", "isNaN", "compare"];
var createPartitionSelect = factory(name153, dependencies153, (_ref) => {
  var {
    typed: typed2,
    isNumeric: isNumeric2,
    isNaN: isNaN3,
    compare: compare2
  } = _ref;
  var asc = compare2;
  var desc = (a, b2) => -compare2(a, b2);
  return typed2(name153, {
    "Array | Matrix, number": function ArrayMatrixNumber(x, k) {
      return _partitionSelect(x, k, asc);
    },
    "Array | Matrix, number, string": function ArrayMatrixNumberString(x, k, compare3) {
      if (compare3 === "asc") {
        return _partitionSelect(x, k, asc);
      } else if (compare3 === "desc") {
        return _partitionSelect(x, k, desc);
      } else {
        throw new Error('Compare string must be "asc" or "desc"');
      }
    },
    "Array | Matrix, number, function": _partitionSelect
  });
  function _partitionSelect(x, k, compare3) {
    if (!isInteger(k) || k < 0) {
      throw new Error("k must be a non-negative integer");
    }
    if (isMatrix(x)) {
      var size2 = x.size();
      if (size2.length > 1) {
        throw new Error("Only one dimensional matrices supported");
      }
      return quickSelect(x.valueOf(), k, compare3);
    }
    if (Array.isArray(x)) {
      return quickSelect(x, k, compare3);
    }
  }
  function quickSelect(arr, k, compare3) {
    if (k >= arr.length) {
      throw new Error("k out of bounds");
    }
    for (var i2 = 0; i2 < arr.length; i2++) {
      if (isNumeric2(arr[i2]) && isNaN3(arr[i2])) {
        return arr[i2];
      }
    }
    var from = 0;
    var to2 = arr.length - 1;
    while (from < to2) {
      var r = from;
      var w = to2;
      var pivot = arr[Math.floor(Math.random() * (to2 - from + 1)) + from];
      while (r < w) {
        if (compare3(arr[r], pivot) >= 0) {
          var tmp = arr[w];
          arr[w] = arr[r];
          arr[r] = tmp;
          --w;
        } else {
          ++r;
        }
      }
      if (compare3(arr[r], pivot) > 0) {
        --r;
      }
      if (k <= r) {
        to2 = r;
      } else {
        from = r + 1;
      }
    }
    return arr[k];
  }
});

// node_modules/mathjs/lib/esm/function/matrix/sort.js
var name154 = "sort";
var dependencies154 = ["typed", "matrix", "compare", "compareNatural"];
var createSort = factory(name154, dependencies154, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    compare: compare2,
    compareNatural: compareNatural2
  } = _ref;
  var compareAsc = compare2;
  var compareDesc = (a, b2) => -compare2(a, b2);
  return typed2(name154, {
    Array: function Array2(x) {
      _arrayIsVector(x);
      return x.sort(compareAsc);
    },
    Matrix: function Matrix2(x) {
      _matrixIsVector(x);
      return matrix2(x.toArray().sort(compareAsc), x.storage());
    },
    "Array, function": function ArrayFunction(x, _comparator2) {
      _arrayIsVector(x);
      return x.sort(_comparator2);
    },
    "Matrix, function": function MatrixFunction(x, _comparator2) {
      _matrixIsVector(x);
      return matrix2(x.toArray().sort(_comparator2), x.storage());
    },
    "Array, string": function ArrayString(x, order) {
      _arrayIsVector(x);
      return x.sort(_comparator(order));
    },
    "Matrix, string": function MatrixString(x, order) {
      _matrixIsVector(x);
      return matrix2(x.toArray().sort(_comparator(order)), x.storage());
    }
  });
  function _comparator(order) {
    if (order === "asc") {
      return compareAsc;
    } else if (order === "desc") {
      return compareDesc;
    } else if (order === "natural") {
      return compareNatural2;
    } else {
      throw new Error('String "asc", "desc", or "natural" expected');
    }
  }
  function _arrayIsVector(array) {
    if (arraySize(array).length !== 1) {
      throw new Error("One dimensional array expected");
    }
  }
  function _matrixIsVector(matrix3) {
    if (matrix3.size().length !== 1) {
      throw new Error("One dimensional matrix expected");
    }
  }
});

// node_modules/mathjs/lib/esm/function/statistics/max.js
var name155 = "max";
var dependencies155 = ["typed", "config", "numeric", "larger"];
var createMax = factory(name155, dependencies155, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    numeric: numeric3,
    larger: larger2
  } = _ref;
  return typed2(name155, {
    // max([a, b, c, d, ...])
    "Array | Matrix": _max,
    // max([a, b, c, d, ...], dim)
    "Array | Matrix, number | BigNumber": function ArrayMatrixNumberBigNumber(array, dim) {
      return reduce(array, dim.valueOf(), _largest);
    },
    // max(a, b, c, d, ...)
    "...": function _(args) {
      if (containsCollections(args)) {
        throw new TypeError("Scalar values expected in function max");
      }
      return _max(args);
    }
  });
  function _largest(x, y) {
    try {
      return larger2(x, y) ? x : y;
    } catch (err) {
      throw improveErrorMessage(err, "max", y);
    }
  }
  function _max(array) {
    var res;
    deepForEach(array, function(value) {
      try {
        if (isNaN(value) && typeof value === "number") {
          res = NaN;
        } else if (res === void 0 || larger2(value, res)) {
          res = value;
        }
      } catch (err) {
        throw improveErrorMessage(err, "max", value);
      }
    });
    if (res === void 0) {
      throw new Error("Cannot calculate max of an empty array");
    }
    if (typeof res === "string") {
      res = numeric3(res, config4.number);
    }
    return res;
  }
});

// node_modules/mathjs/lib/esm/function/statistics/min.js
var name156 = "min";
var dependencies156 = ["typed", "config", "numeric", "smaller"];
var createMin = factory(name156, dependencies156, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    numeric: numeric3,
    smaller: smaller2
  } = _ref;
  return typed2(name156, {
    // min([a, b, c, d, ...])
    "Array | Matrix": _min,
    // min([a, b, c, d, ...], dim)
    "Array | Matrix, number | BigNumber": function ArrayMatrixNumberBigNumber(array, dim) {
      return reduce(array, dim.valueOf(), _smallest);
    },
    // min(a, b, c, d, ...)
    "...": function _(args) {
      if (containsCollections(args)) {
        throw new TypeError("Scalar values expected in function min");
      }
      return _min(args);
    }
  });
  function _smallest(x, y) {
    try {
      return smaller2(x, y) ? x : y;
    } catch (err) {
      throw improveErrorMessage(err, "min", y);
    }
  }
  function _min(array) {
    var min3;
    deepForEach(array, function(value) {
      try {
        if (isNaN(value) && typeof value === "number") {
          min3 = NaN;
        } else if (min3 === void 0 || smaller2(value, min3)) {
          min3 = value;
        }
      } catch (err) {
        throw improveErrorMessage(err, "min", value);
      }
    });
    if (min3 === void 0) {
      throw new Error("Cannot calculate min of an empty array");
    }
    if (typeof min3 === "string") {
      min3 = numeric3(min3, config4.number);
    }
    return min3;
  }
});

// node_modules/mathjs/lib/esm/type/matrix/ImmutableDenseMatrix.js
var name157 = "ImmutableDenseMatrix";
var dependencies157 = ["smaller", "DenseMatrix"];
var createImmutableDenseMatrixClass = factory(name157, dependencies157, (_ref) => {
  var {
    smaller: smaller2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  function ImmutableDenseMatrix2(data, datatype) {
    if (!(this instanceof ImmutableDenseMatrix2)) {
      throw new SyntaxError("Constructor must be called with the new operator");
    }
    if (datatype && !isString(datatype)) {
      throw new Error("Invalid datatype: " + datatype);
    }
    if (isMatrix(data) || isArray(data)) {
      var matrix2 = new DenseMatrix2(data, datatype);
      this._data = matrix2._data;
      this._size = matrix2._size;
      this._datatype = matrix2._datatype;
      this._min = null;
      this._max = null;
    } else if (data && isArray(data.data) && isArray(data.size)) {
      this._data = data.data;
      this._size = data.size;
      this._datatype = data.datatype;
      this._min = typeof data.min !== "undefined" ? data.min : null;
      this._max = typeof data.max !== "undefined" ? data.max : null;
    } else if (data) {
      throw new TypeError("Unsupported type of data (" + typeOf(data) + ")");
    } else {
      this._data = [];
      this._size = [0];
      this._datatype = datatype;
      this._min = null;
      this._max = null;
    }
  }
  ImmutableDenseMatrix2.prototype = new DenseMatrix2();
  ImmutableDenseMatrix2.prototype.type = "ImmutableDenseMatrix";
  ImmutableDenseMatrix2.prototype.isImmutableDenseMatrix = true;
  ImmutableDenseMatrix2.prototype.subset = function(index2) {
    switch (arguments.length) {
      case 1: {
        var m = DenseMatrix2.prototype.subset.call(this, index2);
        if (isMatrix(m)) {
          return new ImmutableDenseMatrix2({
            data: m._data,
            size: m._size,
            datatype: m._datatype
          });
        }
        return m;
      }
      case 2:
      case 3:
        throw new Error("Cannot invoke set subset on an Immutable Matrix instance");
      default:
        throw new SyntaxError("Wrong number of arguments");
    }
  };
  ImmutableDenseMatrix2.prototype.set = function() {
    throw new Error("Cannot invoke set on an Immutable Matrix instance");
  };
  ImmutableDenseMatrix2.prototype.resize = function() {
    throw new Error("Cannot invoke resize on an Immutable Matrix instance");
  };
  ImmutableDenseMatrix2.prototype.reshape = function() {
    throw new Error("Cannot invoke reshape on an Immutable Matrix instance");
  };
  ImmutableDenseMatrix2.prototype.clone = function() {
    return new ImmutableDenseMatrix2({
      data: clone(this._data),
      size: clone(this._size),
      datatype: this._datatype
    });
  };
  ImmutableDenseMatrix2.prototype.toJSON = function() {
    return {
      mathjs: "ImmutableDenseMatrix",
      data: this._data,
      size: this._size,
      datatype: this._datatype
    };
  };
  ImmutableDenseMatrix2.fromJSON = function(json) {
    return new ImmutableDenseMatrix2(json);
  };
  ImmutableDenseMatrix2.prototype.swapRows = function() {
    throw new Error("Cannot invoke swapRows on an Immutable Matrix instance");
  };
  ImmutableDenseMatrix2.prototype.min = function() {
    if (this._min === null) {
      var m = null;
      this.forEach(function(v) {
        if (m === null || smaller2(v, m)) {
          m = v;
        }
      });
      this._min = m !== null ? m : void 0;
    }
    return this._min;
  };
  ImmutableDenseMatrix2.prototype.max = function() {
    if (this._max === null) {
      var m = null;
      this.forEach(function(v) {
        if (m === null || smaller2(m, v)) {
          m = v;
        }
      });
      this._max = m !== null ? m : void 0;
    }
    return this._max;
  };
  return ImmutableDenseMatrix2;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/type/matrix/MatrixIndex.js
var name158 = "Index";
var dependencies158 = ["ImmutableDenseMatrix", "getMatrixDataType"];
var createIndexClass = factory(name158, dependencies158, (_ref) => {
  var {
    ImmutableDenseMatrix: ImmutableDenseMatrix2,
    getMatrixDataType: getMatrixDataType2
  } = _ref;
  function Index2(ranges) {
    if (!(this instanceof Index2)) {
      throw new SyntaxError("Constructor must be called with the new operator");
    }
    this._dimensions = [];
    this._sourceSize = [];
    this._isScalar = true;
    for (var i2 = 0, ii = arguments.length; i2 < ii; i2++) {
      var arg2 = arguments[i2];
      var argIsArray = isArray(arg2);
      var argIsMatrix = isMatrix(arg2);
      var sourceSize = null;
      if (isRange(arg2)) {
        this._dimensions.push(arg2);
        this._isScalar = false;
      } else if (argIsArray || argIsMatrix) {
        var m = void 0;
        if (getMatrixDataType2(arg2) === "boolean") {
          if (argIsArray) m = _createImmutableMatrix(_booleansArrayToNumbersForIndex(arg2).valueOf());
          if (argIsMatrix) m = _createImmutableMatrix(_booleansArrayToNumbersForIndex(arg2._data).valueOf());
          sourceSize = arg2.valueOf().length;
        } else {
          m = _createImmutableMatrix(arg2.valueOf());
        }
        this._dimensions.push(m);
        var size2 = m.size();
        if (size2.length !== 1 || size2[0] !== 1 || sourceSize !== null) {
          this._isScalar = false;
        }
      } else if (typeof arg2 === "number") {
        this._dimensions.push(_createImmutableMatrix([arg2]));
      } else if (typeof arg2 === "string") {
        this._dimensions.push(arg2);
      } else {
        throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range");
      }
      this._sourceSize.push(sourceSize);
    }
  }
  Index2.prototype.type = "Index";
  Index2.prototype.isIndex = true;
  function _createImmutableMatrix(arg2) {
    for (var i2 = 0, l = arg2.length; i2 < l; i2++) {
      if (typeof arg2[i2] !== "number" || !isInteger(arg2[i2])) {
        throw new TypeError("Index parameters must be positive integer numbers");
      }
    }
    return new ImmutableDenseMatrix2(arg2);
  }
  Index2.prototype.clone = function() {
    var index2 = new Index2();
    index2._dimensions = clone(this._dimensions);
    index2._isScalar = this._isScalar;
    index2._sourceSize = this._sourceSize;
    return index2;
  };
  Index2.create = function(ranges) {
    var index2 = new Index2();
    Index2.apply(index2, ranges);
    return index2;
  };
  Index2.prototype.size = function() {
    var size2 = [];
    for (var i2 = 0, ii = this._dimensions.length; i2 < ii; i2++) {
      var d2 = this._dimensions[i2];
      size2[i2] = typeof d2 === "string" ? 1 : d2.size()[0];
    }
    return size2;
  };
  Index2.prototype.max = function() {
    var values = [];
    for (var i2 = 0, ii = this._dimensions.length; i2 < ii; i2++) {
      var range3 = this._dimensions[i2];
      values[i2] = typeof range3 === "string" ? range3 : range3.max();
    }
    return values;
  };
  Index2.prototype.min = function() {
    var values = [];
    for (var i2 = 0, ii = this._dimensions.length; i2 < ii; i2++) {
      var range3 = this._dimensions[i2];
      values[i2] = typeof range3 === "string" ? range3 : range3.min();
    }
    return values;
  };
  Index2.prototype.forEach = function(callback) {
    for (var i2 = 0, ii = this._dimensions.length; i2 < ii; i2++) {
      callback(this._dimensions[i2], i2, this);
    }
  };
  Index2.prototype.dimension = function(dim) {
    return this._dimensions[dim] || null;
  };
  Index2.prototype.isObjectProperty = function() {
    return this._dimensions.length === 1 && typeof this._dimensions[0] === "string";
  };
  Index2.prototype.getObjectProperty = function() {
    return this.isObjectProperty() ? this._dimensions[0] : null;
  };
  Index2.prototype.isScalar = function() {
    return this._isScalar;
  };
  Index2.prototype.toArray = function() {
    var array = [];
    for (var i2 = 0, ii = this._dimensions.length; i2 < ii; i2++) {
      var dimension = this._dimensions[i2];
      array.push(typeof dimension === "string" ? dimension : dimension.toArray());
    }
    return array;
  };
  Index2.prototype.valueOf = Index2.prototype.toArray;
  Index2.prototype.toString = function() {
    var strings = [];
    for (var i2 = 0, ii = this._dimensions.length; i2 < ii; i2++) {
      var dimension = this._dimensions[i2];
      if (typeof dimension === "string") {
        strings.push(JSON.stringify(dimension));
      } else {
        strings.push(dimension.toString());
      }
    }
    return "[" + strings.join(", ") + "]";
  };
  Index2.prototype.toJSON = function() {
    return {
      mathjs: "Index",
      dimensions: this._dimensions
    };
  };
  Index2.fromJSON = function(json) {
    return Index2.create(json.dimensions);
  };
  return Index2;
}, {
  isClass: true
});
function _booleansArrayToNumbersForIndex(booleanArrayIndex) {
  var indexOfNumbers = [];
  booleanArrayIndex.forEach((bool, idx) => {
    if (bool) {
      indexOfNumbers.push(idx);
    }
  });
  return indexOfNumbers;
}

// node_modules/mathjs/lib/esm/type/matrix/FibonacciHeap.js
var name159 = "FibonacciHeap";
var dependencies159 = ["smaller", "larger"];
var createFibonacciHeapClass = factory(name159, dependencies159, (_ref) => {
  var {
    smaller: smaller2,
    larger: larger2
  } = _ref;
  var oneOverLogPhi = 1 / Math.log((1 + Math.sqrt(5)) / 2);
  function FibonacciHeap2() {
    if (!(this instanceof FibonacciHeap2)) {
      throw new SyntaxError("Constructor must be called with the new operator");
    }
    this._minimum = null;
    this._size = 0;
  }
  FibonacciHeap2.prototype.type = "FibonacciHeap";
  FibonacciHeap2.prototype.isFibonacciHeap = true;
  FibonacciHeap2.prototype.insert = function(key, value) {
    var node = {
      key,
      value,
      degree: 0
    };
    if (this._minimum) {
      var minimum = this._minimum;
      node.left = minimum;
      node.right = minimum.right;
      minimum.right = node;
      node.right.left = node;
      if (smaller2(key, minimum.key)) {
        this._minimum = node;
      }
    } else {
      node.left = node;
      node.right = node;
      this._minimum = node;
    }
    this._size++;
    return node;
  };
  FibonacciHeap2.prototype.size = function() {
    return this._size;
  };
  FibonacciHeap2.prototype.clear = function() {
    this._minimum = null;
    this._size = 0;
  };
  FibonacciHeap2.prototype.isEmpty = function() {
    return this._size === 0;
  };
  FibonacciHeap2.prototype.extractMinimum = function() {
    var node = this._minimum;
    if (node === null) {
      return node;
    }
    var minimum = this._minimum;
    var numberOfChildren = node.degree;
    var x = node.child;
    while (numberOfChildren > 0) {
      var tempRight = x.right;
      x.left.right = x.right;
      x.right.left = x.left;
      x.left = minimum;
      x.right = minimum.right;
      minimum.right = x;
      x.right.left = x;
      x.parent = null;
      x = tempRight;
      numberOfChildren--;
    }
    node.left.right = node.right;
    node.right.left = node.left;
    if (node === node.right) {
      minimum = null;
    } else {
      minimum = node.right;
      minimum = _findMinimumNode(minimum, this._size);
    }
    this._size--;
    this._minimum = minimum;
    return node;
  };
  FibonacciHeap2.prototype.remove = function(node) {
    this._minimum = _decreaseKey(this._minimum, node, -1);
    this.extractMinimum();
  };
  function _decreaseKey(minimum, node, key) {
    node.key = key;
    var parent = node.parent;
    if (parent && smaller2(node.key, parent.key)) {
      _cut(minimum, node, parent);
      _cascadingCut(minimum, parent);
    }
    if (smaller2(node.key, minimum.key)) {
      minimum = node;
    }
    return minimum;
  }
  function _cut(minimum, node, parent) {
    node.left.right = node.right;
    node.right.left = node.left;
    parent.degree--;
    if (parent.child === node) {
      parent.child = node.right;
    }
    if (parent.degree === 0) {
      parent.child = null;
    }
    node.left = minimum;
    node.right = minimum.right;
    minimum.right = node;
    node.right.left = node;
    node.parent = null;
    node.mark = false;
  }
  function _cascadingCut(minimum, node) {
    var parent = node.parent;
    if (!parent) {
      return;
    }
    if (!node.mark) {
      node.mark = true;
    } else {
      _cut(minimum, node, parent);
      _cascadingCut(parent);
    }
  }
  var _linkNodes = function _linkNodes2(node, parent) {
    node.left.right = node.right;
    node.right.left = node.left;
    node.parent = parent;
    if (!parent.child) {
      parent.child = node;
      node.right = node;
      node.left = node;
    } else {
      node.left = parent.child;
      node.right = parent.child.right;
      parent.child.right = node;
      node.right.left = node;
    }
    parent.degree++;
    node.mark = false;
  };
  function _findMinimumNode(minimum, size2) {
    var arraySize2 = Math.floor(Math.log(size2) * oneOverLogPhi) + 1;
    var array = new Array(arraySize2);
    var numRoots = 0;
    var x = minimum;
    if (x) {
      numRoots++;
      x = x.right;
      while (x !== minimum) {
        numRoots++;
        x = x.right;
      }
    }
    var y;
    while (numRoots > 0) {
      var d2 = x.degree;
      var next = x.right;
      while (true) {
        y = array[d2];
        if (!y) {
          break;
        }
        if (larger2(x.key, y.key)) {
          var temp = y;
          y = x;
          x = temp;
        }
        _linkNodes(y, x);
        array[d2] = null;
        d2++;
      }
      array[d2] = x;
      x = next;
      numRoots--;
    }
    minimum = null;
    for (var i2 = 0; i2 < arraySize2; i2++) {
      y = array[i2];
      if (!y) {
        continue;
      }
      if (minimum) {
        y.left.right = y.right;
        y.right.left = y.left;
        y.left = minimum;
        y.right = minimum.right;
        minimum.right = y;
        y.right.left = y;
        if (smaller2(y.key, minimum.key)) {
          minimum = y;
        }
      } else {
        minimum = y;
      }
    }
    return minimum;
  }
  return FibonacciHeap2;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/type/matrix/Spa.js
var name160 = "Spa";
var dependencies160 = ["addScalar", "equalScalar", "FibonacciHeap"];
var createSpaClass = factory(name160, dependencies160, (_ref) => {
  var {
    addScalar: addScalar2,
    equalScalar: equalScalar2,
    FibonacciHeap: FibonacciHeap2
  } = _ref;
  function Spa2() {
    if (!(this instanceof Spa2)) {
      throw new SyntaxError("Constructor must be called with the new operator");
    }
    this._values = [];
    this._heap = new FibonacciHeap2();
  }
  Spa2.prototype.type = "Spa";
  Spa2.prototype.isSpa = true;
  Spa2.prototype.set = function(i2, v) {
    if (!this._values[i2]) {
      var node = this._heap.insert(i2, v);
      this._values[i2] = node;
    } else {
      this._values[i2].value = v;
    }
  };
  Spa2.prototype.get = function(i2) {
    var node = this._values[i2];
    if (node) {
      return node.value;
    }
    return 0;
  };
  Spa2.prototype.accumulate = function(i2, v) {
    var node = this._values[i2];
    if (!node) {
      node = this._heap.insert(i2, v);
      this._values[i2] = node;
    } else {
      node.value = addScalar2(node.value, v);
    }
  };
  Spa2.prototype.forEach = function(from, to2, callback) {
    var heap = this._heap;
    var values = this._values;
    var nodes = [];
    var node = heap.extractMinimum();
    if (node) {
      nodes.push(node);
    }
    while (node && node.key <= to2) {
      if (node.key >= from) {
        if (!equalScalar2(node.value, 0)) {
          callback(node.key, node.value, this);
        }
      }
      node = heap.extractMinimum();
      if (node) {
        nodes.push(node);
      }
    }
    for (var i2 = 0; i2 < nodes.length; i2++) {
      var n = nodes[i2];
      node = heap.insert(n.key, n.value);
      values[node.key] = node;
    }
  };
  Spa2.prototype.swap = function(i2, j) {
    var nodei = this._values[i2];
    var nodej = this._values[j];
    if (!nodei && nodej) {
      nodei = this._heap.insert(i2, nodej.value);
      this._heap.remove(nodej);
      this._values[i2] = nodei;
      this._values[j] = void 0;
    } else if (nodei && !nodej) {
      nodej = this._heap.insert(j, nodei.value);
      this._heap.remove(nodei);
      this._values[j] = nodej;
      this._values[i2] = void 0;
    } else if (nodei && nodej) {
      var v = nodei.value;
      nodei.value = nodej.value;
      nodej.value = v;
    }
  };
  return Spa2;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/utils/bignumber/constants.js
var createBigNumberE = memoize(function(BigNumber2) {
  return new BigNumber2(1).exp();
}, {
  hasher
});
var createBigNumberPhi = memoize(function(BigNumber2) {
  return new BigNumber2(1).plus(new BigNumber2(5).sqrt()).div(2);
}, {
  hasher
});
var createBigNumberPi = memoize(function(BigNumber2) {
  return BigNumber2.acos(-1);
}, {
  hasher
});
var createBigNumberTau = memoize(function(BigNumber2) {
  return createBigNumberPi(BigNumber2).times(2);
}, {
  hasher
});
function hasher(args) {
  return args[0].precision;
}

// node_modules/mathjs/lib/esm/type/unit/Unit.js
function ownKeys2(e3, r) {
  var t = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e3);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e3, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e3) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty(e3, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e3, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e3;
}
var name161 = "Unit";
var dependencies161 = ["?on", "config", "addScalar", "subtractScalar", "multiplyScalar", "divideScalar", "pow", "abs", "fix", "round", "equal", "isNumeric", "format", "number", "Complex", "BigNumber", "Fraction"];
var createUnitClass = factory(name161, dependencies161, (_ref) => {
  var {
    on,
    config: config4,
    addScalar: addScalar2,
    subtractScalar: subtractScalar2,
    multiplyScalar: multiplyScalar2,
    divideScalar: divideScalar2,
    pow: pow3,
    abs: abs3,
    fix: fix2,
    round: round3,
    equal: equal2,
    isNumeric: isNumeric2,
    format: format5,
    number: _number,
    Complex: Complex3,
    BigNumber: _BigNumber,
    Fraction: _Fraction
  } = _ref;
  var toNumber = _number;
  function Unit2(value, valuelessUnit) {
    if (!(this instanceof Unit2)) {
      throw new Error("Constructor must be called with the new operator");
    }
    if (!(value === null || value === void 0 || isNumeric2(value) || isComplex(value))) {
      throw new TypeError("First parameter in Unit constructor must be number, BigNumber, Fraction, Complex, or undefined");
    }
    this.fixPrefix = false;
    this.skipAutomaticSimplification = true;
    if (valuelessUnit === void 0) {
      this.units = [];
      this.dimensions = BASE_DIMENSIONS.map((x) => 0);
    } else if (typeof valuelessUnit === "string") {
      var u = Unit2.parse(valuelessUnit);
      this.units = u.units;
      this.dimensions = u.dimensions;
    } else if (isUnit(valuelessUnit) && valuelessUnit.value === null) {
      this.fixPrefix = valuelessUnit.fixPrefix;
      this.skipAutomaticSimplification = valuelessUnit.skipAutomaticSimplification;
      this.dimensions = valuelessUnit.dimensions.slice(0);
      this.units = valuelessUnit.units.map((u2) => _extends({}, u2));
    } else {
      throw new TypeError("Second parameter in Unit constructor must be a string or valueless Unit");
    }
    this.value = this._normalize(value);
  }
  Object.defineProperty(Unit2, "name", {
    value: "Unit"
  });
  Unit2.prototype.constructor = Unit2;
  Unit2.prototype.type = "Unit";
  Unit2.prototype.isUnit = true;
  var text, index2, c;
  function skipWhitespace() {
    while (c === " " || c === "	") {
      next();
    }
  }
  function isDigitDot(c2) {
    return c2 >= "0" && c2 <= "9" || c2 === ".";
  }
  function isDigit(c2) {
    return c2 >= "0" && c2 <= "9";
  }
  function next() {
    index2++;
    c = text.charAt(index2);
  }
  function revert(oldIndex) {
    index2 = oldIndex;
    c = text.charAt(index2);
  }
  function parseNumber() {
    var number2 = "";
    var oldIndex = index2;
    if (c === "+") {
      next();
    } else if (c === "-") {
      number2 += c;
      next();
    }
    if (!isDigitDot(c)) {
      revert(oldIndex);
      return null;
    }
    if (c === ".") {
      number2 += c;
      next();
      if (!isDigit(c)) {
        revert(oldIndex);
        return null;
      }
    } else {
      while (isDigit(c)) {
        number2 += c;
        next();
      }
      if (c === ".") {
        number2 += c;
        next();
      }
    }
    while (isDigit(c)) {
      number2 += c;
      next();
    }
    if (c === "E" || c === "e") {
      var tentativeNumber = "";
      var tentativeIndex = index2;
      tentativeNumber += c;
      next();
      if (c === "+" || c === "-") {
        tentativeNumber += c;
        next();
      }
      if (!isDigit(c)) {
        revert(tentativeIndex);
        return number2;
      }
      number2 = number2 + tentativeNumber;
      while (isDigit(c)) {
        number2 += c;
        next();
      }
    }
    return number2;
  }
  function parseUnit() {
    var unitName = "";
    while (isDigit(c) || Unit2.isValidAlpha(c)) {
      unitName += c;
      next();
    }
    var firstC = unitName.charAt(0);
    if (Unit2.isValidAlpha(firstC)) {
      return unitName;
    } else {
      return null;
    }
  }
  function parseCharacter(toFind) {
    if (c === toFind) {
      next();
      return toFind;
    } else {
      return null;
    }
  }
  Unit2.parse = function(str, options) {
    options = options || {};
    text = str;
    index2 = -1;
    c = "";
    if (typeof text !== "string") {
      throw new TypeError("Invalid argument in Unit.parse, string expected");
    }
    var unit3 = new Unit2();
    unit3.units = [];
    var powerMultiplierCurrent = 1;
    var expectingUnit = false;
    next();
    skipWhitespace();
    var valueStr = parseNumber();
    var value = null;
    if (valueStr) {
      if (config4.number === "BigNumber") {
        value = new _BigNumber(valueStr);
      } else if (config4.number === "Fraction") {
        try {
          value = new _Fraction(valueStr);
        } catch (err) {
          value = parseFloat(valueStr);
        }
      } else {
        value = parseFloat(valueStr);
      }
      skipWhitespace();
      if (parseCharacter("*")) {
        powerMultiplierCurrent = 1;
        expectingUnit = true;
      } else if (parseCharacter("/")) {
        powerMultiplierCurrent = -1;
        expectingUnit = true;
      }
    }
    var powerMultiplierStack = [];
    var powerMultiplierStackProduct = 1;
    while (true) {
      skipWhitespace();
      while (c === "(") {
        powerMultiplierStack.push(powerMultiplierCurrent);
        powerMultiplierStackProduct *= powerMultiplierCurrent;
        powerMultiplierCurrent = 1;
        next();
        skipWhitespace();
      }
      var uStr = void 0;
      if (c) {
        var oldC = c;
        uStr = parseUnit();
        if (uStr === null) {
          throw new SyntaxError('Unexpected "' + oldC + '" in "' + text + '" at index ' + index2.toString());
        }
      } else {
        break;
      }
      var res = _findUnit(uStr);
      if (res === null) {
        throw new SyntaxError('Unit "' + uStr + '" not found.');
      }
      var power = powerMultiplierCurrent * powerMultiplierStackProduct;
      skipWhitespace();
      if (parseCharacter("^")) {
        skipWhitespace();
        var p = parseNumber();
        if (p === null) {
          throw new SyntaxError('In "' + str + '", "^" must be followed by a floating-point number');
        }
        power *= p;
      }
      unit3.units.push({
        unit: res.unit,
        prefix: res.prefix,
        power
      });
      for (var i2 = 0; i2 < BASE_DIMENSIONS.length; i2++) {
        unit3.dimensions[i2] += (res.unit.dimensions[i2] || 0) * power;
      }
      skipWhitespace();
      while (c === ")") {
        if (powerMultiplierStack.length === 0) {
          throw new SyntaxError('Unmatched ")" in "' + text + '" at index ' + index2.toString());
        }
        powerMultiplierStackProduct /= powerMultiplierStack.pop();
        next();
        skipWhitespace();
      }
      expectingUnit = false;
      if (parseCharacter("*")) {
        powerMultiplierCurrent = 1;
        expectingUnit = true;
      } else if (parseCharacter("/")) {
        powerMultiplierCurrent = -1;
        expectingUnit = true;
      } else {
        powerMultiplierCurrent = 1;
      }
      if (res.unit.base) {
        var baseDim = res.unit.base.key;
        UNIT_SYSTEMS.auto[baseDim] = {
          unit: res.unit,
          prefix: res.prefix
        };
      }
    }
    skipWhitespace();
    if (c) {
      throw new SyntaxError('Could not parse: "' + str + '"');
    }
    if (expectingUnit) {
      throw new SyntaxError('Trailing characters: "' + str + '"');
    }
    if (powerMultiplierStack.length !== 0) {
      throw new SyntaxError('Unmatched "(" in "' + text + '"');
    }
    if (unit3.units.length === 0 && !options.allowNoUnits) {
      throw new SyntaxError('"' + str + '" contains no units');
    }
    unit3.value = value !== void 0 ? unit3._normalize(value) : null;
    return unit3;
  };
  Unit2.prototype.clone = function() {
    var unit3 = new Unit2();
    unit3.fixPrefix = this.fixPrefix;
    unit3.skipAutomaticSimplification = this.skipAutomaticSimplification;
    unit3.value = clone(this.value);
    unit3.dimensions = this.dimensions.slice(0);
    unit3.units = [];
    for (var i2 = 0; i2 < this.units.length; i2++) {
      unit3.units[i2] = {};
      for (var p in this.units[i2]) {
        if (hasOwnProperty(this.units[i2], p)) {
          unit3.units[i2][p] = this.units[i2][p];
        }
      }
    }
    return unit3;
  };
  Unit2.prototype.valueType = function() {
    return typeOf(this.value);
  };
  Unit2.prototype._isDerived = function() {
    if (this.units.length === 0) {
      return false;
    }
    return this.units.length > 1 || Math.abs(this.units[0].power - 1) > 1e-15;
  };
  Unit2.prototype._normalize = function(value) {
    if (value === null || value === void 0 || this.units.length === 0) {
      return value;
    }
    var res = value;
    var convert = Unit2._getNumberConverter(typeOf(value));
    for (var i2 = 0; i2 < this.units.length; i2++) {
      var unitValue = convert(this.units[i2].unit.value);
      var unitPrefixValue = convert(this.units[i2].prefix.value);
      var unitPower = convert(this.units[i2].power);
      res = multiplyScalar2(res, pow3(multiplyScalar2(unitValue, unitPrefixValue), unitPower));
    }
    return res;
  };
  Unit2.prototype._denormalize = function(value, prefixValue) {
    if (value === null || value === void 0 || this.units.length === 0) {
      return value;
    }
    var res = value;
    var convert = Unit2._getNumberConverter(typeOf(value));
    for (var i2 = 0; i2 < this.units.length; i2++) {
      var unitValue = convert(this.units[i2].unit.value);
      var unitPrefixValue = convert(this.units[i2].prefix.value);
      var unitPower = convert(this.units[i2].power);
      res = divideScalar2(res, pow3(multiplyScalar2(unitValue, unitPrefixValue), unitPower));
    }
    return res;
  };
  var _findUnit = memoize((str) => {
    if (hasOwnProperty(UNITS, str)) {
      var unit3 = UNITS[str];
      var prefix = unit3.prefixes[""];
      return {
        unit: unit3,
        prefix
      };
    }
    for (var _name in UNITS) {
      if (hasOwnProperty(UNITS, _name)) {
        if (endsWith(str, _name)) {
          var _unit = UNITS[_name];
          var prefixLen = str.length - _name.length;
          var prefixName = str.substring(0, prefixLen);
          var _prefix = hasOwnProperty(_unit.prefixes, prefixName) ? _unit.prefixes[prefixName] : void 0;
          if (_prefix !== void 0) {
            return {
              unit: _unit,
              prefix: _prefix
            };
          }
        }
      }
    }
    return null;
  }, {
    hasher: (args) => args[0],
    limit: 100
  });
  Unit2.isValuelessUnit = function(name314) {
    return _findUnit(name314) !== null;
  };
  Unit2.prototype.hasBase = function(base) {
    if (typeof base === "string") {
      base = BASE_UNITS[base];
    }
    if (!base) {
      return false;
    }
    for (var i2 = 0; i2 < BASE_DIMENSIONS.length; i2++) {
      if (Math.abs((this.dimensions[i2] || 0) - (base.dimensions[i2] || 0)) > 1e-12) {
        return false;
      }
    }
    return true;
  };
  Unit2.prototype.equalBase = function(other) {
    for (var i2 = 0; i2 < BASE_DIMENSIONS.length; i2++) {
      if (Math.abs((this.dimensions[i2] || 0) - (other.dimensions[i2] || 0)) > 1e-12) {
        return false;
      }
    }
    return true;
  };
  Unit2.prototype.equals = function(other) {
    return this.equalBase(other) && equal2(this.value, other.value);
  };
  Unit2.prototype.multiply = function(_other) {
    var res = this.clone();
    var other = isUnit(_other) ? _other : new Unit2(_other);
    for (var i2 = 0; i2 < BASE_DIMENSIONS.length; i2++) {
      res.dimensions[i2] = (this.dimensions[i2] || 0) + (other.dimensions[i2] || 0);
    }
    for (var _i = 0; _i < other.units.length; _i++) {
      var inverted = _objectSpread2({}, other.units[_i]);
      res.units.push(inverted);
    }
    if (this.value !== null || other.value !== null) {
      var valThis = this.value === null ? this._normalize(1) : this.value;
      var valOther = other.value === null ? other._normalize(1) : other.value;
      res.value = multiplyScalar2(valThis, valOther);
    } else {
      res.value = null;
    }
    if (isUnit(_other)) {
      res.skipAutomaticSimplification = false;
    }
    return getNumericIfUnitless(res);
  };
  Unit2.prototype.divideInto = function(numerator) {
    return new Unit2(numerator).divide(this);
  };
  Unit2.prototype.divide = function(_other) {
    var res = this.clone();
    var other = isUnit(_other) ? _other : new Unit2(_other);
    for (var i2 = 0; i2 < BASE_DIMENSIONS.length; i2++) {
      res.dimensions[i2] = (this.dimensions[i2] || 0) - (other.dimensions[i2] || 0);
    }
    for (var _i2 = 0; _i2 < other.units.length; _i2++) {
      var inverted = _objectSpread2(_objectSpread2({}, other.units[_i2]), {}, {
        power: -other.units[_i2].power
      });
      res.units.push(inverted);
    }
    if (this.value !== null || other.value !== null) {
      var valThis = this.value === null ? this._normalize(1) : this.value;
      var valOther = other.value === null ? other._normalize(1) : other.value;
      res.value = divideScalar2(valThis, valOther);
    } else {
      res.value = null;
    }
    if (isUnit(_other)) {
      res.skipAutomaticSimplification = false;
    }
    return getNumericIfUnitless(res);
  };
  Unit2.prototype.pow = function(p) {
    var res = this.clone();
    for (var i2 = 0; i2 < BASE_DIMENSIONS.length; i2++) {
      res.dimensions[i2] = (this.dimensions[i2] || 0) * p;
    }
    for (var _i3 = 0; _i3 < res.units.length; _i3++) {
      res.units[_i3].power *= p;
    }
    if (res.value !== null) {
      res.value = pow3(res.value, p);
    } else {
      res.value = null;
    }
    res.skipAutomaticSimplification = false;
    return getNumericIfUnitless(res);
  };
  function getNumericIfUnitless(unit3) {
    if (unit3.equalBase(BASE_UNITS.NONE) && unit3.value !== null && !config4.predictable) {
      return unit3.value;
    } else {
      return unit3;
    }
  }
  Unit2.prototype.abs = function() {
    var ret = this.clone();
    if (ret.value !== null) {
      if (ret._isDerived() || ret.units.length === 0 || ret.units[0].unit.offset === 0) {
        ret.value = abs3(ret.value);
      } else {
        var convert = ret._numberConverter();
        var unitValue = convert(ret.units[0].unit.value);
        var nominalOffset = convert(ret.units[0].unit.offset);
        var unitOffset = multiplyScalar2(unitValue, nominalOffset);
        ret.value = subtractScalar2(abs3(addScalar2(ret.value, unitOffset)), unitOffset);
      }
    }
    for (var i2 in ret.units) {
      if (ret.units[i2].unit.name === "VA" || ret.units[i2].unit.name === "VAR") {
        ret.units[i2].unit = UNITS.W;
      }
    }
    return ret;
  };
  Unit2.prototype.to = function(valuelessUnit) {
    var value = this.value === null ? this._normalize(1) : this.value;
    var other;
    if (typeof valuelessUnit === "string") {
      other = Unit2.parse(valuelessUnit);
    } else if (isUnit(valuelessUnit)) {
      other = valuelessUnit.clone();
    } else {
      throw new Error("String or Unit expected as parameter");
    }
    if (!this.equalBase(other)) {
      throw new Error("Units do not match ('".concat(other.toString(), "' != '").concat(this.toString(), "')"));
    }
    if (other.value !== null) {
      throw new Error("Cannot convert to a unit with a value");
    }
    if (this.value === null || this._isDerived() || this.units.length === 0 || other.units.length === 0 || this.units[0].unit.offset === other.units[0].unit.offset) {
      other.value = clone(value);
    } else {
      var convert = Unit2._getNumberConverter(typeOf(value));
      var thisUnitValue = this.units[0].unit.value;
      var thisNominalOffset = this.units[0].unit.offset;
      var thisUnitOffset = multiplyScalar2(thisUnitValue, thisNominalOffset);
      var otherUnitValue = other.units[0].unit.value;
      var otherNominalOffset = other.units[0].unit.offset;
      var otherUnitOffset = multiplyScalar2(otherUnitValue, otherNominalOffset);
      other.value = addScalar2(value, convert(subtractScalar2(thisUnitOffset, otherUnitOffset)));
    }
    other.fixPrefix = true;
    other.skipAutomaticSimplification = true;
    return other;
  };
  Unit2.prototype.toNumber = function(valuelessUnit) {
    return toNumber(this.toNumeric(valuelessUnit));
  };
  Unit2.prototype.toNumeric = function(valuelessUnit) {
    var other;
    if (valuelessUnit) {
      other = this.to(valuelessUnit);
    } else {
      other = this.clone();
    }
    if (other._isDerived() || other.units.length === 0) {
      return other._denormalize(other.value);
    } else {
      return other._denormalize(other.value, other.units[0].prefix.value);
    }
  };
  Unit2.prototype.toString = function() {
    return this.format();
  };
  Unit2.prototype.toJSON = function() {
    return {
      mathjs: "Unit",
      value: this._denormalize(this.value),
      unit: this.units.length > 0 ? this.formatUnits() : null,
      fixPrefix: this.fixPrefix
    };
  };
  Unit2.fromJSON = function(json) {
    var _json$unit;
    var unit3 = new Unit2(json.value, (_json$unit = json.unit) !== null && _json$unit !== void 0 ? _json$unit : void 0);
    unit3.fixPrefix = json.fixPrefix || false;
    return unit3;
  };
  Unit2.prototype.valueOf = Unit2.prototype.toString;
  Unit2.prototype.simplify = function() {
    var ret = this.clone();
    var proposedUnitList = [];
    var matchingBase;
    for (var key2 in currentUnitSystem) {
      if (hasOwnProperty(currentUnitSystem, key2)) {
        if (ret.hasBase(BASE_UNITS[key2])) {
          matchingBase = key2;
          break;
        }
      }
    }
    if (matchingBase === "NONE") {
      ret.units = [];
    } else {
      var matchingUnit;
      if (matchingBase) {
        if (hasOwnProperty(currentUnitSystem, matchingBase)) {
          matchingUnit = currentUnitSystem[matchingBase];
        }
      }
      if (matchingUnit) {
        ret.units = [{
          unit: matchingUnit.unit,
          prefix: matchingUnit.prefix,
          power: 1
        }];
      } else {
        var missingBaseDim = false;
        for (var i2 = 0; i2 < BASE_DIMENSIONS.length; i2++) {
          var baseDim = BASE_DIMENSIONS[i2];
          if (Math.abs(ret.dimensions[i2] || 0) > 1e-12) {
            if (hasOwnProperty(currentUnitSystem, baseDim)) {
              proposedUnitList.push({
                unit: currentUnitSystem[baseDim].unit,
                prefix: currentUnitSystem[baseDim].prefix,
                power: ret.dimensions[i2] || 0
              });
            } else {
              missingBaseDim = true;
            }
          }
        }
        if (proposedUnitList.length < ret.units.length && !missingBaseDim) {
          ret.units = proposedUnitList;
        }
      }
    }
    return ret;
  };
  Unit2.prototype.toSI = function() {
    var ret = this.clone();
    var proposedUnitList = [];
    for (var i2 = 0; i2 < BASE_DIMENSIONS.length; i2++) {
      var baseDim = BASE_DIMENSIONS[i2];
      if (Math.abs(ret.dimensions[i2] || 0) > 1e-12) {
        if (hasOwnProperty(UNIT_SYSTEMS.si, baseDim)) {
          proposedUnitList.push({
            unit: UNIT_SYSTEMS.si[baseDim].unit,
            prefix: UNIT_SYSTEMS.si[baseDim].prefix,
            power: ret.dimensions[i2] || 0
          });
        } else {
          throw new Error("Cannot express custom unit " + baseDim + " in SI units");
        }
      }
    }
    ret.units = proposedUnitList;
    ret.fixPrefix = true;
    ret.skipAutomaticSimplification = true;
    if (this.value !== null) {
      ret.value = null;
      return this.to(ret);
    }
    return ret;
  };
  Unit2.prototype.formatUnits = function() {
    var strNum = "";
    var strDen = "";
    var nNum = 0;
    var nDen = 0;
    for (var i2 = 0; i2 < this.units.length; i2++) {
      if (this.units[i2].power > 0) {
        nNum++;
        strNum += " " + this.units[i2].prefix.name + this.units[i2].unit.name;
        if (Math.abs(this.units[i2].power - 1) > 1e-15) {
          strNum += "^" + this.units[i2].power;
        }
      } else if (this.units[i2].power < 0) {
        nDen++;
      }
    }
    if (nDen > 0) {
      for (var _i4 = 0; _i4 < this.units.length; _i4++) {
        if (this.units[_i4].power < 0) {
          if (nNum > 0) {
            strDen += " " + this.units[_i4].prefix.name + this.units[_i4].unit.name;
            if (Math.abs(this.units[_i4].power + 1) > 1e-15) {
              strDen += "^" + -this.units[_i4].power;
            }
          } else {
            strDen += " " + this.units[_i4].prefix.name + this.units[_i4].unit.name;
            strDen += "^" + this.units[_i4].power;
          }
        }
      }
    }
    strNum = strNum.substr(1);
    strDen = strDen.substr(1);
    if (nNum > 1 && nDen > 0) {
      strNum = "(" + strNum + ")";
    }
    if (nDen > 1 && nNum > 0) {
      strDen = "(" + strDen + ")";
    }
    var str = strNum;
    if (nNum > 0 && nDen > 0) {
      str += " / ";
    }
    str += strDen;
    return str;
  };
  Unit2.prototype.format = function(options) {
    var simp = this.skipAutomaticSimplification || this.value === null ? this.clone() : this.simplify();
    var isImaginary = false;
    if (typeof simp.value !== "undefined" && simp.value !== null && isComplex(simp.value)) {
      isImaginary = Math.abs(simp.value.re) < 1e-14;
    }
    for (var i2 in simp.units) {
      if (hasOwnProperty(simp.units, i2)) {
        if (simp.units[i2].unit) {
          if (simp.units[i2].unit.name === "VA" && isImaginary) {
            simp.units[i2].unit = UNITS.VAR;
          } else if (simp.units[i2].unit.name === "VAR" && !isImaginary) {
            simp.units[i2].unit = UNITS.VA;
          }
        }
      }
    }
    if (simp.units.length === 1 && !simp.fixPrefix) {
      if (Math.abs(simp.units[0].power - Math.round(simp.units[0].power)) < 1e-14) {
        simp.units[0].prefix = simp._bestPrefix();
      }
    }
    var value = simp._denormalize(simp.value);
    var str = simp.value !== null ? format5(value, options || {}) : "";
    var unitStr = simp.formatUnits();
    if (simp.value && isComplex(simp.value)) {
      str = "(" + str + ")";
    }
    if (unitStr.length > 0 && str.length > 0) {
      str += " ";
    }
    str += unitStr;
    return str;
  };
  Unit2.prototype._bestPrefix = function() {
    if (this.units.length !== 1) {
      throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");
    }
    if (Math.abs(this.units[0].power - Math.round(this.units[0].power)) >= 1e-14) {
      throw new Error("Can only compute the best prefix for single units with integer powers, like kg, s^2, N^-1, and so forth!");
    }
    var absValue = this.value !== null ? abs3(this.value) : 0;
    var absUnitValue = abs3(this.units[0].unit.value);
    var bestPrefix = this.units[0].prefix;
    if (absValue === 0) {
      return bestPrefix;
    }
    var power = this.units[0].power;
    var bestDiff = Math.log(absValue / Math.pow(bestPrefix.value * absUnitValue, power)) / Math.LN10 - 1.2;
    if (bestDiff > -2.200001 && bestDiff < 1.800001) return bestPrefix;
    bestDiff = Math.abs(bestDiff);
    var prefixes = this.units[0].unit.prefixes;
    for (var p in prefixes) {
      if (hasOwnProperty(prefixes, p)) {
        var prefix = prefixes[p];
        if (prefix.scientific) {
          var diff2 = Math.abs(Math.log(absValue / Math.pow(prefix.value * absUnitValue, power)) / Math.LN10 - 1.2);
          if (diff2 < bestDiff || diff2 === bestDiff && prefix.name.length < bestPrefix.name.length) {
            bestPrefix = prefix;
            bestDiff = diff2;
          }
        }
      }
    }
    return bestPrefix;
  };
  Unit2.prototype.splitUnit = function(parts) {
    var x = this.clone();
    var ret = [];
    for (var i2 = 0; i2 < parts.length; i2++) {
      x = x.to(parts[i2]);
      if (i2 === parts.length - 1) break;
      var xNumeric = x.toNumeric();
      var xRounded = round3(xNumeric);
      var xFixed = void 0;
      var isNearlyEqual = equal2(xRounded, xNumeric);
      if (isNearlyEqual) {
        xFixed = xRounded;
      } else {
        xFixed = fix2(x.toNumeric());
      }
      var y = new Unit2(xFixed, parts[i2].toString());
      ret.push(y);
      x = subtractScalar2(x, y);
    }
    var testSum = 0;
    for (var _i5 = 0; _i5 < ret.length; _i5++) {
      testSum = addScalar2(testSum, ret[_i5].value);
    }
    if (equal2(testSum, this.value)) {
      x.value = 0;
    }
    ret.push(x);
    return ret;
  };
  var PREFIXES = {
    NONE: {
      "": {
        name: "",
        value: 1,
        scientific: true
      }
    },
    SHORT: {
      "": {
        name: "",
        value: 1,
        scientific: true
      },
      da: {
        name: "da",
        value: 10,
        scientific: false
      },
      h: {
        name: "h",
        value: 100,
        scientific: false
      },
      k: {
        name: "k",
        value: 1e3,
        scientific: true
      },
      M: {
        name: "M",
        value: 1e6,
        scientific: true
      },
      G: {
        name: "G",
        value: 1e9,
        scientific: true
      },
      T: {
        name: "T",
        value: 1e12,
        scientific: true
      },
      P: {
        name: "P",
        value: 1e15,
        scientific: true
      },
      E: {
        name: "E",
        value: 1e18,
        scientific: true
      },
      Z: {
        name: "Z",
        value: 1e21,
        scientific: true
      },
      Y: {
        name: "Y",
        value: 1e24,
        scientific: true
      },
      R: {
        name: "R",
        value: 1e27,
        scientific: true
      },
      Q: {
        name: "Q",
        value: 1e30,
        scientific: true
      },
      d: {
        name: "d",
        value: 0.1,
        scientific: false
      },
      c: {
        name: "c",
        value: 0.01,
        scientific: false
      },
      m: {
        name: "m",
        value: 1e-3,
        scientific: true
      },
      u: {
        name: "u",
        value: 1e-6,
        scientific: true
      },
      n: {
        name: "n",
        value: 1e-9,
        scientific: true
      },
      p: {
        name: "p",
        value: 1e-12,
        scientific: true
      },
      f: {
        name: "f",
        value: 1e-15,
        scientific: true
      },
      a: {
        name: "a",
        value: 1e-18,
        scientific: true
      },
      z: {
        name: "z",
        value: 1e-21,
        scientific: true
      },
      y: {
        name: "y",
        value: 1e-24,
        scientific: true
      },
      r: {
        name: "r",
        value: 1e-27,
        scientific: true
      },
      q: {
        name: "q",
        value: 1e-30,
        scientific: true
      }
    },
    LONG: {
      "": {
        name: "",
        value: 1,
        scientific: true
      },
      deca: {
        name: "deca",
        value: 10,
        scientific: false
      },
      hecto: {
        name: "hecto",
        value: 100,
        scientific: false
      },
      kilo: {
        name: "kilo",
        value: 1e3,
        scientific: true
      },
      mega: {
        name: "mega",
        value: 1e6,
        scientific: true
      },
      giga: {
        name: "giga",
        value: 1e9,
        scientific: true
      },
      tera: {
        name: "tera",
        value: 1e12,
        scientific: true
      },
      peta: {
        name: "peta",
        value: 1e15,
        scientific: true
      },
      exa: {
        name: "exa",
        value: 1e18,
        scientific: true
      },
      zetta: {
        name: "zetta",
        value: 1e21,
        scientific: true
      },
      yotta: {
        name: "yotta",
        value: 1e24,
        scientific: true
      },
      ronna: {
        name: "ronna",
        value: 1e27,
        scientific: true
      },
      quetta: {
        name: "quetta",
        value: 1e30,
        scientific: true
      },
      deci: {
        name: "deci",
        value: 0.1,
        scientific: false
      },
      centi: {
        name: "centi",
        value: 0.01,
        scientific: false
      },
      milli: {
        name: "milli",
        value: 1e-3,
        scientific: true
      },
      micro: {
        name: "micro",
        value: 1e-6,
        scientific: true
      },
      nano: {
        name: "nano",
        value: 1e-9,
        scientific: true
      },
      pico: {
        name: "pico",
        value: 1e-12,
        scientific: true
      },
      femto: {
        name: "femto",
        value: 1e-15,
        scientific: true
      },
      atto: {
        name: "atto",
        value: 1e-18,
        scientific: true
      },
      zepto: {
        name: "zepto",
        value: 1e-21,
        scientific: true
      },
      yocto: {
        name: "yocto",
        value: 1e-24,
        scientific: true
      },
      ronto: {
        name: "ronto",
        value: 1e-27,
        scientific: true
      },
      quecto: {
        name: "quecto",
        value: 1e-30,
        scientific: true
      }
    },
    SQUARED: {
      "": {
        name: "",
        value: 1,
        scientific: true
      },
      da: {
        name: "da",
        value: 100,
        scientific: false
      },
      h: {
        name: "h",
        value: 1e4,
        scientific: false
      },
      k: {
        name: "k",
        value: 1e6,
        scientific: true
      },
      M: {
        name: "M",
        value: 1e12,
        scientific: true
      },
      G: {
        name: "G",
        value: 1e18,
        scientific: true
      },
      T: {
        name: "T",
        value: 1e24,
        scientific: true
      },
      P: {
        name: "P",
        value: 1e30,
        scientific: true
      },
      E: {
        name: "E",
        value: 1e36,
        scientific: true
      },
      Z: {
        name: "Z",
        value: 1e42,
        scientific: true
      },
      Y: {
        name: "Y",
        value: 1e48,
        scientific: true
      },
      R: {
        name: "R",
        value: 1e54,
        scientific: true
      },
      Q: {
        name: "Q",
        value: 1e60,
        scientific: true
      },
      d: {
        name: "d",
        value: 0.01,
        scientific: false
      },
      c: {
        name: "c",
        value: 1e-4,
        scientific: false
      },
      m: {
        name: "m",
        value: 1e-6,
        scientific: true
      },
      u: {
        name: "u",
        value: 1e-12,
        scientific: true
      },
      n: {
        name: "n",
        value: 1e-18,
        scientific: true
      },
      p: {
        name: "p",
        value: 1e-24,
        scientific: true
      },
      f: {
        name: "f",
        value: 1e-30,
        scientific: true
      },
      a: {
        name: "a",
        value: 1e-36,
        scientific: true
      },
      z: {
        name: "z",
        value: 1e-42,
        scientific: true
      },
      y: {
        name: "y",
        value: 1e-48,
        scientific: true
      },
      r: {
        name: "r",
        value: 1e-54,
        scientific: true
      },
      q: {
        name: "q",
        value: 1e-60,
        scientific: true
      }
    },
    CUBIC: {
      "": {
        name: "",
        value: 1,
        scientific: true
      },
      da: {
        name: "da",
        value: 1e3,
        scientific: false
      },
      h: {
        name: "h",
        value: 1e6,
        scientific: false
      },
      k: {
        name: "k",
        value: 1e9,
        scientific: true
      },
      M: {
        name: "M",
        value: 1e18,
        scientific: true
      },
      G: {
        name: "G",
        value: 1e27,
        scientific: true
      },
      T: {
        name: "T",
        value: 1e36,
        scientific: true
      },
      P: {
        name: "P",
        value: 1e45,
        scientific: true
      },
      E: {
        name: "E",
        value: 1e54,
        scientific: true
      },
      Z: {
        name: "Z",
        value: 1e63,
        scientific: true
      },
      Y: {
        name: "Y",
        value: 1e72,
        scientific: true
      },
      R: {
        name: "R",
        value: 1e81,
        scientific: true
      },
      Q: {
        name: "Q",
        value: 1e90,
        scientific: true
      },
      d: {
        name: "d",
        value: 1e-3,
        scientific: false
      },
      c: {
        name: "c",
        value: 1e-6,
        scientific: false
      },
      m: {
        name: "m",
        value: 1e-9,
        scientific: true
      },
      u: {
        name: "u",
        value: 1e-18,
        scientific: true
      },
      n: {
        name: "n",
        value: 1e-27,
        scientific: true
      },
      p: {
        name: "p",
        value: 1e-36,
        scientific: true
      },
      f: {
        name: "f",
        value: 1e-45,
        scientific: true
      },
      a: {
        name: "a",
        value: 1e-54,
        scientific: true
      },
      z: {
        name: "z",
        value: 1e-63,
        scientific: true
      },
      y: {
        name: "y",
        value: 1e-72,
        scientific: true
      },
      r: {
        name: "r",
        value: 1e-81,
        scientific: true
      },
      q: {
        name: "q",
        value: 1e-90,
        scientific: true
      }
    },
    BINARY_SHORT_SI: {
      "": {
        name: "",
        value: 1,
        scientific: true
      },
      k: {
        name: "k",
        value: 1e3,
        scientific: true
      },
      M: {
        name: "M",
        value: 1e6,
        scientific: true
      },
      G: {
        name: "G",
        value: 1e9,
        scientific: true
      },
      T: {
        name: "T",
        value: 1e12,
        scientific: true
      },
      P: {
        name: "P",
        value: 1e15,
        scientific: true
      },
      E: {
        name: "E",
        value: 1e18,
        scientific: true
      },
      Z: {
        name: "Z",
        value: 1e21,
        scientific: true
      },
      Y: {
        name: "Y",
        value: 1e24,
        scientific: true
      }
    },
    BINARY_SHORT_IEC: {
      "": {
        name: "",
        value: 1,
        scientific: true
      },
      Ki: {
        name: "Ki",
        value: 1024,
        scientific: true
      },
      Mi: {
        name: "Mi",
        value: Math.pow(1024, 2),
        scientific: true
      },
      Gi: {
        name: "Gi",
        value: Math.pow(1024, 3),
        scientific: true
      },
      Ti: {
        name: "Ti",
        value: Math.pow(1024, 4),
        scientific: true
      },
      Pi: {
        name: "Pi",
        value: Math.pow(1024, 5),
        scientific: true
      },
      Ei: {
        name: "Ei",
        value: Math.pow(1024, 6),
        scientific: true
      },
      Zi: {
        name: "Zi",
        value: Math.pow(1024, 7),
        scientific: true
      },
      Yi: {
        name: "Yi",
        value: Math.pow(1024, 8),
        scientific: true
      }
    },
    BINARY_LONG_SI: {
      "": {
        name: "",
        value: 1,
        scientific: true
      },
      kilo: {
        name: "kilo",
        value: 1e3,
        scientific: true
      },
      mega: {
        name: "mega",
        value: 1e6,
        scientific: true
      },
      giga: {
        name: "giga",
        value: 1e9,
        scientific: true
      },
      tera: {
        name: "tera",
        value: 1e12,
        scientific: true
      },
      peta: {
        name: "peta",
        value: 1e15,
        scientific: true
      },
      exa: {
        name: "exa",
        value: 1e18,
        scientific: true
      },
      zetta: {
        name: "zetta",
        value: 1e21,
        scientific: true
      },
      yotta: {
        name: "yotta",
        value: 1e24,
        scientific: true
      }
    },
    BINARY_LONG_IEC: {
      "": {
        name: "",
        value: 1,
        scientific: true
      },
      kibi: {
        name: "kibi",
        value: 1024,
        scientific: true
      },
      mebi: {
        name: "mebi",
        value: Math.pow(1024, 2),
        scientific: true
      },
      gibi: {
        name: "gibi",
        value: Math.pow(1024, 3),
        scientific: true
      },
      tebi: {
        name: "tebi",
        value: Math.pow(1024, 4),
        scientific: true
      },
      pebi: {
        name: "pebi",
        value: Math.pow(1024, 5),
        scientific: true
      },
      exi: {
        name: "exi",
        value: Math.pow(1024, 6),
        scientific: true
      },
      zebi: {
        name: "zebi",
        value: Math.pow(1024, 7),
        scientific: true
      },
      yobi: {
        name: "yobi",
        value: Math.pow(1024, 8),
        scientific: true
      }
    },
    BTU: {
      "": {
        name: "",
        value: 1,
        scientific: true
      },
      MM: {
        name: "MM",
        value: 1e6,
        scientific: true
      }
    }
  };
  PREFIXES.SHORTLONG = _extends({}, PREFIXES.SHORT, PREFIXES.LONG);
  PREFIXES.BINARY_SHORT = _extends({}, PREFIXES.BINARY_SHORT_SI, PREFIXES.BINARY_SHORT_IEC);
  PREFIXES.BINARY_LONG = _extends({}, PREFIXES.BINARY_LONG_SI, PREFIXES.BINARY_LONG_IEC);
  var BASE_DIMENSIONS = ["MASS", "LENGTH", "TIME", "CURRENT", "TEMPERATURE", "LUMINOUS_INTENSITY", "AMOUNT_OF_SUBSTANCE", "ANGLE", "BIT"];
  var BASE_UNITS = {
    NONE: {
      dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 0]
    },
    MASS: {
      dimensions: [1, 0, 0, 0, 0, 0, 0, 0, 0]
    },
    LENGTH: {
      dimensions: [0, 1, 0, 0, 0, 0, 0, 0, 0]
    },
    TIME: {
      dimensions: [0, 0, 1, 0, 0, 0, 0, 0, 0]
    },
    CURRENT: {
      dimensions: [0, 0, 0, 1, 0, 0, 0, 0, 0]
    },
    TEMPERATURE: {
      dimensions: [0, 0, 0, 0, 1, 0, 0, 0, 0]
    },
    LUMINOUS_INTENSITY: {
      dimensions: [0, 0, 0, 0, 0, 1, 0, 0, 0]
    },
    AMOUNT_OF_SUBSTANCE: {
      dimensions: [0, 0, 0, 0, 0, 0, 1, 0, 0]
    },
    FORCE: {
      dimensions: [1, 1, -2, 0, 0, 0, 0, 0, 0]
    },
    SURFACE: {
      dimensions: [0, 2, 0, 0, 0, 0, 0, 0, 0]
    },
    VOLUME: {
      dimensions: [0, 3, 0, 0, 0, 0, 0, 0, 0]
    },
    ENERGY: {
      dimensions: [1, 2, -2, 0, 0, 0, 0, 0, 0]
    },
    POWER: {
      dimensions: [1, 2, -3, 0, 0, 0, 0, 0, 0]
    },
    PRESSURE: {
      dimensions: [1, -1, -2, 0, 0, 0, 0, 0, 0]
    },
    ELECTRIC_CHARGE: {
      dimensions: [0, 0, 1, 1, 0, 0, 0, 0, 0]
    },
    ELECTRIC_CAPACITANCE: {
      dimensions: [-1, -2, 4, 2, 0, 0, 0, 0, 0]
    },
    ELECTRIC_POTENTIAL: {
      dimensions: [1, 2, -3, -1, 0, 0, 0, 0, 0]
    },
    ELECTRIC_RESISTANCE: {
      dimensions: [1, 2, -3, -2, 0, 0, 0, 0, 0]
    },
    ELECTRIC_INDUCTANCE: {
      dimensions: [1, 2, -2, -2, 0, 0, 0, 0, 0]
    },
    ELECTRIC_CONDUCTANCE: {
      dimensions: [-1, -2, 3, 2, 0, 0, 0, 0, 0]
    },
    MAGNETIC_FLUX: {
      dimensions: [1, 2, -2, -1, 0, 0, 0, 0, 0]
    },
    MAGNETIC_FLUX_DENSITY: {
      dimensions: [1, 0, -2, -1, 0, 0, 0, 0, 0]
    },
    FREQUENCY: {
      dimensions: [0, 0, -1, 0, 0, 0, 0, 0, 0]
    },
    ANGLE: {
      dimensions: [0, 0, 0, 0, 0, 0, 0, 1, 0]
    },
    BIT: {
      dimensions: [0, 0, 0, 0, 0, 0, 0, 0, 1]
    }
  };
  for (var key in BASE_UNITS) {
    if (hasOwnProperty(BASE_UNITS, key)) {
      BASE_UNITS[key].key = key;
    }
  }
  var BASE_UNIT_NONE = {};
  var UNIT_NONE = {
    name: "",
    base: BASE_UNIT_NONE,
    value: 1,
    offset: 0,
    dimensions: BASE_DIMENSIONS.map((x) => 0)
  };
  var UNITS = {
    // length
    meter: {
      name: "meter",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    inch: {
      name: "inch",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.0254,
      offset: 0
    },
    foot: {
      name: "foot",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.3048,
      offset: 0
    },
    yard: {
      name: "yard",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.9144,
      offset: 0
    },
    mile: {
      name: "mile",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 1609.344,
      offset: 0
    },
    link: {
      name: "link",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.201168,
      offset: 0
    },
    rod: {
      name: "rod",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 5.0292,
      offset: 0
    },
    chain: {
      name: "chain",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 20.1168,
      offset: 0
    },
    angstrom: {
      name: "angstrom",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 1e-10,
      offset: 0
    },
    m: {
      name: "m",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    in: {
      name: "in",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.0254,
      offset: 0
    },
    ft: {
      name: "ft",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.3048,
      offset: 0
    },
    yd: {
      name: "yd",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.9144,
      offset: 0
    },
    mi: {
      name: "mi",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 1609.344,
      offset: 0
    },
    li: {
      name: "li",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 0.201168,
      offset: 0
    },
    rd: {
      name: "rd",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 5.02921,
      offset: 0
    },
    ch: {
      name: "ch",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 20.1168,
      offset: 0
    },
    mil: {
      name: "mil",
      base: BASE_UNITS.LENGTH,
      prefixes: PREFIXES.NONE,
      value: 254e-7,
      offset: 0
    },
    // 1/1000 inch
    // Surface
    m2: {
      name: "m2",
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.SQUARED,
      value: 1,
      offset: 0
    },
    sqin: {
      name: "sqin",
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 64516e-8,
      offset: 0
    },
    // 645.16 mm2
    sqft: {
      name: "sqft",
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 0.09290304,
      offset: 0
    },
    // 0.09290304 m2
    sqyd: {
      name: "sqyd",
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 0.83612736,
      offset: 0
    },
    // 0.83612736 m2
    sqmi: {
      name: "sqmi",
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 2589988110336e-6,
      offset: 0
    },
    // 2.589988110336 km2
    sqrd: {
      name: "sqrd",
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 25.29295,
      offset: 0
    },
    // 25.29295 m2
    sqch: {
      name: "sqch",
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 404.6873,
      offset: 0
    },
    // 404.6873 m2
    sqmil: {
      name: "sqmil",
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 64516e-14,
      offset: 0
    },
    // 6.4516 * 10^-10 m2
    acre: {
      name: "acre",
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 4046.86,
      offset: 0
    },
    // 4046.86 m2
    hectare: {
      name: "hectare",
      base: BASE_UNITS.SURFACE,
      prefixes: PREFIXES.NONE,
      value: 1e4,
      offset: 0
    },
    // 10000 m2
    // Volume
    m3: {
      name: "m3",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.CUBIC,
      value: 1,
      offset: 0
    },
    L: {
      name: "L",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.SHORT,
      value: 1e-3,
      offset: 0
    },
    // litre
    l: {
      name: "l",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.SHORT,
      value: 1e-3,
      offset: 0
    },
    // litre
    litre: {
      name: "litre",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.LONG,
      value: 1e-3,
      offset: 0
    },
    cuin: {
      name: "cuin",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 16387064e-12,
      offset: 0
    },
    // 1.6387064e-5 m3
    cuft: {
      name: "cuft",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.028316846592,
      offset: 0
    },
    // 28.316 846 592 L
    cuyd: {
      name: "cuyd",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.764554857984,
      offset: 0
    },
    // 764.554 857 984 L
    teaspoon: {
      name: "teaspoon",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 5e-6,
      offset: 0
    },
    // 5 mL
    tablespoon: {
      name: "tablespoon",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 15e-6,
      offset: 0
    },
    // 15 mL
    // {name: 'cup', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.000240, offset: 0}, // 240 mL  // not possible, we have already another cup
    drop: {
      name: "drop",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 5e-8,
      offset: 0
    },
    // 0.05 mL = 5e-8 m3
    gtt: {
      name: "gtt",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 5e-8,
      offset: 0
    },
    // 0.05 mL = 5e-8 m3
    // Liquid volume
    minim: {
      name: "minim",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 6161152e-14,
      offset: 0
    },
    // 0.06161152 mL
    fluiddram: {
      name: "fluiddram",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 36966911e-13,
      offset: 0
    },
    // 3.696691 mL
    fluidounce: {
      name: "fluidounce",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 2957353e-11,
      offset: 0
    },
    // 29.57353 mL
    gill: {
      name: "gill",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 1182941e-10,
      offset: 0
    },
    // 118.2941 mL
    cc: {
      name: "cc",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 1e-6,
      offset: 0
    },
    // 1e-6 L
    cup: {
      name: "cup",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 2365882e-10,
      offset: 0
    },
    // 236.5882 mL
    pint: {
      name: "pint",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 4731765e-10,
      offset: 0
    },
    // 473.1765 mL
    quart: {
      name: "quart",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 9463529e-10,
      offset: 0
    },
    // 946.3529 mL
    gallon: {
      name: "gallon",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 3785412e-9,
      offset: 0
    },
    // 3.785412 L
    beerbarrel: {
      name: "beerbarrel",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.1173478,
      offset: 0
    },
    // 117.3478 L
    oilbarrel: {
      name: "oilbarrel",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.1589873,
      offset: 0
    },
    // 158.9873 L
    hogshead: {
      name: "hogshead",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.238481,
      offset: 0
    },
    // 238.4810 L
    // {name: 'min', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.00000006161152, offset: 0}, // 0.06161152 mL // min is already in use as minute
    fldr: {
      name: "fldr",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 36966911e-13,
      offset: 0
    },
    // 3.696691 mL
    floz: {
      name: "floz",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 2957353e-11,
      offset: 0
    },
    // 29.57353 mL
    gi: {
      name: "gi",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 1182941e-10,
      offset: 0
    },
    // 118.2941 mL
    cp: {
      name: "cp",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 2365882e-10,
      offset: 0
    },
    // 236.5882 mL
    pt: {
      name: "pt",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 4731765e-10,
      offset: 0
    },
    // 473.1765 mL
    qt: {
      name: "qt",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 9463529e-10,
      offset: 0
    },
    // 946.3529 mL
    gal: {
      name: "gal",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 3785412e-9,
      offset: 0
    },
    // 3.785412 L
    bbl: {
      name: "bbl",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.1173478,
      offset: 0
    },
    // 117.3478 L
    obl: {
      name: "obl",
      base: BASE_UNITS.VOLUME,
      prefixes: PREFIXES.NONE,
      value: 0.1589873,
      offset: 0
    },
    // 158.9873 L
    // {name: 'hogshead', base: BASE_UNITS.VOLUME, prefixes: PREFIXES.NONE, value: 0.2384810, offset: 0}, // 238.4810 L // TODO: hh?
    // Mass
    g: {
      name: "g",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.SHORT,
      value: 1e-3,
      offset: 0
    },
    gram: {
      name: "gram",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.LONG,
      value: 1e-3,
      offset: 0
    },
    ton: {
      name: "ton",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.SHORT,
      value: 907.18474,
      offset: 0
    },
    t: {
      name: "t",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.SHORT,
      value: 1e3,
      offset: 0
    },
    tonne: {
      name: "tonne",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.LONG,
      value: 1e3,
      offset: 0
    },
    grain: {
      name: "grain",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 6479891e-11,
      offset: 0
    },
    dram: {
      name: "dram",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 0.0017718451953125,
      offset: 0
    },
    ounce: {
      name: "ounce",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 0.028349523125,
      offset: 0
    },
    poundmass: {
      name: "poundmass",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 0.45359237,
      offset: 0
    },
    hundredweight: {
      name: "hundredweight",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 45.359237,
      offset: 0
    },
    stick: {
      name: "stick",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 0.115,
      offset: 0
    },
    stone: {
      name: "stone",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 6.35029318,
      offset: 0
    },
    gr: {
      name: "gr",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 6479891e-11,
      offset: 0
    },
    dr: {
      name: "dr",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 0.0017718451953125,
      offset: 0
    },
    oz: {
      name: "oz",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 0.028349523125,
      offset: 0
    },
    lbm: {
      name: "lbm",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 0.45359237,
      offset: 0
    },
    cwt: {
      name: "cwt",
      base: BASE_UNITS.MASS,
      prefixes: PREFIXES.NONE,
      value: 45.359237,
      offset: 0
    },
    // Time
    s: {
      name: "s",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    min: {
      name: "min",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 60,
      offset: 0
    },
    h: {
      name: "h",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 3600,
      offset: 0
    },
    second: {
      name: "second",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    sec: {
      name: "sec",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    minute: {
      name: "minute",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 60,
      offset: 0
    },
    hour: {
      name: "hour",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 3600,
      offset: 0
    },
    day: {
      name: "day",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 86400,
      offset: 0
    },
    week: {
      name: "week",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 7 * 86400,
      offset: 0
    },
    month: {
      name: "month",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 2629800,
      // 1/12th of Julian year
      offset: 0
    },
    year: {
      name: "year",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 31557600,
      // Julian year
      offset: 0
    },
    decade: {
      name: "decade",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 315576e3,
      // Julian decade
      offset: 0
    },
    century: {
      name: "century",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 315576e4,
      // Julian century
      offset: 0
    },
    millennium: {
      name: "millennium",
      base: BASE_UNITS.TIME,
      prefixes: PREFIXES.NONE,
      value: 315576e5,
      // Julian millennium
      offset: 0
    },
    // Frequency
    hertz: {
      name: "Hertz",
      base: BASE_UNITS.FREQUENCY,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0,
      reciprocal: true
    },
    Hz: {
      name: "Hz",
      base: BASE_UNITS.FREQUENCY,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0,
      reciprocal: true
    },
    // Angle
    rad: {
      name: "rad",
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    radian: {
      name: "radian",
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    // deg = rad / (2*pi) * 360 = rad / 0.017453292519943295769236907684888
    deg: {
      name: "deg",
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.SHORT,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    degree: {
      name: "degree",
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.LONG,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    // grad = rad / (2*pi) * 400  = rad / 0.015707963267948966192313216916399
    grad: {
      name: "grad",
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.SHORT,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    gradian: {
      name: "gradian",
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.LONG,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    // cycle = rad / (2*pi) = rad / 6.2831853071795864769252867665793
    cycle: {
      name: "cycle",
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.NONE,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    // arcsec = rad / (3600 * (360 / 2 * pi)) = rad / 0.0000048481368110953599358991410235795
    arcsec: {
      name: "arcsec",
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.NONE,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    // arcmin = rad / (60 * (360 / 2 * pi)) = rad / 0.00029088820866572159615394846141477
    arcmin: {
      name: "arcmin",
      base: BASE_UNITS.ANGLE,
      prefixes: PREFIXES.NONE,
      value: null,
      // will be filled in by calculateAngleValues()
      offset: 0
    },
    // Electric current
    A: {
      name: "A",
      base: BASE_UNITS.CURRENT,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    ampere: {
      name: "ampere",
      base: BASE_UNITS.CURRENT,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    // Temperature
    // K(C) = °C + 273.15
    // K(F) = (°F + 459.67) * (5 / 9)
    // K(R) = °R * (5 / 9)
    K: {
      name: "K",
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    degC: {
      name: "degC",
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 273.15
    },
    degF: {
      name: "degF",
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.SHORT,
      value: new _Fraction(5, 9),
      offset: 459.67
    },
    degR: {
      name: "degR",
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.SHORT,
      value: new _Fraction(5, 9),
      offset: 0
    },
    kelvin: {
      name: "kelvin",
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    celsius: {
      name: "celsius",
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 273.15
    },
    fahrenheit: {
      name: "fahrenheit",
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.LONG,
      value: new _Fraction(5, 9),
      offset: 459.67
    },
    rankine: {
      name: "rankine",
      base: BASE_UNITS.TEMPERATURE,
      prefixes: PREFIXES.LONG,
      value: new _Fraction(5, 9),
      offset: 0
    },
    // amount of substance
    mol: {
      name: "mol",
      base: BASE_UNITS.AMOUNT_OF_SUBSTANCE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    mole: {
      name: "mole",
      base: BASE_UNITS.AMOUNT_OF_SUBSTANCE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    // luminous intensity
    cd: {
      name: "cd",
      base: BASE_UNITS.LUMINOUS_INTENSITY,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    candela: {
      name: "candela",
      base: BASE_UNITS.LUMINOUS_INTENSITY,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    // TODO: units STERADIAN
    // {name: 'sr', base: BASE_UNITS.STERADIAN, prefixes: PREFIXES.NONE, value: 1, offset: 0},
    // {name: 'steradian', base: BASE_UNITS.STERADIAN, prefixes: PREFIXES.NONE, value: 1, offset: 0},
    // Force
    N: {
      name: "N",
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    newton: {
      name: "newton",
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    dyn: {
      name: "dyn",
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.SHORT,
      value: 1e-5,
      offset: 0
    },
    dyne: {
      name: "dyne",
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.LONG,
      value: 1e-5,
      offset: 0
    },
    lbf: {
      name: "lbf",
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.NONE,
      value: 4.4482216152605,
      offset: 0
    },
    poundforce: {
      name: "poundforce",
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.NONE,
      value: 4.4482216152605,
      offset: 0
    },
    kip: {
      name: "kip",
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.LONG,
      value: 4448.2216,
      offset: 0
    },
    kilogramforce: {
      name: "kilogramforce",
      base: BASE_UNITS.FORCE,
      prefixes: PREFIXES.NONE,
      value: 9.80665,
      offset: 0
    },
    // Energy
    J: {
      name: "J",
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    joule: {
      name: "joule",
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    erg: {
      name: "erg",
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.SHORTLONG,
      // Both kiloerg and kerg are acceptable
      value: 1e-7,
      offset: 0
    },
    Wh: {
      name: "Wh",
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.SHORT,
      value: 3600,
      offset: 0
    },
    BTU: {
      name: "BTU",
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.BTU,
      value: 1055.05585262,
      offset: 0
    },
    eV: {
      name: "eV",
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.SHORT,
      value: 1602176565e-28,
      offset: 0
    },
    electronvolt: {
      name: "electronvolt",
      base: BASE_UNITS.ENERGY,
      prefixes: PREFIXES.LONG,
      value: 1602176565e-28,
      offset: 0
    },
    // Power
    W: {
      name: "W",
      base: BASE_UNITS.POWER,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    watt: {
      name: "watt",
      base: BASE_UNITS.POWER,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    hp: {
      name: "hp",
      base: BASE_UNITS.POWER,
      prefixes: PREFIXES.NONE,
      value: 745.6998715386,
      offset: 0
    },
    // Electrical power units
    VAR: {
      name: "VAR",
      base: BASE_UNITS.POWER,
      prefixes: PREFIXES.SHORT,
      value: Complex3.I,
      offset: 0
    },
    VA: {
      name: "VA",
      base: BASE_UNITS.POWER,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Pressure
    Pa: {
      name: "Pa",
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    psi: {
      name: "psi",
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.NONE,
      value: 6894.75729276459,
      offset: 0
    },
    atm: {
      name: "atm",
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.NONE,
      value: 101325,
      offset: 0
    },
    bar: {
      name: "bar",
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.SHORTLONG,
      value: 1e5,
      offset: 0
    },
    torr: {
      name: "torr",
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.NONE,
      value: 133.322,
      offset: 0
    },
    mmHg: {
      name: "mmHg",
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.NONE,
      value: 133.322,
      offset: 0
    },
    mmH2O: {
      name: "mmH2O",
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.NONE,
      value: 9.80665,
      offset: 0
    },
    cmH2O: {
      name: "cmH2O",
      base: BASE_UNITS.PRESSURE,
      prefixes: PREFIXES.NONE,
      value: 98.0665,
      offset: 0
    },
    // Electric charge
    coulomb: {
      name: "coulomb",
      base: BASE_UNITS.ELECTRIC_CHARGE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    C: {
      name: "C",
      base: BASE_UNITS.ELECTRIC_CHARGE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Electric capacitance
    farad: {
      name: "farad",
      base: BASE_UNITS.ELECTRIC_CAPACITANCE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    F: {
      name: "F",
      base: BASE_UNITS.ELECTRIC_CAPACITANCE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Electric potential
    volt: {
      name: "volt",
      base: BASE_UNITS.ELECTRIC_POTENTIAL,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    V: {
      name: "V",
      base: BASE_UNITS.ELECTRIC_POTENTIAL,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Electric resistance
    ohm: {
      name: "ohm",
      base: BASE_UNITS.ELECTRIC_RESISTANCE,
      prefixes: PREFIXES.SHORTLONG,
      // Both Mohm and megaohm are acceptable
      value: 1,
      offset: 0
    },
    /*
     * Unicode breaks in browsers if charset is not specified
    Ω: {
      name: 'Ω',
      base: BASE_UNITS.ELECTRIC_RESISTANCE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    */
    // Electric inductance
    henry: {
      name: "henry",
      base: BASE_UNITS.ELECTRIC_INDUCTANCE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    H: {
      name: "H",
      base: BASE_UNITS.ELECTRIC_INDUCTANCE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Electric conductance
    siemens: {
      name: "siemens",
      base: BASE_UNITS.ELECTRIC_CONDUCTANCE,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    S: {
      name: "S",
      base: BASE_UNITS.ELECTRIC_CONDUCTANCE,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Magnetic flux
    weber: {
      name: "weber",
      base: BASE_UNITS.MAGNETIC_FLUX,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    Wb: {
      name: "Wb",
      base: BASE_UNITS.MAGNETIC_FLUX,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Magnetic flux density
    tesla: {
      name: "tesla",
      base: BASE_UNITS.MAGNETIC_FLUX_DENSITY,
      prefixes: PREFIXES.LONG,
      value: 1,
      offset: 0
    },
    T: {
      name: "T",
      base: BASE_UNITS.MAGNETIC_FLUX_DENSITY,
      prefixes: PREFIXES.SHORT,
      value: 1,
      offset: 0
    },
    // Binary
    b: {
      name: "b",
      base: BASE_UNITS.BIT,
      prefixes: PREFIXES.BINARY_SHORT,
      value: 1,
      offset: 0
    },
    bits: {
      name: "bits",
      base: BASE_UNITS.BIT,
      prefixes: PREFIXES.BINARY_LONG,
      value: 1,
      offset: 0
    },
    B: {
      name: "B",
      base: BASE_UNITS.BIT,
      prefixes: PREFIXES.BINARY_SHORT,
      value: 8,
      offset: 0
    },
    bytes: {
      name: "bytes",
      base: BASE_UNITS.BIT,
      prefixes: PREFIXES.BINARY_LONG,
      value: 8,
      offset: 0
    }
  };
  var ALIASES = {
    meters: "meter",
    inches: "inch",
    feet: "foot",
    yards: "yard",
    miles: "mile",
    links: "link",
    rods: "rod",
    chains: "chain",
    angstroms: "angstrom",
    lt: "l",
    litres: "litre",
    liter: "litre",
    liters: "litre",
    teaspoons: "teaspoon",
    tablespoons: "tablespoon",
    minims: "minim",
    fluiddrams: "fluiddram",
    fluidounces: "fluidounce",
    gills: "gill",
    cups: "cup",
    pints: "pint",
    quarts: "quart",
    gallons: "gallon",
    beerbarrels: "beerbarrel",
    oilbarrels: "oilbarrel",
    hogsheads: "hogshead",
    gtts: "gtt",
    grams: "gram",
    tons: "ton",
    tonnes: "tonne",
    grains: "grain",
    drams: "dram",
    ounces: "ounce",
    poundmasses: "poundmass",
    hundredweights: "hundredweight",
    sticks: "stick",
    lb: "lbm",
    lbs: "lbm",
    kips: "kip",
    kgf: "kilogramforce",
    acres: "acre",
    hectares: "hectare",
    sqfeet: "sqft",
    sqyard: "sqyd",
    sqmile: "sqmi",
    sqmiles: "sqmi",
    mmhg: "mmHg",
    mmh2o: "mmH2O",
    cmh2o: "cmH2O",
    seconds: "second",
    secs: "second",
    minutes: "minute",
    mins: "minute",
    hours: "hour",
    hr: "hour",
    hrs: "hour",
    days: "day",
    weeks: "week",
    months: "month",
    years: "year",
    decades: "decade",
    centuries: "century",
    millennia: "millennium",
    hertz: "hertz",
    radians: "radian",
    degrees: "degree",
    gradians: "gradian",
    cycles: "cycle",
    arcsecond: "arcsec",
    arcseconds: "arcsec",
    arcminute: "arcmin",
    arcminutes: "arcmin",
    BTUs: "BTU",
    watts: "watt",
    joules: "joule",
    amperes: "ampere",
    amps: "ampere",
    amp: "ampere",
    coulombs: "coulomb",
    volts: "volt",
    ohms: "ohm",
    farads: "farad",
    webers: "weber",
    teslas: "tesla",
    electronvolts: "electronvolt",
    moles: "mole",
    bit: "bits",
    byte: "bytes"
  };
  function calculateAngleValues(config5) {
    if (config5.number === "BigNumber") {
      var pi3 = createBigNumberPi(_BigNumber);
      UNITS.rad.value = new _BigNumber(1);
      UNITS.deg.value = pi3.div(180);
      UNITS.grad.value = pi3.div(200);
      UNITS.cycle.value = pi3.times(2);
      UNITS.arcsec.value = pi3.div(648e3);
      UNITS.arcmin.value = pi3.div(10800);
    } else {
      UNITS.rad.value = 1;
      UNITS.deg.value = Math.PI / 180;
      UNITS.grad.value = Math.PI / 200;
      UNITS.cycle.value = Math.PI * 2;
      UNITS.arcsec.value = Math.PI / 648e3;
      UNITS.arcmin.value = Math.PI / 10800;
    }
    UNITS.radian.value = UNITS.rad.value;
    UNITS.degree.value = UNITS.deg.value;
    UNITS.gradian.value = UNITS.grad.value;
  }
  calculateAngleValues(config4);
  if (on) {
    on("config", function(curr, prev) {
      if (curr.number !== prev.number) {
        calculateAngleValues(curr);
      }
    });
  }
  var UNIT_SYSTEMS = {
    si: {
      // Base units
      NONE: {
        unit: UNIT_NONE,
        prefix: PREFIXES.NONE[""]
      },
      LENGTH: {
        unit: UNITS.m,
        prefix: PREFIXES.SHORT[""]
      },
      MASS: {
        unit: UNITS.g,
        prefix: PREFIXES.SHORT.k
      },
      TIME: {
        unit: UNITS.s,
        prefix: PREFIXES.SHORT[""]
      },
      CURRENT: {
        unit: UNITS.A,
        prefix: PREFIXES.SHORT[""]
      },
      TEMPERATURE: {
        unit: UNITS.K,
        prefix: PREFIXES.SHORT[""]
      },
      LUMINOUS_INTENSITY: {
        unit: UNITS.cd,
        prefix: PREFIXES.SHORT[""]
      },
      AMOUNT_OF_SUBSTANCE: {
        unit: UNITS.mol,
        prefix: PREFIXES.SHORT[""]
      },
      ANGLE: {
        unit: UNITS.rad,
        prefix: PREFIXES.SHORT[""]
      },
      BIT: {
        unit: UNITS.bits,
        prefix: PREFIXES.SHORT[""]
      },
      // Derived units
      FORCE: {
        unit: UNITS.N,
        prefix: PREFIXES.SHORT[""]
      },
      ENERGY: {
        unit: UNITS.J,
        prefix: PREFIXES.SHORT[""]
      },
      POWER: {
        unit: UNITS.W,
        prefix: PREFIXES.SHORT[""]
      },
      PRESSURE: {
        unit: UNITS.Pa,
        prefix: PREFIXES.SHORT[""]
      },
      ELECTRIC_CHARGE: {
        unit: UNITS.C,
        prefix: PREFIXES.SHORT[""]
      },
      ELECTRIC_CAPACITANCE: {
        unit: UNITS.F,
        prefix: PREFIXES.SHORT[""]
      },
      ELECTRIC_POTENTIAL: {
        unit: UNITS.V,
        prefix: PREFIXES.SHORT[""]
      },
      ELECTRIC_RESISTANCE: {
        unit: UNITS.ohm,
        prefix: PREFIXES.SHORT[""]
      },
      ELECTRIC_INDUCTANCE: {
        unit: UNITS.H,
        prefix: PREFIXES.SHORT[""]
      },
      ELECTRIC_CONDUCTANCE: {
        unit: UNITS.S,
        prefix: PREFIXES.SHORT[""]
      },
      MAGNETIC_FLUX: {
        unit: UNITS.Wb,
        prefix: PREFIXES.SHORT[""]
      },
      MAGNETIC_FLUX_DENSITY: {
        unit: UNITS.T,
        prefix: PREFIXES.SHORT[""]
      },
      FREQUENCY: {
        unit: UNITS.Hz,
        prefix: PREFIXES.SHORT[""]
      }
    }
  };
  UNIT_SYSTEMS.cgs = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));
  UNIT_SYSTEMS.cgs.LENGTH = {
    unit: UNITS.m,
    prefix: PREFIXES.SHORT.c
  };
  UNIT_SYSTEMS.cgs.MASS = {
    unit: UNITS.g,
    prefix: PREFIXES.SHORT[""]
  };
  UNIT_SYSTEMS.cgs.FORCE = {
    unit: UNITS.dyn,
    prefix: PREFIXES.SHORT[""]
  };
  UNIT_SYSTEMS.cgs.ENERGY = {
    unit: UNITS.erg,
    prefix: PREFIXES.NONE[""]
  };
  UNIT_SYSTEMS.us = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));
  UNIT_SYSTEMS.us.LENGTH = {
    unit: UNITS.ft,
    prefix: PREFIXES.NONE[""]
  };
  UNIT_SYSTEMS.us.MASS = {
    unit: UNITS.lbm,
    prefix: PREFIXES.NONE[""]
  };
  UNIT_SYSTEMS.us.TEMPERATURE = {
    unit: UNITS.degF,
    prefix: PREFIXES.NONE[""]
  };
  UNIT_SYSTEMS.us.FORCE = {
    unit: UNITS.lbf,
    prefix: PREFIXES.NONE[""]
  };
  UNIT_SYSTEMS.us.ENERGY = {
    unit: UNITS.BTU,
    prefix: PREFIXES.BTU[""]
  };
  UNIT_SYSTEMS.us.POWER = {
    unit: UNITS.hp,
    prefix: PREFIXES.NONE[""]
  };
  UNIT_SYSTEMS.us.PRESSURE = {
    unit: UNITS.psi,
    prefix: PREFIXES.NONE[""]
  };
  UNIT_SYSTEMS.auto = JSON.parse(JSON.stringify(UNIT_SYSTEMS.si));
  var currentUnitSystem = UNIT_SYSTEMS.auto;
  Unit2.setUnitSystem = function(name314) {
    if (hasOwnProperty(UNIT_SYSTEMS, name314)) {
      currentUnitSystem = UNIT_SYSTEMS[name314];
    } else {
      throw new Error("Unit system " + name314 + " does not exist. Choices are: " + Object.keys(UNIT_SYSTEMS).join(", "));
    }
  };
  Unit2.getUnitSystem = function() {
    for (var _key in UNIT_SYSTEMS) {
      if (hasOwnProperty(UNIT_SYSTEMS, _key)) {
        if (UNIT_SYSTEMS[_key] === currentUnitSystem) {
          return _key;
        }
      }
    }
  };
  Unit2.typeConverters = {
    BigNumber: function BigNumber2(x) {
      if (x !== null && x !== void 0 && x.isFraction) return new _BigNumber(x.n).div(x.d).times(x.s);
      return new _BigNumber(x + "");
    },
    Fraction: function Fraction3(x) {
      return new _Fraction(x);
    },
    Complex: function Complex4(x) {
      return x;
    },
    number: function number2(x) {
      if (x !== null && x !== void 0 && x.isFraction) return _number(x);
      return x;
    }
  };
  Unit2.prototype._numberConverter = function() {
    var convert = Unit2.typeConverters[this.valueType()];
    if (convert) {
      return convert;
    }
    throw new TypeError('Unsupported Unit value type "' + this.valueType() + '"');
  };
  Unit2._getNumberConverter = function(type) {
    if (!Unit2.typeConverters[type]) {
      throw new TypeError('Unsupported type "' + type + '"');
    }
    return Unit2.typeConverters[type];
  };
  for (var _key2 in UNITS) {
    if (hasOwnProperty(UNITS, _key2)) {
      var unit2 = UNITS[_key2];
      unit2.dimensions = unit2.base.dimensions;
    }
  }
  for (var _name2 in ALIASES) {
    if (hasOwnProperty(ALIASES, _name2)) {
      var _unit2 = UNITS[ALIASES[_name2]];
      var alias = {};
      for (var _key3 in _unit2) {
        if (hasOwnProperty(_unit2, _key3)) {
          alias[_key3] = _unit2[_key3];
        }
      }
      alias.name = _name2;
      UNITS[_name2] = alias;
    }
  }
  Unit2.isValidAlpha = function isValidAlpha(c2) {
    return /^[a-zA-Z]$/.test(c2);
  };
  function assertUnitNameIsValid(name314) {
    for (var i2 = 0; i2 < name314.length; i2++) {
      c = name314.charAt(i2);
      if (i2 === 0 && !Unit2.isValidAlpha(c)) {
        throw new Error('Invalid unit name (must begin with alpha character): "' + name314 + '"');
      }
      if (i2 > 0 && !(Unit2.isValidAlpha(c) || isDigit(c))) {
        throw new Error('Invalid unit name (only alphanumeric characters are allowed): "' + name314 + '"');
      }
    }
  }
  Unit2.createUnit = function(obj, options) {
    if (typeof obj !== "object") {
      throw new TypeError("createUnit expects first parameter to be of type 'Object'");
    }
    if (options && options.override) {
      for (var _key4 in obj) {
        if (hasOwnProperty(obj, _key4)) {
          Unit2.deleteUnit(_key4);
        }
        if (obj[_key4].aliases) {
          for (var i2 = 0; i2 < obj[_key4].aliases.length; i2++) {
            Unit2.deleteUnit(obj[_key4].aliases[i2]);
          }
        }
      }
    }
    var lastUnit;
    for (var _key5 in obj) {
      if (hasOwnProperty(obj, _key5)) {
        lastUnit = Unit2.createUnitSingle(_key5, obj[_key5]);
      }
    }
    return lastUnit;
  };
  Unit2.createUnitSingle = function(name314, obj) {
    if (typeof obj === "undefined" || obj === null) {
      obj = {};
    }
    if (typeof name314 !== "string") {
      throw new TypeError("createUnitSingle expects first parameter to be of type 'string'");
    }
    if (hasOwnProperty(UNITS, name314)) {
      throw new Error('Cannot create unit "' + name314 + '": a unit with that name already exists');
    }
    assertUnitNameIsValid(name314);
    var defUnit = null;
    var aliases = [];
    var offset = 0;
    var definition;
    var prefixes;
    var baseName;
    if (obj && obj.type === "Unit") {
      defUnit = obj.clone();
    } else if (typeof obj === "string") {
      if (obj !== "") {
        definition = obj;
      }
    } else if (typeof obj === "object") {
      definition = obj.definition;
      prefixes = obj.prefixes;
      offset = obj.offset;
      baseName = obj.baseName;
      if (obj.aliases) {
        aliases = obj.aliases.valueOf();
      }
    } else {
      throw new TypeError('Cannot create unit "' + name314 + '" from "' + obj.toString() + '": expecting "string" or "Unit" or "Object"');
    }
    if (aliases) {
      for (var i2 = 0; i2 < aliases.length; i2++) {
        if (hasOwnProperty(UNITS, aliases[i2])) {
          throw new Error('Cannot create alias "' + aliases[i2] + '": a unit with that name already exists');
        }
      }
    }
    if (definition && typeof definition === "string" && !defUnit) {
      try {
        defUnit = Unit2.parse(definition, {
          allowNoUnits: true
        });
      } catch (ex) {
        ex.message = 'Could not create unit "' + name314 + '" from "' + definition + '": ' + ex.message;
        throw ex;
      }
    } else if (definition && definition.type === "Unit") {
      defUnit = definition.clone();
    }
    aliases = aliases || [];
    offset = offset || 0;
    if (prefixes && prefixes.toUpperCase) {
      prefixes = PREFIXES[prefixes.toUpperCase()] || PREFIXES.NONE;
    } else {
      prefixes = PREFIXES.NONE;
    }
    var newUnit = {};
    if (!defUnit) {
      baseName = baseName || name314 + "_STUFF";
      if (BASE_DIMENSIONS.indexOf(baseName) >= 0) {
        throw new Error('Cannot create new base unit "' + name314 + '": a base unit with that name already exists (and cannot be overridden)');
      }
      BASE_DIMENSIONS.push(baseName);
      for (var b2 in BASE_UNITS) {
        if (hasOwnProperty(BASE_UNITS, b2)) {
          BASE_UNITS[b2].dimensions[BASE_DIMENSIONS.length - 1] = 0;
        }
      }
      var newBaseUnit = {
        dimensions: []
      };
      for (var _i6 = 0; _i6 < BASE_DIMENSIONS.length; _i6++) {
        newBaseUnit.dimensions[_i6] = 0;
      }
      newBaseUnit.dimensions[BASE_DIMENSIONS.length - 1] = 1;
      newBaseUnit.key = baseName;
      BASE_UNITS[baseName] = newBaseUnit;
      newUnit = {
        name: name314,
        value: 1,
        dimensions: BASE_UNITS[baseName].dimensions.slice(0),
        prefixes,
        offset,
        base: BASE_UNITS[baseName]
      };
      currentUnitSystem[baseName] = {
        unit: newUnit,
        prefix: PREFIXES.NONE[""]
      };
    } else {
      newUnit = {
        name: name314,
        value: defUnit.value,
        dimensions: defUnit.dimensions.slice(0),
        prefixes,
        offset
      };
      var anyMatch = false;
      for (var _i7 in BASE_UNITS) {
        if (hasOwnProperty(BASE_UNITS, _i7)) {
          var match = true;
          for (var j = 0; j < BASE_DIMENSIONS.length; j++) {
            if (Math.abs((newUnit.dimensions[j] || 0) - (BASE_UNITS[_i7].dimensions[j] || 0)) > 1e-12) {
              match = false;
              break;
            }
          }
          if (match) {
            anyMatch = true;
            newUnit.base = BASE_UNITS[_i7];
            break;
          }
        }
      }
      if (!anyMatch) {
        baseName = baseName || name314 + "_STUFF";
        var _newBaseUnit = {
          dimensions: defUnit.dimensions.slice(0)
        };
        _newBaseUnit.key = baseName;
        BASE_UNITS[baseName] = _newBaseUnit;
        currentUnitSystem[baseName] = {
          unit: newUnit,
          prefix: PREFIXES.NONE[""]
        };
        newUnit.base = BASE_UNITS[baseName];
      }
    }
    Unit2.UNITS[name314] = newUnit;
    for (var _i8 = 0; _i8 < aliases.length; _i8++) {
      var aliasName = aliases[_i8];
      var _alias = {};
      for (var _key6 in newUnit) {
        if (hasOwnProperty(newUnit, _key6)) {
          _alias[_key6] = newUnit[_key6];
        }
      }
      _alias.name = aliasName;
      Unit2.UNITS[aliasName] = _alias;
    }
    delete _findUnit.cache;
    return new Unit2(null, name314);
  };
  Unit2.deleteUnit = function(name314) {
    delete Unit2.UNITS[name314];
    delete _findUnit.cache;
  };
  Unit2.PREFIXES = PREFIXES;
  Unit2.BASE_DIMENSIONS = BASE_DIMENSIONS;
  Unit2.BASE_UNITS = BASE_UNITS;
  Unit2.UNIT_SYSTEMS = UNIT_SYSTEMS;
  Unit2.UNITS = UNITS;
  return Unit2;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/type/unit/function/unit.js
var name162 = "unit";
var dependencies162 = ["typed", "Unit"];
var createUnitFunction = factory(name162, dependencies162, (_ref) => {
  var {
    typed: typed2,
    Unit: Unit2
  } = _ref;
  return typed2(name162, {
    Unit: function Unit3(x) {
      return x.clone();
    },
    string: function string2(x) {
      if (Unit2.isValuelessUnit(x)) {
        return new Unit2(null, x);
      }
      return Unit2.parse(x, {
        allowNoUnits: true
      });
    },
    "number | BigNumber | Fraction | Complex, string | Unit": function numberBigNumberFractionComplexStringUnit(value, unit2) {
      return new Unit2(value, unit2);
    },
    "number | BigNumber | Fraction": function numberBigNumberFraction(value) {
      return new Unit2(value);
    },
    "Array | Matrix": typed2.referToSelf((self2) => (x) => deepMap(x, self2))
  });
});

// node_modules/mathjs/lib/esm/type/matrix/function/sparse.js
var name163 = "sparse";
var dependencies163 = ["typed", "SparseMatrix"];
var createSparse = factory(name163, dependencies163, (_ref) => {
  var {
    typed: typed2,
    SparseMatrix: SparseMatrix2
  } = _ref;
  return typed2(name163, {
    "": function _() {
      return new SparseMatrix2([]);
    },
    string: function string2(datatype) {
      return new SparseMatrix2([], datatype);
    },
    "Array | Matrix": function ArrayMatrix(data) {
      return new SparseMatrix2(data);
    },
    "Array | Matrix, string": function ArrayMatrixString(data, datatype) {
      return new SparseMatrix2(data, datatype);
    }
  });
});

// node_modules/mathjs/lib/esm/type/unit/function/createUnit.js
var name164 = "createUnit";
var dependencies164 = ["typed", "Unit"];
var createCreateUnit = factory(name164, dependencies164, (_ref) => {
  var {
    typed: typed2,
    Unit: Unit2
  } = _ref;
  return typed2(name164, {
    // General function signature. First parameter is an object where each property is the definition of a new unit. The object keys are the unit names and the values are the definitions. The values can be objects, strings, or Units. If a property is an empty object or an empty string, a new base unit is created. The second parameter is the options.
    "Object, Object": function ObjectObject(obj, options) {
      return Unit2.createUnit(obj, options);
    },
    // Same as above but without the options.
    Object: function Object2(obj) {
      return Unit2.createUnit(obj, {});
    },
    // Shortcut method for creating one unit.
    "string, Unit | string | Object, Object": function stringUnitStringObjectObject(name314, def, options) {
      var obj = {};
      obj[name314] = def;
      return Unit2.createUnit(obj, options);
    },
    // Same as above but without the options.
    "string, Unit | string | Object": function stringUnitStringObject(name314, def) {
      var obj = {};
      obj[name314] = def;
      return Unit2.createUnit(obj, {});
    },
    // Without a definition, creates a base unit.
    string: function string2(name314) {
      var obj = {};
      obj[name314] = {};
      return Unit2.createUnit(obj, {});
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/acos.js
var name165 = "acos";
var dependencies165 = ["typed", "config", "Complex"];
var createAcos = factory(name165, dependencies165, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    Complex: Complex3
  } = _ref;
  return typed2(name165, {
    number: function number2(x) {
      if (x >= -1 && x <= 1 || config4.predictable) {
        return Math.acos(x);
      } else {
        return new Complex3(x, 0).acos();
      }
    },
    Complex: function Complex4(x) {
      return x.acos();
    },
    BigNumber: function BigNumber2(x) {
      return x.acos();
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/acosh.js
var name166 = "acosh";
var dependencies166 = ["typed", "config", "Complex"];
var createAcosh = factory(name166, dependencies166, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    Complex: Complex3
  } = _ref;
  return typed2(name166, {
    number: function number2(x) {
      if (x >= 1 || config4.predictable) {
        return acoshNumber(x);
      }
      if (x <= -1) {
        return new Complex3(Math.log(Math.sqrt(x * x - 1) - x), Math.PI);
      }
      return new Complex3(x, 0).acosh();
    },
    Complex: function Complex4(x) {
      return x.acosh();
    },
    BigNumber: function BigNumber2(x) {
      return x.acosh();
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/acot.js
var name167 = "acot";
var dependencies167 = ["typed", "BigNumber"];
var createAcot = factory(name167, dependencies167, (_ref) => {
  var {
    typed: typed2,
    BigNumber: _BigNumber
  } = _ref;
  return typed2(name167, {
    number: acotNumber,
    Complex: function Complex3(x) {
      return x.acot();
    },
    BigNumber: function BigNumber2(x) {
      return new _BigNumber(1).div(x).atan();
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/acoth.js
var name168 = "acoth";
var dependencies168 = ["typed", "config", "Complex", "BigNumber"];
var createAcoth = factory(name168, dependencies168, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    Complex: Complex3,
    BigNumber: _BigNumber
  } = _ref;
  return typed2(name168, {
    number: function number2(x) {
      if (x >= 1 || x <= -1 || config4.predictable) {
        return acothNumber(x);
      }
      return new Complex3(x, 0).acoth();
    },
    Complex: function Complex4(x) {
      return x.acoth();
    },
    BigNumber: function BigNumber2(x) {
      return new _BigNumber(1).div(x).atanh();
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/acsc.js
var name169 = "acsc";
var dependencies169 = ["typed", "config", "Complex", "BigNumber"];
var createAcsc = factory(name169, dependencies169, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    Complex: Complex3,
    BigNumber: _BigNumber
  } = _ref;
  return typed2(name169, {
    number: function number2(x) {
      if (x <= -1 || x >= 1 || config4.predictable) {
        return acscNumber(x);
      }
      return new Complex3(x, 0).acsc();
    },
    Complex: function Complex4(x) {
      return x.acsc();
    },
    BigNumber: function BigNumber2(x) {
      return new _BigNumber(1).div(x).asin();
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/acsch.js
var name170 = "acsch";
var dependencies170 = ["typed", "BigNumber"];
var createAcsch = factory(name170, dependencies170, (_ref) => {
  var {
    typed: typed2,
    BigNumber: _BigNumber
  } = _ref;
  return typed2(name170, {
    number: acschNumber,
    Complex: function Complex3(x) {
      return x.acsch();
    },
    BigNumber: function BigNumber2(x) {
      return new _BigNumber(1).div(x).asinh();
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/asec.js
var name171 = "asec";
var dependencies171 = ["typed", "config", "Complex", "BigNumber"];
var createAsec = factory(name171, dependencies171, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    Complex: Complex3,
    BigNumber: _BigNumber
  } = _ref;
  return typed2(name171, {
    number: function number2(x) {
      if (x <= -1 || x >= 1 || config4.predictable) {
        return asecNumber(x);
      }
      return new Complex3(x, 0).asec();
    },
    Complex: function Complex4(x) {
      return x.asec();
    },
    BigNumber: function BigNumber2(x) {
      return new _BigNumber(1).div(x).acos();
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/asech.js
var name172 = "asech";
var dependencies172 = ["typed", "config", "Complex", "BigNumber"];
var createAsech = factory(name172, dependencies172, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    Complex: Complex3,
    BigNumber: _BigNumber
  } = _ref;
  return typed2(name172, {
    number: function number2(x) {
      if (x <= 1 && x >= -1 || config4.predictable) {
        var xInv = 1 / x;
        if (xInv > 0 || config4.predictable) {
          return asechNumber(x);
        }
        var ret = Math.sqrt(xInv * xInv - 1);
        return new Complex3(Math.log(ret - xInv), Math.PI);
      }
      return new Complex3(x, 0).asech();
    },
    Complex: function Complex4(x) {
      return x.asech();
    },
    BigNumber: function BigNumber2(x) {
      return new _BigNumber(1).div(x).acosh();
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/asin.js
var name173 = "asin";
var dependencies173 = ["typed", "config", "Complex"];
var createAsin = factory(name173, dependencies173, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    Complex: Complex3
  } = _ref;
  return typed2(name173, {
    number: function number2(x) {
      if (x >= -1 && x <= 1 || config4.predictable) {
        return Math.asin(x);
      } else {
        return new Complex3(x, 0).asin();
      }
    },
    Complex: function Complex4(x) {
      return x.asin();
    },
    BigNumber: function BigNumber2(x) {
      return x.asin();
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/asinh.js
var name174 = "asinh";
var dependencies174 = ["typed"];
var createAsinh = factory(name174, dependencies174, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2("asinh", {
    number: asinhNumber,
    Complex: function Complex3(x) {
      return x.asinh();
    },
    BigNumber: function BigNumber2(x) {
      return x.asinh();
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/atan.js
var name175 = "atan";
var dependencies175 = ["typed"];
var createAtan = factory(name175, dependencies175, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2("atan", {
    number: function number2(x) {
      return Math.atan(x);
    },
    Complex: function Complex3(x) {
      return x.atan();
    },
    BigNumber: function BigNumber2(x) {
      return x.atan();
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/atan2.js
var name176 = "atan2";
var dependencies176 = ["typed", "matrix", "equalScalar", "BigNumber", "DenseMatrix", "concat"];
var createAtan2 = factory(name176, dependencies176, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    BigNumber: BigNumber2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo02xDS0 = createMatAlgo02xDS0({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo03xDSf = createMatAlgo03xDSf({
    typed: typed2
  });
  var matAlgo09xS0Sf = createMatAlgo09xS0Sf({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo12xSfs = createMatAlgo12xSfs({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name176, {
    "number, number": Math.atan2,
    // Complex numbers doesn't seem to have a reasonable implementation of
    // atan2(). Even Matlab removed the support, after they only calculated
    // the atan only on base of the real part of the numbers and ignored
    // the imaginary.
    "BigNumber, BigNumber": (y, x) => BigNumber2.atan2(y, x)
  }, matrixAlgorithmSuite({
    scalar: "number | BigNumber",
    SS: matAlgo09xS0Sf,
    DS: matAlgo03xDSf,
    SD: matAlgo02xDS0,
    Ss: matAlgo11xS0s,
    sS: matAlgo12xSfs
  }));
});

// node_modules/mathjs/lib/esm/function/trigonometry/atanh.js
var name177 = "atanh";
var dependencies177 = ["typed", "config", "Complex"];
var createAtanh = factory(name177, dependencies177, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    Complex: Complex3
  } = _ref;
  return typed2(name177, {
    number: function number2(x) {
      if (x <= 1 && x >= -1 || config4.predictable) {
        return atanhNumber(x);
      }
      return new Complex3(x, 0).atanh();
    },
    Complex: function Complex4(x) {
      return x.atanh();
    },
    BigNumber: function BigNumber2(x) {
      return x.atanh();
    }
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/trigUnit.js
var createTrigUnit = factory("trigUnit", ["typed"], (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return {
    Unit: typed2.referToSelf((self2) => (x) => {
      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {
        throw new TypeError("Unit in function cot is no angle");
      }
      return typed2.find(self2, x.valueType())(x.value);
    })
  };
});

// node_modules/mathjs/lib/esm/function/trigonometry/cos.js
var name178 = "cos";
var dependencies178 = ["typed"];
var createCos = factory(name178, dependencies178, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  var trigUnit = createTrigUnit({
    typed: typed2
  });
  return typed2(name178, {
    number: Math.cos,
    "Complex | BigNumber": (x) => x.cos()
  }, trigUnit);
});

// node_modules/mathjs/lib/esm/function/trigonometry/cosh.js
var name179 = "cosh";
var dependencies179 = ["typed"];
var createCosh = factory(name179, dependencies179, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name179, {
    number: cosh,
    "Complex | BigNumber": (x) => x.cosh()
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/cot.js
var name180 = "cot";
var dependencies180 = ["typed", "BigNumber"];
var createCot = factory(name180, dependencies180, (_ref) => {
  var {
    typed: typed2,
    BigNumber: _BigNumber
  } = _ref;
  var trigUnit = createTrigUnit({
    typed: typed2
  });
  return typed2(name180, {
    number: cotNumber,
    Complex: (x) => x.cot(),
    BigNumber: (x) => new _BigNumber(1).div(x.tan())
  }, trigUnit);
});

// node_modules/mathjs/lib/esm/function/trigonometry/coth.js
var name181 = "coth";
var dependencies181 = ["typed", "BigNumber"];
var createCoth = factory(name181, dependencies181, (_ref) => {
  var {
    typed: typed2,
    BigNumber: _BigNumber
  } = _ref;
  return typed2(name181, {
    number: cothNumber,
    Complex: (x) => x.coth(),
    BigNumber: (x) => new _BigNumber(1).div(x.tanh())
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/csc.js
var name182 = "csc";
var dependencies182 = ["typed", "BigNumber"];
var createCsc = factory(name182, dependencies182, (_ref) => {
  var {
    typed: typed2,
    BigNumber: _BigNumber
  } = _ref;
  var trigUnit = createTrigUnit({
    typed: typed2
  });
  return typed2(name182, {
    number: cscNumber,
    Complex: (x) => x.csc(),
    BigNumber: (x) => new _BigNumber(1).div(x.sin())
  }, trigUnit);
});

// node_modules/mathjs/lib/esm/function/trigonometry/csch.js
var name183 = "csch";
var dependencies183 = ["typed", "BigNumber"];
var createCsch = factory(name183, dependencies183, (_ref) => {
  var {
    typed: typed2,
    BigNumber: _BigNumber
  } = _ref;
  return typed2(name183, {
    number: cschNumber,
    Complex: (x) => x.csch(),
    BigNumber: (x) => new _BigNumber(1).div(x.sinh())
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/sec.js
var name184 = "sec";
var dependencies184 = ["typed", "BigNumber"];
var createSec = factory(name184, dependencies184, (_ref) => {
  var {
    typed: typed2,
    BigNumber: _BigNumber
  } = _ref;
  var trigUnit = createTrigUnit({
    typed: typed2
  });
  return typed2(name184, {
    number: secNumber,
    Complex: (x) => x.sec(),
    BigNumber: (x) => new _BigNumber(1).div(x.cos())
  }, trigUnit);
});

// node_modules/mathjs/lib/esm/function/trigonometry/sech.js
var name185 = "sech";
var dependencies185 = ["typed", "BigNumber"];
var createSech = factory(name185, dependencies185, (_ref) => {
  var {
    typed: typed2,
    BigNumber: _BigNumber
  } = _ref;
  return typed2(name185, {
    number: sechNumber,
    Complex: (x) => x.sech(),
    BigNumber: (x) => new _BigNumber(1).div(x.cosh())
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/sin.js
var name186 = "sin";
var dependencies186 = ["typed"];
var createSin = factory(name186, dependencies186, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  var trigUnit = createTrigUnit({
    typed: typed2
  });
  return typed2(name186, {
    number: Math.sin,
    "Complex | BigNumber": (x) => x.sin()
  }, trigUnit);
});

// node_modules/mathjs/lib/esm/function/trigonometry/sinh.js
var name187 = "sinh";
var dependencies187 = ["typed"];
var createSinh = factory(name187, dependencies187, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name187, {
    number: sinhNumber,
    "Complex | BigNumber": (x) => x.sinh()
  });
});

// node_modules/mathjs/lib/esm/function/trigonometry/tan.js
var name188 = "tan";
var dependencies188 = ["typed"];
var createTan = factory(name188, dependencies188, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  var trigUnit = createTrigUnit({
    typed: typed2
  });
  return typed2(name188, {
    number: Math.tan,
    "Complex | BigNumber": (x) => x.tan()
  }, trigUnit);
});

// node_modules/mathjs/lib/esm/function/trigonometry/tanh.js
var name189 = "tanh";
var dependencies189 = ["typed"];
var createTanh = factory(name189, dependencies189, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2("tanh", {
    number: tanh,
    "Complex | BigNumber": (x) => x.tanh()
  });
});

// node_modules/mathjs/lib/esm/function/set/setCartesian.js
var name190 = "setCartesian";
var dependencies190 = ["typed", "size", "subset", "compareNatural", "Index", "DenseMatrix"];
var createSetCartesian = factory(name190, dependencies190, (_ref) => {
  var {
    typed: typed2,
    size: size2,
    subset: subset2,
    compareNatural: compareNatural2,
    Index: Index2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  return typed2(name190, {
    "Array | Matrix, Array | Matrix": function ArrayMatrixArrayMatrix(a1, a2) {
      var result = [];
      if (subset2(size2(a1), new Index2(0)) !== 0 && subset2(size2(a2), new Index2(0)) !== 0) {
        var b1 = flatten(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural2);
        var b2 = flatten(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural2);
        result = [];
        for (var i2 = 0; i2 < b1.length; i2++) {
          for (var j = 0; j < b2.length; j++) {
            result.push([b1[i2], b2[j]]);
          }
        }
      }
      if (Array.isArray(a1) && Array.isArray(a2)) {
        return result;
      }
      return new DenseMatrix2(result);
    }
  });
});

// node_modules/mathjs/lib/esm/function/set/setDifference.js
var name191 = "setDifference";
var dependencies191 = ["typed", "size", "subset", "compareNatural", "Index", "DenseMatrix"];
var createSetDifference = factory(name191, dependencies191, (_ref) => {
  var {
    typed: typed2,
    size: size2,
    subset: subset2,
    compareNatural: compareNatural2,
    Index: Index2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  return typed2(name191, {
    "Array | Matrix, Array | Matrix": function ArrayMatrixArrayMatrix(a1, a2) {
      var result;
      if (subset2(size2(a1), new Index2(0)) === 0) {
        result = [];
      } else if (subset2(size2(a2), new Index2(0)) === 0) {
        return flatten(a1.toArray());
      } else {
        var b1 = identify(flatten(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural2));
        var b2 = identify(flatten(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural2));
        result = [];
        var inb2;
        for (var i2 = 0; i2 < b1.length; i2++) {
          inb2 = false;
          for (var j = 0; j < b2.length; j++) {
            if (compareNatural2(b1[i2].value, b2[j].value) === 0 && b1[i2].identifier === b2[j].identifier) {
              inb2 = true;
              break;
            }
          }
          if (!inb2) {
            result.push(b1[i2]);
          }
        }
      }
      if (Array.isArray(a1) && Array.isArray(a2)) {
        return generalize(result);
      }
      return new DenseMatrix2(generalize(result));
    }
  });
});

// node_modules/mathjs/lib/esm/function/set/setDistinct.js
var name192 = "setDistinct";
var dependencies192 = ["typed", "size", "subset", "compareNatural", "Index", "DenseMatrix"];
var createSetDistinct = factory(name192, dependencies192, (_ref) => {
  var {
    typed: typed2,
    size: size2,
    subset: subset2,
    compareNatural: compareNatural2,
    Index: Index2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  return typed2(name192, {
    "Array | Matrix": function ArrayMatrix(a) {
      var result;
      if (subset2(size2(a), new Index2(0)) === 0) {
        result = [];
      } else {
        var b2 = flatten(Array.isArray(a) ? a : a.toArray()).sort(compareNatural2);
        result = [];
        result.push(b2[0]);
        for (var i2 = 1; i2 < b2.length; i2++) {
          if (compareNatural2(b2[i2], b2[i2 - 1]) !== 0) {
            result.push(b2[i2]);
          }
        }
      }
      if (Array.isArray(a)) {
        return result;
      }
      return new DenseMatrix2(result);
    }
  });
});

// node_modules/mathjs/lib/esm/function/set/setIntersect.js
var name193 = "setIntersect";
var dependencies193 = ["typed", "size", "subset", "compareNatural", "Index", "DenseMatrix"];
var createSetIntersect = factory(name193, dependencies193, (_ref) => {
  var {
    typed: typed2,
    size: size2,
    subset: subset2,
    compareNatural: compareNatural2,
    Index: Index2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  return typed2(name193, {
    "Array | Matrix, Array | Matrix": function ArrayMatrixArrayMatrix(a1, a2) {
      var result;
      if (subset2(size2(a1), new Index2(0)) === 0 || subset2(size2(a2), new Index2(0)) === 0) {
        result = [];
      } else {
        var b1 = identify(flatten(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural2));
        var b2 = identify(flatten(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural2));
        result = [];
        for (var i2 = 0; i2 < b1.length; i2++) {
          for (var j = 0; j < b2.length; j++) {
            if (compareNatural2(b1[i2].value, b2[j].value) === 0 && b1[i2].identifier === b2[j].identifier) {
              result.push(b1[i2]);
              break;
            }
          }
        }
      }
      if (Array.isArray(a1) && Array.isArray(a2)) {
        return generalize(result);
      }
      return new DenseMatrix2(generalize(result));
    }
  });
});

// node_modules/mathjs/lib/esm/function/set/setIsSubset.js
var name194 = "setIsSubset";
var dependencies194 = ["typed", "size", "subset", "compareNatural", "Index"];
var createSetIsSubset = factory(name194, dependencies194, (_ref) => {
  var {
    typed: typed2,
    size: size2,
    subset: subset2,
    compareNatural: compareNatural2,
    Index: Index2
  } = _ref;
  return typed2(name194, {
    "Array | Matrix, Array | Matrix": function ArrayMatrixArrayMatrix(a1, a2) {
      if (subset2(size2(a1), new Index2(0)) === 0) {
        return true;
      } else if (subset2(size2(a2), new Index2(0)) === 0) {
        return false;
      }
      var b1 = identify(flatten(Array.isArray(a1) ? a1 : a1.toArray()).sort(compareNatural2));
      var b2 = identify(flatten(Array.isArray(a2) ? a2 : a2.toArray()).sort(compareNatural2));
      var inb2;
      for (var i2 = 0; i2 < b1.length; i2++) {
        inb2 = false;
        for (var j = 0; j < b2.length; j++) {
          if (compareNatural2(b1[i2].value, b2[j].value) === 0 && b1[i2].identifier === b2[j].identifier) {
            inb2 = true;
            break;
          }
        }
        if (inb2 === false) {
          return false;
        }
      }
      return true;
    }
  });
});

// node_modules/mathjs/lib/esm/function/set/setMultiplicity.js
var name195 = "setMultiplicity";
var dependencies195 = ["typed", "size", "subset", "compareNatural", "Index"];
var createSetMultiplicity = factory(name195, dependencies195, (_ref) => {
  var {
    typed: typed2,
    size: size2,
    subset: subset2,
    compareNatural: compareNatural2,
    Index: Index2
  } = _ref;
  return typed2(name195, {
    "number | BigNumber | Fraction | Complex, Array | Matrix": function numberBigNumberFractionComplexArrayMatrix(e3, a) {
      if (subset2(size2(a), new Index2(0)) === 0) {
        return 0;
      }
      var b2 = flatten(Array.isArray(a) ? a : a.toArray());
      var count2 = 0;
      for (var i2 = 0; i2 < b2.length; i2++) {
        if (compareNatural2(b2[i2], e3) === 0) {
          count2++;
        }
      }
      return count2;
    }
  });
});

// node_modules/mathjs/lib/esm/function/set/setPowerset.js
var name196 = "setPowerset";
var dependencies196 = ["typed", "size", "subset", "compareNatural", "Index"];
var createSetPowerset = factory(name196, dependencies196, (_ref) => {
  var {
    typed: typed2,
    size: size2,
    subset: subset2,
    compareNatural: compareNatural2,
    Index: Index2
  } = _ref;
  return typed2(name196, {
    "Array | Matrix": function ArrayMatrix(a) {
      if (subset2(size2(a), new Index2(0)) === 0) {
        return [];
      }
      var b2 = flatten(Array.isArray(a) ? a : a.toArray()).sort(compareNatural2);
      var result = [];
      var number2 = 0;
      while (number2.toString(2).length <= b2.length) {
        result.push(_subset(b2, number2.toString(2).split("").reverse()));
        number2++;
      }
      return _sort(result);
    }
  });
  function _subset(array, bitarray) {
    var result = [];
    for (var i2 = 0; i2 < bitarray.length; i2++) {
      if (bitarray[i2] === "1") {
        result.push(array[i2]);
      }
    }
    return result;
  }
  function _sort(array) {
    var temp = [];
    for (var i2 = array.length - 1; i2 > 0; i2--) {
      for (var j = 0; j < i2; j++) {
        if (array[j].length > array[j + 1].length) {
          temp = array[j];
          array[j] = array[j + 1];
          array[j + 1] = temp;
        }
      }
    }
    return array;
  }
});

// node_modules/mathjs/lib/esm/function/set/setSize.js
var name197 = "setSize";
var dependencies197 = ["typed", "compareNatural"];
var createSetSize = factory(name197, dependencies197, (_ref) => {
  var {
    typed: typed2,
    compareNatural: compareNatural2
  } = _ref;
  return typed2(name197, {
    "Array | Matrix": function ArrayMatrix(a) {
      return Array.isArray(a) ? flatten(a).length : flatten(a.toArray()).length;
    },
    "Array | Matrix, boolean": function ArrayMatrixBoolean(a, unique) {
      if (unique === false || a.length === 0) {
        return Array.isArray(a) ? flatten(a).length : flatten(a.toArray()).length;
      } else {
        var b2 = flatten(Array.isArray(a) ? a : a.toArray()).sort(compareNatural2);
        var count2 = 1;
        for (var i2 = 1; i2 < b2.length; i2++) {
          if (compareNatural2(b2[i2], b2[i2 - 1]) !== 0) {
            count2++;
          }
        }
        return count2;
      }
    }
  });
});

// node_modules/mathjs/lib/esm/function/set/setSymDifference.js
var name198 = "setSymDifference";
var dependencies198 = ["typed", "size", "concat", "subset", "setDifference", "Index"];
var createSetSymDifference = factory(name198, dependencies198, (_ref) => {
  var {
    typed: typed2,
    size: size2,
    concat: concat4,
    subset: subset2,
    setDifference: setDifference2,
    Index: Index2
  } = _ref;
  return typed2(name198, {
    "Array | Matrix, Array | Matrix": function ArrayMatrixArrayMatrix(a1, a2) {
      if (subset2(size2(a1), new Index2(0)) === 0) {
        return flatten(a2);
      } else if (subset2(size2(a2), new Index2(0)) === 0) {
        return flatten(a1);
      }
      var b1 = flatten(a1);
      var b2 = flatten(a2);
      return concat4(setDifference2(b1, b2), setDifference2(b2, b1));
    }
  });
});

// node_modules/mathjs/lib/esm/function/set/setUnion.js
var name199 = "setUnion";
var dependencies199 = ["typed", "size", "concat", "subset", "setIntersect", "setSymDifference", "Index"];
var createSetUnion = factory(name199, dependencies199, (_ref) => {
  var {
    typed: typed2,
    size: size2,
    concat: concat4,
    subset: subset2,
    setIntersect: setIntersect2,
    setSymDifference: setSymDifference2,
    Index: Index2
  } = _ref;
  return typed2(name199, {
    "Array | Matrix, Array | Matrix": function ArrayMatrixArrayMatrix(a1, a2) {
      if (subset2(size2(a1), new Index2(0)) === 0) {
        return flatten(a2);
      } else if (subset2(size2(a2), new Index2(0)) === 0) {
        return flatten(a1);
      }
      var b1 = flatten(a1);
      var b2 = flatten(a2);
      return concat4(setSymDifference2(b1, b2), setIntersect2(b1, b2));
    }
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/add.js
var name200 = "add";
var dependencies200 = ["typed", "matrix", "addScalar", "equalScalar", "DenseMatrix", "SparseMatrix", "concat"];
var createAdd = factory(name200, dependencies200, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    addScalar: addScalar2,
    equalScalar: equalScalar2,
    DenseMatrix: DenseMatrix2,
    SparseMatrix: SparseMatrix2,
    concat: concat4
  } = _ref;
  var matAlgo01xDSid = createMatAlgo01xDSid({
    typed: typed2
  });
  var matAlgo04xSidSid = createMatAlgo04xSidSid({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo10xSids = createMatAlgo10xSids({
    typed: typed2,
    DenseMatrix: DenseMatrix2
  });
  var matrixAlgorithmSuite = createMatrixAlgorithmSuite({
    typed: typed2,
    matrix: matrix2,
    concat: concat4
  });
  return typed2(name200, {
    "any, any": addScalar2,
    "any, any, ...any": typed2.referToSelf((self2) => (x, y, rest) => {
      var result = self2(x, y);
      for (var i2 = 0; i2 < rest.length; i2++) {
        result = self2(result, rest[i2]);
      }
      return result;
    })
  }, matrixAlgorithmSuite({
    elop: addScalar2,
    DS: matAlgo01xDSid,
    SS: matAlgo04xSidSid,
    Ss: matAlgo10xSids
  }));
});

// node_modules/mathjs/lib/esm/function/arithmetic/hypot.js
var name201 = "hypot";
var dependencies201 = ["typed", "abs", "addScalar", "divideScalar", "multiplyScalar", "sqrt", "smaller", "isPositive"];
var createHypot = factory(name201, dependencies201, (_ref) => {
  var {
    typed: typed2,
    abs: abs3,
    addScalar: addScalar2,
    divideScalar: divideScalar2,
    multiplyScalar: multiplyScalar2,
    sqrt: sqrt3,
    smaller: smaller2,
    isPositive: isPositive2
  } = _ref;
  return typed2(name201, {
    "... number | BigNumber": _hypot,
    Array: _hypot,
    Matrix: (M) => _hypot(flatten(M.toArray()))
  });
  function _hypot(args) {
    var result = 0;
    var largest = 0;
    for (var i2 = 0; i2 < args.length; i2++) {
      if (isComplex(args[i2])) {
        throw new TypeError("Unexpected type of argument to hypot");
      }
      var value = abs3(args[i2]);
      if (smaller2(largest, value)) {
        result = multiplyScalar2(result, multiplyScalar2(divideScalar2(largest, value), divideScalar2(largest, value)));
        result = addScalar2(result, 1);
        largest = value;
      } else {
        result = addScalar2(result, isPositive2(value) ? multiplyScalar2(divideScalar2(value, largest), divideScalar2(value, largest)) : value);
      }
    }
    return multiplyScalar2(largest, sqrt3(result));
  }
});

// node_modules/mathjs/lib/esm/function/arithmetic/norm.js
var name202 = "norm";
var dependencies202 = ["typed", "abs", "add", "pow", "conj", "sqrt", "multiply", "equalScalar", "larger", "smaller", "matrix", "ctranspose", "eigs"];
var createNorm = factory(name202, dependencies202, (_ref) => {
  var {
    typed: typed2,
    abs: abs3,
    add: add4,
    pow: pow3,
    conj: conj2,
    sqrt: sqrt3,
    multiply: multiply2,
    equalScalar: equalScalar2,
    larger: larger2,
    smaller: smaller2,
    matrix: matrix2,
    ctranspose: ctranspose2,
    eigs: eigs2
  } = _ref;
  return typed2(name202, {
    number: Math.abs,
    Complex: function Complex3(x) {
      return x.abs();
    },
    BigNumber: function BigNumber2(x) {
      return x.abs();
    },
    boolean: function boolean2(x) {
      return Math.abs(x);
    },
    Array: function Array2(x) {
      return _norm(matrix2(x), 2);
    },
    Matrix: function Matrix2(x) {
      return _norm(x, 2);
    },
    "Array, number | BigNumber | string": function ArrayNumberBigNumberString(x, p) {
      return _norm(matrix2(x), p);
    },
    "Matrix, number | BigNumber | string": function MatrixNumberBigNumberString(x, p) {
      return _norm(x, p);
    }
  });
  function _vectorNormPlusInfinity(x) {
    var pinf = 0;
    x.forEach(function(value) {
      var v = abs3(value);
      if (larger2(v, pinf)) {
        pinf = v;
      }
    }, true);
    return pinf;
  }
  function _vectorNormMinusInfinity(x) {
    var ninf;
    x.forEach(function(value) {
      var v = abs3(value);
      if (!ninf || smaller2(v, ninf)) {
        ninf = v;
      }
    }, true);
    return ninf || 0;
  }
  function _vectorNorm(x, p) {
    if (p === Number.POSITIVE_INFINITY || p === "inf") {
      return _vectorNormPlusInfinity(x);
    }
    if (p === Number.NEGATIVE_INFINITY || p === "-inf") {
      return _vectorNormMinusInfinity(x);
    }
    if (p === "fro") {
      return _norm(x, 2);
    }
    if (typeof p === "number" && !isNaN(p)) {
      if (!equalScalar2(p, 0)) {
        var n = 0;
        x.forEach(function(value) {
          n = add4(pow3(abs3(value), p), n);
        }, true);
        return pow3(n, 1 / p);
      }
      return Number.POSITIVE_INFINITY;
    }
    throw new Error("Unsupported parameter value");
  }
  function _matrixNormFrobenius(x) {
    var fro = 0;
    x.forEach(function(value, index2) {
      fro = add4(fro, multiply2(value, conj2(value)));
    });
    return abs3(sqrt3(fro));
  }
  function _matrixNormOne(x) {
    var c = [];
    var maxc = 0;
    x.forEach(function(value, index2) {
      var j = index2[1];
      var cj = add4(c[j] || 0, abs3(value));
      if (larger2(cj, maxc)) {
        maxc = cj;
      }
      c[j] = cj;
    }, true);
    return maxc;
  }
  function _matrixNormTwo(x) {
    var sizeX = x.size();
    if (sizeX[0] !== sizeX[1]) {
      throw new RangeError("Invalid matrix dimensions");
    }
    var tx = ctranspose2(x);
    var squaredX = multiply2(tx, x);
    var eigenVals = eigs2(squaredX).values.toArray();
    var rho = eigenVals[eigenVals.length - 1];
    return abs3(sqrt3(rho));
  }
  function _matrixNormInfinity(x) {
    var r = [];
    var maxr = 0;
    x.forEach(function(value, index2) {
      var i2 = index2[0];
      var ri = add4(r[i2] || 0, abs3(value));
      if (larger2(ri, maxr)) {
        maxr = ri;
      }
      r[i2] = ri;
    }, true);
    return maxr;
  }
  function _matrixNorm(x, p) {
    if (p === 1) {
      return _matrixNormOne(x);
    }
    if (p === Number.POSITIVE_INFINITY || p === "inf") {
      return _matrixNormInfinity(x);
    }
    if (p === "fro") {
      return _matrixNormFrobenius(x);
    }
    if (p === 2) {
      return _matrixNormTwo(x);
    }
    throw new Error("Unsupported parameter value " + p);
  }
  function _norm(x, p) {
    var sizeX = x.size();
    if (sizeX.length === 1) {
      return _vectorNorm(x, p);
    }
    if (sizeX.length === 2) {
      if (sizeX[0] && sizeX[1]) {
        return _matrixNorm(x, p);
      } else {
        throw new RangeError("Invalid matrix dimensions");
      }
    }
  }
});

// node_modules/mathjs/lib/esm/function/matrix/dot.js
var name203 = "dot";
var dependencies203 = ["typed", "addScalar", "multiplyScalar", "conj", "size"];
var createDot = factory(name203, dependencies203, (_ref) => {
  var {
    typed: typed2,
    addScalar: addScalar2,
    multiplyScalar: multiplyScalar2,
    conj: conj2,
    size: size2
  } = _ref;
  return typed2(name203, {
    "Array | DenseMatrix, Array | DenseMatrix": _denseDot,
    "SparseMatrix, SparseMatrix": _sparseDot
  });
  function _validateDim(x, y) {
    var xSize = _size(x);
    var ySize = _size(y);
    var xLen, yLen;
    if (xSize.length === 1) {
      xLen = xSize[0];
    } else if (xSize.length === 2 && xSize[1] === 1) {
      xLen = xSize[0];
    } else {
      throw new RangeError("Expected a column vector, instead got a matrix of size (" + xSize.join(", ") + ")");
    }
    if (ySize.length === 1) {
      yLen = ySize[0];
    } else if (ySize.length === 2 && ySize[1] === 1) {
      yLen = ySize[0];
    } else {
      throw new RangeError("Expected a column vector, instead got a matrix of size (" + ySize.join(", ") + ")");
    }
    if (xLen !== yLen) throw new RangeError("Vectors must have equal length (" + xLen + " != " + yLen + ")");
    if (xLen === 0) throw new RangeError("Cannot calculate the dot product of empty vectors");
    return xLen;
  }
  function _denseDot(a, b2) {
    var N = _validateDim(a, b2);
    var adata = isMatrix(a) ? a._data : a;
    var adt = isMatrix(a) ? a._datatype || a.getDataType() : void 0;
    var bdata = isMatrix(b2) ? b2._data : b2;
    var bdt = isMatrix(b2) ? b2._datatype || b2.getDataType() : void 0;
    var aIsColumn = _size(a).length === 2;
    var bIsColumn = _size(b2).length === 2;
    var add4 = addScalar2;
    var mul2 = multiplyScalar2;
    if (adt && bdt && adt === bdt && typeof adt === "string" && adt !== "mixed") {
      var dt = adt;
      add4 = typed2.find(addScalar2, [dt, dt]);
      mul2 = typed2.find(multiplyScalar2, [dt, dt]);
    }
    if (!aIsColumn && !bIsColumn) {
      var c = mul2(conj2(adata[0]), bdata[0]);
      for (var i2 = 1; i2 < N; i2++) {
        c = add4(c, mul2(conj2(adata[i2]), bdata[i2]));
      }
      return c;
    }
    if (!aIsColumn && bIsColumn) {
      var _c = mul2(conj2(adata[0]), bdata[0][0]);
      for (var _i = 1; _i < N; _i++) {
        _c = add4(_c, mul2(conj2(adata[_i]), bdata[_i][0]));
      }
      return _c;
    }
    if (aIsColumn && !bIsColumn) {
      var _c2 = mul2(conj2(adata[0][0]), bdata[0]);
      for (var _i2 = 1; _i2 < N; _i2++) {
        _c2 = add4(_c2, mul2(conj2(adata[_i2][0]), bdata[_i2]));
      }
      return _c2;
    }
    if (aIsColumn && bIsColumn) {
      var _c3 = mul2(conj2(adata[0][0]), bdata[0][0]);
      for (var _i3 = 1; _i3 < N; _i3++) {
        _c3 = add4(_c3, mul2(conj2(adata[_i3][0]), bdata[_i3][0]));
      }
      return _c3;
    }
  }
  function _sparseDot(x, y) {
    _validateDim(x, y);
    var xindex = x._index;
    var xvalues = x._values;
    var yindex = y._index;
    var yvalues = y._values;
    var c = 0;
    var add4 = addScalar2;
    var mul2 = multiplyScalar2;
    var i2 = 0;
    var j = 0;
    while (i2 < xindex.length && j < yindex.length) {
      var I = xindex[i2];
      var J = yindex[j];
      if (I < J) {
        i2++;
        continue;
      }
      if (I > J) {
        j++;
        continue;
      }
      if (I === J) {
        c = add4(c, mul2(xvalues[i2], yvalues[j]));
        i2++;
        j++;
      }
    }
    return c;
  }
  function _size(x) {
    return isMatrix(x) ? x.size() : size2(x);
  }
});

// node_modules/mathjs/lib/esm/function/matrix/trace.js
var name204 = "trace";
var dependencies204 = ["typed", "matrix", "add"];
var createTrace = factory(name204, dependencies204, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    add: add4
  } = _ref;
  return typed2("trace", {
    Array: function _arrayTrace(x) {
      return _denseTrace(matrix2(x));
    },
    SparseMatrix: _sparseTrace,
    DenseMatrix: _denseTrace,
    any: clone
  });
  function _denseTrace(m) {
    var size2 = m._size;
    var data = m._data;
    switch (size2.length) {
      case 1:
        if (size2[0] === 1) {
          return clone(data[0]);
        }
        throw new RangeError("Matrix must be square (size: " + format3(size2) + ")");
      case 2: {
        var rows = size2[0];
        var cols = size2[1];
        if (rows === cols) {
          var sum3 = 0;
          for (var i2 = 0; i2 < rows; i2++) {
            sum3 = add4(sum3, data[i2][i2]);
          }
          return sum3;
        } else {
          throw new RangeError("Matrix must be square (size: " + format3(size2) + ")");
        }
      }
      default:
        throw new RangeError("Matrix must be two dimensional (size: " + format3(size2) + ")");
    }
  }
  function _sparseTrace(m) {
    var values = m._values;
    var index2 = m._index;
    var ptr = m._ptr;
    var size2 = m._size;
    var rows = size2[0];
    var columns = size2[1];
    if (rows === columns) {
      var sum3 = 0;
      if (values.length > 0) {
        for (var j = 0; j < columns; j++) {
          var k0 = ptr[j];
          var k1 = ptr[j + 1];
          for (var k = k0; k < k1; k++) {
            var i2 = index2[k];
            if (i2 === j) {
              sum3 = add4(sum3, values[k]);
              break;
            }
            if (i2 > j) {
              break;
            }
          }
        }
      }
      return sum3;
    }
    throw new RangeError("Matrix must be square (size: " + format3(size2) + ")");
  }
});

// node_modules/mathjs/lib/esm/type/matrix/function/index.js
var name205 = "index";
var dependencies205 = ["typed", "Index"];
var createIndex = factory(name205, dependencies205, (_ref) => {
  var {
    typed: typed2,
    Index: Index2
  } = _ref;
  return typed2(name205, {
    "...number | string | BigNumber | Range | Array | Matrix": function numberStringBigNumberRangeArrayMatrix(args) {
      var ranges = args.map(function(arg2) {
        if (isBigNumber(arg2)) {
          return arg2.toNumber();
        } else if (isArray(arg2) || isMatrix(arg2)) {
          return arg2.map(function(elem) {
            return isBigNumber(elem) ? elem.toNumber() : elem;
          });
        } else {
          return arg2;
        }
      });
      var res = new Index2();
      Index2.apply(res, ranges);
      return res;
    }
  });
});

// node_modules/mathjs/lib/esm/expression/keywords.js
var keywords = /* @__PURE__ */ new Set(["end"]);

// node_modules/mathjs/lib/esm/expression/node/Node.js
var name206 = "Node";
var dependencies206 = ["mathWithTransform"];
var createNode = factory(name206, dependencies206, (_ref) => {
  var {
    mathWithTransform: mathWithTransform2
  } = _ref;
  function _validateScope(scope) {
    for (var symbol of [...keywords]) {
      if (scope.has(symbol)) {
        throw new Error('Scope contains an illegal symbol, "' + symbol + '" is a reserved keyword');
      }
    }
  }
  class Node2 {
    get type() {
      return "Node";
    }
    get isNode() {
      return true;
    }
    /**
     * Evaluate the node
     * @param {Object} [scope]  Scope to read/write variables
     * @return {*}              Returns the result
     */
    evaluate(scope) {
      return this.compile().evaluate(scope);
    }
    /**
     * Compile the node into an optimized, evauatable JavaScript function
     * @return {{evaluate: function([Object])}} object
     *                Returns an object with a function 'evaluate',
     *                which can be invoked as expr.evaluate([scope: Object]),
     *                where scope is an optional object with
     *                variables.
     */
    compile() {
      var expr = this._compile(mathWithTransform2, {});
      var args = {};
      var context = null;
      function evaluate2(scope) {
        var s = createMap(scope);
        _validateScope(s);
        return expr(s, args, context);
      }
      return {
        evaluate: evaluate2
      };
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      throw new Error("Method _compile must be implemented by type " + this.type);
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      throw new Error("Cannot run forEach on a Node interface");
    }
    /**
     * Create a new Node whose children are the results of calling the
     * provided callback function for each child of the original node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {OperatorNode} Returns a transformed copy of the node
     */
    map(callback) {
      throw new Error("Cannot run map on a Node interface");
    }
    /**
     * Validate whether an object is a Node, for use with map
     * @param {Node} node
     * @returns {Node} Returns the input if it's a node, else throws an Error
     * @protected
     */
    _ifNode(node) {
      if (!isNode(node)) {
        throw new TypeError("Callback function must return a Node");
      }
      return node;
    }
    /**
     * Recursively traverse all nodes in a node tree. Executes given callback for
     * this node and each of its child nodes.
     * @param {function(node: Node, path: string, parent: Node)} callback
     *          A callback called for every node in the node tree.
     */
    traverse(callback) {
      callback(this, null, null);
      function _traverse(node, callback2) {
        node.forEach(function(child, path, parent) {
          callback2(child, path, parent);
          _traverse(child, callback2);
        });
      }
      _traverse(this, callback);
    }
    /**
     * Recursively transform a node tree via a transform function.
     *
     * For example, to replace all nodes of type SymbolNode having name 'x' with
     * a ConstantNode with value 2:
     *
     *     const res = Node.transform(function (node, path, parent) {
     *       if (node && node.isSymbolNode) && (node.name === 'x')) {
     *         return new ConstantNode(2)
     *       }
     *       else {
     *         return node
     *       }
     *     })
     *
     * @param {function(node: Node, path: string, parent: Node) : Node} callback
     *          A mapping function accepting a node, and returning
     *          a replacement for the node or the original node. The "signature"
     *          of the callback must be:
     *          callback(node: Node, index: string, parent: Node) : Node
     * @return {Node} Returns the original node or its replacement
     */
    transform(callback) {
      function _transform(child, path, parent) {
        var replacement = callback(child, path, parent);
        if (replacement !== child) {
          return replacement;
        }
        return child.map(_transform);
      }
      return _transform(this, null, null);
    }
    /**
     * Find any node in the node tree matching given filter function. For
     * example, to find all nodes of type SymbolNode having name 'x':
     *
     *     const results = Node.filter(function (node) {
     *       return (node && node.isSymbolNode) && (node.name === 'x')
     *     })
     *
     * @param {function(node: Node, path: string, parent: Node) : Node} callback
     *            A test function returning true when a node matches, and false
     *            otherwise. Function signature:
     *            callback(node: Node, index: string, parent: Node) : boolean
     * @return {Node[]} nodes
     *            An array with nodes matching given filter criteria
     */
    filter(callback) {
      var nodes = [];
      this.traverse(function(node, path, parent) {
        if (callback(node, path, parent)) {
          nodes.push(node);
        }
      });
      return nodes;
    }
    /**
     * Create a shallow clone of this node
     * @return {Node}
     */
    clone() {
      throw new Error("Cannot clone a Node interface");
    }
    /**
     * Create a deep clone of this node
     * @return {Node}
     */
    cloneDeep() {
      return this.map(function(node) {
        return node.cloneDeep();
      });
    }
    /**
     * Deep compare this node with another node.
     * @param {Node} other
     * @return {boolean} Returns true when both nodes are of the same type and
     *                   contain the same values (as do their childs)
     */
    equals(other) {
      return other ? this.type === other.type && deepStrictEqual(this, other) : false;
    }
    /**
     * Get string representation. (wrapper function)
     *
     * This function can get an object of the following form:
     * {
     *    handler: //This can be a callback function of the form
     *             // "function callback(node, options)"or
     *             // a map that maps function names (used in FunctionNodes)
     *             // to callbacks
     *    parenthesis: "keep" //the parenthesis option (This is optional)
     * }
     *
     * @param {Object} [options]
     * @return {string}
     */
    toString(options) {
      var customString = this._getCustomString(options);
      if (typeof customString !== "undefined") {
        return customString;
      }
      return this._toString(options);
    }
    /**
     * Internal function to generate the string output.
     * This has to be implemented by every Node
     *
     * @throws {Error}
     */
    _toString() {
      throw new Error("_toString not implemented for " + this.type);
    }
    /**
     * Get a JSON representation of the node
     * Both .toJSON() and the static .fromJSON(json) should be implemented by all
     * implementations of Node
     * @returns {Object}
     */
    toJSON() {
      throw new Error("Cannot serialize object: toJSON not implemented by " + this.type);
    }
    /**
     * Get HTML representation. (wrapper function)
     *
     * This function can get an object of the following form:
     * {
     *    handler: //This can be a callback function of the form
     *             // "function callback(node, options)" or
     *             // a map that maps function names (used in FunctionNodes)
     *             // to callbacks
     *    parenthesis: "keep" //the parenthesis option (This is optional)
     * }
     *
     * @param {Object} [options]
     * @return {string}
     */
    toHTML(options) {
      var customString = this._getCustomString(options);
      if (typeof customString !== "undefined") {
        return customString;
      }
      return this._toHTML(options);
    }
    /**
     * Internal function to generate the HTML output.
     * This has to be implemented by every Node
     *
     * @throws {Error}
     */
    _toHTML() {
      throw new Error("_toHTML not implemented for " + this.type);
    }
    /**
     * Get LaTeX representation. (wrapper function)
     *
     * This function can get an object of the following form:
     * {
     *    handler: //This can be a callback function of the form
     *             // "function callback(node, options)"or
     *             // a map that maps function names (used in FunctionNodes)
     *             // to callbacks
     *    parenthesis: "keep" //the parenthesis option (This is optional)
     * }
     *
     * @param {Object} [options]
     * @return {string}
     */
    toTex(options) {
      var customString = this._getCustomString(options);
      if (typeof customString !== "undefined") {
        return customString;
      }
      return this._toTex(options);
    }
    /**
     * Internal function to generate the LaTeX output.
     * This has to be implemented by every Node
     *
     * @param {Object} [options]
     * @throws {Error}
     */
    _toTex(options) {
      throw new Error("_toTex not implemented for " + this.type);
    }
    /**
     * Helper used by `to...` functions.
     */
    _getCustomString(options) {
      if (options && typeof options === "object") {
        switch (typeof options.handler) {
          case "object":
          case "undefined":
            return;
          case "function":
            return options.handler(this, options);
          default:
            throw new TypeError("Object or function expected as callback");
        }
      }
    }
    /**
     * Get identifier.
     * @return {string}
     */
    getIdentifier() {
      return this.type;
    }
    /**
     * Get the content of the current Node.
     * @return {Node} node
     **/
    getContent() {
      return this;
    }
  }
  return Node2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/transform/utils/errorTransform.js
function errorTransform(err) {
  if (err && err.isIndexError) {
    return new IndexError(err.index + 1, err.min + 1, err.max !== void 0 ? err.max + 1 : void 0);
  }
  return err;
}

// node_modules/mathjs/lib/esm/expression/node/utils/access.js
function accessFactory(_ref) {
  var {
    subset: subset2
  } = _ref;
  return function access(object, index2) {
    try {
      if (Array.isArray(object)) {
        return subset2(object, index2);
      } else if (object && typeof object.subset === "function") {
        return object.subset(index2);
      } else if (typeof object === "string") {
        return subset2(object, index2);
      } else if (typeof object === "object") {
        if (!index2.isObjectProperty()) {
          throw new TypeError("Cannot apply a numeric index as object property");
        }
        return getSafeProperty(object, index2.getObjectProperty());
      } else {
        throw new TypeError("Cannot apply index: unsupported type of object");
      }
    } catch (err) {
      throw errorTransform(err);
    }
  };
}

// node_modules/mathjs/lib/esm/expression/node/AccessorNode.js
var name207 = "AccessorNode";
var dependencies207 = ["subset", "Node"];
var createAccessorNode = factory(name207, dependencies207, (_ref) => {
  var {
    subset: subset2,
    Node: Node2
  } = _ref;
  var access = accessFactory({
    subset: subset2
  });
  function needParenthesis(node) {
    return !(isAccessorNode(node) || isArrayNode(node) || isConstantNode(node) || isFunctionNode(node) || isObjectNode(node) || isParenthesisNode(node) || isSymbolNode(node));
  }
  class AccessorNode2 extends Node2 {
    /**
     * @constructor AccessorNode
     * @extends {Node}
     * Access an object property or get a matrix subset
     *
     * @param {Node} object                 The object from which to retrieve
     *                                      a property or subset.
     * @param {IndexNode} index             IndexNode containing ranges
     */
    constructor(object, index2) {
      super();
      if (!isNode(object)) {
        throw new TypeError('Node expected for parameter "object"');
      }
      if (!isIndexNode(index2)) {
        throw new TypeError('IndexNode expected for parameter "index"');
      }
      this.object = object;
      this.index = index2;
    }
    // readonly property name
    get name() {
      if (this.index) {
        return this.index.isObjectProperty() ? this.index.getObjectProperty() : "";
      } else {
        return this.object.name || "";
      }
    }
    get type() {
      return name207;
    }
    get isAccessorNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      var evalObject = this.object._compile(math2, argNames);
      var evalIndex = this.index._compile(math2, argNames);
      if (this.index.isObjectProperty()) {
        var prop = this.index.getObjectProperty();
        return function evalAccessorNode(scope, args, context) {
          return getSafeProperty(evalObject(scope, args, context), prop);
        };
      } else {
        return function evalAccessorNode(scope, args, context) {
          var object = evalObject(scope, args, context);
          var index2 = evalIndex(scope, args, object);
          return access(object, index2);
        };
      }
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      callback(this.object, "object", this);
      callback(this.index, "index", this);
    }
    /**
     * Create a new AccessorNode whose children are the results of calling
     * the provided callback function for each child of the original node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {AccessorNode} Returns a transformed copy of the node
     */
    map(callback) {
      return new AccessorNode2(this._ifNode(callback(this.object, "object", this)), this._ifNode(callback(this.index, "index", this)));
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {AccessorNode}
     */
    clone() {
      return new AccessorNode2(this.object, this.index);
    }
    /**
     * Get string representation
     * @param {Object} options
     * @return {string}
     */
    _toString(options) {
      var object = this.object.toString(options);
      if (needParenthesis(this.object)) {
        object = "(" + object + ")";
      }
      return object + this.index.toString(options);
    }
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string}
     */
    _toHTML(options) {
      var object = this.object.toHTML(options);
      if (needParenthesis(this.object)) {
        object = '<span class="math-parenthesis math-round-parenthesis">(</span>' + object + '<span class="math-parenthesis math-round-parenthesis">)</span>';
      }
      return object + this.index.toHTML(options);
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string}
     */
    _toTex(options) {
      var object = this.object.toTex(options);
      if (needParenthesis(this.object)) {
        object = "\\left(' + object + '\\right)";
      }
      return object + this.index.toTex(options);
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name207,
        object: this.object,
        index: this.index
      };
    }
    /**
     * Instantiate an AccessorNode from its JSON representation
     * @param {Object} json
     *     An object structured like
     *     `{"mathjs": "AccessorNode", object: ..., index: ...}`,
     *     where mathjs is optional
     * @returns {AccessorNode}
     */
    static fromJSON(json) {
      return new AccessorNode2(json.object, json.index);
    }
  }
  _defineProperty(AccessorNode2, "name", name207);
  return AccessorNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/node/ArrayNode.js
var name208 = "ArrayNode";
var dependencies208 = ["Node"];
var createArrayNode = factory(name208, dependencies208, (_ref) => {
  var {
    Node: Node2
  } = _ref;
  class ArrayNode2 extends Node2 {
    /**
     * @constructor ArrayNode
     * @extends {Node}
     * Holds an 1-dimensional array with items
     * @param {Node[]} [items]   1 dimensional array with items
     */
    constructor(items) {
      super();
      this.items = items || [];
      if (!Array.isArray(this.items) || !this.items.every(isNode)) {
        throw new TypeError("Array containing Nodes expected");
      }
    }
    get type() {
      return name208;
    }
    get isArrayNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      var evalItems = map(this.items, function(item) {
        return item._compile(math2, argNames);
      });
      var asMatrix = math2.config.matrix !== "Array";
      if (asMatrix) {
        var matrix2 = math2.matrix;
        return function evalArrayNode(scope, args, context) {
          return matrix2(map(evalItems, function(evalItem) {
            return evalItem(scope, args, context);
          }));
        };
      } else {
        return function evalArrayNode(scope, args, context) {
          return map(evalItems, function(evalItem) {
            return evalItem(scope, args, context);
          });
        };
      }
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      for (var i2 = 0; i2 < this.items.length; i2++) {
        var node = this.items[i2];
        callback(node, "items[" + i2 + "]", this);
      }
    }
    /**
     * Create a new ArrayNode whose children are the results of calling
     * the provided callback function for each child of the original node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {ArrayNode} Returns a transformed copy of the node
     */
    map(callback) {
      var items = [];
      for (var i2 = 0; i2 < this.items.length; i2++) {
        items[i2] = this._ifNode(callback(this.items[i2], "items[" + i2 + "]", this));
      }
      return new ArrayNode2(items);
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {ArrayNode}
     */
    clone() {
      return new ArrayNode2(this.items.slice(0));
    }
    /**
     * Get string representation
     * @param {Object} options
     * @return {string} str
     * @override
     */
    _toString(options) {
      var items = this.items.map(function(node) {
        return node.toString(options);
      });
      return "[" + items.join(", ") + "]";
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name208,
        items: this.items
      };
    }
    /**
     * Instantiate an ArrayNode from its JSON representation
     * @param {Object} json  An object structured like
     *                       `{"mathjs": "ArrayNode", items: [...]}`,
     *                       where mathjs is optional
     * @returns {ArrayNode}
     */
    static fromJSON(json) {
      return new ArrayNode2(json.items);
    }
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string} str
     * @override
     */
    _toHTML(options) {
      var items = this.items.map(function(node) {
        return node.toHTML(options);
      });
      return '<span class="math-parenthesis math-square-parenthesis">[</span>' + items.join('<span class="math-separator">,</span>') + '<span class="math-parenthesis math-square-parenthesis">]</span>';
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string} str
     */
    _toTex(options) {
      function itemsToTex(items, nested) {
        var mixedItems = items.some(isArrayNode) && !items.every(isArrayNode);
        var itemsFormRow = nested || mixedItems;
        var itemSep = itemsFormRow ? "&" : "\\\\";
        var itemsTex = items.map(function(node) {
          if (node.items) {
            return itemsToTex(node.items, !nested);
          } else {
            return node.toTex(options);
          }
        }).join(itemSep);
        return mixedItems || !itemsFormRow || itemsFormRow && !nested ? "\\begin{bmatrix}" + itemsTex + "\\end{bmatrix}" : itemsTex;
      }
      return itemsToTex(this.items, false);
    }
  }
  _defineProperty(ArrayNode2, "name", name208);
  return ArrayNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/node/utils/assign.js
function assignFactory(_ref) {
  var {
    subset: subset2,
    matrix: matrix2
  } = _ref;
  return function assign(object, index2, value) {
    try {
      if (Array.isArray(object)) {
        var result = matrix2(object).subset(index2, value).valueOf();
        result.forEach((item, index3) => {
          object[index3] = item;
        });
        return object;
      } else if (object && typeof object.subset === "function") {
        return object.subset(index2, value);
      } else if (typeof object === "string") {
        return subset2(object, index2, value);
      } else if (typeof object === "object") {
        if (!index2.isObjectProperty()) {
          throw TypeError("Cannot apply a numeric index as object property");
        }
        setSafeProperty(object, index2.getObjectProperty(), value);
        return object;
      } else {
        throw new TypeError("Cannot apply index: unsupported type of object");
      }
    } catch (err) {
      throw errorTransform(err);
    }
  };
}

// node_modules/mathjs/lib/esm/expression/operators.js
var properties = [{
  // assignment
  AssignmentNode: {},
  FunctionAssignmentNode: {}
}, {
  // conditional expression
  ConditionalNode: {
    latexLeftParens: false,
    latexRightParens: false,
    latexParens: false
    // conditionals don't need parentheses in LaTeX because
    // they are 2 dimensional
  }
}, {
  // logical or
  "OperatorNode:or": {
    op: "or",
    associativity: "left",
    associativeWith: []
  }
}, {
  // logical xor
  "OperatorNode:xor": {
    op: "xor",
    associativity: "left",
    associativeWith: []
  }
}, {
  // logical and
  "OperatorNode:and": {
    op: "and",
    associativity: "left",
    associativeWith: []
  }
}, {
  // bitwise or
  "OperatorNode:bitOr": {
    op: "|",
    associativity: "left",
    associativeWith: []
  }
}, {
  // bitwise xor
  "OperatorNode:bitXor": {
    op: "^|",
    associativity: "left",
    associativeWith: []
  }
}, {
  // bitwise and
  "OperatorNode:bitAnd": {
    op: "&",
    associativity: "left",
    associativeWith: []
  }
}, {
  // relational operators
  "OperatorNode:equal": {
    op: "==",
    associativity: "left",
    associativeWith: []
  },
  "OperatorNode:unequal": {
    op: "!=",
    associativity: "left",
    associativeWith: []
  },
  "OperatorNode:smaller": {
    op: "<",
    associativity: "left",
    associativeWith: []
  },
  "OperatorNode:larger": {
    op: ">",
    associativity: "left",
    associativeWith: []
  },
  "OperatorNode:smallerEq": {
    op: "<=",
    associativity: "left",
    associativeWith: []
  },
  "OperatorNode:largerEq": {
    op: ">=",
    associativity: "left",
    associativeWith: []
  },
  RelationalNode: {
    associativity: "left",
    associativeWith: []
  }
}, {
  // bitshift operators
  "OperatorNode:leftShift": {
    op: "<<",
    associativity: "left",
    associativeWith: []
  },
  "OperatorNode:rightArithShift": {
    op: ">>",
    associativity: "left",
    associativeWith: []
  },
  "OperatorNode:rightLogShift": {
    op: ">>>",
    associativity: "left",
    associativeWith: []
  }
}, {
  // unit conversion
  "OperatorNode:to": {
    op: "to",
    associativity: "left",
    associativeWith: []
  }
}, {
  // range
  RangeNode: {}
}, {
  // addition, subtraction
  "OperatorNode:add": {
    op: "+",
    associativity: "left",
    associativeWith: ["OperatorNode:add", "OperatorNode:subtract"]
  },
  "OperatorNode:subtract": {
    op: "-",
    associativity: "left",
    associativeWith: []
  }
}, {
  // multiply, divide, modulus
  "OperatorNode:multiply": {
    op: "*",
    associativity: "left",
    associativeWith: ["OperatorNode:multiply", "OperatorNode:divide", "Operator:dotMultiply", "Operator:dotDivide"]
  },
  "OperatorNode:divide": {
    op: "/",
    associativity: "left",
    associativeWith: [],
    latexLeftParens: false,
    latexRightParens: false,
    latexParens: false
    // fractions don't require parentheses because
    // they're 2 dimensional, so parens aren't needed
    // in LaTeX
  },
  "OperatorNode:dotMultiply": {
    op: ".*",
    associativity: "left",
    associativeWith: ["OperatorNode:multiply", "OperatorNode:divide", "OperatorNode:dotMultiply", "OperatorNode:doDivide"]
  },
  "OperatorNode:dotDivide": {
    op: "./",
    associativity: "left",
    associativeWith: []
  },
  "OperatorNode:mod": {
    op: "mod",
    associativity: "left",
    associativeWith: []
  }
}, {
  // Repeat multiplication for implicit multiplication
  "OperatorNode:multiply": {
    associativity: "left",
    associativeWith: ["OperatorNode:multiply", "OperatorNode:divide", "Operator:dotMultiply", "Operator:dotDivide"]
  }
}, {
  // unary prefix operators
  "OperatorNode:unaryPlus": {
    op: "+",
    associativity: "right"
  },
  "OperatorNode:unaryMinus": {
    op: "-",
    associativity: "right"
  },
  "OperatorNode:bitNot": {
    op: "~",
    associativity: "right"
  },
  "OperatorNode:not": {
    op: "not",
    associativity: "right"
  }
}, {
  // exponentiation
  "OperatorNode:pow": {
    op: "^",
    associativity: "right",
    associativeWith: [],
    latexRightParens: false
    // the exponent doesn't need parentheses in
    // LaTeX because it's 2 dimensional
    // (it's on top)
  },
  "OperatorNode:dotPow": {
    op: ".^",
    associativity: "right",
    associativeWith: []
  }
}, {
  // factorial
  "OperatorNode:factorial": {
    op: "!",
    associativity: "left"
  }
}, {
  // matrix transpose
  "OperatorNode:ctranspose": {
    op: "'",
    associativity: "left"
  }
}];
function unwrapParen(_node, parenthesis) {
  if (!parenthesis || parenthesis !== "auto") return _node;
  var node = _node;
  while (isParenthesisNode(node)) node = node.content;
  return node;
}
function getPrecedence(_node, parenthesis, implicit, parent) {
  var node = _node;
  if (parenthesis !== "keep") {
    node = _node.getContent();
  }
  var identifier = node.getIdentifier();
  var precedence = null;
  for (var i2 = 0; i2 < properties.length; i2++) {
    if (identifier in properties[i2]) {
      precedence = i2;
      break;
    }
  }
  if (identifier === "OperatorNode:multiply" && node.implicit && implicit !== "show") {
    var leftArg = unwrapParen(node.args[0], parenthesis);
    if (!(isConstantNode(leftArg) && parent && parent.getIdentifier() === "OperatorNode:divide" && rule2Node(unwrapParen(parent.args[0], parenthesis))) && !(leftArg.getIdentifier() === "OperatorNode:divide" && rule2Node(unwrapParen(leftArg.args[0], parenthesis)) && isConstantNode(unwrapParen(leftArg.args[1])))) {
      precedence += 1;
    }
  }
  return precedence;
}
function getAssociativity(_node, parenthesis) {
  var node = _node;
  if (parenthesis !== "keep") {
    node = _node.getContent();
  }
  var identifier = node.getIdentifier();
  var index2 = getPrecedence(node, parenthesis);
  if (index2 === null) {
    return null;
  }
  var property = properties[index2][identifier];
  if (hasOwnProperty(property, "associativity")) {
    if (property.associativity === "left") {
      return "left";
    }
    if (property.associativity === "right") {
      return "right";
    }
    throw Error("'" + identifier + "' has the invalid associativity '" + property.associativity + "'.");
  }
  return null;
}
function isAssociativeWith(nodeA, nodeB, parenthesis) {
  var a = parenthesis !== "keep" ? nodeA.getContent() : nodeA;
  var b2 = parenthesis !== "keep" ? nodeA.getContent() : nodeB;
  var identifierA = a.getIdentifier();
  var identifierB = b2.getIdentifier();
  var index2 = getPrecedence(a, parenthesis);
  if (index2 === null) {
    return null;
  }
  var property = properties[index2][identifierA];
  if (hasOwnProperty(property, "associativeWith") && property.associativeWith instanceof Array) {
    for (var i2 = 0; i2 < property.associativeWith.length; i2++) {
      if (property.associativeWith[i2] === identifierB) {
        return true;
      }
    }
    return false;
  }
  return null;
}
function getOperator(fn) {
  var identifier = "OperatorNode:" + fn;
  for (var group of properties) {
    if (identifier in group) {
      return group[identifier].op;
    }
  }
  return null;
}

// node_modules/mathjs/lib/esm/expression/node/AssignmentNode.js
var name209 = "AssignmentNode";
var dependencies209 = [
  "subset",
  "?matrix",
  // FIXME: should not be needed at all, should be handled by subset
  "Node"
];
var createAssignmentNode = factory(name209, dependencies209, (_ref) => {
  var {
    subset: subset2,
    matrix: matrix2,
    Node: Node2
  } = _ref;
  var access = accessFactory({
    subset: subset2
  });
  var assign = assignFactory({
    subset: subset2,
    matrix: matrix2
  });
  function needParenthesis(node, parenthesis, implicit) {
    if (!parenthesis) {
      parenthesis = "keep";
    }
    var precedence = getPrecedence(node, parenthesis, implicit);
    var exprPrecedence = getPrecedence(node.value, parenthesis, implicit);
    return parenthesis === "all" || exprPrecedence !== null && exprPrecedence <= precedence;
  }
  class AssignmentNode2 extends Node2 {
    /**
     * @constructor AssignmentNode
     * @extends {Node}
     *
     * Define a symbol, like `a=3.2`, update a property like `a.b=3.2`, or
     * replace a subset of a matrix like `A[2,2]=42`.
     *
     * Syntax:
     *
     *     new AssignmentNode(symbol, value)
     *     new AssignmentNode(object, index, value)
     *
     * Usage:
     *
     *    new AssignmentNode(new SymbolNode('a'), new ConstantNode(2))  // a=2
     *    new AssignmentNode(new SymbolNode('a'),
     *                       new IndexNode('b'),
     *                       new ConstantNode(2))   // a.b=2
     *    new AssignmentNode(new SymbolNode('a'),
     *                       new IndexNode(1, 2),
     *                       new ConstantNode(3))  // a[1,2]=3
     *
     * @param {SymbolNode | AccessorNode} object
     *     Object on which to assign a value
     * @param {IndexNode} [index=null]
     *     Index, property name or matrix index. Optional. If not provided
     *     and `object` is a SymbolNode, the property is assigned to the
     *     global scope.
     * @param {Node} value
     *     The value to be assigned
     */
    constructor(object, index2, value) {
      super();
      this.object = object;
      this.index = value ? index2 : null;
      this.value = value || index2;
      if (!isSymbolNode(object) && !isAccessorNode(object)) {
        throw new TypeError('SymbolNode or AccessorNode expected as "object"');
      }
      if (isSymbolNode(object) && object.name === "end") {
        throw new Error('Cannot assign to symbol "end"');
      }
      if (this.index && !isIndexNode(this.index)) {
        throw new TypeError('IndexNode expected as "index"');
      }
      if (!isNode(this.value)) {
        throw new TypeError('Node expected as "value"');
      }
    }
    // class name for typing purposes:
    // readonly property name
    get name() {
      if (this.index) {
        return this.index.isObjectProperty() ? this.index.getObjectProperty() : "";
      } else {
        return this.object.name || "";
      }
    }
    get type() {
      return name209;
    }
    get isAssignmentNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      var evalObject = this.object._compile(math2, argNames);
      var evalIndex = this.index ? this.index._compile(math2, argNames) : null;
      var evalValue = this.value._compile(math2, argNames);
      var name314 = this.object.name;
      if (!this.index) {
        if (!isSymbolNode(this.object)) {
          throw new TypeError("SymbolNode expected as object");
        }
        return function evalAssignmentNode(scope, args, context) {
          var value = evalValue(scope, args, context);
          scope.set(name314, value);
          return value;
        };
      } else if (this.index.isObjectProperty()) {
        var prop = this.index.getObjectProperty();
        return function evalAssignmentNode(scope, args, context) {
          var object = evalObject(scope, args, context);
          var value = evalValue(scope, args, context);
          setSafeProperty(object, prop, value);
          return value;
        };
      } else if (isSymbolNode(this.object)) {
        return function evalAssignmentNode(scope, args, context) {
          var childObject = evalObject(scope, args, context);
          var value = evalValue(scope, args, context);
          var index2 = evalIndex(scope, args, childObject);
          scope.set(name314, assign(childObject, index2, value));
          return value;
        };
      } else {
        var evalParentObject = this.object.object._compile(math2, argNames);
        if (this.object.index.isObjectProperty()) {
          var parentProp = this.object.index.getObjectProperty();
          return function evalAssignmentNode(scope, args, context) {
            var parent = evalParentObject(scope, args, context);
            var childObject = getSafeProperty(parent, parentProp);
            var index2 = evalIndex(scope, args, childObject);
            var value = evalValue(scope, args, context);
            setSafeProperty(parent, parentProp, assign(childObject, index2, value));
            return value;
          };
        } else {
          var evalParentIndex = this.object.index._compile(math2, argNames);
          return function evalAssignmentNode(scope, args, context) {
            var parent = evalParentObject(scope, args, context);
            var parentIndex = evalParentIndex(scope, args, parent);
            var childObject = access(parent, parentIndex);
            var index2 = evalIndex(scope, args, childObject);
            var value = evalValue(scope, args, context);
            assign(parent, parentIndex, assign(childObject, index2, value));
            return value;
          };
        }
      }
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      callback(this.object, "object", this);
      if (this.index) {
        callback(this.index, "index", this);
      }
      callback(this.value, "value", this);
    }
    /**
     * Create a new AssignmentNode whose children are the results of calling
     * the provided callback function for each child of the original node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {AssignmentNode} Returns a transformed copy of the node
     */
    map(callback) {
      var object = this._ifNode(callback(this.object, "object", this));
      var index2 = this.index ? this._ifNode(callback(this.index, "index", this)) : null;
      var value = this._ifNode(callback(this.value, "value", this));
      return new AssignmentNode2(object, index2, value);
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {AssignmentNode}
     */
    clone() {
      return new AssignmentNode2(this.object, this.index, this.value);
    }
    /**
     * Get string representation
     * @param {Object} options
     * @return {string}
     */
    _toString(options) {
      var object = this.object.toString(options);
      var index2 = this.index ? this.index.toString(options) : "";
      var value = this.value.toString(options);
      if (needParenthesis(this, options && options.parenthesis, options && options.implicit)) {
        value = "(" + value + ")";
      }
      return object + index2 + " = " + value;
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name209,
        object: this.object,
        index: this.index,
        value: this.value
      };
    }
    /**
     * Instantiate an AssignmentNode from its JSON representation
     * @param {Object} json
     *     An object structured like
     *     `{"mathjs": "AssignmentNode", object: ..., index: ..., value: ...}`,
     *     where mathjs is optional
     * @returns {AssignmentNode}
     */
    static fromJSON(json) {
      return new AssignmentNode2(json.object, json.index, json.value);
    }
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string}
     */
    _toHTML(options) {
      var object = this.object.toHTML(options);
      var index2 = this.index ? this.index.toHTML(options) : "";
      var value = this.value.toHTML(options);
      if (needParenthesis(this, options && options.parenthesis, options && options.implicit)) {
        value = '<span class="math-paranthesis math-round-parenthesis">(</span>' + value + '<span class="math-paranthesis math-round-parenthesis">)</span>';
      }
      return object + index2 + '<span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>' + value;
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string}
     */
    _toTex(options) {
      var object = this.object.toTex(options);
      var index2 = this.index ? this.index.toTex(options) : "";
      var value = this.value.toTex(options);
      if (needParenthesis(this, options && options.parenthesis, options && options.implicit)) {
        value = "\\left(".concat(value, "\\right)");
      }
      return object + index2 + "=" + value;
    }
  }
  _defineProperty(AssignmentNode2, "name", name209);
  return AssignmentNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/node/BlockNode.js
var name210 = "BlockNode";
var dependencies210 = ["ResultSet", "Node"];
var createBlockNode = factory(name210, dependencies210, (_ref) => {
  var {
    ResultSet: ResultSet2,
    Node: Node2
  } = _ref;
  class BlockNode2 extends Node2 {
    /**
     * @constructor BlockNode
     * @extends {Node}
     * Holds a set with blocks
     * @param {Array.<{node: Node} | {node: Node, visible: boolean}>} blocks
     *            An array with blocks, where a block is constructed as an
     *            Object with properties block, which is a Node, and visible,
     *            which is a boolean. The property visible is optional and
     *            is true by default
     */
    constructor(blocks) {
      super();
      if (!Array.isArray(blocks)) throw new Error("Array expected");
      this.blocks = blocks.map(function(block) {
        var node = block && block.node;
        var visible = block && block.visible !== void 0 ? block.visible : true;
        if (!isNode(node)) throw new TypeError('Property "node" must be a Node');
        if (typeof visible !== "boolean") {
          throw new TypeError('Property "visible" must be a boolean');
        }
        return {
          node,
          visible
        };
      });
    }
    get type() {
      return name210;
    }
    get isBlockNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      var evalBlocks = map(this.blocks, function(block) {
        return {
          evaluate: block.node._compile(math2, argNames),
          visible: block.visible
        };
      });
      return function evalBlockNodes(scope, args, context) {
        var results = [];
        forEach(evalBlocks, function evalBlockNode(block) {
          var result = block.evaluate(scope, args, context);
          if (block.visible) {
            results.push(result);
          }
        });
        return new ResultSet2(results);
      };
    }
    /**
     * Execute a callback for each of the child blocks of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      for (var i2 = 0; i2 < this.blocks.length; i2++) {
        callback(this.blocks[i2].node, "blocks[" + i2 + "].node", this);
      }
    }
    /**
     * Create a new BlockNode whose children are the results of calling
     * the provided callback function for each child of the original node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {BlockNode} Returns a transformed copy of the node
     */
    map(callback) {
      var blocks = [];
      for (var i2 = 0; i2 < this.blocks.length; i2++) {
        var block = this.blocks[i2];
        var node = this._ifNode(callback(block.node, "blocks[" + i2 + "].node", this));
        blocks[i2] = {
          node,
          visible: block.visible
        };
      }
      return new BlockNode2(blocks);
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {BlockNode}
     */
    clone() {
      var blocks = this.blocks.map(function(block) {
        return {
          node: block.node,
          visible: block.visible
        };
      });
      return new BlockNode2(blocks);
    }
    /**
     * Get string representation
     * @param {Object} options
     * @return {string} str
     * @override
     */
    _toString(options) {
      return this.blocks.map(function(param) {
        return param.node.toString(options) + (param.visible ? "" : ";");
      }).join("\n");
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name210,
        blocks: this.blocks
      };
    }
    /**
     * Instantiate an BlockNode from its JSON representation
     * @param {Object} json
     *     An object structured like
     *     `{"mathjs": "BlockNode", blocks: [{node: ..., visible: false}, ...]}`,
     *     where mathjs is optional
     * @returns {BlockNode}
     */
    static fromJSON(json) {
      return new BlockNode2(json.blocks);
    }
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string} str
     * @override
     */
    _toHTML(options) {
      return this.blocks.map(function(param) {
        return param.node.toHTML(options) + (param.visible ? "" : '<span class="math-separator">;</span>');
      }).join('<span class="math-separator"><br /></span>');
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string} str
     */
    _toTex(options) {
      return this.blocks.map(function(param) {
        return param.node.toTex(options) + (param.visible ? "" : ";");
      }).join("\\;\\;\n");
    }
  }
  _defineProperty(BlockNode2, "name", name210);
  return BlockNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/node/ConditionalNode.js
var name211 = "ConditionalNode";
var dependencies211 = ["Node"];
var createConditionalNode = factory(name211, dependencies211, (_ref) => {
  var {
    Node: Node2
  } = _ref;
  function testCondition(condition) {
    if (typeof condition === "number" || typeof condition === "boolean" || typeof condition === "string") {
      return !!condition;
    }
    if (condition) {
      if (isBigNumber(condition)) {
        return !condition.isZero();
      }
      if (isComplex(condition)) {
        return !!(condition.re || condition.im);
      }
      if (isUnit(condition)) {
        return !!condition.value;
      }
    }
    if (condition === null || condition === void 0) {
      return false;
    }
    throw new TypeError('Unsupported type of condition "' + typeOf(condition) + '"');
  }
  class ConditionalNode2 extends Node2 {
    /**
     * A lazy evaluating conditional operator: 'condition ? trueExpr : falseExpr'
     *
     * @param {Node} condition   Condition, must result in a boolean
     * @param {Node} trueExpr    Expression evaluated when condition is true
     * @param {Node} falseExpr   Expression evaluated when condition is true
     *
     * @constructor ConditionalNode
     * @extends {Node}
     */
    constructor(condition, trueExpr, falseExpr) {
      super();
      if (!isNode(condition)) {
        throw new TypeError("Parameter condition must be a Node");
      }
      if (!isNode(trueExpr)) {
        throw new TypeError("Parameter trueExpr must be a Node");
      }
      if (!isNode(falseExpr)) {
        throw new TypeError("Parameter falseExpr must be a Node");
      }
      this.condition = condition;
      this.trueExpr = trueExpr;
      this.falseExpr = falseExpr;
    }
    get type() {
      return name211;
    }
    get isConditionalNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      var evalCondition = this.condition._compile(math2, argNames);
      var evalTrueExpr = this.trueExpr._compile(math2, argNames);
      var evalFalseExpr = this.falseExpr._compile(math2, argNames);
      return function evalConditionalNode(scope, args, context) {
        return testCondition(evalCondition(scope, args, context)) ? evalTrueExpr(scope, args, context) : evalFalseExpr(scope, args, context);
      };
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      callback(this.condition, "condition", this);
      callback(this.trueExpr, "trueExpr", this);
      callback(this.falseExpr, "falseExpr", this);
    }
    /**
     * Create a new ConditionalNode whose children are the results of calling
     * the provided callback function for each child of the original node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {ConditionalNode} Returns a transformed copy of the node
     */
    map(callback) {
      return new ConditionalNode2(this._ifNode(callback(this.condition, "condition", this)), this._ifNode(callback(this.trueExpr, "trueExpr", this)), this._ifNode(callback(this.falseExpr, "falseExpr", this)));
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {ConditionalNode}
     */
    clone() {
      return new ConditionalNode2(this.condition, this.trueExpr, this.falseExpr);
    }
    /**
     * Get string representation
     * @param {Object} options
     * @return {string} str
     */
    _toString(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var precedence = getPrecedence(this, parenthesis, options && options.implicit);
      var condition = this.condition.toString(options);
      var conditionPrecedence = getPrecedence(this.condition, parenthesis, options && options.implicit);
      if (parenthesis === "all" || this.condition.type === "OperatorNode" || conditionPrecedence !== null && conditionPrecedence <= precedence) {
        condition = "(" + condition + ")";
      }
      var trueExpr = this.trueExpr.toString(options);
      var truePrecedence = getPrecedence(this.trueExpr, parenthesis, options && options.implicit);
      if (parenthesis === "all" || this.trueExpr.type === "OperatorNode" || truePrecedence !== null && truePrecedence <= precedence) {
        trueExpr = "(" + trueExpr + ")";
      }
      var falseExpr = this.falseExpr.toString(options);
      var falsePrecedence = getPrecedence(this.falseExpr, parenthesis, options && options.implicit);
      if (parenthesis === "all" || this.falseExpr.type === "OperatorNode" || falsePrecedence !== null && falsePrecedence <= precedence) {
        falseExpr = "(" + falseExpr + ")";
      }
      return condition + " ? " + trueExpr + " : " + falseExpr;
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name211,
        condition: this.condition,
        trueExpr: this.trueExpr,
        falseExpr: this.falseExpr
      };
    }
    /**
     * Instantiate an ConditionalNode from its JSON representation
     * @param {Object} json
     *     An object structured like
     *     ```
     *     {"mathjs": "ConditionalNode",
     *      "condition": ...,
     *      "trueExpr": ...,
     *      "falseExpr": ...}
     *     ```
     *     where mathjs is optional
     * @returns {ConditionalNode}
     */
    static fromJSON(json) {
      return new ConditionalNode2(json.condition, json.trueExpr, json.falseExpr);
    }
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string} str
     */
    _toHTML(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var precedence = getPrecedence(this, parenthesis, options && options.implicit);
      var condition = this.condition.toHTML(options);
      var conditionPrecedence = getPrecedence(this.condition, parenthesis, options && options.implicit);
      if (parenthesis === "all" || this.condition.type === "OperatorNode" || conditionPrecedence !== null && conditionPrecedence <= precedence) {
        condition = '<span class="math-parenthesis math-round-parenthesis">(</span>' + condition + '<span class="math-parenthesis math-round-parenthesis">)</span>';
      }
      var trueExpr = this.trueExpr.toHTML(options);
      var truePrecedence = getPrecedence(this.trueExpr, parenthesis, options && options.implicit);
      if (parenthesis === "all" || this.trueExpr.type === "OperatorNode" || truePrecedence !== null && truePrecedence <= precedence) {
        trueExpr = '<span class="math-parenthesis math-round-parenthesis">(</span>' + trueExpr + '<span class="math-parenthesis math-round-parenthesis">)</span>';
      }
      var falseExpr = this.falseExpr.toHTML(options);
      var falsePrecedence = getPrecedence(this.falseExpr, parenthesis, options && options.implicit);
      if (parenthesis === "all" || this.falseExpr.type === "OperatorNode" || falsePrecedence !== null && falsePrecedence <= precedence) {
        falseExpr = '<span class="math-parenthesis math-round-parenthesis">(</span>' + falseExpr + '<span class="math-parenthesis math-round-parenthesis">)</span>';
      }
      return condition + '<span class="math-operator math-conditional-operator">?</span>' + trueExpr + '<span class="math-operator math-conditional-operator">:</span>' + falseExpr;
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string} str
     */
    _toTex(options) {
      return "\\begin{cases} {" + this.trueExpr.toTex(options) + "}, &\\quad{\\text{if }\\;" + this.condition.toTex(options) + "}\\\\{" + this.falseExpr.toTex(options) + "}, &\\quad{\\text{otherwise}}\\end{cases}";
    }
  }
  _defineProperty(ConditionalNode2, "name", name211);
  return ConditionalNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/utils/latex.js
var import_escape_latex = __toESM(require_dist(), 1);
var latexSymbols = {
  // GREEK LETTERS
  Alpha: "A",
  alpha: "\\alpha",
  Beta: "B",
  beta: "\\beta",
  Gamma: "\\Gamma",
  gamma: "\\gamma",
  Delta: "\\Delta",
  delta: "\\delta",
  Epsilon: "E",
  epsilon: "\\epsilon",
  varepsilon: "\\varepsilon",
  Zeta: "Z",
  zeta: "\\zeta",
  Eta: "H",
  eta: "\\eta",
  Theta: "\\Theta",
  theta: "\\theta",
  vartheta: "\\vartheta",
  Iota: "I",
  iota: "\\iota",
  Kappa: "K",
  kappa: "\\kappa",
  varkappa: "\\varkappa",
  Lambda: "\\Lambda",
  lambda: "\\lambda",
  Mu: "M",
  mu: "\\mu",
  Nu: "N",
  nu: "\\nu",
  Xi: "\\Xi",
  xi: "\\xi",
  Omicron: "O",
  omicron: "o",
  Pi: "\\Pi",
  pi: "\\pi",
  varpi: "\\varpi",
  Rho: "P",
  rho: "\\rho",
  varrho: "\\varrho",
  Sigma: "\\Sigma",
  sigma: "\\sigma",
  varsigma: "\\varsigma",
  Tau: "T",
  tau: "\\tau",
  Upsilon: "\\Upsilon",
  upsilon: "\\upsilon",
  Phi: "\\Phi",
  phi: "\\phi",
  varphi: "\\varphi",
  Chi: "X",
  chi: "\\chi",
  Psi: "\\Psi",
  psi: "\\psi",
  Omega: "\\Omega",
  omega: "\\omega",
  // logic
  true: "\\mathrm{True}",
  false: "\\mathrm{False}",
  // other
  i: "i",
  // TODO use \i ??
  inf: "\\infty",
  Inf: "\\infty",
  infinity: "\\infty",
  Infinity: "\\infty",
  oo: "\\infty",
  lim: "\\lim",
  undefined: "\\mathbf{?}"
};
var latexOperators = {
  transpose: "^\\top",
  ctranspose: "^H",
  factorial: "!",
  pow: "^",
  dotPow: ".^\\wedge",
  // TODO find ideal solution
  unaryPlus: "+",
  unaryMinus: "-",
  bitNot: "\\~",
  // TODO find ideal solution
  not: "\\neg",
  multiply: "\\cdot",
  divide: "\\frac",
  // TODO how to handle that properly?
  dotMultiply: ".\\cdot",
  // TODO find ideal solution
  dotDivide: ".:",
  // TODO find ideal solution
  mod: "\\mod",
  add: "+",
  subtract: "-",
  to: "\\rightarrow",
  leftShift: "<<",
  rightArithShift: ">>",
  rightLogShift: ">>>",
  equal: "=",
  unequal: "\\neq",
  smaller: "<",
  larger: ">",
  smallerEq: "\\leq",
  largerEq: "\\geq",
  bitAnd: "\\&",
  bitXor: "\\underline{|}",
  bitOr: "|",
  and: "\\wedge",
  xor: "\\veebar",
  or: "\\vee"
};
var latexFunctions = {
  // arithmetic
  abs: {
    1: "\\left|${args[0]}\\right|"
  },
  add: {
    2: "\\left(${args[0]}".concat(latexOperators.add, "${args[1]}\\right)")
  },
  cbrt: {
    1: "\\sqrt[3]{${args[0]}}"
  },
  ceil: {
    1: "\\left\\lceil${args[0]}\\right\\rceil"
  },
  cube: {
    1: "\\left(${args[0]}\\right)^3"
  },
  divide: {
    2: "\\frac{${args[0]}}{${args[1]}}"
  },
  dotDivide: {
    2: "\\left(${args[0]}".concat(latexOperators.dotDivide, "${args[1]}\\right)")
  },
  dotMultiply: {
    2: "\\left(${args[0]}".concat(latexOperators.dotMultiply, "${args[1]}\\right)")
  },
  dotPow: {
    2: "\\left(${args[0]}".concat(latexOperators.dotPow, "${args[1]}\\right)")
  },
  exp: {
    1: "\\exp\\left(${args[0]}\\right)"
  },
  expm1: "\\left(e".concat(latexOperators.pow, "{${args[0]}}-1\\right)"),
  fix: {
    1: "\\mathrm{${name}}\\left(${args[0]}\\right)"
  },
  floor: {
    1: "\\left\\lfloor${args[0]}\\right\\rfloor"
  },
  gcd: "\\gcd\\left(${args}\\right)",
  hypot: "\\hypot\\left(${args}\\right)",
  log: {
    1: "\\ln\\left(${args[0]}\\right)",
    2: "\\log_{${args[1]}}\\left(${args[0]}\\right)"
  },
  log10: {
    1: "\\log_{10}\\left(${args[0]}\\right)"
  },
  log1p: {
    1: "\\ln\\left(${args[0]}+1\\right)",
    2: "\\log_{${args[1]}}\\left(${args[0]}+1\\right)"
  },
  log2: "\\log_{2}\\left(${args[0]}\\right)",
  mod: {
    2: "\\left(${args[0]}".concat(latexOperators.mod, "${args[1]}\\right)")
  },
  multiply: {
    2: "\\left(${args[0]}".concat(latexOperators.multiply, "${args[1]}\\right)")
  },
  norm: {
    1: "\\left\\|${args[0]}\\right\\|",
    2: void 0
    // use default template
  },
  nthRoot: {
    2: "\\sqrt[${args[1]}]{${args[0]}}"
  },
  nthRoots: {
    2: "\\{y : $y^{args[1]} = {${args[0]}}\\}"
  },
  pow: {
    2: "\\left(${args[0]}\\right)".concat(latexOperators.pow, "{${args[1]}}")
  },
  round: {
    1: "\\left\\lfloor${args[0]}\\right\\rceil",
    2: void 0
    // use default template
  },
  sign: {
    1: "\\mathrm{${name}}\\left(${args[0]}\\right)"
  },
  sqrt: {
    1: "\\sqrt{${args[0]}}"
  },
  square: {
    1: "\\left(${args[0]}\\right)^2"
  },
  subtract: {
    2: "\\left(${args[0]}".concat(latexOperators.subtract, "${args[1]}\\right)")
  },
  unaryMinus: {
    1: "".concat(latexOperators.unaryMinus, "\\left(${args[0]}\\right)")
  },
  unaryPlus: {
    1: "".concat(latexOperators.unaryPlus, "\\left(${args[0]}\\right)")
  },
  // bitwise
  bitAnd: {
    2: "\\left(${args[0]}".concat(latexOperators.bitAnd, "${args[1]}\\right)")
  },
  bitNot: {
    1: latexOperators.bitNot + "\\left(${args[0]}\\right)"
  },
  bitOr: {
    2: "\\left(${args[0]}".concat(latexOperators.bitOr, "${args[1]}\\right)")
  },
  bitXor: {
    2: "\\left(${args[0]}".concat(latexOperators.bitXor, "${args[1]}\\right)")
  },
  leftShift: {
    2: "\\left(${args[0]}".concat(latexOperators.leftShift, "${args[1]}\\right)")
  },
  rightArithShift: {
    2: "\\left(${args[0]}".concat(latexOperators.rightArithShift, "${args[1]}\\right)")
  },
  rightLogShift: {
    2: "\\left(${args[0]}".concat(latexOperators.rightLogShift, "${args[1]}\\right)")
  },
  // combinatorics
  bellNumbers: {
    1: "\\mathrm{B}_{${args[0]}}"
  },
  catalan: {
    1: "\\mathrm{C}_{${args[0]}}"
  },
  stirlingS2: {
    2: "\\mathrm{S}\\left(${args}\\right)"
  },
  // complex
  arg: {
    1: "\\arg\\left(${args[0]}\\right)"
  },
  conj: {
    1: "\\left(${args[0]}\\right)^*"
  },
  im: {
    1: "\\Im\\left\\lbrace${args[0]}\\right\\rbrace"
  },
  re: {
    1: "\\Re\\left\\lbrace${args[0]}\\right\\rbrace"
  },
  // logical
  and: {
    2: "\\left(${args[0]}".concat(latexOperators.and, "${args[1]}\\right)")
  },
  not: {
    1: latexOperators.not + "\\left(${args[0]}\\right)"
  },
  or: {
    2: "\\left(${args[0]}".concat(latexOperators.or, "${args[1]}\\right)")
  },
  xor: {
    2: "\\left(${args[0]}".concat(latexOperators.xor, "${args[1]}\\right)")
  },
  // matrix
  cross: {
    2: "\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)"
  },
  ctranspose: {
    1: "\\left(${args[0]}\\right)".concat(latexOperators.ctranspose)
  },
  det: {
    1: "\\det\\left(${args[0]}\\right)"
  },
  dot: {
    2: "\\left(${args[0]}\\cdot${args[1]}\\right)"
  },
  expm: {
    1: "\\exp\\left(${args[0]}\\right)"
  },
  inv: {
    1: "\\left(${args[0]}\\right)^{-1}"
  },
  pinv: {
    1: "\\left(${args[0]}\\right)^{+}"
  },
  sqrtm: {
    1: "{${args[0]}}".concat(latexOperators.pow, "{\\frac{1}{2}}")
  },
  trace: {
    1: "\\mathrm{tr}\\left(${args[0]}\\right)"
  },
  transpose: {
    1: "\\left(${args[0]}\\right)".concat(latexOperators.transpose)
  },
  // probability
  combinations: {
    2: "\\binom{${args[0]}}{${args[1]}}"
  },
  combinationsWithRep: {
    2: "\\left(\\!\\!{\\binom{${args[0]}}{${args[1]}}}\\!\\!\\right)"
  },
  factorial: {
    1: "\\left(${args[0]}\\right)".concat(latexOperators.factorial)
  },
  gamma: {
    1: "\\Gamma\\left(${args[0]}\\right)"
  },
  lgamma: {
    1: "\\ln\\Gamma\\left(${args[0]}\\right)"
  },
  // relational
  equal: {
    2: "\\left(${args[0]}".concat(latexOperators.equal, "${args[1]}\\right)")
  },
  larger: {
    2: "\\left(${args[0]}".concat(latexOperators.larger, "${args[1]}\\right)")
  },
  largerEq: {
    2: "\\left(${args[0]}".concat(latexOperators.largerEq, "${args[1]}\\right)")
  },
  smaller: {
    2: "\\left(${args[0]}".concat(latexOperators.smaller, "${args[1]}\\right)")
  },
  smallerEq: {
    2: "\\left(${args[0]}".concat(latexOperators.smallerEq, "${args[1]}\\right)")
  },
  unequal: {
    2: "\\left(${args[0]}".concat(latexOperators.unequal, "${args[1]}\\right)")
  },
  // special
  erf: {
    1: "erf\\left(${args[0]}\\right)"
  },
  // statistics
  max: "\\max\\left(${args}\\right)",
  min: "\\min\\left(${args}\\right)",
  variance: "\\mathrm{Var}\\left(${args}\\right)",
  // trigonometry
  acos: {
    1: "\\cos^{-1}\\left(${args[0]}\\right)"
  },
  acosh: {
    1: "\\cosh^{-1}\\left(${args[0]}\\right)"
  },
  acot: {
    1: "\\cot^{-1}\\left(${args[0]}\\right)"
  },
  acoth: {
    1: "\\coth^{-1}\\left(${args[0]}\\right)"
  },
  acsc: {
    1: "\\csc^{-1}\\left(${args[0]}\\right)"
  },
  acsch: {
    1: "\\mathrm{csch}^{-1}\\left(${args[0]}\\right)"
  },
  asec: {
    1: "\\sec^{-1}\\left(${args[0]}\\right)"
  },
  asech: {
    1: "\\mathrm{sech}^{-1}\\left(${args[0]}\\right)"
  },
  asin: {
    1: "\\sin^{-1}\\left(${args[0]}\\right)"
  },
  asinh: {
    1: "\\sinh^{-1}\\left(${args[0]}\\right)"
  },
  atan: {
    1: "\\tan^{-1}\\left(${args[0]}\\right)"
  },
  atan2: {
    2: "\\mathrm{atan2}\\left(${args}\\right)"
  },
  atanh: {
    1: "\\tanh^{-1}\\left(${args[0]}\\right)"
  },
  cos: {
    1: "\\cos\\left(${args[0]}\\right)"
  },
  cosh: {
    1: "\\cosh\\left(${args[0]}\\right)"
  },
  cot: {
    1: "\\cot\\left(${args[0]}\\right)"
  },
  coth: {
    1: "\\coth\\left(${args[0]}\\right)"
  },
  csc: {
    1: "\\csc\\left(${args[0]}\\right)"
  },
  csch: {
    1: "\\mathrm{csch}\\left(${args[0]}\\right)"
  },
  sec: {
    1: "\\sec\\left(${args[0]}\\right)"
  },
  sech: {
    1: "\\mathrm{sech}\\left(${args[0]}\\right)"
  },
  sin: {
    1: "\\sin\\left(${args[0]}\\right)"
  },
  sinh: {
    1: "\\sinh\\left(${args[0]}\\right)"
  },
  tan: {
    1: "\\tan\\left(${args[0]}\\right)"
  },
  tanh: {
    1: "\\tanh\\left(${args[0]}\\right)"
  },
  // unit
  to: {
    2: "\\left(${args[0]}".concat(latexOperators.to, "${args[1]}\\right)")
  },
  // utils
  numeric: function numeric(node, options) {
    return node.args[0].toTex();
  },
  // type
  number: {
    0: "0",
    1: "\\left(${args[0]}\\right)",
    2: "\\left(\\left(${args[0]}\\right)${args[1]}\\right)"
  },
  string: {
    0: '\\mathtt{""}',
    1: "\\mathrm{string}\\left(${args[0]}\\right)"
  },
  bignumber: {
    0: "0",
    1: "\\left(${args[0]}\\right)"
  },
  complex: {
    0: "0",
    1: "\\left(${args[0]}\\right)",
    2: "\\left(\\left(${args[0]}\\right)+".concat(latexSymbols.i, "\\cdot\\left(${args[1]}\\right)\\right)")
  },
  matrix: {
    0: "\\begin{bmatrix}\\end{bmatrix}",
    1: "\\left(${args[0]}\\right)",
    2: "\\left(${args[0]}\\right)"
  },
  sparse: {
    0: "\\begin{bsparse}\\end{bsparse}",
    1: "\\left(${args[0]}\\right)"
  },
  unit: {
    1: "\\left(${args[0]}\\right)",
    2: "\\left(\\left(${args[0]}\\right)${args[1]}\\right)"
  }
};
var defaultTemplate = "\\mathrm{${name}}\\left(${args}\\right)";
var latexUnits = {
  deg: "^\\circ"
};
function escapeLatex(string2) {
  return (0, import_escape_latex.default)(string2, {
    preserveFormatting: true
  });
}
function toSymbol(name314, isUnit2) {
  isUnit2 = typeof isUnit2 === "undefined" ? false : isUnit2;
  if (isUnit2) {
    if (hasOwnProperty(latexUnits, name314)) {
      return latexUnits[name314];
    }
    return "\\mathrm{" + escapeLatex(name314) + "}";
  }
  if (hasOwnProperty(latexSymbols, name314)) {
    return latexSymbols[name314];
  }
  return escapeLatex(name314);
}

// node_modules/mathjs/lib/esm/expression/node/ConstantNode.js
var name212 = "ConstantNode";
var dependencies212 = ["Node"];
var createConstantNode = factory(name212, dependencies212, (_ref) => {
  var {
    Node: Node2
  } = _ref;
  class ConstantNode2 extends Node2 {
    /**
     * A ConstantNode holds a constant value like a number or string.
     *
     * Usage:
     *
     *     new ConstantNode(2.3)
     *     new ConstantNode('hello')
     *
     * @param {*} value    Value can be any type (number, BigNumber, string, ...)
     * @constructor ConstantNode
     * @extends {Node}
     */
    constructor(value) {
      super();
      this.value = value;
    }
    get type() {
      return name212;
    }
    get isConstantNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      var value = this.value;
      return function evalConstantNode() {
        return value;
      };
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
    }
    /**
     * Create a new ConstantNode with children produced by the given callback.
     * Trivial because there are no children.
     * @param {function(child: Node, path: string, parent: Node) : Node} callback
     * @returns {ConstantNode} Returns a clone of the node
     */
    map(callback) {
      return this.clone();
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {ConstantNode}
     */
    clone() {
      return new ConstantNode2(this.value);
    }
    /**
     * Get string representation
     * @param {Object} options
     * @return {string} str
     */
    _toString(options) {
      return format3(this.value, options);
    }
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string} str
     */
    _toHTML(options) {
      var value = this._toString(options);
      switch (typeOf(this.value)) {
        case "number":
        case "BigNumber":
        case "Fraction":
          return '<span class="math-number">' + value + "</span>";
        case "string":
          return '<span class="math-string">' + value + "</span>";
        case "boolean":
          return '<span class="math-boolean">' + value + "</span>";
        case "null":
          return '<span class="math-null-symbol">' + value + "</span>";
        case "undefined":
          return '<span class="math-undefined">' + value + "</span>";
        default:
          return '<span class="math-symbol">' + value + "</span>";
      }
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name212,
        value: this.value
      };
    }
    /**
     * Instantiate a ConstantNode from its JSON representation
     * @param {Object} json  An object structured like
     *                       `{"mathjs": "SymbolNode", value: 2.3}`,
     *                       where mathjs is optional
     * @returns {ConstantNode}
     */
    static fromJSON(json) {
      return new ConstantNode2(json.value);
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string} str
     */
    _toTex(options) {
      var value = this._toString(options);
      var type = typeOf(this.value);
      switch (type) {
        case "string":
          return "\\mathtt{" + escapeLatex(value) + "}";
        case "number":
        case "BigNumber": {
          var finite = type === "BigNumber" ? this.value.isFinite() : isFinite(this.value);
          if (!finite) {
            return this.value.valueOf() < 0 ? "-\\infty" : "\\infty";
          }
          var index2 = value.toLowerCase().indexOf("e");
          if (index2 !== -1) {
            return value.substring(0, index2) + "\\cdot10^{" + value.substring(index2 + 1) + "}";
          }
          return value;
        }
        case "Fraction":
          return this.value.toLatex();
        default:
          return value;
      }
    }
  }
  _defineProperty(ConstantNode2, "name", name212);
  return ConstantNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/node/FunctionAssignmentNode.js
var name213 = "FunctionAssignmentNode";
var dependencies213 = ["typed", "Node"];
var createFunctionAssignmentNode = factory(name213, dependencies213, (_ref) => {
  var {
    typed: typed2,
    Node: Node2
  } = _ref;
  function needParenthesis(node, parenthesis, implicit) {
    var precedence = getPrecedence(node, parenthesis, implicit);
    var exprPrecedence = getPrecedence(node.expr, parenthesis, implicit);
    return parenthesis === "all" || exprPrecedence !== null && exprPrecedence <= precedence;
  }
  class FunctionAssignmentNode2 extends Node2 {
    /**
     * @constructor FunctionAssignmentNode
     * @extends {Node}
     * Function assignment
     *
     * @param {string} name           Function name
     * @param {string[] | Array.<{name: string, type: string}>} params
     *                                Array with function parameter names, or an
     *                                array with objects containing the name
     *                                and type of the parameter
     * @param {Node} expr             The function expression
     */
    constructor(name314, params, expr) {
      super();
      if (typeof name314 !== "string") {
        throw new TypeError('String expected for parameter "name"');
      }
      if (!Array.isArray(params)) {
        throw new TypeError('Array containing strings or objects expected for parameter "params"');
      }
      if (!isNode(expr)) {
        throw new TypeError('Node expected for parameter "expr"');
      }
      if (keywords.has(name314)) {
        throw new Error('Illegal function name, "' + name314 + '" is a reserved keyword');
      }
      var paramNames = /* @__PURE__ */ new Set();
      for (var param of params) {
        var _name = typeof param === "string" ? param : param.name;
        if (paramNames.has(_name)) {
          throw new Error('Duplicate parameter name "'.concat(_name, '"'));
        } else {
          paramNames.add(_name);
        }
      }
      this.name = name314;
      this.params = params.map(function(param2) {
        return param2 && param2.name || param2;
      });
      this.types = params.map(function(param2) {
        return param2 && param2.type || "any";
      });
      this.expr = expr;
    }
    get type() {
      return name213;
    }
    get isFunctionAssignmentNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      var childArgNames = Object.create(argNames);
      forEach(this.params, function(param) {
        childArgNames[param] = true;
      });
      var evalExpr = this.expr._compile(math2, childArgNames);
      var name314 = this.name;
      var params = this.params;
      var signature2 = join(this.types, ",");
      var syntax = name314 + "(" + join(this.params, ", ") + ")";
      return function evalFunctionAssignmentNode(scope, args, context) {
        var signatures = {};
        signatures[signature2] = function() {
          var childArgs = Object.create(args);
          for (var i2 = 0; i2 < params.length; i2++) {
            childArgs[params[i2]] = arguments[i2];
          }
          return evalExpr(scope, childArgs, context);
        };
        var fn = typed2(name314, signatures);
        fn.syntax = syntax;
        scope.set(name314, fn);
        return fn;
      };
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      callback(this.expr, "expr", this);
    }
    /**
     * Create a new FunctionAssignmentNode whose children are the results of
     * calling the provided callback function for each child of the original
     * node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {FunctionAssignmentNode} Returns a transformed copy of the node
     */
    map(callback) {
      var expr = this._ifNode(callback(this.expr, "expr", this));
      return new FunctionAssignmentNode2(this.name, this.params.slice(0), expr);
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {FunctionAssignmentNode}
     */
    clone() {
      return new FunctionAssignmentNode2(this.name, this.params.slice(0), this.expr);
    }
    /**
     * get string representation
     * @param {Object} options
     * @return {string} str
     */
    _toString(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var expr = this.expr.toString(options);
      if (needParenthesis(this, parenthesis, options && options.implicit)) {
        expr = "(" + expr + ")";
      }
      return this.name + "(" + this.params.join(", ") + ") = " + expr;
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      var types = this.types;
      return {
        mathjs: name213,
        name: this.name,
        params: this.params.map(function(param, index2) {
          return {
            name: param,
            type: types[index2]
          };
        }),
        expr: this.expr
      };
    }
    /**
     * Instantiate an FunctionAssignmentNode from its JSON representation
     * @param {Object} json
     *     An object structured like
     *     ```
     *     {"mathjs": "FunctionAssignmentNode",
     *      name: ..., params: ..., expr: ...}
     *     ```
     *     where mathjs is optional
     * @returns {FunctionAssignmentNode}
     */
    static fromJSON(json) {
      return new FunctionAssignmentNode2(json.name, json.params, json.expr);
    }
    /**
     * get HTML representation
     * @param {Object} options
     * @return {string} str
     */
    _toHTML(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var params = [];
      for (var i2 = 0; i2 < this.params.length; i2++) {
        params.push('<span class="math-symbol math-parameter">' + escape2(this.params[i2]) + "</span>");
      }
      var expr = this.expr.toHTML(options);
      if (needParenthesis(this, parenthesis, options && options.implicit)) {
        expr = '<span class="math-parenthesis math-round-parenthesis">(</span>' + expr + '<span class="math-parenthesis math-round-parenthesis">)</span>';
      }
      return '<span class="math-function">' + escape2(this.name) + '</span><span class="math-parenthesis math-round-parenthesis">(</span>' + params.join('<span class="math-separator">,</span>') + '<span class="math-parenthesis math-round-parenthesis">)</span><span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>' + expr;
    }
    /**
     * get LaTeX representation
     * @param {Object} options
     * @return {string} str
     */
    _toTex(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var expr = this.expr.toTex(options);
      if (needParenthesis(this, parenthesis, options && options.implicit)) {
        expr = "\\left(".concat(expr, "\\right)");
      }
      return "\\mathrm{" + this.name + "}\\left(" + this.params.map(toSymbol).join(",") + "\\right)=" + expr;
    }
  }
  _defineProperty(FunctionAssignmentNode2, "name", name213);
  return FunctionAssignmentNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/node/IndexNode.js
var name214 = "IndexNode";
var dependencies214 = ["Node", "size"];
var createIndexNode = factory(name214, dependencies214, (_ref) => {
  var {
    Node: Node2,
    size: size2
  } = _ref;
  class IndexNode2 extends Node2 {
    /**
     * @constructor IndexNode
     * @extends Node
     *
     * Describes a subset of a matrix or an object property.
     * Cannot be used on its own, needs to be used within an AccessorNode or
     * AssignmentNode.
     *
     * @param {Node[]} dimensions
     * @param {boolean} [dotNotation=false]
     *     Optional property describing whether this index was written using dot
     *     notation like `a.b`, or using bracket notation like `a["b"]`
     *     (which is the default). This property is used for string conversion.
     */
    constructor(dimensions, dotNotation) {
      super();
      this.dimensions = dimensions;
      this.dotNotation = dotNotation || false;
      if (!Array.isArray(dimensions) || !dimensions.every(isNode)) {
        throw new TypeError('Array containing Nodes expected for parameter "dimensions"');
      }
      if (this.dotNotation && !this.isObjectProperty()) {
        throw new Error("dotNotation only applicable for object properties");
      }
    }
    get type() {
      return name214;
    }
    get isIndexNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      var evalDimensions = map(this.dimensions, function(dimension, i2) {
        var needsEnd = dimension.filter((node) => node.isSymbolNode && node.name === "end").length > 0;
        if (needsEnd) {
          var childArgNames = Object.create(argNames);
          childArgNames.end = true;
          var _evalDimension = dimension._compile(math2, childArgNames);
          return function evalDimension(scope, args, context) {
            if (!isMatrix(context) && !isArray(context) && !isString(context)) {
              throw new TypeError('Cannot resolve "end": context must be a Matrix, Array, or string but is ' + typeOf(context));
            }
            var s = size2(context).valueOf();
            var childArgs = Object.create(args);
            childArgs.end = s[i2];
            return _evalDimension(scope, childArgs, context);
          };
        } else {
          return dimension._compile(math2, argNames);
        }
      });
      var index2 = getSafeProperty(math2, "index");
      return function evalIndexNode(scope, args, context) {
        var dimensions = map(evalDimensions, function(evalDimension) {
          return evalDimension(scope, args, context);
        });
        return index2(...dimensions);
      };
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      for (var i2 = 0; i2 < this.dimensions.length; i2++) {
        callback(this.dimensions[i2], "dimensions[" + i2 + "]", this);
      }
    }
    /**
     * Create a new IndexNode whose children are the results of calling
     * the provided callback function for each child of the original node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {IndexNode} Returns a transformed copy of the node
     */
    map(callback) {
      var dimensions = [];
      for (var i2 = 0; i2 < this.dimensions.length; i2++) {
        dimensions[i2] = this._ifNode(callback(this.dimensions[i2], "dimensions[" + i2 + "]", this));
      }
      return new IndexNode2(dimensions, this.dotNotation);
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {IndexNode}
     */
    clone() {
      return new IndexNode2(this.dimensions.slice(0), this.dotNotation);
    }
    /**
     * Test whether this IndexNode contains a single property name
     * @return {boolean}
     */
    isObjectProperty() {
      return this.dimensions.length === 1 && isConstantNode(this.dimensions[0]) && typeof this.dimensions[0].value === "string";
    }
    /**
     * Returns the property name if IndexNode contains a property.
     * If not, returns null.
     * @return {string | null}
     */
    getObjectProperty() {
      return this.isObjectProperty() ? this.dimensions[0].value : null;
    }
    /**
     * Get string representation
     * @param {Object} options
     * @return {string} str
     */
    _toString(options) {
      return this.dotNotation ? "." + this.getObjectProperty() : "[" + this.dimensions.join(", ") + "]";
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name214,
        dimensions: this.dimensions,
        dotNotation: this.dotNotation
      };
    }
    /**
     * Instantiate an IndexNode from its JSON representation
     * @param {Object} json
     *     An object structured like
     *     `{"mathjs": "IndexNode", dimensions: [...], dotNotation: false}`,
     *     where mathjs is optional
     * @returns {IndexNode}
     */
    static fromJSON(json) {
      return new IndexNode2(json.dimensions, json.dotNotation);
    }
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string} str
     */
    _toHTML(options) {
      var dimensions = [];
      for (var i2 = 0; i2 < this.dimensions.length; i2++) {
        dimensions[i2] = this.dimensions[i2].toHTML();
      }
      if (this.dotNotation) {
        return '<span class="math-operator math-accessor-operator">.</span><span class="math-symbol math-property">' + escape2(this.getObjectProperty()) + "</span>";
      } else {
        return '<span class="math-parenthesis math-square-parenthesis">[</span>' + dimensions.join('<span class="math-separator">,</span>') + '<span class="math-parenthesis math-square-parenthesis">]</span>';
      }
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string} str
     */
    _toTex(options) {
      var dimensions = this.dimensions.map(function(range3) {
        return range3.toTex(options);
      });
      return this.dotNotation ? "." + this.getObjectProperty() : "_{" + dimensions.join(",") + "}";
    }
  }
  _defineProperty(IndexNode2, "name", name214);
  return IndexNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/node/ObjectNode.js
var name215 = "ObjectNode";
var dependencies215 = ["Node"];
var createObjectNode = factory(name215, dependencies215, (_ref) => {
  var {
    Node: Node2
  } = _ref;
  class ObjectNode2 extends Node2 {
    /**
     * @constructor ObjectNode
     * @extends {Node}
     * Holds an object with keys/values
     * @param {Object.<string, Node>} [properties]   object with key/value pairs
     */
    constructor(properties2) {
      super();
      this.properties = properties2 || {};
      if (properties2) {
        if (!(typeof properties2 === "object") || !Object.keys(properties2).every(function(key) {
          return isNode(properties2[key]);
        })) {
          throw new TypeError("Object containing Nodes expected");
        }
      }
    }
    get type() {
      return name215;
    }
    get isObjectNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      var evalEntries = {};
      for (var key in this.properties) {
        if (hasOwnProperty(this.properties, key)) {
          var stringifiedKey = stringify(key);
          var parsedKey = JSON.parse(stringifiedKey);
          var prop = getSafeProperty(this.properties, key);
          evalEntries[parsedKey] = prop._compile(math2, argNames);
        }
      }
      return function evalObjectNode(scope, args, context) {
        var obj = {};
        for (var _key in evalEntries) {
          if (hasOwnProperty(evalEntries, _key)) {
            obj[_key] = evalEntries[_key](scope, args, context);
          }
        }
        return obj;
      };
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      for (var key in this.properties) {
        if (hasOwnProperty(this.properties, key)) {
          callback(this.properties[key], "properties[" + stringify(key) + "]", this);
        }
      }
    }
    /**
     * Create a new ObjectNode whose children are the results of calling
     * the provided callback function for each child of the original node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {ObjectNode} Returns a transformed copy of the node
     */
    map(callback) {
      var properties2 = {};
      for (var key in this.properties) {
        if (hasOwnProperty(this.properties, key)) {
          properties2[key] = this._ifNode(callback(this.properties[key], "properties[" + stringify(key) + "]", this));
        }
      }
      return new ObjectNode2(properties2);
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {ObjectNode}
     */
    clone() {
      var properties2 = {};
      for (var key in this.properties) {
        if (hasOwnProperty(this.properties, key)) {
          properties2[key] = this.properties[key];
        }
      }
      return new ObjectNode2(properties2);
    }
    /**
     * Get string representation
     * @param {Object} options
     * @return {string} str
     * @override
     */
    _toString(options) {
      var entries = [];
      for (var key in this.properties) {
        if (hasOwnProperty(this.properties, key)) {
          entries.push(stringify(key) + ": " + this.properties[key].toString(options));
        }
      }
      return "{" + entries.join(", ") + "}";
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name215,
        properties: this.properties
      };
    }
    /**
     * Instantiate an OperatorNode from its JSON representation
     * @param {Object} json  An object structured like
     *                       `{"mathjs": "ObjectNode", "properties": {...}}`,
     *                       where mathjs is optional
     * @returns {ObjectNode}
     */
    static fromJSON(json) {
      return new ObjectNode2(json.properties);
    }
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string} str
     * @override
     */
    _toHTML(options) {
      var entries = [];
      for (var key in this.properties) {
        if (hasOwnProperty(this.properties, key)) {
          entries.push('<span class="math-symbol math-property">' + escape2(key) + '</span><span class="math-operator math-assignment-operator math-property-assignment-operator math-binary-operator">:</span>' + this.properties[key].toHTML(options));
        }
      }
      return '<span class="math-parenthesis math-curly-parenthesis">{</span>' + entries.join('<span class="math-separator">,</span>') + '<span class="math-parenthesis math-curly-parenthesis">}</span>';
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string} str
     */
    _toTex(options) {
      var entries = [];
      for (var key in this.properties) {
        if (hasOwnProperty(this.properties, key)) {
          entries.push("\\mathbf{" + key + ":} & " + this.properties[key].toTex(options) + "\\\\");
        }
      }
      var tex = "\\left\\{\\begin{array}{ll}" + entries.join("\n") + "\\end{array}\\right\\}";
      return tex;
    }
  }
  _defineProperty(ObjectNode2, "name", name215);
  return ObjectNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/utils/scope.js
function createSubScope(parentScope, args) {
  return new PartitionedMap(parentScope, new ObjectWrappingMap(args), new Set(Object.keys(args)));
}

// node_modules/mathjs/lib/esm/expression/node/OperatorNode.js
var name216 = "OperatorNode";
var dependencies216 = ["Node"];
var createOperatorNode = factory(name216, dependencies216, (_ref) => {
  var {
    Node: Node2
  } = _ref;
  function startsWithConstant(expr, parenthesis) {
    var curNode = expr;
    if (parenthesis === "auto") {
      while (isParenthesisNode(curNode)) curNode = curNode.content;
    }
    if (isConstantNode(curNode)) return true;
    if (isOperatorNode(curNode)) {
      return startsWithConstant(curNode.args[0], parenthesis);
    }
    return false;
  }
  function calculateNecessaryParentheses(root, parenthesis, implicit, args, latex) {
    var precedence = getPrecedence(root, parenthesis, implicit);
    var associativity = getAssociativity(root, parenthesis);
    if (parenthesis === "all" || args.length > 2 && root.getIdentifier() !== "OperatorNode:add" && root.getIdentifier() !== "OperatorNode:multiply") {
      return args.map(function(arg2) {
        switch (arg2.getContent().type) {
          case "ArrayNode":
          case "ConstantNode":
          case "SymbolNode":
          case "ParenthesisNode":
            return false;
          default:
            return true;
        }
      });
    }
    var result;
    switch (args.length) {
      case 0:
        result = [];
        break;
      case 1:
        {
          var operandPrecedence = getPrecedence(args[0], parenthesis, implicit, root);
          if (latex && operandPrecedence !== null) {
            var operandIdentifier;
            var rootIdentifier;
            if (parenthesis === "keep") {
              operandIdentifier = args[0].getIdentifier();
              rootIdentifier = root.getIdentifier();
            } else {
              operandIdentifier = args[0].getContent().getIdentifier();
              rootIdentifier = root.getContent().getIdentifier();
            }
            if (properties[precedence][rootIdentifier].latexLeftParens === false) {
              result = [false];
              break;
            }
            if (properties[operandPrecedence][operandIdentifier].latexParens === false) {
              result = [false];
              break;
            }
          }
          if (operandPrecedence === null) {
            result = [false];
            break;
          }
          if (operandPrecedence <= precedence) {
            result = [true];
            break;
          }
          result = [false];
        }
        break;
      case 2:
        {
          var lhsParens;
          var lhsPrecedence = getPrecedence(args[0], parenthesis, implicit, root);
          var assocWithLhs = isAssociativeWith(root, args[0], parenthesis);
          if (lhsPrecedence === null) {
            lhsParens = false;
          } else if (lhsPrecedence === precedence && associativity === "right" && !assocWithLhs) {
            lhsParens = true;
          } else if (lhsPrecedence < precedence) {
            lhsParens = true;
          } else {
            lhsParens = false;
          }
          var rhsParens;
          var rhsPrecedence = getPrecedence(args[1], parenthesis, implicit, root);
          var assocWithRhs = isAssociativeWith(root, args[1], parenthesis);
          if (rhsPrecedence === null) {
            rhsParens = false;
          } else if (rhsPrecedence === precedence && associativity === "left" && !assocWithRhs) {
            rhsParens = true;
          } else if (rhsPrecedence < precedence) {
            rhsParens = true;
          } else {
            rhsParens = false;
          }
          if (latex) {
            var _rootIdentifier;
            var lhsIdentifier;
            var rhsIdentifier;
            if (parenthesis === "keep") {
              _rootIdentifier = root.getIdentifier();
              lhsIdentifier = root.args[0].getIdentifier();
              rhsIdentifier = root.args[1].getIdentifier();
            } else {
              _rootIdentifier = root.getContent().getIdentifier();
              lhsIdentifier = root.args[0].getContent().getIdentifier();
              rhsIdentifier = root.args[1].getContent().getIdentifier();
            }
            if (lhsPrecedence !== null) {
              if (properties[precedence][_rootIdentifier].latexLeftParens === false) {
                lhsParens = false;
              }
              if (properties[lhsPrecedence][lhsIdentifier].latexParens === false) {
                lhsParens = false;
              }
            }
            if (rhsPrecedence !== null) {
              if (properties[precedence][_rootIdentifier].latexRightParens === false) {
                rhsParens = false;
              }
              if (properties[rhsPrecedence][rhsIdentifier].latexParens === false) {
                rhsParens = false;
              }
            }
          }
          result = [lhsParens, rhsParens];
        }
        break;
      default:
        if (root.getIdentifier() === "OperatorNode:add" || root.getIdentifier() === "OperatorNode:multiply") {
          result = args.map(function(arg2) {
            var argPrecedence = getPrecedence(arg2, parenthesis, implicit, root);
            var assocWithArg = isAssociativeWith(root, arg2, parenthesis);
            var argAssociativity = getAssociativity(arg2, parenthesis);
            if (argPrecedence === null) {
              return false;
            } else if (precedence === argPrecedence && associativity === argAssociativity && !assocWithArg) {
              return true;
            } else if (argPrecedence < precedence) {
              return true;
            }
            return false;
          });
        }
        break;
    }
    if (args.length >= 2 && root.getIdentifier() === "OperatorNode:multiply" && root.implicit && parenthesis !== "all" && implicit === "hide") {
      for (var i2 = 1; i2 < result.length; ++i2) {
        if (startsWithConstant(args[i2], parenthesis) && !result[i2 - 1] && (parenthesis !== "keep" || !isParenthesisNode(args[i2 - 1]))) {
          result[i2] = true;
        }
      }
    }
    return result;
  }
  class OperatorNode2 extends Node2 {
    /**
     * @constructor OperatorNode
     * @extends {Node}
     * An operator with two arguments, like 2+3
     *
     * @param {string} op           Operator name, for example '+'
     * @param {string} fn           Function name, for example 'add'
     * @param {Node[]} args         Operator arguments
     * @param {boolean} [implicit]  Is this an implicit multiplication?
     * @param {boolean} [isPercentage] Is this an percentage Operation?
     */
    constructor(op, fn, args, implicit, isPercentage) {
      super();
      if (typeof op !== "string") {
        throw new TypeError('string expected for parameter "op"');
      }
      if (typeof fn !== "string") {
        throw new TypeError('string expected for parameter "fn"');
      }
      if (!Array.isArray(args) || !args.every(isNode)) {
        throw new TypeError('Array containing Nodes expected for parameter "args"');
      }
      this.implicit = implicit === true;
      this.isPercentage = isPercentage === true;
      this.op = op;
      this.fn = fn;
      this.args = args || [];
    }
    get type() {
      return name216;
    }
    get isOperatorNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      if (typeof this.fn !== "string" || !isSafeMethod(math2, this.fn)) {
        if (!math2[this.fn]) {
          throw new Error("Function " + this.fn + ' missing in provided namespace "math"');
        } else {
          throw new Error('No access to function "' + this.fn + '"');
        }
      }
      var fn = getSafeProperty(math2, this.fn);
      var evalArgs = map(this.args, function(arg2) {
        return arg2._compile(math2, argNames);
      });
      if (typeof fn === "function" && fn.rawArgs === true) {
        var rawArgs = this.args;
        return function evalOperatorNode(scope, args, context) {
          return fn(rawArgs, math2, createSubScope(scope, args));
        };
      } else if (evalArgs.length === 1) {
        var evalArg0 = evalArgs[0];
        return function evalOperatorNode(scope, args, context) {
          return fn(evalArg0(scope, args, context));
        };
      } else if (evalArgs.length === 2) {
        var _evalArg = evalArgs[0];
        var evalArg1 = evalArgs[1];
        return function evalOperatorNode(scope, args, context) {
          return fn(_evalArg(scope, args, context), evalArg1(scope, args, context));
        };
      } else {
        return function evalOperatorNode(scope, args, context) {
          return fn.apply(null, map(evalArgs, function(evalArg) {
            return evalArg(scope, args, context);
          }));
        };
      }
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      for (var i2 = 0; i2 < this.args.length; i2++) {
        callback(this.args[i2], "args[" + i2 + "]", this);
      }
    }
    /**
     * Create a new OperatorNode whose children are the results of calling
     * the provided callback function for each child of the original node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {OperatorNode} Returns a transformed copy of the node
     */
    map(callback) {
      var args = [];
      for (var i2 = 0; i2 < this.args.length; i2++) {
        args[i2] = this._ifNode(callback(this.args[i2], "args[" + i2 + "]", this));
      }
      return new OperatorNode2(this.op, this.fn, args, this.implicit, this.isPercentage);
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {OperatorNode}
     */
    clone() {
      return new OperatorNode2(this.op, this.fn, this.args.slice(0), this.implicit, this.isPercentage);
    }
    /**
     * Check whether this is an unary OperatorNode:
     * has exactly one argument, like `-a`.
     * @return {boolean}
     *     Returns true when an unary operator node, false otherwise.
     */
    isUnary() {
      return this.args.length === 1;
    }
    /**
     * Check whether this is a binary OperatorNode:
     * has exactly two arguments, like `a + b`.
     * @return {boolean}
     *     Returns true when a binary operator node, false otherwise.
     */
    isBinary() {
      return this.args.length === 2;
    }
    /**
     * Get string representation.
     * @param {Object} options
     * @return {string} str
     */
    _toString(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var implicit = options && options.implicit ? options.implicit : "hide";
      var args = this.args;
      var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, false);
      if (args.length === 1) {
        var assoc = getAssociativity(this, parenthesis);
        var operand = args[0].toString(options);
        if (parens[0]) {
          operand = "(" + operand + ")";
        }
        var opIsNamed = /[a-zA-Z]+/.test(this.op);
        if (assoc === "right") {
          return this.op + (opIsNamed ? " " : "") + operand;
        } else if (assoc === "left") {
          return operand + (opIsNamed ? " " : "") + this.op;
        }
        return operand + this.op;
      } else if (args.length === 2) {
        var lhs = args[0].toString(options);
        var rhs = args[1].toString(options);
        if (parens[0]) {
          lhs = "(" + lhs + ")";
        }
        if (parens[1]) {
          rhs = "(" + rhs + ")";
        }
        if (this.implicit && this.getIdentifier() === "OperatorNode:multiply" && implicit === "hide") {
          return lhs + " " + rhs;
        }
        return lhs + " " + this.op + " " + rhs;
      } else if (args.length > 2 && (this.getIdentifier() === "OperatorNode:add" || this.getIdentifier() === "OperatorNode:multiply")) {
        var stringifiedArgs = args.map(function(arg2, index2) {
          arg2 = arg2.toString(options);
          if (parens[index2]) {
            arg2 = "(" + arg2 + ")";
          }
          return arg2;
        });
        if (this.implicit && this.getIdentifier() === "OperatorNode:multiply" && implicit === "hide") {
          return stringifiedArgs.join(" ");
        }
        return stringifiedArgs.join(" " + this.op + " ");
      } else {
        return this.fn + "(" + this.args.join(", ") + ")";
      }
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name216,
        op: this.op,
        fn: this.fn,
        args: this.args,
        implicit: this.implicit,
        isPercentage: this.isPercentage
      };
    }
    /**
     * Instantiate an OperatorNode from its JSON representation
     * @param {Object} json
     *     An object structured like
     *     ```
     *     {"mathjs": "OperatorNode",
     *      "op": "+", "fn": "add", "args": [...],
     *      "implicit": false,
     *      "isPercentage":false}
     *     ```
     *     where mathjs is optional
     * @returns {OperatorNode}
     */
    static fromJSON(json) {
      return new OperatorNode2(json.op, json.fn, json.args, json.implicit, json.isPercentage);
    }
    /**
     * Get HTML representation.
     * @param {Object} options
     * @return {string} str
     */
    _toHTML(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var implicit = options && options.implicit ? options.implicit : "hide";
      var args = this.args;
      var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, false);
      if (args.length === 1) {
        var assoc = getAssociativity(this, parenthesis);
        var operand = args[0].toHTML(options);
        if (parens[0]) {
          operand = '<span class="math-parenthesis math-round-parenthesis">(</span>' + operand + '<span class="math-parenthesis math-round-parenthesis">)</span>';
        }
        if (assoc === "right") {
          return '<span class="math-operator math-unary-operator math-lefthand-unary-operator">' + escape2(this.op) + "</span>" + operand;
        } else {
          return operand + '<span class="math-operator math-unary-operator math-righthand-unary-operator">' + escape2(this.op) + "</span>";
        }
      } else if (args.length === 2) {
        var lhs = args[0].toHTML(options);
        var rhs = args[1].toHTML(options);
        if (parens[0]) {
          lhs = '<span class="math-parenthesis math-round-parenthesis">(</span>' + lhs + '<span class="math-parenthesis math-round-parenthesis">)</span>';
        }
        if (parens[1]) {
          rhs = '<span class="math-parenthesis math-round-parenthesis">(</span>' + rhs + '<span class="math-parenthesis math-round-parenthesis">)</span>';
        }
        if (this.implicit && this.getIdentifier() === "OperatorNode:multiply" && implicit === "hide") {
          return lhs + '<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>' + rhs;
        }
        return lhs + '<span class="math-operator math-binary-operator math-explicit-binary-operator">' + escape2(this.op) + "</span>" + rhs;
      } else {
        var stringifiedArgs = args.map(function(arg2, index2) {
          arg2 = arg2.toHTML(options);
          if (parens[index2]) {
            arg2 = '<span class="math-parenthesis math-round-parenthesis">(</span>' + arg2 + '<span class="math-parenthesis math-round-parenthesis">)</span>';
          }
          return arg2;
        });
        if (args.length > 2 && (this.getIdentifier() === "OperatorNode:add" || this.getIdentifier() === "OperatorNode:multiply")) {
          if (this.implicit && this.getIdentifier() === "OperatorNode:multiply" && implicit === "hide") {
            return stringifiedArgs.join('<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>');
          }
          return stringifiedArgs.join('<span class="math-operator math-binary-operator math-explicit-binary-operator">' + escape2(this.op) + "</span>");
        } else {
          return '<span class="math-function">' + escape2(this.fn) + '</span><span class="math-paranthesis math-round-parenthesis">(</span>' + stringifiedArgs.join('<span class="math-separator">,</span>') + '<span class="math-paranthesis math-round-parenthesis">)</span>';
        }
      }
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string} str
     */
    _toTex(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var implicit = options && options.implicit ? options.implicit : "hide";
      var args = this.args;
      var parens = calculateNecessaryParentheses(this, parenthesis, implicit, args, true);
      var op = latexOperators[this.fn];
      op = typeof op === "undefined" ? this.op : op;
      if (args.length === 1) {
        var assoc = getAssociativity(this, parenthesis);
        var operand = args[0].toTex(options);
        if (parens[0]) {
          operand = "\\left(".concat(operand, "\\right)");
        }
        if (assoc === "right") {
          return op + operand;
        } else if (assoc === "left") {
          return operand + op;
        }
        return operand + op;
      } else if (args.length === 2) {
        var lhs = args[0];
        var lhsTex = lhs.toTex(options);
        if (parens[0]) {
          lhsTex = "\\left(".concat(lhsTex, "\\right)");
        }
        var rhs = args[1];
        var rhsTex = rhs.toTex(options);
        if (parens[1]) {
          rhsTex = "\\left(".concat(rhsTex, "\\right)");
        }
        var lhsIdentifier;
        if (parenthesis === "keep") {
          lhsIdentifier = lhs.getIdentifier();
        } else {
          lhsIdentifier = lhs.getContent().getIdentifier();
        }
        switch (this.getIdentifier()) {
          case "OperatorNode:divide":
            return op + "{" + lhsTex + "}{" + rhsTex + "}";
          case "OperatorNode:pow":
            lhsTex = "{" + lhsTex + "}";
            rhsTex = "{" + rhsTex + "}";
            switch (lhsIdentifier) {
              case "ConditionalNode":
              case "OperatorNode:divide":
                lhsTex = "\\left(".concat(lhsTex, "\\right)");
            }
            break;
          case "OperatorNode:multiply":
            if (this.implicit && implicit === "hide") {
              return lhsTex + "~" + rhsTex;
            }
        }
        return lhsTex + op + rhsTex;
      } else if (args.length > 2 && (this.getIdentifier() === "OperatorNode:add" || this.getIdentifier() === "OperatorNode:multiply")) {
        var texifiedArgs = args.map(function(arg2, index2) {
          arg2 = arg2.toTex(options);
          if (parens[index2]) {
            arg2 = "\\left(".concat(arg2, "\\right)");
          }
          return arg2;
        });
        if (this.getIdentifier() === "OperatorNode:multiply" && this.implicit && implicit === "hide") {
          return texifiedArgs.join("~");
        }
        return texifiedArgs.join(op);
      } else {
        return "\\mathrm{" + this.fn + "}\\left(" + args.map(function(arg2) {
          return arg2.toTex(options);
        }).join(",") + "\\right)";
      }
    }
    /**
     * Get identifier.
     * @return {string}
     */
    getIdentifier() {
      return this.type + ":" + this.fn;
    }
  }
  _defineProperty(OperatorNode2, "name", name216);
  return OperatorNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/node/ParenthesisNode.js
var name217 = "ParenthesisNode";
var dependencies217 = ["Node"];
var createParenthesisNode = factory(name217, dependencies217, (_ref) => {
  var {
    Node: Node2
  } = _ref;
  class ParenthesisNode2 extends Node2 {
    /**
     * @constructor ParenthesisNode
     * @extends {Node}
     * A parenthesis node describes manual parenthesis from the user input
     * @param {Node} content
     * @extends {Node}
     */
    constructor(content) {
      super();
      if (!isNode(content)) {
        throw new TypeError('Node expected for parameter "content"');
      }
      this.content = content;
    }
    get type() {
      return name217;
    }
    get isParenthesisNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      return this.content._compile(math2, argNames);
    }
    /**
     * Get the content of the current Node.
     * @return {Node} content
     * @override
     **/
    getContent() {
      return this.content.getContent();
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      callback(this.content, "content", this);
    }
    /**
     * Create a new ParenthesisNode whose child is the result of calling
     * the provided callback function on the child of this node.
     * @param {function(child: Node, path: string, parent: Node) : Node} callback
     * @returns {ParenthesisNode} Returns a clone of the node
     */
    map(callback) {
      var content = callback(this.content, "content", this);
      return new ParenthesisNode2(content);
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {ParenthesisNode}
     */
    clone() {
      return new ParenthesisNode2(this.content);
    }
    /**
     * Get string representation
     * @param {Object} options
     * @return {string} str
     * @override
     */
    _toString(options) {
      if (!options || options && !options.parenthesis || options && options.parenthesis === "keep") {
        return "(" + this.content.toString(options) + ")";
      }
      return this.content.toString(options);
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name217,
        content: this.content
      };
    }
    /**
     * Instantiate an ParenthesisNode from its JSON representation
     * @param {Object} json  An object structured like
     *                       `{"mathjs": "ParenthesisNode", "content": ...}`,
     *                       where mathjs is optional
     * @returns {ParenthesisNode}
     */
    static fromJSON(json) {
      return new ParenthesisNode2(json.content);
    }
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string} str
     * @override
     */
    _toHTML(options) {
      if (!options || options && !options.parenthesis || options && options.parenthesis === "keep") {
        return '<span class="math-parenthesis math-round-parenthesis">(</span>' + this.content.toHTML(options) + '<span class="math-parenthesis math-round-parenthesis">)</span>';
      }
      return this.content.toHTML(options);
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string} str
     * @override
     */
    _toTex(options) {
      if (!options || options && !options.parenthesis || options && options.parenthesis === "keep") {
        return "\\left(".concat(this.content.toTex(options), "\\right)");
      }
      return this.content.toTex(options);
    }
  }
  _defineProperty(ParenthesisNode2, "name", name217);
  return ParenthesisNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/node/RangeNode.js
var name218 = "RangeNode";
var dependencies218 = ["Node"];
var createRangeNode = factory(name218, dependencies218, (_ref) => {
  var {
    Node: Node2
  } = _ref;
  function calculateNecessaryParentheses(node, parenthesis, implicit) {
    var precedence = getPrecedence(node, parenthesis, implicit);
    var parens = {};
    var startPrecedence = getPrecedence(node.start, parenthesis, implicit);
    parens.start = startPrecedence !== null && startPrecedence <= precedence || parenthesis === "all";
    if (node.step) {
      var stepPrecedence = getPrecedence(node.step, parenthesis, implicit);
      parens.step = stepPrecedence !== null && stepPrecedence <= precedence || parenthesis === "all";
    }
    var endPrecedence = getPrecedence(node.end, parenthesis, implicit);
    parens.end = endPrecedence !== null && endPrecedence <= precedence || parenthesis === "all";
    return parens;
  }
  class RangeNode2 extends Node2 {
    /**
     * @constructor RangeNode
     * @extends {Node}
     * create a range
     * @param {Node} start  included lower-bound
     * @param {Node} end    included upper-bound
     * @param {Node} [step] optional step
     */
    constructor(start, end, step) {
      super();
      if (!isNode(start)) throw new TypeError("Node expected");
      if (!isNode(end)) throw new TypeError("Node expected");
      if (step && !isNode(step)) throw new TypeError("Node expected");
      if (arguments.length > 3) throw new Error("Too many arguments");
      this.start = start;
      this.end = end;
      this.step = step || null;
    }
    get type() {
      return name218;
    }
    get isRangeNode() {
      return true;
    }
    /**
     * Check whether the RangeNode needs the `end` symbol to be defined.
     * This end is the size of the Matrix in current dimension.
     * @return {boolean}
     */
    needsEnd() {
      var endSymbols = this.filter(function(node) {
        return isSymbolNode(node) && node.name === "end";
      });
      return endSymbols.length > 0;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      var range3 = math2.range;
      var evalStart = this.start._compile(math2, argNames);
      var evalEnd = this.end._compile(math2, argNames);
      if (this.step) {
        var evalStep = this.step._compile(math2, argNames);
        return function evalRangeNode(scope, args, context) {
          return range3(evalStart(scope, args, context), evalEnd(scope, args, context), evalStep(scope, args, context));
        };
      } else {
        return function evalRangeNode(scope, args, context) {
          return range3(evalStart(scope, args, context), evalEnd(scope, args, context));
        };
      }
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      callback(this.start, "start", this);
      callback(this.end, "end", this);
      if (this.step) {
        callback(this.step, "step", this);
      }
    }
    /**
     * Create a new RangeNode whose children are the results of calling
     * the provided callback function for each child of the original node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {RangeNode} Returns a transformed copy of the node
     */
    map(callback) {
      return new RangeNode2(this._ifNode(callback(this.start, "start", this)), this._ifNode(callback(this.end, "end", this)), this.step && this._ifNode(callback(this.step, "step", this)));
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {RangeNode}
     */
    clone() {
      return new RangeNode2(this.start, this.end, this.step && this.step);
    }
    /**
     * Get string representation
     * @param {Object} options
     * @return {string} str
     */
    _toString(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var parens = calculateNecessaryParentheses(this, parenthesis, options && options.implicit);
      var str;
      var start = this.start.toString(options);
      if (parens.start) {
        start = "(" + start + ")";
      }
      str = start;
      if (this.step) {
        var step = this.step.toString(options);
        if (parens.step) {
          step = "(" + step + ")";
        }
        str += ":" + step;
      }
      var end = this.end.toString(options);
      if (parens.end) {
        end = "(" + end + ")";
      }
      str += ":" + end;
      return str;
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name218,
        start: this.start,
        end: this.end,
        step: this.step
      };
    }
    /**
     * Instantiate an RangeNode from its JSON representation
     * @param {Object} json
     *     An object structured like
     *     `{"mathjs": "RangeNode", "start": ..., "end": ..., "step": ...}`,
     *     where mathjs is optional
     * @returns {RangeNode}
     */
    static fromJSON(json) {
      return new RangeNode2(json.start, json.end, json.step);
    }
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string} str
     */
    _toHTML(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var parens = calculateNecessaryParentheses(this, parenthesis, options && options.implicit);
      var str;
      var start = this.start.toHTML(options);
      if (parens.start) {
        start = '<span class="math-parenthesis math-round-parenthesis">(</span>' + start + '<span class="math-parenthesis math-round-parenthesis">)</span>';
      }
      str = start;
      if (this.step) {
        var step = this.step.toHTML(options);
        if (parens.step) {
          step = '<span class="math-parenthesis math-round-parenthesis">(</span>' + step + '<span class="math-parenthesis math-round-parenthesis">)</span>';
        }
        str += '<span class="math-operator math-range-operator">:</span>' + step;
      }
      var end = this.end.toHTML(options);
      if (parens.end) {
        end = '<span class="math-parenthesis math-round-parenthesis">(</span>' + end + '<span class="math-parenthesis math-round-parenthesis">)</span>';
      }
      str += '<span class="math-operator math-range-operator">:</span>' + end;
      return str;
    }
    /**
     * Get LaTeX representation
     * @params {Object} options
     * @return {string} str
     */
    _toTex(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var parens = calculateNecessaryParentheses(this, parenthesis, options && options.implicit);
      var str = this.start.toTex(options);
      if (parens.start) {
        str = "\\left(".concat(str, "\\right)");
      }
      if (this.step) {
        var step = this.step.toTex(options);
        if (parens.step) {
          step = "\\left(".concat(step, "\\right)");
        }
        str += ":" + step;
      }
      var end = this.end.toTex(options);
      if (parens.end) {
        end = "\\left(".concat(end, "\\right)");
      }
      str += ":" + end;
      return str;
    }
  }
  _defineProperty(RangeNode2, "name", name218);
  return RangeNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/node/RelationalNode.js
var name219 = "RelationalNode";
var dependencies219 = ["Node"];
var createRelationalNode = factory(name219, dependencies219, (_ref) => {
  var {
    Node: Node2
  } = _ref;
  var operatorMap = {
    equal: "==",
    unequal: "!=",
    smaller: "<",
    larger: ">",
    smallerEq: "<=",
    largerEq: ">="
  };
  class RelationalNode2 extends Node2 {
    /**
     * A node representing a chained conditional expression, such as 'x > y > z'
     *
     * @param {String[]} conditionals
     *     An array of conditional operators used to compare the parameters
     * @param {Node[]} params
     *     The parameters that will be compared
     *
     * @constructor RelationalNode
     * @extends {Node}
     */
    constructor(conditionals, params) {
      super();
      if (!Array.isArray(conditionals)) {
        throw new TypeError("Parameter conditionals must be an array");
      }
      if (!Array.isArray(params)) {
        throw new TypeError("Parameter params must be an array");
      }
      if (conditionals.length !== params.length - 1) {
        throw new TypeError("Parameter params must contain exactly one more element than parameter conditionals");
      }
      this.conditionals = conditionals;
      this.params = params;
    }
    get type() {
      return name219;
    }
    get isRelationalNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math2, argNames) {
      var self2 = this;
      var compiled = this.params.map((p) => p._compile(math2, argNames));
      return function evalRelationalNode(scope, args, context) {
        var evalLhs;
        var evalRhs = compiled[0](scope, args, context);
        for (var i2 = 0; i2 < self2.conditionals.length; i2++) {
          evalLhs = evalRhs;
          evalRhs = compiled[i2 + 1](scope, args, context);
          var condFn = getSafeProperty(math2, self2.conditionals[i2]);
          if (!condFn(evalLhs, evalRhs)) {
            return false;
          }
        }
        return true;
      };
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      this.params.forEach((n, i2) => callback(n, "params[" + i2 + "]", this), this);
    }
    /**
     * Create a new RelationalNode whose children are the results of calling
     * the provided callback function for each child of the original node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {RelationalNode} Returns a transformed copy of the node
     */
    map(callback) {
      return new RelationalNode2(this.conditionals.slice(), this.params.map((n, i2) => this._ifNode(callback(n, "params[" + i2 + "]", this)), this));
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {RelationalNode}
     */
    clone() {
      return new RelationalNode2(this.conditionals, this.params);
    }
    /**
     * Get string representation.
     * @param {Object} options
     * @return {string} str
     */
    _toString(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var precedence = getPrecedence(this, parenthesis, options && options.implicit);
      var paramStrings = this.params.map(function(p, index2) {
        var paramPrecedence = getPrecedence(p, parenthesis, options && options.implicit);
        return parenthesis === "all" || paramPrecedence !== null && paramPrecedence <= precedence ? "(" + p.toString(options) + ")" : p.toString(options);
      });
      var ret = paramStrings[0];
      for (var i2 = 0; i2 < this.conditionals.length; i2++) {
        ret += " " + operatorMap[this.conditionals[i2]];
        ret += " " + paramStrings[i2 + 1];
      }
      return ret;
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name219,
        conditionals: this.conditionals,
        params: this.params
      };
    }
    /**
     * Instantiate a RelationalNode from its JSON representation
     * @param {Object} json
     *     An object structured like
     *     `{"mathjs": "RelationalNode", "conditionals": ..., "params": ...}`,
     *     where mathjs is optional
     * @returns {RelationalNode}
     */
    static fromJSON(json) {
      return new RelationalNode2(json.conditionals, json.params);
    }
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string} str
     */
    _toHTML(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var precedence = getPrecedence(this, parenthesis, options && options.implicit);
      var paramStrings = this.params.map(function(p, index2) {
        var paramPrecedence = getPrecedence(p, parenthesis, options && options.implicit);
        return parenthesis === "all" || paramPrecedence !== null && paramPrecedence <= precedence ? '<span class="math-parenthesis math-round-parenthesis">(</span>' + p.toHTML(options) + '<span class="math-parenthesis math-round-parenthesis">)</span>' : p.toHTML(options);
      });
      var ret = paramStrings[0];
      for (var i2 = 0; i2 < this.conditionals.length; i2++) {
        ret += '<span class="math-operator math-binary-operator math-explicit-binary-operator">' + escape2(operatorMap[this.conditionals[i2]]) + "</span>" + paramStrings[i2 + 1];
      }
      return ret;
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string} str
     */
    _toTex(options) {
      var parenthesis = options && options.parenthesis ? options.parenthesis : "keep";
      var precedence = getPrecedence(this, parenthesis, options && options.implicit);
      var paramStrings = this.params.map(function(p, index2) {
        var paramPrecedence = getPrecedence(p, parenthesis, options && options.implicit);
        return parenthesis === "all" || paramPrecedence !== null && paramPrecedence <= precedence ? "\\left(" + p.toTex(options) + "\right)" : p.toTex(options);
      });
      var ret = paramStrings[0];
      for (var i2 = 0; i2 < this.conditionals.length; i2++) {
        ret += latexOperators[this.conditionals[i2]] + paramStrings[i2 + 1];
      }
      return ret;
    }
  }
  _defineProperty(RelationalNode2, "name", name219);
  return RelationalNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/node/SymbolNode.js
var name220 = "SymbolNode";
var dependencies220 = ["math", "?Unit", "Node"];
var createSymbolNode = factory(name220, dependencies220, (_ref) => {
  var {
    math: math2,
    Unit: Unit2,
    Node: Node2
  } = _ref;
  function isValuelessUnit(name314) {
    return Unit2 ? Unit2.isValuelessUnit(name314) : false;
  }
  class SymbolNode2 extends Node2 {
    /**
     * @constructor SymbolNode
     * @extends {Node}
     * A symbol node can hold and resolve a symbol
     * @param {string} name
     * @extends {Node}
     */
    constructor(name314) {
      super();
      if (typeof name314 !== "string") {
        throw new TypeError('String expected for parameter "name"');
      }
      this.name = name314;
    }
    get type() {
      return "SymbolNode";
    }
    get isSymbolNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math3, argNames) {
      var name314 = this.name;
      if (argNames[name314] === true) {
        return function(scope, args, context) {
          return getSafeProperty(args, name314);
        };
      } else if (name314 in math3) {
        return function(scope, args, context) {
          return scope.has(name314) ? scope.get(name314) : getSafeProperty(math3, name314);
        };
      } else {
        var isUnit2 = isValuelessUnit(name314);
        return function(scope, args, context) {
          return scope.has(name314) ? scope.get(name314) : isUnit2 ? new Unit2(null, name314) : SymbolNode2.onUndefinedSymbol(name314);
        };
      }
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
    }
    /**
     * Create a new SymbolNode with children produced by the given callback.
     * Trivial since a SymbolNode has no children
     * @param {function(child: Node, path: string, parent: Node) : Node} callback
     * @returns {SymbolNode} Returns a clone of the node
     */
    map(callback) {
      return this.clone();
    }
    /**
     * Throws an error 'Undefined symbol {name}'
     * @param {string} name
     */
    static onUndefinedSymbol(name314) {
      throw new Error("Undefined symbol " + name314);
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {SymbolNode}
     */
    clone() {
      return new SymbolNode2(this.name);
    }
    /**
     * Get string representation
     * @param {Object} options
     * @return {string} str
     * @override
     */
    _toString(options) {
      return this.name;
    }
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string} str
     * @override
     */
    _toHTML(options) {
      var name314 = escape2(this.name);
      if (name314 === "true" || name314 === "false") {
        return '<span class="math-symbol math-boolean">' + name314 + "</span>";
      } else if (name314 === "i") {
        return '<span class="math-symbol math-imaginary-symbol">' + name314 + "</span>";
      } else if (name314 === "Infinity") {
        return '<span class="math-symbol math-infinity-symbol">' + name314 + "</span>";
      } else if (name314 === "NaN") {
        return '<span class="math-symbol math-nan-symbol">' + name314 + "</span>";
      } else if (name314 === "null") {
        return '<span class="math-symbol math-null-symbol">' + name314 + "</span>";
      } else if (name314 === "undefined") {
        return '<span class="math-symbol math-undefined-symbol">' + name314 + "</span>";
      }
      return '<span class="math-symbol">' + name314 + "</span>";
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: "SymbolNode",
        name: this.name
      };
    }
    /**
     * Instantiate a SymbolNode from its JSON representation
     * @param {Object} json  An object structured like
     *                       `{"mathjs": "SymbolNode", name: "x"}`,
     *                       where mathjs is optional
     * @returns {SymbolNode}
     */
    static fromJSON(json) {
      return new SymbolNode2(json.name);
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string} str
     * @override
     */
    _toTex(options) {
      var isUnit2 = false;
      if (typeof math2[this.name] === "undefined" && isValuelessUnit(this.name)) {
        isUnit2 = true;
      }
      var symbol = toSymbol(this.name, isUnit2);
      if (symbol[0] === "\\") {
        return symbol;
      }
      return " " + symbol;
    }
  }
  return SymbolNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/node/FunctionNode.js
var name221 = "FunctionNode";
var dependencies221 = ["math", "Node", "SymbolNode"];
var createFunctionNode = factory(name221, dependencies221, (_ref) => {
  var _FunctionNode;
  var {
    math: math2,
    Node: Node2,
    SymbolNode: SymbolNode2
  } = _ref;
  var strin = (entity) => format3(entity, {
    truncate: 78
  });
  function expandTemplate(template, node, options) {
    var latex = "";
    var regex = /\$(?:\{([a-z_][a-z_0-9]*)(?:\[([0-9]+)\])?\}|\$)/gi;
    var inputPos = 0;
    var match;
    while ((match = regex.exec(template)) !== null) {
      latex += template.substring(inputPos, match.index);
      inputPos = match.index;
      if (match[0] === "$$") {
        latex += "$";
        inputPos++;
      } else {
        inputPos += match[0].length;
        var property = node[match[1]];
        if (!property) {
          throw new ReferenceError("Template: Property " + match[1] + " does not exist.");
        }
        if (match[2] === void 0) {
          switch (typeof property) {
            case "string":
              latex += property;
              break;
            case "object":
              if (isNode(property)) {
                latex += property.toTex(options);
              } else if (Array.isArray(property)) {
                latex += property.map(function(arg2, index2) {
                  if (isNode(arg2)) {
                    return arg2.toTex(options);
                  }
                  throw new TypeError("Template: " + match[1] + "[" + index2 + "] is not a Node.");
                }).join(",");
              } else {
                throw new TypeError("Template: " + match[1] + " has to be a Node, String or array of Nodes");
              }
              break;
            default:
              throw new TypeError("Template: " + match[1] + " has to be a Node, String or array of Nodes");
          }
        } else {
          if (isNode(property[match[2]] && property[match[2]])) {
            latex += property[match[2]].toTex(options);
          } else {
            throw new TypeError("Template: " + match[1] + "[" + match[2] + "] is not a Node.");
          }
        }
      }
    }
    latex += template.slice(inputPos);
    return latex;
  }
  class FunctionNode2 extends Node2 {
    /**
     * @constructor FunctionNode
     * @extends {./Node}
     * invoke a list with arguments on a node
     * @param {./Node | string} fn
     *     Item resolving to a function on which to invoke
     *     the arguments, typically a SymboNode or AccessorNode
     * @param {./Node[]} args
     */
    constructor(fn, args) {
      super();
      if (typeof fn === "string") {
        fn = new SymbolNode2(fn);
      }
      if (!isNode(fn)) throw new TypeError('Node expected as parameter "fn"');
      if (!Array.isArray(args) || !args.every(isNode)) {
        throw new TypeError('Array containing Nodes expected for parameter "args"');
      }
      this.fn = fn;
      this.args = args || [];
    }
    // readonly property name
    get name() {
      return this.fn.name || "";
    }
    get type() {
      return name221;
    }
    get isFunctionNode() {
      return true;
    }
    /**
     * Compile a node into a JavaScript function.
     * This basically pre-calculates as much as possible and only leaves open
     * calculations which depend on a dynamic scope with variables.
     * @param {Object} math     Math.js namespace with functions and constants.
     * @param {Object} argNames An object with argument names as key and `true`
     *                          as value. Used in the SymbolNode to optimize
     *                          for arguments from user assigned functions
     *                          (see FunctionAssignmentNode) or special symbols
     *                          like `end` (see IndexNode).
     * @return {function} Returns a function which can be called like:
     *                        evalNode(scope: Object, args: Object, context: *)
     */
    _compile(math3, argNames) {
      var evalArgs = this.args.map((arg2) => arg2._compile(math3, argNames));
      if (isSymbolNode(this.fn)) {
        var _name = this.fn.name;
        if (!argNames[_name]) {
          var fn = _name in math3 ? getSafeProperty(math3, _name) : void 0;
          var isRaw = typeof fn === "function" && fn.rawArgs === true;
          var resolveFn = (scope) => {
            var value;
            if (scope.has(_name)) {
              value = scope.get(_name);
            } else if (_name in math3) {
              value = getSafeProperty(math3, _name);
            } else {
              return FunctionNode2.onUndefinedFunction(_name);
            }
            if (typeof value === "function") {
              return value;
            }
            throw new TypeError("'".concat(_name, "' is not a function; its value is:\n  ").concat(strin(value)));
          };
          if (isRaw) {
            var rawArgs = this.args;
            return function evalFunctionNode(scope, args, context) {
              var fn2 = resolveFn(scope);
              return fn2(rawArgs, math3, createSubScope(scope, args));
            };
          } else {
            switch (evalArgs.length) {
              case 0:
                return function evalFunctionNode(scope, args, context) {
                  var fn2 = resolveFn(scope);
                  return fn2();
                };
              case 1:
                return function evalFunctionNode(scope, args, context) {
                  var fn2 = resolveFn(scope);
                  var evalArg0 = evalArgs[0];
                  return fn2(evalArg0(scope, args, context));
                };
              case 2:
                return function evalFunctionNode(scope, args, context) {
                  var fn2 = resolveFn(scope);
                  var evalArg0 = evalArgs[0];
                  var evalArg1 = evalArgs[1];
                  return fn2(evalArg0(scope, args, context), evalArg1(scope, args, context));
                };
              default:
                return function evalFunctionNode(scope, args, context) {
                  var fn2 = resolveFn(scope);
                  var values = evalArgs.map((evalArg) => evalArg(scope, args, context));
                  return fn2(...values);
                };
            }
          }
        } else {
          var _rawArgs = this.args;
          return function evalFunctionNode(scope, args, context) {
            var fn2 = getSafeProperty(args, _name);
            if (typeof fn2 !== "function") {
              throw new TypeError("Argument '".concat(_name, "' was not a function; received: ").concat(strin(fn2)));
            }
            if (fn2.rawArgs) {
              return fn2(_rawArgs, math3, createSubScope(scope, args));
            } else {
              var values = evalArgs.map((evalArg) => evalArg(scope, args, context));
              return fn2.apply(fn2, values);
            }
          };
        }
      } else if (isAccessorNode(this.fn) && isIndexNode(this.fn.index) && this.fn.index.isObjectProperty()) {
        var evalObject = this.fn.object._compile(math3, argNames);
        var prop = this.fn.index.getObjectProperty();
        var _rawArgs2 = this.args;
        return function evalFunctionNode(scope, args, context) {
          var object = evalObject(scope, args, context);
          var fn2 = getSafeMethod(object, prop);
          if (fn2 !== null && fn2 !== void 0 && fn2.rawArgs) {
            return fn2(_rawArgs2, math3, createSubScope(scope, args));
          } else {
            var values = evalArgs.map((evalArg) => evalArg(scope, args, context));
            return fn2.apply(object, values);
          }
        };
      } else {
        var fnExpr = this.fn.toString();
        var evalFn = this.fn._compile(math3, argNames);
        var _rawArgs3 = this.args;
        return function evalFunctionNode(scope, args, context) {
          var fn2 = evalFn(scope, args, context);
          if (typeof fn2 !== "function") {
            throw new TypeError("Expression '".concat(fnExpr, "' did not evaluate to a function; value is:") + "\n  ".concat(strin(fn2)));
          }
          if (fn2.rawArgs) {
            return fn2(_rawArgs3, math3, createSubScope(scope, args));
          } else {
            var values = evalArgs.map((evalArg) => evalArg(scope, args, context));
            return fn2.apply(fn2, values);
          }
        };
      }
    }
    /**
     * Execute a callback for each of the child nodes of this node
     * @param {function(child: Node, path: string, parent: Node)} callback
     */
    forEach(callback) {
      callback(this.fn, "fn", this);
      for (var i2 = 0; i2 < this.args.length; i2++) {
        callback(this.args[i2], "args[" + i2 + "]", this);
      }
    }
    /**
     * Create a new FunctionNode whose children are the results of calling
     * the provided callback function for each child of the original node.
     * @param {function(child: Node, path: string, parent: Node): Node} callback
     * @returns {FunctionNode} Returns a transformed copy of the node
     */
    map(callback) {
      var fn = this._ifNode(callback(this.fn, "fn", this));
      var args = [];
      for (var i2 = 0; i2 < this.args.length; i2++) {
        args[i2] = this._ifNode(callback(this.args[i2], "args[" + i2 + "]", this));
      }
      return new FunctionNode2(fn, args);
    }
    /**
     * Create a clone of this node, a shallow copy
     * @return {FunctionNode}
     */
    clone() {
      return new FunctionNode2(this.fn, this.args.slice(0));
    }
    /**
     * Throws an error 'Undefined function {name}'
     * @param {string} name
     */
    /**
     * Get string representation. (wrapper function)
     * This overrides parts of Node's toString function.
     * If callback is an object containing callbacks, it
     * calls the correct callback for the current node,
     * otherwise it falls back to calling Node's toString
     * function.
     *
     * @param {Object} options
     * @return {string} str
     * @override
     */
    toString(options) {
      var customString;
      var name314 = this.fn.toString(options);
      if (options && typeof options.handler === "object" && hasOwnProperty(options.handler, name314)) {
        customString = options.handler[name314](this, options);
      }
      if (typeof customString !== "undefined") {
        return customString;
      }
      return super.toString(options);
    }
    /**
     * Get string representation
     * @param {Object} options
     * @return {string} str
     */
    _toString(options) {
      var args = this.args.map(function(arg2) {
        return arg2.toString(options);
      });
      var fn = isFunctionAssignmentNode(this.fn) ? "(" + this.fn.toString(options) + ")" : this.fn.toString(options);
      return fn + "(" + args.join(", ") + ")";
    }
    /**
     * Get a JSON representation of the node
     * @returns {Object}
     */
    toJSON() {
      return {
        mathjs: name221,
        fn: this.fn,
        args: this.args
      };
    }
    /**
     * Instantiate an AssignmentNode from its JSON representation
     * @param {Object} json  An object structured like
     *                       `{"mathjs": "FunctionNode", fn: ..., args: ...}`,
     *                       where mathjs is optional
     * @returns {FunctionNode}
     */
    /**
     * Get HTML representation
     * @param {Object} options
     * @return {string} str
     */
    _toHTML(options) {
      var args = this.args.map(function(arg2) {
        return arg2.toHTML(options);
      });
      return '<span class="math-function">' + escape2(this.fn) + '</span><span class="math-paranthesis math-round-parenthesis">(</span>' + args.join('<span class="math-separator">,</span>') + '<span class="math-paranthesis math-round-parenthesis">)</span>';
    }
    /**
     * Get LaTeX representation. (wrapper function)
     * This overrides parts of Node's toTex function.
     * If callback is an object containing callbacks, it
     * calls the correct callback for the current node,
     * otherwise it falls back to calling Node's toTex
     * function.
     *
     * @param {Object} options
     * @return {string}
     */
    toTex(options) {
      var customTex;
      if (options && typeof options.handler === "object" && hasOwnProperty(options.handler, this.name)) {
        customTex = options.handler[this.name](this, options);
      }
      if (typeof customTex !== "undefined") {
        return customTex;
      }
      return super.toTex(options);
    }
    /**
     * Get LaTeX representation
     * @param {Object} options
     * @return {string} str
     */
    _toTex(options) {
      var args = this.args.map(function(arg2) {
        return arg2.toTex(options);
      });
      var latexConverter;
      if (latexFunctions[this.name]) {
        latexConverter = latexFunctions[this.name];
      }
      if (math2[this.name] && (typeof math2[this.name].toTex === "function" || typeof math2[this.name].toTex === "object" || typeof math2[this.name].toTex === "string")) {
        latexConverter = math2[this.name].toTex;
      }
      var customToTex;
      switch (typeof latexConverter) {
        case "function":
          customToTex = latexConverter(this, options);
          break;
        case "string":
          customToTex = expandTemplate(latexConverter, this, options);
          break;
        case "object":
          switch (typeof latexConverter[args.length]) {
            case "function":
              customToTex = latexConverter[args.length](this, options);
              break;
            case "string":
              customToTex = expandTemplate(latexConverter[args.length], this, options);
              break;
          }
      }
      if (typeof customToTex !== "undefined") {
        return customToTex;
      }
      return expandTemplate(defaultTemplate, this, options);
    }
    /**
     * Get identifier.
     * @return {string}
     */
    getIdentifier() {
      return this.type + ":" + this.name;
    }
  }
  _FunctionNode = FunctionNode2;
  _defineProperty(FunctionNode2, "name", name221);
  _defineProperty(FunctionNode2, "onUndefinedFunction", function(name314) {
    throw new Error("Undefined function " + name314);
  });
  _defineProperty(FunctionNode2, "fromJSON", function(json) {
    return new _FunctionNode(json.fn, json.args);
  });
  return FunctionNode2;
}, {
  isClass: true,
  isNode: true
});

// node_modules/mathjs/lib/esm/expression/parse.js
var name222 = "parse";
var dependencies222 = ["typed", "numeric", "config", "AccessorNode", "ArrayNode", "AssignmentNode", "BlockNode", "ConditionalNode", "ConstantNode", "FunctionAssignmentNode", "FunctionNode", "IndexNode", "ObjectNode", "OperatorNode", "ParenthesisNode", "RangeNode", "RelationalNode", "SymbolNode"];
var createParse = factory(name222, dependencies222, (_ref) => {
  var {
    typed: typed2,
    numeric: numeric3,
    config: config4,
    AccessorNode: AccessorNode2,
    ArrayNode: ArrayNode2,
    AssignmentNode: AssignmentNode2,
    BlockNode: BlockNode2,
    ConditionalNode: ConditionalNode2,
    ConstantNode: ConstantNode2,
    FunctionAssignmentNode: FunctionAssignmentNode2,
    FunctionNode: FunctionNode2,
    IndexNode: IndexNode2,
    ObjectNode: ObjectNode2,
    OperatorNode: OperatorNode2,
    ParenthesisNode: ParenthesisNode2,
    RangeNode: RangeNode2,
    RelationalNode: RelationalNode2,
    SymbolNode: SymbolNode2
  } = _ref;
  var parse3 = typed2(name222, {
    string: function string2(expression) {
      return parseStart(expression, {});
    },
    "Array | Matrix": function ArrayMatrix(expressions) {
      return parseMultiple(expressions, {});
    },
    "string, Object": function stringObject(expression, options) {
      var extraNodes = options.nodes !== void 0 ? options.nodes : {};
      return parseStart(expression, extraNodes);
    },
    "Array | Matrix, Object": parseMultiple
  });
  function parseMultiple(expressions) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var extraNodes = options.nodes !== void 0 ? options.nodes : {};
    return deepMap(expressions, function(elem) {
      if (typeof elem !== "string") throw new TypeError("String expected");
      return parseStart(elem, extraNodes);
    });
  }
  var TOKENTYPE = {
    NULL: 0,
    DELIMITER: 1,
    NUMBER: 2,
    SYMBOL: 3,
    UNKNOWN: 4
  };
  var DELIMITERS = {
    ",": true,
    "(": true,
    ")": true,
    "[": true,
    "]": true,
    "{": true,
    "}": true,
    '"': true,
    "'": true,
    ";": true,
    "+": true,
    "-": true,
    "*": true,
    ".*": true,
    "/": true,
    "./": true,
    "%": true,
    "^": true,
    ".^": true,
    "~": true,
    "!": true,
    "&": true,
    "|": true,
    "^|": true,
    "=": true,
    ":": true,
    "?": true,
    "==": true,
    "!=": true,
    "<": true,
    ">": true,
    "<=": true,
    ">=": true,
    "<<": true,
    ">>": true,
    ">>>": true
  };
  var NAMED_DELIMITERS = {
    mod: true,
    to: true,
    in: true,
    and: true,
    xor: true,
    or: true,
    not: true
  };
  var CONSTANTS = {
    true: true,
    false: false,
    null: null,
    undefined: void 0
  };
  var NUMERIC_CONSTANTS = ["NaN", "Infinity"];
  var ESCAPE_CHARACTERS = {
    '"': '"',
    "'": "'",
    "\\": "\\",
    "/": "/",
    b: "\b",
    f: "\f",
    n: "\n",
    r: "\r",
    t: "	"
    // note that \u is handled separately in parseStringToken()
  };
  function initialState() {
    return {
      extraNodes: {},
      // current extra nodes, must be careful not to mutate
      expression: "",
      // current expression
      comment: "",
      // last parsed comment
      index: 0,
      // current index in expr
      token: "",
      // current token
      tokenType: TOKENTYPE.NULL,
      // type of the token
      nestingLevel: 0,
      // level of nesting inside parameters, used to ignore newline characters
      conditionalLevel: null
      // when a conditional is being parsed, the level of the conditional is stored here
    };
  }
  function currentString(state, length) {
    return state.expression.substr(state.index, length);
  }
  function currentCharacter(state) {
    return currentString(state, 1);
  }
  function next(state) {
    state.index++;
  }
  function prevCharacter(state) {
    return state.expression.charAt(state.index - 1);
  }
  function nextCharacter(state) {
    return state.expression.charAt(state.index + 1);
  }
  function getToken(state) {
    state.tokenType = TOKENTYPE.NULL;
    state.token = "";
    state.comment = "";
    while (true) {
      if (currentCharacter(state) === "#") {
        while (currentCharacter(state) !== "\n" && currentCharacter(state) !== "") {
          state.comment += currentCharacter(state);
          next(state);
        }
      }
      if (parse3.isWhitespace(currentCharacter(state), state.nestingLevel)) {
        next(state);
      } else {
        break;
      }
    }
    if (currentCharacter(state) === "") {
      state.tokenType = TOKENTYPE.DELIMITER;
      return;
    }
    if (currentCharacter(state) === "\n" && !state.nestingLevel) {
      state.tokenType = TOKENTYPE.DELIMITER;
      state.token = currentCharacter(state);
      next(state);
      return;
    }
    var c1 = currentCharacter(state);
    var c2 = currentString(state, 2);
    var c3 = currentString(state, 3);
    if (c3.length === 3 && DELIMITERS[c3]) {
      state.tokenType = TOKENTYPE.DELIMITER;
      state.token = c3;
      next(state);
      next(state);
      next(state);
      return;
    }
    if (c2.length === 2 && DELIMITERS[c2]) {
      state.tokenType = TOKENTYPE.DELIMITER;
      state.token = c2;
      next(state);
      next(state);
      return;
    }
    if (DELIMITERS[c1]) {
      state.tokenType = TOKENTYPE.DELIMITER;
      state.token = c1;
      next(state);
      return;
    }
    if (parse3.isDigitDot(c1)) {
      state.tokenType = TOKENTYPE.NUMBER;
      var _c = currentString(state, 2);
      if (_c === "0b" || _c === "0o" || _c === "0x") {
        state.token += currentCharacter(state);
        next(state);
        state.token += currentCharacter(state);
        next(state);
        while (parse3.isHexDigit(currentCharacter(state))) {
          state.token += currentCharacter(state);
          next(state);
        }
        if (currentCharacter(state) === ".") {
          state.token += ".";
          next(state);
          while (parse3.isHexDigit(currentCharacter(state))) {
            state.token += currentCharacter(state);
            next(state);
          }
        } else if (currentCharacter(state) === "i") {
          state.token += "i";
          next(state);
          while (parse3.isDigit(currentCharacter(state))) {
            state.token += currentCharacter(state);
            next(state);
          }
        }
        return;
      }
      if (currentCharacter(state) === ".") {
        state.token += currentCharacter(state);
        next(state);
        if (!parse3.isDigit(currentCharacter(state))) {
          state.tokenType = TOKENTYPE.DELIMITER;
          return;
        }
      } else {
        while (parse3.isDigit(currentCharacter(state))) {
          state.token += currentCharacter(state);
          next(state);
        }
        if (parse3.isDecimalMark(currentCharacter(state), nextCharacter(state))) {
          state.token += currentCharacter(state);
          next(state);
        }
      }
      while (parse3.isDigit(currentCharacter(state))) {
        state.token += currentCharacter(state);
        next(state);
      }
      if (currentCharacter(state) === "E" || currentCharacter(state) === "e") {
        if (parse3.isDigit(nextCharacter(state)) || nextCharacter(state) === "-" || nextCharacter(state) === "+") {
          state.token += currentCharacter(state);
          next(state);
          if (currentCharacter(state) === "+" || currentCharacter(state) === "-") {
            state.token += currentCharacter(state);
            next(state);
          }
          if (!parse3.isDigit(currentCharacter(state))) {
            throw createSyntaxError(state, 'Digit expected, got "' + currentCharacter(state) + '"');
          }
          while (parse3.isDigit(currentCharacter(state))) {
            state.token += currentCharacter(state);
            next(state);
          }
          if (parse3.isDecimalMark(currentCharacter(state), nextCharacter(state))) {
            throw createSyntaxError(state, 'Digit expected, got "' + currentCharacter(state) + '"');
          }
        } else if (nextCharacter(state) === ".") {
          next(state);
          throw createSyntaxError(state, 'Digit expected, got "' + currentCharacter(state) + '"');
        }
      }
      return;
    }
    if (parse3.isAlpha(currentCharacter(state), prevCharacter(state), nextCharacter(state))) {
      while (parse3.isAlpha(currentCharacter(state), prevCharacter(state), nextCharacter(state)) || parse3.isDigit(currentCharacter(state))) {
        state.token += currentCharacter(state);
        next(state);
      }
      if (hasOwnProperty(NAMED_DELIMITERS, state.token)) {
        state.tokenType = TOKENTYPE.DELIMITER;
      } else {
        state.tokenType = TOKENTYPE.SYMBOL;
      }
      return;
    }
    state.tokenType = TOKENTYPE.UNKNOWN;
    while (currentCharacter(state) !== "") {
      state.token += currentCharacter(state);
      next(state);
    }
    throw createSyntaxError(state, 'Syntax error in part "' + state.token + '"');
  }
  function getTokenSkipNewline(state) {
    do {
      getToken(state);
    } while (state.token === "\n");
  }
  function openParams(state) {
    state.nestingLevel++;
  }
  function closeParams(state) {
    state.nestingLevel--;
  }
  parse3.isAlpha = function isAlpha(c, cPrev, cNext) {
    return parse3.isValidLatinOrGreek(c) || parse3.isValidMathSymbol(c, cNext) || parse3.isValidMathSymbol(cPrev, c);
  };
  parse3.isValidLatinOrGreek = function isValidLatinOrGreek(c) {
    return /^[a-zA-Z_$\u00C0-\u02AF\u0370-\u03FF\u2100-\u214F]$/.test(c);
  };
  parse3.isValidMathSymbol = function isValidMathSymbol(high, low) {
    return /^[\uD835]$/.test(high) && /^[\uDC00-\uDFFF]$/.test(low) && /^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(low);
  };
  parse3.isWhitespace = function isWhitespace(c, nestingLevel) {
    return c === " " || c === "	" || c === "\n" && nestingLevel > 0;
  };
  parse3.isDecimalMark = function isDecimalMark(c, cNext) {
    return c === "." && cNext !== "/" && cNext !== "*" && cNext !== "^";
  };
  parse3.isDigitDot = function isDigitDot(c) {
    return c >= "0" && c <= "9" || c === ".";
  };
  parse3.isDigit = function isDigit(c) {
    return c >= "0" && c <= "9";
  };
  parse3.isHexDigit = function isHexDigit(c) {
    return c >= "0" && c <= "9" || c >= "a" && c <= "f" || c >= "A" && c <= "F";
  };
  function parseStart(expression, extraNodes) {
    var state = initialState();
    _extends(state, {
      expression,
      extraNodes
    });
    getToken(state);
    var node = parseBlock(state);
    if (state.token !== "") {
      if (state.tokenType === TOKENTYPE.DELIMITER) {
        throw createError(state, "Unexpected operator " + state.token);
      } else {
        throw createSyntaxError(state, 'Unexpected part "' + state.token + '"');
      }
    }
    return node;
  }
  function parseBlock(state) {
    var node;
    var blocks = [];
    var visible;
    if (state.token !== "" && state.token !== "\n" && state.token !== ";") {
      node = parseAssignment(state);
      if (state.comment) {
        node.comment = state.comment;
      }
    }
    while (state.token === "\n" || state.token === ";") {
      if (blocks.length === 0 && node) {
        visible = state.token !== ";";
        blocks.push({
          node,
          visible
        });
      }
      getToken(state);
      if (state.token !== "\n" && state.token !== ";" && state.token !== "") {
        node = parseAssignment(state);
        if (state.comment) {
          node.comment = state.comment;
        }
        visible = state.token !== ";";
        blocks.push({
          node,
          visible
        });
      }
    }
    if (blocks.length > 0) {
      return new BlockNode2(blocks);
    } else {
      if (!node) {
        node = new ConstantNode2(void 0);
        if (state.comment) {
          node.comment = state.comment;
        }
      }
      return node;
    }
  }
  function parseAssignment(state) {
    var name314, args, value, valid;
    var node = parseConditional(state);
    if (state.token === "=") {
      if (isSymbolNode(node)) {
        name314 = node.name;
        getTokenSkipNewline(state);
        value = parseAssignment(state);
        return new AssignmentNode2(new SymbolNode2(name314), value);
      } else if (isAccessorNode(node)) {
        getTokenSkipNewline(state);
        value = parseAssignment(state);
        return new AssignmentNode2(node.object, node.index, value);
      } else if (isFunctionNode(node) && isSymbolNode(node.fn)) {
        valid = true;
        args = [];
        name314 = node.name;
        node.args.forEach(function(arg2, index2) {
          if (isSymbolNode(arg2)) {
            args[index2] = arg2.name;
          } else {
            valid = false;
          }
        });
        if (valid) {
          getTokenSkipNewline(state);
          value = parseAssignment(state);
          return new FunctionAssignmentNode2(name314, args, value);
        }
      }
      throw createSyntaxError(state, "Invalid left hand side of assignment operator =");
    }
    return node;
  }
  function parseConditional(state) {
    var node = parseLogicalOr(state);
    while (state.token === "?") {
      var prev = state.conditionalLevel;
      state.conditionalLevel = state.nestingLevel;
      getTokenSkipNewline(state);
      var condition = node;
      var trueExpr = parseAssignment(state);
      if (state.token !== ":") throw createSyntaxError(state, "False part of conditional expression expected");
      state.conditionalLevel = null;
      getTokenSkipNewline(state);
      var falseExpr = parseAssignment(state);
      node = new ConditionalNode2(condition, trueExpr, falseExpr);
      state.conditionalLevel = prev;
    }
    return node;
  }
  function parseLogicalOr(state) {
    var node = parseLogicalXor(state);
    while (state.token === "or") {
      getTokenSkipNewline(state);
      node = new OperatorNode2("or", "or", [node, parseLogicalXor(state)]);
    }
    return node;
  }
  function parseLogicalXor(state) {
    var node = parseLogicalAnd(state);
    while (state.token === "xor") {
      getTokenSkipNewline(state);
      node = new OperatorNode2("xor", "xor", [node, parseLogicalAnd(state)]);
    }
    return node;
  }
  function parseLogicalAnd(state) {
    var node = parseBitwiseOr(state);
    while (state.token === "and") {
      getTokenSkipNewline(state);
      node = new OperatorNode2("and", "and", [node, parseBitwiseOr(state)]);
    }
    return node;
  }
  function parseBitwiseOr(state) {
    var node = parseBitwiseXor(state);
    while (state.token === "|") {
      getTokenSkipNewline(state);
      node = new OperatorNode2("|", "bitOr", [node, parseBitwiseXor(state)]);
    }
    return node;
  }
  function parseBitwiseXor(state) {
    var node = parseBitwiseAnd(state);
    while (state.token === "^|") {
      getTokenSkipNewline(state);
      node = new OperatorNode2("^|", "bitXor", [node, parseBitwiseAnd(state)]);
    }
    return node;
  }
  function parseBitwiseAnd(state) {
    var node = parseRelational(state);
    while (state.token === "&") {
      getTokenSkipNewline(state);
      node = new OperatorNode2("&", "bitAnd", [node, parseRelational(state)]);
    }
    return node;
  }
  function parseRelational(state) {
    var params = [parseShift(state)];
    var conditionals = [];
    var operators = {
      "==": "equal",
      "!=": "unequal",
      "<": "smaller",
      ">": "larger",
      "<=": "smallerEq",
      ">=": "largerEq"
    };
    while (hasOwnProperty(operators, state.token)) {
      var cond = {
        name: state.token,
        fn: operators[state.token]
      };
      conditionals.push(cond);
      getTokenSkipNewline(state);
      params.push(parseShift(state));
    }
    if (params.length === 1) {
      return params[0];
    } else if (params.length === 2) {
      return new OperatorNode2(conditionals[0].name, conditionals[0].fn, params);
    } else {
      return new RelationalNode2(conditionals.map((c) => c.fn), params);
    }
  }
  function parseShift(state) {
    var node, name314, fn, params;
    node = parseConversion(state);
    var operators = {
      "<<": "leftShift",
      ">>": "rightArithShift",
      ">>>": "rightLogShift"
    };
    while (hasOwnProperty(operators, state.token)) {
      name314 = state.token;
      fn = operators[name314];
      getTokenSkipNewline(state);
      params = [node, parseConversion(state)];
      node = new OperatorNode2(name314, fn, params);
    }
    return node;
  }
  function parseConversion(state) {
    var node, name314, fn, params;
    node = parseRange(state);
    var operators = {
      to: "to",
      in: "to"
      // alias of 'to'
    };
    while (hasOwnProperty(operators, state.token)) {
      name314 = state.token;
      fn = operators[name314];
      getTokenSkipNewline(state);
      if (name314 === "in" && state.token === "") {
        node = new OperatorNode2("*", "multiply", [node, new SymbolNode2("in")], true);
      } else {
        params = [node, parseRange(state)];
        node = new OperatorNode2(name314, fn, params);
      }
    }
    return node;
  }
  function parseRange(state) {
    var node;
    var params = [];
    if (state.token === ":") {
      node = new ConstantNode2(1);
    } else {
      node = parseAddSubtract(state);
    }
    if (state.token === ":" && state.conditionalLevel !== state.nestingLevel) {
      params.push(node);
      while (state.token === ":" && params.length < 3) {
        getTokenSkipNewline(state);
        if (state.token === ")" || state.token === "]" || state.token === "," || state.token === "") {
          params.push(new SymbolNode2("end"));
        } else {
          params.push(parseAddSubtract(state));
        }
      }
      if (params.length === 3) {
        node = new RangeNode2(params[0], params[2], params[1]);
      } else {
        node = new RangeNode2(params[0], params[1]);
      }
    }
    return node;
  }
  function parseAddSubtract(state) {
    var node, name314, fn, params;
    node = parseMultiplyDivide(state);
    var operators = {
      "+": "add",
      "-": "subtract"
    };
    while (hasOwnProperty(operators, state.token)) {
      name314 = state.token;
      fn = operators[name314];
      getTokenSkipNewline(state);
      var rightNode = parseMultiplyDivide(state);
      if (rightNode.isPercentage) {
        params = [node, new OperatorNode2("*", "multiply", [node, rightNode])];
      } else {
        params = [node, rightNode];
      }
      node = new OperatorNode2(name314, fn, params);
    }
    return node;
  }
  function parseMultiplyDivide(state) {
    var node, last, name314, fn;
    node = parseImplicitMultiplication(state);
    last = node;
    var operators = {
      "*": "multiply",
      ".*": "dotMultiply",
      "/": "divide",
      "./": "dotDivide"
    };
    while (true) {
      if (hasOwnProperty(operators, state.token)) {
        name314 = state.token;
        fn = operators[name314];
        getTokenSkipNewline(state);
        last = parseImplicitMultiplication(state);
        node = new OperatorNode2(name314, fn, [node, last]);
      } else {
        break;
      }
    }
    return node;
  }
  function parseImplicitMultiplication(state) {
    var node, last;
    node = parseRule2(state);
    last = node;
    while (true) {
      if (state.tokenType === TOKENTYPE.SYMBOL || state.token === "in" && isConstantNode(node) || state.tokenType === TOKENTYPE.NUMBER && !isConstantNode(last) && (!isOperatorNode(last) || last.op === "!") || state.token === "(") {
        last = parseRule2(state);
        node = new OperatorNode2(
          "*",
          "multiply",
          [node, last],
          true
          /* implicit */
        );
      } else {
        break;
      }
    }
    return node;
  }
  function parseRule2(state) {
    var node = parseModulusPercentage(state);
    var last = node;
    var tokenStates = [];
    while (true) {
      if (state.token === "/" && rule2Node(last)) {
        tokenStates.push(_extends({}, state));
        getTokenSkipNewline(state);
        if (state.tokenType === TOKENTYPE.NUMBER) {
          tokenStates.push(_extends({}, state));
          getTokenSkipNewline(state);
          if (state.tokenType === TOKENTYPE.SYMBOL || state.token === "(") {
            _extends(state, tokenStates.pop());
            tokenStates.pop();
            last = parseModulusPercentage(state);
            node = new OperatorNode2("/", "divide", [node, last]);
          } else {
            tokenStates.pop();
            _extends(state, tokenStates.pop());
            break;
          }
        } else {
          _extends(state, tokenStates.pop());
          break;
        }
      } else {
        break;
      }
    }
    return node;
  }
  function parseModulusPercentage(state) {
    var node, name314, fn, params;
    node = parseUnary(state);
    var operators = {
      "%": "mod",
      mod: "mod"
    };
    while (hasOwnProperty(operators, state.token)) {
      name314 = state.token;
      fn = operators[name314];
      getTokenSkipNewline(state);
      if (name314 === "%" && state.tokenType === TOKENTYPE.DELIMITER && state.token !== "(") {
        node = new OperatorNode2("/", "divide", [node, new ConstantNode2(100)], false, true);
      } else {
        params = [node, parseUnary(state)];
        node = new OperatorNode2(name314, fn, params);
      }
    }
    return node;
  }
  function parseUnary(state) {
    var name314, params, fn;
    var operators = {
      "-": "unaryMinus",
      "+": "unaryPlus",
      "~": "bitNot",
      not: "not"
    };
    if (hasOwnProperty(operators, state.token)) {
      fn = operators[state.token];
      name314 = state.token;
      getTokenSkipNewline(state);
      params = [parseUnary(state)];
      return new OperatorNode2(name314, fn, params);
    }
    return parsePow(state);
  }
  function parsePow(state) {
    var node, name314, fn, params;
    node = parseLeftHandOperators(state);
    if (state.token === "^" || state.token === ".^") {
      name314 = state.token;
      fn = name314 === "^" ? "pow" : "dotPow";
      getTokenSkipNewline(state);
      params = [node, parseUnary(state)];
      node = new OperatorNode2(name314, fn, params);
    }
    return node;
  }
  function parseLeftHandOperators(state) {
    var node, name314, fn, params;
    node = parseCustomNodes(state);
    var operators = {
      "!": "factorial",
      "'": "ctranspose"
    };
    while (hasOwnProperty(operators, state.token)) {
      name314 = state.token;
      fn = operators[name314];
      getToken(state);
      params = [node];
      node = new OperatorNode2(name314, fn, params);
      node = parseAccessors(state, node);
    }
    return node;
  }
  function parseCustomNodes(state) {
    var params = [];
    if (state.tokenType === TOKENTYPE.SYMBOL && hasOwnProperty(state.extraNodes, state.token)) {
      var CustomNode = state.extraNodes[state.token];
      getToken(state);
      if (state.token === "(") {
        params = [];
        openParams(state);
        getToken(state);
        if (state.token !== ")") {
          params.push(parseAssignment(state));
          while (state.token === ",") {
            getToken(state);
            params.push(parseAssignment(state));
          }
        }
        if (state.token !== ")") {
          throw createSyntaxError(state, "Parenthesis ) expected");
        }
        closeParams(state);
        getToken(state);
      }
      return new CustomNode(params);
    }
    return parseSymbol(state);
  }
  function parseSymbol(state) {
    var node, name314;
    if (state.tokenType === TOKENTYPE.SYMBOL || state.tokenType === TOKENTYPE.DELIMITER && state.token in NAMED_DELIMITERS) {
      name314 = state.token;
      getToken(state);
      if (hasOwnProperty(CONSTANTS, name314)) {
        node = new ConstantNode2(CONSTANTS[name314]);
      } else if (NUMERIC_CONSTANTS.includes(name314)) {
        node = new ConstantNode2(numeric3(name314, "number"));
      } else {
        node = new SymbolNode2(name314);
      }
      node = parseAccessors(state, node);
      return node;
    }
    return parseString(state);
  }
  function parseAccessors(state, node, types) {
    var params;
    while ((state.token === "(" || state.token === "[" || state.token === ".") && (!types || types.includes(state.token))) {
      params = [];
      if (state.token === "(") {
        if (isSymbolNode(node) || isAccessorNode(node)) {
          openParams(state);
          getToken(state);
          if (state.token !== ")") {
            params.push(parseAssignment(state));
            while (state.token === ",") {
              getToken(state);
              params.push(parseAssignment(state));
            }
          }
          if (state.token !== ")") {
            throw createSyntaxError(state, "Parenthesis ) expected");
          }
          closeParams(state);
          getToken(state);
          node = new FunctionNode2(node, params);
        } else {
          return node;
        }
      } else if (state.token === "[") {
        openParams(state);
        getToken(state);
        if (state.token !== "]") {
          params.push(parseAssignment(state));
          while (state.token === ",") {
            getToken(state);
            params.push(parseAssignment(state));
          }
        }
        if (state.token !== "]") {
          throw createSyntaxError(state, "Parenthesis ] expected");
        }
        closeParams(state);
        getToken(state);
        node = new AccessorNode2(node, new IndexNode2(params));
      } else {
        getToken(state);
        var isPropertyName = state.tokenType === TOKENTYPE.SYMBOL || state.tokenType === TOKENTYPE.DELIMITER && state.token in NAMED_DELIMITERS;
        if (!isPropertyName) {
          throw createSyntaxError(state, "Property name expected after dot");
        }
        params.push(new ConstantNode2(state.token));
        getToken(state);
        var dotNotation = true;
        node = new AccessorNode2(node, new IndexNode2(params, dotNotation));
      }
    }
    return node;
  }
  function parseString(state) {
    var node, str;
    if (state.token === '"' || state.token === "'") {
      str = parseStringToken(state, state.token);
      node = new ConstantNode2(str);
      node = parseAccessors(state, node);
      return node;
    }
    return parseMatrix(state);
  }
  function parseStringToken(state, quote) {
    var str = "";
    while (currentCharacter(state) !== "" && currentCharacter(state) !== quote) {
      if (currentCharacter(state) === "\\") {
        next(state);
        var char = currentCharacter(state);
        var escapeChar = ESCAPE_CHARACTERS[char];
        if (escapeChar !== void 0) {
          str += escapeChar;
          state.index += 1;
        } else if (char === "u") {
          var unicode = state.expression.slice(state.index + 1, state.index + 5);
          if (/^[0-9A-Fa-f]{4}$/.test(unicode)) {
            str += String.fromCharCode(parseInt(unicode, 16));
            state.index += 5;
          } else {
            throw createSyntaxError(state, "Invalid unicode character \\u".concat(unicode));
          }
        } else {
          throw createSyntaxError(state, "Bad escape character \\".concat(char));
        }
      } else {
        str += currentCharacter(state);
        next(state);
      }
    }
    getToken(state);
    if (state.token !== quote) {
      throw createSyntaxError(state, "End of string ".concat(quote, " expected"));
    }
    getToken(state);
    return str;
  }
  function parseMatrix(state) {
    var array, params, rows, cols;
    if (state.token === "[") {
      openParams(state);
      getToken(state);
      if (state.token !== "]") {
        var row2 = parseRow(state);
        if (state.token === ";") {
          rows = 1;
          params = [row2];
          while (state.token === ";") {
            getToken(state);
            if (state.token !== "]") {
              params[rows] = parseRow(state);
              rows++;
            }
          }
          if (state.token !== "]") {
            throw createSyntaxError(state, "End of matrix ] expected");
          }
          closeParams(state);
          getToken(state);
          cols = params[0].items.length;
          for (var r = 1; r < rows; r++) {
            if (params[r].items.length !== cols) {
              throw createError(state, "Column dimensions mismatch (" + params[r].items.length + " !== " + cols + ")");
            }
          }
          array = new ArrayNode2(params);
        } else {
          if (state.token !== "]") {
            throw createSyntaxError(state, "End of matrix ] expected");
          }
          closeParams(state);
          getToken(state);
          array = row2;
        }
      } else {
        closeParams(state);
        getToken(state);
        array = new ArrayNode2([]);
      }
      return parseAccessors(state, array);
    }
    return parseObject(state);
  }
  function parseRow(state) {
    var params = [parseAssignment(state)];
    var len = 1;
    while (state.token === ",") {
      getToken(state);
      if (state.token !== "]" && state.token !== ";") {
        params[len] = parseAssignment(state);
        len++;
      }
    }
    return new ArrayNode2(params);
  }
  function parseObject(state) {
    if (state.token === "{") {
      openParams(state);
      var key;
      var properties2 = {};
      do {
        getToken(state);
        if (state.token !== "}") {
          if (state.token === '"' || state.token === "'") {
            key = parseStringToken(state, state.token);
          } else if (state.tokenType === TOKENTYPE.SYMBOL || state.tokenType === TOKENTYPE.DELIMITER && state.token in NAMED_DELIMITERS) {
            key = state.token;
            getToken(state);
          } else {
            throw createSyntaxError(state, "Symbol or string expected as object key");
          }
          if (state.token !== ":") {
            throw createSyntaxError(state, "Colon : expected after object key");
          }
          getToken(state);
          properties2[key] = parseAssignment(state);
        }
      } while (state.token === ",");
      if (state.token !== "}") {
        throw createSyntaxError(state, "Comma , or bracket } expected after object value");
      }
      closeParams(state);
      getToken(state);
      var node = new ObjectNode2(properties2);
      node = parseAccessors(state, node);
      return node;
    }
    return parseNumber(state);
  }
  function parseNumber(state) {
    var numberStr;
    if (state.tokenType === TOKENTYPE.NUMBER) {
      numberStr = state.token;
      getToken(state);
      return new ConstantNode2(numeric3(numberStr, config4.number));
    }
    return parseParentheses(state);
  }
  function parseParentheses(state) {
    var node;
    if (state.token === "(") {
      openParams(state);
      getToken(state);
      node = parseAssignment(state);
      if (state.token !== ")") {
        throw createSyntaxError(state, "Parenthesis ) expected");
      }
      closeParams(state);
      getToken(state);
      node = new ParenthesisNode2(node);
      node = parseAccessors(state, node);
      return node;
    }
    return parseEnd(state);
  }
  function parseEnd(state) {
    if (state.token === "") {
      throw createSyntaxError(state, "Unexpected end of expression");
    } else {
      throw createSyntaxError(state, "Value expected");
    }
  }
  function col(state) {
    return state.index - state.token.length + 1;
  }
  function createSyntaxError(state, message) {
    var c = col(state);
    var error = new SyntaxError(message + " (char " + c + ")");
    error.char = c;
    return error;
  }
  function createError(state, message) {
    var c = col(state);
    var error = new SyntaxError(message + " (char " + c + ")");
    error.char = c;
    return error;
  }
  typed2.addConversion({
    from: "string",
    to: "Node",
    convert: parse3
  });
  return parse3;
});

// node_modules/mathjs/lib/esm/expression/function/compile.js
var name223 = "compile";
var dependencies223 = ["typed", "parse"];
var createCompile = factory(name223, dependencies223, (_ref) => {
  var {
    typed: typed2,
    parse: parse3
  } = _ref;
  return typed2(name223, {
    string: function string2(expr) {
      return parse3(expr).compile();
    },
    "Array | Matrix": function ArrayMatrix(expr) {
      return deepMap(expr, function(entry) {
        return parse3(entry).compile();
      });
    }
  });
});

// node_modules/mathjs/lib/esm/expression/function/evaluate.js
var name224 = "evaluate";
var dependencies224 = ["typed", "parse"];
var createEvaluate = factory(name224, dependencies224, (_ref) => {
  var {
    typed: typed2,
    parse: parse3
  } = _ref;
  return typed2(name224, {
    string: function string2(expr) {
      var scope = createEmptyMap();
      return parse3(expr).compile().evaluate(scope);
    },
    "string, Map | Object": function stringMapObject(expr, scope) {
      return parse3(expr).compile().evaluate(scope);
    },
    "Array | Matrix": function ArrayMatrix(expr) {
      var scope = createEmptyMap();
      return deepMap(expr, function(entry) {
        return parse3(entry).compile().evaluate(scope);
      });
    },
    "Array | Matrix, Map | Object": function ArrayMatrixMapObject(expr, scope) {
      return deepMap(expr, function(entry) {
        return parse3(entry).compile().evaluate(scope);
      });
    }
  });
});

// node_modules/mathjs/lib/esm/expression/Parser.js
var name225 = "Parser";
var dependencies225 = ["evaluate"];
var createParserClass = factory(name225, dependencies225, (_ref) => {
  var {
    evaluate: evaluate2
  } = _ref;
  function Parser2() {
    if (!(this instanceof Parser2)) {
      throw new SyntaxError("Constructor must be called with the new operator");
    }
    Object.defineProperty(this, "scope", {
      value: createEmptyMap(),
      writable: false
    });
  }
  Parser2.prototype.type = "Parser";
  Parser2.prototype.isParser = true;
  Parser2.prototype.evaluate = function(expr) {
    return evaluate2(expr, this.scope);
  };
  Parser2.prototype.get = function(name314) {
    if (this.scope.has(name314)) {
      return this.scope.get(name314);
    }
  };
  Parser2.prototype.getAll = function() {
    return toObject(this.scope);
  };
  Parser2.prototype.getAllAsMap = function() {
    return this.scope;
  };
  Parser2.prototype.set = function(name314, value) {
    this.scope.set(name314, value);
    return value;
  };
  Parser2.prototype.remove = function(name314) {
    this.scope.delete(name314);
  };
  Parser2.prototype.clear = function() {
    this.scope.clear();
  };
  return Parser2;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/expression/function/parser.js
var name226 = "parser";
var dependencies226 = ["typed", "Parser"];
var createParser = factory(name226, dependencies226, (_ref) => {
  var {
    typed: typed2,
    Parser: Parser2
  } = _ref;
  return typed2(name226, {
    "": function _() {
      return new Parser2();
    }
  });
});

// node_modules/mathjs/lib/esm/function/algebra/decomposition/lup.js
var name227 = "lup";
var dependencies227 = ["typed", "matrix", "abs", "addScalar", "divideScalar", "multiplyScalar", "subtractScalar", "larger", "equalScalar", "unaryMinus", "DenseMatrix", "SparseMatrix", "Spa"];
var createLup = factory(name227, dependencies227, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    abs: abs3,
    addScalar: addScalar2,
    divideScalar: divideScalar2,
    multiplyScalar: multiplyScalar2,
    subtractScalar: subtractScalar2,
    larger: larger2,
    equalScalar: equalScalar2,
    unaryMinus: unaryMinus2,
    DenseMatrix: DenseMatrix2,
    SparseMatrix: SparseMatrix2,
    Spa: Spa2
  } = _ref;
  return typed2(name227, {
    DenseMatrix: function DenseMatrix3(m) {
      return _denseLUP(m);
    },
    SparseMatrix: function SparseMatrix3(m) {
      return _sparseLUP(m);
    },
    Array: function Array2(a) {
      var m = matrix2(a);
      var r = _denseLUP(m);
      return {
        L: r.L.valueOf(),
        U: r.U.valueOf(),
        p: r.p
      };
    }
  });
  function _denseLUP(m) {
    var rows = m._size[0];
    var columns = m._size[1];
    var n = Math.min(rows, columns);
    var data = clone(m._data);
    var ldata = [];
    var lsize = [rows, n];
    var udata = [];
    var usize = [n, columns];
    var i2, j, k;
    var p = [];
    for (i2 = 0; i2 < rows; i2++) {
      p[i2] = i2;
    }
    for (j = 0; j < columns; j++) {
      if (j > 0) {
        for (i2 = 0; i2 < rows; i2++) {
          var min3 = Math.min(i2, j);
          var s = 0;
          for (k = 0; k < min3; k++) {
            s = addScalar2(s, multiplyScalar2(data[i2][k], data[k][j]));
          }
          data[i2][j] = subtractScalar2(data[i2][j], s);
        }
      }
      var pi3 = j;
      var pabsv = 0;
      var vjj = 0;
      for (i2 = j; i2 < rows; i2++) {
        var v = data[i2][j];
        var absv = abs3(v);
        if (larger2(absv, pabsv)) {
          pi3 = i2;
          pabsv = absv;
          vjj = v;
        }
      }
      if (j !== pi3) {
        p[j] = [p[pi3], p[pi3] = p[j]][0];
        DenseMatrix2._swapRows(j, pi3, data);
      }
      if (j < rows) {
        for (i2 = j + 1; i2 < rows; i2++) {
          var vij = data[i2][j];
          if (!equalScalar2(vij, 0)) {
            data[i2][j] = divideScalar2(data[i2][j], vjj);
          }
        }
      }
    }
    for (j = 0; j < columns; j++) {
      for (i2 = 0; i2 < rows; i2++) {
        if (j === 0) {
          if (i2 < columns) {
            udata[i2] = [];
          }
          ldata[i2] = [];
        }
        if (i2 < j) {
          if (i2 < columns) {
            udata[i2][j] = data[i2][j];
          }
          if (j < rows) {
            ldata[i2][j] = 0;
          }
          continue;
        }
        if (i2 === j) {
          if (i2 < columns) {
            udata[i2][j] = data[i2][j];
          }
          if (j < rows) {
            ldata[i2][j] = 1;
          }
          continue;
        }
        if (i2 < columns) {
          udata[i2][j] = 0;
        }
        if (j < rows) {
          ldata[i2][j] = data[i2][j];
        }
      }
    }
    var l = new DenseMatrix2({
      data: ldata,
      size: lsize
    });
    var u = new DenseMatrix2({
      data: udata,
      size: usize
    });
    var pv = [];
    for (i2 = 0, n = p.length; i2 < n; i2++) {
      pv[p[i2]] = i2;
    }
    return {
      L: l,
      U: u,
      p: pv,
      toString: function toString() {
        return "L: " + this.L.toString() + "\nU: " + this.U.toString() + "\nP: " + this.p;
      }
    };
  }
  function _sparseLUP(m) {
    var rows = m._size[0];
    var columns = m._size[1];
    var n = Math.min(rows, columns);
    var values = m._values;
    var index2 = m._index;
    var ptr = m._ptr;
    var lvalues = [];
    var lindex = [];
    var lptr = [];
    var lsize = [rows, n];
    var uvalues = [];
    var uindex = [];
    var uptr = [];
    var usize = [n, columns];
    var i2, j, k;
    var pvCo = [];
    var pvOc = [];
    for (i2 = 0; i2 < rows; i2++) {
      pvCo[i2] = i2;
      pvOc[i2] = i2;
    }
    var swapIndeces = function swapIndeces2(x, y) {
      var kx = pvOc[x];
      var ky = pvOc[y];
      pvCo[kx] = y;
      pvCo[ky] = x;
      pvOc[x] = ky;
      pvOc[y] = kx;
    };
    var _loop = function _loop2() {
      var spa = new Spa2();
      if (j < rows) {
        lptr.push(lvalues.length);
        lvalues.push(1);
        lindex.push(j);
      }
      uptr.push(uvalues.length);
      var k0 = ptr[j];
      var k1 = ptr[j + 1];
      for (k = k0; k < k1; k++) {
        i2 = index2[k];
        spa.set(pvCo[i2], values[k]);
      }
      if (j > 0) {
        spa.forEach(0, j - 1, function(k2, vkj) {
          SparseMatrix2._forEachRow(k2, lvalues, lindex, lptr, function(i3, vik) {
            if (i3 > k2) {
              spa.accumulate(i3, unaryMinus2(multiplyScalar2(vik, vkj)));
            }
          });
        });
      }
      var pi3 = j;
      var vjj = spa.get(j);
      var pabsv = abs3(vjj);
      spa.forEach(j + 1, rows - 1, function(x, v) {
        var absv = abs3(v);
        if (larger2(absv, pabsv)) {
          pi3 = x;
          pabsv = absv;
          vjj = v;
        }
      });
      if (j !== pi3) {
        SparseMatrix2._swapRows(j, pi3, lsize[1], lvalues, lindex, lptr);
        SparseMatrix2._swapRows(j, pi3, usize[1], uvalues, uindex, uptr);
        spa.swap(j, pi3);
        swapIndeces(j, pi3);
      }
      spa.forEach(0, rows - 1, function(x, v) {
        if (x <= j) {
          uvalues.push(v);
          uindex.push(x);
        } else {
          v = divideScalar2(v, vjj);
          if (!equalScalar2(v, 0)) {
            lvalues.push(v);
            lindex.push(x);
          }
        }
      });
    };
    for (j = 0; j < columns; j++) {
      _loop();
    }
    uptr.push(uvalues.length);
    lptr.push(lvalues.length);
    return {
      L: new SparseMatrix2({
        values: lvalues,
        index: lindex,
        ptr: lptr,
        size: lsize
      }),
      U: new SparseMatrix2({
        values: uvalues,
        index: uindex,
        ptr: uptr,
        size: usize
      }),
      p: pvCo,
      toString: function toString() {
        return "L: " + this.L.toString() + "\nU: " + this.U.toString() + "\nP: " + this.p;
      }
    };
  }
});

// node_modules/mathjs/lib/esm/function/algebra/decomposition/qr.js
var name228 = "qr";
var dependencies228 = ["typed", "matrix", "zeros", "identity", "isZero", "equal", "sign", "sqrt", "conj", "unaryMinus", "addScalar", "divideScalar", "multiplyScalar", "subtractScalar", "complex"];
var createQr = factory(name228, dependencies228, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    zeros: zeros3,
    identity: identity2,
    isZero: isZero2,
    equal: equal2,
    sign: sign4,
    sqrt: sqrt3,
    conj: conj2,
    unaryMinus: unaryMinus2,
    addScalar: addScalar2,
    divideScalar: divideScalar2,
    multiplyScalar: multiplyScalar2,
    subtractScalar: subtractScalar2,
    complex: complex2
  } = _ref;
  return _extends(typed2(name228, {
    DenseMatrix: function DenseMatrix2(m) {
      return _denseQR(m);
    },
    SparseMatrix: function SparseMatrix2(m) {
      return _sparseQR(m);
    },
    Array: function Array2(a) {
      var m = matrix2(a);
      var r = _denseQR(m);
      return {
        Q: r.Q.valueOf(),
        R: r.R.valueOf()
      };
    }
  }), {
    _denseQRimpl
  });
  function _denseQRimpl(m) {
    var rows = m._size[0];
    var cols = m._size[1];
    var Q2 = identity2([rows], "dense");
    var Qdata = Q2._data;
    var R = m.clone();
    var Rdata = R._data;
    var i2, j, k;
    var w = zeros3([rows], "");
    for (k = 0; k < Math.min(cols, rows); ++k) {
      var pivot = Rdata[k][k];
      var sgn = unaryMinus2(equal2(pivot, 0) ? 1 : sign4(pivot));
      var conjSgn = conj2(sgn);
      var alphaSquared = 0;
      for (i2 = k; i2 < rows; i2++) {
        alphaSquared = addScalar2(alphaSquared, multiplyScalar2(Rdata[i2][k], conj2(Rdata[i2][k])));
      }
      var alpha = multiplyScalar2(sgn, sqrt3(alphaSquared));
      if (!isZero2(alpha)) {
        var u1 = subtractScalar2(pivot, alpha);
        w[k] = 1;
        for (i2 = k + 1; i2 < rows; i2++) {
          w[i2] = divideScalar2(Rdata[i2][k], u1);
        }
        var tau3 = unaryMinus2(conj2(divideScalar2(u1, alpha)));
        var s = void 0;
        for (j = k; j < cols; j++) {
          s = 0;
          for (i2 = k; i2 < rows; i2++) {
            s = addScalar2(s, multiplyScalar2(conj2(w[i2]), Rdata[i2][j]));
          }
          s = multiplyScalar2(s, tau3);
          for (i2 = k; i2 < rows; i2++) {
            Rdata[i2][j] = multiplyScalar2(subtractScalar2(Rdata[i2][j], multiplyScalar2(w[i2], s)), conjSgn);
          }
        }
        for (i2 = 0; i2 < rows; i2++) {
          s = 0;
          for (j = k; j < rows; j++) {
            s = addScalar2(s, multiplyScalar2(Qdata[i2][j], w[j]));
          }
          s = multiplyScalar2(s, tau3);
          for (j = k; j < rows; ++j) {
            Qdata[i2][j] = divideScalar2(subtractScalar2(Qdata[i2][j], multiplyScalar2(s, conj2(w[j]))), conjSgn);
          }
        }
      }
    }
    return {
      Q: Q2,
      R,
      toString: function toString() {
        return "Q: " + this.Q.toString() + "\nR: " + this.R.toString();
      }
    };
  }
  function _denseQR(m) {
    var ret = _denseQRimpl(m);
    var Rdata = ret.R._data;
    if (m._data.length > 0) {
      var zero = Rdata[0][0].type === "Complex" ? complex2(0) : 0;
      for (var i2 = 0; i2 < Rdata.length; ++i2) {
        for (var j = 0; j < i2 && j < (Rdata[0] || []).length; ++j) {
          Rdata[i2][j] = zero;
        }
      }
    }
    return ret;
  }
  function _sparseQR(m) {
    throw new Error("qr not implemented for sparse matrices yet");
  }
});

// node_modules/mathjs/lib/esm/function/algebra/sparse/csPermute.js
function csPermute(a, pinv2, q, values) {
  var avalues = a._values;
  var aindex = a._index;
  var aptr = a._ptr;
  var asize = a._size;
  var adt = a._datatype;
  var m = asize[0];
  var n = asize[1];
  var cvalues = values && a._values ? [] : null;
  var cindex = [];
  var cptr = [];
  var nz = 0;
  for (var k = 0; k < n; k++) {
    cptr[k] = nz;
    var j = q ? q[k] : k;
    for (var t0 = aptr[j], t1 = aptr[j + 1], t = t0; t < t1; t++) {
      var r = pinv2 ? pinv2[aindex[t]] : aindex[t];
      cindex[nz] = r;
      if (cvalues) {
        cvalues[nz] = avalues[t];
      }
      nz++;
    }
  }
  cptr[n] = nz;
  return a.createSparseMatrix({
    values: cvalues,
    index: cindex,
    ptr: cptr,
    size: [m, n],
    datatype: adt
  });
}

// node_modules/mathjs/lib/esm/function/algebra/sparse/csTdfs.js
function csTdfs(j, k, w, head, next, post, stack) {
  var top = 0;
  w[stack] = j;
  while (top >= 0) {
    var p = w[stack + top];
    var i2 = w[head + p];
    if (i2 === -1) {
      top--;
      post[k++] = p;
    } else {
      w[head + p] = w[next + i2];
      ++top;
      w[stack + top] = i2;
    }
  }
  return k;
}

// node_modules/mathjs/lib/esm/function/algebra/sparse/csPost.js
function csPost(parent, n) {
  if (!parent) {
    return null;
  }
  var k = 0;
  var j;
  var post = [];
  var w = [];
  var head = 0;
  var next = n;
  var stack = 2 * n;
  for (j = 0; j < n; j++) {
    w[head + j] = -1;
  }
  for (j = n - 1; j >= 0; j--) {
    if (parent[j] === -1) {
      continue;
    }
    w[next + j] = w[head + parent[j]];
    w[head + parent[j]] = j;
  }
  for (j = 0; j < n; j++) {
    if (parent[j] !== -1) {
      continue;
    }
    k = csTdfs(j, k, w, head, next, post, stack);
  }
  return post;
}

// node_modules/mathjs/lib/esm/function/algebra/sparse/csEtree.js
function csEtree(a, ata) {
  if (!a) {
    return null;
  }
  var aindex = a._index;
  var aptr = a._ptr;
  var asize = a._size;
  var m = asize[0];
  var n = asize[1];
  var parent = [];
  var w = [];
  var ancestor = 0;
  var prev = n;
  var i2, inext;
  if (ata) {
    for (i2 = 0; i2 < m; i2++) {
      w[prev + i2] = -1;
    }
  }
  for (var k = 0; k < n; k++) {
    parent[k] = -1;
    w[ancestor + k] = -1;
    for (var p0 = aptr[k], p1 = aptr[k + 1], p = p0; p < p1; p++) {
      var r = aindex[p];
      i2 = ata ? w[prev + r] : r;
      for (; i2 !== -1 && i2 < k; i2 = inext) {
        inext = w[ancestor + i2];
        w[ancestor + i2] = k;
        if (inext === -1) {
          parent[i2] = k;
        }
      }
      if (ata) {
        w[prev + r] = k;
      }
    }
  }
  return parent;
}

// node_modules/mathjs/lib/esm/function/algebra/sparse/csFkeep.js
function csFkeep(a, callback, other) {
  var avalues = a._values;
  var aindex = a._index;
  var aptr = a._ptr;
  var asize = a._size;
  var n = asize[1];
  var nz = 0;
  for (var j = 0; j < n; j++) {
    var p = aptr[j];
    aptr[j] = nz;
    for (; p < aptr[j + 1]; p++) {
      if (callback(aindex[p], j, avalues ? avalues[p] : 1, other)) {
        aindex[nz] = aindex[p];
        if (avalues) {
          avalues[nz] = avalues[p];
        }
        nz++;
      }
    }
  }
  aptr[n] = nz;
  aindex.splice(nz, aindex.length - nz);
  if (avalues) {
    avalues.splice(nz, avalues.length - nz);
  }
  return nz;
}

// node_modules/mathjs/lib/esm/function/algebra/sparse/csFlip.js
function csFlip(i2) {
  return -i2 - 2;
}

// node_modules/mathjs/lib/esm/function/algebra/sparse/csAmd.js
var name229 = "csAmd";
var dependencies229 = ["add", "multiply", "transpose"];
var createCsAmd = factory(name229, dependencies229, (_ref) => {
  var {
    add: add4,
    multiply: multiply2,
    transpose: transpose2
  } = _ref;
  return function csAmd(order, a) {
    if (!a || order <= 0 || order > 3) {
      return null;
    }
    var asize = a._size;
    var m = asize[0];
    var n = asize[1];
    var lemax = 0;
    var dense = Math.max(16, 10 * Math.sqrt(n));
    dense = Math.min(n - 2, dense);
    var cm = _createTargetMatrix(order, a, m, n, dense);
    csFkeep(cm, _diag, null);
    var cindex = cm._index;
    var cptr = cm._ptr;
    var cnz = cptr[n];
    var P4 = [];
    var W = [];
    var len = 0;
    var nv = n + 1;
    var next = 2 * (n + 1);
    var head = 3 * (n + 1);
    var elen = 4 * (n + 1);
    var degree = 5 * (n + 1);
    var w = 6 * (n + 1);
    var hhead = 7 * (n + 1);
    var last = P4;
    var mark = _initializeQuotientGraph(n, cptr, W, len, head, last, next, hhead, nv, w, elen, degree);
    var nel = _initializeDegreeLists(n, cptr, W, degree, elen, w, dense, nv, head, last, next);
    var mindeg = 0;
    var i2, j, k, k1, k2, e3, pj, ln2, nvi, pk, eln, p1, p2, pn, h, d2;
    while (nel < n) {
      for (k = -1; mindeg < n && (k = W[head + mindeg]) === -1; mindeg++) ;
      if (W[next + k] !== -1) {
        last[W[next + k]] = -1;
      }
      W[head + mindeg] = W[next + k];
      var elenk = W[elen + k];
      var nvk = W[nv + k];
      nel += nvk;
      var dk = 0;
      W[nv + k] = -nvk;
      var p = cptr[k];
      var pk1 = elenk === 0 ? p : cnz;
      var pk2 = pk1;
      for (k1 = 1; k1 <= elenk + 1; k1++) {
        if (k1 > elenk) {
          e3 = k;
          pj = p;
          ln2 = W[len + k] - elenk;
        } else {
          e3 = cindex[p++];
          pj = cptr[e3];
          ln2 = W[len + e3];
        }
        for (k2 = 1; k2 <= ln2; k2++) {
          i2 = cindex[pj++];
          if ((nvi = W[nv + i2]) <= 0) {
            continue;
          }
          dk += nvi;
          W[nv + i2] = -nvi;
          cindex[pk2++] = i2;
          if (W[next + i2] !== -1) {
            last[W[next + i2]] = last[i2];
          }
          if (last[i2] !== -1) {
            W[next + last[i2]] = W[next + i2];
          } else {
            W[head + W[degree + i2]] = W[next + i2];
          }
        }
        if (e3 !== k) {
          cptr[e3] = csFlip(k);
          W[w + e3] = 0;
        }
      }
      if (elenk !== 0) {
        cnz = pk2;
      }
      W[degree + k] = dk;
      cptr[k] = pk1;
      W[len + k] = pk2 - pk1;
      W[elen + k] = -2;
      mark = _wclear(mark, lemax, W, w, n);
      for (pk = pk1; pk < pk2; pk++) {
        i2 = cindex[pk];
        if ((eln = W[elen + i2]) <= 0) {
          continue;
        }
        nvi = -W[nv + i2];
        var wnvi = mark - nvi;
        for (p = cptr[i2], p1 = cptr[i2] + eln - 1; p <= p1; p++) {
          e3 = cindex[p];
          if (W[w + e3] >= mark) {
            W[w + e3] -= nvi;
          } else if (W[w + e3] !== 0) {
            W[w + e3] = W[degree + e3] + wnvi;
          }
        }
      }
      for (pk = pk1; pk < pk2; pk++) {
        i2 = cindex[pk];
        p1 = cptr[i2];
        p2 = p1 + W[elen + i2] - 1;
        pn = p1;
        for (h = 0, d2 = 0, p = p1; p <= p2; p++) {
          e3 = cindex[p];
          if (W[w + e3] !== 0) {
            var dext = W[w + e3] - mark;
            if (dext > 0) {
              d2 += dext;
              cindex[pn++] = e3;
              h += e3;
            } else {
              cptr[e3] = csFlip(k);
              W[w + e3] = 0;
            }
          }
        }
        W[elen + i2] = pn - p1 + 1;
        var p3 = pn;
        var p4 = p1 + W[len + i2];
        for (p = p2 + 1; p < p4; p++) {
          j = cindex[p];
          var nvj = W[nv + j];
          if (nvj <= 0) {
            continue;
          }
          d2 += nvj;
          cindex[pn++] = j;
          h += j;
        }
        if (d2 === 0) {
          cptr[i2] = csFlip(k);
          nvi = -W[nv + i2];
          dk -= nvi;
          nvk += nvi;
          nel += nvi;
          W[nv + i2] = 0;
          W[elen + i2] = -1;
        } else {
          W[degree + i2] = Math.min(W[degree + i2], d2);
          cindex[pn] = cindex[p3];
          cindex[p3] = cindex[p1];
          cindex[p1] = k;
          W[len + i2] = pn - p1 + 1;
          h = (h < 0 ? -h : h) % n;
          W[next + i2] = W[hhead + h];
          W[hhead + h] = i2;
          last[i2] = h;
        }
      }
      W[degree + k] = dk;
      lemax = Math.max(lemax, dk);
      mark = _wclear(mark + lemax, lemax, W, w, n);
      for (pk = pk1; pk < pk2; pk++) {
        i2 = cindex[pk];
        if (W[nv + i2] >= 0) {
          continue;
        }
        h = last[i2];
        i2 = W[hhead + h];
        W[hhead + h] = -1;
        for (; i2 !== -1 && W[next + i2] !== -1; i2 = W[next + i2], mark++) {
          ln2 = W[len + i2];
          eln = W[elen + i2];
          for (p = cptr[i2] + 1; p <= cptr[i2] + ln2 - 1; p++) {
            W[w + cindex[p]] = mark;
          }
          var jlast = i2;
          for (j = W[next + i2]; j !== -1; ) {
            var ok2 = W[len + j] === ln2 && W[elen + j] === eln;
            for (p = cptr[j] + 1; ok2 && p <= cptr[j] + ln2 - 1; p++) {
              if (W[w + cindex[p]] !== mark) {
                ok2 = 0;
              }
            }
            if (ok2) {
              cptr[j] = csFlip(i2);
              W[nv + i2] += W[nv + j];
              W[nv + j] = 0;
              W[elen + j] = -1;
              j = W[next + j];
              W[next + jlast] = j;
            } else {
              jlast = j;
              j = W[next + j];
            }
          }
        }
      }
      for (p = pk1, pk = pk1; pk < pk2; pk++) {
        i2 = cindex[pk];
        if ((nvi = -W[nv + i2]) <= 0) {
          continue;
        }
        W[nv + i2] = nvi;
        d2 = W[degree + i2] + dk - nvi;
        d2 = Math.min(d2, n - nel - nvi);
        if (W[head + d2] !== -1) {
          last[W[head + d2]] = i2;
        }
        W[next + i2] = W[head + d2];
        last[i2] = -1;
        W[head + d2] = i2;
        mindeg = Math.min(mindeg, d2);
        W[degree + i2] = d2;
        cindex[p++] = i2;
      }
      W[nv + k] = nvk;
      if ((W[len + k] = p - pk1) === 0) {
        cptr[k] = -1;
        W[w + k] = 0;
      }
      if (elenk !== 0) {
        cnz = p;
      }
    }
    for (i2 = 0; i2 < n; i2++) {
      cptr[i2] = csFlip(cptr[i2]);
    }
    for (j = 0; j <= n; j++) {
      W[head + j] = -1;
    }
    for (j = n; j >= 0; j--) {
      if (W[nv + j] > 0) {
        continue;
      }
      W[next + j] = W[head + cptr[j]];
      W[head + cptr[j]] = j;
    }
    for (e3 = n; e3 >= 0; e3--) {
      if (W[nv + e3] <= 0) {
        continue;
      }
      if (cptr[e3] !== -1) {
        W[next + e3] = W[head + cptr[e3]];
        W[head + cptr[e3]] = e3;
      }
    }
    for (k = 0, i2 = 0; i2 <= n; i2++) {
      if (cptr[i2] === -1) {
        k = csTdfs(i2, k, W, head, next, P4, w);
      }
    }
    P4.splice(P4.length - 1, 1);
    return P4;
  };
  function _createTargetMatrix(order, a, m, n, dense) {
    var at = transpose2(a);
    if (order === 1 && n === m) {
      return add4(a, at);
    }
    if (order === 2) {
      var tindex = at._index;
      var tptr = at._ptr;
      var p2 = 0;
      for (var j = 0; j < m; j++) {
        var p = tptr[j];
        tptr[j] = p2;
        if (tptr[j + 1] - p > dense) {
          continue;
        }
        for (var p1 = tptr[j + 1]; p < p1; p++) {
          tindex[p2++] = tindex[p];
        }
      }
      tptr[m] = p2;
      a = transpose2(at);
      return multiply2(at, a);
    }
    return multiply2(at, a);
  }
  function _initializeQuotientGraph(n, cptr, W, len, head, last, next, hhead, nv, w, elen, degree) {
    for (var k = 0; k < n; k++) {
      W[len + k] = cptr[k + 1] - cptr[k];
    }
    W[len + n] = 0;
    for (var i2 = 0; i2 <= n; i2++) {
      W[head + i2] = -1;
      last[i2] = -1;
      W[next + i2] = -1;
      W[hhead + i2] = -1;
      W[nv + i2] = 1;
      W[w + i2] = 1;
      W[elen + i2] = 0;
      W[degree + i2] = W[len + i2];
    }
    var mark = _wclear(0, 0, W, w, n);
    W[elen + n] = -2;
    cptr[n] = -1;
    W[w + n] = 0;
    return mark;
  }
  function _initializeDegreeLists(n, cptr, W, degree, elen, w, dense, nv, head, last, next) {
    var nel = 0;
    for (var i2 = 0; i2 < n; i2++) {
      var d2 = W[degree + i2];
      if (d2 === 0) {
        W[elen + i2] = -2;
        nel++;
        cptr[i2] = -1;
        W[w + i2] = 0;
      } else if (d2 > dense) {
        W[nv + i2] = 0;
        W[elen + i2] = -1;
        nel++;
        cptr[i2] = csFlip(n);
        W[nv + n]++;
      } else {
        var h = W[head + d2];
        if (h !== -1) {
          last[h] = i2;
        }
        W[next + i2] = W[head + d2];
        W[head + d2] = i2;
      }
    }
    return nel;
  }
  function _wclear(mark, lemax, W, w, n) {
    if (mark < 2 || mark + lemax < 0) {
      for (var k = 0; k < n; k++) {
        if (W[w + k] !== 0) {
          W[w + k] = 1;
        }
      }
      mark = 2;
    }
    return mark;
  }
  function _diag(i2, j) {
    return i2 !== j;
  }
});

// node_modules/mathjs/lib/esm/function/algebra/sparse/csLeaf.js
function csLeaf(i2, j, w, first, maxfirst, prevleaf, ancestor) {
  var s, sparent;
  var jleaf = 0;
  var q;
  if (i2 <= j || w[first + j] <= w[maxfirst + i2]) {
    return -1;
  }
  w[maxfirst + i2] = w[first + j];
  var jprev = w[prevleaf + i2];
  w[prevleaf + i2] = j;
  if (jprev === -1) {
    jleaf = 1;
    q = i2;
  } else {
    jleaf = 2;
    for (q = jprev; q !== w[ancestor + q]; q = w[ancestor + q]) ;
    for (s = jprev; s !== q; s = sparent) {
      sparent = w[ancestor + s];
      w[ancestor + s] = q;
    }
  }
  return {
    jleaf,
    q
  };
}

// node_modules/mathjs/lib/esm/function/algebra/sparse/csCounts.js
var name230 = "csCounts";
var dependencies230 = ["transpose"];
var createCsCounts = factory(name230, dependencies230, (_ref) => {
  var {
    transpose: transpose2
  } = _ref;
  return function(a, parent, post, ata) {
    if (!a || !parent || !post) {
      return null;
    }
    var asize = a._size;
    var m = asize[0];
    var n = asize[1];
    var i2, j, k, J, p, p0, p1;
    var s = 4 * n + (ata ? n + m + 1 : 0);
    var w = [];
    var ancestor = 0;
    var maxfirst = n;
    var prevleaf = 2 * n;
    var first = 3 * n;
    var head = 4 * n;
    var next = 5 * n + 1;
    for (k = 0; k < s; k++) {
      w[k] = -1;
    }
    var colcount = [];
    var at = transpose2(a);
    var tindex = at._index;
    var tptr = at._ptr;
    for (k = 0; k < n; k++) {
      j = post[k];
      colcount[j] = w[first + j] === -1 ? 1 : 0;
      for (; j !== -1 && w[first + j] === -1; j = parent[j]) {
        w[first + j] = k;
      }
    }
    if (ata) {
      for (k = 0; k < n; k++) {
        w[post[k]] = k;
      }
      for (i2 = 0; i2 < m; i2++) {
        for (k = n, p0 = tptr[i2], p1 = tptr[i2 + 1], p = p0; p < p1; p++) {
          k = Math.min(k, w[tindex[p]]);
        }
        w[next + i2] = w[head + k];
        w[head + k] = i2;
      }
    }
    for (i2 = 0; i2 < n; i2++) {
      w[ancestor + i2] = i2;
    }
    for (k = 0; k < n; k++) {
      j = post[k];
      if (parent[j] !== -1) {
        colcount[parent[j]]--;
      }
      for (J = ata ? w[head + k] : j; J !== -1; J = ata ? w[next + J] : -1) {
        for (p = tptr[J]; p < tptr[J + 1]; p++) {
          i2 = tindex[p];
          var r = csLeaf(i2, j, w, first, maxfirst, prevleaf, ancestor);
          if (r.jleaf >= 1) {
            colcount[j]++;
          }
          if (r.jleaf === 2) {
            colcount[r.q]--;
          }
        }
      }
      if (parent[j] !== -1) {
        w[ancestor + j] = parent[j];
      }
    }
    for (j = 0; j < n; j++) {
      if (parent[j] !== -1) {
        colcount[parent[j]] += colcount[j];
      }
    }
    return colcount;
  };
});

// node_modules/mathjs/lib/esm/function/algebra/sparse/csSqr.js
var name231 = "csSqr";
var dependencies231 = ["add", "multiply", "transpose"];
var createCsSqr = factory(name231, dependencies231, (_ref) => {
  var {
    add: add4,
    multiply: multiply2,
    transpose: transpose2
  } = _ref;
  var csAmd = createCsAmd({
    add: add4,
    multiply: multiply2,
    transpose: transpose2
  });
  var csCounts = createCsCounts({
    transpose: transpose2
  });
  return function csSqr(order, a, qr2) {
    var aptr = a._ptr;
    var asize = a._size;
    var n = asize[1];
    var k;
    var s = {};
    s.q = csAmd(order, a);
    if (order && !s.q) {
      return null;
    }
    if (qr2) {
      var c = order ? csPermute(a, null, s.q, 0) : a;
      s.parent = csEtree(c, 1);
      var post = csPost(s.parent, n);
      s.cp = csCounts(c, s.parent, post, 1);
      if (c && s.parent && s.cp && _vcount(c, s)) {
        for (s.unz = 0, k = 0; k < n; k++) {
          s.unz += s.cp[k];
        }
      }
    } else {
      s.unz = 4 * aptr[n] + n;
      s.lnz = s.unz;
    }
    return s;
  };
  function _vcount(a, s) {
    var aptr = a._ptr;
    var aindex = a._index;
    var asize = a._size;
    var m = asize[0];
    var n = asize[1];
    s.pinv = [];
    s.leftmost = [];
    var parent = s.parent;
    var pinv2 = s.pinv;
    var leftmost = s.leftmost;
    var w = [];
    var next = 0;
    var head = m;
    var tail = m + n;
    var nque = m + 2 * n;
    var i2, k, p, p0, p1;
    for (k = 0; k < n; k++) {
      w[head + k] = -1;
      w[tail + k] = -1;
      w[nque + k] = 0;
    }
    for (i2 = 0; i2 < m; i2++) {
      leftmost[i2] = -1;
    }
    for (k = n - 1; k >= 0; k--) {
      for (p0 = aptr[k], p1 = aptr[k + 1], p = p0; p < p1; p++) {
        leftmost[aindex[p]] = k;
      }
    }
    for (i2 = m - 1; i2 >= 0; i2--) {
      pinv2[i2] = -1;
      k = leftmost[i2];
      if (k === -1) {
        continue;
      }
      if (w[nque + k]++ === 0) {
        w[tail + k] = i2;
      }
      w[next + i2] = w[head + k];
      w[head + k] = i2;
    }
    s.lnz = 0;
    s.m2 = m;
    for (k = 0; k < n; k++) {
      i2 = w[head + k];
      s.lnz++;
      if (i2 < 0) {
        i2 = s.m2++;
      }
      pinv2[i2] = k;
      if (--nque[k] <= 0) {
        continue;
      }
      s.lnz += w[nque + k];
      var pa = parent[k];
      if (pa !== -1) {
        if (w[nque + pa] === 0) {
          w[tail + pa] = w[tail + k];
        }
        w[next + w[tail + k]] = w[head + pa];
        w[head + pa] = w[next + i2];
        w[nque + pa] += w[nque + k];
      }
    }
    for (i2 = 0; i2 < m; i2++) {
      if (pinv2[i2] < 0) {
        pinv2[i2] = k++;
      }
    }
    return true;
  }
});

// node_modules/mathjs/lib/esm/function/algebra/sparse/csMarked.js
function csMarked(w, j) {
  return w[j] < 0;
}

// node_modules/mathjs/lib/esm/function/algebra/sparse/csMark.js
function csMark(w, j) {
  w[j] = csFlip(w[j]);
}

// node_modules/mathjs/lib/esm/function/algebra/sparse/csUnflip.js
function csUnflip(i2) {
  return i2 < 0 ? csFlip(i2) : i2;
}

// node_modules/mathjs/lib/esm/function/algebra/sparse/csDfs.js
function csDfs(j, g, top, xi, pinv2) {
  var index2 = g._index;
  var ptr = g._ptr;
  var size2 = g._size;
  var n = size2[1];
  var i2, p, p2;
  var head = 0;
  xi[0] = j;
  while (head >= 0) {
    j = xi[head];
    var jnew = pinv2 ? pinv2[j] : j;
    if (!csMarked(ptr, j)) {
      csMark(ptr, j);
      xi[n + head] = jnew < 0 ? 0 : csUnflip(ptr[jnew]);
    }
    var done = 1;
    for (p = xi[n + head], p2 = jnew < 0 ? 0 : csUnflip(ptr[jnew + 1]); p < p2; p++) {
      i2 = index2[p];
      if (csMarked(ptr, i2)) {
        continue;
      }
      xi[n + head] = p;
      xi[++head] = i2;
      done = 0;
      break;
    }
    if (done) {
      head--;
      xi[--top] = j;
    }
  }
  return top;
}

// node_modules/mathjs/lib/esm/function/algebra/sparse/csReach.js
function csReach(g, b2, k, xi, pinv2) {
  var gptr = g._ptr;
  var gsize = g._size;
  var bindex = b2._index;
  var bptr = b2._ptr;
  var n = gsize[1];
  var p, p0, p1;
  var top = n;
  for (p0 = bptr[k], p1 = bptr[k + 1], p = p0; p < p1; p++) {
    var i2 = bindex[p];
    if (!csMarked(gptr, i2)) {
      top = csDfs(i2, g, top, xi, pinv2);
    }
  }
  for (p = top; p < n; p++) {
    csMark(gptr, xi[p]);
  }
  return top;
}

// node_modules/mathjs/lib/esm/function/algebra/sparse/csSpsolve.js
var name232 = "csSpsolve";
var dependencies232 = ["divideScalar", "multiply", "subtract"];
var createCsSpsolve = factory(name232, dependencies232, (_ref) => {
  var {
    divideScalar: divideScalar2,
    multiply: multiply2,
    subtract: subtract2
  } = _ref;
  return function csSpsolve(g, b2, k, xi, x, pinv2, lo) {
    var gvalues = g._values;
    var gindex = g._index;
    var gptr = g._ptr;
    var gsize = g._size;
    var n = gsize[1];
    var bvalues = b2._values;
    var bindex = b2._index;
    var bptr = b2._ptr;
    var p, p0, p1, q;
    var top = csReach(g, b2, k, xi, pinv2);
    for (p = top; p < n; p++) {
      x[xi[p]] = 0;
    }
    for (p0 = bptr[k], p1 = bptr[k + 1], p = p0; p < p1; p++) {
      x[bindex[p]] = bvalues[p];
    }
    for (var px = top; px < n; px++) {
      var j = xi[px];
      var J = pinv2 ? pinv2[j] : j;
      if (J < 0) {
        continue;
      }
      p0 = gptr[J];
      p1 = gptr[J + 1];
      x[j] = divideScalar2(x[j], gvalues[lo ? p0 : p1 - 1]);
      p = lo ? p0 + 1 : p0;
      q = lo ? p1 : p1 - 1;
      for (; p < q; p++) {
        var i2 = gindex[p];
        x[i2] = subtract2(x[i2], multiply2(gvalues[p], x[j]));
      }
    }
    return top;
  };
});

// node_modules/mathjs/lib/esm/function/algebra/sparse/csLu.js
var name233 = "csLu";
var dependencies233 = ["abs", "divideScalar", "multiply", "subtract", "larger", "largerEq", "SparseMatrix"];
var createCsLu = factory(name233, dependencies233, (_ref) => {
  var {
    abs: abs3,
    divideScalar: divideScalar2,
    multiply: multiply2,
    subtract: subtract2,
    larger: larger2,
    largerEq: largerEq2,
    SparseMatrix: SparseMatrix2
  } = _ref;
  var csSpsolve = createCsSpsolve({
    divideScalar: divideScalar2,
    multiply: multiply2,
    subtract: subtract2
  });
  return function csLu(m, s, tol) {
    if (!m) {
      return null;
    }
    var size2 = m._size;
    var n = size2[1];
    var q;
    var lnz = 100;
    var unz = 100;
    if (s) {
      q = s.q;
      lnz = s.lnz || lnz;
      unz = s.unz || unz;
    }
    var lvalues = [];
    var lindex = [];
    var lptr = [];
    var L = new SparseMatrix2({
      values: lvalues,
      index: lindex,
      ptr: lptr,
      size: [n, n]
    });
    var uvalues = [];
    var uindex = [];
    var uptr = [];
    var U = new SparseMatrix2({
      values: uvalues,
      index: uindex,
      ptr: uptr,
      size: [n, n]
    });
    var pinv2 = [];
    var i2, p;
    var x = [];
    var xi = [];
    for (i2 = 0; i2 < n; i2++) {
      x[i2] = 0;
      pinv2[i2] = -1;
      lptr[i2 + 1] = 0;
    }
    lnz = 0;
    unz = 0;
    for (var k = 0; k < n; k++) {
      lptr[k] = lnz;
      uptr[k] = unz;
      var col = q ? q[k] : k;
      var top = csSpsolve(L, m, col, xi, x, pinv2, 1);
      var ipiv = -1;
      var a = -1;
      for (p = top; p < n; p++) {
        i2 = xi[p];
        if (pinv2[i2] < 0) {
          var xabs = abs3(x[i2]);
          if (larger2(xabs, a)) {
            a = xabs;
            ipiv = i2;
          }
        } else {
          uindex[unz] = pinv2[i2];
          uvalues[unz++] = x[i2];
        }
      }
      if (ipiv === -1 || a <= 0) {
        return null;
      }
      if (pinv2[col] < 0 && largerEq2(abs3(x[col]), multiply2(a, tol))) {
        ipiv = col;
      }
      var pivot = x[ipiv];
      uindex[unz] = k;
      uvalues[unz++] = pivot;
      pinv2[ipiv] = k;
      lindex[lnz] = ipiv;
      lvalues[lnz++] = 1;
      for (p = top; p < n; p++) {
        i2 = xi[p];
        if (pinv2[i2] < 0) {
          lindex[lnz] = i2;
          lvalues[lnz++] = divideScalar2(x[i2], pivot);
        }
        x[i2] = 0;
      }
    }
    lptr[n] = lnz;
    uptr[n] = unz;
    for (p = 0; p < lnz; p++) {
      lindex[p] = pinv2[lindex[p]];
    }
    lvalues.splice(lnz, lvalues.length - lnz);
    lindex.splice(lnz, lindex.length - lnz);
    uvalues.splice(unz, uvalues.length - unz);
    uindex.splice(unz, uindex.length - unz);
    return {
      L,
      U,
      pinv: pinv2
    };
  };
});

// node_modules/mathjs/lib/esm/function/algebra/decomposition/slu.js
var name234 = "slu";
var dependencies234 = ["typed", "abs", "add", "multiply", "transpose", "divideScalar", "subtract", "larger", "largerEq", "SparseMatrix"];
var createSlu = factory(name234, dependencies234, (_ref) => {
  var {
    typed: typed2,
    abs: abs3,
    add: add4,
    multiply: multiply2,
    transpose: transpose2,
    divideScalar: divideScalar2,
    subtract: subtract2,
    larger: larger2,
    largerEq: largerEq2,
    SparseMatrix: SparseMatrix2
  } = _ref;
  var csSqr = createCsSqr({
    add: add4,
    multiply: multiply2,
    transpose: transpose2
  });
  var csLu = createCsLu({
    abs: abs3,
    divideScalar: divideScalar2,
    multiply: multiply2,
    subtract: subtract2,
    larger: larger2,
    largerEq: largerEq2,
    SparseMatrix: SparseMatrix2
  });
  return typed2(name234, {
    "SparseMatrix, number, number": function SparseMatrixNumberNumber(a, order, threshold) {
      if (!isInteger(order) || order < 0 || order > 3) {
        throw new Error("Symbolic Ordering and Analysis order must be an integer number in the interval [0, 3]");
      }
      if (threshold < 0 || threshold > 1) {
        throw new Error("Partial pivoting threshold must be a number from 0 to 1");
      }
      var s = csSqr(order, a, false);
      var f = csLu(a, s, threshold);
      return {
        L: f.L,
        U: f.U,
        p: f.pinv,
        q: s.q,
        toString: function toString() {
          return "L: " + this.L.toString() + "\nU: " + this.U.toString() + "\np: " + this.p.toString() + (this.q ? "\nq: " + this.q.toString() : "") + "\n";
        }
      };
    }
  });
});

// node_modules/mathjs/lib/esm/function/algebra/sparse/csIpvec.js
function csIpvec(p, b2) {
  var k;
  var n = b2.length;
  var x = [];
  if (p) {
    for (k = 0; k < n; k++) {
      x[p[k]] = b2[k];
    }
  } else {
    for (k = 0; k < n; k++) {
      x[k] = b2[k];
    }
  }
  return x;
}

// node_modules/mathjs/lib/esm/function/algebra/solver/lusolve.js
var name235 = "lusolve";
var dependencies235 = ["typed", "matrix", "lup", "slu", "usolve", "lsolve", "DenseMatrix"];
var createLusolve = factory(name235, dependencies235, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    lup: lup2,
    slu: slu2,
    usolve: usolve2,
    lsolve: lsolve2,
    DenseMatrix: DenseMatrix2
  } = _ref;
  var solveValidation = createSolveValidation({
    DenseMatrix: DenseMatrix2
  });
  return typed2(name235, {
    "Array, Array | Matrix": function ArrayArrayMatrix(a, b2) {
      a = matrix2(a);
      var d2 = lup2(a);
      var x = _lusolve(d2.L, d2.U, d2.p, null, b2);
      return x.valueOf();
    },
    "DenseMatrix, Array | Matrix": function DenseMatrixArrayMatrix(a, b2) {
      var d2 = lup2(a);
      return _lusolve(d2.L, d2.U, d2.p, null, b2);
    },
    "SparseMatrix, Array | Matrix": function SparseMatrixArrayMatrix(a, b2) {
      var d2 = lup2(a);
      return _lusolve(d2.L, d2.U, d2.p, null, b2);
    },
    "SparseMatrix, Array | Matrix, number, number": function SparseMatrixArrayMatrixNumberNumber(a, b2, order, threshold) {
      var d2 = slu2(a, order, threshold);
      return _lusolve(d2.L, d2.U, d2.p, d2.q, b2);
    },
    "Object, Array | Matrix": function ObjectArrayMatrix(d2, b2) {
      return _lusolve(d2.L, d2.U, d2.p, d2.q, b2);
    }
  });
  function _toMatrix(a) {
    if (isMatrix(a)) {
      return a;
    }
    if (isArray(a)) {
      return matrix2(a);
    }
    throw new TypeError("Invalid Matrix LU decomposition");
  }
  function _lusolve(l, u, p, q, b2) {
    l = _toMatrix(l);
    u = _toMatrix(u);
    if (p) {
      b2 = solveValidation(l, b2, true);
      b2._data = csIpvec(p, b2._data);
    }
    var y = lsolve2(l, b2);
    var x = usolve2(u, y);
    if (q) {
      x._data = csIpvec(q, x._data);
    }
    return x;
  }
});

// node_modules/mathjs/lib/esm/function/algebra/polynomialRoot.js
var name236 = "polynomialRoot";
var dependencies236 = ["typed", "isZero", "equalScalar", "add", "subtract", "multiply", "divide", "sqrt", "unaryMinus", "cbrt", "typeOf", "im", "re"];
var createPolynomialRoot = factory(name236, dependencies236, (_ref) => {
  var {
    typed: typed2,
    isZero: isZero2,
    equalScalar: equalScalar2,
    add: add4,
    subtract: subtract2,
    multiply: multiply2,
    divide: divide3,
    sqrt: sqrt3,
    unaryMinus: unaryMinus2,
    cbrt: cbrt5,
    typeOf: typeOf3,
    im: im2,
    re: re2
  } = _ref;
  return typed2(name236, {
    "number|Complex, ...number|Complex": (constant, restCoeffs) => {
      var coeffs = [constant, ...restCoeffs];
      while (coeffs.length > 0 && isZero2(coeffs[coeffs.length - 1])) {
        coeffs.pop();
      }
      if (coeffs.length < 2) {
        throw new RangeError("Polynomial [".concat(constant, ", ").concat(restCoeffs, "] must have a non-zero non-constant coefficient"));
      }
      switch (coeffs.length) {
        case 2:
          return [unaryMinus2(divide3(coeffs[0], coeffs[1]))];
        case 3: {
          var [c, b2, a] = coeffs;
          var denom = multiply2(2, a);
          var d1 = multiply2(b2, b2);
          var d2 = multiply2(4, a, c);
          if (equalScalar2(d1, d2)) return [divide3(unaryMinus2(b2), denom)];
          var discriminant = sqrt3(subtract2(d1, d2));
          return [divide3(subtract2(discriminant, b2), denom), divide3(subtract2(unaryMinus2(discriminant), b2), denom)];
        }
        case 4: {
          var [d3, _c, _b, _a7] = coeffs;
          var _denom = unaryMinus2(multiply2(3, _a7));
          var D0_1 = multiply2(_b, _b);
          var D0_2 = multiply2(3, _a7, _c);
          var D1_1 = add4(multiply2(2, _b, _b, _b), multiply2(27, _a7, _a7, d3));
          var D1_2 = multiply2(9, _a7, _b, _c);
          if (equalScalar2(D0_1, D0_2) && equalScalar2(D1_1, D1_2)) {
            return [divide3(_b, _denom)];
          }
          var Delta0 = subtract2(D0_1, D0_2);
          var Delta1 = subtract2(D1_1, D1_2);
          var discriminant1 = add4(multiply2(18, _a7, _b, _c, d3), multiply2(_b, _b, _c, _c));
          var discriminant2 = add4(multiply2(4, _b, _b, _b, d3), multiply2(4, _a7, _c, _c, _c), multiply2(27, _a7, _a7, d3, d3));
          if (equalScalar2(discriminant1, discriminant2)) {
            return [
              divide3(subtract2(multiply2(4, _a7, _b, _c), add4(multiply2(9, _a7, _a7, d3), multiply2(_b, _b, _b))), multiply2(_a7, Delta0)),
              // simple root
              divide3(subtract2(multiply2(9, _a7, d3), multiply2(_b, _c)), multiply2(2, Delta0))
              // double root
            ];
          }
          var Ccubed;
          if (equalScalar2(D0_1, D0_2)) {
            Ccubed = Delta1;
          } else {
            Ccubed = divide3(add4(Delta1, sqrt3(subtract2(multiply2(Delta1, Delta1), multiply2(4, Delta0, Delta0, Delta0)))), 2);
          }
          var allRoots = true;
          var rawRoots = cbrt5(Ccubed, allRoots).toArray().map((C) => divide3(add4(_b, C, divide3(Delta0, C)), _denom));
          return rawRoots.map((r) => {
            if (typeOf3(r) === "Complex" && equalScalar2(re2(r), re2(r) + im2(r))) {
              return re2(r);
            }
            return r;
          });
        }
        default:
          throw new RangeError("only implemented for cubic or lower-order polynomials, not ".concat(coeffs));
      }
    }
  });
});

// node_modules/mathjs/lib/esm/expression/Help.js
var name237 = "Help";
var dependencies237 = ["evaluate"];
var createHelpClass = factory(name237, dependencies237, (_ref) => {
  var {
    evaluate: evaluate2
  } = _ref;
  function Help2(doc) {
    if (!(this instanceof Help2)) {
      throw new SyntaxError("Constructor must be called with the new operator");
    }
    if (!doc) throw new Error('Argument "doc" missing');
    this.doc = doc;
  }
  Help2.prototype.type = "Help";
  Help2.prototype.isHelp = true;
  Help2.prototype.toString = function() {
    var doc = this.doc || {};
    var desc = "\n";
    if (doc.name) {
      desc += "Name: " + doc.name + "\n\n";
    }
    if (doc.category) {
      desc += "Category: " + doc.category + "\n\n";
    }
    if (doc.description) {
      desc += "Description:\n    " + doc.description + "\n\n";
    }
    if (doc.syntax) {
      desc += "Syntax:\n    " + doc.syntax.join("\n    ") + "\n\n";
    }
    if (doc.examples) {
      desc += "Examples:\n";
      var configChanged = false;
      var originalConfig = evaluate2("config()");
      var scope = {
        config: (newConfig) => {
          configChanged = true;
          return evaluate2("config(newConfig)", {
            newConfig
          });
        }
      };
      for (var i2 = 0; i2 < doc.examples.length; i2++) {
        var expr = doc.examples[i2];
        desc += "    " + expr + "\n";
        var res = void 0;
        try {
          res = evaluate2(expr, scope);
        } catch (e3) {
          res = e3;
        }
        if (res !== void 0 && !isHelp(res)) {
          desc += "        " + format3(res, {
            precision: 14
          }) + "\n";
        }
      }
      desc += "\n";
      if (configChanged) {
        evaluate2("config(originalConfig)", {
          originalConfig
        });
      }
    }
    if (doc.mayThrow && doc.mayThrow.length) {
      desc += "Throws: " + doc.mayThrow.join(", ") + "\n\n";
    }
    if (doc.seealso && doc.seealso.length) {
      desc += "See also: " + doc.seealso.join(", ") + "\n";
    }
    return desc;
  };
  Help2.prototype.toJSON = function() {
    var obj = clone(this.doc);
    obj.mathjs = "Help";
    return obj;
  };
  Help2.fromJSON = function(json) {
    var doc = {};
    Object.keys(json).filter((prop) => prop !== "mathjs").forEach((prop) => {
      doc[prop] = json[prop];
    });
    return new Help2(doc);
  };
  Help2.prototype.valueOf = Help2.prototype.toString;
  return Help2;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/type/chain/Chain.js
var name238 = "Chain";
var dependencies238 = ["?on", "math", "typed"];
var createChainClass = factory(name238, dependencies238, (_ref) => {
  var {
    on,
    math: math2,
    typed: typed2
  } = _ref;
  function Chain2(value) {
    if (!(this instanceof Chain2)) {
      throw new SyntaxError("Constructor must be called with the new operator");
    }
    if (isChain(value)) {
      this.value = value.value;
    } else {
      this.value = value;
    }
  }
  Chain2.prototype.type = "Chain";
  Chain2.prototype.isChain = true;
  Chain2.prototype.done = function() {
    return this.value;
  };
  Chain2.prototype.valueOf = function() {
    return this.value;
  };
  Chain2.prototype.toString = function() {
    return format3(this.value);
  };
  Chain2.prototype.toJSON = function() {
    return {
      mathjs: "Chain",
      value: this.value
    };
  };
  Chain2.fromJSON = function(json) {
    return new Chain2(json.value);
  };
  function createProxy(name314, fn) {
    if (typeof fn === "function") {
      Chain2.prototype[name314] = chainify(fn);
    }
  }
  function createLazyProxy(name314, resolver) {
    lazy(Chain2.prototype, name314, function outerResolver() {
      var fn = resolver();
      if (typeof fn === "function") {
        return chainify(fn);
      }
      return void 0;
    });
  }
  function chainify(fn) {
    return function() {
      if (arguments.length === 0) {
        return new Chain2(fn(this.value));
      }
      var args = [this.value];
      for (var i2 = 0; i2 < arguments.length; i2++) {
        args[i2 + 1] = arguments[i2];
      }
      if (typed2.isTypedFunction(fn)) {
        var sigObject = typed2.resolve(fn, args);
        if (sigObject.params.length === 1) {
          throw new Error("chain function " + fn.name + " cannot match rest parameter between chain value and additional arguments.");
        }
        return new Chain2(sigObject.implementation.apply(fn, args));
      }
      return new Chain2(fn.apply(fn, args));
    };
  }
  Chain2.createProxy = function(arg0, arg1) {
    if (typeof arg0 === "string") {
      createProxy(arg0, arg1);
    } else {
      var _loop = function _loop2(_name2) {
        if (hasOwnProperty(arg0, _name2) && excludedNames[_name2] === void 0) {
          createLazyProxy(_name2, () => arg0[_name2]);
        }
      };
      for (var _name in arg0) {
        _loop(_name);
      }
    }
  };
  var excludedNames = {
    expression: true,
    docs: true,
    type: true,
    classes: true,
    json: true,
    error: true,
    isChain: true
    // conflicts with the property isChain of a Chain instance
  };
  Chain2.createProxy(math2);
  if (on) {
    on("import", function(name314, resolver, path) {
      if (!path) {
        createLazyProxy(name314, resolver);
      }
    });
  }
  return Chain2;
}, {
  isClass: true
});

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/e.js
var eDocs = {
  name: "e",
  category: "Constants",
  syntax: ["e"],
  description: "Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",
  examples: ["e", "e ^ 2", "exp(2)", "log(e)"],
  seealso: ["exp"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/false.js
var falseDocs = {
  name: "false",
  category: "Constants",
  syntax: ["false"],
  description: "Boolean value false",
  examples: ["false"],
  seealso: ["true"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/i.js
var iDocs = {
  name: "i",
  category: "Constants",
  syntax: ["i"],
  description: "Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",
  examples: ["i", "i * i", "sqrt(-1)"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/Infinity.js
var InfinityDocs = {
  name: "Infinity",
  category: "Constants",
  syntax: ["Infinity"],
  description: "Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",
  examples: ["Infinity", "1 / 0"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/LN10.js
var LN10Docs = {
  name: "LN10",
  category: "Constants",
  syntax: ["LN10"],
  description: "Returns the natural logarithm of 10, approximately equal to 2.302",
  examples: ["LN10", "log(10)"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/LN2.js
var LN2Docs = {
  name: "LN2",
  category: "Constants",
  syntax: ["LN2"],
  description: "Returns the natural logarithm of 2, approximately equal to 0.693",
  examples: ["LN2", "log(2)"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/LOG10E.js
var LOG10EDocs = {
  name: "LOG10E",
  category: "Constants",
  syntax: ["LOG10E"],
  description: "Returns the base-10 logarithm of E, approximately equal to 0.434",
  examples: ["LOG10E", "log(e, 10)"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/LOG2E.js
var LOG2EDocs = {
  name: "LOG2E",
  category: "Constants",
  syntax: ["LOG2E"],
  description: "Returns the base-2 logarithm of E, approximately equal to 1.442",
  examples: ["LOG2E", "log(e, 2)"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/NaN.js
var NaNDocs = {
  name: "NaN",
  category: "Constants",
  syntax: ["NaN"],
  description: "Not a number",
  examples: ["NaN", "0 / 0"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/null.js
var nullDocs = {
  name: "null",
  category: "Constants",
  syntax: ["null"],
  description: "Value null",
  examples: ["null"],
  seealso: ["true", "false"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/phi.js
var phiDocs = {
  name: "phi",
  category: "Constants",
  syntax: ["phi"],
  description: "Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",
  examples: ["phi"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/pi.js
var piDocs = {
  name: "pi",
  category: "Constants",
  syntax: ["pi"],
  description: "The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",
  examples: ["pi", "sin(pi/2)"],
  seealso: ["tau"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/SQRT1_2.js
var SQRT12Docs = {
  name: "SQRT1_2",
  category: "Constants",
  syntax: ["SQRT1_2"],
  description: "Returns the square root of 1/2, approximately equal to 0.707",
  examples: ["SQRT1_2", "sqrt(1/2)"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/SQRT2.js
var SQRT2Docs = {
  name: "SQRT2",
  category: "Constants",
  syntax: ["SQRT2"],
  description: "Returns the square root of 2, approximately equal to 1.414",
  examples: ["SQRT2", "sqrt(2)"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/tau.js
var tauDocs = {
  name: "tau",
  category: "Constants",
  syntax: ["tau"],
  description: "Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",
  examples: ["tau", "2 * pi"],
  seealso: ["pi"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/true.js
var trueDocs = {
  name: "true",
  category: "Constants",
  syntax: ["true"],
  description: "Boolean value true",
  examples: ["true"],
  seealso: ["false"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/constants/version.js
var versionDocs = {
  name: "version",
  category: "Constants",
  syntax: ["version"],
  description: "A string with the version number of math.js",
  examples: ["version"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/construction/bignumber.js
var bignumberDocs = {
  name: "bignumber",
  category: "Construction",
  syntax: ["bignumber(x)"],
  description: "Create a big number from a number or string.",
  examples: ["0.1 + 0.2", "bignumber(0.1) + bignumber(0.2)", 'bignumber("7.2")', 'bignumber("7.2e500")', "bignumber([0.1, 0.2, 0.3])"],
  seealso: ["boolean", "complex", "fraction", "index", "matrix", "string", "unit"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/construction/boolean.js
var booleanDocs = {
  name: "boolean",
  category: "Construction",
  syntax: ["x", "boolean(x)"],
  description: "Convert a string or number into a boolean.",
  examples: ["boolean(0)", "boolean(1)", "boolean(3)", 'boolean("true")', 'boolean("false")', "boolean([1, 0, 1, 1])"],
  seealso: ["bignumber", "complex", "index", "matrix", "number", "string", "unit"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/construction/complex.js
var complexDocs = {
  name: "complex",
  category: "Construction",
  syntax: ["complex()", "complex(re, im)", "complex(string)"],
  description: "Create a complex number.",
  examples: ["complex()", "complex(2, 3)", 'complex("7 - 2i")'],
  seealso: ["bignumber", "boolean", "index", "matrix", "number", "string", "unit"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/construction/createUnit.js
var createUnitDocs = {
  name: "createUnit",
  category: "Construction",
  syntax: ["createUnit(definitions)", "createUnit(name, definition)"],
  description: "Create a user-defined unit and register it with the Unit type.",
  examples: ['createUnit("foo")', 'createUnit("knot", {definition: "0.514444444 m/s", aliases: ["knots", "kt", "kts"]})', 'createUnit("mph", "1 mile/hour")'],
  seealso: ["unit", "splitUnit"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/construction/fraction.js
var fractionDocs = {
  name: "fraction",
  category: "Construction",
  syntax: ["fraction(num)", "fraction(matrix)", "fraction(num,den)", "fraction({n: num, d: den})"],
  description: "Create a fraction from a number or from integer numerator and denominator.",
  examples: ["fraction(0.125)", "fraction(1, 3) + fraction(2, 5)", "fraction({n: 333, d: 53})", "fraction([sqrt(9), sqrt(10), sqrt(11)])"],
  seealso: ["bignumber", "boolean", "complex", "index", "matrix", "string", "unit"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/construction/index.js
var indexDocs = {
  name: "index",
  category: "Construction",
  syntax: ["[start]", "[start:end]", "[start:step:end]", "[start1, start 2, ...]", "[start1:end1, start2:end2, ...]", "[start1:step1:end1, start2:step2:end2, ...]"],
  description: "Create an index to get or replace a subset of a matrix",
  examples: ["A = [1, 2, 3; 4, 5, 6]", "A[1, :]", "A[1, 2] = 50", "A[1:2, 1:2] = 1", "B = [1, 2, 3]", "B[B>1 and B<3]"],
  seealso: ["bignumber", "boolean", "complex", "matrix,", "number", "range", "string", "unit"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/construction/matrix.js
var matrixDocs = {
  name: "matrix",
  category: "Construction",
  syntax: ["[]", "[a1, b1, ...; a2, b2, ...]", "matrix()", 'matrix("dense")', "matrix([...])"],
  description: "Create a matrix.",
  examples: ["[]", "[1, 2, 3]", "[1, 2, 3; 4, 5, 6]", "matrix()", "matrix([3, 4])", 'matrix([3, 4; 5, 6], "sparse")', 'matrix([3, 4; 5, 6], "sparse", "number")'],
  seealso: ["bignumber", "boolean", "complex", "index", "number", "string", "unit", "sparse"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/construction/number.js
var numberDocs = {
  name: "number",
  category: "Construction",
  syntax: ["x", "number(x)", "number(unit, valuelessUnit)"],
  description: "Create a number or convert a string or boolean into a number.",
  examples: ["2", "2e3", "4.05", "number(2)", 'number("7.2")', "number(true)", "number([true, false, true, true])", 'number(unit("52cm"), "m")'],
  seealso: ["bignumber", "boolean", "complex", "fraction", "index", "matrix", "string", "unit"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/construction/sparse.js
var sparseDocs = {
  name: "sparse",
  category: "Construction",
  syntax: ["sparse()", "sparse([a1, b1, ...; a1, b2, ...])", 'sparse([a1, b1, ...; a1, b2, ...], "number")'],
  description: "Create a sparse matrix.",
  examples: ["sparse()", "sparse([3, 4; 5, 6])", 'sparse([3, 0; 5, 0], "number")'],
  seealso: ["bignumber", "boolean", "complex", "index", "number", "string", "unit", "matrix"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/construction/splitUnit.js
var splitUnitDocs = {
  name: "splitUnit",
  category: "Construction",
  syntax: ["splitUnit(unit: Unit, parts: Unit[])"],
  description: "Split a unit in an array of units whose sum is equal to the original unit.",
  examples: ['splitUnit(1 m, ["feet", "inch"])'],
  seealso: ["unit", "createUnit"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/construction/string.js
var stringDocs = {
  name: "string",
  category: "Construction",
  syntax: ['"text"', "string(x)"],
  description: "Create a string or convert a value to a string",
  examples: ['"Hello World!"', "string(4.2)", "string(3 + 2i)"],
  seealso: ["bignumber", "boolean", "complex", "index", "matrix", "number", "unit"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/construction/unit.js
var unitDocs = {
  name: "unit",
  category: "Construction",
  syntax: ["value unit", "unit(value, unit)", "unit(string)"],
  description: "Create a unit.",
  examples: ["5.5 mm", "3 inch", 'unit(7.1, "kilogram")', 'unit("23 deg")'],
  seealso: ["bignumber", "boolean", "complex", "index", "matrix", "number", "string"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/core/config.js
var configDocs = {
  name: "config",
  category: "Core",
  syntax: ["config()", "config(options)"],
  description: "Get configuration or change configuration.",
  examples: ["config()", "1/3 + 1/4", 'config({number: "Fraction"})', "1/3 + 1/4"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/core/import.js
var importDocs = {
  name: "import",
  category: "Core",
  syntax: ["import(functions)", "import(functions, options)"],
  description: "Import functions or constants from an object.",
  examples: ["import({myFn: f(x)=x^2, myConstant: 32 })", "myFn(2)", "myConstant"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/core/typed.js
var typedDocs = {
  name: "typed",
  category: "Core",
  syntax: ["typed(signatures)", "typed(name, signatures)"],
  description: "Create a typed function.",
  examples: ['double = typed({ "number": f(x)=x+x, "string": f(x)=concat(x,x) })', "double(2)", 'double("hello")'],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/derivative.js
var derivativeDocs = {
  name: "derivative",
  category: "Algebra",
  syntax: ["derivative(expr, variable)", "derivative(expr, variable, {simplify: boolean})"],
  description: "Takes the derivative of an expression expressed in parser Nodes. The derivative will be taken over the supplied variable in the second parameter. If there are multiple variables in the expression, it will return a partial derivative.",
  examples: ['derivative("2x^3", "x")', 'derivative("2x^3", "x", {simplify: false})', 'derivative("2x^2 + 3x + 4", "x")', 'derivative("sin(2x)", "x")', 'f = parse("x^2 + x")', 'x = parse("x")', "df = derivative(f, x)", "df.evaluate({x: 3})"],
  seealso: ["simplify", "parse", "evaluate"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/leafCount.js
var leafCountDocs = {
  name: "leafCount",
  category: "Algebra",
  syntax: ["leafCount(expr)"],
  description: "Computes the number of leaves in the parse tree of the given expression",
  examples: ['leafCount("e^(i*pi)-1")', 'leafCount(parse("{a: 22/7, b: 10^(1/2)}"))'],
  seealso: ["simplify"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/lsolve.js
var lsolveDocs = {
  name: "lsolve",
  category: "Algebra",
  syntax: ["x=lsolve(L, b)"],
  description: "Finds one solution of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",
  examples: ["a = [-2, 3; 2, 1]", "b = [11, 9]", "x = lsolve(a, b)"],
  seealso: ["lsolveAll", "lup", "lusolve", "usolve", "matrix", "sparse"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/lsolveAll.js
var lsolveAllDocs = {
  name: "lsolveAll",
  category: "Algebra",
  syntax: ["x=lsolveAll(L, b)"],
  description: "Finds all solutions of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",
  examples: ["a = [-2, 3; 2, 1]", "b = [11, 9]", "x = lsolve(a, b)"],
  seealso: ["lsolve", "lup", "lusolve", "usolve", "matrix", "sparse"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/lup.js
var lupDocs = {
  name: "lup",
  category: "Algebra",
  syntax: ["lup(m)"],
  description: "Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",
  examples: ["lup([[2, 1], [1, 4]])", "lup(matrix([[2, 1], [1, 4]]))", "lup(sparse([[2, 1], [1, 4]]))"],
  seealso: ["lusolve", "lsolve", "usolve", "matrix", "sparse", "slu", "qr"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/lusolve.js
var lusolveDocs = {
  name: "lusolve",
  category: "Algebra",
  syntax: ["x=lusolve(A, b)", "x=lusolve(lu, b)"],
  description: "Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",
  examples: ["a = [-2, 3; 2, 1]", "b = [11, 9]", "x = lusolve(a, b)"],
  seealso: ["lup", "slu", "lsolve", "usolve", "matrix", "sparse"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/polynomialRoot.js
var polynomialRootDocs = {
  name: "polynomialRoot",
  category: "Algebra",
  syntax: ["x=polynomialRoot(-6, 3)", "x=polynomialRoot(4, -4, 1)", "x=polynomialRoot(-8, 12, -6, 1)"],
  description: "Finds the roots of a univariate polynomial given by its coefficients starting from constant, linear, and so on, increasing in degree.",
  examples: ["a = polynomialRoot(-6, 11, -6, 1)"],
  seealso: ["cbrt", "sqrt"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/qr.js
var qrDocs = {
  name: "qr",
  category: "Algebra",
  syntax: ["qr(A)"],
  description: "Calculates the Matrix QR decomposition. Matrix `A` is decomposed in two matrices (`Q`, `R`) where `Q` is an orthogonal matrix and `R` is an upper triangular matrix.",
  examples: ["qr([[1, -1,  4], [1,  4, -2], [1,  4,  2], [1,  -1, 0]])"],
  seealso: ["lup", "slu", "matrix"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/rationalize.js
var rationalizeDocs = {
  name: "rationalize",
  category: "Algebra",
  syntax: ["rationalize(expr)", "rationalize(expr, scope)", "rationalize(expr, scope, detailed)"],
  description: "Transform a rationalizable expression in a rational fraction. If rational fraction is one variable polynomial then converts the numerator and denominator in canonical form, with decreasing exponents, returning the coefficients of numerator.",
  examples: ['rationalize("2x/y - y/(x+1)")', 'rationalize("2x/y - y/(x+1)", true)'],
  seealso: ["simplify"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/resolve.js
var resolveDocs = {
  name: "resolve",
  category: "Algebra",
  syntax: ["resolve(node, scope)"],
  description: "Recursively substitute variables in an expression tree.",
  examples: ['resolve(parse("1 + x"), { x: 7 })', 'resolve(parse("size(text)"), { text: "Hello World" })', 'resolve(parse("x + y"), { x: parse("3z") })', 'resolve(parse("3x"), { x: parse("y+z"), z: parse("w^y") })'],
  seealso: ["simplify", "evaluate"],
  mayThrow: ["ReferenceError"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/simplify.js
var simplifyDocs = {
  name: "simplify",
  category: "Algebra",
  syntax: ["simplify(expr)", "simplify(expr, rules)"],
  description: "Simplify an expression tree.",
  examples: ['simplify("3 + 2 / 4")', 'simplify("2x + x")', 'f = parse("x * (x + 2 + x)")', "simplified = simplify(f)", "simplified.evaluate({x: 2})"],
  seealso: ["simplifyCore", "derivative", "evaluate", "parse", "rationalize", "resolve"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/simplifyConstant.js
var simplifyConstantDocs = {
  name: "simplifyConstant",
  category: "Algebra",
  syntax: ["simplifyConstant(expr)", "simplifyConstant(expr, options)"],
  description: "Replace constant subexpressions of node with their values.",
  examples: ['simplifyConstant("(3-3)*x")', 'simplifyConstant(parse("z-cos(tau/8)"))'],
  seealso: ["simplify", "simplifyCore", "evaluate"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/simplifyCore.js
var simplifyCoreDocs = {
  name: "simplifyCore",
  category: "Algebra",
  syntax: ["simplifyCore(node)"],
  description: "Perform simple one-pass simplifications on an expression tree.",
  examples: ['simplifyCore(parse("0*x"))', 'simplifyCore(parse("(x+0)*2"))'],
  seealso: ["simplify", "simplifyConstant", "evaluate"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/slu.js
var sluDocs = {
  name: "slu",
  category: "Algebra",
  syntax: ["slu(A, order, threshold)"],
  description: "Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",
  examples: ["slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)"],
  seealso: ["lusolve", "lsolve", "usolve", "matrix", "sparse", "lup", "qr"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/symbolicEqual.js
var symbolicEqualDocs = {
  name: "symbolicEqual",
  category: "Algebra",
  syntax: ["symbolicEqual(expr1, expr2)", "symbolicEqual(expr1, expr2, options)"],
  description: "Returns true if the difference of the expressions simplifies to 0",
  examples: ['symbolicEqual("x*y","y*x")', 'symbolicEqual("abs(x^2)", "x^2")', 'symbolicEqual("abs(x)", "x", {context: {abs: {trivial: true}}})'],
  seealso: ["simplify", "evaluate"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/usolve.js
var usolveDocs = {
  name: "usolve",
  category: "Algebra",
  syntax: ["x=usolve(U, b)"],
  description: "Finds one solution of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",
  examples: ["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],
  seealso: ["usolveAll", "lup", "lusolve", "lsolve", "matrix", "sparse"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/usolveAll.js
var usolveAllDocs = {
  name: "usolveAll",
  category: "Algebra",
  syntax: ["x=usolve(U, b)"],
  description: "Finds all solutions of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",
  examples: ["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],
  seealso: ["usolve", "lup", "lusolve", "lsolve", "matrix", "sparse"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/abs.js
var absDocs = {
  name: "abs",
  category: "Arithmetic",
  syntax: ["abs(x)"],
  description: "Compute the absolute value.",
  examples: ["abs(3.5)", "abs(-4.2)"],
  seealso: ["sign"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/add.js
var addDocs = {
  name: "add",
  category: "Operators",
  syntax: ["x + y", "add(x, y)"],
  description: "Add two values.",
  examples: ["a = 2.1 + 3.6", "a - 3.6", "3 + 2i", "3 cm + 2 inch", '"2.3" + "4"'],
  seealso: ["subtract"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/cbrt.js
var cbrtDocs = {
  name: "cbrt",
  category: "Arithmetic",
  syntax: ["cbrt(x)", "cbrt(x, allRoots)"],
  description: "Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",
  examples: ["cbrt(64)", "cube(4)", "cbrt(-8)", "cbrt(2 + 3i)", "cbrt(8i)", "cbrt(8i, true)", "cbrt(27 m^3)"],
  seealso: ["square", "sqrt", "cube", "multiply"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/ceil.js
var ceilDocs = {
  name: "ceil",
  category: "Arithmetic",
  syntax: ["ceil(x)"],
  description: "Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",
  examples: ["ceil(3.2)", "ceil(3.8)", "ceil(-4.2)"],
  seealso: ["floor", "fix", "round"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/cube.js
var cubeDocs = {
  name: "cube",
  category: "Arithmetic",
  syntax: ["cube(x)"],
  description: "Compute the cube of a value. The cube of x is x * x * x.",
  examples: ["cube(2)", "2^3", "2 * 2 * 2"],
  seealso: ["multiply", "square", "pow"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/divide.js
var divideDocs = {
  name: "divide",
  category: "Operators",
  syntax: ["x / y", "divide(x, y)"],
  description: "Divide two values.",
  examples: ["a = 2 / 3", "a * 3", "4.5 / 2", "3 + 4 / 2", "(3 + 4) / 2", "18 km / 4.5"],
  seealso: ["multiply"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/dotDivide.js
var dotDivideDocs = {
  name: "dotDivide",
  category: "Operators",
  syntax: ["x ./ y", "dotDivide(x, y)"],
  description: "Divide two values element wise.",
  examples: ["a = [1, 2, 3; 4, 5, 6]", "b = [2, 1, 1; 3, 2, 5]", "a ./ b"],
  seealso: ["multiply", "dotMultiply", "divide"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/dotMultiply.js
var dotMultiplyDocs = {
  name: "dotMultiply",
  category: "Operators",
  syntax: ["x .* y", "dotMultiply(x, y)"],
  description: "Multiply two values element wise.",
  examples: ["a = [1, 2, 3; 4, 5, 6]", "b = [2, 1, 1; 3, 2, 5]", "a .* b"],
  seealso: ["multiply", "divide", "dotDivide"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/dotPow.js
var dotPowDocs = {
  name: "dotPow",
  category: "Operators",
  syntax: ["x .^ y", "dotPow(x, y)"],
  description: "Calculates the power of x to y element wise.",
  examples: ["a = [1, 2, 3; 4, 5, 6]", "a .^ 2"],
  seealso: ["pow"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/exp.js
var expDocs = {
  name: "exp",
  category: "Arithmetic",
  syntax: ["exp(x)"],
  description: "Calculate the exponent of a value.",
  examples: ["exp(1.3)", "e ^ 1.3", "log(exp(1.3))", "x = 2.4", "(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula"],
  seealso: ["expm", "expm1", "pow", "log"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/expm.js
var expmDocs = {
  name: "expm",
  category: "Arithmetic",
  syntax: ["exp(x)"],
  description: "Compute the matrix exponential, expm(A) = e^A. The matrix must be square. Not to be confused with exp(a), which performs element-wise exponentiation.",
  examples: ["expm([[0,2],[0,0]])"],
  seealso: ["exp"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/expm1.js
var expm1Docs = {
  name: "expm1",
  category: "Arithmetic",
  syntax: ["expm1(x)"],
  description: "Calculate the value of subtracting 1 from the exponential value.",
  examples: ["expm1(2)", "pow(e, 2) - 1", "log(expm1(2) + 1)"],
  seealso: ["exp", "pow", "log"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/fix.js
var fixDocs = {
  name: "fix",
  category: "Arithmetic",
  syntax: ["fix(x)"],
  description: "Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",
  examples: ["fix(3.2)", "fix(3.8)", "fix(-4.2)", "fix(-4.8)"],
  seealso: ["ceil", "floor", "round"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/floor.js
var floorDocs = {
  name: "floor",
  category: "Arithmetic",
  syntax: ["floor(x)"],
  description: "Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",
  examples: ["floor(3.2)", "floor(3.8)", "floor(-4.2)"],
  seealso: ["ceil", "fix", "round"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/gcd.js
var gcdDocs = {
  name: "gcd",
  category: "Arithmetic",
  syntax: ["gcd(a, b)", "gcd(a, b, c, ...)"],
  description: "Compute the greatest common divisor.",
  examples: ["gcd(8, 12)", "gcd(-4, 6)", "gcd(25, 15, -10)"],
  seealso: ["lcm", "xgcd"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/hypot.js
var hypotDocs = {
  name: "hypot",
  category: "Arithmetic",
  syntax: ["hypot(a, b, c, ...)", "hypot([a, b, c, ...])"],
  description: "Calculate the hypotenusa of a list with values. ",
  examples: ["hypot(3, 4)", "sqrt(3^2 + 4^2)", "hypot(-2)", "hypot([3, 4, 5])"],
  seealso: ["abs", "norm"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/invmod.js
var invmodDocs = {
  name: "invmod",
  category: "Arithmetic",
  syntax: ["invmod(a, b)"],
  description: "Calculate the (modular) multiplicative inverse of a modulo b. Solution to the equation ax ≣ 1 (mod b)",
  examples: ["invmod(8, 12)", "invmod(7, 13)", "invmod(15151, 15122)"],
  seealso: ["gcd", "xgcd"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/lcm.js
var lcmDocs = {
  name: "lcm",
  category: "Arithmetic",
  syntax: ["lcm(x, y)"],
  description: "Compute the least common multiple.",
  examples: ["lcm(4, 6)", "lcm(6, 21)", "lcm(6, 21, 5)"],
  seealso: ["gcd"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/log.js
var logDocs = {
  name: "log",
  category: "Arithmetic",
  syntax: ["log(x)", "log(x, base)"],
  description: "Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",
  examples: ["log(3.5)", "a = log(2.4)", "exp(a)", "10 ^ 4", "log(10000, 10)", "log(10000) / log(10)", "b = log(1024, 2)", "2 ^ b"],
  seealso: ["exp", "log1p", "log2", "log10"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/log10.js
var log10Docs = {
  name: "log10",
  category: "Arithmetic",
  syntax: ["log10(x)"],
  description: "Compute the 10-base logarithm of a value.",
  examples: ["log10(0.00001)", "log10(10000)", "10 ^ 4", "log(10000) / log(10)", "log(10000, 10)"],
  seealso: ["exp", "log"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/log1p.js
var log1pDocs = {
  name: "log1p",
  category: "Arithmetic",
  syntax: ["log1p(x)", "log1p(x, base)"],
  description: "Calculate the logarithm of a `value+1`",
  examples: ["log1p(2.5)", "exp(log1p(1.4))", "pow(10, 4)", "log1p(9999, 10)", "log1p(9999) / log(10)"],
  seealso: ["exp", "log", "log2", "log10"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/log2.js
var log2Docs = {
  name: "log2",
  category: "Arithmetic",
  syntax: ["log2(x)"],
  description: "Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.",
  examples: ["log2(0.03125)", "log2(16)", "log2(16) / log2(2)", "pow(2, 4)"],
  seealso: ["exp", "log1p", "log", "log10"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/mod.js
var modDocs = {
  name: "mod",
  category: "Operators",
  syntax: ["x % y", "x mod y", "mod(x, y)"],
  description: "Calculates the modulus, the remainder of an integer division.",
  examples: ["7 % 3", "11 % 2", "10 mod 4", "isOdd(x) = x % 2", "isOdd(2)", "isOdd(3)"],
  seealso: ["divide"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/multiply.js
var multiplyDocs = {
  name: "multiply",
  category: "Operators",
  syntax: ["x * y", "multiply(x, y)"],
  description: "multiply two values.",
  examples: ["a = 2.1 * 3.4", "a / 3.4", "2 * 3 + 4", "2 * (3 + 4)", "3 * 2.1 km"],
  seealso: ["divide"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/norm.js
var normDocs = {
  name: "norm",
  category: "Arithmetic",
  syntax: ["norm(x)", "norm(x, p)"],
  description: "Calculate the norm of a number, vector or matrix.",
  examples: ["abs(-3.5)", "norm(-3.5)", "norm(3 - 4i)", "norm([1, 2, -3], Infinity)", "norm([1, 2, -3], -Infinity)", "norm([3, 4], 2)", "norm([[1, 2], [3, 4]], 1)", 'norm([[1, 2], [3, 4]], "inf")', 'norm([[1, 2], [3, 4]], "fro")']
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/nthRoot.js
var nthRootDocs = {
  name: "nthRoot",
  category: "Arithmetic",
  syntax: ["nthRoot(a)", "nthRoot(a, root)"],
  description: 'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',
  examples: ["4 ^ 3", "nthRoot(64, 3)", "nthRoot(9, 2)", "sqrt(9)"],
  seealso: ["nthRoots", "pow", "sqrt"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/nthRoots.js
var nthRootsDocs = {
  name: "nthRoots",
  category: "Arithmetic",
  syntax: ["nthRoots(A)", "nthRoots(A, root)"],
  description: 'Calculate the nth roots of a value. An nth root of a positive real number A, is a positive real solution of the equation "x^root = A". This function returns an array of complex values.',
  examples: ["nthRoots(1)", "nthRoots(1, 3)"],
  seealso: ["sqrt", "pow", "nthRoot"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/pow.js
var powDocs = {
  name: "pow",
  category: "Operators",
  syntax: ["x ^ y", "pow(x, y)"],
  description: "Calculates the power of x to y, x^y.",
  examples: ["2^3", "2*2*2", "1 + e ^ (pi * i)", "pow([[1, 2], [4, 3]], 2)", "pow([[1, 2], [4, 3]], -1)"],
  seealso: ["multiply", "nthRoot", "nthRoots", "sqrt"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/round.js
var roundDocs = {
  name: "round",
  category: "Arithmetic",
  syntax: ["round(x)", "round(x, n)", "round(unit, valuelessUnit)", "round(unit, n, valuelessUnit)"],
  description: "round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",
  examples: ["round(3.2)", "round(3.8)", "round(-4.2)", "round(-4.8)", "round(pi, 3)", "round(123.45678, 2)", "round(3.241cm, 2, cm)", "round([3.2, 3.8, -4.7])"],
  seealso: ["ceil", "floor", "fix"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/sign.js
var signDocs = {
  name: "sign",
  category: "Arithmetic",
  syntax: ["sign(x)"],
  description: "Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",
  examples: ["sign(3.5)", "sign(-4.2)", "sign(0)"],
  seealso: ["abs"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/sqrt.js
var sqrtDocs = {
  name: "sqrt",
  category: "Arithmetic",
  syntax: ["sqrt(x)"],
  description: "Compute the square root value. If x = y * y, then y is the square root of x.",
  examples: ["sqrt(25)", "5 * 5", "sqrt(-1)"],
  seealso: ["square", "sqrtm", "multiply", "nthRoot", "nthRoots", "pow"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/sqrtm.js
var sqrtmDocs = {
  name: "sqrtm",
  category: "Arithmetic",
  syntax: ["sqrtm(x)"],
  description: "Calculate the principal square root of a square matrix. The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.",
  examples: ["sqrtm([[33, 24], [48, 57]])"],
  seealso: ["sqrt", "abs", "square", "multiply"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/sylvester.js
var sylvesterDocs = {
  name: "sylvester",
  category: "Algebra",
  syntax: ["sylvester(A,B,C)"],
  description: "Solves the real-valued Sylvester equation AX+XB=C for X",
  examples: ["sylvester([[-1, -2], [1, 1]], [[-2, 1], [-1, 2]], [[-3, 2], [3, 0]])", "A = [[-1, -2], [1, 1]]; B = [[2, -1], [1, -2]]; C = [[-3, 2], [3, 0]]", "sylvester(A, B, C)"],
  seealso: ["schur", "lyap"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/schur.js
var schurDocs = {
  name: "schur",
  category: "Algebra",
  syntax: ["schur(A)"],
  description: "Performs a real Schur decomposition of the real matrix A = UTU'",
  examples: ["schur([[1, 0], [-4, 3]])", "A = [[1, 0], [-4, 3]]", "schur(A)"],
  seealso: ["lyap", "sylvester"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/algebra/lyap.js
var lyapDocs = {
  name: "lyap",
  category: "Algebra",
  syntax: ["lyap(A,Q)"],
  description: "Solves the Continuous-time Lyapunov equation AP+PA'+Q=0 for P",
  examples: ["lyap([[-2, 0], [1, -4]], [[3, 1], [1, 3]])", "A = [[-2, 0], [1, -4]]", "Q = [[3, 1], [1, 3]]", "lyap(A,Q)"],
  seealso: ["schur", "sylvester"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/square.js
var squareDocs = {
  name: "square",
  category: "Arithmetic",
  syntax: ["square(x)"],
  description: "Compute the square of a value. The square of x is x * x.",
  examples: ["square(3)", "sqrt(9)", "3^2", "3 * 3"],
  seealso: ["multiply", "pow", "sqrt", "cube"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/subtract.js
var subtractDocs = {
  name: "subtract",
  category: "Operators",
  syntax: ["x - y", "subtract(x, y)"],
  description: "subtract two values.",
  examples: ["a = 5.3 - 2", "a + 2", "2/3 - 1/6", "2 * 3 - 3", "2.1 km - 500m"],
  seealso: ["add"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/unaryMinus.js
var unaryMinusDocs = {
  name: "unaryMinus",
  category: "Operators",
  syntax: ["-x", "unaryMinus(x)"],
  description: "Inverse the sign of a value. Converts booleans and strings to numbers.",
  examples: ["-4.5", "-(-5.6)", '-"22"'],
  seealso: ["add", "subtract", "unaryPlus"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/unaryPlus.js
var unaryPlusDocs = {
  name: "unaryPlus",
  category: "Operators",
  syntax: ["+x", "unaryPlus(x)"],
  description: "Converts booleans and strings to numbers.",
  examples: ["+true", '+"2"'],
  seealso: ["add", "subtract", "unaryMinus"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/arithmetic/xgcd.js
var xgcdDocs = {
  name: "xgcd",
  category: "Arithmetic",
  syntax: ["xgcd(a, b)"],
  description: "Calculate the extended greatest common divisor for two values. The result is an array [d, x, y] with 3 entries, where d is the greatest common divisor, and d = x * a + y * b.",
  examples: ["xgcd(8, 12)", "gcd(8, 12)", "xgcd(36163, 21199)"],
  seealso: ["gcd", "lcm"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitAnd.js
var bitAndDocs = {
  name: "bitAnd",
  category: "Bitwise",
  syntax: ["x & y", "bitAnd(x, y)"],
  description: "Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",
  examples: ["5 & 3", "bitAnd(53, 131)", "[1, 12, 31] & 42"],
  seealso: ["bitNot", "bitOr", "bitXor", "leftShift", "rightArithShift", "rightLogShift"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitNot.js
var bitNotDocs = {
  name: "bitNot",
  category: "Bitwise",
  syntax: ["~x", "bitNot(x)"],
  description: "Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",
  examples: ["~1", "~2", "bitNot([2, -3, 4])"],
  seealso: ["bitAnd", "bitOr", "bitXor", "leftShift", "rightArithShift", "rightLogShift"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitOr.js
var bitOrDocs = {
  name: "bitOr",
  category: "Bitwise",
  syntax: ["x | y", "bitOr(x, y)"],
  description: "Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",
  examples: ["5 | 3", "bitOr([1, 2, 3], 4)"],
  seealso: ["bitAnd", "bitNot", "bitXor", "leftShift", "rightArithShift", "rightLogShift"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/bitXor.js
var bitXorDocs = {
  name: "bitXor",
  category: "Bitwise",
  syntax: ["bitXor(x, y)"],
  description: "Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",
  examples: ["bitOr(1, 2)", "bitXor([2, 3, 4], 4)"],
  seealso: ["bitAnd", "bitNot", "bitOr", "leftShift", "rightArithShift", "rightLogShift"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/leftShift.js
var leftShiftDocs = {
  name: "leftShift",
  category: "Bitwise",
  syntax: ["x << y", "leftShift(x, y)"],
  description: "Bitwise left logical shift of a value x by y number of bits.",
  examples: ["4 << 1", "8 >> 1"],
  seealso: ["bitAnd", "bitNot", "bitOr", "bitXor", "rightArithShift", "rightLogShift"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/rightArithShift.js
var rightArithShiftDocs = {
  name: "rightArithShift",
  category: "Bitwise",
  syntax: ["x >> y", "rightArithShift(x, y)"],
  description: "Bitwise right arithmetic shift of a value x by y number of bits.",
  examples: ["8 >> 1", "4 << 1", "-12 >> 2"],
  seealso: ["bitAnd", "bitNot", "bitOr", "bitXor", "leftShift", "rightLogShift"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/bitwise/rightLogShift.js
var rightLogShiftDocs = {
  name: "rightLogShift",
  category: "Bitwise",
  syntax: ["x >>> y", "rightLogShift(x, y)"],
  description: "Bitwise right logical shift of a value x by y number of bits.",
  examples: ["8 >>> 1", "4 << 1", "-12 >>> 2"],
  seealso: ["bitAnd", "bitNot", "bitOr", "bitXor", "leftShift", "rightArithShift"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/bellNumbers.js
var bellNumbersDocs = {
  name: "bellNumbers",
  category: "Combinatorics",
  syntax: ["bellNumbers(n)"],
  description: "The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",
  examples: ["bellNumbers(3)", "bellNumbers(8)"],
  seealso: ["stirlingS2"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/catalan.js
var catalanDocs = {
  name: "catalan",
  category: "Combinatorics",
  syntax: ["catalan(n)"],
  description: "The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",
  examples: ["catalan(3)", "catalan(8)"],
  seealso: ["bellNumbers"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/composition.js
var compositionDocs = {
  name: "composition",
  category: "Combinatorics",
  syntax: ["composition(n, k)"],
  description: "The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",
  examples: ["composition(5, 3)"],
  seealso: ["combinations"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/combinatorics/stirlingS2.js
var stirlingS2Docs = {
  name: "stirlingS2",
  category: "Combinatorics",
  syntax: ["stirlingS2(n, k)"],
  description: "he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",
  examples: ["stirlingS2(5, 3)"],
  seealso: ["bellNumbers"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/complex/arg.js
var argDocs = {
  name: "arg",
  category: "Complex",
  syntax: ["arg(x)"],
  description: "Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",
  examples: ["arg(2 + 2i)", "atan2(3, 2)", "arg(2 + 3i)"],
  seealso: ["re", "im", "conj", "abs"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/complex/conj.js
var conjDocs = {
  name: "conj",
  category: "Complex",
  syntax: ["conj(x)"],
  description: "Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",
  examples: ["conj(2 + 3i)", "conj(2 - 3i)", "conj(-5.2i)"],
  seealso: ["re", "im", "abs", "arg"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/complex/im.js
var imDocs = {
  name: "im",
  category: "Complex",
  syntax: ["im(x)"],
  description: "Get the imaginary part of a complex number.",
  examples: ["im(2 + 3i)", "re(2 + 3i)", "im(-5.2i)", "im(2.4)"],
  seealso: ["re", "conj", "abs", "arg"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/complex/re.js
var reDocs = {
  name: "re",
  category: "Complex",
  syntax: ["re(x)"],
  description: "Get the real part of a complex number.",
  examples: ["re(2 + 3i)", "im(2 + 3i)", "re(-5.2i)", "re(2.4)"],
  seealso: ["im", "conj", "abs", "arg"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/expression/evaluate.js
var evaluateDocs = {
  name: "evaluate",
  category: "Expression",
  syntax: ["evaluate(expression)", "evaluate(expression, scope)", "evaluate([expr1, expr2, expr3, ...])", "evaluate([expr1, expr2, expr3, ...], scope)"],
  description: "Evaluate an expression or an array with expressions.",
  examples: ['evaluate("2 + 3")', 'evaluate("sqrt(16)")', 'evaluate("2 inch to cm")', 'evaluate("sin(x * pi)", { "x": 1/2 })', 'evaluate(["width=2", "height=4","width*height"])'],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/expression/help.js
var helpDocs = {
  name: "help",
  category: "Expression",
  syntax: ["help(object)", "help(string)"],
  description: "Display documentation on a function or data type.",
  examples: ["help(sqrt)", 'help("complex")'],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/geometry/distance.js
var distanceDocs = {
  name: "distance",
  category: "Geometry",
  syntax: ["distance([x1, y1], [x2, y2])", "distance([[x1, y1], [x2, y2]])"],
  description: "Calculates the Euclidean distance between two points.",
  examples: ["distance([0,0], [4,4])", "distance([[0,0], [4,4]])"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/geometry/intersect.js
var intersectDocs = {
  name: "intersect",
  category: "Geometry",
  syntax: ["intersect(expr1, expr2, expr3, expr4)", "intersect(expr1, expr2, expr3)"],
  description: "Computes the intersection point of lines and/or planes.",
  examples: ["intersect([0, 0], [10, 10], [10, 0], [0, 10])", "intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/logical/and.js
var andDocs = {
  name: "and",
  category: "Logical",
  syntax: ["x and y", "and(x, y)"],
  description: "Logical and. Test whether two values are both defined with a nonzero/nonempty value.",
  examples: ["true and false", "true and true", "2 and 4"],
  seealso: ["not", "or", "xor"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/logical/not.js
var notDocs = {
  name: "not",
  category: "Logical",
  syntax: ["not x", "not(x)"],
  description: "Logical not. Flips the boolean value of given argument.",
  examples: ["not true", "not false", "not 2", "not 0"],
  seealso: ["and", "or", "xor"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/logical/or.js
var orDocs = {
  name: "or",
  category: "Logical",
  syntax: ["x or y", "or(x, y)"],
  description: "Logical or. Test if at least one value is defined with a nonzero/nonempty value.",
  examples: ["true or false", "false or false", "0 or 4"],
  seealso: ["not", "and", "xor"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/logical/xor.js
var xorDocs = {
  name: "xor",
  category: "Logical",
  syntax: ["x xor y", "xor(x, y)"],
  description: "Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",
  examples: ["true xor false", "false xor false", "true xor true", "0 xor 4"],
  seealso: ["not", "and", "or"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/column.js
var columnDocs = {
  name: "column",
  category: "Matrix",
  syntax: ["column(x, index)"],
  description: "Return a column from a matrix or array.",
  examples: ["A = [[1, 2], [3, 4]]", "column(A, 1)", "column(A, 2)"],
  seealso: ["row", "matrixFromColumns"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/concat.js
var concatDocs = {
  name: "concat",
  category: "Matrix",
  syntax: ["concat(A, B, C, ...)", "concat(A, B, C, ..., dim)"],
  description: "Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",
  examples: ["A = [1, 2; 5, 6]", "B = [3, 4; 7, 8]", "concat(A, B)", "concat(A, B, 1)", "concat(A, B, 2)"],
  seealso: ["det", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/count.js
var countDocs = {
  name: "count",
  category: "Matrix",
  syntax: ["count(x)"],
  description: "Count the number of elements of a matrix, array or string.",
  examples: ["a = [1, 2; 3, 4; 5, 6]", "count(a)", "size(a)", 'count("hello world")'],
  seealso: ["size"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/cross.js
var crossDocs = {
  name: "cross",
  category: "Matrix",
  syntax: ["cross(A, B)"],
  description: "Calculate the cross product for two vectors in three dimensional space.",
  examples: ["cross([1, 1, 0],  [0, 1, 1])", "cross([3, -3, 1], [4, 9, 2])", "cross([2, 3, 4],  [5, 6, 7])"],
  seealso: ["multiply", "dot"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/ctranspose.js
var ctransposeDocs = {
  name: "ctranspose",
  category: "Matrix",
  syntax: ["x'", "ctranspose(x)"],
  description: "Complex Conjugate and Transpose a matrix",
  examples: ["a = [1, 2, 3; 4, 5, 6]", "a'", "ctranspose(a)"],
  seealso: ["concat", "det", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/det.js
var detDocs = {
  name: "det",
  category: "Matrix",
  syntax: ["det(x)"],
  description: "Calculate the determinant of a matrix",
  examples: ["det([1, 2; 3, 4])", "det([-2, 2, 3; -1, 1, 3; 2, 0, -1])"],
  seealso: ["concat", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/diag.js
var diagDocs = {
  name: "diag",
  category: "Matrix",
  syntax: ["diag(x)", "diag(x, k)"],
  description: "Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",
  examples: ["diag(1:3)", "diag(1:3, 1)", "a = [1, 2, 3; 4, 5, 6; 7, 8, 9]", "diag(a)"],
  seealso: ["concat", "det", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/diff.js
var diffDocs = {
  name: "diff",
  category: "Matrix",
  syntax: ["diff(arr)", "diff(arr, dim)"],
  description: ["Create a new matrix or array with the difference of the passed matrix or array.", "Dim parameter is optional and used to indicant the dimension of the array/matrix to apply the difference", "If no dimension parameter is passed it is assumed as dimension 0", "Dimension is zero-based in javascript and one-based in the parser", "Arrays must be 'rectangular' meaning arrays like [1, 2]", "If something is passed as a matrix it will be returned as a matrix but other than that all matrices are converted to arrays"],
  examples: ["A = [1, 2, 4, 7, 0]", "diff(A)", "diff(A, 1)", "B = [[1, 2], [3, 4]]", "diff(B)", "diff(B, 1)", "diff(B, 2)", "diff(B, bignumber(2))", "diff([[1, 2], matrix([3, 4])], 2)"],
  seealso: ["subtract", "partitionSelect"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/dot.js
var dotDocs = {
  name: "dot",
  category: "Matrix",
  syntax: ["dot(A, B)", "A * B"],
  description: "Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",
  examples: ["dot([2, 4, 1], [2, 2, 3])", "[2, 4, 1] * [2, 2, 3]"],
  seealso: ["multiply", "cross"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/eigs.js
var eigsDocs = {
  name: "eigs",
  category: "Matrix",
  syntax: ["eigs(x)"],
  description: "Calculate the eigenvalues and optionally eigenvectors of a square matrix",
  examples: ["eigs([[5, 2.3], [2.3, 1]])", "eigs([[1, 2, 3], [4, 5, 6], [7, 8, 9]], { precision: 1e-6, eigenvectors: false })"],
  seealso: ["inv"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/filter.js
var filterDocs = {
  name: "filter",
  category: "Matrix",
  syntax: ["filter(x, test)"],
  description: "Filter items in a matrix.",
  examples: ["isPositive(x) = x > 0", "filter([6, -2, -1, 4, 3], isPositive)", "filter([6, -2, 0, 1, 0], x != 0)"],
  seealso: ["sort", "map", "forEach"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/flatten.js
var flattenDocs = {
  name: "flatten",
  category: "Matrix",
  syntax: ["flatten(x)"],
  description: "Flatten a multi dimensional matrix into a single dimensional matrix.",
  examples: ["a = [1, 2, 3; 4, 5, 6]", "size(a)", "b = flatten(a)", "size(b)"],
  seealso: ["concat", "resize", "size", "squeeze"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/forEach.js
var forEachDocs = {
  name: "forEach",
  category: "Matrix",
  syntax: ["forEach(x, callback)"],
  description: "Iterates over all elements of a matrix/array, and executes the given callback function.",
  examples: ["numberOfPets = {}", "addPet(n) = numberOfPets[n] = (numberOfPets[n] ? numberOfPets[n]:0 ) + 1;", 'forEach(["Dog","Cat","Cat"], addPet)', "numberOfPets"],
  seealso: ["map", "sort", "filter"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/getMatrixDataType.js
var getMatrixDataTypeDocs = {
  name: "getMatrixDataType",
  category: "Matrix",
  syntax: ["getMatrixDataType(x)"],
  description: 'Find the data type of all elements in a matrix or array, for example "number" if all items are a number and "Complex" if all values are complex numbers. If a matrix contains more than one data type, it will return "mixed".',
  examples: ["getMatrixDataType([1, 2, 3])", "getMatrixDataType([[5 cm], [2 inch]])", 'getMatrixDataType([1, "text"])', "getMatrixDataType([1, bignumber(4)])"],
  seealso: ["matrix", "sparse", "typeOf"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/identity.js
var identityDocs = {
  name: "identity",
  category: "Matrix",
  syntax: ["identity(n)", "identity(m, n)", "identity([m, n])"],
  description: "Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",
  examples: ["identity(3)", "identity(3, 5)", "a = [1, 2, 3; 4, 5, 6]", "identity(size(a))"],
  seealso: ["concat", "det", "diag", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/inv.js
var invDocs = {
  name: "inv",
  category: "Matrix",
  syntax: ["inv(x)"],
  description: "Calculate the inverse of a matrix",
  examples: ["inv([1, 2; 3, 4])", "inv(4)", "1 / 4"],
  seealso: ["concat", "det", "diag", "identity", "ones", "range", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/pinv.js
var pinvDocs = {
  name: "pinv",
  category: "Matrix",
  syntax: ["pinv(x)"],
  description: "Calculate the Moore–Penrose inverse of a matrix",
  examples: ["pinv([1, 2; 3, 4])", "pinv([[1, 0], [0, 1], [0, 1]])", "pinv(4)"],
  seealso: ["inv"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/kron.js
var kronDocs = {
  name: "kron",
  category: "Matrix",
  syntax: ["kron(x, y)"],
  description: "Calculates the kronecker product of 2 matrices or vectors.",
  examples: ["kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])", "kron([1,1], [2,3,4])"],
  seealso: ["multiply", "dot", "cross"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/map.js
var mapDocs = {
  name: "map",
  category: "Matrix",
  syntax: ["map(x, callback)"],
  description: "Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",
  examples: ["map([1, 2, 3], square)"],
  seealso: ["filter", "forEach"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/matrixFromColumns.js
var matrixFromColumnsDocs = {
  name: "matrixFromColumns",
  category: "Matrix",
  syntax: ["matrixFromColumns(...arr)", "matrixFromColumns(row1, row2)", "matrixFromColumns(row1, row2, row3)"],
  description: "Create a dense matrix from vectors as individual columns.",
  examples: ["matrixFromColumns([1, 2, 3], [[4],[5],[6]])"],
  seealso: ["matrix", "matrixFromRows", "matrixFromFunction", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/matrixFromFunction.js
var matrixFromFunctionDocs = {
  name: "matrixFromFunction",
  category: "Matrix",
  syntax: ["matrixFromFunction(size, fn)", "matrixFromFunction(size, fn, format)", "matrixFromFunction(size, fn, format, datatype)", "matrixFromFunction(size, format, fn)", "matrixFromFunction(size, format, datatype, fn)"],
  description: "Create a matrix by evaluating a generating function at each index.",
  examples: ["f(I) = I[1] - I[2]", "matrixFromFunction([3,3], f)", "g(I) = I[1] - I[2] == 1 ? 4 : 0", 'matrixFromFunction([100, 100], "sparse", g)', "matrixFromFunction([5], random)"],
  seealso: ["matrix", "matrixFromRows", "matrixFromColumns", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/matrixFromRows.js
var matrixFromRowsDocs = {
  name: "matrixFromRows",
  category: "Matrix",
  syntax: ["matrixFromRows(...arr)", "matrixFromRows(row1, row2)", "matrixFromRows(row1, row2, row3)"],
  description: "Create a dense matrix from vectors as individual rows.",
  examples: ["matrixFromRows([1, 2, 3], [[4],[5],[6]])"],
  seealso: ["matrix", "matrixFromColumns", "matrixFromFunction", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/ones.js
var onesDocs = {
  name: "ones",
  category: "Matrix",
  syntax: ["ones(m)", "ones(m, n)", "ones(m, n, p, ...)", "ones([m])", "ones([m, n])", "ones([m, n, p, ...])"],
  description: "Create a matrix containing ones.",
  examples: ["ones(3)", "ones(3, 5)", "ones([2,3]) * 4.5", "a = [1, 2, 3; 4, 5, 6]", "ones(size(a))"],
  seealso: ["concat", "det", "diag", "identity", "inv", "range", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/partitionSelect.js
var partitionSelectDocs = {
  name: "partitionSelect",
  category: "Matrix",
  syntax: ["partitionSelect(x, k)", "partitionSelect(x, k, compare)"],
  description: "Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",
  examples: ["partitionSelect([5, 10, 1], 2)", 'partitionSelect(["C", "B", "A", "D"], 1, compareText)', "arr = [5, 2, 1]", "partitionSelect(arr, 0) # returns 1, arr is now: [1, 2, 5]", "arr", "partitionSelect(arr, 1, 'desc') # returns 2, arr is now: [5, 2, 1]", "arr"],
  seealso: ["sort"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/range.js
var rangeDocs = {
  name: "range",
  category: "Type",
  syntax: ["start:end", "start:step:end", "range(start, end)", "range(start, end, step)", "range(string)"],
  description: "Create a range. Lower bound of the range is included, upper bound is excluded.",
  examples: ["1:5", "3:-1:-3", "range(3, 7)", "range(0, 12, 2)", 'range("4:10")', "range(1m, 1m, 3m)", "a = [1, 2, 3, 4; 5, 6, 7, 8]", "a[1:2, 1:2]"],
  seealso: ["concat", "det", "diag", "identity", "inv", "ones", "size", "squeeze", "subset", "trace", "transpose", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/reshape.js
var reshapeDocs = {
  name: "reshape",
  category: "Matrix",
  syntax: ["reshape(x, sizes)"],
  description: "Reshape a multi dimensional array to fit the specified dimensions.",
  examples: ["reshape([1, 2, 3, 4, 5, 6], [2, 3])", "reshape([[1, 2], [3, 4]], [1, 4])", "reshape([[1, 2], [3, 4]], [4])", "reshape([1, 2, 3, 4], [-1, 2])"],
  seealso: ["size", "squeeze", "resize"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/resize.js
var resizeDocs = {
  name: "resize",
  category: "Matrix",
  syntax: ["resize(x, size)", "resize(x, size, defaultValue)"],
  description: "Resize a matrix.",
  examples: ["resize([1,2,3,4,5], [3])", "resize([1,2,3], [5])", "resize([1,2,3], [5], -1)", "resize(2, [2, 3])", 'resize("hello", [8], "!")'],
  seealso: ["size", "subset", "squeeze", "reshape"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/rotate.js
var rotateDocs = {
  name: "rotate",
  category: "Matrix",
  syntax: ["rotate(w, theta)", "rotate(w, theta, v)"],
  description: "Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",
  examples: ["rotate([1, 0], pi / 2)", 'rotate(matrix([1, 0]), unit("35deg"))', 'rotate([1, 0, 0], unit("90deg"), [0, 0, 1])', 'rotate(matrix([1, 0, 0]), unit("90deg"), matrix([0, 0, 1]))'],
  seealso: ["matrix", "rotationMatrix"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/rotationMatrix.js
var rotationMatrixDocs = {
  name: "rotationMatrix",
  category: "Matrix",
  syntax: ["rotationMatrix(theta)", "rotationMatrix(theta, v)", "rotationMatrix(theta, v, format)"],
  description: "Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",
  examples: ["rotationMatrix(pi / 2)", 'rotationMatrix(unit("45deg"), [0, 0, 1])', 'rotationMatrix(1, matrix([0, 0, 1]), "sparse")'],
  seealso: ["cos", "sin"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/row.js
var rowDocs = {
  name: "row",
  category: "Matrix",
  syntax: ["row(x, index)"],
  description: "Return a row from a matrix or array.",
  examples: ["A = [[1, 2], [3, 4]]", "row(A, 1)", "row(A, 2)"],
  seealso: ["column", "matrixFromRows"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/size.js
var sizeDocs = {
  name: "size",
  category: "Matrix",
  syntax: ["size(x)"],
  description: "Calculate the size of a matrix.",
  examples: ["size(2.3)", 'size("hello world")', "a = [1, 2; 3, 4; 5, 6]", "size(a)", "size(1:6)"],
  seealso: ["concat", "count", "det", "diag", "identity", "inv", "ones", "range", "squeeze", "subset", "trace", "transpose", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/sort.js
var sortDocs = {
  name: "sort",
  category: "Matrix",
  syntax: ["sort(x)", "sort(x, compare)"],
  description: 'Sort the items in a matrix. Compare can be a string "asc", "desc", "natural", or a custom sort function.',
  examples: ["sort([5, 10, 1])", 'sort(["C", "B", "A", "D"], "natural")', "sortByLength(a, b) = size(a)[1] - size(b)[1]", 'sort(["Langdon", "Tom", "Sara"], sortByLength)', 'sort(["10", "1", "2"], "natural")'],
  seealso: ["map", "filter", "forEach"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/squeeze.js
var squeezeDocs = {
  name: "squeeze",
  category: "Matrix",
  syntax: ["squeeze(x)"],
  description: "Remove inner and outer singleton dimensions from a matrix.",
  examples: ["a = zeros(3,2,1)", "size(squeeze(a))", "b = zeros(1,1,3)", "size(squeeze(b))"],
  seealso: ["concat", "det", "diag", "identity", "inv", "ones", "range", "size", "subset", "trace", "transpose", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/subset.js
var subsetDocs = {
  name: "subset",
  category: "Matrix",
  syntax: ["value(index)", "value(index) = replacement", "subset(value, [index])", "subset(value, [index], replacement)"],
  description: "Get or set a subset of the entries of a matrix or characters of a string. Indexes are one-based. There should be one index specification for each dimension of the target. Each specification can be a single index, a list of indices, or a range in colon notation `l:u`. In a range, both the lower bound l and upper bound u are included; and if a bound is omitted it defaults to the most extreme valid value. The cartesian product of the indices specified in each dimension determines the target of the operation.",
  examples: ["d = [1, 2; 3, 4]", "e = []", "e[1, 1:2] = [5, 6]", "e[2, :] = [7, 8]", "f = d * e", "f[2, 1]", "f[:, 1]", "f[[1,2], [1,3]] = [9, 10; 11, 12]", "f"],
  seealso: ["concat", "det", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "trace", "transpose", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/trace.js
var traceDocs = {
  name: "trace",
  category: "Matrix",
  syntax: ["trace(A)"],
  description: "Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",
  examples: ["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]", "trace(A)"],
  seealso: ["concat", "det", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "transpose", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/transpose.js
var transposeDocs = {
  name: "transpose",
  category: "Matrix",
  syntax: ["x'", "transpose(x)"],
  description: "Transpose a matrix",
  examples: ["a = [1, 2, 3; 4, 5, 6]", "a'", "transpose(a)"],
  seealso: ["concat", "det", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "zeros"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/zeros.js
var zerosDocs = {
  name: "zeros",
  category: "Matrix",
  syntax: ["zeros(m)", "zeros(m, n)", "zeros(m, n, p, ...)", "zeros([m])", "zeros([m, n])", "zeros([m, n, p, ...])"],
  description: "Create a matrix containing zeros.",
  examples: ["zeros(3)", "zeros(3, 5)", "a = [1, 2, 3; 4, 5, 6]", "zeros(size(a))"],
  seealso: ["concat", "det", "diag", "identity", "inv", "ones", "range", "size", "squeeze", "subset", "trace", "transpose"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/fft.js
var fftDocs = {
  name: "fft",
  category: "Matrix",
  syntax: ["fft(x)"],
  description: "Calculate N-dimensional fourier transform",
  examples: ["fft([[1, 0], [1, 0]])"],
  seealso: ["ifft"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/matrix/ifft.js
var ifftDocs = {
  name: "ifft",
  category: "Matrix",
  syntax: ["ifft(x)"],
  description: "Calculate N-dimensional inverse fourier transform",
  examples: ["ifft([[2, 2], [0, 0]])"],
  seealso: ["fft"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/probability/combinations.js
var combinationsDocs = {
  name: "combinations",
  category: "Probability",
  syntax: ["combinations(n, k)"],
  description: "Compute the number of combinations of n items taken k at a time",
  examples: ["combinations(7, 5)"],
  seealso: ["combinationsWithRep", "permutations", "factorial"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/probability/combinationsWithRep.js
var combinationsWithRepDocs = {
  name: "combinationsWithRep",
  category: "Probability",
  syntax: ["combinationsWithRep(n, k)"],
  description: "Compute the number of combinations of n items taken k at a time with replacements.",
  examples: ["combinationsWithRep(7, 5)"],
  seealso: ["combinations", "permutations", "factorial"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/probability/factorial.js
var factorialDocs = {
  name: "factorial",
  category: "Probability",
  syntax: ["n!", "factorial(n)"],
  description: "Compute the factorial of a value",
  examples: ["5!", "5 * 4 * 3 * 2 * 1", "3!"],
  seealso: ["combinations", "combinationsWithRep", "permutations", "gamma"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/probability/gamma.js
var gammaDocs = {
  name: "gamma",
  category: "Probability",
  syntax: ["gamma(n)"],
  description: "Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",
  examples: ["gamma(4)", "3!", "gamma(1/2)", "sqrt(pi)"],
  seealso: ["factorial"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/probability/lgamma.js
var lgammaDocs = {
  name: "lgamma",
  category: "Probability",
  syntax: ["lgamma(n)"],
  description: "Logarithm of the gamma function for real, positive numbers and complex numbers, using Lanczos approximation for numbers and Stirling series for complex numbers.",
  examples: ["lgamma(4)", "lgamma(1/2)", "lgamma(i)", "lgamma(complex(1.1, 2))"],
  seealso: ["gamma"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/probability/kldivergence.js
var kldivergenceDocs = {
  name: "kldivergence",
  category: "Probability",
  syntax: ["kldivergence(x, y)"],
  description: "Calculate the Kullback-Leibler (KL) divergence  between two distributions.",
  examples: ["kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/probability/multinomial.js
var multinomialDocs = {
  name: "multinomial",
  category: "Probability",
  syntax: ["multinomial(A)"],
  description: "Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai > 0.",
  examples: ["multinomial([1, 2, 1])"],
  seealso: ["combinations", "factorial"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/probability/permutations.js
var permutationsDocs = {
  name: "permutations",
  category: "Probability",
  syntax: ["permutations(n)", "permutations(n, k)"],
  description: "Compute the number of permutations of n items taken k at a time",
  examples: ["permutations(5)", "permutations(5, 3)"],
  seealso: ["combinations", "combinationsWithRep", "factorial"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/probability/pickRandom.js
var pickRandomDocs = {
  name: "pickRandom",
  category: "Probability",
  syntax: ["pickRandom(array)", "pickRandom(array, number)", "pickRandom(array, weights)", "pickRandom(array, number, weights)", "pickRandom(array, weights, number)"],
  description: "Pick a random entry from a given array.",
  examples: ["pickRandom(0:10)", "pickRandom([1, 3, 1, 6])", "pickRandom([1, 3, 1, 6], 2)", "pickRandom([1, 3, 1, 6], [2, 3, 2, 1])", "pickRandom([1, 3, 1, 6], 2, [2, 3, 2, 1])", "pickRandom([1, 3, 1, 6], [2, 3, 2, 1], 2)"],
  seealso: ["random", "randomInt"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/probability/random.js
var randomDocs = {
  name: "random",
  category: "Probability",
  syntax: ["random()", "random(max)", "random(min, max)", "random(size)", "random(size, max)", "random(size, min, max)"],
  description: "Return a random number.",
  examples: ["random()", "random(10, 20)", "random([2, 3])"],
  seealso: ["pickRandom", "randomInt"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/probability/randomInt.js
var randomIntDocs = {
  name: "randomInt",
  category: "Probability",
  syntax: ["randomInt(max)", "randomInt(min, max)", "randomInt(size)", "randomInt(size, max)", "randomInt(size, min, max)"],
  description: "Return a random integer number",
  examples: ["randomInt(10, 20)", "randomInt([2, 3], 10)"],
  seealso: ["pickRandom", "random"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/relational/compare.js
var compareDocs = {
  name: "compare",
  category: "Relational",
  syntax: ["compare(x, y)"],
  description: "Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",
  examples: ["compare(2, 3)", "compare(3, 2)", "compare(2, 2)", "compare(5cm, 40mm)", "compare(2, [1, 2, 3])"],
  seealso: ["equal", "unequal", "smaller", "smallerEq", "largerEq", "compareNatural", "compareText"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/relational/compareNatural.js
var compareNaturalDocs = {
  name: "compareNatural",
  category: "Relational",
  syntax: ["compareNatural(x, y)"],
  description: "Compare two values of any type in a deterministic, natural way. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",
  examples: ["compareNatural(2, 3)", "compareNatural(3, 2)", "compareNatural(2, 2)", "compareNatural(5cm, 40mm)", 'compareNatural("2", "10")', "compareNatural(2 + 3i, 2 + 4i)", "compareNatural([1, 2, 4], [1, 2, 3])", "compareNatural([1, 5], [1, 2, 3])", "compareNatural([1, 2], [1, 2])", "compareNatural({a: 2}, {a: 4})"],
  seealso: ["equal", "unequal", "smaller", "smallerEq", "largerEq", "compare", "compareText"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/relational/compareText.js
var compareTextDocs = {
  name: "compareText",
  category: "Relational",
  syntax: ["compareText(x, y)"],
  description: "Compare two strings lexically. Comparison is case sensitive. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",
  examples: ['compareText("B", "A")', 'compareText("A", "B")', 'compareText("A", "A")', 'compareText("2", "10")', 'compare("2", "10")', "compare(2, 10)", 'compareNatural("2", "10")', 'compareText("B", ["A", "B", "C"])'],
  seealso: ["compare", "compareNatural"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/relational/deepEqual.js
var deepEqualDocs = {
  name: "deepEqual",
  category: "Relational",
  syntax: ["deepEqual(x, y)"],
  description: "Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",
  examples: ["deepEqual([1,3,4], [1,3,4])", "deepEqual([1,3,4], [1,3])"],
  seealso: ["equal", "unequal", "smaller", "larger", "smallerEq", "largerEq", "compare"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/relational/equal.js
var equalDocs = {
  name: "equal",
  category: "Relational",
  syntax: ["x == y", "equal(x, y)"],
  description: "Check equality of two values. Returns true if the values are equal, and false if not.",
  examples: ["2+2 == 3", "2+2 == 4", "a = 3.2", "b = 6-2.8", "a == b", "50cm == 0.5m"],
  seealso: ["unequal", "smaller", "larger", "smallerEq", "largerEq", "compare", "deepEqual", "equalText"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/relational/equalText.js
var equalTextDocs = {
  name: "equalText",
  category: "Relational",
  syntax: ["equalText(x, y)"],
  description: "Check equality of two strings. Comparison is case sensitive. Returns true if the values are equal, and false if not.",
  examples: ['equalText("Hello", "Hello")', 'equalText("a", "A")', 'equal("2e3", "2000")', 'equalText("2e3", "2000")', 'equalText("B", ["A", "B", "C"])'],
  seealso: ["compare", "compareNatural", "compareText", "equal"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/relational/larger.js
var largerDocs = {
  name: "larger",
  category: "Relational",
  syntax: ["x > y", "larger(x, y)"],
  description: "Check if value x is larger than y. Returns true if x is larger than y, and false if not.",
  examples: ["2 > 3", "5 > 2*2", "a = 3.3", "b = 6-2.8", "(a > b)", "(b < a)", "5 cm > 2 inch"],
  seealso: ["equal", "unequal", "smaller", "smallerEq", "largerEq", "compare"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/relational/largerEq.js
var largerEqDocs = {
  name: "largerEq",
  category: "Relational",
  syntax: ["x >= y", "largerEq(x, y)"],
  description: "Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",
  examples: ["2 >= 1+1", "2 > 1+1", "a = 3.2", "b = 6-2.8", "(a >= b)"],
  seealso: ["equal", "unequal", "smallerEq", "smaller", "compare"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/relational/smaller.js
var smallerDocs = {
  name: "smaller",
  category: "Relational",
  syntax: ["x < y", "smaller(x, y)"],
  description: "Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",
  examples: ["2 < 3", "5 < 2*2", "a = 3.3", "b = 6-2.8", "(a < b)", "5 cm < 2 inch"],
  seealso: ["equal", "unequal", "larger", "smallerEq", "largerEq", "compare"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/relational/smallerEq.js
var smallerEqDocs = {
  name: "smallerEq",
  category: "Relational",
  syntax: ["x <= y", "smallerEq(x, y)"],
  description: "Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",
  examples: ["2 <= 1+1", "2 < 1+1", "a = 3.2", "b = 6-2.8", "(a <= b)"],
  seealso: ["equal", "unequal", "larger", "smaller", "largerEq", "compare"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/relational/unequal.js
var unequalDocs = {
  name: "unequal",
  category: "Relational",
  syntax: ["x != y", "unequal(x, y)"],
  description: "Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",
  examples: ["2+2 != 3", "2+2 != 4", "a = 3.2", "b = 6-2.8", "a != b", "50cm != 0.5m", "5 cm != 2 inch"],
  seealso: ["equal", "smaller", "larger", "smallerEq", "largerEq", "compare", "deepEqual"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/set/setCartesian.js
var setCartesianDocs = {
  name: "setCartesian",
  category: "Set",
  syntax: ["setCartesian(set1, set2)"],
  description: "Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays and the values will be sorted in ascending order before the operation.",
  examples: ["setCartesian([1, 2], [3, 4])"],
  seealso: ["setUnion", "setIntersect", "setDifference", "setPowerset"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/set/setDifference.js
var setDifferenceDocs = {
  name: "setDifference",
  category: "Set",
  syntax: ["setDifference(set1, set2)"],
  description: "Create the difference of two (multi)sets: every element of set1, that is not the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
  examples: ["setDifference([1, 2, 3, 4], [3, 4, 5, 6])", "setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],
  seealso: ["setUnion", "setIntersect", "setSymDifference"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/set/setDistinct.js
var setDistinctDocs = {
  name: "setDistinct",
  category: "Set",
  syntax: ["setDistinct(set)"],
  description: "Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",
  examples: ["setDistinct([1, 1, 1, 2, 2, 3])"],
  seealso: ["setMultiplicity"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/set/setIntersect.js
var setIntersectDocs = {
  name: "setIntersect",
  category: "Set",
  syntax: ["setIntersect(set1, set2)"],
  description: "Create the intersection of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
  examples: ["setIntersect([1, 2, 3, 4], [3, 4, 5, 6])", "setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],
  seealso: ["setUnion", "setDifference"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/set/setIsSubset.js
var setIsSubsetDocs = {
  name: "setIsSubset",
  category: "Set",
  syntax: ["setIsSubset(set1, set2)"],
  description: "Check whether a (multi)set is a subset of another (multi)set: every element of set1 is the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
  examples: ["setIsSubset([1, 2], [3, 4, 5, 6])", "setIsSubset([3, 4], [3, 4, 5, 6])"],
  seealso: ["setUnion", "setIntersect", "setDifference"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/set/setMultiplicity.js
var setMultiplicityDocs = {
  name: "setMultiplicity",
  category: "Set",
  syntax: ["setMultiplicity(element, set)"],
  description: "Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",
  examples: ["setMultiplicity(1, [1, 2, 2, 4])", "setMultiplicity(2, [1, 2, 2, 4])"],
  seealso: ["setDistinct", "setSize"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/set/setPowerset.js
var setPowersetDocs = {
  name: "setPowerset",
  category: "Set",
  syntax: ["setPowerset(set)"],
  description: "Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.",
  examples: ["setPowerset([1, 2, 3])"],
  seealso: ["setCartesian"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/set/setSize.js
var setSizeDocs = {
  name: "setSize",
  category: "Set",
  syntax: ["setSize(set)", "setSize(set, unique)"],
  description: 'Count the number of elements of a (multi)set. When the second parameter "unique" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',
  examples: ["setSize([1, 2, 2, 4])", "setSize([1, 2, 2, 4], true)"],
  seealso: ["setUnion", "setIntersect", "setDifference"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/set/setSymDifference.js
var setSymDifferenceDocs = {
  name: "setSymDifference",
  category: "Set",
  syntax: ["setSymDifference(set1, set2)"],
  description: "Create the symmetric difference of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
  examples: ["setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])", "setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],
  seealso: ["setUnion", "setIntersect", "setDifference"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/set/setUnion.js
var setUnionDocs = {
  name: "setUnion",
  category: "Set",
  syntax: ["setUnion(set1, set2)"],
  description: "Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",
  examples: ["setUnion([1, 2, 3, 4], [3, 4, 5, 6])", "setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],
  seealso: ["setIntersect", "setDifference"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/signal/zpk2tf.js
var zpk2tfDocs = {
  name: "zpk2tf",
  category: "Signal",
  syntax: ["zpk2tf(z, p, k)"],
  description: "Compute the transfer function of a zero-pole-gain model.",
  examples: ["zpk2tf([1, 2], [-1, -2], 1)", "zpk2tf([1, 2], [-1, -2])", "zpk2tf([1 - 3i, 2 + 2i], [-1, -2])"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/signal/freqz.js
var freqzDocs = {
  name: "freqz",
  category: "Signal",
  syntax: ["freqz(b, a)", "freqz(b, a, w)"],
  description: "Calculates the frequency response of a filter given its numerator and denominator coefficients.",
  examples: ["freqz([1, 2], [1, 2, 3])", "freqz([1, 2], [1, 2, 3], [0, 1])", "freqz([1, 2], [1, 2, 3], 512)"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/special/erf.js
var erfDocs = {
  name: "erf",
  category: "Special",
  syntax: ["erf(x)"],
  description: "Compute the erf function of a value using a rational Chebyshev approximations for different intervals of x",
  examples: ["erf(0.2)", "erf(-0.5)", "erf(4)"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/special/zeta.js
var zetaDocs = {
  name: "zeta",
  category: "Special",
  syntax: ["zeta(s)"],
  description: "Compute the Riemann Zeta Function using an infinite series and Riemanns Functional Equation for the entire complex plane",
  examples: ["zeta(0.2)", "zeta(-0.5)", "zeta(4)"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/mad.js
var madDocs = {
  name: "mad",
  category: "Statistics",
  syntax: ["mad(a, b, c, ...)", "mad(A)"],
  description: "Compute the median absolute deviation of a matrix or a list with values. The median absolute deviation is defined as the median of the absolute deviations from the median.",
  examples: ["mad(10, 20, 30)", "mad([1, 2, 3])"],
  seealso: ["mean", "median", "std", "abs"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/max.js
var maxDocs = {
  name: "max",
  category: "Statistics",
  syntax: ["max(a, b, c, ...)", "max(A)", "max(A, dimension)"],
  description: "Compute the maximum value of a list of values.",
  examples: ["max(2, 3, 4, 1)", "max([2, 3, 4, 1])", "max([2, 5; 4, 3])", "max([2, 5; 4, 3], 1)", "max([2, 5; 4, 3], 2)", "max(2.7, 7.1, -4.5, 2.0, 4.1)", "min(2.7, 7.1, -4.5, 2.0, 4.1)"],
  seealso: ["mean", "median", "min", "prod", "std", "sum", "variance"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/mean.js
var meanDocs = {
  name: "mean",
  category: "Statistics",
  syntax: ["mean(a, b, c, ...)", "mean(A)", "mean(A, dimension)"],
  description: "Compute the arithmetic mean of a list of values.",
  examples: ["mean(2, 3, 4, 1)", "mean([2, 3, 4, 1])", "mean([2, 5; 4, 3])", "mean([2, 5; 4, 3], 1)", "mean([2, 5; 4, 3], 2)", "mean([1.0, 2.7, 3.2, 4.0])"],
  seealso: ["max", "median", "min", "prod", "std", "sum", "variance"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/median.js
var medianDocs = {
  name: "median",
  category: "Statistics",
  syntax: ["median(a, b, c, ...)", "median(A)"],
  description: "Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",
  examples: ["median(5, 2, 7)", "median([3, -1, 5, 7])"],
  seealso: ["max", "mean", "min", "prod", "std", "sum", "variance", "quantileSeq"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/min.js
var minDocs = {
  name: "min",
  category: "Statistics",
  syntax: ["min(a, b, c, ...)", "min(A)", "min(A, dimension)"],
  description: "Compute the minimum value of a list of values.",
  examples: ["min(2, 3, 4, 1)", "min([2, 3, 4, 1])", "min([2, 5; 4, 3])", "min([2, 5; 4, 3], 1)", "min([2, 5; 4, 3], 2)", "min(2.7, 7.1, -4.5, 2.0, 4.1)", "max(2.7, 7.1, -4.5, 2.0, 4.1)"],
  seealso: ["max", "mean", "median", "prod", "std", "sum", "variance"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/mode.js
var modeDocs = {
  name: "mode",
  category: "Statistics",
  syntax: ["mode(a, b, c, ...)", "mode(A)", "mode(A, a, b, B, c, ...)"],
  description: "Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",
  examples: ["mode(2, 1, 4, 3, 1)", "mode([1, 2.7, 3.2, 4, 2.7])", "mode(1, 4, 6, 1, 6)"],
  seealso: ["max", "mean", "min", "median", "prod", "std", "sum", "variance"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/prod.js
var prodDocs = {
  name: "prod",
  category: "Statistics",
  syntax: ["prod(a, b, c, ...)", "prod(A)"],
  description: "Compute the product of all values.",
  examples: ["prod(2, 3, 4)", "prod([2, 3, 4])", "prod([2, 5; 4, 3])"],
  seealso: ["max", "mean", "min", "median", "min", "std", "sum", "variance"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/quantileSeq.js
var quantileSeqDocs = {
  name: "quantileSeq",
  category: "Statistics",
  syntax: ["quantileSeq(A, prob[, sorted])", "quantileSeq(A, [prob1, prob2, ...][, sorted])", "quantileSeq(A, N[, sorted])"],
  description: "Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.",
  examples: ["quantileSeq([3, -1, 5, 7], 0.5)", "quantileSeq([3, -1, 5, 7], [1/3, 2/3])", "quantileSeq([3, -1, 5, 7], 2)", "quantileSeq([-1, 3, 5, 7], 0.5, true)"],
  seealso: ["mean", "median", "min", "max", "prod", "std", "sum", "variance"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/std.js
var stdDocs = {
  name: "std",
  category: "Statistics",
  syntax: ["std(a, b, c, ...)", "std(A)", "std(A, dimension)", "std(A, normalization)", "std(A, dimension, normalization)"],
  description: 'Compute the standard deviation of all values, defined as std(A) = sqrt(variance(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',
  examples: ["std(2, 4, 6)", "std([2, 4, 6, 8])", 'std([2, 4, 6, 8], "uncorrected")', 'std([2, 4, 6, 8], "biased")', "std([1, 2, 3; 4, 5, 6])"],
  seealso: ["max", "mean", "min", "median", "prod", "sum", "variance"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/cumsum.js
var cumSumDocs = {
  name: "cumsum",
  category: "Statistics",
  syntax: ["cumsum(a, b, c, ...)", "cumsum(A)"],
  description: "Compute the cumulative sum of all values.",
  examples: ["cumsum(2, 3, 4, 1)", "cumsum([2, 3, 4, 1])", "cumsum([1, 2; 3, 4])", "cumsum([1, 2; 3, 4], 1)", "cumsum([1, 2; 3, 4], 2)"],
  seealso: ["max", "mean", "median", "min", "prod", "std", "sum", "variance"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/sum.js
var sumDocs = {
  name: "sum",
  category: "Statistics",
  syntax: ["sum(a, b, c, ...)", "sum(A)", "sum(A, dimension)"],
  description: "Compute the sum of all values.",
  examples: ["sum(2, 3, 4, 1)", "sum([2, 3, 4, 1])", "sum([2, 5; 4, 3])"],
  seealso: ["max", "mean", "median", "min", "prod", "std", "sum", "variance"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/variance.js
var varianceDocs = {
  name: "variance",
  category: "Statistics",
  syntax: ["variance(a, b, c, ...)", "variance(A)", "variance(A, dimension)", "variance(A, normalization)", "variance(A, dimension, normalization)"],
  description: 'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',
  examples: ["variance(2, 4, 6)", "variance([2, 4, 6, 8])", 'variance([2, 4, 6, 8], "uncorrected")', 'variance([2, 4, 6, 8], "biased")', "variance([1, 2, 3; 4, 5, 6])"],
  seealso: ["max", "mean", "min", "median", "min", "prod", "std", "sum"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/statistics/corr.js
var corrDocs = {
  name: "corr",
  category: "Statistics",
  syntax: ["corr(A,B)"],
  description: "Compute the correlation coefficient of a two list with values, For matrices, the matrix correlation coefficient is calculated.",
  examples: ["corr([2, 4, 6, 8],[1, 2, 3, 6])", "corr(matrix([[1, 2.2, 3, 4.8, 5], [1, 2, 3, 4, 5]]), matrix([[4, 5.3, 6.6, 7, 8], [1, 2, 3, 4, 5]]))"],
  seealso: ["max", "mean", "min", "median", "min", "prod", "std", "sum"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/acos.js
var acosDocs = {
  name: "acos",
  category: "Trigonometry",
  syntax: ["acos(x)"],
  description: "Compute the inverse cosine of a value in radians.",
  examples: ["acos(0.5)", "acos(cos(2.3))"],
  seealso: ["cos", "atan", "asin"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/acosh.js
var acoshDocs = {
  name: "acosh",
  category: "Trigonometry",
  syntax: ["acosh(x)"],
  description: "Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",
  examples: ["acosh(1.5)"],
  seealso: ["cosh", "asinh", "atanh"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/acot.js
var acotDocs = {
  name: "acot",
  category: "Trigonometry",
  syntax: ["acot(x)"],
  description: "Calculate the inverse cotangent of a value.",
  examples: ["acot(0.5)", "acot(cot(0.5))", "acot(2)"],
  seealso: ["cot", "atan"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/acoth.js
var acothDocs = {
  name: "acoth",
  category: "Trigonometry",
  syntax: ["acoth(x)"],
  description: "Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",
  examples: ["acoth(2)", "acoth(0.5)"],
  seealso: ["acsch", "asech"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/acsc.js
var acscDocs = {
  name: "acsc",
  category: "Trigonometry",
  syntax: ["acsc(x)"],
  description: "Calculate the inverse cotangent of a value.",
  examples: ["acsc(2)", "acsc(csc(0.5))", "acsc(0.5)"],
  seealso: ["csc", "asin", "asec"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/acsch.js
var acschDocs = {
  name: "acsch",
  category: "Trigonometry",
  syntax: ["acsch(x)"],
  description: "Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",
  examples: ["acsch(0.5)"],
  seealso: ["asech", "acoth"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/asec.js
var asecDocs = {
  name: "asec",
  category: "Trigonometry",
  syntax: ["asec(x)"],
  description: "Calculate the inverse secant of a value.",
  examples: ["asec(0.5)", "asec(sec(0.5))", "asec(2)"],
  seealso: ["acos", "acot", "acsc"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/asech.js
var asechDocs = {
  name: "asech",
  category: "Trigonometry",
  syntax: ["asech(x)"],
  description: "Calculate the inverse secant of a value.",
  examples: ["asech(0.5)"],
  seealso: ["acsch", "acoth"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/asin.js
var asinDocs = {
  name: "asin",
  category: "Trigonometry",
  syntax: ["asin(x)"],
  description: "Compute the inverse sine of a value in radians.",
  examples: ["asin(0.5)", "asin(sin(0.5))"],
  seealso: ["sin", "acos", "atan"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/asinh.js
var asinhDocs = {
  name: "asinh",
  category: "Trigonometry",
  syntax: ["asinh(x)"],
  description: "Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",
  examples: ["asinh(0.5)"],
  seealso: ["acosh", "atanh"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/atan.js
var atanDocs = {
  name: "atan",
  category: "Trigonometry",
  syntax: ["atan(x)"],
  description: "Compute the inverse tangent of a value in radians.",
  examples: ["atan(0.5)", "atan(tan(0.5))"],
  seealso: ["tan", "acos", "asin"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/atan2.js
var atan2Docs = {
  name: "atan2",
  category: "Trigonometry",
  syntax: ["atan2(y, x)"],
  description: "Computes the principal value of the arc tangent of y/x in radians.",
  examples: ["atan2(2, 2) / pi", "angle = 60 deg in rad", "x = cos(angle)", "y = sin(angle)", "atan2(y, x)"],
  seealso: ["sin", "cos", "tan"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/atanh.js
var atanhDocs = {
  name: "atanh",
  category: "Trigonometry",
  syntax: ["atanh(x)"],
  description: "Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",
  examples: ["atanh(0.5)"],
  seealso: ["acosh", "asinh"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/cos.js
var cosDocs = {
  name: "cos",
  category: "Trigonometry",
  syntax: ["cos(x)"],
  description: "Compute the cosine of x in radians.",
  examples: ["cos(2)", "cos(pi / 4) ^ 2", "cos(180 deg)", "cos(60 deg)", "sin(0.2)^2 + cos(0.2)^2"],
  seealso: ["acos", "sin", "tan"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/cosh.js
var coshDocs = {
  name: "cosh",
  category: "Trigonometry",
  syntax: ["cosh(x)"],
  description: "Compute the hyperbolic cosine of x in radians.",
  examples: ["cosh(0.5)"],
  seealso: ["sinh", "tanh", "coth"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/cot.js
var cotDocs = {
  name: "cot",
  category: "Trigonometry",
  syntax: ["cot(x)"],
  description: "Compute the cotangent of x in radians. Defined as 1/tan(x)",
  examples: ["cot(2)", "1 / tan(2)"],
  seealso: ["sec", "csc", "tan"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/coth.js
var cothDocs = {
  name: "coth",
  category: "Trigonometry",
  syntax: ["coth(x)"],
  description: "Compute the hyperbolic cotangent of x in radians.",
  examples: ["coth(2)", "1 / tanh(2)"],
  seealso: ["sech", "csch", "tanh"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/csc.js
var cscDocs = {
  name: "csc",
  category: "Trigonometry",
  syntax: ["csc(x)"],
  description: "Compute the cosecant of x in radians. Defined as 1/sin(x)",
  examples: ["csc(2)", "1 / sin(2)"],
  seealso: ["sec", "cot", "sin"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/csch.js
var cschDocs = {
  name: "csch",
  category: "Trigonometry",
  syntax: ["csch(x)"],
  description: "Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",
  examples: ["csch(2)", "1 / sinh(2)"],
  seealso: ["sech", "coth", "sinh"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/sec.js
var secDocs = {
  name: "sec",
  category: "Trigonometry",
  syntax: ["sec(x)"],
  description: "Compute the secant of x in radians. Defined as 1/cos(x)",
  examples: ["sec(2)", "1 / cos(2)"],
  seealso: ["cot", "csc", "cos"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/sech.js
var sechDocs = {
  name: "sech",
  category: "Trigonometry",
  syntax: ["sech(x)"],
  description: "Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",
  examples: ["sech(2)", "1 / cosh(2)"],
  seealso: ["coth", "csch", "cosh"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/sin.js
var sinDocs = {
  name: "sin",
  category: "Trigonometry",
  syntax: ["sin(x)"],
  description: "Compute the sine of x in radians.",
  examples: ["sin(2)", "sin(pi / 4) ^ 2", "sin(90 deg)", "sin(30 deg)", "sin(0.2)^2 + cos(0.2)^2"],
  seealso: ["asin", "cos", "tan"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/sinh.js
var sinhDocs = {
  name: "sinh",
  category: "Trigonometry",
  syntax: ["sinh(x)"],
  description: "Compute the hyperbolic sine of x in radians.",
  examples: ["sinh(0.5)"],
  seealso: ["cosh", "tanh"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/tan.js
var tanDocs = {
  name: "tan",
  category: "Trigonometry",
  syntax: ["tan(x)"],
  description: "Compute the tangent of x in radians.",
  examples: ["tan(0.5)", "sin(0.5) / cos(0.5)", "tan(pi / 4)", "tan(45 deg)"],
  seealso: ["atan", "sin", "cos"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/trigonometry/tanh.js
var tanhDocs = {
  name: "tanh",
  category: "Trigonometry",
  syntax: ["tanh(x)"],
  description: "Compute the hyperbolic tangent of x in radians.",
  examples: ["tanh(0.5)", "sinh(0.5) / cosh(0.5)"],
  seealso: ["sinh", "cosh"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/units/to.js
var toDocs = {
  name: "to",
  category: "Units",
  syntax: ["x to unit", "to(x, unit)"],
  description: "Change the unit of a value.",
  examples: ["5 inch to cm", "3.2kg to g", "16 bytes in bits"],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/bin.js
var binDocs = {
  name: "bin",
  category: "Utils",
  syntax: ["bin(value)"],
  description: "Format a number as binary",
  examples: ["bin(2)"],
  seealso: ["oct", "hex"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/clone.js
var cloneDocs = {
  name: "clone",
  category: "Utils",
  syntax: ["clone(x)"],
  description: "Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",
  examples: ["clone(3.5)", "clone(2 - 4i)", "clone(45 deg)", "clone([1, 2; 3, 4])", 'clone("hello world")'],
  seealso: []
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/format.js
var formatDocs = {
  name: "format",
  category: "Utils",
  syntax: ["format(value)", "format(value, precision)"],
  description: "Format a value of any type as string.",
  examples: ["format(2.3)", "format(3 - 4i)", "format([])", "format(pi, 3)"],
  seealso: ["print"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/hasNumericValue.js
var hasNumericValueDocs = {
  name: "hasNumericValue",
  category: "Utils",
  syntax: ["hasNumericValue(x)"],
  description: "Test whether a value is an numeric value. In case of a string, true is returned if the string contains a numeric value.",
  examples: ["hasNumericValue(2)", 'hasNumericValue("2")', 'isNumeric("2")', "hasNumericValue(0)", "hasNumericValue(bignumber(500))", "hasNumericValue(fraction(0.125))", "hasNumericValue(2 + 3i)", 'hasNumericValue([2.3, "foo", false])'],
  seealso: ["isInteger", "isZero", "isNegative", "isPositive", "isNaN", "isNumeric"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/hex.js
var hexDocs = {
  name: "hex",
  category: "Utils",
  syntax: ["hex(value)"],
  description: "Format a number as hexadecimal",
  examples: ["hex(240)"],
  seealso: ["bin", "oct"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/isInteger.js
var isIntegerDocs = {
  name: "isInteger",
  category: "Utils",
  syntax: ["isInteger(x)"],
  description: "Test whether a value is an integer number.",
  examples: ["isInteger(2)", "isInteger(3.5)", "isInteger([3, 0.5, -2])"],
  seealso: ["isNegative", "isNumeric", "isPositive", "isZero"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/isNaN.js
var isNaNDocs = {
  name: "isNaN",
  category: "Utils",
  syntax: ["isNaN(x)"],
  description: "Test whether a value is NaN (not a number)",
  examples: ["isNaN(2)", "isNaN(0 / 0)", "isNaN(NaN)", "isNaN(Infinity)"],
  seealso: ["isNegative", "isNumeric", "isPositive", "isZero"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/isNegative.js
var isNegativeDocs = {
  name: "isNegative",
  category: "Utils",
  syntax: ["isNegative(x)"],
  description: "Test whether a value is negative: smaller than zero.",
  examples: ["isNegative(2)", "isNegative(0)", "isNegative(-4)", "isNegative([3, 0.5, -2])"],
  seealso: ["isInteger", "isNumeric", "isPositive", "isZero"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/isNumeric.js
var isNumericDocs = {
  name: "isNumeric",
  category: "Utils",
  syntax: ["isNumeric(x)"],
  description: "Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",
  examples: ["isNumeric(2)", 'isNumeric("2")', 'hasNumericValue("2")', "isNumeric(0)", "isNumeric(bignumber(500))", "isNumeric(fraction(0.125))", "isNumeric(2 + 3i)", 'isNumeric([2.3, "foo", false])'],
  seealso: ["isInteger", "isZero", "isNegative", "isPositive", "isNaN", "hasNumericValue"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/isPositive.js
var isPositiveDocs = {
  name: "isPositive",
  category: "Utils",
  syntax: ["isPositive(x)"],
  description: "Test whether a value is positive: larger than zero.",
  examples: ["isPositive(2)", "isPositive(0)", "isPositive(-4)", "isPositive([3, 0.5, -2])"],
  seealso: ["isInteger", "isNumeric", "isNegative", "isZero"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/isPrime.js
var isPrimeDocs = {
  name: "isPrime",
  category: "Utils",
  syntax: ["isPrime(x)"],
  description: "Test whether a value is prime: has no divisors other than itself and one.",
  examples: ["isPrime(3)", "isPrime(-2)", "isPrime([2, 17, 100])"],
  seealso: ["isInteger", "isNumeric", "isNegative", "isZero"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/isZero.js
var isZeroDocs = {
  name: "isZero",
  category: "Utils",
  syntax: ["isZero(x)"],
  description: "Test whether a value is zero.",
  examples: ["isZero(2)", "isZero(0)", "isZero(-4)", "isZero([3, 0, -2, 0])"],
  seealso: ["isInteger", "isNumeric", "isNegative", "isPositive"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/numeric.js
var numericDocs = {
  name: "numeric",
  category: "Utils",
  syntax: ["numeric(x)"],
  description: "Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.",
  examples: ['numeric("4")', 'numeric("4", "number")', 'numeric("4", "BigNumber")', 'numeric("4", "Fraction")', 'numeric(4, "Fraction")', 'numeric(fraction(2, 5), "number")'],
  seealso: ["number", "fraction", "bignumber", "string", "format"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/oct.js
var octDocs = {
  name: "oct",
  category: "Utils",
  syntax: ["oct(value)"],
  description: "Format a number as octal",
  examples: ["oct(56)"],
  seealso: ["bin", "hex"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/print.js
var printDocs = {
  name: "print",
  category: "Utils",
  syntax: ["print(template, values)", "print(template, values, precision)"],
  description: "Interpolate values into a string template.",
  examples: ['print("Lucy is $age years old", {age: 5})', 'print("The value of pi is $pi", {pi: pi}, 3)', 'print("Hello, $user.name!", {user: {name: "John"}})', 'print("Values: $1, $2, $3", [6, 9, 4])'],
  seealso: ["format"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/utils/typeOf.js
var typeOfDocs = {
  name: "typeOf",
  category: "Utils",
  syntax: ["typeOf(x)"],
  description: "Get the type of a variable.",
  examples: ["typeOf(3.5)", "typeOf(2 - 4i)", "typeOf(45 deg)", 'typeOf("hello world")'],
  seealso: ["getMatrixDataType"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/function/numeric/solveODE.js
var solveODEDocs = {
  name: "solveODE",
  category: "Numeric",
  syntax: ["solveODE(func, tspan, y0)", "solveODE(func, tspan, y0, options)"],
  description: "Numerical Integration of Ordinary Differential Equations.",
  examples: ["f(t,y) = y", "tspan = [0, 4]", "solveODE(f, tspan, 1)", "solveODE(f, tspan, [1, 2])", 'solveODE(f, tspan, 1, { method:"RK23", maxStep:0.1 })'],
  seealso: ["derivative", "simplifyCore"]
};

// node_modules/mathjs/lib/esm/expression/embeddedDocs/embeddedDocs.js
var embeddedDocs = {
  // construction functions
  bignumber: bignumberDocs,
  boolean: booleanDocs,
  complex: complexDocs,
  createUnit: createUnitDocs,
  fraction: fractionDocs,
  index: indexDocs,
  matrix: matrixDocs,
  number: numberDocs,
  sparse: sparseDocs,
  splitUnit: splitUnitDocs,
  string: stringDocs,
  unit: unitDocs,
  // constants
  e: eDocs,
  E: eDocs,
  false: falseDocs,
  i: iDocs,
  Infinity: InfinityDocs,
  LN2: LN2Docs,
  LN10: LN10Docs,
  LOG2E: LOG2EDocs,
  LOG10E: LOG10EDocs,
  NaN: NaNDocs,
  null: nullDocs,
  pi: piDocs,
  PI: piDocs,
  phi: phiDocs,
  SQRT1_2: SQRT12Docs,
  SQRT2: SQRT2Docs,
  tau: tauDocs,
  true: trueDocs,
  version: versionDocs,
  // physical constants
  // TODO: more detailed docs for physical constants
  speedOfLight: {
    description: "Speed of light in vacuum",
    examples: ["speedOfLight"]
  },
  gravitationConstant: {
    description: "Newtonian constant of gravitation",
    examples: ["gravitationConstant"]
  },
  planckConstant: {
    description: "Planck constant",
    examples: ["planckConstant"]
  },
  reducedPlanckConstant: {
    description: "Reduced Planck constant",
    examples: ["reducedPlanckConstant"]
  },
  magneticConstant: {
    description: "Magnetic constant (vacuum permeability)",
    examples: ["magneticConstant"]
  },
  electricConstant: {
    description: "Electric constant (vacuum permeability)",
    examples: ["electricConstant"]
  },
  vacuumImpedance: {
    description: "Characteristic impedance of vacuum",
    examples: ["vacuumImpedance"]
  },
  coulomb: {
    description: "Coulomb's constant",
    examples: ["coulomb"]
  },
  elementaryCharge: {
    description: "Elementary charge",
    examples: ["elementaryCharge"]
  },
  bohrMagneton: {
    description: "Borh magneton",
    examples: ["bohrMagneton"]
  },
  conductanceQuantum: {
    description: "Conductance quantum",
    examples: ["conductanceQuantum"]
  },
  inverseConductanceQuantum: {
    description: "Inverse conductance quantum",
    examples: ["inverseConductanceQuantum"]
  },
  // josephson: {description: 'Josephson constant', examples: ['josephson']},
  magneticFluxQuantum: {
    description: "Magnetic flux quantum",
    examples: ["magneticFluxQuantum"]
  },
  nuclearMagneton: {
    description: "Nuclear magneton",
    examples: ["nuclearMagneton"]
  },
  klitzing: {
    description: "Von Klitzing constant",
    examples: ["klitzing"]
  },
  bohrRadius: {
    description: "Borh radius",
    examples: ["bohrRadius"]
  },
  classicalElectronRadius: {
    description: "Classical electron radius",
    examples: ["classicalElectronRadius"]
  },
  electronMass: {
    description: "Electron mass",
    examples: ["electronMass"]
  },
  fermiCoupling: {
    description: "Fermi coupling constant",
    examples: ["fermiCoupling"]
  },
  fineStructure: {
    description: "Fine-structure constant",
    examples: ["fineStructure"]
  },
  hartreeEnergy: {
    description: "Hartree energy",
    examples: ["hartreeEnergy"]
  },
  protonMass: {
    description: "Proton mass",
    examples: ["protonMass"]
  },
  deuteronMass: {
    description: "Deuteron Mass",
    examples: ["deuteronMass"]
  },
  neutronMass: {
    description: "Neutron mass",
    examples: ["neutronMass"]
  },
  quantumOfCirculation: {
    description: "Quantum of circulation",
    examples: ["quantumOfCirculation"]
  },
  rydberg: {
    description: "Rydberg constant",
    examples: ["rydberg"]
  },
  thomsonCrossSection: {
    description: "Thomson cross section",
    examples: ["thomsonCrossSection"]
  },
  weakMixingAngle: {
    description: "Weak mixing angle",
    examples: ["weakMixingAngle"]
  },
  efimovFactor: {
    description: "Efimov factor",
    examples: ["efimovFactor"]
  },
  atomicMass: {
    description: "Atomic mass constant",
    examples: ["atomicMass"]
  },
  avogadro: {
    description: "Avogadro's number",
    examples: ["avogadro"]
  },
  boltzmann: {
    description: "Boltzmann constant",
    examples: ["boltzmann"]
  },
  faraday: {
    description: "Faraday constant",
    examples: ["faraday"]
  },
  firstRadiation: {
    description: "First radiation constant",
    examples: ["firstRadiation"]
  },
  loschmidt: {
    description: "Loschmidt constant at T=273.15 K and p=101.325 kPa",
    examples: ["loschmidt"]
  },
  gasConstant: {
    description: "Gas constant",
    examples: ["gasConstant"]
  },
  molarPlanckConstant: {
    description: "Molar Planck constant",
    examples: ["molarPlanckConstant"]
  },
  molarVolume: {
    description: "Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",
    examples: ["molarVolume"]
  },
  sackurTetrode: {
    description: "Sackur-Tetrode constant at T=1 K and p=101.325 kPa",
    examples: ["sackurTetrode"]
  },
  secondRadiation: {
    description: "Second radiation constant",
    examples: ["secondRadiation"]
  },
  stefanBoltzmann: {
    description: "Stefan-Boltzmann constant",
    examples: ["stefanBoltzmann"]
  },
  wienDisplacement: {
    description: "Wien displacement law constant",
    examples: ["wienDisplacement"]
  },
  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},
  molarMass: {
    description: "Molar mass constant",
    examples: ["molarMass"]
  },
  molarMassC12: {
    description: "Molar mass constant of carbon-12",
    examples: ["molarMassC12"]
  },
  gravity: {
    description: "Standard acceleration of gravity (standard acceleration of free-fall on Earth)",
    examples: ["gravity"]
  },
  planckLength: {
    description: "Planck length",
    examples: ["planckLength"]
  },
  planckMass: {
    description: "Planck mass",
    examples: ["planckMass"]
  },
  planckTime: {
    description: "Planck time",
    examples: ["planckTime"]
  },
  planckCharge: {
    description: "Planck charge",
    examples: ["planckCharge"]
  },
  planckTemperature: {
    description: "Planck temperature",
    examples: ["planckTemperature"]
  },
  // functions - algebra
  derivative: derivativeDocs,
  lsolve: lsolveDocs,
  lsolveAll: lsolveAllDocs,
  lup: lupDocs,
  lusolve: lusolveDocs,
  leafCount: leafCountDocs,
  polynomialRoot: polynomialRootDocs,
  resolve: resolveDocs,
  simplify: simplifyDocs,
  simplifyConstant: simplifyConstantDocs,
  simplifyCore: simplifyCoreDocs,
  symbolicEqual: symbolicEqualDocs,
  rationalize: rationalizeDocs,
  slu: sluDocs,
  usolve: usolveDocs,
  usolveAll: usolveAllDocs,
  qr: qrDocs,
  // functions - arithmetic
  abs: absDocs,
  add: addDocs,
  cbrt: cbrtDocs,
  ceil: ceilDocs,
  cube: cubeDocs,
  divide: divideDocs,
  dotDivide: dotDivideDocs,
  dotMultiply: dotMultiplyDocs,
  dotPow: dotPowDocs,
  exp: expDocs,
  expm: expmDocs,
  expm1: expm1Docs,
  fix: fixDocs,
  floor: floorDocs,
  gcd: gcdDocs,
  hypot: hypotDocs,
  lcm: lcmDocs,
  log: logDocs,
  log2: log2Docs,
  log1p: log1pDocs,
  log10: log10Docs,
  mod: modDocs,
  multiply: multiplyDocs,
  norm: normDocs,
  nthRoot: nthRootDocs,
  nthRoots: nthRootsDocs,
  pow: powDocs,
  round: roundDocs,
  sign: signDocs,
  sqrt: sqrtDocs,
  sqrtm: sqrtmDocs,
  square: squareDocs,
  subtract: subtractDocs,
  unaryMinus: unaryMinusDocs,
  unaryPlus: unaryPlusDocs,
  xgcd: xgcdDocs,
  invmod: invmodDocs,
  // functions - bitwise
  bitAnd: bitAndDocs,
  bitNot: bitNotDocs,
  bitOr: bitOrDocs,
  bitXor: bitXorDocs,
  leftShift: leftShiftDocs,
  rightArithShift: rightArithShiftDocs,
  rightLogShift: rightLogShiftDocs,
  // functions - combinatorics
  bellNumbers: bellNumbersDocs,
  catalan: catalanDocs,
  composition: compositionDocs,
  stirlingS2: stirlingS2Docs,
  // functions - core
  config: configDocs,
  import: importDocs,
  typed: typedDocs,
  // functions - complex
  arg: argDocs,
  conj: conjDocs,
  re: reDocs,
  im: imDocs,
  // functions - expression
  evaluate: evaluateDocs,
  help: helpDocs,
  // functions - geometry
  distance: distanceDocs,
  intersect: intersectDocs,
  // functions - logical
  and: andDocs,
  not: notDocs,
  or: orDocs,
  xor: xorDocs,
  // functions - matrix
  concat: concatDocs,
  count: countDocs,
  cross: crossDocs,
  column: columnDocs,
  ctranspose: ctransposeDocs,
  det: detDocs,
  diag: diagDocs,
  diff: diffDocs,
  dot: dotDocs,
  getMatrixDataType: getMatrixDataTypeDocs,
  identity: identityDocs,
  filter: filterDocs,
  flatten: flattenDocs,
  forEach: forEachDocs,
  inv: invDocs,
  pinv: pinvDocs,
  eigs: eigsDocs,
  kron: kronDocs,
  matrixFromFunction: matrixFromFunctionDocs,
  matrixFromRows: matrixFromRowsDocs,
  matrixFromColumns: matrixFromColumnsDocs,
  map: mapDocs,
  ones: onesDocs,
  partitionSelect: partitionSelectDocs,
  range: rangeDocs,
  resize: resizeDocs,
  reshape: reshapeDocs,
  rotate: rotateDocs,
  rotationMatrix: rotationMatrixDocs,
  row: rowDocs,
  size: sizeDocs,
  sort: sortDocs,
  squeeze: squeezeDocs,
  subset: subsetDocs,
  trace: traceDocs,
  transpose: transposeDocs,
  zeros: zerosDocs,
  fft: fftDocs,
  ifft: ifftDocs,
  sylvester: sylvesterDocs,
  schur: schurDocs,
  lyap: lyapDocs,
  // functions - numeric
  solveODE: solveODEDocs,
  // functions - probability
  combinations: combinationsDocs,
  combinationsWithRep: combinationsWithRepDocs,
  // distribution: distributionDocs,
  factorial: factorialDocs,
  gamma: gammaDocs,
  kldivergence: kldivergenceDocs,
  lgamma: lgammaDocs,
  multinomial: multinomialDocs,
  permutations: permutationsDocs,
  pickRandom: pickRandomDocs,
  random: randomDocs,
  randomInt: randomIntDocs,
  // functions - relational
  compare: compareDocs,
  compareNatural: compareNaturalDocs,
  compareText: compareTextDocs,
  deepEqual: deepEqualDocs,
  equal: equalDocs,
  equalText: equalTextDocs,
  larger: largerDocs,
  largerEq: largerEqDocs,
  smaller: smallerDocs,
  smallerEq: smallerEqDocs,
  unequal: unequalDocs,
  // functions - set
  setCartesian: setCartesianDocs,
  setDifference: setDifferenceDocs,
  setDistinct: setDistinctDocs,
  setIntersect: setIntersectDocs,
  setIsSubset: setIsSubsetDocs,
  setMultiplicity: setMultiplicityDocs,
  setPowerset: setPowersetDocs,
  setSize: setSizeDocs,
  setSymDifference: setSymDifferenceDocs,
  setUnion: setUnionDocs,
  // functions - signal
  zpk2tf: zpk2tfDocs,
  freqz: freqzDocs,
  // functions - special
  erf: erfDocs,
  zeta: zetaDocs,
  // functions - statistics
  cumsum: cumSumDocs,
  mad: madDocs,
  max: maxDocs,
  mean: meanDocs,
  median: medianDocs,
  min: minDocs,
  mode: modeDocs,
  prod: prodDocs,
  quantileSeq: quantileSeqDocs,
  std: stdDocs,
  sum: sumDocs,
  variance: varianceDocs,
  corr: corrDocs,
  // functions - trigonometry
  acos: acosDocs,
  acosh: acoshDocs,
  acot: acotDocs,
  acoth: acothDocs,
  acsc: acscDocs,
  acsch: acschDocs,
  asec: asecDocs,
  asech: asechDocs,
  asin: asinDocs,
  asinh: asinhDocs,
  atan: atanDocs,
  atanh: atanhDocs,
  atan2: atan2Docs,
  cos: cosDocs,
  cosh: coshDocs,
  cot: cotDocs,
  coth: cothDocs,
  csc: cscDocs,
  csch: cschDocs,
  sec: secDocs,
  sech: sechDocs,
  sin: sinDocs,
  sinh: sinhDocs,
  tan: tanDocs,
  tanh: tanhDocs,
  // functions - units
  to: toDocs,
  // functions - utils
  clone: cloneDocs,
  format: formatDocs,
  bin: binDocs,
  oct: octDocs,
  hex: hexDocs,
  isNaN: isNaNDocs,
  isInteger: isIntegerDocs,
  isNegative: isNegativeDocs,
  isNumeric: isNumericDocs,
  hasNumericValue: hasNumericValueDocs,
  isPositive: isPositiveDocs,
  isPrime: isPrimeDocs,
  isZero: isZeroDocs,
  print: printDocs,
  typeOf: typeOfDocs,
  numeric: numericDocs
};

// node_modules/mathjs/lib/esm/expression/function/help.js
var name239 = "help";
var dependencies239 = ["typed", "mathWithTransform", "Help"];
var createHelp = factory(name239, dependencies239, (_ref) => {
  var {
    typed: typed2,
    mathWithTransform: mathWithTransform2,
    Help: Help2
  } = _ref;
  return typed2(name239, {
    any: function any(search) {
      var prop;
      var searchName = search;
      if (typeof search !== "string") {
        for (prop in mathWithTransform2) {
          if (hasOwnProperty(mathWithTransform2, prop) && search === mathWithTransform2[prop]) {
            searchName = prop;
            break;
          }
        }
      }
      var doc = getSafeProperty(embeddedDocs, searchName);
      if (!doc) {
        var searchText = typeof searchName === "function" ? searchName.name : searchName;
        throw new Error('No documentation found on "' + searchText + '"');
      }
      return new Help2(doc);
    }
  });
});

// node_modules/mathjs/lib/esm/type/chain/function/chain.js
var name240 = "chain";
var dependencies240 = ["typed", "Chain"];
var createChain = factory(name240, dependencies240, (_ref) => {
  var {
    typed: typed2,
    Chain: Chain2
  } = _ref;
  return typed2(name240, {
    "": function _() {
      return new Chain2();
    },
    any: function any(value) {
      return new Chain2(value);
    }
  });
});

// node_modules/mathjs/lib/esm/function/matrix/det.js
var name241 = "det";
var dependencies241 = ["typed", "matrix", "subtractScalar", "multiply", "divideScalar", "isZero", "unaryMinus"];
var createDet = factory(name241, dependencies241, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    subtractScalar: subtractScalar2,
    multiply: multiply2,
    divideScalar: divideScalar2,
    isZero: isZero2,
    unaryMinus: unaryMinus2
  } = _ref;
  return typed2(name241, {
    any: function any(x) {
      return clone(x);
    },
    "Array | Matrix": function det2(x) {
      var size2;
      if (isMatrix(x)) {
        size2 = x.size();
      } else if (Array.isArray(x)) {
        x = matrix2(x);
        size2 = x.size();
      } else {
        size2 = [];
      }
      switch (size2.length) {
        case 0:
          return clone(x);
        case 1:
          if (size2[0] === 1) {
            return clone(x.valueOf()[0]);
          }
          if (size2[0] === 0) {
            return 1;
          } else {
            throw new RangeError("Matrix must be square (size: " + format3(size2) + ")");
          }
        case 2: {
          var rows = size2[0];
          var cols = size2[1];
          if (rows === cols) {
            return _det(x.clone().valueOf(), rows, cols);
          }
          if (cols === 0) {
            return 1;
          } else {
            throw new RangeError("Matrix must be square (size: " + format3(size2) + ")");
          }
        }
        default:
          throw new RangeError("Matrix must be two dimensional (size: " + format3(size2) + ")");
      }
    }
  });
  function _det(matrix3, rows, cols) {
    if (rows === 1) {
      return clone(matrix3[0][0]);
    } else if (rows === 2) {
      return subtractScalar2(multiply2(matrix3[0][0], matrix3[1][1]), multiply2(matrix3[1][0], matrix3[0][1]));
    } else {
      var negated = false;
      var rowIndices = new Array(rows).fill(0).map((_, i3) => i3);
      for (var k = 0; k < rows; k++) {
        var k_ = rowIndices[k];
        if (isZero2(matrix3[k_][k])) {
          var _k = void 0;
          for (_k = k + 1; _k < rows; _k++) {
            if (!isZero2(matrix3[rowIndices[_k]][k])) {
              k_ = rowIndices[_k];
              rowIndices[_k] = rowIndices[k];
              rowIndices[k] = k_;
              negated = !negated;
              break;
            }
          }
          if (_k === rows) return matrix3[k_][k];
        }
        var piv = matrix3[k_][k];
        var piv_ = k === 0 ? 1 : matrix3[rowIndices[k - 1]][k - 1];
        for (var i2 = k + 1; i2 < rows; i2++) {
          var i_ = rowIndices[i2];
          for (var j = k + 1; j < rows; j++) {
            matrix3[i_][j] = divideScalar2(subtractScalar2(multiply2(matrix3[i_][j], piv), multiply2(matrix3[i_][k], matrix3[k_][j])), piv_);
          }
        }
      }
      var det2 = matrix3[rowIndices[rows - 1]][rows - 1];
      return negated ? unaryMinus2(det2) : det2;
    }
  }
});

// node_modules/mathjs/lib/esm/function/matrix/inv.js
var name242 = "inv";
var dependencies242 = ["typed", "matrix", "divideScalar", "addScalar", "multiply", "unaryMinus", "det", "identity", "abs"];
var createInv = factory(name242, dependencies242, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    divideScalar: divideScalar2,
    addScalar: addScalar2,
    multiply: multiply2,
    unaryMinus: unaryMinus2,
    det: det2,
    identity: identity2,
    abs: abs3
  } = _ref;
  return typed2(name242, {
    "Array | Matrix": function ArrayMatrix(x) {
      var size2 = isMatrix(x) ? x.size() : arraySize(x);
      switch (size2.length) {
        case 1:
          if (size2[0] === 1) {
            if (isMatrix(x)) {
              return matrix2([divideScalar2(1, x.valueOf()[0])]);
            } else {
              return [divideScalar2(1, x[0])];
            }
          } else {
            throw new RangeError("Matrix must be square (size: " + format3(size2) + ")");
          }
        case 2: {
          var rows = size2[0];
          var cols = size2[1];
          if (rows === cols) {
            if (isMatrix(x)) {
              return matrix2(_inv(x.valueOf(), rows, cols), x.storage());
            } else {
              return _inv(x, rows, cols);
            }
          } else {
            throw new RangeError("Matrix must be square (size: " + format3(size2) + ")");
          }
        }
        default:
          throw new RangeError("Matrix must be two dimensional (size: " + format3(size2) + ")");
      }
    },
    any: function any(x) {
      return divideScalar2(1, x);
    }
  });
  function _inv(mat, rows, cols) {
    var r, s, f, value, temp;
    if (rows === 1) {
      value = mat[0][0];
      if (value === 0) {
        throw Error("Cannot calculate inverse, determinant is zero");
      }
      return [[divideScalar2(1, value)]];
    } else if (rows === 2) {
      var d2 = det2(mat);
      if (d2 === 0) {
        throw Error("Cannot calculate inverse, determinant is zero");
      }
      return [[divideScalar2(mat[1][1], d2), divideScalar2(unaryMinus2(mat[0][1]), d2)], [divideScalar2(unaryMinus2(mat[1][0]), d2), divideScalar2(mat[0][0], d2)]];
    } else {
      var A = mat.concat();
      for (r = 0; r < rows; r++) {
        A[r] = A[r].concat();
      }
      var B = identity2(rows).valueOf();
      for (var c = 0; c < cols; c++) {
        var ABig = abs3(A[c][c]);
        var rBig = c;
        r = c + 1;
        while (r < rows) {
          if (abs3(A[r][c]) > ABig) {
            ABig = abs3(A[r][c]);
            rBig = r;
          }
          r++;
        }
        if (ABig === 0) {
          throw Error("Cannot calculate inverse, determinant is zero");
        }
        r = rBig;
        if (r !== c) {
          temp = A[c];
          A[c] = A[r];
          A[r] = temp;
          temp = B[c];
          B[c] = B[r];
          B[r] = temp;
        }
        var Ac = A[c];
        var Bc = B[c];
        for (r = 0; r < rows; r++) {
          var Ar = A[r];
          var Br = B[r];
          if (r !== c) {
            if (Ar[c] !== 0) {
              f = divideScalar2(unaryMinus2(Ar[c]), Ac[c]);
              for (s = c; s < cols; s++) {
                Ar[s] = addScalar2(Ar[s], multiply2(f, Ac[s]));
              }
              for (s = 0; s < cols; s++) {
                Br[s] = addScalar2(Br[s], multiply2(f, Bc[s]));
              }
            }
          } else {
            f = Ac[c];
            for (s = c; s < cols; s++) {
              Ar[s] = divideScalar2(Ar[s], f);
            }
            for (s = 0; s < cols; s++) {
              Br[s] = divideScalar2(Br[s], f);
            }
          }
        }
      }
      return B;
    }
  }
});

// node_modules/mathjs/lib/esm/function/matrix/pinv.js
var name243 = "pinv";
var dependencies243 = ["typed", "matrix", "inv", "deepEqual", "equal", "dotDivide", "dot", "ctranspose", "divideScalar", "multiply", "add", "Complex"];
var createPinv = factory(name243, dependencies243, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    inv: inv2,
    deepEqual: deepEqual2,
    equal: equal2,
    dotDivide: dotDivide2,
    dot: dot2,
    ctranspose: ctranspose2,
    divideScalar: divideScalar2,
    multiply: multiply2,
    add: add4,
    Complex: Complex3
  } = _ref;
  return typed2(name243, {
    "Array | Matrix": function ArrayMatrix(x) {
      var size2 = isMatrix(x) ? x.size() : arraySize(x);
      switch (size2.length) {
        case 1:
          if (_isZeros(x)) return ctranspose2(x);
          if (size2[0] === 1) {
            return inv2(x);
          } else {
            return dotDivide2(ctranspose2(x), dot2(x, x));
          }
        case 2: {
          if (_isZeros(x)) return ctranspose2(x);
          var rows = size2[0];
          var cols = size2[1];
          if (rows === cols) {
            try {
              return inv2(x);
            } catch (err) {
              if (err instanceof Error && err.message.match(/Cannot calculate inverse, determinant is zero/)) {
              } else {
                throw err;
              }
            }
          }
          if (isMatrix(x)) {
            return matrix2(_pinv(x.valueOf(), rows, cols), x.storage());
          } else {
            return _pinv(x, rows, cols);
          }
        }
        default:
          throw new RangeError("Matrix must be two dimensional (size: " + format3(size2) + ")");
      }
    },
    any: function any(x) {
      if (equal2(x, 0)) return clone(x);
      return divideScalar2(1, x);
    }
  });
  function _pinv(mat, rows, cols) {
    var {
      C,
      F
    } = _rankFact(mat, rows, cols);
    var Cpinv = multiply2(inv2(multiply2(ctranspose2(C), C)), ctranspose2(C));
    var Fpinv = multiply2(ctranspose2(F), inv2(multiply2(F, ctranspose2(F))));
    return multiply2(Fpinv, Cpinv);
  }
  function _rref(mat, rows, cols) {
    var M = clone(mat);
    var lead = 0;
    for (var r = 0; r < rows; r++) {
      if (cols <= lead) {
        return M;
      }
      var i2 = r;
      while (_isZero(M[i2][lead])) {
        i2++;
        if (rows === i2) {
          i2 = r;
          lead++;
          if (cols === lead) {
            return M;
          }
        }
      }
      [M[i2], M[r]] = [M[r], M[i2]];
      var val = M[r][lead];
      for (var j = 0; j < cols; j++) {
        M[r][j] = dotDivide2(M[r][j], val);
      }
      for (var _i = 0; _i < rows; _i++) {
        if (_i === r) continue;
        val = M[_i][lead];
        for (var _j = 0; _j < cols; _j++) {
          M[_i][_j] = add4(M[_i][_j], multiply2(-1, multiply2(val, M[r][_j])));
        }
      }
      lead++;
    }
    return M;
  }
  function _rankFact(mat, rows, cols) {
    var rref = _rref(mat, rows, cols);
    var C = mat.map((_, i2) => _.filter((_2, j) => j < rows && !_isZero(dot2(rref[j], rref[j]))));
    var F = rref.filter((_, i2) => !_isZero(dot2(rref[i2], rref[i2])));
    return {
      C,
      F
    };
  }
  function _isZero(x) {
    return equal2(add4(x, Complex3(1, 1)), add4(0, Complex3(1, 1)));
  }
  function _isZeros(arr) {
    return deepEqual2(add4(arr, Complex3(1, 1)), add4(multiply2(arr, 0), Complex3(1, 1)));
  }
});

// node_modules/mathjs/lib/esm/function/matrix/eigs/complexEigs.js
function createComplexEigs(_ref) {
  var {
    addScalar: addScalar2,
    subtract: subtract2,
    flatten: flatten3,
    multiply: multiply2,
    multiplyScalar: multiplyScalar2,
    divideScalar: divideScalar2,
    sqrt: sqrt3,
    abs: abs3,
    bignumber: bignumber2,
    diag: diag2,
    size: size2,
    reshape: reshape3,
    inv: inv2,
    qr: qr2,
    usolve: usolve2,
    usolveAll: usolveAll2,
    equal: equal2,
    complex: complex2,
    larger: larger2,
    smaller: smaller2,
    matrixFromColumns: matrixFromColumns2,
    dot: dot2
  } = _ref;
  function complexEigs(arr, N, prec, type) {
    var findVectors = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : true;
    var R = balance(arr, N, prec, type, findVectors);
    reduceToHessenberg(arr, N, prec, type, findVectors, R);
    var {
      values,
      C
    } = iterateUntilTriangular(arr, N, prec, type, findVectors);
    if (findVectors) {
      var eigenvectors = findEigenvectors(arr, N, C, R, values, prec, type);
      return {
        values,
        eigenvectors
      };
    }
    return {
      values
    };
  }
  function balance(arr, N, prec, type, findVectors) {
    var big = type === "BigNumber";
    var cplx = type === "Complex";
    var realzero = big ? bignumber2(0) : 0;
    var one = big ? bignumber2(1) : cplx ? complex2(1) : 1;
    var realone = big ? bignumber2(1) : 1;
    var radix = big ? bignumber2(10) : 2;
    var radixSq = multiplyScalar2(radix, radix);
    var Rdiag;
    if (findVectors) {
      Rdiag = Array(N).fill(one);
    }
    var last = false;
    while (!last) {
      last = true;
      for (var i2 = 0; i2 < N; i2++) {
        var colNorm = realzero;
        var rowNorm = realzero;
        for (var j = 0; j < N; j++) {
          if (i2 === j) continue;
          colNorm = addScalar2(colNorm, abs3(arr[j][i2]));
          rowNorm = addScalar2(rowNorm, abs3(arr[i2][j]));
        }
        if (!equal2(colNorm, 0) && !equal2(rowNorm, 0)) {
          var f = realone;
          var c = colNorm;
          var rowDivRadix = divideScalar2(rowNorm, radix);
          var rowMulRadix = multiplyScalar2(rowNorm, radix);
          while (smaller2(c, rowDivRadix)) {
            c = multiplyScalar2(c, radixSq);
            f = multiplyScalar2(f, radix);
          }
          while (larger2(c, rowMulRadix)) {
            c = divideScalar2(c, radixSq);
            f = divideScalar2(f, radix);
          }
          var condition = smaller2(divideScalar2(addScalar2(c, rowNorm), f), multiplyScalar2(addScalar2(colNorm, rowNorm), 0.95));
          if (condition) {
            last = false;
            var g = divideScalar2(1, f);
            for (var _j = 0; _j < N; _j++) {
              if (i2 === _j) {
                continue;
              }
              arr[i2][_j] = multiplyScalar2(arr[i2][_j], g);
              arr[_j][i2] = multiplyScalar2(arr[_j][i2], f);
            }
            if (findVectors) {
              Rdiag[i2] = multiplyScalar2(Rdiag[i2], g);
            }
          }
        }
      }
    }
    return findVectors ? diag2(Rdiag) : null;
  }
  function reduceToHessenberg(arr, N, prec, type, findVectors, R) {
    var big = type === "BigNumber";
    var cplx = type === "Complex";
    var zero = big ? bignumber2(0) : cplx ? complex2(0) : 0;
    if (big) {
      prec = bignumber2(prec);
    }
    for (var i2 = 0; i2 < N - 2; i2++) {
      var maxIndex = 0;
      var max3 = zero;
      for (var j = i2 + 1; j < N; j++) {
        var el = arr[j][i2];
        if (smaller2(abs3(max3), abs3(el))) {
          max3 = el;
          maxIndex = j;
        }
      }
      if (smaller2(abs3(max3), prec)) {
        continue;
      }
      if (maxIndex !== i2 + 1) {
        var tmp1 = arr[maxIndex];
        arr[maxIndex] = arr[i2 + 1];
        arr[i2 + 1] = tmp1;
        for (var _j2 = 0; _j2 < N; _j2++) {
          var tmp2 = arr[_j2][maxIndex];
          arr[_j2][maxIndex] = arr[_j2][i2 + 1];
          arr[_j2][i2 + 1] = tmp2;
        }
        if (findVectors) {
          var tmp3 = R[maxIndex];
          R[maxIndex] = R[i2 + 1];
          R[i2 + 1] = tmp3;
        }
      }
      for (var _j3 = i2 + 2; _j3 < N; _j3++) {
        var n = divideScalar2(arr[_j3][i2], max3);
        if (n === 0) {
          continue;
        }
        for (var k = 0; k < N; k++) {
          arr[_j3][k] = subtract2(arr[_j3][k], multiplyScalar2(n, arr[i2 + 1][k]));
        }
        for (var _k = 0; _k < N; _k++) {
          arr[_k][i2 + 1] = addScalar2(arr[_k][i2 + 1], multiplyScalar2(n, arr[_k][_j3]));
        }
        if (findVectors) {
          for (var _k2 = 0; _k2 < N; _k2++) {
            R[_j3][_k2] = subtract2(R[_j3][_k2], multiplyScalar2(n, R[i2 + 1][_k2]));
          }
        }
      }
    }
    return R;
  }
  function iterateUntilTriangular(A, N, prec, type, findVectors) {
    var big = type === "BigNumber";
    var cplx = type === "Complex";
    var one = big ? bignumber2(1) : cplx ? complex2(1) : 1;
    if (big) {
      prec = bignumber2(prec);
    }
    var arr = clone(A);
    var lambdas = [];
    var n = N;
    var Sdiag = [];
    var Qtotal = findVectors ? diag2(Array(N).fill(one)) : void 0;
    var Qpartial = findVectors ? diag2(Array(n).fill(one)) : void 0;
    var lastConvergenceBefore = 0;
    while (lastConvergenceBefore <= 100) {
      lastConvergenceBefore += 1;
      var k = arr[n - 1][n - 1];
      for (var i2 = 0; i2 < n; i2++) {
        arr[i2][i2] = subtract2(arr[i2][i2], k);
      }
      var {
        Q: Q2,
        R
      } = qr2(arr);
      arr = multiply2(R, Q2);
      for (var _i = 0; _i < n; _i++) {
        arr[_i][_i] = addScalar2(arr[_i][_i], k);
      }
      if (findVectors) {
        Qpartial = multiply2(Qpartial, Q2);
      }
      if (n === 1 || smaller2(abs3(arr[n - 1][n - 2]), prec)) {
        lastConvergenceBefore = 0;
        lambdas.push(arr[n - 1][n - 1]);
        if (findVectors) {
          Sdiag.unshift([[1]]);
          inflateMatrix(Qpartial, N);
          Qtotal = multiply2(Qtotal, Qpartial);
          if (n > 1) {
            Qpartial = diag2(Array(n - 1).fill(one));
          }
        }
        n -= 1;
        arr.pop();
        for (var _i2 = 0; _i2 < n; _i2++) {
          arr[_i2].pop();
        }
      } else if (n === 2 || smaller2(abs3(arr[n - 2][n - 3]), prec)) {
        lastConvergenceBefore = 0;
        var ll = eigenvalues2x2(arr[n - 2][n - 2], arr[n - 2][n - 1], arr[n - 1][n - 2], arr[n - 1][n - 1]);
        lambdas.push(...ll);
        if (findVectors) {
          Sdiag.unshift(jordanBase2x2(arr[n - 2][n - 2], arr[n - 2][n - 1], arr[n - 1][n - 2], arr[n - 1][n - 1], ll[0], ll[1], prec, type));
          inflateMatrix(Qpartial, N);
          Qtotal = multiply2(Qtotal, Qpartial);
          if (n > 2) {
            Qpartial = diag2(Array(n - 2).fill(one));
          }
        }
        n -= 2;
        arr.pop();
        arr.pop();
        for (var _i3 = 0; _i3 < n; _i3++) {
          arr[_i3].pop();
          arr[_i3].pop();
        }
      }
      if (n === 0) {
        break;
      }
    }
    lambdas.sort((a, b2) => +subtract2(abs3(a), abs3(b2)));
    if (lastConvergenceBefore > 100) {
      var err = Error("The eigenvalues failed to converge. Only found these eigenvalues: " + lambdas.join(", "));
      err.values = lambdas;
      err.vectors = [];
      throw err;
    }
    var C = findVectors ? multiply2(Qtotal, blockDiag(Sdiag, N)) : void 0;
    return {
      values: lambdas,
      C
    };
  }
  function findEigenvectors(A, N, C, R, values, prec, type) {
    var Cinv = inv2(C);
    var U = multiply2(Cinv, A, C);
    var big = type === "BigNumber";
    var cplx = type === "Complex";
    var zero = big ? bignumber2(0) : cplx ? complex2(0) : 0;
    var one = big ? bignumber2(1) : cplx ? complex2(1) : 1;
    var uniqueValues = [];
    var multiplicities = [];
    for (var lambda of values) {
      var i2 = indexOf(uniqueValues, lambda, equal2);
      if (i2 === -1) {
        uniqueValues.push(lambda);
        multiplicities.push(1);
      } else {
        multiplicities[i2] += 1;
      }
    }
    var vectors = [];
    var len = uniqueValues.length;
    var b2 = Array(N).fill(zero);
    var E = diag2(Array(N).fill(one));
    var _loop = function _loop2() {
      var lambda2 = uniqueValues[_i4];
      var S = subtract2(U, multiply2(lambda2, E));
      var solutions = usolveAll2(S, b2);
      solutions.shift();
      while (solutions.length < multiplicities[_i4]) {
        var approxVec = inverseIterate(S, N, solutions, prec, type);
        if (approxVec === null) {
          break;
        }
        solutions.push(approxVec);
      }
      var correction = multiply2(inv2(R), C);
      solutions = solutions.map((v) => multiply2(correction, v));
      vectors.push(...solutions.map((v) => ({
        value: lambda2,
        vector: flatten3(v)
      })));
    };
    for (var _i4 = 0; _i4 < len; _i4++) {
      _loop();
    }
    return vectors;
  }
  function eigenvalues2x2(a, b2, c, d2) {
    var trA = addScalar2(a, d2);
    var detA = subtract2(multiplyScalar2(a, d2), multiplyScalar2(b2, c));
    var x = multiplyScalar2(trA, 0.5);
    var y = multiplyScalar2(sqrt3(subtract2(multiplyScalar2(trA, trA), multiplyScalar2(4, detA))), 0.5);
    return [addScalar2(x, y), subtract2(x, y)];
  }
  function jordanBase2x2(a, b2, c, d2, l1, l2, prec, type) {
    var big = type === "BigNumber";
    var cplx = type === "Complex";
    var zero = big ? bignumber2(0) : cplx ? complex2(0) : 0;
    var one = big ? bignumber2(1) : cplx ? complex2(1) : 1;
    if (smaller2(abs3(c), prec)) {
      return [[one, zero], [zero, one]];
    }
    if (larger2(abs3(subtract2(l1, l2)), prec)) {
      return [[subtract2(l1, d2), subtract2(l2, d2)], [c, c]];
    }
    var na = subtract2(a, l1);
    var nd = subtract2(d2, l1);
    if (smaller2(abs3(b2), prec) && smaller2(abs3(nd), prec)) {
      return [[na, one], [c, zero]];
    } else {
      return [[b2, zero], [nd, one]];
    }
  }
  function inflateMatrix(arr, N) {
    for (var i2 = 0; i2 < arr.length; i2++) {
      arr[i2].push(...Array(N - arr[i2].length).fill(0));
    }
    for (var _i5 = arr.length; _i5 < N; _i5++) {
      arr.push(Array(N).fill(0));
      arr[_i5][_i5] = 1;
    }
    return arr;
  }
  function blockDiag(arr, N) {
    var M = [];
    for (var i2 = 0; i2 < N; i2++) {
      M[i2] = Array(N).fill(0);
    }
    var I = 0;
    for (var sub2 of arr) {
      var n = sub2.length;
      for (var _i6 = 0; _i6 < n; _i6++) {
        for (var j = 0; j < n; j++) {
          M[I + _i6][I + j] = sub2[_i6][j];
        }
      }
      I += n;
    }
    return M;
  }
  function indexOf(arr, el, fn) {
    for (var i2 = 0; i2 < arr.length; i2++) {
      if (fn(arr[i2], el)) {
        return i2;
      }
    }
    return -1;
  }
  function inverseIterate(A, N, orthog, prec, type) {
    var largeNum = type === "BigNumber" ? bignumber2(1e3) : 1e3;
    var b2;
    var i2 = 0;
    for (; i2 < 5; ++i2) {
      b2 = randomOrthogonalVector(N, orthog, type);
      try {
        b2 = usolve2(A, b2);
      } catch (_unused) {
        continue;
      }
      if (larger2(norm2(b2), largeNum)) {
        break;
      }
    }
    if (i2 >= 5) {
      return null;
    }
    i2 = 0;
    while (true) {
      var c = usolve2(A, b2);
      if (smaller2(norm2(orthogonalComplement(b2, [c])), prec)) {
        break;
      }
      if (++i2 >= 10) {
        return null;
      }
      b2 = normalize2(c);
    }
    return b2;
  }
  function randomOrthogonalVector(N, orthog, type) {
    var big = type === "BigNumber";
    var cplx = type === "Complex";
    var v = Array(N).fill(0).map((_) => 2 * Math.random() - 1);
    if (big) {
      v = v.map((n) => bignumber2(n));
    }
    if (cplx) {
      v = v.map((n) => complex2(n));
    }
    v = orthogonalComplement(v, orthog);
    return normalize2(v, type);
  }
  function orthogonalComplement(v, orthog) {
    var vectorShape = size2(v);
    for (var w of orthog) {
      w = reshape3(w, vectorShape);
      v = subtract2(v, multiply2(divideScalar2(dot2(w, v), dot2(w, w)), w));
    }
    return v;
  }
  function norm2(v) {
    return abs3(sqrt3(dot2(v, v)));
  }
  function normalize2(v, type) {
    var big = type === "BigNumber";
    var cplx = type === "Complex";
    var one = big ? bignumber2(1) : cplx ? complex2(1) : 1;
    return multiply2(divideScalar2(one, norm2(v)), v);
  }
  return complexEigs;
}

// node_modules/mathjs/lib/esm/function/matrix/eigs/realSymmetric.js
function createRealSymmetric(_ref) {
  var {
    config: config4,
    addScalar: addScalar2,
    subtract: subtract2,
    abs: abs3,
    atan: atan4,
    cos: cos3,
    sin: sin3,
    multiplyScalar: multiplyScalar2,
    inv: inv2,
    bignumber: bignumber2,
    multiply: multiply2,
    add: add4
  } = _ref;
  function main(arr, N) {
    var prec = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : config4.epsilon;
    var type = arguments.length > 3 ? arguments[3] : void 0;
    var computeVectors = arguments.length > 4 ? arguments[4] : void 0;
    if (type === "number") {
      return diag2(arr, prec, computeVectors);
    }
    if (type === "BigNumber") {
      return diagBig(arr, prec, computeVectors);
    }
    throw TypeError("Unsupported data type: " + type);
  }
  function diag2(x, precision, computeVectors) {
    var N = x.length;
    var e0 = Math.abs(precision / N);
    var psi;
    var Sij;
    if (computeVectors) {
      Sij = new Array(N);
      for (var i2 = 0; i2 < N; i2++) {
        Sij[i2] = Array(N).fill(0);
        Sij[i2][i2] = 1;
      }
    }
    var Vab = getAij(x);
    while (Math.abs(Vab[1]) >= Math.abs(e0)) {
      var _i = Vab[0][0];
      var j = Vab[0][1];
      psi = getTheta(x[_i][_i], x[j][j], x[_i][j]);
      x = x1(x, psi, _i, j);
      if (computeVectors) Sij = Sij1(Sij, psi, _i, j);
      Vab = getAij(x);
    }
    var Ei = Array(N).fill(0);
    for (var _i2 = 0; _i2 < N; _i2++) {
      Ei[_i2] = x[_i2][_i2];
    }
    return sorting(clone(Ei), Sij, computeVectors);
  }
  function diagBig(x, precision, computeVectors) {
    var N = x.length;
    var e0 = abs3(precision / N);
    var psi;
    var Sij;
    if (computeVectors) {
      Sij = new Array(N);
      for (var i2 = 0; i2 < N; i2++) {
        Sij[i2] = Array(N).fill(0);
        Sij[i2][i2] = 1;
      }
    }
    var Vab = getAijBig(x);
    while (abs3(Vab[1]) >= abs3(e0)) {
      var _i3 = Vab[0][0];
      var j = Vab[0][1];
      psi = getThetaBig(x[_i3][_i3], x[j][j], x[_i3][j]);
      x = x1Big(x, psi, _i3, j);
      if (computeVectors) Sij = Sij1Big(Sij, psi, _i3, j);
      Vab = getAijBig(x);
    }
    var Ei = Array(N).fill(0);
    for (var _i4 = 0; _i4 < N; _i4++) {
      Ei[_i4] = x[_i4][_i4];
    }
    return sorting(clone(Ei), Sij, computeVectors);
  }
  function getTheta(aii, ajj, aij) {
    var denom = ajj - aii;
    if (Math.abs(denom) <= config4.epsilon) {
      return Math.PI / 4;
    } else {
      return 0.5 * Math.atan(2 * aij / (ajj - aii));
    }
  }
  function getThetaBig(aii, ajj, aij) {
    var denom = subtract2(ajj, aii);
    if (abs3(denom) <= config4.epsilon) {
      return bignumber2(-1).acos().div(4);
    } else {
      return multiplyScalar2(0.5, atan4(multiply2(2, aij, inv2(denom))));
    }
  }
  function Sij1(Sij, theta, i2, j) {
    var N = Sij.length;
    var c = Math.cos(theta);
    var s = Math.sin(theta);
    var Ski = Array(N).fill(0);
    var Skj = Array(N).fill(0);
    for (var k = 0; k < N; k++) {
      Ski[k] = c * Sij[k][i2] - s * Sij[k][j];
      Skj[k] = s * Sij[k][i2] + c * Sij[k][j];
    }
    for (var _k = 0; _k < N; _k++) {
      Sij[_k][i2] = Ski[_k];
      Sij[_k][j] = Skj[_k];
    }
    return Sij;
  }
  function Sij1Big(Sij, theta, i2, j) {
    var N = Sij.length;
    var c = cos3(theta);
    var s = sin3(theta);
    var Ski = Array(N).fill(bignumber2(0));
    var Skj = Array(N).fill(bignumber2(0));
    for (var k = 0; k < N; k++) {
      Ski[k] = subtract2(multiplyScalar2(c, Sij[k][i2]), multiplyScalar2(s, Sij[k][j]));
      Skj[k] = addScalar2(multiplyScalar2(s, Sij[k][i2]), multiplyScalar2(c, Sij[k][j]));
    }
    for (var _k2 = 0; _k2 < N; _k2++) {
      Sij[_k2][i2] = Ski[_k2];
      Sij[_k2][j] = Skj[_k2];
    }
    return Sij;
  }
  function x1Big(Hij, theta, i2, j) {
    var N = Hij.length;
    var c = bignumber2(cos3(theta));
    var s = bignumber2(sin3(theta));
    var c2 = multiplyScalar2(c, c);
    var s2 = multiplyScalar2(s, s);
    var Aki = Array(N).fill(bignumber2(0));
    var Akj = Array(N).fill(bignumber2(0));
    var csHij = multiply2(bignumber2(2), c, s, Hij[i2][j]);
    var Aii = addScalar2(subtract2(multiplyScalar2(c2, Hij[i2][i2]), csHij), multiplyScalar2(s2, Hij[j][j]));
    var Ajj = add4(multiplyScalar2(s2, Hij[i2][i2]), csHij, multiplyScalar2(c2, Hij[j][j]));
    for (var k = 0; k < N; k++) {
      Aki[k] = subtract2(multiplyScalar2(c, Hij[i2][k]), multiplyScalar2(s, Hij[j][k]));
      Akj[k] = addScalar2(multiplyScalar2(s, Hij[i2][k]), multiplyScalar2(c, Hij[j][k]));
    }
    Hij[i2][i2] = Aii;
    Hij[j][j] = Ajj;
    Hij[i2][j] = bignumber2(0);
    Hij[j][i2] = bignumber2(0);
    for (var _k3 = 0; _k3 < N; _k3++) {
      if (_k3 !== i2 && _k3 !== j) {
        Hij[i2][_k3] = Aki[_k3];
        Hij[_k3][i2] = Aki[_k3];
        Hij[j][_k3] = Akj[_k3];
        Hij[_k3][j] = Akj[_k3];
      }
    }
    return Hij;
  }
  function x1(Hij, theta, i2, j) {
    var N = Hij.length;
    var c = Math.cos(theta);
    var s = Math.sin(theta);
    var c2 = c * c;
    var s2 = s * s;
    var Aki = Array(N).fill(0);
    var Akj = Array(N).fill(0);
    var Aii = c2 * Hij[i2][i2] - 2 * c * s * Hij[i2][j] + s2 * Hij[j][j];
    var Ajj = s2 * Hij[i2][i2] + 2 * c * s * Hij[i2][j] + c2 * Hij[j][j];
    for (var k = 0; k < N; k++) {
      Aki[k] = c * Hij[i2][k] - s * Hij[j][k];
      Akj[k] = s * Hij[i2][k] + c * Hij[j][k];
    }
    Hij[i2][i2] = Aii;
    Hij[j][j] = Ajj;
    Hij[i2][j] = 0;
    Hij[j][i2] = 0;
    for (var _k4 = 0; _k4 < N; _k4++) {
      if (_k4 !== i2 && _k4 !== j) {
        Hij[i2][_k4] = Aki[_k4];
        Hij[_k4][i2] = Aki[_k4];
        Hij[j][_k4] = Akj[_k4];
        Hij[_k4][j] = Akj[_k4];
      }
    }
    return Hij;
  }
  function getAij(Mij) {
    var N = Mij.length;
    var maxMij = 0;
    var maxIJ = [0, 1];
    for (var i2 = 0; i2 < N; i2++) {
      for (var j = i2 + 1; j < N; j++) {
        if (Math.abs(maxMij) < Math.abs(Mij[i2][j])) {
          maxMij = Math.abs(Mij[i2][j]);
          maxIJ = [i2, j];
        }
      }
    }
    return [maxIJ, maxMij];
  }
  function getAijBig(Mij) {
    var N = Mij.length;
    var maxMij = 0;
    var maxIJ = [0, 1];
    for (var i2 = 0; i2 < N; i2++) {
      for (var j = i2 + 1; j < N; j++) {
        if (abs3(maxMij) < abs3(Mij[i2][j])) {
          maxMij = abs3(Mij[i2][j]);
          maxIJ = [i2, j];
        }
      }
    }
    return [maxIJ, maxMij];
  }
  function sorting(E, S, computeVectors) {
    var N = E.length;
    var values = Array(N);
    var vecs;
    if (computeVectors) {
      vecs = Array(N);
      for (var k = 0; k < N; k++) {
        vecs[k] = Array(N);
      }
    }
    for (var i2 = 0; i2 < N; i2++) {
      var minID = 0;
      var minE = E[0];
      for (var j = 0; j < E.length; j++) {
        if (abs3(E[j]) < abs3(minE)) {
          minID = j;
          minE = E[minID];
        }
      }
      values[i2] = E.splice(minID, 1)[0];
      if (computeVectors) {
        for (var _k5 = 0; _k5 < N; _k5++) {
          vecs[i2][_k5] = S[_k5][minID];
          S[_k5].splice(minID, 1);
        }
      }
    }
    if (!computeVectors) return {
      values
    };
    var eigenvectors = vecs.map((vector, i3) => ({
      value: values[i3],
      vector
    }));
    return {
      values,
      eigenvectors
    };
  }
  return main;
}

// node_modules/mathjs/lib/esm/function/matrix/eigs.js
var name244 = "eigs";
var dependencies244 = ["config", "typed", "matrix", "addScalar", "equal", "subtract", "abs", "atan", "cos", "sin", "multiplyScalar", "divideScalar", "inv", "bignumber", "multiply", "add", "larger", "column", "flatten", "number", "complex", "sqrt", "diag", "size", "reshape", "qr", "usolve", "usolveAll", "im", "re", "smaller", "matrixFromColumns", "dot"];
var createEigs = factory(name244, dependencies244, (_ref) => {
  var {
    config: config4,
    typed: typed2,
    matrix: matrix2,
    addScalar: addScalar2,
    subtract: subtract2,
    equal: equal2,
    abs: abs3,
    atan: atan4,
    cos: cos3,
    sin: sin3,
    multiplyScalar: multiplyScalar2,
    divideScalar: divideScalar2,
    inv: inv2,
    bignumber: bignumber2,
    multiply: multiply2,
    add: add4,
    larger: larger2,
    column: column2,
    flatten: flatten3,
    number: number2,
    complex: complex2,
    sqrt: sqrt3,
    diag: diag2,
    size: size2,
    reshape: reshape3,
    qr: qr2,
    usolve: usolve2,
    usolveAll: usolveAll2,
    im: im2,
    re: re2,
    smaller: smaller2,
    matrixFromColumns: matrixFromColumns2,
    dot: dot2
  } = _ref;
  var doRealSymmetric = createRealSymmetric({
    config: config4,
    addScalar: addScalar2,
    subtract: subtract2,
    column: column2,
    flatten: flatten3,
    equal: equal2,
    abs: abs3,
    atan: atan4,
    cos: cos3,
    sin: sin3,
    multiplyScalar: multiplyScalar2,
    inv: inv2,
    bignumber: bignumber2,
    complex: complex2,
    multiply: multiply2,
    add: add4
  });
  var doComplexEigs = createComplexEigs({
    config: config4,
    addScalar: addScalar2,
    subtract: subtract2,
    multiply: multiply2,
    multiplyScalar: multiplyScalar2,
    flatten: flatten3,
    divideScalar: divideScalar2,
    sqrt: sqrt3,
    abs: abs3,
    bignumber: bignumber2,
    diag: diag2,
    size: size2,
    reshape: reshape3,
    qr: qr2,
    inv: inv2,
    usolve: usolve2,
    usolveAll: usolveAll2,
    equal: equal2,
    complex: complex2,
    larger: larger2,
    smaller: smaller2,
    matrixFromColumns: matrixFromColumns2,
    dot: dot2
  });
  return typed2("eigs", {
    // The conversion to matrix in the first two implementations,
    // just to convert back to an array right away in
    // computeValuesAndVectors, is unfortunate, and should perhaps be
    // streamlined. It is done because the Matrix object carries some
    // type information about its entries, and so constructing the matrix
    // is a roundabout way of doing type detection.
    Array: function Array2(x) {
      return doEigs(matrix2(x));
    },
    "Array, number|BigNumber": function ArrayNumberBigNumber(x, prec) {
      return doEigs(matrix2(x), {
        precision: prec
      });
    },
    "Array, Object"(x, opts) {
      return doEigs(matrix2(x), opts);
    },
    Matrix: function Matrix2(mat) {
      return doEigs(mat, {
        matricize: true
      });
    },
    "Matrix, number|BigNumber": function MatrixNumberBigNumber(mat, prec) {
      return doEigs(mat, {
        precision: prec,
        matricize: true
      });
    },
    "Matrix, Object": function MatrixObject(mat, opts) {
      var useOpts = {
        matricize: true
      };
      _extends(useOpts, opts);
      return doEigs(mat, useOpts);
    }
  });
  function doEigs(mat) {
    var _opts$precision;
    var opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var computeVectors = "eigenvectors" in opts ? opts.eigenvectors : true;
    var prec = (_opts$precision = opts.precision) !== null && _opts$precision !== void 0 ? _opts$precision : config4.epsilon;
    var result = computeValuesAndVectors(mat, prec, computeVectors);
    if (opts.matricize) {
      result.values = matrix2(result.values);
      if (computeVectors) {
        result.eigenvectors = result.eigenvectors.map((_ref2) => {
          var {
            value,
            vector
          } = _ref2;
          return {
            value,
            vector: matrix2(vector)
          };
        });
      }
    }
    if (computeVectors) {
      Object.defineProperty(result, "vectors", {
        enumerable: false,
        // to make sure that the eigenvectors can still be
        // converted to string.
        get: () => {
          throw new Error("eigs(M).vectors replaced with eigs(M).eigenvectors");
        }
      });
    }
    return result;
  }
  function computeValuesAndVectors(mat, prec, computeVectors) {
    var arr = mat.toArray();
    var asize = mat.size();
    if (asize.length !== 2 || asize[0] !== asize[1]) {
      throw new RangeError("Matrix must be square (size: ".concat(format3(asize), ")"));
    }
    var N = asize[0];
    if (isReal(arr, N, prec)) {
      coerceReal(arr, N);
      if (isSymmetric(arr, N, prec)) {
        var _type = coerceTypes(mat, arr, N);
        return doRealSymmetric(arr, N, prec, _type, computeVectors);
      }
    }
    var type = coerceTypes(mat, arr, N);
    return doComplexEigs(arr, N, prec, type, computeVectors);
  }
  function isSymmetric(arr, N, prec) {
    for (var i2 = 0; i2 < N; i2++) {
      for (var j = i2; j < N; j++) {
        if (larger2(bignumber2(abs3(subtract2(arr[i2][j], arr[j][i2]))), prec)) {
          return false;
        }
      }
    }
    return true;
  }
  function isReal(arr, N, prec) {
    for (var i2 = 0; i2 < N; i2++) {
      for (var j = 0; j < N; j++) {
        if (larger2(bignumber2(abs3(im2(arr[i2][j]))), prec)) {
          return false;
        }
      }
    }
    return true;
  }
  function coerceReal(arr, N) {
    for (var i2 = 0; i2 < N; i2++) {
      for (var j = 0; j < N; j++) {
        arr[i2][j] = re2(arr[i2][j]);
      }
    }
  }
  function coerceTypes(mat, arr, N) {
    var type = mat.datatype();
    if (type === "number" || type === "BigNumber" || type === "Complex") {
      return type;
    }
    var hasNumber = false;
    var hasBig = false;
    var hasComplex = false;
    for (var i2 = 0; i2 < N; i2++) {
      for (var j = 0; j < N; j++) {
        var el = arr[i2][j];
        if (isNumber(el) || isFraction(el)) {
          hasNumber = true;
        } else if (isBigNumber(el)) {
          hasBig = true;
        } else if (isComplex(el)) {
          hasComplex = true;
        } else {
          throw TypeError("Unsupported type in Matrix: " + typeOf(el));
        }
      }
    }
    if (hasBig && hasComplex) {
      console.warn("Complex BigNumbers not supported, this operation will lose precission.");
    }
    if (hasComplex) {
      for (var _i = 0; _i < N; _i++) {
        for (var _j = 0; _j < N; _j++) {
          arr[_i][_j] = complex2(arr[_i][_j]);
        }
      }
      return "Complex";
    }
    if (hasBig) {
      for (var _i2 = 0; _i2 < N; _i2++) {
        for (var _j2 = 0; _j2 < N; _j2++) {
          arr[_i2][_j2] = bignumber2(arr[_i2][_j2]);
        }
      }
      return "BigNumber";
    }
    if (hasNumber) {
      for (var _i3 = 0; _i3 < N; _i3++) {
        for (var _j3 = 0; _j3 < N; _j3++) {
          arr[_i3][_j3] = number2(arr[_i3][_j3]);
        }
      }
      return "number";
    } else {
      throw TypeError("Matrix contains unsupported types only.");
    }
  }
});

// node_modules/mathjs/lib/esm/function/matrix/expm.js
var name245 = "expm";
var dependencies245 = ["typed", "abs", "add", "identity", "inv", "multiply"];
var createExpm = factory(name245, dependencies245, (_ref) => {
  var {
    typed: typed2,
    abs: abs3,
    add: add4,
    identity: identity2,
    inv: inv2,
    multiply: multiply2
  } = _ref;
  return typed2(name245, {
    Matrix: function Matrix2(A) {
      var size2 = A.size();
      if (size2.length !== 2 || size2[0] !== size2[1]) {
        throw new RangeError("Matrix must be square (size: " + format3(size2) + ")");
      }
      var n = size2[0];
      var eps = 1e-15;
      var infNorm = infinityNorm(A);
      var params = findParams(infNorm, eps);
      var q = params.q;
      var j = params.j;
      var Apos = multiply2(A, Math.pow(2, -j));
      var N = identity2(n);
      var D = identity2(n);
      var factor = 1;
      var AposToI = Apos;
      var alternate = -1;
      for (var i2 = 1; i2 <= q; i2++) {
        if (i2 > 1) {
          AposToI = multiply2(AposToI, Apos);
          alternate = -alternate;
        }
        factor = factor * (q - i2 + 1) / ((2 * q - i2 + 1) * i2);
        N = add4(N, multiply2(factor, AposToI));
        D = add4(D, multiply2(factor * alternate, AposToI));
      }
      var R = multiply2(inv2(D), N);
      for (var _i = 0; _i < j; _i++) {
        R = multiply2(R, R);
      }
      return isSparseMatrix(A) ? A.createSparseMatrix(R) : R;
    }
  });
  function infinityNorm(A) {
    var n = A.size()[0];
    var infNorm = 0;
    for (var i2 = 0; i2 < n; i2++) {
      var rowSum = 0;
      for (var j = 0; j < n; j++) {
        rowSum += abs3(A.get([i2, j]));
      }
      infNorm = Math.max(rowSum, infNorm);
    }
    return infNorm;
  }
  function findParams(infNorm, eps) {
    var maxSearchSize = 30;
    for (var k = 0; k < maxSearchSize; k++) {
      for (var q = 0; q <= k; q++) {
        var j = k - q;
        if (errorEstimate(infNorm, q, j) < eps) {
          return {
            q,
            j
          };
        }
      }
    }
    throw new Error("Could not find acceptable parameters to compute the matrix exponential (try increasing maxSearchSize in expm.js)");
  }
  function errorEstimate(infNorm, q, j) {
    var qfac = 1;
    for (var i2 = 2; i2 <= q; i2++) {
      qfac *= i2;
    }
    var twoqfac = qfac;
    for (var _i2 = q + 1; _i2 <= 2 * q; _i2++) {
      twoqfac *= _i2;
    }
    var twoqp1fac = twoqfac * (2 * q + 1);
    return 8 * Math.pow(infNorm / Math.pow(2, j), 2 * q) * qfac * qfac / (twoqfac * twoqp1fac);
  }
});

// node_modules/mathjs/lib/esm/function/matrix/sqrtm.js
var name246 = "sqrtm";
var dependencies246 = ["typed", "abs", "add", "multiply", "map", "sqrt", "subtract", "inv", "size", "max", "identity"];
var createSqrtm = factory(name246, dependencies246, (_ref) => {
  var {
    typed: typed2,
    abs: abs3,
    add: add4,
    multiply: multiply2,
    map: map3,
    sqrt: sqrt3,
    subtract: subtract2,
    inv: inv2,
    size: size2,
    max: max3,
    identity: identity2
  } = _ref;
  var _maxIterations = 1e3;
  var _tolerance = 1e-6;
  function _denmanBeavers(A) {
    var error;
    var iterations = 0;
    var Y = A;
    var Z = identity2(size2(A));
    do {
      var Yk = Y;
      Y = multiply2(0.5, add4(Yk, inv2(Z)));
      Z = multiply2(0.5, add4(Z, inv2(Yk)));
      error = max3(abs3(subtract2(Y, Yk)));
      if (error > _tolerance && ++iterations > _maxIterations) {
        throw new Error("computing square root of matrix: iterative method could not converge");
      }
    } while (error > _tolerance);
    return Y;
  }
  return typed2(name246, {
    "Array | Matrix": function ArrayMatrix(A) {
      var size3 = isMatrix(A) ? A.size() : arraySize(A);
      switch (size3.length) {
        case 1:
          if (size3[0] === 1) {
            return map3(A, sqrt3);
          } else {
            throw new RangeError("Matrix must be square (size: " + format3(size3) + ")");
          }
        case 2: {
          var rows = size3[0];
          var cols = size3[1];
          if (rows === cols) {
            return _denmanBeavers(A);
          } else {
            throw new RangeError("Matrix must be square (size: " + format3(size3) + ")");
          }
        }
        default:
          throw new RangeError("Matrix must be at most two dimensional (size: " + format3(size3) + ")");
      }
    }
  });
});

// node_modules/mathjs/lib/esm/function/algebra/sylvester.js
var name247 = "sylvester";
var dependencies247 = ["typed", "schur", "matrixFromColumns", "matrix", "multiply", "range", "concat", "transpose", "index", "subset", "add", "subtract", "identity", "lusolve", "abs"];
var createSylvester = factory(name247, dependencies247, (_ref) => {
  var {
    typed: typed2,
    schur: schur2,
    matrixFromColumns: matrixFromColumns2,
    matrix: matrix2,
    multiply: multiply2,
    range: range3,
    concat: concat4,
    transpose: transpose2,
    index: index2,
    subset: subset2,
    add: add4,
    subtract: subtract2,
    identity: identity2,
    lusolve: lusolve2,
    abs: abs3
  } = _ref;
  return typed2(name247, {
    "Matrix, Matrix, Matrix": _sylvester,
    "Array, Matrix, Matrix": function ArrayMatrixMatrix(A, B, C) {
      return _sylvester(matrix2(A), B, C);
    },
    "Array, Array, Matrix": function ArrayArrayMatrix(A, B, C) {
      return _sylvester(matrix2(A), matrix2(B), C);
    },
    "Array, Matrix, Array": function ArrayMatrixArray(A, B, C) {
      return _sylvester(matrix2(A), B, matrix2(C));
    },
    "Matrix, Array, Matrix": function MatrixArrayMatrix(A, B, C) {
      return _sylvester(A, matrix2(B), C);
    },
    "Matrix, Array, Array": function MatrixArrayArray(A, B, C) {
      return _sylvester(A, matrix2(B), matrix2(C));
    },
    "Matrix, Matrix, Array": function MatrixMatrixArray(A, B, C) {
      return _sylvester(A, B, matrix2(C));
    },
    "Array, Array, Array": function ArrayArrayArray(A, B, C) {
      return _sylvester(matrix2(A), matrix2(B), matrix2(C)).toArray();
    }
  });
  function _sylvester(A, B, C) {
    var n = B.size()[0];
    var m = A.size()[0];
    var sA = schur2(A);
    var F = sA.T;
    var U = sA.U;
    var sB = schur2(multiply2(-1, B));
    var G = sB.T;
    var V = sB.U;
    var D = multiply2(multiply2(transpose2(U), C), V);
    var all2 = range3(0, m);
    var y = [];
    var hc = (a, b2) => concat4(a, b2, 1);
    var vc = (a, b2) => concat4(a, b2, 0);
    for (var k = 0; k < n; k++) {
      if (k < n - 1 && abs3(subset2(G, index2(k + 1, k))) > 1e-5) {
        var RHS = vc(subset2(D, index2(all2, k)), subset2(D, index2(all2, k + 1)));
        for (var j = 0; j < k; j++) {
          RHS = add4(RHS, vc(multiply2(y[j], subset2(G, index2(j, k))), multiply2(y[j], subset2(G, index2(j, k + 1)))));
        }
        var gkk = multiply2(identity2(m), multiply2(-1, subset2(G, index2(k, k))));
        var gmk = multiply2(identity2(m), multiply2(-1, subset2(G, index2(k + 1, k))));
        var gkm = multiply2(identity2(m), multiply2(-1, subset2(G, index2(k, k + 1))));
        var gmm = multiply2(identity2(m), multiply2(-1, subset2(G, index2(k + 1, k + 1))));
        var LHS = vc(hc(add4(F, gkk), gmk), hc(gkm, add4(F, gmm)));
        var yAux = lusolve2(LHS, RHS);
        y[k] = yAux.subset(index2(range3(0, m), 0));
        y[k + 1] = yAux.subset(index2(range3(m, 2 * m), 0));
        k++;
      } else {
        var _RHS = subset2(D, index2(all2, k));
        for (var _j = 0; _j < k; _j++) {
          _RHS = add4(_RHS, multiply2(y[_j], subset2(G, index2(_j, k))));
        }
        var _gkk = subset2(G, index2(k, k));
        var _LHS = subtract2(F, multiply2(_gkk, identity2(m)));
        y[k] = lusolve2(_LHS, _RHS);
      }
    }
    var Y = matrix2(matrixFromColumns2(...y));
    var X = multiply2(U, multiply2(Y, transpose2(V)));
    return X;
  }
});

// node_modules/mathjs/lib/esm/function/algebra/decomposition/schur.js
var name248 = "schur";
var dependencies248 = ["typed", "matrix", "identity", "multiply", "qr", "norm", "subtract"];
var createSchur = factory(name248, dependencies248, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    identity: identity2,
    multiply: multiply2,
    qr: qr2,
    norm: norm2,
    subtract: subtract2
  } = _ref;
  return typed2(name248, {
    Array: function Array2(X) {
      var r = _schur(matrix2(X));
      return {
        U: r.U.valueOf(),
        T: r.T.valueOf()
      };
    },
    Matrix: function Matrix2(X) {
      return _schur(X);
    }
  });
  function _schur(X) {
    var n = X.size()[0];
    var A = X;
    var U = identity2(n);
    var k = 0;
    var A0;
    do {
      A0 = A;
      var QR = qr2(A);
      var Q2 = QR.Q;
      var R = QR.R;
      A = multiply2(R, Q2);
      U = multiply2(U, Q2);
      if (k++ > 100) {
        break;
      }
    } while (norm2(subtract2(A, A0)) > 1e-4);
    return {
      U,
      T: A
    };
  }
});

// node_modules/mathjs/lib/esm/function/algebra/lyap.js
var name249 = "lyap";
var dependencies249 = ["typed", "matrix", "sylvester", "multiply", "transpose"];
var createLyap = factory(name249, dependencies249, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    sylvester: sylvester2,
    multiply: multiply2,
    transpose: transpose2
  } = _ref;
  return typed2(name249, {
    "Matrix, Matrix": function MatrixMatrix(A, Q2) {
      return sylvester2(A, transpose2(A), multiply2(-1, Q2));
    },
    "Array, Matrix": function ArrayMatrix(A, Q2) {
      return sylvester2(matrix2(A), transpose2(matrix2(A)), multiply2(-1, Q2));
    },
    "Matrix, Array": function MatrixArray(A, Q2) {
      return sylvester2(A, transpose2(matrix2(A)), matrix2(multiply2(-1, Q2)));
    },
    "Array, Array": function ArrayArray(A, Q2) {
      return sylvester2(matrix2(A), transpose2(matrix2(A)), matrix2(multiply2(-1, Q2))).toArray();
    }
  });
});

// node_modules/mathjs/lib/esm/function/arithmetic/divide.js
var name250 = "divide";
var dependencies250 = ["typed", "matrix", "multiply", "equalScalar", "divideScalar", "inv"];
var createDivide = factory(name250, dependencies250, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    multiply: multiply2,
    equalScalar: equalScalar2,
    divideScalar: divideScalar2,
    inv: inv2
  } = _ref;
  var matAlgo11xS0s = createMatAlgo11xS0s({
    typed: typed2,
    equalScalar: equalScalar2
  });
  var matAlgo14xDs = createMatAlgo14xDs({
    typed: typed2
  });
  return typed2("divide", extend({
    // we extend the signatures of divideScalar with signatures dealing with matrices
    "Array | Matrix, Array | Matrix": function ArrayMatrixArrayMatrix(x, y) {
      return multiply2(x, inv2(y));
    },
    "DenseMatrix, any": function DenseMatrixAny(x, y) {
      return matAlgo14xDs(x, y, divideScalar2, false);
    },
    "SparseMatrix, any": function SparseMatrixAny(x, y) {
      return matAlgo11xS0s(x, y, divideScalar2, false);
    },
    "Array, any": function ArrayAny(x, y) {
      return matAlgo14xDs(matrix2(x), y, divideScalar2, false).valueOf();
    },
    "any, Array | Matrix": function anyArrayMatrix(x, y) {
      return multiply2(x, inv2(y));
    }
  }, divideScalar2.signatures));
});

// node_modules/mathjs/lib/esm/function/geometry/distance.js
var name251 = "distance";
var dependencies251 = ["typed", "addScalar", "subtractScalar", "divideScalar", "multiplyScalar", "deepEqual", "sqrt", "abs"];
var createDistance = factory(name251, dependencies251, (_ref) => {
  var {
    typed: typed2,
    addScalar: addScalar2,
    subtractScalar: subtractScalar2,
    multiplyScalar: multiplyScalar2,
    divideScalar: divideScalar2,
    deepEqual: deepEqual2,
    sqrt: sqrt3,
    abs: abs3
  } = _ref;
  return typed2(name251, {
    "Array, Array, Array": function ArrayArrayArray(x, y, z) {
      if (x.length === 2 && y.length === 2 && z.length === 2) {
        if (!_2d(x)) {
          throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");
        }
        if (!_2d(y)) {
          throw new TypeError("Array with 2 numbers or BigNumbers expected for second argument");
        }
        if (!_2d(z)) {
          throw new TypeError("Array with 2 numbers or BigNumbers expected for third argument");
        }
        if (deepEqual2(y, z)) {
          throw new TypeError("LinePoint1 should not be same with LinePoint2");
        }
        var xCoeff = subtractScalar2(z[1], y[1]);
        var yCoeff = subtractScalar2(y[0], z[0]);
        var constant = subtractScalar2(multiplyScalar2(z[0], y[1]), multiplyScalar2(y[0], z[1]));
        return _distancePointLine2D(x[0], x[1], xCoeff, yCoeff, constant);
      } else {
        throw new TypeError("Invalid Arguments: Try again");
      }
    },
    "Object, Object, Object": function ObjectObjectObject(x, y, z) {
      if (Object.keys(x).length === 2 && Object.keys(y).length === 2 && Object.keys(z).length === 2) {
        if (!_2d(x)) {
          throw new TypeError("Values of pointX and pointY should be numbers or BigNumbers");
        }
        if (!_2d(y)) {
          throw new TypeError("Values of lineOnePtX and lineOnePtY should be numbers or BigNumbers");
        }
        if (!_2d(z)) {
          throw new TypeError("Values of lineTwoPtX and lineTwoPtY should be numbers or BigNumbers");
        }
        if (deepEqual2(_objectToArray(y), _objectToArray(z))) {
          throw new TypeError("LinePoint1 should not be same with LinePoint2");
        }
        if ("pointX" in x && "pointY" in x && "lineOnePtX" in y && "lineOnePtY" in y && "lineTwoPtX" in z && "lineTwoPtY" in z) {
          var xCoeff = subtractScalar2(z.lineTwoPtY, y.lineOnePtY);
          var yCoeff = subtractScalar2(y.lineOnePtX, z.lineTwoPtX);
          var constant = subtractScalar2(multiplyScalar2(z.lineTwoPtX, y.lineOnePtY), multiplyScalar2(y.lineOnePtX, z.lineTwoPtY));
          return _distancePointLine2D(x.pointX, x.pointY, xCoeff, yCoeff, constant);
        } else {
          throw new TypeError("Key names do not match");
        }
      } else {
        throw new TypeError("Invalid Arguments: Try again");
      }
    },
    "Array, Array": function ArrayArray(x, y) {
      if (x.length === 2 && y.length === 3) {
        if (!_2d(x)) {
          throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");
        }
        if (!_3d(y)) {
          throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");
        }
        return _distancePointLine2D(x[0], x[1], y[0], y[1], y[2]);
      } else if (x.length === 3 && y.length === 6) {
        if (!_3d(x)) {
          throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");
        }
        if (!_parametricLine(y)) {
          throw new TypeError("Array with 6 numbers or BigNumbers expected for second argument");
        }
        return _distancePointLine3D(x[0], x[1], x[2], y[0], y[1], y[2], y[3], y[4], y[5]);
      } else if (x.length === y.length && x.length > 0) {
        if (!_containsOnlyNumbers(x)) {
          throw new TypeError("All values of an array should be numbers or BigNumbers");
        }
        if (!_containsOnlyNumbers(y)) {
          throw new TypeError("All values of an array should be numbers or BigNumbers");
        }
        return _euclideanDistance(x, y);
      } else {
        throw new TypeError("Invalid Arguments: Try again");
      }
    },
    "Object, Object": function ObjectObject(x, y) {
      if (Object.keys(x).length === 2 && Object.keys(y).length === 3) {
        if (!_2d(x)) {
          throw new TypeError("Values of pointX and pointY should be numbers or BigNumbers");
        }
        if (!_3d(y)) {
          throw new TypeError("Values of xCoeffLine, yCoeffLine and constant should be numbers or BigNumbers");
        }
        if ("pointX" in x && "pointY" in x && "xCoeffLine" in y && "yCoeffLine" in y && "constant" in y) {
          return _distancePointLine2D(x.pointX, x.pointY, y.xCoeffLine, y.yCoeffLine, y.constant);
        } else {
          throw new TypeError("Key names do not match");
        }
      } else if (Object.keys(x).length === 3 && Object.keys(y).length === 6) {
        if (!_3d(x)) {
          throw new TypeError("Values of pointX, pointY and pointZ should be numbers or BigNumbers");
        }
        if (!_parametricLine(y)) {
          throw new TypeError("Values of x0, y0, z0, a, b and c should be numbers or BigNumbers");
        }
        if ("pointX" in x && "pointY" in x && "x0" in y && "y0" in y && "z0" in y && "a" in y && "b" in y && "c" in y) {
          return _distancePointLine3D(x.pointX, x.pointY, x.pointZ, y.x0, y.y0, y.z0, y.a, y.b, y.c);
        } else {
          throw new TypeError("Key names do not match");
        }
      } else if (Object.keys(x).length === 2 && Object.keys(y).length === 2) {
        if (!_2d(x)) {
          throw new TypeError("Values of pointOneX and pointOneY should be numbers or BigNumbers");
        }
        if (!_2d(y)) {
          throw new TypeError("Values of pointTwoX and pointTwoY should be numbers or BigNumbers");
        }
        if ("pointOneX" in x && "pointOneY" in x && "pointTwoX" in y && "pointTwoY" in y) {
          return _euclideanDistance([x.pointOneX, x.pointOneY], [y.pointTwoX, y.pointTwoY]);
        } else {
          throw new TypeError("Key names do not match");
        }
      } else if (Object.keys(x).length === 3 && Object.keys(y).length === 3) {
        if (!_3d(x)) {
          throw new TypeError("Values of pointOneX, pointOneY and pointOneZ should be numbers or BigNumbers");
        }
        if (!_3d(y)) {
          throw new TypeError("Values of pointTwoX, pointTwoY and pointTwoZ should be numbers or BigNumbers");
        }
        if ("pointOneX" in x && "pointOneY" in x && "pointOneZ" in x && "pointTwoX" in y && "pointTwoY" in y && "pointTwoZ" in y) {
          return _euclideanDistance([x.pointOneX, x.pointOneY, x.pointOneZ], [y.pointTwoX, y.pointTwoY, y.pointTwoZ]);
        } else {
          throw new TypeError("Key names do not match");
        }
      } else {
        throw new TypeError("Invalid Arguments: Try again");
      }
    },
    Array: function Array2(arr) {
      if (!_pairwise(arr)) {
        throw new TypeError("Incorrect array format entered for pairwise distance calculation");
      }
      return _distancePairwise(arr);
    }
  });
  function _isNumber(a) {
    return typeof a === "number" || isBigNumber(a);
  }
  function _2d(a) {
    if (a.constructor !== Array) {
      a = _objectToArray(a);
    }
    return _isNumber(a[0]) && _isNumber(a[1]);
  }
  function _3d(a) {
    if (a.constructor !== Array) {
      a = _objectToArray(a);
    }
    return _isNumber(a[0]) && _isNumber(a[1]) && _isNumber(a[2]);
  }
  function _containsOnlyNumbers(a) {
    if (!Array.isArray(a)) {
      a = _objectToArray(a);
    }
    return a.every(_isNumber);
  }
  function _parametricLine(a) {
    if (a.constructor !== Array) {
      a = _objectToArray(a);
    }
    return _isNumber(a[0]) && _isNumber(a[1]) && _isNumber(a[2]) && _isNumber(a[3]) && _isNumber(a[4]) && _isNumber(a[5]);
  }
  function _objectToArray(o) {
    var keys = Object.keys(o);
    var a = [];
    for (var i2 = 0; i2 < keys.length; i2++) {
      a.push(o[keys[i2]]);
    }
    return a;
  }
  function _pairwise(a) {
    if (a[0].length === 2 && _isNumber(a[0][0]) && _isNumber(a[0][1])) {
      if (a.some((aI) => aI.length !== 2 || !_isNumber(aI[0]) || !_isNumber(aI[1]))) {
        return false;
      }
    } else if (a[0].length === 3 && _isNumber(a[0][0]) && _isNumber(a[0][1]) && _isNumber(a[0][2])) {
      if (a.some((aI) => aI.length !== 3 || !_isNumber(aI[0]) || !_isNumber(aI[1]) || !_isNumber(aI[2]))) {
        return false;
      }
    } else {
      return false;
    }
    return true;
  }
  function _distancePointLine2D(x, y, a, b2, c) {
    var num = abs3(addScalar2(addScalar2(multiplyScalar2(a, x), multiplyScalar2(b2, y)), c));
    var den = sqrt3(addScalar2(multiplyScalar2(a, a), multiplyScalar2(b2, b2)));
    return divideScalar2(num, den);
  }
  function _distancePointLine3D(x, y, z, x0, y0, z0, a, b2, c) {
    var num = [subtractScalar2(multiplyScalar2(subtractScalar2(y0, y), c), multiplyScalar2(subtractScalar2(z0, z), b2)), subtractScalar2(multiplyScalar2(subtractScalar2(z0, z), a), multiplyScalar2(subtractScalar2(x0, x), c)), subtractScalar2(multiplyScalar2(subtractScalar2(x0, x), b2), multiplyScalar2(subtractScalar2(y0, y), a))];
    num = sqrt3(addScalar2(addScalar2(multiplyScalar2(num[0], num[0]), multiplyScalar2(num[1], num[1])), multiplyScalar2(num[2], num[2])));
    var den = sqrt3(addScalar2(addScalar2(multiplyScalar2(a, a), multiplyScalar2(b2, b2)), multiplyScalar2(c, c)));
    return divideScalar2(num, den);
  }
  function _euclideanDistance(x, y) {
    var vectorSize = x.length;
    var result = 0;
    var diff2 = 0;
    for (var i2 = 0; i2 < vectorSize; i2++) {
      diff2 = subtractScalar2(x[i2], y[i2]);
      result = addScalar2(multiplyScalar2(diff2, diff2), result);
    }
    return sqrt3(result);
  }
  function _distancePairwise(a) {
    var result = [];
    var pointA = [];
    var pointB = [];
    for (var i2 = 0; i2 < a.length - 1; i2++) {
      for (var j = i2 + 1; j < a.length; j++) {
        if (a[0].length === 2) {
          pointA = [a[i2][0], a[i2][1]];
          pointB = [a[j][0], a[j][1]];
        } else if (a[0].length === 3) {
          pointA = [a[i2][0], a[i2][1], a[i2][2]];
          pointB = [a[j][0], a[j][1], a[j][2]];
        }
        result.push(_euclideanDistance(pointA, pointB));
      }
    }
    return result;
  }
});

// node_modules/mathjs/lib/esm/function/geometry/intersect.js
var name252 = "intersect";
var dependencies252 = ["typed", "config", "abs", "add", "addScalar", "matrix", "multiply", "multiplyScalar", "divideScalar", "subtract", "smaller", "equalScalar", "flatten", "isZero", "isNumeric"];
var createIntersect = factory(name252, dependencies252, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    abs: abs3,
    add: add4,
    addScalar: addScalar2,
    matrix: matrix2,
    multiply: multiply2,
    multiplyScalar: multiplyScalar2,
    divideScalar: divideScalar2,
    subtract: subtract2,
    smaller: smaller2,
    equalScalar: equalScalar2,
    flatten: flatten3,
    isZero: isZero2,
    isNumeric: isNumeric2
  } = _ref;
  return typed2("intersect", {
    "Array, Array, Array": _AAA,
    "Array, Array, Array, Array": _AAAA,
    "Matrix, Matrix, Matrix": function MatrixMatrixMatrix(x, y, plane) {
      var arr = _AAA(x.valueOf(), y.valueOf(), plane.valueOf());
      return arr === null ? null : matrix2(arr);
    },
    "Matrix, Matrix, Matrix, Matrix": function MatrixMatrixMatrixMatrix(w, x, y, z) {
      var arr = _AAAA(w.valueOf(), x.valueOf(), y.valueOf(), z.valueOf());
      return arr === null ? null : matrix2(arr);
    }
  });
  function _AAA(x, y, plane) {
    x = _coerceArr(x);
    y = _coerceArr(y);
    plane = _coerceArr(plane);
    if (!_3d(x)) {
      throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");
    }
    if (!_3d(y)) {
      throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");
    }
    if (!_4d(plane)) {
      throw new TypeError("Array with 4 numbers expected as third argument");
    }
    return _intersectLinePlane(x[0], x[1], x[2], y[0], y[1], y[2], plane[0], plane[1], plane[2], plane[3]);
  }
  function _AAAA(w, x, y, z) {
    w = _coerceArr(w);
    x = _coerceArr(x);
    y = _coerceArr(y);
    z = _coerceArr(z);
    if (w.length === 2) {
      if (!_2d(w)) {
        throw new TypeError("Array with 2 numbers or BigNumbers expected for first argument");
      }
      if (!_2d(x)) {
        throw new TypeError("Array with 2 numbers or BigNumbers expected for second argument");
      }
      if (!_2d(y)) {
        throw new TypeError("Array with 2 numbers or BigNumbers expected for third argument");
      }
      if (!_2d(z)) {
        throw new TypeError("Array with 2 numbers or BigNumbers expected for fourth argument");
      }
      return _intersect2d(w, x, y, z);
    } else if (w.length === 3) {
      if (!_3d(w)) {
        throw new TypeError("Array with 3 numbers or BigNumbers expected for first argument");
      }
      if (!_3d(x)) {
        throw new TypeError("Array with 3 numbers or BigNumbers expected for second argument");
      }
      if (!_3d(y)) {
        throw new TypeError("Array with 3 numbers or BigNumbers expected for third argument");
      }
      if (!_3d(z)) {
        throw new TypeError("Array with 3 numbers or BigNumbers expected for fourth argument");
      }
      return _intersect3d(w[0], w[1], w[2], x[0], x[1], x[2], y[0], y[1], y[2], z[0], z[1], z[2]);
    } else {
      throw new TypeError("Arrays with two or thee dimensional points expected");
    }
  }
  function _coerceArr(arr) {
    if (arr.length === 1) return arr[0];
    if (arr.length > 1 && Array.isArray(arr[0])) {
      if (arr.every((el) => Array.isArray(el) && el.length === 1)) return flatten3(arr);
    }
    return arr;
  }
  function _2d(x) {
    return x.length === 2 && isNumeric2(x[0]) && isNumeric2(x[1]);
  }
  function _3d(x) {
    return x.length === 3 && isNumeric2(x[0]) && isNumeric2(x[1]) && isNumeric2(x[2]);
  }
  function _4d(x) {
    return x.length === 4 && isNumeric2(x[0]) && isNumeric2(x[1]) && isNumeric2(x[2]) && isNumeric2(x[3]);
  }
  function _intersect2d(p1a, p1b, p2a, p2b) {
    var o1 = p1a;
    var o2 = p2a;
    var d1 = subtract2(o1, p1b);
    var d2 = subtract2(o2, p2b);
    var det2 = subtract2(multiplyScalar2(d1[0], d2[1]), multiplyScalar2(d2[0], d1[1]));
    if (isZero2(det2)) return null;
    if (smaller2(abs3(det2), config4.epsilon)) {
      return null;
    }
    var d20o11 = multiplyScalar2(d2[0], o1[1]);
    var d21o10 = multiplyScalar2(d2[1], o1[0]);
    var d20o21 = multiplyScalar2(d2[0], o2[1]);
    var d21o20 = multiplyScalar2(d2[1], o2[0]);
    var t = divideScalar2(addScalar2(subtract2(subtract2(d20o11, d21o10), d20o21), d21o20), det2);
    return add4(multiply2(d1, t), o1);
  }
  function _intersect3dHelper(a, b2, c, d2, e3, f, g, h, i2, j, k, l) {
    var add1 = multiplyScalar2(subtract2(a, b2), subtract2(c, d2));
    var add22 = multiplyScalar2(subtract2(e3, f), subtract2(g, h));
    var add32 = multiplyScalar2(subtract2(i2, j), subtract2(k, l));
    return addScalar2(addScalar2(add1, add22), add32);
  }
  function _intersect3d(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4) {
    var d1343 = _intersect3dHelper(x1, x3, x4, x3, y1, y3, y4, y3, z1, z3, z4, z3);
    var d4321 = _intersect3dHelper(x4, x3, x2, x1, y4, y3, y2, y1, z4, z3, z2, z1);
    var d1321 = _intersect3dHelper(x1, x3, x2, x1, y1, y3, y2, y1, z1, z3, z2, z1);
    var d4343 = _intersect3dHelper(x4, x3, x4, x3, y4, y3, y4, y3, z4, z3, z4, z3);
    var d2121 = _intersect3dHelper(x2, x1, x2, x1, y2, y1, y2, y1, z2, z1, z2, z1);
    var numerator = subtract2(multiplyScalar2(d1343, d4321), multiplyScalar2(d1321, d4343));
    var denominator = subtract2(multiplyScalar2(d2121, d4343), multiplyScalar2(d4321, d4321));
    if (isZero2(denominator)) return null;
    var ta = divideScalar2(numerator, denominator);
    var tb = divideScalar2(addScalar2(d1343, multiplyScalar2(ta, d4321)), d4343);
    var pax = addScalar2(x1, multiplyScalar2(ta, subtract2(x2, x1)));
    var pay = addScalar2(y1, multiplyScalar2(ta, subtract2(y2, y1)));
    var paz = addScalar2(z1, multiplyScalar2(ta, subtract2(z2, z1)));
    var pbx = addScalar2(x3, multiplyScalar2(tb, subtract2(x4, x3)));
    var pby = addScalar2(y3, multiplyScalar2(tb, subtract2(y4, y3)));
    var pbz = addScalar2(z3, multiplyScalar2(tb, subtract2(z4, z3)));
    if (equalScalar2(pax, pbx) && equalScalar2(pay, pby) && equalScalar2(paz, pbz)) {
      return [pax, pay, paz];
    } else {
      return null;
    }
  }
  function _intersectLinePlane(x1, y1, z1, x2, y2, z2, x, y, z, c) {
    var x1x = multiplyScalar2(x1, x);
    var x2x = multiplyScalar2(x2, x);
    var y1y = multiplyScalar2(y1, y);
    var y2y = multiplyScalar2(y2, y);
    var z1z = multiplyScalar2(z1, z);
    var z2z = multiplyScalar2(z2, z);
    var numerator = subtract2(subtract2(subtract2(c, x1x), y1y), z1z);
    var denominator = subtract2(subtract2(subtract2(addScalar2(addScalar2(x2x, y2y), z2z), x1x), y1y), z1z);
    var t = divideScalar2(numerator, denominator);
    var px = addScalar2(x1, multiplyScalar2(t, subtract2(x2, x1)));
    var py = addScalar2(y1, multiplyScalar2(t, subtract2(y2, y1)));
    var pz = addScalar2(z1, multiplyScalar2(t, subtract2(z2, z1)));
    return [px, py, pz];
  }
});

// node_modules/mathjs/lib/esm/function/statistics/sum.js
var name253 = "sum";
var dependencies253 = ["typed", "config", "add", "numeric"];
var createSum = factory(name253, dependencies253, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    add: add4,
    numeric: numeric3
  } = _ref;
  return typed2(name253, {
    // sum([a, b, c, d, ...])
    "Array | Matrix": _sum,
    // sum([a, b, c, d, ...], dim)
    "Array | Matrix, number | BigNumber": _nsumDim,
    // sum(a, b, c, d, ...)
    "...": function _(args) {
      if (containsCollections(args)) {
        throw new TypeError("Scalar values expected in function sum");
      }
      return _sum(args);
    }
  });
  function _sum(array) {
    var sum3;
    deepForEach(array, function(value) {
      try {
        sum3 = sum3 === void 0 ? value : add4(sum3, value);
      } catch (err) {
        throw improveErrorMessage(err, "sum", value);
      }
    });
    if (sum3 === void 0) {
      sum3 = numeric3(0, config4.number);
    }
    if (typeof sum3 === "string") {
      sum3 = numeric3(sum3, config4.number);
    }
    return sum3;
  }
  function _nsumDim(array, dim) {
    try {
      var sum3 = reduce(array, dim, add4);
      return sum3;
    } catch (err) {
      throw improveErrorMessage(err, "sum");
    }
  }
});

// node_modules/mathjs/lib/esm/function/statistics/cumsum.js
var name254 = "cumsum";
var dependencies254 = ["typed", "add", "unaryPlus"];
var createCumSum = factory(name254, dependencies254, (_ref) => {
  var {
    typed: typed2,
    add: add4,
    unaryPlus: unaryPlus2
  } = _ref;
  return typed2(name254, {
    // sum([a, b, c, d, ...])
    Array: _cumsum,
    Matrix: function Matrix2(matrix2) {
      return matrix2.create(_cumsum(matrix2.valueOf()));
    },
    // sum([a, b, c, d, ...], dim)
    "Array, number | BigNumber": _ncumSumDim,
    "Matrix, number | BigNumber": function MatrixNumberBigNumber(matrix2, dim) {
      return matrix2.create(_ncumSumDim(matrix2.valueOf(), dim));
    },
    // cumsum(a, b, c, d, ...)
    "...": function _(args) {
      if (containsCollections(args)) {
        throw new TypeError("All values expected to be scalar in function cumsum");
      }
      return _cumsum(args);
    }
  });
  function _cumsum(array) {
    try {
      return _cumsummap(array);
    } catch (err) {
      throw improveErrorMessage(err, name254);
    }
  }
  function _cumsummap(array) {
    if (array.length === 0) {
      return [];
    }
    var sums = [unaryPlus2(array[0])];
    for (var i2 = 1; i2 < array.length; ++i2) {
      sums.push(add4(sums[i2 - 1], array[i2]));
    }
    return sums;
  }
  function _ncumSumDim(array, dim) {
    var size2 = arraySize(array);
    if (dim < 0 || dim >= size2.length) {
      throw new IndexError(dim, size2.length);
    }
    try {
      return _cumsumDimensional(array, dim);
    } catch (err) {
      throw improveErrorMessage(err, name254);
    }
  }
  function _cumsumDimensional(mat, dim) {
    var i2, ret, tran;
    if (dim <= 0) {
      var initialValue = mat[0][0];
      if (!Array.isArray(initialValue)) {
        return _cumsummap(mat);
      } else {
        tran = _switch(mat);
        ret = [];
        for (i2 = 0; i2 < tran.length; i2++) {
          ret[i2] = _cumsumDimensional(tran[i2], dim - 1);
        }
        return ret;
      }
    } else {
      ret = [];
      for (i2 = 0; i2 < mat.length; i2++) {
        ret[i2] = _cumsumDimensional(mat[i2], dim - 1);
      }
      return ret;
    }
  }
});

// node_modules/mathjs/lib/esm/function/statistics/mean.js
var name255 = "mean";
var dependencies255 = ["typed", "add", "divide"];
var createMean = factory(name255, dependencies255, (_ref) => {
  var {
    typed: typed2,
    add: add4,
    divide: divide3
  } = _ref;
  return typed2(name255, {
    // mean([a, b, c, d, ...])
    "Array | Matrix": _mean,
    // mean([a, b, c, d, ...], dim)
    "Array | Matrix, number | BigNumber": _nmeanDim,
    // mean(a, b, c, d, ...)
    "...": function _(args) {
      if (containsCollections(args)) {
        throw new TypeError("Scalar values expected in function mean");
      }
      return _mean(args);
    }
  });
  function _nmeanDim(array, dim) {
    try {
      var sum3 = reduce(array, dim, add4);
      var s = Array.isArray(array) ? arraySize(array) : array.size();
      return divide3(sum3, s[dim]);
    } catch (err) {
      throw improveErrorMessage(err, "mean");
    }
  }
  function _mean(array) {
    var sum3;
    var num = 0;
    deepForEach(array, function(value) {
      try {
        sum3 = sum3 === void 0 ? value : add4(sum3, value);
        num++;
      } catch (err) {
        throw improveErrorMessage(err, "mean", value);
      }
    });
    if (num === 0) {
      throw new Error("Cannot calculate the mean of an empty array");
    }
    return divide3(sum3, num);
  }
});

// node_modules/mathjs/lib/esm/function/statistics/median.js
var name256 = "median";
var dependencies256 = ["typed", "add", "divide", "compare", "partitionSelect"];
var createMedian = factory(name256, dependencies256, (_ref) => {
  var {
    typed: typed2,
    add: add4,
    divide: divide3,
    compare: compare2,
    partitionSelect: partitionSelect2
  } = _ref;
  function _median(array) {
    try {
      array = flatten(array.valueOf());
      var num = array.length;
      if (num === 0) {
        throw new Error("Cannot calculate median of an empty array");
      }
      if (num % 2 === 0) {
        var mid = num / 2 - 1;
        var right = partitionSelect2(array, mid + 1);
        var left = array[mid];
        for (var i2 = 0; i2 < mid; ++i2) {
          if (compare2(array[i2], left) > 0) {
            left = array[i2];
          }
        }
        return middle2(left, right);
      } else {
        var m = partitionSelect2(array, (num - 1) / 2);
        return middle(m);
      }
    } catch (err) {
      throw improveErrorMessage(err, "median");
    }
  }
  var middle = typed2({
    "number | BigNumber | Complex | Unit": function numberBigNumberComplexUnit(value) {
      return value;
    }
  });
  var middle2 = typed2({
    "number | BigNumber | Complex | Unit, number | BigNumber | Complex | Unit": function numberBigNumberComplexUnitNumberBigNumberComplexUnit(left, right) {
      return divide3(add4(left, right), 2);
    }
  });
  return typed2(name256, {
    // median([a, b, c, d, ...])
    "Array | Matrix": _median,
    // median([a, b, c, d, ...], dim)
    "Array | Matrix, number | BigNumber": function ArrayMatrixNumberBigNumber(array, dim) {
      throw new Error("median(A, dim) is not yet supported");
    },
    // median(a, b, c, d, ...)
    "...": function _(args) {
      if (containsCollections(args)) {
        throw new TypeError("Scalar values expected in function median");
      }
      return _median(args);
    }
  });
});

// node_modules/mathjs/lib/esm/function/statistics/mad.js
var name257 = "mad";
var dependencies257 = ["typed", "abs", "map", "median", "subtract"];
var createMad = factory(name257, dependencies257, (_ref) => {
  var {
    typed: typed2,
    abs: abs3,
    map: map3,
    median: median2,
    subtract: subtract2
  } = _ref;
  return typed2(name257, {
    // mad([a, b, c, d, ...])
    "Array | Matrix": _mad,
    // mad(a, b, c, d, ...)
    "...": function _(args) {
      return _mad(args);
    }
  });
  function _mad(array) {
    array = flatten(array.valueOf());
    if (array.length === 0) {
      throw new Error("Cannot calculate median absolute deviation (mad) of an empty array");
    }
    try {
      var med = median2(array);
      return median2(map3(array, function(value) {
        return abs3(subtract2(value, med));
      }));
    } catch (err) {
      if (err instanceof TypeError && err.message.includes("median")) {
        throw new TypeError(err.message.replace("median", "mad"));
      } else {
        throw improveErrorMessage(err, "mad");
      }
    }
  }
});

// node_modules/mathjs/lib/esm/function/statistics/variance.js
var DEFAULT_NORMALIZATION = "unbiased";
var name258 = "variance";
var dependencies258 = ["typed", "add", "subtract", "multiply", "divide", "apply", "isNaN"];
var createVariance = factory(name258, dependencies258, (_ref) => {
  var {
    typed: typed2,
    add: add4,
    subtract: subtract2,
    multiply: multiply2,
    divide: divide3,
    apply: apply2,
    isNaN: isNaN3
  } = _ref;
  return typed2(name258, {
    // variance([a, b, c, d, ...])
    "Array | Matrix": function ArrayMatrix(array) {
      return _var(array, DEFAULT_NORMALIZATION);
    },
    // variance([a, b, c, d, ...], normalization)
    "Array | Matrix, string": _var,
    // variance([a, b, c, c, ...], dim)
    "Array | Matrix, number | BigNumber": function ArrayMatrixNumberBigNumber(array, dim) {
      return _varDim(array, dim, DEFAULT_NORMALIZATION);
    },
    // variance([a, b, c, c, ...], dim, normalization)
    "Array | Matrix, number | BigNumber, string": _varDim,
    // variance(a, b, c, d, ...)
    "...": function _(args) {
      return _var(args, DEFAULT_NORMALIZATION);
    }
  });
  function _var(array, normalization) {
    var sum3;
    var num = 0;
    if (array.length === 0) {
      throw new SyntaxError("Function variance requires one or more parameters (0 provided)");
    }
    deepForEach(array, function(value) {
      try {
        sum3 = sum3 === void 0 ? value : add4(sum3, value);
        num++;
      } catch (err) {
        throw improveErrorMessage(err, "variance", value);
      }
    });
    if (num === 0) throw new Error("Cannot calculate variance of an empty array");
    var mean2 = divide3(sum3, num);
    sum3 = void 0;
    deepForEach(array, function(value) {
      var diff2 = subtract2(value, mean2);
      sum3 = sum3 === void 0 ? multiply2(diff2, diff2) : add4(sum3, multiply2(diff2, diff2));
    });
    if (isNaN3(sum3)) {
      return sum3;
    }
    switch (normalization) {
      case "uncorrected":
        return divide3(sum3, num);
      case "biased":
        return divide3(sum3, num + 1);
      case "unbiased": {
        var zero = isBigNumber(sum3) ? sum3.mul(0) : 0;
        return num === 1 ? zero : divide3(sum3, num - 1);
      }
      default:
        throw new Error('Unknown normalization "' + normalization + '". Choose "unbiased" (default), "uncorrected", or "biased".');
    }
  }
  function _varDim(array, dim, normalization) {
    try {
      if (array.length === 0) {
        throw new SyntaxError("Function variance requires one or more parameters (0 provided)");
      }
      return apply2(array, dim, (x) => _var(x, normalization));
    } catch (err) {
      throw improveErrorMessage(err, "variance");
    }
  }
});

// node_modules/mathjs/lib/esm/function/statistics/quantileSeq.js
var name259 = "quantileSeq";
var dependencies259 = ["typed", "?bignumber", "add", "subtract", "divide", "multiply", "partitionSelect", "compare", "isInteger", "smaller", "smallerEq", "larger"];
var createQuantileSeq = factory(name259, dependencies259, (_ref) => {
  var {
    typed: typed2,
    bignumber: bignumber2,
    add: add4,
    subtract: subtract2,
    divide: divide3,
    multiply: multiply2,
    partitionSelect: partitionSelect2,
    compare: compare2,
    isInteger: isInteger3,
    smaller: smaller2,
    smallerEq: smallerEq2,
    larger: larger2
  } = _ref;
  var apply2 = createApply({
    typed: typed2,
    isInteger: isInteger3
  });
  return typed2(name259, {
    "Array | Matrix, number | BigNumber": (data, p) => _quantileSeqProbNumber(data, p, false),
    "Array | Matrix, number | BigNumber, number": (data, prob, dim) => _quantileSeqDim(data, prob, false, dim, _quantileSeqProbNumber),
    "Array | Matrix, number | BigNumber, boolean": _quantileSeqProbNumber,
    "Array | Matrix, number | BigNumber, boolean, number": (data, prob, sorted, dim) => _quantileSeqDim(data, prob, sorted, dim, _quantileSeqProbNumber),
    "Array | Matrix, Array | Matrix": (data, p) => _quantileSeqProbCollection(data, p, false),
    "Array | Matrix, Array | Matrix, number": (data, prob, dim) => _quantileSeqDim(data, prob, false, dim, _quantileSeqProbCollection),
    "Array | Matrix, Array | Matrix, boolean": _quantileSeqProbCollection,
    "Array | Matrix, Array | Matrix, boolean, number": (data, prob, sorted, dim) => _quantileSeqDim(data, prob, sorted, dim, _quantileSeqProbCollection)
  });
  function _quantileSeqDim(data, prob, sorted, dim, fn) {
    return apply2(data, dim, (x) => fn(x, prob, sorted));
  }
  function _quantileSeqProbNumber(data, probOrN, sorted) {
    var probArr;
    var dataArr = data.valueOf();
    if (smaller2(probOrN, 0)) {
      throw new Error("N/prob must be non-negative");
    }
    if (smallerEq2(probOrN, 1)) {
      return isNumber(probOrN) ? _quantileSeq(dataArr, probOrN, sorted) : bignumber2(_quantileSeq(dataArr, probOrN, sorted));
    }
    if (larger2(probOrN, 1)) {
      if (!isInteger3(probOrN)) {
        throw new Error("N must be a positive integer");
      }
      if (larger2(probOrN, 4294967295)) {
        throw new Error("N must be less than or equal to 2^32-1, as that is the maximum length of an Array");
      }
      var nPlusOne = add4(probOrN, 1);
      probArr = [];
      for (var i2 = 0; smaller2(i2, probOrN); i2++) {
        var prob = divide3(i2 + 1, nPlusOne);
        probArr.push(_quantileSeq(dataArr, prob, sorted));
      }
      return isNumber(probOrN) ? probArr : bignumber2(probArr);
    }
  }
  function _quantileSeqProbCollection(data, probOrN, sorted) {
    var dataArr = data.valueOf();
    var probOrNArr = probOrN.valueOf();
    var probArr = [];
    for (var i2 = 0; i2 < probOrNArr.length; ++i2) {
      probArr.push(_quantileSeq(dataArr, probOrNArr[i2], sorted));
    }
    return probArr;
  }
  function _quantileSeq(array, prob, sorted) {
    var flat = flatten(array);
    var len = flat.length;
    if (len === 0) {
      throw new Error("Cannot calculate quantile of an empty sequence");
    }
    var index2 = isNumber(prob) ? prob * (len - 1) : prob.times(len - 1);
    var integerPart = isNumber(prob) ? Math.floor(index2) : index2.floor().toNumber();
    var fracPart = isNumber(prob) ? index2 % 1 : index2.minus(integerPart);
    if (isInteger3(index2)) {
      return sorted ? flat[index2] : partitionSelect2(flat, isNumber(prob) ? index2 : index2.valueOf());
    }
    var left;
    var right;
    if (sorted) {
      left = flat[integerPart];
      right = flat[integerPart + 1];
    } else {
      right = partitionSelect2(flat, integerPart + 1);
      left = flat[integerPart];
      for (var i2 = 0; i2 < integerPart; ++i2) {
        if (compare2(flat[i2], left) > 0) {
          left = flat[i2];
        }
      }
    }
    return add4(multiply2(left, subtract2(1, fracPart)), multiply2(right, fracPart));
  }
});

// node_modules/mathjs/lib/esm/function/statistics/std.js
var name260 = "std";
var dependencies260 = ["typed", "map", "sqrt", "variance"];
var createStd = factory(name260, dependencies260, (_ref) => {
  var {
    typed: typed2,
    map: map3,
    sqrt: sqrt3,
    variance: variance2
  } = _ref;
  return typed2(name260, {
    // std([a, b, c, d, ...])
    "Array | Matrix": _std,
    // std([a, b, c, d, ...], normalization)
    "Array | Matrix, string": _std,
    // std([a, b, c, c, ...], dim)
    "Array | Matrix, number | BigNumber": _std,
    // std([a, b, c, c, ...], dim, normalization)
    "Array | Matrix, number | BigNumber, string": _std,
    // std(a, b, c, d, ...)
    "...": function _(args) {
      return _std(args);
    }
  });
  function _std(array, normalization) {
    if (array.length === 0) {
      throw new SyntaxError("Function std requires one or more parameters (0 provided)");
    }
    try {
      var v = variance2.apply(null, arguments);
      if (isCollection(v)) {
        return map3(v, sqrt3);
      } else {
        return sqrt3(v);
      }
    } catch (err) {
      if (err instanceof TypeError && err.message.includes(" variance")) {
        throw new TypeError(err.message.replace(" variance", " std"));
      } else {
        throw err;
      }
    }
  }
});

// node_modules/mathjs/lib/esm/function/statistics/corr.js
var name261 = "corr";
var dependencies261 = ["typed", "matrix", "mean", "sqrt", "sum", "add", "subtract", "multiply", "pow", "divide"];
var createCorr = factory(name261, dependencies261, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    sqrt: sqrt3,
    sum: sum3,
    add: add4,
    subtract: subtract2,
    multiply: multiply2,
    pow: pow3,
    divide: divide3
  } = _ref;
  return typed2(name261, {
    "Array, Array": function ArrayArray(A, B) {
      return _corr(A, B);
    },
    "Matrix, Matrix": function MatrixMatrix(A, B) {
      var res = _corr(A.toArray(), B.toArray());
      return Array.isArray(res) ? matrix2(res) : res;
    }
  });
  function _corr(A, B) {
    var correlations = [];
    if (Array.isArray(A[0]) && Array.isArray(B[0])) {
      if (A.length !== B.length) {
        throw new SyntaxError("Dimension mismatch. Array A and B must have the same length.");
      }
      for (var i2 = 0; i2 < A.length; i2++) {
        if (A[i2].length !== B[i2].length) {
          throw new SyntaxError("Dimension mismatch. Array A and B must have the same number of elements.");
        }
        correlations.push(correlation(A[i2], B[i2]));
      }
      return correlations;
    } else {
      if (A.length !== B.length) {
        throw new SyntaxError("Dimension mismatch. Array A and B must have the same number of elements.");
      }
      return correlation(A, B);
    }
  }
  function correlation(A, B) {
    var n = A.length;
    var sumX = sum3(A);
    var sumY = sum3(B);
    var sumXY = A.reduce((acc, x, index2) => add4(acc, multiply2(x, B[index2])), 0);
    var sumXSquare = sum3(A.map((x) => pow3(x, 2)));
    var sumYSquare = sum3(B.map((y) => pow3(y, 2)));
    var numerator = subtract2(multiply2(n, sumXY), multiply2(sumX, sumY));
    var denominator = sqrt3(multiply2(subtract2(multiply2(n, sumXSquare), pow3(sumX, 2)), subtract2(multiply2(n, sumYSquare), pow3(sumY, 2))));
    return divide3(numerator, denominator);
  }
});

// node_modules/mathjs/lib/esm/function/probability/combinations.js
var name262 = "combinations";
var dependencies262 = ["typed"];
var createCombinations = factory(name262, dependencies262, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name262, {
    "number, number": combinationsNumber,
    "BigNumber, BigNumber": function BigNumberBigNumber(n, k) {
      var BigNumber2 = n.constructor;
      var result, i2;
      var nMinusk = n.minus(k);
      var one = new BigNumber2(1);
      if (!isPositiveInteger(n) || !isPositiveInteger(k)) {
        throw new TypeError("Positive integer value expected in function combinations");
      }
      if (k.gt(n)) {
        throw new TypeError("k must be less than n in function combinations");
      }
      result = one;
      if (k.lt(nMinusk)) {
        for (i2 = one; i2.lte(nMinusk); i2 = i2.plus(one)) {
          result = result.times(k.plus(i2)).dividedBy(i2);
        }
      } else {
        for (i2 = one; i2.lte(k); i2 = i2.plus(one)) {
          result = result.times(nMinusk.plus(i2)).dividedBy(i2);
        }
      }
      return result;
    }
    // TODO: implement support for collection in combinations
  });
});
function isPositiveInteger(n) {
  return n.isInteger() && n.gte(0);
}

// node_modules/mathjs/lib/esm/function/probability/combinationsWithRep.js
var name263 = "combinationsWithRep";
var dependencies263 = ["typed"];
var createCombinationsWithRep = factory(name263, dependencies263, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  return typed2(name263, {
    "number, number": function numberNumber(n, k) {
      if (!isInteger(n) || n < 0) {
        throw new TypeError("Positive integer value expected in function combinationsWithRep");
      }
      if (!isInteger(k) || k < 0) {
        throw new TypeError("Positive integer value expected in function combinationsWithRep");
      }
      if (n < 1) {
        throw new TypeError("k must be less than or equal to n + k - 1");
      }
      if (k < n - 1) {
        var _prodrange = product2(n, n + k - 1);
        return _prodrange / product2(1, k);
      }
      var prodrange = product2(k + 1, n + k - 1);
      return prodrange / product2(1, n - 1);
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(n, k) {
      var BigNumber2 = n.constructor;
      var result, i2;
      var one = new BigNumber2(1);
      var nMinusOne = n.minus(one);
      if (!isPositiveInteger2(n) || !isPositiveInteger2(k)) {
        throw new TypeError("Positive integer value expected in function combinationsWithRep");
      }
      if (n.lt(one)) {
        throw new TypeError("k must be less than or equal to n + k - 1 in function combinationsWithRep");
      }
      result = one;
      if (k.lt(nMinusOne)) {
        for (i2 = one; i2.lte(nMinusOne); i2 = i2.plus(one)) {
          result = result.times(k.plus(i2)).dividedBy(i2);
        }
      } else {
        for (i2 = one; i2.lte(k); i2 = i2.plus(one)) {
          result = result.times(nMinusOne.plus(i2)).dividedBy(i2);
        }
      }
      return result;
    }
  });
});
function isPositiveInteger2(n) {
  return n.isInteger() && n.gte(0);
}

// node_modules/mathjs/lib/esm/function/probability/gamma.js
var name264 = "gamma";
var dependencies264 = ["typed", "config", "multiplyScalar", "pow", "BigNumber", "Complex"];
var createGamma = factory(name264, dependencies264, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    multiplyScalar: multiplyScalar2,
    pow: pow3,
    BigNumber: _BigNumber,
    Complex: Complex3
  } = _ref;
  function gammaComplex(n) {
    if (n.im === 0) {
      return gammaNumber(n.re);
    }
    if (n.re < 0.5) {
      var _t = new Complex3(1 - n.re, -n.im);
      var r = new Complex3(Math.PI * n.re, Math.PI * n.im);
      return new Complex3(Math.PI).div(r.sin()).div(gammaComplex(_t));
    }
    n = new Complex3(n.re - 1, n.im);
    var x = new Complex3(gammaP[0], 0);
    for (var i2 = 1; i2 < gammaP.length; ++i2) {
      var gammaPval = new Complex3(gammaP[i2], 0);
      x = x.add(gammaPval.div(n.add(i2)));
    }
    var t = new Complex3(n.re + gammaG + 0.5, n.im);
    var twoPiSqrt = Math.sqrt(2 * Math.PI);
    var tpow = t.pow(n.add(0.5));
    var expt = t.neg().exp();
    return x.mul(twoPiSqrt).mul(tpow).mul(expt);
  }
  return typed2(name264, {
    number: gammaNumber,
    Complex: gammaComplex,
    BigNumber: function BigNumber2(n) {
      if (n.isInteger()) {
        return n.isNegative() || n.isZero() ? new _BigNumber(Infinity) : bigFactorial(n.minus(1));
      }
      if (!n.isFinite()) {
        return new _BigNumber(n.isNegative() ? NaN : Infinity);
      }
      throw new Error("Integer BigNumber expected");
    }
  });
  function bigFactorial(n) {
    if (n < 8) {
      return new _BigNumber([1, 1, 2, 6, 24, 120, 720, 5040][n]);
    }
    var precision = config4.precision + (Math.log(n.toNumber()) | 0);
    var Big = _BigNumber.clone({
      precision
    });
    if (n % 2 === 1) {
      return n.times(bigFactorial(new _BigNumber(n - 1)));
    }
    var p = n;
    var prod2 = new Big(n);
    var sum3 = n.toNumber();
    while (p > 2) {
      p -= 2;
      sum3 += p;
      prod2 = prod2.times(sum3);
    }
    return new _BigNumber(prod2.toPrecision(_BigNumber.precision));
  }
});

// node_modules/mathjs/lib/esm/function/probability/lgamma.js
var name265 = "lgamma";
var dependencies265 = ["Complex", "typed"];
var createLgamma = factory(name265, dependencies265, (_ref) => {
  var {
    Complex: Complex3,
    typed: typed2
  } = _ref;
  var SMALL_RE = 7;
  var SMALL_IM = 7;
  var coeffs = [-0.029550653594771242, 0.00641025641025641, -0.0019175269175269176, 8417508417508417e-19, -5952380952380953e-19, 7936507936507937e-19, -0.002777777777777778, 0.08333333333333333];
  return typed2(name265, {
    number: lgammaNumber,
    Complex: lgammaComplex,
    BigNumber: function BigNumber2() {
      throw new Error("mathjs doesn't yet provide an implementation of the algorithm lgamma for BigNumber");
    }
  });
  function lgammaComplex(n) {
    var TWOPI = 6.283185307179586;
    var LOGPI = 1.1447298858494002;
    var REFLECTION = 0.1;
    if (n.isNaN()) {
      return new Complex3(NaN, NaN);
    } else if (n.im === 0) {
      return new Complex3(lgammaNumber(n.re), 0);
    } else if (n.re >= SMALL_RE || Math.abs(n.im) >= SMALL_IM) {
      return lgammaStirling(n);
    } else if (n.re <= REFLECTION) {
      var tmp = copysign(TWOPI, n.im) * Math.floor(0.5 * n.re + 0.25);
      var a = n.mul(Math.PI).sin().log();
      var b2 = lgammaComplex(new Complex3(1 - n.re, -n.im));
      return new Complex3(LOGPI, tmp).sub(a).sub(b2);
    } else if (n.im >= 0) {
      return lgammaRecurrence(n);
    } else {
      return lgammaRecurrence(n.conjugate()).conjugate();
    }
  }
  function lgammaStirling(z) {
    var leftPart = z.sub(0.5).mul(z.log()).sub(z).add(lnSqrt2PI);
    var rz = new Complex3(1, 0).div(z);
    var rzz = rz.div(z);
    var a = coeffs[0];
    var b2 = coeffs[1];
    var r = 2 * rzz.re;
    var s = rzz.re * rzz.re + rzz.im * rzz.im;
    for (var i2 = 2; i2 < 8; i2++) {
      var tmp = b2;
      b2 = -s * a + coeffs[i2];
      a = r * a + tmp;
    }
    var rightPart = rz.mul(rzz.mul(a).add(b2));
    return leftPart.add(rightPart);
  }
  function lgammaRecurrence(z) {
    var signflips = 0;
    var sb = 0;
    var shiftprod = z;
    z = z.add(1);
    while (z.re <= SMALL_RE) {
      shiftprod = shiftprod.mul(z);
      var nsb = shiftprod.im < 0 ? 1 : 0;
      if (nsb !== 0 && sb === 0) signflips++;
      sb = nsb;
      z = z.add(1);
    }
    return lgammaStirling(z).sub(shiftprod.log()).sub(new Complex3(0, signflips * 2 * Math.PI * 1));
  }
});

// node_modules/mathjs/lib/esm/function/probability/factorial.js
var name266 = "factorial";
var dependencies266 = ["typed", "gamma"];
var createFactorial = factory(name266, dependencies266, (_ref) => {
  var {
    typed: typed2,
    gamma: gamma2
  } = _ref;
  return typed2(name266, {
    number: function number2(n) {
      if (n < 0) {
        throw new Error("Value must be non-negative");
      }
      return gamma2(n + 1);
    },
    BigNumber: function BigNumber2(n) {
      if (n.isNegative()) {
        throw new Error("Value must be non-negative");
      }
      return gamma2(n.plus(1));
    },
    "Array | Matrix": typed2.referToSelf((self2) => (n) => deepMap(n, self2))
  });
});

// node_modules/mathjs/lib/esm/function/probability/kldivergence.js
var name267 = "kldivergence";
var dependencies267 = ["typed", "matrix", "divide", "sum", "multiply", "map", "dotDivide", "log", "isNumeric"];
var createKldivergence = factory(name267, dependencies267, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    divide: divide3,
    sum: sum3,
    multiply: multiply2,
    map: map3,
    dotDivide: dotDivide2,
    log: log4,
    isNumeric: isNumeric2
  } = _ref;
  return typed2(name267, {
    "Array, Array": function ArrayArray(q, p) {
      return _kldiv(matrix2(q), matrix2(p));
    },
    "Matrix, Array": function MatrixArray(q, p) {
      return _kldiv(q, matrix2(p));
    },
    "Array, Matrix": function ArrayMatrix(q, p) {
      return _kldiv(matrix2(q), p);
    },
    "Matrix, Matrix": function MatrixMatrix(q, p) {
      return _kldiv(q, p);
    }
  });
  function _kldiv(q, p) {
    var plength = p.size().length;
    var qlength = q.size().length;
    if (plength > 1) {
      throw new Error("first object must be one dimensional");
    }
    if (qlength > 1) {
      throw new Error("second object must be one dimensional");
    }
    if (plength !== qlength) {
      throw new Error("Length of two vectors must be equal");
    }
    var sumq = sum3(q);
    if (sumq === 0) {
      throw new Error("Sum of elements in first object must be non zero");
    }
    var sump = sum3(p);
    if (sump === 0) {
      throw new Error("Sum of elements in second object must be non zero");
    }
    var qnorm = divide3(q, sum3(q));
    var pnorm = divide3(p, sum3(p));
    var result = sum3(multiply2(qnorm, map3(dotDivide2(qnorm, pnorm), (x) => log4(x))));
    if (isNumeric2(result)) {
      return result;
    } else {
      return Number.NaN;
    }
  }
});

// node_modules/mathjs/lib/esm/function/probability/multinomial.js
var name268 = "multinomial";
var dependencies268 = ["typed", "add", "divide", "multiply", "factorial", "isInteger", "isPositive"];
var createMultinomial = factory(name268, dependencies268, (_ref) => {
  var {
    typed: typed2,
    add: add4,
    divide: divide3,
    multiply: multiply2,
    factorial: factorial2,
    isInteger: isInteger3,
    isPositive: isPositive2
  } = _ref;
  return typed2(name268, {
    "Array | Matrix": function ArrayMatrix(a) {
      var sum3 = 0;
      var denom = 1;
      deepForEach(a, function(ai) {
        if (!isInteger3(ai) || !isPositive2(ai)) {
          throw new TypeError("Positive integer value expected in function multinomial");
        }
        sum3 = add4(sum3, ai);
        denom = multiply2(denom, factorial2(ai));
      });
      return divide3(factorial2(sum3), denom);
    }
  });
});

// node_modules/mathjs/lib/esm/function/probability/permutations.js
var name269 = "permutations";
var dependencies269 = ["typed", "factorial"];
var createPermutations = factory(name269, dependencies269, (_ref) => {
  var {
    typed: typed2,
    factorial: factorial2
  } = _ref;
  return typed2(name269, {
    "number | BigNumber": factorial2,
    "number, number": function numberNumber(n, k) {
      if (!isInteger(n) || n < 0) {
        throw new TypeError("Positive integer value expected in function permutations");
      }
      if (!isInteger(k) || k < 0) {
        throw new TypeError("Positive integer value expected in function permutations");
      }
      if (k > n) {
        throw new TypeError("second argument k must be less than or equal to first argument n");
      }
      return product2(n - k + 1, n);
    },
    "BigNumber, BigNumber": function BigNumberBigNumber(n, k) {
      var result, i2;
      if (!isPositiveInteger3(n) || !isPositiveInteger3(k)) {
        throw new TypeError("Positive integer value expected in function permutations");
      }
      if (k.gt(n)) {
        throw new TypeError("second argument k must be less than or equal to first argument n");
      }
      var one = n.mul(0).add(1);
      result = one;
      for (i2 = n.minus(k).plus(1); i2.lte(n); i2 = i2.plus(1)) {
        result = result.times(i2);
      }
      return result;
    }
    // TODO: implement support for collection in permutations
  });
});
function isPositiveInteger3(n) {
  return n.isInteger() && n.gte(0);
}

// node_modules/mathjs/lib/esm/function/probability/util/seededRNG.js
var import_seedrandom = __toESM(require_seedrandom2(), 1);
var singletonRandom = (0, import_seedrandom.default)(Date.now());
function createRng(randomSeed) {
  var random3;
  function setSeed(seed) {
    random3 = seed === null ? singletonRandom : (0, import_seedrandom.default)(String(seed));
  }
  setSeed(randomSeed);
  function rng() {
    return random3();
  }
  return rng;
}

// node_modules/mathjs/lib/esm/function/probability/pickRandom.js
var name270 = "pickRandom";
var dependencies270 = ["typed", "config", "?on"];
var createPickRandom = factory(name270, dependencies270, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    on
  } = _ref;
  var rng = createRng(config4.randomSeed);
  if (on) {
    on("config", function(curr, prev) {
      if (curr.randomSeed !== prev.randomSeed) {
        rng = createRng(curr.randomSeed);
      }
    });
  }
  return typed2(name270, {
    "Array | Matrix": function ArrayMatrix(possibles) {
      return _pickRandom(possibles, {});
    },
    "Array | Matrix, Object": function ArrayMatrixObject(possibles, options) {
      return _pickRandom(possibles, options);
    },
    "Array | Matrix, number": function ArrayMatrixNumber(possibles, number2) {
      return _pickRandom(possibles, {
        number: number2
      });
    },
    "Array | Matrix, Array | Matrix": function ArrayMatrixArrayMatrix(possibles, weights) {
      return _pickRandom(possibles, {
        weights
      });
    },
    "Array | Matrix, Array | Matrix, number": function ArrayMatrixArrayMatrixNumber(possibles, weights, number2) {
      return _pickRandom(possibles, {
        number: number2,
        weights
      });
    },
    "Array | Matrix, number, Array | Matrix": function ArrayMatrixNumberArrayMatrix(possibles, number2, weights) {
      return _pickRandom(possibles, {
        number: number2,
        weights
      });
    }
  });
  function _pickRandom(possibles, _ref2) {
    var {
      number: number2,
      weights,
      elementWise = true
    } = _ref2;
    var single = typeof number2 === "undefined";
    if (single) {
      number2 = 1;
    }
    var createMatrix2 = isMatrix(possibles) ? possibles.create : isMatrix(weights) ? weights.create : null;
    possibles = possibles.valueOf();
    if (weights) {
      weights = weights.valueOf();
    }
    if (elementWise === true) {
      possibles = flatten(possibles);
      weights = flatten(weights);
    }
    var totalWeights = 0;
    if (typeof weights !== "undefined") {
      if (weights.length !== possibles.length) {
        throw new Error("Weights must have the same length as possibles");
      }
      for (var i2 = 0, len = weights.length; i2 < len; i2++) {
        if (!isNumber(weights[i2]) || weights[i2] < 0) {
          throw new Error("Weights must be an array of positive numbers");
        }
        totalWeights += weights[i2];
      }
    }
    var length = possibles.length;
    var result = [];
    var pick;
    while (result.length < number2) {
      if (typeof weights === "undefined") {
        pick = possibles[Math.floor(rng() * length)];
      } else {
        var randKey = rng() * totalWeights;
        for (var _i = 0, _len = possibles.length; _i < _len; _i++) {
          randKey -= weights[_i];
          if (randKey < 0) {
            pick = possibles[_i];
            break;
          }
        }
      }
      result.push(pick);
    }
    return single ? result[0] : createMatrix2 ? createMatrix2(result) : result;
  }
});

// node_modules/mathjs/lib/esm/function/probability/util/randomMatrix.js
function randomMatrix(size2, random3) {
  var data = [];
  size2 = size2.slice(0);
  if (size2.length > 1) {
    for (var i2 = 0, length = size2.shift(); i2 < length; i2++) {
      data.push(randomMatrix(size2, random3));
    }
  } else {
    for (var _i = 0, _length = size2.shift(); _i < _length; _i++) {
      data.push(random3());
    }
  }
  return data;
}

// node_modules/mathjs/lib/esm/function/probability/random.js
var name271 = "random";
var dependencies271 = ["typed", "config", "?on"];
var createRandom = factory(name271, dependencies271, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    on
  } = _ref;
  var rng = createRng(config4.randomSeed);
  if (on) {
    on("config", function(curr, prev) {
      if (curr.randomSeed !== prev.randomSeed) {
        rng = createRng(curr.randomSeed);
      }
    });
  }
  return typed2(name271, {
    "": () => _random(0, 1),
    number: (max3) => _random(0, max3),
    "number, number": (min3, max3) => _random(min3, max3),
    "Array | Matrix": (size2) => _randomMatrix(size2, 0, 1),
    "Array | Matrix, number": (size2, max3) => _randomMatrix(size2, 0, max3),
    "Array | Matrix, number, number": (size2, min3, max3) => _randomMatrix(size2, min3, max3)
  });
  function _randomMatrix(size2, min3, max3) {
    var res = randomMatrix(size2.valueOf(), () => _random(min3, max3));
    return isMatrix(size2) ? size2.create(res) : res;
  }
  function _random(min3, max3) {
    return min3 + rng() * (max3 - min3);
  }
});
var createRandomNumber = factory(name271, ["typed", "config", "?on"], (_ref2) => {
  var {
    typed: typed2,
    config: config4,
    on,
    matrix: matrix2
  } = _ref2;
  var rng = createRng(config4.randomSeed);
  if (on) {
    on("config", function(curr, prev) {
      if (curr.randomSeed !== prev.randomSeed) {
        rng = createRng(curr.randomSeed);
      }
    });
  }
  return typed2(name271, {
    "": () => _random(0, 1),
    number: (max3) => _random(0, max3),
    "number, number": (min3, max3) => _random(min3, max3)
  });
  function _random(min3, max3) {
    return min3 + rng() * (max3 - min3);
  }
});

// node_modules/mathjs/lib/esm/function/probability/randomInt.js
var name272 = "randomInt";
var dependencies272 = ["typed", "config", "?on"];
var createRandomInt = factory(name272, dependencies272, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    on
  } = _ref;
  var rng = createRng(config4.randomSeed);
  if (on) {
    on("config", function(curr, prev) {
      if (curr.randomSeed !== prev.randomSeed) {
        rng = createRng(curr.randomSeed);
      }
    });
  }
  return typed2(name272, {
    "": () => _randomInt(0, 1),
    number: (max3) => _randomInt(0, max3),
    "number, number": (min3, max3) => _randomInt(min3, max3),
    "Array | Matrix": (size2) => _randomIntMatrix(size2, 0, 1),
    "Array | Matrix, number": (size2, max3) => _randomIntMatrix(size2, 0, max3),
    "Array | Matrix, number, number": (size2, min3, max3) => _randomIntMatrix(size2, min3, max3)
  });
  function _randomIntMatrix(size2, min3, max3) {
    var res = randomMatrix(size2.valueOf(), () => _randomInt(min3, max3));
    return isMatrix(size2) ? size2.create(res) : res;
  }
  function _randomInt(min3, max3) {
    return Math.floor(min3 + rng() * (max3 - min3));
  }
});

// node_modules/mathjs/lib/esm/function/combinatorics/stirlingS2.js
var name273 = "stirlingS2";
var dependencies273 = ["typed", "addScalar", "subtractScalar", "multiplyScalar", "divideScalar", "pow", "factorial", "combinations", "isNegative", "isInteger", "number", "?bignumber", "larger"];
var createStirlingS2 = factory(name273, dependencies273, (_ref) => {
  var {
    typed: typed2,
    addScalar: addScalar2,
    subtractScalar: subtractScalar2,
    multiplyScalar: multiplyScalar2,
    divideScalar: divideScalar2,
    pow: pow3,
    factorial: factorial2,
    combinations: combinations2,
    isNegative: isNegative2,
    isInteger: isInteger3,
    number: number2,
    bignumber: bignumber2,
    larger: larger2
  } = _ref;
  var smallCache = [];
  var bigCache = [];
  return typed2(name273, {
    "number | BigNumber, number | BigNumber": function numberBigNumberNumberBigNumber(n, k) {
      if (!isInteger3(n) || isNegative2(n) || !isInteger3(k) || isNegative2(k)) {
        throw new TypeError("Non-negative integer value expected in function stirlingS2");
      } else if (larger2(k, n)) {
        throw new TypeError("k must be less than or equal to n in function stirlingS2");
      }
      var big = !(isNumber(n) && isNumber(k));
      var cache = big ? bigCache : smallCache;
      var make = big ? bignumber2 : number2;
      var nn = number2(n);
      var nk = number2(k);
      if (cache[nn] && cache[nn].length > nk) {
        return cache[nn][nk];
      }
      for (var m = 0; m <= nn; ++m) {
        if (!cache[m]) {
          cache[m] = [m === 0 ? make(1) : make(0)];
        }
        if (m === 0) continue;
        var row2 = cache[m];
        var prev = cache[m - 1];
        for (var i2 = row2.length; i2 <= m && i2 <= nk; ++i2) {
          if (i2 === m) {
            row2[i2] = 1;
          } else {
            row2[i2] = addScalar2(multiplyScalar2(make(i2), prev[i2]), prev[i2 - 1]);
          }
        }
      }
      return cache[nn][nk];
    }
  });
});

// node_modules/mathjs/lib/esm/function/combinatorics/bellNumbers.js
var name274 = "bellNumbers";
var dependencies274 = ["typed", "addScalar", "isNegative", "isInteger", "stirlingS2"];
var createBellNumbers = factory(name274, dependencies274, (_ref) => {
  var {
    typed: typed2,
    addScalar: addScalar2,
    isNegative: isNegative2,
    isInteger: isInteger3,
    stirlingS2: stirlingS22
  } = _ref;
  return typed2(name274, {
    "number | BigNumber": function numberBigNumber(n) {
      if (!isInteger3(n) || isNegative2(n)) {
        throw new TypeError("Non-negative integer value expected in function bellNumbers");
      }
      var result = 0;
      for (var i2 = 0; i2 <= n; i2++) {
        result = addScalar2(result, stirlingS22(n, i2));
      }
      return result;
    }
  });
});

// node_modules/mathjs/lib/esm/function/combinatorics/catalan.js
var name275 = "catalan";
var dependencies275 = ["typed", "addScalar", "divideScalar", "multiplyScalar", "combinations", "isNegative", "isInteger"];
var createCatalan = factory(name275, dependencies275, (_ref) => {
  var {
    typed: typed2,
    addScalar: addScalar2,
    divideScalar: divideScalar2,
    multiplyScalar: multiplyScalar2,
    combinations: combinations2,
    isNegative: isNegative2,
    isInteger: isInteger3
  } = _ref;
  return typed2(name275, {
    "number | BigNumber": function numberBigNumber(n) {
      if (!isInteger3(n) || isNegative2(n)) {
        throw new TypeError("Non-negative integer value expected in function catalan");
      }
      return divideScalar2(combinations2(multiplyScalar2(n, 2), n), addScalar2(n, 1));
    }
  });
});

// node_modules/mathjs/lib/esm/function/combinatorics/composition.js
var name276 = "composition";
var dependencies276 = ["typed", "addScalar", "combinations", "isNegative", "isPositive", "isInteger", "larger"];
var createComposition = factory(name276, dependencies276, (_ref) => {
  var {
    typed: typed2,
    addScalar: addScalar2,
    combinations: combinations2,
    isPositive: isPositive2,
    isNegative: isNegative2,
    isInteger: isInteger3,
    larger: larger2
  } = _ref;
  return typed2(name276, {
    "number | BigNumber, number | BigNumber": function numberBigNumberNumberBigNumber(n, k) {
      if (!isInteger3(n) || !isPositive2(n) || !isInteger3(k) || !isPositive2(k)) {
        throw new TypeError("Positive integer value expected in function composition");
      } else if (larger2(k, n)) {
        throw new TypeError("k must be less than or equal to n in function composition");
      }
      return combinations2(addScalar2(n, -1), addScalar2(k, -1));
    }
  });
});

// node_modules/mathjs/lib/esm/function/algebra/leafCount.js
var name277 = "leafCount";
var dependencies277 = ["parse", "typed"];
var createLeafCount = factory(name277, dependencies277, (_ref) => {
  var {
    parse: parse3,
    typed: typed2
  } = _ref;
  function countLeaves(node) {
    var count2 = 0;
    node.forEach((n) => {
      count2 += countLeaves(n);
    });
    return count2 || 1;
  }
  return typed2(name277, {
    Node: function Node2(expr) {
      return countLeaves(expr);
    }
  });
});

// node_modules/mathjs/lib/esm/function/algebra/simplify/wildcards.js
function isNumericNode(x) {
  return isConstantNode(x) || isOperatorNode(x) && x.isUnary() && isConstantNode(x.args[0]);
}
function isConstantExpression(x) {
  if (isConstantNode(x)) {
    return true;
  }
  if ((isFunctionNode(x) || isOperatorNode(x)) && x.args.every(isConstantExpression)) {
    return true;
  }
  if (isParenthesisNode(x) && isConstantExpression(x.content)) {
    return true;
  }
  return false;
}

// node_modules/mathjs/lib/esm/function/algebra/simplify/util.js
function ownKeys3(e3, r) {
  var t = Object.keys(e3);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e3);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e3, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread3(e3) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys3(Object(t), true).forEach(function(r2) {
      _defineProperty(e3, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e3, Object.getOwnPropertyDescriptors(t)) : ownKeys3(Object(t)).forEach(function(r2) {
      Object.defineProperty(e3, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e3;
}
var name278 = "simplifyUtil";
var dependencies278 = ["FunctionNode", "OperatorNode", "SymbolNode"];
var createUtil = factory(name278, dependencies278, (_ref) => {
  var {
    FunctionNode: FunctionNode2,
    OperatorNode: OperatorNode2,
    SymbolNode: SymbolNode2
  } = _ref;
  var T = true;
  var F = false;
  var defaultName = "defaultF";
  var defaultContext = {
    /*      */
    add: {
      trivial: T,
      total: T,
      commutative: T,
      associative: T
    },
    /**/
    unaryPlus: {
      trivial: T,
      total: T,
      commutative: T,
      associative: T
    },
    /* */
    subtract: {
      trivial: F,
      total: T,
      commutative: F,
      associative: F
    },
    /* */
    multiply: {
      trivial: T,
      total: T,
      commutative: T,
      associative: T
    },
    /*   */
    divide: {
      trivial: F,
      total: T,
      commutative: F,
      associative: F
    },
    /*    */
    paren: {
      trivial: T,
      total: T,
      commutative: T,
      associative: F
    },
    /* */
    defaultF: {
      trivial: F,
      total: T,
      commutative: F,
      associative: F
    }
  };
  var realContext = {
    divide: {
      total: F
    },
    log: {
      total: F
    }
  };
  var positiveContext = {
    subtract: {
      total: F
    },
    abs: {
      trivial: T
    },
    log: {
      total: T
    }
  };
  function hasProperty(nodeOrName, property) {
    var context = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultContext;
    var name314 = defaultName;
    if (typeof nodeOrName === "string") {
      name314 = nodeOrName;
    } else if (isOperatorNode(nodeOrName)) {
      name314 = nodeOrName.fn.toString();
    } else if (isFunctionNode(nodeOrName)) {
      name314 = nodeOrName.name;
    } else if (isParenthesisNode(nodeOrName)) {
      name314 = "paren";
    }
    if (hasOwnProperty(context, name314)) {
      var properties2 = context[name314];
      if (hasOwnProperty(properties2, property)) {
        return properties2[property];
      }
      if (hasOwnProperty(defaultContext, name314)) {
        return defaultContext[name314][property];
      }
    }
    if (hasOwnProperty(context, defaultName)) {
      var _properties = context[defaultName];
      if (hasOwnProperty(_properties, property)) {
        return _properties[property];
      }
      return defaultContext[defaultName][property];
    }
    if (hasOwnProperty(defaultContext, name314)) {
      var _properties2 = defaultContext[name314];
      if (hasOwnProperty(_properties2, property)) {
        return _properties2[property];
      }
    }
    return defaultContext[defaultName][property];
  }
  function isCommutative(node) {
    var context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultContext;
    return hasProperty(node, "commutative", context);
  }
  function isAssociative(node) {
    var context = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultContext;
    return hasProperty(node, "associative", context);
  }
  function mergeContext(primary, secondary) {
    var merged = _objectSpread3({}, primary);
    for (var prop in secondary) {
      if (hasOwnProperty(primary, prop)) {
        merged[prop] = _objectSpread3(_objectSpread3({}, secondary[prop]), primary[prop]);
      } else {
        merged[prop] = secondary[prop];
      }
    }
    return merged;
  }
  function flatten3(node, context) {
    if (!node.args || node.args.length === 0) {
      return node;
    }
    node.args = allChildren(node, context);
    for (var i2 = 0; i2 < node.args.length; i2++) {
      flatten3(node.args[i2], context);
    }
  }
  function allChildren(node, context) {
    var op;
    var children = [];
    var findChildren = function findChildren2(node2) {
      for (var i2 = 0; i2 < node2.args.length; i2++) {
        var child = node2.args[i2];
        if (isOperatorNode(child) && op === child.op) {
          findChildren2(child);
        } else {
          children.push(child);
        }
      }
    };
    if (isAssociative(node, context)) {
      op = node.op;
      findChildren(node);
      return children;
    } else {
      return node.args;
    }
  }
  function unflattenr(node, context) {
    if (!node.args || node.args.length === 0) {
      return;
    }
    var makeNode = createMakeNodeFunction(node);
    var l = node.args.length;
    for (var i2 = 0; i2 < l; i2++) {
      unflattenr(node.args[i2], context);
    }
    if (l > 2 && isAssociative(node, context)) {
      var curnode = node.args.pop();
      while (node.args.length > 0) {
        curnode = makeNode([node.args.pop(), curnode]);
      }
      node.args = curnode.args;
    }
  }
  function unflattenl(node, context) {
    if (!node.args || node.args.length === 0) {
      return;
    }
    var makeNode = createMakeNodeFunction(node);
    var l = node.args.length;
    for (var i2 = 0; i2 < l; i2++) {
      unflattenl(node.args[i2], context);
    }
    if (l > 2 && isAssociative(node, context)) {
      var curnode = node.args.shift();
      while (node.args.length > 0) {
        curnode = makeNode([curnode, node.args.shift()]);
      }
      node.args = curnode.args;
    }
  }
  function createMakeNodeFunction(node) {
    if (isOperatorNode(node)) {
      return function(args) {
        try {
          return new OperatorNode2(node.op, node.fn, args, node.implicit);
        } catch (err) {
          console.error(err);
          return [];
        }
      };
    } else {
      return function(args) {
        return new FunctionNode2(new SymbolNode2(node.name), args);
      };
    }
  }
  return {
    createMakeNodeFunction,
    hasProperty,
    isCommutative,
    isAssociative,
    mergeContext,
    flatten: flatten3,
    allChildren,
    unflattenr,
    unflattenl,
    defaultContext,
    realContext,
    positiveContext
  };
});

// node_modules/mathjs/lib/esm/function/algebra/simplify.js
var name279 = "simplify";
var dependencies279 = ["config", "typed", "parse", "add", "subtract", "multiply", "divide", "pow", "isZero", "equal", "resolve", "simplifyConstant", "simplifyCore", "?fraction", "?bignumber", "mathWithTransform", "matrix", "AccessorNode", "ArrayNode", "ConstantNode", "FunctionNode", "IndexNode", "ObjectNode", "OperatorNode", "ParenthesisNode", "SymbolNode"];
var createSimplify = factory(name279, dependencies279, (_ref) => {
  var {
    config: config4,
    typed: typed2,
    parse: parse3,
    add: add4,
    subtract: subtract2,
    multiply: multiply2,
    divide: divide3,
    pow: pow3,
    isZero: isZero2,
    equal: equal2,
    resolve: resolve2,
    simplifyConstant: simplifyConstant2,
    simplifyCore: simplifyCore2,
    fraction: fraction2,
    bignumber: bignumber2,
    mathWithTransform: mathWithTransform2,
    matrix: matrix2,
    AccessorNode: AccessorNode2,
    ArrayNode: ArrayNode2,
    ConstantNode: ConstantNode2,
    FunctionNode: FunctionNode2,
    IndexNode: IndexNode2,
    ObjectNode: ObjectNode2,
    OperatorNode: OperatorNode2,
    ParenthesisNode: ParenthesisNode2,
    SymbolNode: SymbolNode2
  } = _ref;
  var {
    hasProperty,
    isCommutative,
    isAssociative,
    mergeContext,
    flatten: flatten3,
    unflattenr,
    unflattenl,
    createMakeNodeFunction,
    defaultContext,
    realContext,
    positiveContext
  } = createUtil({
    FunctionNode: FunctionNode2,
    OperatorNode: OperatorNode2,
    SymbolNode: SymbolNode2
  });
  typed2.addConversion({
    from: "Object",
    to: "Map",
    convert: createMap
  });
  var simplify2 = typed2("simplify", {
    Node: _simplify,
    "Node, Map": (expr, scope) => _simplify(expr, false, scope),
    "Node, Map, Object": (expr, scope, options) => _simplify(expr, false, scope, options),
    "Node, Array": _simplify,
    "Node, Array, Map": _simplify,
    "Node, Array, Map, Object": _simplify
  });
  typed2.removeConversion({
    from: "Object",
    to: "Map",
    convert: createMap
  });
  simplify2.defaultContext = defaultContext;
  simplify2.realContext = realContext;
  simplify2.positiveContext = positiveContext;
  function removeParens(node) {
    return node.transform(function(node2, path, parent) {
      return isParenthesisNode(node2) ? removeParens(node2.content) : node2;
    });
  }
  var SUPPORTED_CONSTANTS = {
    true: true,
    false: true,
    e: true,
    i: true,
    Infinity: true,
    LN2: true,
    LN10: true,
    LOG2E: true,
    LOG10E: true,
    NaN: true,
    phi: true,
    pi: true,
    SQRT1_2: true,
    SQRT2: true,
    tau: true
    // null: false,
    // undefined: false,
    // version: false,
  };
  simplify2.rules = [
    simplifyCore2,
    // { l: 'n+0', r: 'n' },     // simplifyCore
    // { l: 'n^0', r: '1' },     // simplifyCore
    // { l: '0*n', r: '0' },     // simplifyCore
    // { l: 'n/n', r: '1'},      // simplifyCore
    // { l: 'n^1', r: 'n' },     // simplifyCore
    // { l: '+n1', r:'n1' },     // simplifyCore
    // { l: 'n--n1', r:'n+n1' }, // simplifyCore
    {
      l: "log(e)",
      r: "1"
    },
    // temporary rules
    // Note initially we tend constants to the right because like-term
    // collection prefers the left, and we would rather collect nonconstants
    {
      s: "n-n1 -> n+-n1",
      // temporarily replace 'subtract' so we can further flatten the 'add' operator
      assuming: {
        subtract: {
          total: true
        }
      }
    },
    {
      s: "n-n -> 0",
      // partial alternative when we can't always subtract
      assuming: {
        subtract: {
          total: false
        }
      }
    },
    {
      s: "-(cl*v) -> v * (-cl)",
      // make non-constant terms positive
      assuming: {
        multiply: {
          commutative: true
        },
        subtract: {
          total: true
        }
      }
    },
    {
      s: "-(cl*v) -> (-cl) * v",
      // non-commutative version, part 1
      assuming: {
        multiply: {
          commutative: false
        },
        subtract: {
          total: true
        }
      }
    },
    {
      s: "-(v*cl) -> v * (-cl)",
      // non-commutative version, part 2
      assuming: {
        multiply: {
          commutative: false
        },
        subtract: {
          total: true
        }
      }
    },
    {
      l: "-(n1/n2)",
      r: "-n1/n2"
    },
    {
      l: "-v",
      r: "v * (-1)"
    },
    // finish making non-constant terms positive
    {
      l: "(n1 + n2)*(-1)",
      r: "n1*(-1) + n2*(-1)",
      repeat: true
    },
    // expand negations to achieve as much sign cancellation as possible
    {
      l: "n/n1^n2",
      r: "n*n1^-n2"
    },
    // temporarily replace 'divide' so we can further flatten the 'multiply' operator
    {
      l: "n/n1",
      r: "n*n1^-1"
    },
    {
      s: "(n1*n2)^n3 -> n1^n3 * n2^n3",
      assuming: {
        multiply: {
          commutative: true
        }
      }
    },
    {
      s: "(n1*n2)^(-1) -> n2^(-1) * n1^(-1)",
      assuming: {
        multiply: {
          commutative: false
        }
      }
    },
    // expand nested exponentiation
    {
      s: "(n ^ n1) ^ n2 -> n ^ (n1 * n2)",
      assuming: {
        divide: {
          total: true
        }
      }
      // 1/(1/n) = n needs 1/n to exist
    },
    // collect like factors; into a sum, only do this for nonconstants
    {
      l: " vd   * ( vd   * n1 + n2)",
      r: "vd^2       * n1 +  vd   * n2"
    },
    {
      s: " vd   * (vd^n4 * n1 + n2)   ->  vd^(1+n4)  * n1 +  vd   * n2",
      assuming: {
        divide: {
          total: true
        }
      }
      // v*1/v = v^(1+-1) needs 1/v
    },
    {
      s: "vd^n3 * ( vd   * n1 + n2)   ->  vd^(n3+1)  * n1 + vd^n3 * n2",
      assuming: {
        divide: {
          total: true
        }
      }
    },
    {
      s: "vd^n3 * (vd^n4 * n1 + n2)   ->  vd^(n3+n4) * n1 + vd^n3 * n2",
      assuming: {
        divide: {
          total: true
        }
      }
    },
    {
      l: "n*n",
      r: "n^2"
    },
    {
      s: "n * n^n1 -> n^(n1+1)",
      assuming: {
        divide: {
          total: true
        }
      }
      // n*1/n = n^(-1+1) needs 1/n
    },
    {
      s: "n^n1 * n^n2 -> n^(n1+n2)",
      assuming: {
        divide: {
          total: true
        }
      }
      // ditto for n^2*1/n^2
    },
    // Unfortunately, to deal with more complicated cancellations, it
    // becomes necessary to simplify constants twice per pass. It's not
    // terribly expensive compared to matching rules, so this should not
    // pose a performance problem.
    simplifyConstant2,
    // First: before collecting like terms
    // collect like terms
    {
      s: "n+n -> 2*n",
      assuming: {
        add: {
          total: true
        }
      }
      // 2 = 1 + 1 needs to exist
    },
    {
      l: "n+-n",
      r: "0"
    },
    {
      l: "vd*n + vd",
      r: "vd*(n+1)"
    },
    // NOTE: leftmost position is special:
    {
      l: "n3*n1 + n3*n2",
      r: "n3*(n1+n2)"
    },
    // All sub-monomials tried there.
    {
      l: "n3^(-n4)*n1 +   n3  * n2",
      r: "n3^(-n4)*(n1 + n3^(n4+1) *n2)"
    },
    {
      l: "n3^(-n4)*n1 + n3^n5 * n2",
      r: "n3^(-n4)*(n1 + n3^(n4+n5)*n2)"
    },
    // noncommutative additional cases (term collection & factoring)
    {
      s: "n*vd + vd -> (n+1)*vd",
      assuming: {
        multiply: {
          commutative: false
        }
      }
    },
    {
      s: "vd + n*vd -> (1+n)*vd",
      assuming: {
        multiply: {
          commutative: false
        }
      }
    },
    {
      s: "n1*n3 + n2*n3 -> (n1+n2)*n3",
      assuming: {
        multiply: {
          commutative: false
        }
      }
    },
    {
      s: "n^n1 * n -> n^(n1+1)",
      assuming: {
        divide: {
          total: true
        },
        multiply: {
          commutative: false
        }
      }
    },
    {
      s: "n1*n3^(-n4) + n2 * n3    -> (n1 + n2*n3^(n4 +  1))*n3^(-n4)",
      assuming: {
        multiply: {
          commutative: false
        }
      }
    },
    {
      s: "n1*n3^(-n4) + n2 * n3^n5 -> (n1 + n2*n3^(n4 + n5))*n3^(-n4)",
      assuming: {
        multiply: {
          commutative: false
        }
      }
    },
    {
      l: "n*cd + cd",
      r: "(n+1)*cd"
    },
    {
      s: "cd*n + cd -> cd*(n+1)",
      assuming: {
        multiply: {
          commutative: false
        }
      }
    },
    {
      s: "cd + cd*n -> cd*(1+n)",
      assuming: {
        multiply: {
          commutative: false
        }
      }
    },
    simplifyConstant2,
    // Second: before returning expressions to "standard form"
    // make factors positive (and undo 'make non-constant terms positive')
    {
      s: "(-n)*n1 -> -(n*n1)",
      assuming: {
        subtract: {
          total: true
        }
      }
    },
    {
      s: "n1*(-n) -> -(n1*n)",
      // in case * non-commutative
      assuming: {
        subtract: {
          total: true
        },
        multiply: {
          commutative: false
        }
      }
    },
    // final ordering of constants
    {
      s: "ce+ve -> ve+ce",
      assuming: {
        add: {
          commutative: true
        }
      },
      imposeContext: {
        add: {
          commutative: false
        }
      }
    },
    {
      s: "vd*cd -> cd*vd",
      assuming: {
        multiply: {
          commutative: true
        }
      },
      imposeContext: {
        multiply: {
          commutative: false
        }
      }
    },
    // undo temporary rules
    // { l: '(-1) * n', r: '-n' }, // #811 added test which proved this is redundant
    {
      l: "n+-n1",
      r: "n-n1"
    },
    // undo replace 'subtract'
    {
      l: "n+-(n1)",
      r: "n-(n1)"
    },
    {
      s: "n*(n1^-1) -> n/n1",
      // undo replace 'divide'; for * commutative
      assuming: {
        multiply: {
          commutative: true
        }
      }
      // o.w. / not conventional
    },
    {
      s: "n*n1^-n2 -> n/n1^n2",
      assuming: {
        multiply: {
          commutative: true
        }
      }
      // o.w. / not conventional
    },
    {
      s: "n^-1 -> 1/n",
      assuming: {
        multiply: {
          commutative: true
        }
      }
      // o.w. / not conventional
    },
    {
      l: "n^1",
      r: "n"
    },
    // can be produced by power cancellation
    {
      s: "n*(n1/n2) -> (n*n1)/n2",
      // '*' before '/'
      assuming: {
        multiply: {
          associative: true
        }
      }
    },
    {
      s: "n-(n1+n2) -> n-n1-n2",
      // '-' before '+'
      assuming: {
        addition: {
          associative: true,
          commutative: true
        }
      }
    },
    // { l: '(n1/n2)/n3', r: 'n1/(n2*n3)' },
    // { l: '(n*n1)/(n*n2)', r: 'n1/n2' },
    // simplifyConstant can leave an extra factor of 1, which can always
    // be eliminated, since the identity always commutes
    {
      l: "1*n",
      r: "n",
      imposeContext: {
        multiply: {
          commutative: true
        }
      }
    },
    {
      s: "n1/(n2/n3) -> (n1*n3)/n2",
      assuming: {
        multiply: {
          associative: true
        }
      }
    },
    {
      l: "n1/(-n2)",
      r: "-n1/n2"
    }
  ];
  function _canonicalizeRule(ruleObject, context) {
    var newRule = {};
    if (ruleObject.s) {
      var lr = ruleObject.s.split("->");
      if (lr.length === 2) {
        newRule.l = lr[0];
        newRule.r = lr[1];
      } else {
        throw SyntaxError("Could not parse rule: " + ruleObject.s);
      }
    } else {
      newRule.l = ruleObject.l;
      newRule.r = ruleObject.r;
    }
    newRule.l = removeParens(parse3(newRule.l));
    newRule.r = removeParens(parse3(newRule.r));
    for (var prop of ["imposeContext", "repeat", "assuming"]) {
      if (prop in ruleObject) {
        newRule[prop] = ruleObject[prop];
      }
    }
    if (ruleObject.evaluate) {
      newRule.evaluate = parse3(ruleObject.evaluate);
    }
    if (isAssociative(newRule.l, context)) {
      var nonCommutative = !isCommutative(newRule.l, context);
      var leftExpandsym;
      if (nonCommutative) leftExpandsym = _getExpandPlaceholderSymbol();
      var makeNode = createMakeNodeFunction(newRule.l);
      var expandsym = _getExpandPlaceholderSymbol();
      newRule.expanded = {};
      newRule.expanded.l = makeNode([newRule.l, expandsym]);
      flatten3(newRule.expanded.l, context);
      unflattenr(newRule.expanded.l, context);
      newRule.expanded.r = makeNode([newRule.r, expandsym]);
      if (nonCommutative) {
        newRule.expandedNC1 = {};
        newRule.expandedNC1.l = makeNode([leftExpandsym, newRule.l]);
        newRule.expandedNC1.r = makeNode([leftExpandsym, newRule.r]);
        newRule.expandedNC2 = {};
        newRule.expandedNC2.l = makeNode([leftExpandsym, newRule.expanded.l]);
        newRule.expandedNC2.r = makeNode([leftExpandsym, newRule.expanded.r]);
      }
    }
    return newRule;
  }
  function _buildRules(rules, context) {
    var ruleSet = [];
    for (var i2 = 0; i2 < rules.length; i2++) {
      var rule = rules[i2];
      var newRule = void 0;
      var ruleType = typeof rule;
      switch (ruleType) {
        case "string":
          rule = {
            s: rule
          };
        case "object":
          newRule = _canonicalizeRule(rule, context);
          break;
        case "function":
          newRule = rule;
          break;
        default:
          throw TypeError("Unsupported type of rule: " + ruleType);
      }
      ruleSet.push(newRule);
    }
    return ruleSet;
  }
  var _lastsym = 0;
  function _getExpandPlaceholderSymbol() {
    return new SymbolNode2("_p" + _lastsym++);
  }
  function _simplify(expr, rules) {
    var scope = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : createEmptyMap();
    var options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    var debug = options.consoleDebug;
    rules = _buildRules(rules || simplify2.rules, options.context);
    var res = resolve2(expr, scope);
    res = removeParens(res);
    var visited = {};
    var str = res.toString({
      parenthesis: "all"
    });
    while (!visited[str]) {
      visited[str] = true;
      _lastsym = 0;
      var laststr = str;
      if (debug) console.log("Working on: ", str);
      for (var i2 = 0; i2 < rules.length; i2++) {
        var rulestr = "";
        if (typeof rules[i2] === "function") {
          res = rules[i2](res, options);
          if (debug) rulestr = rules[i2].name;
        } else {
          flatten3(res, options.context);
          res = applyRule(res, rules[i2], options.context);
          if (debug) {
            rulestr = "".concat(rules[i2].l.toString(), " -> ").concat(rules[i2].r.toString());
          }
        }
        if (debug) {
          var newstr = res.toString({
            parenthesis: "all"
          });
          if (newstr !== laststr) {
            console.log("Applying", rulestr, "produced", newstr);
            laststr = newstr;
          }
        }
        unflattenl(res, options.context);
      }
      str = res.toString({
        parenthesis: "all"
      });
    }
    return res;
  }
  function mapRule(nodes, rule, context) {
    var resNodes = nodes;
    if (nodes) {
      for (var i2 = 0; i2 < nodes.length; ++i2) {
        var newNode = applyRule(nodes[i2], rule, context);
        if (newNode !== nodes[i2]) {
          if (resNodes === nodes) {
            resNodes = nodes.slice();
          }
          resNodes[i2] = newNode;
        }
      }
    }
    return resNodes;
  }
  function applyRule(node, rule, context) {
    if (rule.assuming) {
      for (var symbol in rule.assuming) {
        for (var property in rule.assuming[symbol]) {
          if (hasProperty(symbol, property, context) !== rule.assuming[symbol][property]) {
            return node;
          }
        }
      }
    }
    var mergedContext = mergeContext(rule.imposeContext, context);
    var res = node;
    if (res instanceof OperatorNode2 || res instanceof FunctionNode2) {
      var newArgs = mapRule(res.args, rule, context);
      if (newArgs !== res.args) {
        res = res.clone();
        res.args = newArgs;
      }
    } else if (res instanceof ParenthesisNode2) {
      if (res.content) {
        var newContent = applyRule(res.content, rule, context);
        if (newContent !== res.content) {
          res = new ParenthesisNode2(newContent);
        }
      }
    } else if (res instanceof ArrayNode2) {
      var newItems = mapRule(res.items, rule, context);
      if (newItems !== res.items) {
        res = new ArrayNode2(newItems);
      }
    } else if (res instanceof AccessorNode2) {
      var newObj = res.object;
      if (res.object) {
        newObj = applyRule(res.object, rule, context);
      }
      var newIndex = res.index;
      if (res.index) {
        newIndex = applyRule(res.index, rule, context);
      }
      if (newObj !== res.object || newIndex !== res.index) {
        res = new AccessorNode2(newObj, newIndex);
      }
    } else if (res instanceof IndexNode2) {
      var newDims = mapRule(res.dimensions, rule, context);
      if (newDims !== res.dimensions) {
        res = new IndexNode2(newDims);
      }
    } else if (res instanceof ObjectNode2) {
      var changed = false;
      var newProps = {};
      for (var prop in res.properties) {
        newProps[prop] = applyRule(res.properties[prop], rule, context);
        if (newProps[prop] !== res.properties[prop]) {
          changed = true;
        }
      }
      if (changed) {
        res = new ObjectNode2(newProps);
      }
    }
    var repl = rule.r;
    var matches = _ruleMatch(rule.l, res, mergedContext)[0];
    if (!matches && rule.expanded) {
      repl = rule.expanded.r;
      matches = _ruleMatch(rule.expanded.l, res, mergedContext)[0];
    }
    if (!matches && rule.expandedNC1) {
      repl = rule.expandedNC1.r;
      matches = _ruleMatch(rule.expandedNC1.l, res, mergedContext)[0];
      if (!matches) {
        repl = rule.expandedNC2.r;
        matches = _ruleMatch(rule.expandedNC2.l, res, mergedContext)[0];
      }
    }
    if (matches) {
      var implicit = res.implicit;
      res = repl.clone();
      if (implicit && "implicit" in repl) {
        res.implicit = true;
      }
      res = res.transform(function(node2) {
        if (node2.isSymbolNode && hasOwnProperty(matches.placeholders, node2.name)) {
          return matches.placeholders[node2.name].clone();
        } else {
          return node2;
        }
      });
    }
    if (rule.repeat && res !== node) {
      res = applyRule(res, rule, context);
    }
    return res;
  }
  function getSplits(node, context) {
    var res = [];
    var right, rightArgs;
    var makeNode = createMakeNodeFunction(node);
    if (isCommutative(node, context)) {
      for (var i2 = 0; i2 < node.args.length; i2++) {
        rightArgs = node.args.slice(0);
        rightArgs.splice(i2, 1);
        right = rightArgs.length === 1 ? rightArgs[0] : makeNode(rightArgs);
        res.push(makeNode([node.args[i2], right]));
      }
    } else {
      for (var _i = 1; _i < node.args.length; _i++) {
        var left = node.args[0];
        if (_i > 1) {
          left = makeNode(node.args.slice(0, _i));
        }
        rightArgs = node.args.slice(_i);
        right = rightArgs.length === 1 ? rightArgs[0] : makeNode(rightArgs);
        res.push(makeNode([left, right]));
      }
    }
    return res;
  }
  function mergeMatch(match1, match2) {
    var res = {
      placeholders: {}
    };
    if (!match1.placeholders && !match2.placeholders) {
      return res;
    } else if (!match1.placeholders) {
      return match2;
    } else if (!match2.placeholders) {
      return match1;
    }
    for (var key in match1.placeholders) {
      if (hasOwnProperty(match1.placeholders, key)) {
        res.placeholders[key] = match1.placeholders[key];
        if (hasOwnProperty(match2.placeholders, key)) {
          if (!_exactMatch(match1.placeholders[key], match2.placeholders[key])) {
            return null;
          }
        }
      }
    }
    for (var _key in match2.placeholders) {
      if (hasOwnProperty(match2.placeholders, _key)) {
        res.placeholders[_key] = match2.placeholders[_key];
      }
    }
    return res;
  }
  function combineChildMatches(list1, list2) {
    var res = [];
    if (list1.length === 0 || list2.length === 0) {
      return res;
    }
    var merged;
    for (var i1 = 0; i1 < list1.length; i1++) {
      for (var i2 = 0; i2 < list2.length; i2++) {
        merged = mergeMatch(list1[i1], list2[i2]);
        if (merged) {
          res.push(merged);
        }
      }
    }
    return res;
  }
  function mergeChildMatches(childMatches) {
    if (childMatches.length === 0) {
      return childMatches;
    }
    var sets = childMatches.reduce(combineChildMatches);
    var uniqueSets = [];
    var unique = {};
    for (var i2 = 0; i2 < sets.length; i2++) {
      var s = JSON.stringify(sets[i2]);
      if (!unique[s]) {
        unique[s] = true;
        uniqueSets.push(sets[i2]);
      }
    }
    return uniqueSets;
  }
  function _ruleMatch(rule, node, context, isSplit) {
    var res = [{
      placeholders: {}
    }];
    if (rule instanceof OperatorNode2 && node instanceof OperatorNode2 || rule instanceof FunctionNode2 && node instanceof FunctionNode2) {
      if (rule instanceof OperatorNode2) {
        if (rule.op !== node.op || rule.fn !== node.fn) {
          return [];
        }
      } else if (rule instanceof FunctionNode2) {
        if (rule.name !== node.name) {
          return [];
        }
      }
      if (node.args.length === 1 && rule.args.length === 1 || !isAssociative(node, context) && node.args.length === rule.args.length || isSplit) {
        var childMatches = [];
        for (var i2 = 0; i2 < rule.args.length; i2++) {
          var childMatch = _ruleMatch(rule.args[i2], node.args[i2], context);
          if (childMatch.length === 0) {
            break;
          }
          childMatches.push(childMatch);
        }
        if (childMatches.length !== rule.args.length) {
          if (!isCommutative(node, context) || // exact match in order needed
          rule.args.length === 1) {
            return [];
          }
          if (rule.args.length > 2) {
            throw new Error("permuting >2 commutative non-associative rule arguments not yet implemented");
          }
          var leftMatch = _ruleMatch(rule.args[0], node.args[1], context);
          if (leftMatch.length === 0) {
            return [];
          }
          var rightMatch = _ruleMatch(rule.args[1], node.args[0], context);
          if (rightMatch.length === 0) {
            return [];
          }
          childMatches = [leftMatch, rightMatch];
        }
        res = mergeChildMatches(childMatches);
      } else if (node.args.length >= 2 && rule.args.length === 2) {
        var splits = getSplits(node, context);
        var splitMatches = [];
        for (var _i2 = 0; _i2 < splits.length; _i2++) {
          var matchSet = _ruleMatch(rule, splits[_i2], context, true);
          splitMatches = splitMatches.concat(matchSet);
        }
        return splitMatches;
      } else if (rule.args.length > 2) {
        throw Error("Unexpected non-binary associative function: " + rule.toString());
      } else {
        return [];
      }
    } else if (rule instanceof SymbolNode2) {
      if (rule.name.length === 0) {
        throw new Error("Symbol in rule has 0 length...!?");
      }
      if (SUPPORTED_CONSTANTS[rule.name]) {
        if (rule.name !== node.name) {
          return [];
        }
      } else {
        switch (rule.name[1] >= "a" && rule.name[1] <= "z" ? rule.name.substring(0, 2) : rule.name[0]) {
          case "n":
          case "_p":
            res[0].placeholders[rule.name] = node;
            break;
          case "c":
          case "cl":
            if (isConstantNode(node)) {
              res[0].placeholders[rule.name] = node;
            } else {
              return [];
            }
            break;
          case "v":
            if (!isConstantNode(node)) {
              res[0].placeholders[rule.name] = node;
            } else {
              return [];
            }
            break;
          case "vl":
            if (isSymbolNode(node)) {
              res[0].placeholders[rule.name] = node;
            } else {
              return [];
            }
            break;
          case "cd":
            if (isNumericNode(node)) {
              res[0].placeholders[rule.name] = node;
            } else {
              return [];
            }
            break;
          case "vd":
            if (!isNumericNode(node)) {
              res[0].placeholders[rule.name] = node;
            } else {
              return [];
            }
            break;
          case "ce":
            if (isConstantExpression(node)) {
              res[0].placeholders[rule.name] = node;
            } else {
              return [];
            }
            break;
          case "ve":
            if (!isConstantExpression(node)) {
              res[0].placeholders[rule.name] = node;
            } else {
              return [];
            }
            break;
          default:
            throw new Error("Invalid symbol in rule: " + rule.name);
        }
      }
    } else if (rule instanceof ConstantNode2) {
      if (!equal2(rule.value, node.value)) {
        return [];
      }
    } else {
      return [];
    }
    return res;
  }
  function _exactMatch(p, q) {
    if (p instanceof ConstantNode2 && q instanceof ConstantNode2) {
      if (!equal2(p.value, q.value)) {
        return false;
      }
    } else if (p instanceof SymbolNode2 && q instanceof SymbolNode2) {
      if (p.name !== q.name) {
        return false;
      }
    } else if (p instanceof OperatorNode2 && q instanceof OperatorNode2 || p instanceof FunctionNode2 && q instanceof FunctionNode2) {
      if (p instanceof OperatorNode2) {
        if (p.op !== q.op || p.fn !== q.fn) {
          return false;
        }
      } else if (p instanceof FunctionNode2) {
        if (p.name !== q.name) {
          return false;
        }
      }
      if (p.args.length !== q.args.length) {
        return false;
      }
      for (var i2 = 0; i2 < p.args.length; i2++) {
        if (!_exactMatch(p.args[i2], q.args[i2])) {
          return false;
        }
      }
    } else {
      return false;
    }
    return true;
  }
  return simplify2;
});

// node_modules/mathjs/lib/esm/function/algebra/simplifyConstant.js
var name280 = "simplifyConstant";
var dependencies280 = ["typed", "config", "mathWithTransform", "matrix", "?fraction", "?bignumber", "AccessorNode", "ArrayNode", "ConstantNode", "FunctionNode", "IndexNode", "ObjectNode", "OperatorNode", "SymbolNode"];
var createSimplifyConstant = factory(name280, dependencies280, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    mathWithTransform: mathWithTransform2,
    matrix: matrix2,
    fraction: fraction2,
    bignumber: bignumber2,
    AccessorNode: AccessorNode2,
    ArrayNode: ArrayNode2,
    ConstantNode: ConstantNode2,
    FunctionNode: FunctionNode2,
    IndexNode: IndexNode2,
    ObjectNode: ObjectNode2,
    OperatorNode: OperatorNode2,
    SymbolNode: SymbolNode2
  } = _ref;
  var {
    isCommutative,
    isAssociative,
    allChildren,
    createMakeNodeFunction
  } = createUtil({
    FunctionNode: FunctionNode2,
    OperatorNode: OperatorNode2,
    SymbolNode: SymbolNode2
  });
  var simplifyConstant2 = typed2("simplifyConstant", {
    Node: (node) => _ensureNode(foldFraction(node, {})),
    "Node, Object": function NodeObject(expr, options) {
      return _ensureNode(foldFraction(expr, options));
    }
  });
  function _removeFractions(thing) {
    if (isFraction(thing)) {
      return thing.valueOf();
    }
    if (thing instanceof Array) {
      return thing.map(_removeFractions);
    }
    if (isMatrix(thing)) {
      return matrix2(_removeFractions(thing.valueOf()));
    }
    return thing;
  }
  function _eval(fnname, args, options) {
    try {
      return mathWithTransform2[fnname].apply(null, args);
    } catch (ignore) {
      args = args.map(_removeFractions);
      return _toNumber(mathWithTransform2[fnname].apply(null, args), options);
    }
  }
  var _toNode = typed2({
    Fraction: _fractionToNode,
    number: function number2(n) {
      if (n < 0) {
        return unaryMinusNode(new ConstantNode2(-n));
      }
      return new ConstantNode2(n);
    },
    BigNumber: function BigNumber2(n) {
      if (n < 0) {
        return unaryMinusNode(new ConstantNode2(-n));
      }
      return new ConstantNode2(n);
    },
    Complex: function Complex3(s) {
      throw new Error("Cannot convert Complex number to Node");
    },
    string: function string2(s) {
      return new ConstantNode2(s);
    },
    Matrix: function Matrix2(m) {
      return new ArrayNode2(m.valueOf().map((e3) => _toNode(e3)));
    }
  });
  function _ensureNode(thing) {
    if (isNode(thing)) {
      return thing;
    }
    return _toNode(thing);
  }
  function _exactFraction(n, options) {
    var exactFractions = options && options.exactFractions !== false;
    if (exactFractions && isFinite(n) && fraction2) {
      var f = fraction2(n);
      var fractionsLimit = options && typeof options.fractionsLimit === "number" ? options.fractionsLimit : Infinity;
      if (f.valueOf() === n && f.n < fractionsLimit && f.d < fractionsLimit) {
        return f;
      }
    }
    return n;
  }
  var _toNumber = typed2({
    "string, Object": function stringObject(s, options) {
      if (config4.number === "BigNumber") {
        if (bignumber2 === void 0) {
          noBignumber();
        }
        return bignumber2(s);
      } else if (config4.number === "Fraction") {
        if (fraction2 === void 0) {
          noFraction();
        }
        return fraction2(s);
      } else {
        var n = parseFloat(s);
        return _exactFraction(n, options);
      }
    },
    "Fraction, Object": function FractionObject(s, options) {
      return s;
    },
    // we don't need options here
    "BigNumber, Object": function BigNumberObject(s, options) {
      return s;
    },
    // we don't need options here
    "number, Object": function numberObject(s, options) {
      return _exactFraction(s, options);
    },
    "Complex, Object": function ComplexObject(s, options) {
      if (s.im !== 0) {
        return s;
      }
      return _exactFraction(s.re, options);
    },
    "Matrix, Object": function MatrixObject(s, options) {
      return matrix2(_exactFraction(s.valueOf()));
    },
    "Array, Object": function ArrayObject(s, options) {
      return s.map(_exactFraction);
    }
  });
  function unaryMinusNode(n) {
    return new OperatorNode2("-", "unaryMinus", [n]);
  }
  function _fractionToNode(f) {
    var n;
    var vn = f.s * f.n;
    if (vn < 0) {
      n = new OperatorNode2("-", "unaryMinus", [new ConstantNode2(-vn)]);
    } else {
      n = new ConstantNode2(vn);
    }
    if (f.d === 1) {
      return n;
    }
    return new OperatorNode2("/", "divide", [n, new ConstantNode2(f.d)]);
  }
  function _foldAccessor(obj, index2, options) {
    if (!isIndexNode(index2)) {
      return new AccessorNode2(_ensureNode(obj), _ensureNode(index2));
    }
    if (isArrayNode(obj) || isMatrix(obj)) {
      var remainingDims = Array.from(index2.dimensions);
      while (remainingDims.length > 0) {
        if (isConstantNode(remainingDims[0]) && typeof remainingDims[0].value !== "string") {
          var first = _toNumber(remainingDims.shift().value, options);
          if (isArrayNode(obj)) {
            obj = obj.items[first - 1];
          } else {
            obj = obj.valueOf()[first - 1];
            if (obj instanceof Array) {
              obj = matrix2(obj);
            }
          }
        } else if (remainingDims.length > 1 && isConstantNode(remainingDims[1]) && typeof remainingDims[1].value !== "string") {
          var second = _toNumber(remainingDims[1].value, options);
          var tryItems = [];
          var fromItems = isArrayNode(obj) ? obj.items : obj.valueOf();
          for (var item of fromItems) {
            if (isArrayNode(item)) {
              tryItems.push(item.items[second - 1]);
            } else if (isMatrix(obj)) {
              tryItems.push(item[second - 1]);
            } else {
              break;
            }
          }
          if (tryItems.length === fromItems.length) {
            if (isArrayNode(obj)) {
              obj = new ArrayNode2(tryItems);
            } else {
              obj = matrix2(tryItems);
            }
            remainingDims.splice(1, 1);
          } else {
            break;
          }
        } else {
          break;
        }
      }
      if (remainingDims.length === index2.dimensions.length) {
        return new AccessorNode2(_ensureNode(obj), index2);
      }
      if (remainingDims.length > 0) {
        index2 = new IndexNode2(remainingDims);
        return new AccessorNode2(_ensureNode(obj), index2);
      }
      return obj;
    }
    if (isObjectNode(obj) && index2.dimensions.length === 1 && isConstantNode(index2.dimensions[0])) {
      var key = index2.dimensions[0].value;
      if (key in obj.properties) {
        return obj.properties[key];
      }
      return new ConstantNode2();
    }
    return new AccessorNode2(_ensureNode(obj), index2);
  }
  function foldOp(fn, args, makeNode, options) {
    var first = args.shift();
    var reduction = args.reduce((sofar, next) => {
      if (!isNode(next)) {
        var last = sofar.pop();
        if (isNode(last)) {
          return [last, next];
        }
        try {
          sofar.push(_eval(fn, [last, next], options));
          return sofar;
        } catch (ignoreandcontinue) {
          sofar.push(last);
        }
      }
      sofar.push(_ensureNode(sofar.pop()));
      var newtree = sofar.length === 1 ? sofar[0] : makeNode(sofar);
      return [makeNode([newtree, _ensureNode(next)])];
    }, [first]);
    if (reduction.length === 1) {
      return reduction[0];
    }
    return makeNode([reduction[0], _toNode(reduction[1])]);
  }
  function foldFraction(node, options) {
    switch (node.type) {
      case "SymbolNode":
        return node;
      case "ConstantNode":
        switch (typeof node.value) {
          case "number":
            return _toNumber(node.value, options);
          case "string":
            return node.value;
          default:
            if (!isNaN(node.value)) return _toNumber(node.value, options);
        }
        return node;
      case "FunctionNode":
        if (mathWithTransform2[node.name] && mathWithTransform2[node.name].rawArgs) {
          return node;
        }
        {
          var operatorFunctions = ["add", "multiply"];
          if (!operatorFunctions.includes(node.name)) {
            var args = node.args.map((arg2) => foldFraction(arg2, options));
            if (!args.some(isNode)) {
              try {
                return _eval(node.name, args, options);
              } catch (ignoreandcontinue) {
              }
            }
            if (node.name === "size" && args.length === 1 && isArrayNode(args[0])) {
              var sz = [];
              var section = args[0];
              while (isArrayNode(section)) {
                sz.push(section.items.length);
                section = section.items[0];
              }
              return matrix2(sz);
            }
            return new FunctionNode2(node.name, args.map(_ensureNode));
          } else {
          }
        }
      case "OperatorNode": {
        var fn = node.fn.toString();
        var _args;
        var res;
        var makeNode = createMakeNodeFunction(node);
        if (isOperatorNode(node) && node.isUnary()) {
          _args = [foldFraction(node.args[0], options)];
          if (!isNode(_args[0])) {
            res = _eval(fn, _args, options);
          } else {
            res = makeNode(_args);
          }
        } else if (isAssociative(node, options.context)) {
          _args = allChildren(node, options.context);
          _args = _args.map((arg2) => foldFraction(arg2, options));
          if (isCommutative(fn, options.context)) {
            var consts = [];
            var vars = [];
            for (var i2 = 0; i2 < _args.length; i2++) {
              if (!isNode(_args[i2])) {
                consts.push(_args[i2]);
              } else {
                vars.push(_args[i2]);
              }
            }
            if (consts.length > 1) {
              res = foldOp(fn, consts, makeNode, options);
              vars.unshift(res);
              res = foldOp(fn, vars, makeNode, options);
            } else {
              res = foldOp(fn, _args, makeNode, options);
            }
          } else {
            res = foldOp(fn, _args, makeNode, options);
          }
        } else {
          _args = node.args.map((arg2) => foldFraction(arg2, options));
          res = foldOp(fn, _args, makeNode, options);
        }
        return res;
      }
      case "ParenthesisNode":
        return foldFraction(node.content, options);
      case "AccessorNode":
        return _foldAccessor(foldFraction(node.object, options), foldFraction(node.index, options), options);
      case "ArrayNode": {
        var foldItems = node.items.map((item) => foldFraction(item, options));
        if (foldItems.some(isNode)) {
          return new ArrayNode2(foldItems.map(_ensureNode));
        }
        return matrix2(foldItems);
      }
      case "IndexNode": {
        return new IndexNode2(node.dimensions.map((n) => simplifyConstant2(n, options)));
      }
      case "ObjectNode": {
        var foldProps = {};
        for (var prop in node.properties) {
          foldProps[prop] = simplifyConstant2(node.properties[prop], options);
        }
        return new ObjectNode2(foldProps);
      }
      case "AssignmentNode":
      case "BlockNode":
      case "FunctionAssignmentNode":
      case "RangeNode":
      case "ConditionalNode":
      default:
        throw new Error("Unimplemented node type in simplifyConstant: ".concat(node.type));
    }
  }
  return simplifyConstant2;
});

// node_modules/mathjs/lib/esm/function/algebra/simplifyCore.js
var name281 = "simplifyCore";
var dependencies281 = ["typed", "parse", "equal", "isZero", "add", "subtract", "multiply", "divide", "pow", "AccessorNode", "ArrayNode", "ConstantNode", "FunctionNode", "IndexNode", "ObjectNode", "OperatorNode", "ParenthesisNode", "SymbolNode"];
var createSimplifyCore = factory(name281, dependencies281, (_ref) => {
  var {
    typed: typed2,
    parse: parse3,
    equal: equal2,
    isZero: isZero2,
    add: add4,
    subtract: subtract2,
    multiply: multiply2,
    divide: divide3,
    pow: pow3,
    AccessorNode: AccessorNode2,
    ArrayNode: ArrayNode2,
    ConstantNode: ConstantNode2,
    FunctionNode: FunctionNode2,
    IndexNode: IndexNode2,
    ObjectNode: ObjectNode2,
    OperatorNode: OperatorNode2,
    ParenthesisNode: ParenthesisNode2,
    SymbolNode: SymbolNode2
  } = _ref;
  var node0 = new ConstantNode2(0);
  var node1 = new ConstantNode2(1);
  var nodeT = new ConstantNode2(true);
  var nodeF = new ConstantNode2(false);
  function isAlwaysBoolean(node) {
    return isOperatorNode(node) && ["and", "not", "or"].includes(node.op);
  }
  var {
    hasProperty,
    isCommutative
  } = createUtil({
    FunctionNode: FunctionNode2,
    OperatorNode: OperatorNode2,
    SymbolNode: SymbolNode2
  });
  function _simplifyCore(nodeToSimplify) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var context = options ? options.context : void 0;
    if (hasProperty(nodeToSimplify, "trivial", context)) {
      if (isFunctionNode(nodeToSimplify) && nodeToSimplify.args.length === 1) {
        return _simplifyCore(nodeToSimplify.args[0], options);
      }
      var simpChild = false;
      var childCount = 0;
      nodeToSimplify.forEach((c) => {
        ++childCount;
        if (childCount === 1) {
          simpChild = _simplifyCore(c, options);
        }
      });
      if (childCount === 1) {
        return simpChild;
      }
    }
    var node = nodeToSimplify;
    if (isFunctionNode(node)) {
      var op = getOperator(node.name);
      if (op) {
        if (node.args.length > 2 && hasProperty(node, "associative", context)) {
          while (node.args.length > 2) {
            var last = node.args.pop();
            var seclast = node.args.pop();
            node.args.push(new OperatorNode2(op, node.name, [last, seclast]));
          }
        }
        node = new OperatorNode2(op, node.name, node.args);
      } else {
        return new FunctionNode2(_simplifyCore(node.fn), node.args.map((n) => _simplifyCore(n, options)));
      }
    }
    if (isOperatorNode(node) && node.isUnary()) {
      var a0 = _simplifyCore(node.args[0], options);
      if (node.op === "~") {
        if (isOperatorNode(a0) && a0.isUnary() && a0.op === "~") {
          return a0.args[0];
        }
      }
      if (node.op === "not") {
        if (isOperatorNode(a0) && a0.isUnary() && a0.op === "not") {
          if (isAlwaysBoolean(a0.args[0])) {
            return a0.args[0];
          }
        }
      }
      var finish = true;
      if (node.op === "-") {
        if (isOperatorNode(a0)) {
          if (a0.isBinary() && a0.fn === "subtract") {
            node = new OperatorNode2("-", "subtract", [a0.args[1], a0.args[0]]);
            finish = false;
          }
          if (a0.isUnary() && a0.op === "-") {
            return a0.args[0];
          }
        }
      }
      if (finish) return new OperatorNode2(node.op, node.fn, [a0]);
    }
    if (isOperatorNode(node) && node.isBinary()) {
      var _a7 = _simplifyCore(node.args[0], options);
      var a1 = _simplifyCore(node.args[1], options);
      if (node.op === "+") {
        if (isConstantNode(_a7) && isZero2(_a7.value)) {
          return a1;
        }
        if (isConstantNode(a1) && isZero2(a1.value)) {
          return _a7;
        }
        if (isOperatorNode(a1) && a1.isUnary() && a1.op === "-") {
          a1 = a1.args[0];
          node = new OperatorNode2("-", "subtract", [_a7, a1]);
        }
      }
      if (node.op === "-") {
        if (isOperatorNode(a1) && a1.isUnary() && a1.op === "-") {
          return _simplifyCore(new OperatorNode2("+", "add", [_a7, a1.args[0]]), options);
        }
        if (isConstantNode(_a7) && isZero2(_a7.value)) {
          return _simplifyCore(new OperatorNode2("-", "unaryMinus", [a1]));
        }
        if (isConstantNode(a1) && isZero2(a1.value)) {
          return _a7;
        }
        return new OperatorNode2(node.op, node.fn, [_a7, a1]);
      }
      if (node.op === "*") {
        if (isConstantNode(_a7)) {
          if (isZero2(_a7.value)) {
            return node0;
          } else if (equal2(_a7.value, 1)) {
            return a1;
          }
        }
        if (isConstantNode(a1)) {
          if (isZero2(a1.value)) {
            return node0;
          } else if (equal2(a1.value, 1)) {
            return _a7;
          }
          if (isCommutative(node, context)) {
            return new OperatorNode2(node.op, node.fn, [a1, _a7], node.implicit);
          }
        }
        return new OperatorNode2(node.op, node.fn, [_a7, a1], node.implicit);
      }
      if (node.op === "/") {
        if (isConstantNode(_a7) && isZero2(_a7.value)) {
          return node0;
        }
        if (isConstantNode(a1) && equal2(a1.value, 1)) {
          return _a7;
        }
        return new OperatorNode2(node.op, node.fn, [_a7, a1]);
      }
      if (node.op === "^") {
        if (isConstantNode(a1)) {
          if (isZero2(a1.value)) {
            return node1;
          } else if (equal2(a1.value, 1)) {
            return _a7;
          }
        }
      }
      if (node.op === "and") {
        if (isConstantNode(_a7)) {
          if (_a7.value) {
            if (isAlwaysBoolean(a1)) return a1;
            if (isConstantNode(a1)) {
              return a1.value ? nodeT : nodeF;
            }
          } else {
            return nodeF;
          }
        }
        if (isConstantNode(a1)) {
          if (a1.value) {
            if (isAlwaysBoolean(_a7)) return _a7;
          } else {
            return nodeF;
          }
        }
      }
      if (node.op === "or") {
        if (isConstantNode(_a7)) {
          if (_a7.value) {
            return nodeT;
          } else {
            if (isAlwaysBoolean(a1)) return a1;
          }
        }
        if (isConstantNode(a1)) {
          if (a1.value) {
            return nodeT;
          } else {
            if (isAlwaysBoolean(_a7)) return _a7;
          }
        }
      }
      return new OperatorNode2(node.op, node.fn, [_a7, a1]);
    }
    if (isOperatorNode(node)) {
      return new OperatorNode2(node.op, node.fn, node.args.map((a) => _simplifyCore(a, options)));
    }
    if (isArrayNode(node)) {
      return new ArrayNode2(node.items.map((n) => _simplifyCore(n, options)));
    }
    if (isAccessorNode(node)) {
      return new AccessorNode2(_simplifyCore(node.object, options), _simplifyCore(node.index, options));
    }
    if (isIndexNode(node)) {
      return new IndexNode2(node.dimensions.map((n) => _simplifyCore(n, options)));
    }
    if (isObjectNode(node)) {
      var newProps = {};
      for (var prop in node.properties) {
        newProps[prop] = _simplifyCore(node.properties[prop], options);
      }
      return new ObjectNode2(newProps);
    }
    return node;
  }
  return typed2(name281, {
    Node: _simplifyCore,
    "Node,Object": _simplifyCore
  });
});

// node_modules/mathjs/lib/esm/function/algebra/resolve.js
var name282 = "resolve";
var dependencies282 = ["typed", "parse", "ConstantNode", "FunctionNode", "OperatorNode", "ParenthesisNode"];
var createResolve = factory(name282, dependencies282, (_ref) => {
  var {
    typed: typed2,
    parse: parse3,
    ConstantNode: ConstantNode2,
    FunctionNode: FunctionNode2,
    OperatorNode: OperatorNode2,
    ParenthesisNode: ParenthesisNode2
  } = _ref;
  function _resolve(node, scope) {
    var within = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : /* @__PURE__ */ new Set();
    if (!scope) {
      return node;
    }
    if (isSymbolNode(node)) {
      if (within.has(node.name)) {
        var variables = Array.from(within).join(", ");
        throw new ReferenceError("recursive loop of variable definitions among {".concat(variables, "}"));
      }
      var value = scope.get(node.name);
      if (isNode(value)) {
        var nextWithin = new Set(within);
        nextWithin.add(node.name);
        return _resolve(value, scope, nextWithin);
      } else if (typeof value === "number") {
        return parse3(String(value));
      } else if (value !== void 0) {
        return new ConstantNode2(value);
      } else {
        return node;
      }
    } else if (isOperatorNode(node)) {
      var args = node.args.map(function(arg2) {
        return _resolve(arg2, scope, within);
      });
      return new OperatorNode2(node.op, node.fn, args, node.implicit);
    } else if (isParenthesisNode(node)) {
      return new ParenthesisNode2(_resolve(node.content, scope, within));
    } else if (isFunctionNode(node)) {
      var _args = node.args.map(function(arg2) {
        return _resolve(arg2, scope, within);
      });
      return new FunctionNode2(node.name, _args);
    }
    return node.map((child) => _resolve(child, scope, within));
  }
  return typed2("resolve", {
    Node: _resolve,
    "Node, Map | null | undefined": _resolve,
    "Node, Object": (n, scope) => _resolve(n, createMap(scope)),
    // For arrays and matrices, we map `self` rather than `_resolve`
    // because resolve is fairly expensive anyway, and this way
    // we get nice error messages if one entry in the array has wrong type.
    "Array | Matrix": typed2.referToSelf((self2) => (A) => A.map((n) => self2(n))),
    "Array | Matrix, null | undefined": typed2.referToSelf((self2) => (A) => A.map((n) => self2(n))),
    "Array, Object": typed2.referTo("Array,Map", (selfAM) => (A, scope) => selfAM(A, createMap(scope))),
    "Matrix, Object": typed2.referTo("Matrix,Map", (selfMM) => (A, scope) => selfMM(A, createMap(scope))),
    "Array | Matrix, Map": typed2.referToSelf((self2) => (A, scope) => A.map((n) => self2(n, scope)))
  });
});

// node_modules/mathjs/lib/esm/function/algebra/symbolicEqual.js
var name283 = "symbolicEqual";
var dependencies283 = ["parse", "simplify", "typed", "OperatorNode"];
var createSymbolicEqual = factory(name283, dependencies283, (_ref) => {
  var {
    parse: parse3,
    simplify: simplify2,
    typed: typed2,
    OperatorNode: OperatorNode2
  } = _ref;
  function _symbolicEqual(e1, e22) {
    var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    var diff2 = new OperatorNode2("-", "subtract", [e1, e22]);
    var simplified = simplify2(diff2, {}, options);
    return isConstantNode(simplified) && !simplified.value;
  }
  return typed2(name283, {
    "Node, Node": _symbolicEqual,
    "Node, Node, Object": _symbolicEqual
  });
});

// node_modules/mathjs/lib/esm/function/algebra/derivative.js
var name284 = "derivative";
var dependencies284 = ["typed", "config", "parse", "simplify", "equal", "isZero", "numeric", "ConstantNode", "FunctionNode", "OperatorNode", "ParenthesisNode", "SymbolNode"];
var createDerivative = factory(name284, dependencies284, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    parse: parse3,
    simplify: simplify2,
    equal: equal2,
    isZero: isZero2,
    numeric: numeric3,
    ConstantNode: ConstantNode2,
    FunctionNode: FunctionNode2,
    OperatorNode: OperatorNode2,
    ParenthesisNode: ParenthesisNode2,
    SymbolNode: SymbolNode2
  } = _ref;
  function plainDerivative(expr, variable) {
    var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
      simplify: true
    };
    var constNodes = {};
    constTag(constNodes, expr, variable.name);
    var res = _derivative(expr, constNodes);
    return options.simplify ? simplify2(res) : res;
  }
  typed2.addConversion({
    from: "identifier",
    to: "SymbolNode",
    convert: parse3
  });
  var derivative2 = typed2(name284, {
    "Node, SymbolNode": plainDerivative,
    "Node, SymbolNode, Object": plainDerivative
    /* TODO: implement and test syntax with order of derivatives -> implement as an option {order: number}
    'Node, SymbolNode, ConstantNode': function (expr, variable, {order}) {
      let res = expr
      for (let i = 0; i < order; i++) {
        let constNodes = {}
        constTag(constNodes, expr, variable.name)
        res = _derivative(res, constNodes)
      }
      return res
    }
    */
  });
  typed2.removeConversion({
    from: "identifier",
    to: "SymbolNode",
    convert: parse3
  });
  derivative2._simplify = true;
  derivative2.toTex = function(deriv) {
    return _derivTex.apply(null, deriv.args);
  };
  var _derivTex = typed2("_derivTex", {
    "Node, SymbolNode": function NodeSymbolNode(expr, x) {
      if (isConstantNode(expr) && typeOf(expr.value) === "string") {
        return _derivTex(parse3(expr.value).toString(), x.toString(), 1);
      } else {
        return _derivTex(expr.toTex(), x.toString(), 1);
      }
    },
    "Node, ConstantNode": function NodeConstantNode(expr, x) {
      if (typeOf(x.value) === "string") {
        return _derivTex(expr, parse3(x.value));
      } else {
        throw new Error("The second parameter to 'derivative' is a non-string constant");
      }
    },
    "Node, SymbolNode, ConstantNode": function NodeSymbolNodeConstantNode(expr, x, order) {
      return _derivTex(expr.toString(), x.name, order.value);
    },
    "string, string, number": function stringStringNumber(expr, x, order) {
      var d2;
      if (order === 1) {
        d2 = "{d\\over d" + x + "}";
      } else {
        d2 = "{d^{" + order + "}\\over d" + x + "^{" + order + "}}";
      }
      return d2 + "\\left[".concat(expr, "\\right]");
    }
  });
  var constTag = typed2("constTag", {
    "Object, ConstantNode, string": function ObjectConstantNodeString(constNodes, node) {
      constNodes[node] = true;
      return true;
    },
    "Object, SymbolNode, string": function ObjectSymbolNodeString(constNodes, node, varName) {
      if (node.name !== varName) {
        constNodes[node] = true;
        return true;
      }
      return false;
    },
    "Object, ParenthesisNode, string": function ObjectParenthesisNodeString(constNodes, node, varName) {
      return constTag(constNodes, node.content, varName);
    },
    "Object, FunctionAssignmentNode, string": function ObjectFunctionAssignmentNodeString(constNodes, node, varName) {
      if (!node.params.includes(varName)) {
        constNodes[node] = true;
        return true;
      }
      return constTag(constNodes, node.expr, varName);
    },
    "Object, FunctionNode | OperatorNode, string": function ObjectFunctionNodeOperatorNodeString(constNodes, node, varName) {
      if (node.args.length > 0) {
        var isConst = constTag(constNodes, node.args[0], varName);
        for (var i2 = 1; i2 < node.args.length; ++i2) {
          isConst = constTag(constNodes, node.args[i2], varName) && isConst;
        }
        if (isConst) {
          constNodes[node] = true;
          return true;
        }
      }
      return false;
    }
  });
  var _derivative = typed2("_derivative", {
    "ConstantNode, Object": function ConstantNodeObject(node) {
      return createConstantNode2(0);
    },
    "SymbolNode, Object": function SymbolNodeObject(node, constNodes) {
      if (constNodes[node] !== void 0) {
        return createConstantNode2(0);
      }
      return createConstantNode2(1);
    },
    "ParenthesisNode, Object": function ParenthesisNodeObject(node, constNodes) {
      return new ParenthesisNode2(_derivative(node.content, constNodes));
    },
    "FunctionAssignmentNode, Object": function FunctionAssignmentNodeObject(node, constNodes) {
      if (constNodes[node] !== void 0) {
        return createConstantNode2(0);
      }
      return _derivative(node.expr, constNodes);
    },
    "FunctionNode, Object": function FunctionNodeObject(node, constNodes) {
      if (constNodes[node] !== void 0) {
        return createConstantNode2(0);
      }
      var arg0 = node.args[0];
      var arg1;
      var div2 = false;
      var negative = false;
      var funcDerivative;
      switch (node.name) {
        case "cbrt":
          div2 = true;
          funcDerivative = new OperatorNode2("*", "multiply", [createConstantNode2(3), new OperatorNode2("^", "pow", [arg0, new OperatorNode2("/", "divide", [createConstantNode2(2), createConstantNode2(3)])])]);
          break;
        case "sqrt":
        case "nthRoot":
          if (node.args.length === 1) {
            div2 = true;
            funcDerivative = new OperatorNode2("*", "multiply", [createConstantNode2(2), new FunctionNode2("sqrt", [arg0])]);
          } else if (node.args.length === 2) {
            arg1 = new OperatorNode2("/", "divide", [createConstantNode2(1), node.args[1]]);
            constNodes[arg1] = constNodes[node.args[1]];
            return _derivative(new OperatorNode2("^", "pow", [arg0, arg1]), constNodes);
          }
          break;
        case "log10":
          arg1 = createConstantNode2(10);
        case "log":
          if (!arg1 && node.args.length === 1) {
            funcDerivative = arg0.clone();
            div2 = true;
          } else if (node.args.length === 1 && arg1 || node.args.length === 2 && constNodes[node.args[1]] !== void 0) {
            funcDerivative = new OperatorNode2("*", "multiply", [arg0.clone(), new FunctionNode2("log", [arg1 || node.args[1]])]);
            div2 = true;
          } else if (node.args.length === 2) {
            return _derivative(new OperatorNode2("/", "divide", [new FunctionNode2("log", [arg0]), new FunctionNode2("log", [node.args[1]])]), constNodes);
          }
          break;
        case "pow":
          if (node.args.length === 2) {
            constNodes[arg1] = constNodes[node.args[1]];
            return _derivative(new OperatorNode2("^", "pow", [arg0, node.args[1]]), constNodes);
          }
          break;
        case "exp":
          funcDerivative = new FunctionNode2("exp", [arg0.clone()]);
          break;
        case "sin":
          funcDerivative = new FunctionNode2("cos", [arg0.clone()]);
          break;
        case "cos":
          funcDerivative = new OperatorNode2("-", "unaryMinus", [new FunctionNode2("sin", [arg0.clone()])]);
          break;
        case "tan":
          funcDerivative = new OperatorNode2("^", "pow", [new FunctionNode2("sec", [arg0.clone()]), createConstantNode2(2)]);
          break;
        case "sec":
          funcDerivative = new OperatorNode2("*", "multiply", [node, new FunctionNode2("tan", [arg0.clone()])]);
          break;
        case "csc":
          negative = true;
          funcDerivative = new OperatorNode2("*", "multiply", [node, new FunctionNode2("cot", [arg0.clone()])]);
          break;
        case "cot":
          negative = true;
          funcDerivative = new OperatorNode2("^", "pow", [new FunctionNode2("csc", [arg0.clone()]), createConstantNode2(2)]);
          break;
        case "asin":
          div2 = true;
          funcDerivative = new FunctionNode2("sqrt", [new OperatorNode2("-", "subtract", [createConstantNode2(1), new OperatorNode2("^", "pow", [arg0.clone(), createConstantNode2(2)])])]);
          break;
        case "acos":
          div2 = true;
          negative = true;
          funcDerivative = new FunctionNode2("sqrt", [new OperatorNode2("-", "subtract", [createConstantNode2(1), new OperatorNode2("^", "pow", [arg0.clone(), createConstantNode2(2)])])]);
          break;
        case "atan":
          div2 = true;
          funcDerivative = new OperatorNode2("+", "add", [new OperatorNode2("^", "pow", [arg0.clone(), createConstantNode2(2)]), createConstantNode2(1)]);
          break;
        case "asec":
          div2 = true;
          funcDerivative = new OperatorNode2("*", "multiply", [new FunctionNode2("abs", [arg0.clone()]), new FunctionNode2("sqrt", [new OperatorNode2("-", "subtract", [new OperatorNode2("^", "pow", [arg0.clone(), createConstantNode2(2)]), createConstantNode2(1)])])]);
          break;
        case "acsc":
          div2 = true;
          negative = true;
          funcDerivative = new OperatorNode2("*", "multiply", [new FunctionNode2("abs", [arg0.clone()]), new FunctionNode2("sqrt", [new OperatorNode2("-", "subtract", [new OperatorNode2("^", "pow", [arg0.clone(), createConstantNode2(2)]), createConstantNode2(1)])])]);
          break;
        case "acot":
          div2 = true;
          negative = true;
          funcDerivative = new OperatorNode2("+", "add", [new OperatorNode2("^", "pow", [arg0.clone(), createConstantNode2(2)]), createConstantNode2(1)]);
          break;
        case "sinh":
          funcDerivative = new FunctionNode2("cosh", [arg0.clone()]);
          break;
        case "cosh":
          funcDerivative = new FunctionNode2("sinh", [arg0.clone()]);
          break;
        case "tanh":
          funcDerivative = new OperatorNode2("^", "pow", [new FunctionNode2("sech", [arg0.clone()]), createConstantNode2(2)]);
          break;
        case "sech":
          negative = true;
          funcDerivative = new OperatorNode2("*", "multiply", [node, new FunctionNode2("tanh", [arg0.clone()])]);
          break;
        case "csch":
          negative = true;
          funcDerivative = new OperatorNode2("*", "multiply", [node, new FunctionNode2("coth", [arg0.clone()])]);
          break;
        case "coth":
          negative = true;
          funcDerivative = new OperatorNode2("^", "pow", [new FunctionNode2("csch", [arg0.clone()]), createConstantNode2(2)]);
          break;
        case "asinh":
          div2 = true;
          funcDerivative = new FunctionNode2("sqrt", [new OperatorNode2("+", "add", [new OperatorNode2("^", "pow", [arg0.clone(), createConstantNode2(2)]), createConstantNode2(1)])]);
          break;
        case "acosh":
          div2 = true;
          funcDerivative = new FunctionNode2("sqrt", [new OperatorNode2("-", "subtract", [new OperatorNode2("^", "pow", [arg0.clone(), createConstantNode2(2)]), createConstantNode2(1)])]);
          break;
        case "atanh":
          div2 = true;
          funcDerivative = new OperatorNode2("-", "subtract", [createConstantNode2(1), new OperatorNode2("^", "pow", [arg0.clone(), createConstantNode2(2)])]);
          break;
        case "asech":
          div2 = true;
          negative = true;
          funcDerivative = new OperatorNode2("*", "multiply", [arg0.clone(), new FunctionNode2("sqrt", [new OperatorNode2("-", "subtract", [createConstantNode2(1), new OperatorNode2("^", "pow", [arg0.clone(), createConstantNode2(2)])])])]);
          break;
        case "acsch":
          div2 = true;
          negative = true;
          funcDerivative = new OperatorNode2("*", "multiply", [new FunctionNode2("abs", [arg0.clone()]), new FunctionNode2("sqrt", [new OperatorNode2("+", "add", [new OperatorNode2("^", "pow", [arg0.clone(), createConstantNode2(2)]), createConstantNode2(1)])])]);
          break;
        case "acoth":
          div2 = true;
          negative = true;
          funcDerivative = new OperatorNode2("-", "subtract", [createConstantNode2(1), new OperatorNode2("^", "pow", [arg0.clone(), createConstantNode2(2)])]);
          break;
        case "abs":
          funcDerivative = new OperatorNode2("/", "divide", [new FunctionNode2(new SymbolNode2("abs"), [arg0.clone()]), arg0.clone()]);
          break;
        case "gamma":
        default:
          throw new Error('Cannot process function "' + node.name + '" in derivative: the function is not supported, undefined, or the number of arguments passed to it are not supported');
      }
      var op, func;
      if (div2) {
        op = "/";
        func = "divide";
      } else {
        op = "*";
        func = "multiply";
      }
      var chainDerivative = _derivative(arg0, constNodes);
      if (negative) {
        chainDerivative = new OperatorNode2("-", "unaryMinus", [chainDerivative]);
      }
      return new OperatorNode2(op, func, [chainDerivative, funcDerivative]);
    },
    "OperatorNode, Object": function OperatorNodeObject(node, constNodes) {
      if (constNodes[node] !== void 0) {
        return createConstantNode2(0);
      }
      if (node.op === "+") {
        return new OperatorNode2(node.op, node.fn, node.args.map(function(arg2) {
          return _derivative(arg2, constNodes);
        }));
      }
      if (node.op === "-") {
        if (node.isUnary()) {
          return new OperatorNode2(node.op, node.fn, [_derivative(node.args[0], constNodes)]);
        }
        if (node.isBinary()) {
          return new OperatorNode2(node.op, node.fn, [_derivative(node.args[0], constNodes), _derivative(node.args[1], constNodes)]);
        }
      }
      if (node.op === "*") {
        var constantTerms = node.args.filter(function(arg2) {
          return constNodes[arg2] !== void 0;
        });
        if (constantTerms.length > 0) {
          var nonConstantTerms = node.args.filter(function(arg2) {
            return constNodes[arg2] === void 0;
          });
          var nonConstantNode = nonConstantTerms.length === 1 ? nonConstantTerms[0] : new OperatorNode2("*", "multiply", nonConstantTerms);
          var newArgs = constantTerms.concat(_derivative(nonConstantNode, constNodes));
          return new OperatorNode2("*", "multiply", newArgs);
        }
        return new OperatorNode2("+", "add", node.args.map(function(argOuter) {
          return new OperatorNode2("*", "multiply", node.args.map(function(argInner) {
            return argInner === argOuter ? _derivative(argInner, constNodes) : argInner.clone();
          }));
        }));
      }
      if (node.op === "/" && node.isBinary()) {
        var arg0 = node.args[0];
        var arg1 = node.args[1];
        if (constNodes[arg1] !== void 0) {
          return new OperatorNode2("/", "divide", [_derivative(arg0, constNodes), arg1]);
        }
        if (constNodes[arg0] !== void 0) {
          return new OperatorNode2("*", "multiply", [new OperatorNode2("-", "unaryMinus", [arg0]), new OperatorNode2("/", "divide", [_derivative(arg1, constNodes), new OperatorNode2("^", "pow", [arg1.clone(), createConstantNode2(2)])])]);
        }
        return new OperatorNode2("/", "divide", [new OperatorNode2("-", "subtract", [new OperatorNode2("*", "multiply", [_derivative(arg0, constNodes), arg1.clone()]), new OperatorNode2("*", "multiply", [arg0.clone(), _derivative(arg1, constNodes)])]), new OperatorNode2("^", "pow", [arg1.clone(), createConstantNode2(2)])]);
      }
      if (node.op === "^" && node.isBinary()) {
        var _arg = node.args[0];
        var _arg2 = node.args[1];
        if (constNodes[_arg] !== void 0) {
          if (isConstantNode(_arg) && (isZero2(_arg.value) || equal2(_arg.value, 1))) {
            return createConstantNode2(0);
          }
          return new OperatorNode2("*", "multiply", [node, new OperatorNode2("*", "multiply", [new FunctionNode2("log", [_arg.clone()]), _derivative(_arg2.clone(), constNodes)])]);
        }
        if (constNodes[_arg2] !== void 0) {
          if (isConstantNode(_arg2)) {
            if (isZero2(_arg2.value)) {
              return createConstantNode2(0);
            }
            if (equal2(_arg2.value, 1)) {
              return _derivative(_arg, constNodes);
            }
          }
          var powMinusOne = new OperatorNode2("^", "pow", [_arg.clone(), new OperatorNode2("-", "subtract", [_arg2, createConstantNode2(1)])]);
          return new OperatorNode2("*", "multiply", [_arg2.clone(), new OperatorNode2("*", "multiply", [_derivative(_arg, constNodes), powMinusOne])]);
        }
        return new OperatorNode2("*", "multiply", [new OperatorNode2("^", "pow", [_arg.clone(), _arg2.clone()]), new OperatorNode2("+", "add", [new OperatorNode2("*", "multiply", [_derivative(_arg, constNodes), new OperatorNode2("/", "divide", [_arg2.clone(), _arg.clone()])]), new OperatorNode2("*", "multiply", [_derivative(_arg2, constNodes), new FunctionNode2("log", [_arg.clone()])])])]);
      }
      throw new Error('Cannot process operator "' + node.op + '" in derivative: the operator is not supported, undefined, or the number of arguments passed to it are not supported');
    }
  });
  function createConstantNode2(value, valueType) {
    return new ConstantNode2(numeric3(value, valueType || config4.number));
  }
  return derivative2;
});

// node_modules/mathjs/lib/esm/function/algebra/rationalize.js
var name285 = "rationalize";
var dependencies285 = ["config", "typed", "equal", "isZero", "add", "subtract", "multiply", "divide", "pow", "parse", "simplifyConstant", "simplifyCore", "simplify", "?bignumber", "?fraction", "mathWithTransform", "matrix", "AccessorNode", "ArrayNode", "ConstantNode", "FunctionNode", "IndexNode", "ObjectNode", "OperatorNode", "SymbolNode", "ParenthesisNode"];
var createRationalize = factory(name285, dependencies285, (_ref) => {
  var {
    config: config4,
    typed: typed2,
    equal: equal2,
    isZero: isZero2,
    add: add4,
    subtract: subtract2,
    multiply: multiply2,
    divide: divide3,
    pow: pow3,
    parse: parse3,
    simplifyConstant: simplifyConstant2,
    simplifyCore: simplifyCore2,
    simplify: simplify2,
    fraction: fraction2,
    bignumber: bignumber2,
    mathWithTransform: mathWithTransform2,
    matrix: matrix2,
    AccessorNode: AccessorNode2,
    ArrayNode: ArrayNode2,
    ConstantNode: ConstantNode2,
    FunctionNode: FunctionNode2,
    IndexNode: IndexNode2,
    ObjectNode: ObjectNode2,
    OperatorNode: OperatorNode2,
    SymbolNode: SymbolNode2,
    ParenthesisNode: ParenthesisNode2
  } = _ref;
  function _rationalize(expr) {
    var scope = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var detailed = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
    var setRules = rulesRationalize();
    var polyRet = polynomial(expr, scope, true, setRules.firstRules);
    var nVars = polyRet.variables.length;
    var noExactFractions = {
      exactFractions: false
    };
    var withExactFractions = {
      exactFractions: true
    };
    expr = polyRet.expression;
    if (nVars >= 1) {
      expr = expandPower(expr);
      var sBefore;
      var rules;
      var eDistrDiv = true;
      var redoInic = false;
      expr = simplify2(expr, setRules.firstRules, {}, noExactFractions);
      var s;
      while (true) {
        rules = eDistrDiv ? setRules.distrDivRules : setRules.sucDivRules;
        expr = simplify2(expr, rules, {}, withExactFractions);
        eDistrDiv = !eDistrDiv;
        s = expr.toString();
        if (s === sBefore) {
          break;
        }
        redoInic = true;
        sBefore = s;
      }
      if (redoInic) {
        expr = simplify2(expr, setRules.firstRulesAgain, {}, noExactFractions);
      }
      expr = simplify2(expr, setRules.finalRules, {}, noExactFractions);
    }
    var coefficients = [];
    var retRationalize = {};
    if (expr.type === "OperatorNode" && expr.isBinary() && expr.op === "/") {
      if (nVars === 1) {
        expr.args[0] = polyToCanonical(expr.args[0], coefficients);
        expr.args[1] = polyToCanonical(expr.args[1]);
      }
      if (detailed) {
        retRationalize.numerator = expr.args[0];
        retRationalize.denominator = expr.args[1];
      }
    } else {
      if (nVars === 1) {
        expr = polyToCanonical(expr, coefficients);
      }
      if (detailed) {
        retRationalize.numerator = expr;
        retRationalize.denominator = null;
      }
    }
    if (!detailed) return expr;
    retRationalize.coefficients = coefficients;
    retRationalize.variables = polyRet.variables;
    retRationalize.expression = expr;
    return retRationalize;
  }
  return typed2(name285, {
    Node: _rationalize,
    "Node, boolean": (expr, detailed) => _rationalize(expr, {}, detailed),
    "Node, Object": _rationalize,
    "Node, Object, boolean": _rationalize
  });
  function polynomial(expr, scope, extended, rules) {
    var variables = [];
    var node = simplify2(expr, rules, scope, {
      exactFractions: false
    });
    extended = !!extended;
    var oper = "+-*" + (extended ? "/" : "");
    recPoly(node);
    var retFunc = {};
    retFunc.expression = node;
    retFunc.variables = variables;
    return retFunc;
    function recPoly(node2) {
      var tp = node2.type;
      if (tp === "FunctionNode") {
        throw new Error("There is an unsolved function call");
      } else if (tp === "OperatorNode") {
        if (node2.op === "^") {
          if (node2.args[1].type !== "ConstantNode" || !isInteger(parseFloat(node2.args[1].value))) {
            throw new Error("There is a non-integer exponent");
          } else {
            recPoly(node2.args[0]);
          }
        } else {
          if (!oper.includes(node2.op)) {
            throw new Error("Operator " + node2.op + " invalid in polynomial expression");
          }
          for (var i2 = 0; i2 < node2.args.length; i2++) {
            recPoly(node2.args[i2]);
          }
        }
      } else if (tp === "SymbolNode") {
        var _name = node2.name;
        var pos = variables.indexOf(_name);
        if (pos === -1) {
          variables.push(_name);
        }
      } else if (tp === "ParenthesisNode") {
        recPoly(node2.content);
      } else if (tp !== "ConstantNode") {
        throw new Error("type " + tp + " is not allowed in polynomial expression");
      }
    }
  }
  function rulesRationalize() {
    var oldRules = [
      simplifyCore2,
      // sCore
      {
        l: "n+n",
        r: "2*n"
      },
      {
        l: "n+-n",
        r: "0"
      },
      simplifyConstant2,
      // sConstant
      {
        l: "n*(n1^-1)",
        r: "n/n1"
      },
      {
        l: "n*n1^-n2",
        r: "n/n1^n2"
      },
      {
        l: "n1^-1",
        r: "1/n1"
      },
      {
        l: "n*(n1/n2)",
        r: "(n*n1)/n2"
      },
      {
        l: "1*n",
        r: "n"
      }
    ];
    var rulesFirst = [
      {
        l: "(-n1)/(-n2)",
        r: "n1/n2"
      },
      // Unary division
      {
        l: "(-n1)*(-n2)",
        r: "n1*n2"
      },
      // Unary multiplication
      {
        l: "n1--n2",
        r: "n1+n2"
      },
      // '--' elimination
      {
        l: "n1-n2",
        r: "n1+(-n2)"
      },
      // Subtraction turn into add with un�ry minus
      {
        l: "(n1+n2)*n3",
        r: "(n1*n3 + n2*n3)"
      },
      // Distributive 1
      {
        l: "n1*(n2+n3)",
        r: "(n1*n2+n1*n3)"
      },
      // Distributive 2
      {
        l: "c1*n + c2*n",
        r: "(c1+c2)*n"
      },
      // Joining constants
      {
        l: "c1*n + n",
        r: "(c1+1)*n"
      },
      // Joining constants
      {
        l: "c1*n - c2*n",
        r: "(c1-c2)*n"
      },
      // Joining constants
      {
        l: "c1*n - n",
        r: "(c1-1)*n"
      },
      // Joining constants
      {
        l: "v/c",
        r: "(1/c)*v"
      },
      // variable/constant (new!)
      {
        l: "v/-c",
        r: "-(1/c)*v"
      },
      // variable/constant (new!)
      {
        l: "-v*-c",
        r: "c*v"
      },
      // Inversion constant and variable 1
      {
        l: "-v*c",
        r: "-c*v"
      },
      // Inversion constant and variable 2
      {
        l: "v*-c",
        r: "-c*v"
      },
      // Inversion constant and variable 3
      {
        l: "v*c",
        r: "c*v"
      },
      // Inversion constant and variable 4
      {
        l: "-(-n1*n2)",
        r: "(n1*n2)"
      },
      // Unary propagation
      {
        l: "-(n1*n2)",
        r: "(-n1*n2)"
      },
      // Unary propagation
      {
        l: "-(-n1+n2)",
        r: "(n1-n2)"
      },
      // Unary propagation
      {
        l: "-(n1+n2)",
        r: "(-n1-n2)"
      },
      // Unary propagation
      {
        l: "(n1^n2)^n3",
        r: "(n1^(n2*n3))"
      },
      // Power to Power
      {
        l: "-(-n1/n2)",
        r: "(n1/n2)"
      },
      // Division and Unary
      {
        l: "-(n1/n2)",
        r: "(-n1/n2)"
      }
    ];
    var rulesDistrDiv = [
      {
        l: "(n1/n2 + n3/n4)",
        r: "((n1*n4 + n3*n2)/(n2*n4))"
      },
      // Sum of fractions
      {
        l: "(n1/n2 + n3)",
        r: "((n1 + n3*n2)/n2)"
      },
      // Sum fraction with number 1
      {
        l: "(n1 + n2/n3)",
        r: "((n1*n3 + n2)/n3)"
      }
    ];
    var rulesSucDiv = [
      {
        l: "(n1/(n2/n3))",
        r: "((n1*n3)/n2)"
      },
      // Division simplification
      {
        l: "(n1/n2/n3)",
        r: "(n1/(n2*n3))"
      }
    ];
    var setRules = {};
    setRules.firstRules = oldRules.concat(rulesFirst, rulesSucDiv);
    setRules.distrDivRules = rulesDistrDiv;
    setRules.sucDivRules = rulesSucDiv;
    setRules.firstRulesAgain = oldRules.concat(rulesFirst);
    setRules.finalRules = [
      simplifyCore2,
      // simplify.rules[0]
      {
        l: "n*-n",
        r: "-n^2"
      },
      // Joining multiply with power 1
      {
        l: "n*n",
        r: "n^2"
      },
      // Joining multiply with power 2
      simplifyConstant2,
      // simplify.rules[14] old 3rd index in oldRules
      {
        l: "n*-n^n1",
        r: "-n^(n1+1)"
      },
      // Joining multiply with power 3
      {
        l: "n*n^n1",
        r: "n^(n1+1)"
      },
      // Joining multiply with power 4
      {
        l: "n^n1*-n^n2",
        r: "-n^(n1+n2)"
      },
      // Joining multiply with power 5
      {
        l: "n^n1*n^n2",
        r: "n^(n1+n2)"
      },
      // Joining multiply with power 6
      {
        l: "n^n1*-n",
        r: "-n^(n1+1)"
      },
      // Joining multiply with power 7
      {
        l: "n^n1*n",
        r: "n^(n1+1)"
      },
      // Joining multiply with power 8
      {
        l: "n^n1/-n",
        r: "-n^(n1-1)"
      },
      // Joining multiply with power 8
      {
        l: "n^n1/n",
        r: "n^(n1-1)"
      },
      // Joining division with power 1
      {
        l: "n/-n^n1",
        r: "-n^(1-n1)"
      },
      // Joining division with power 2
      {
        l: "n/n^n1",
        r: "n^(1-n1)"
      },
      // Joining division with power 3
      {
        l: "n^n1/-n^n2",
        r: "n^(n1-n2)"
      },
      // Joining division with power 4
      {
        l: "n^n1/n^n2",
        r: "n^(n1-n2)"
      },
      // Joining division with power 5
      {
        l: "n1+(-n2*n3)",
        r: "n1-n2*n3"
      },
      // Solving useless parenthesis 1
      {
        l: "v*(-c)",
        r: "-c*v"
      },
      // Solving useless unary 2
      {
        l: "n1+-n2",
        r: "n1-n2"
      },
      // Solving +- together (new!)
      {
        l: "v*c",
        r: "c*v"
      },
      // inversion constant with variable
      {
        l: "(n1^n2)^n3",
        r: "(n1^(n2*n3))"
      }
      // Power to Power
    ];
    return setRules;
  }
  function expandPower(node, parent, indParent) {
    var tp = node.type;
    var internal = arguments.length > 1;
    if (tp === "OperatorNode" && node.isBinary()) {
      var does = false;
      var val;
      if (node.op === "^") {
        if ((node.args[0].type === "ParenthesisNode" || node.args[0].type === "OperatorNode") && node.args[1].type === "ConstantNode") {
          val = parseFloat(node.args[1].value);
          does = val >= 2 && isInteger(val);
        }
      }
      if (does) {
        if (val > 2) {
          var nEsqTopo = node.args[0];
          var nDirTopo = new OperatorNode2("^", "pow", [node.args[0].cloneDeep(), new ConstantNode2(val - 1)]);
          node = new OperatorNode2("*", "multiply", [nEsqTopo, nDirTopo]);
        } else {
          node = new OperatorNode2("*", "multiply", [node.args[0], node.args[0].cloneDeep()]);
        }
        if (internal) {
          if (indParent === "content") {
            parent.content = node;
          } else {
            parent.args[indParent] = node;
          }
        }
      }
    }
    if (tp === "ParenthesisNode") {
      expandPower(node.content, node, "content");
    } else if (tp !== "ConstantNode" && tp !== "SymbolNode") {
      for (var i2 = 0; i2 < node.args.length; i2++) {
        expandPower(node.args[i2], node, i2);
      }
    }
    if (!internal) {
      return node;
    }
  }
  function polyToCanonical(node, coefficients) {
    if (coefficients === void 0) {
      coefficients = [];
    }
    coefficients[0] = 0;
    var o = {};
    o.cte = 1;
    o.oper = "+";
    o.fire = "";
    var maxExpo = 0;
    var varname = "";
    recurPol(node, null, o);
    maxExpo = coefficients.length - 1;
    var first = true;
    var no;
    for (var i2 = maxExpo; i2 >= 0; i2--) {
      if (coefficients[i2] === 0) continue;
      var n16 = new ConstantNode2(first ? coefficients[i2] : Math.abs(coefficients[i2]));
      var op = coefficients[i2] < 0 ? "-" : "+";
      if (i2 > 0) {
        var n25 = new SymbolNode2(varname);
        if (i2 > 1) {
          var n3 = new ConstantNode2(i2);
          n25 = new OperatorNode2("^", "pow", [n25, n3]);
        }
        if (coefficients[i2] === -1 && first) {
          n16 = new OperatorNode2("-", "unaryMinus", [n25]);
        } else if (Math.abs(coefficients[i2]) === 1) {
          n16 = n25;
        } else {
          n16 = new OperatorNode2("*", "multiply", [n16, n25]);
        }
      }
      if (first) {
        no = n16;
      } else if (op === "+") {
        no = new OperatorNode2("+", "add", [no, n16]);
      } else {
        no = new OperatorNode2("-", "subtract", [no, n16]);
      }
      first = false;
    }
    if (first) {
      return new ConstantNode2(0);
    } else {
      return no;
    }
    function recurPol(node2, noPai, o2) {
      var tp = node2.type;
      if (tp === "FunctionNode") {
        throw new Error("There is an unsolved function call");
      } else if (tp === "OperatorNode") {
        if (!"+-*^".includes(node2.op)) throw new Error("Operator " + node2.op + " invalid");
        if (noPai !== null) {
          if ((node2.fn === "unaryMinus" || node2.fn === "pow") && noPai.fn !== "add" && noPai.fn !== "subtract" && noPai.fn !== "multiply") {
            throw new Error("Invalid " + node2.op + " placing");
          }
          if ((node2.fn === "subtract" || node2.fn === "add" || node2.fn === "multiply") && noPai.fn !== "add" && noPai.fn !== "subtract") {
            throw new Error("Invalid " + node2.op + " placing");
          }
          if ((node2.fn === "subtract" || node2.fn === "add" || node2.fn === "unaryMinus") && o2.noFil !== 0) {
            throw new Error("Invalid " + node2.op + " placing");
          }
        }
        if (node2.op === "^" || node2.op === "*") {
          o2.fire = node2.op;
        }
        for (var _i = 0; _i < node2.args.length; _i++) {
          if (node2.fn === "unaryMinus") o2.oper = "-";
          if (node2.op === "+" || node2.fn === "subtract") {
            o2.fire = "";
            o2.cte = 1;
            o2.oper = _i === 0 ? "+" : node2.op;
          }
          o2.noFil = _i;
          recurPol(node2.args[_i], node2, o2);
        }
      } else if (tp === "SymbolNode") {
        if (node2.name !== varname && varname !== "") {
          throw new Error("There is more than one variable");
        }
        varname = node2.name;
        if (noPai === null) {
          coefficients[1] = 1;
          return;
        }
        if (noPai.op === "^" && o2.noFil !== 0) {
          throw new Error("In power the variable should be the first parameter");
        }
        if (noPai.op === "*" && o2.noFil !== 1) {
          throw new Error("In multiply the variable should be the second parameter");
        }
        if (o2.fire === "" || o2.fire === "*") {
          if (maxExpo < 1) coefficients[1] = 0;
          coefficients[1] += o2.cte * (o2.oper === "+" ? 1 : -1);
          maxExpo = Math.max(1, maxExpo);
        }
      } else if (tp === "ConstantNode") {
        var valor = parseFloat(node2.value);
        if (noPai === null) {
          coefficients[0] = valor;
          return;
        }
        if (noPai.op === "^") {
          if (o2.noFil !== 1) throw new Error("Constant cannot be powered");
          if (!isInteger(valor) || valor <= 0) {
            throw new Error("Non-integer exponent is not allowed");
          }
          for (var _i2 = maxExpo + 1; _i2 < valor; _i2++) coefficients[_i2] = 0;
          if (valor > maxExpo) coefficients[valor] = 0;
          coefficients[valor] += o2.cte * (o2.oper === "+" ? 1 : -1);
          maxExpo = Math.max(valor, maxExpo);
          return;
        }
        o2.cte = valor;
        if (o2.fire === "") {
          coefficients[0] += o2.cte * (o2.oper === "+" ? 1 : -1);
        }
      } else {
        throw new Error("Type " + tp + " is not allowed");
      }
    }
  }
});

// node_modules/mathjs/lib/esm/function/signal/zpk2tf.js
var name286 = "zpk2tf";
var dependencies286 = ["typed", "add", "multiply", "Complex", "number"];
var createZpk2tf = factory(name286, dependencies286, (_ref) => {
  var {
    typed: typed2,
    add: add4,
    multiply: multiply2,
    Complex: Complex3,
    number: number2
  } = _ref;
  return typed2(name286, {
    "Array,Array,number": function ArrayArrayNumber(z, p, k) {
      return _zpk2tf(z, p, k);
    },
    "Array,Array": function ArrayArray(z, p) {
      return _zpk2tf(z, p, 1);
    },
    "Matrix,Matrix,number": function MatrixMatrixNumber(z, p, k) {
      return _zpk2tf(z.valueOf(), p.valueOf(), k);
    },
    "Matrix,Matrix": function MatrixMatrix(z, p) {
      return _zpk2tf(z.valueOf(), p.valueOf(), 1);
    }
  });
  function _zpk2tf(z, p, k) {
    if (z.some((el) => el.type === "BigNumber")) {
      z = z.map((el) => number2(el));
    }
    if (p.some((el) => el.type === "BigNumber")) {
      p = p.map((el) => number2(el));
    }
    var num = [Complex3(1, 0)];
    var den = [Complex3(1, 0)];
    for (var i2 = 0; i2 < z.length; i2++) {
      var zero = z[i2];
      if (typeof zero === "number") zero = Complex3(zero, 0);
      num = _multiply(num, [Complex3(1, 0), Complex3(-zero.re, -zero.im)]);
    }
    for (var _i = 0; _i < p.length; _i++) {
      var pole = p[_i];
      if (typeof pole === "number") pole = Complex3(pole, 0);
      den = _multiply(den, [Complex3(1, 0), Complex3(-pole.re, -pole.im)]);
    }
    for (var _i2 = 0; _i2 < num.length; _i2++) {
      num[_i2] = multiply2(num[_i2], k);
    }
    return [num, den];
  }
  function _multiply(a, b2) {
    var c = [];
    for (var i2 = 0; i2 < a.length + b2.length - 1; i2++) {
      c[i2] = Complex3(0, 0);
      for (var j = 0; j < a.length; j++) {
        if (i2 - j >= 0 && i2 - j < b2.length) {
          c[i2] = add4(c[i2], multiply2(a[j], b2[i2 - j]));
        }
      }
    }
    return c;
  }
});

// node_modules/mathjs/lib/esm/function/signal/freqz.js
var name287 = "freqz";
var dependencies287 = ["typed", "add", "multiply", "Complex", "divide", "matrix"];
var createFreqz = factory(name287, dependencies287, (_ref) => {
  var {
    typed: typed2,
    add: add4,
    multiply: multiply2,
    Complex: Complex3,
    divide: divide3,
    matrix: matrix2
  } = _ref;
  return typed2(name287, {
    "Array, Array": function ArrayArray(b2, a) {
      var w = createBins(512);
      return _freqz(b2, a, w);
    },
    "Array, Array, Array": function ArrayArrayArray(b2, a, w) {
      return _freqz(b2, a, w);
    },
    "Array, Array, number": function ArrayArrayNumber(b2, a, w) {
      if (w < 0) {
        throw new Error("w must be a positive number");
      }
      var w2 = createBins(w);
      return _freqz(b2, a, w2);
    },
    "Matrix, Matrix": function MatrixMatrix(b2, a) {
      var _w = createBins(512);
      var {
        w,
        h
      } = _freqz(b2.valueOf(), a.valueOf(), _w);
      return {
        w: matrix2(w),
        h: matrix2(h)
      };
    },
    "Matrix, Matrix, Matrix": function MatrixMatrixMatrix(b2, a, w) {
      var {
        h
      } = _freqz(b2.valueOf(), a.valueOf(), w.valueOf());
      return {
        h: matrix2(h),
        w: matrix2(w)
      };
    },
    "Matrix, Matrix, number": function MatrixMatrixNumber(b2, a, w) {
      if (w < 0) {
        throw new Error("w must be a positive number");
      }
      var _w = createBins(w);
      var {
        h
      } = _freqz(b2.valueOf(), a.valueOf(), _w);
      return {
        h: matrix2(h),
        w: matrix2(_w)
      };
    }
  });
  function _freqz(b2, a, w) {
    var num = [];
    var den = [];
    for (var i2 = 0; i2 < w.length; i2++) {
      var sumNum = Complex3(0, 0);
      var sumDen = Complex3(0, 0);
      for (var j = 0; j < b2.length; j++) {
        sumNum = add4(sumNum, multiply2(b2[j], Complex3(Math.cos(-j * w[i2]), Math.sin(-j * w[i2]))));
      }
      for (var _j = 0; _j < a.length; _j++) {
        sumDen = add4(sumDen, multiply2(a[_j], Complex3(Math.cos(-_j * w[i2]), Math.sin(-_j * w[i2]))));
      }
      num.push(sumNum);
      den.push(sumDen);
    }
    var h = [];
    for (var _i = 0; _i < num.length; _i++) {
      h.push(divide3(num[_i], den[_i]));
    }
    return {
      h,
      w
    };
  }
  function createBins(n) {
    var bins = [];
    for (var i2 = 0; i2 < n; i2++) {
      bins.push(i2 / n * Math.PI);
    }
    return bins;
  }
});

// node_modules/mathjs/lib/esm/json/reviver.js
var name288 = "reviver";
var dependencies288 = ["classes"];
var createReviver = factory(name288, dependencies288, (_ref) => {
  var {
    classes: classes2
  } = _ref;
  return function reviver2(key, value) {
    var constructor = classes2[value && value.mathjs];
    if (constructor && typeof constructor.fromJSON === "function") {
      return constructor.fromJSON(value);
    }
    return value;
  };
});

// node_modules/mathjs/lib/esm/json/replacer.js
var name289 = "replacer";
var dependencies289 = [];
var createReplacer = factory(name289, dependencies289, () => {
  return function replacer2(key, value) {
    if (typeof value === "number" && (!isFinite(value) || isNaN(value))) {
      return {
        mathjs: "number",
        value: String(value)
      };
    }
    return value;
  };
});

// node_modules/mathjs/lib/esm/version.js
var version = "12.4.3";

// node_modules/mathjs/lib/esm/constants.js
var createTrue = factory("true", [], () => true);
var createFalse = factory("false", [], () => false);
var createNull = factory("null", [], () => null);
var createInfinity = recreateFactory("Infinity", ["config", "?BigNumber"], (_ref) => {
  var {
    config: config4,
    BigNumber: BigNumber2
  } = _ref;
  return config4.number === "BigNumber" ? new BigNumber2(Infinity) : Infinity;
});
var createNaN = recreateFactory("NaN", ["config", "?BigNumber"], (_ref2) => {
  var {
    config: config4,
    BigNumber: BigNumber2
  } = _ref2;
  return config4.number === "BigNumber" ? new BigNumber2(NaN) : NaN;
});
var createPi = recreateFactory("pi", ["config", "?BigNumber"], (_ref3) => {
  var {
    config: config4,
    BigNumber: BigNumber2
  } = _ref3;
  return config4.number === "BigNumber" ? createBigNumberPi(BigNumber2) : pi;
});
var createTau = recreateFactory("tau", ["config", "?BigNumber"], (_ref4) => {
  var {
    config: config4,
    BigNumber: BigNumber2
  } = _ref4;
  return config4.number === "BigNumber" ? createBigNumberTau(BigNumber2) : tau;
});
var createE = recreateFactory("e", ["config", "?BigNumber"], (_ref5) => {
  var {
    config: config4,
    BigNumber: BigNumber2
  } = _ref5;
  return config4.number === "BigNumber" ? createBigNumberE(BigNumber2) : e;
});
var createPhi = recreateFactory("phi", ["config", "?BigNumber"], (_ref6) => {
  var {
    config: config4,
    BigNumber: BigNumber2
  } = _ref6;
  return config4.number === "BigNumber" ? createBigNumberPhi(BigNumber2) : phi;
});
var createLN2 = recreateFactory("LN2", ["config", "?BigNumber"], (_ref7) => {
  var {
    config: config4,
    BigNumber: BigNumber2
  } = _ref7;
  return config4.number === "BigNumber" ? new BigNumber2(2).ln() : Math.LN2;
});
var createLN10 = recreateFactory("LN10", ["config", "?BigNumber"], (_ref8) => {
  var {
    config: config4,
    BigNumber: BigNumber2
  } = _ref8;
  return config4.number === "BigNumber" ? new BigNumber2(10).ln() : Math.LN10;
});
var createLOG2E = recreateFactory("LOG2E", ["config", "?BigNumber"], (_ref9) => {
  var {
    config: config4,
    BigNumber: BigNumber2
  } = _ref9;
  return config4.number === "BigNumber" ? new BigNumber2(1).div(new BigNumber2(2).ln()) : Math.LOG2E;
});
var createLOG10E = recreateFactory("LOG10E", ["config", "?BigNumber"], (_ref10) => {
  var {
    config: config4,
    BigNumber: BigNumber2
  } = _ref10;
  return config4.number === "BigNumber" ? new BigNumber2(1).div(new BigNumber2(10).ln()) : Math.LOG10E;
});
var createSQRT1_2 = recreateFactory(
  // eslint-disable-line camelcase
  "SQRT1_2",
  ["config", "?BigNumber"],
  (_ref11) => {
    var {
      config: config4,
      BigNumber: BigNumber2
    } = _ref11;
    return config4.number === "BigNumber" ? new BigNumber2("0.5").sqrt() : Math.SQRT1_2;
  }
);
var createSQRT2 = recreateFactory("SQRT2", ["config", "?BigNumber"], (_ref12) => {
  var {
    config: config4,
    BigNumber: BigNumber2
  } = _ref12;
  return config4.number === "BigNumber" ? new BigNumber2(2).sqrt() : Math.SQRT2;
});
var createI = recreateFactory("i", ["Complex"], (_ref13) => {
  var {
    Complex: Complex3
  } = _ref13;
  return Complex3.I;
});
var createUppercasePi = factory("PI", ["pi"], (_ref14) => {
  var {
    pi: pi3
  } = _ref14;
  return pi3;
});
var createUppercaseE = factory("E", ["e"], (_ref15) => {
  var {
    e: e3
  } = _ref15;
  return e3;
});
var createVersion = factory("version", [], () => version);
function recreateFactory(name314, dependencies314, create3) {
  return factory(name314, dependencies314, create3, {
    recreateOnConfigChange: true
  });
}

// node_modules/mathjs/lib/esm/type/unit/physicalConstants.js
var createSpeedOfLight = unitFactory("speedOfLight", "299792458", "m s^-1");
var createGravitationConstant = unitFactory("gravitationConstant", "6.67430e-11", "m^3 kg^-1 s^-2");
var createPlanckConstant = unitFactory("planckConstant", "6.62607015e-34", "J s");
var createReducedPlanckConstant = unitFactory("reducedPlanckConstant", "1.0545718176461565e-34", "J s");
var createMagneticConstant = unitFactory("magneticConstant", "1.25663706212e-6", "N A^-2");
var createElectricConstant = unitFactory("electricConstant", "8.8541878128e-12", "F m^-1");
var createVacuumImpedance = unitFactory("vacuumImpedance", "376.730313667", "ohm");
var createCoulomb = unitFactory("coulomb", "8.987551792261171e9", "N m^2 C^-2");
var createElementaryCharge = unitFactory("elementaryCharge", "1.602176634e-19", "C");
var createBohrMagneton = unitFactory("bohrMagneton", "9.2740100783e-24", "J T^-1");
var createConductanceQuantum = unitFactory("conductanceQuantum", "7.748091729863649e-5", "S");
var createInverseConductanceQuantum = unitFactory("inverseConductanceQuantum", "12906.403729652257", "ohm");
var createMagneticFluxQuantum = unitFactory("magneticFluxQuantum", "2.0678338484619295e-15", "Wb");
var createNuclearMagneton = unitFactory("nuclearMagneton", "5.0507837461e-27", "J T^-1");
var createKlitzing = unitFactory("klitzing", "25812.807459304513", "ohm");
var createJosephson = unitFactory("josephson", "4.835978484169836e14 Hz V", "Hz V^-1");
var createBohrRadius = unitFactory("bohrRadius", "5.29177210903e-11", "m");
var createClassicalElectronRadius = unitFactory("classicalElectronRadius", "2.8179403262e-15", "m");
var createElectronMass = unitFactory("electronMass", "9.1093837015e-31", "kg");
var createFermiCoupling = unitFactory("fermiCoupling", "1.1663787e-5", "GeV^-2");
var createFineStructure = numberFactory("fineStructure", 0.0072973525693);
var createHartreeEnergy = unitFactory("hartreeEnergy", "4.3597447222071e-18", "J");
var createProtonMass = unitFactory("protonMass", "1.67262192369e-27", "kg");
var createDeuteronMass = unitFactory("deuteronMass", "3.3435830926e-27", "kg");
var createNeutronMass = unitFactory("neutronMass", "1.6749271613e-27", "kg");
var createQuantumOfCirculation = unitFactory("quantumOfCirculation", "3.6369475516e-4", "m^2 s^-1");
var createRydberg = unitFactory("rydberg", "10973731.568160", "m^-1");
var createThomsonCrossSection = unitFactory("thomsonCrossSection", "6.6524587321e-29", "m^2");
var createWeakMixingAngle = numberFactory("weakMixingAngle", 0.2229);
var createEfimovFactor = numberFactory("efimovFactor", 22.7);
var createAtomicMass = unitFactory("atomicMass", "1.66053906660e-27", "kg");
var createAvogadro = unitFactory("avogadro", "6.02214076e23", "mol^-1");
var createBoltzmann = unitFactory("boltzmann", "1.380649e-23", "J K^-1");
var createFaraday = unitFactory("faraday", "96485.33212331001", "C mol^-1");
var createFirstRadiation = unitFactory("firstRadiation", "3.7417718521927573e-16", "W m^2");
var createLoschmidt = unitFactory("loschmidt", "2.686780111798444e25", "m^-3");
var createGasConstant = unitFactory("gasConstant", "8.31446261815324", "J K^-1 mol^-1");
var createMolarPlanckConstant = unitFactory("molarPlanckConstant", "3.990312712893431e-10", "J s mol^-1");
var createMolarVolume = unitFactory("molarVolume", "0.022413969545014137", "m^3 mol^-1");
var createSackurTetrode = numberFactory("sackurTetrode", -1.16487052358);
var createSecondRadiation = unitFactory("secondRadiation", "0.014387768775039337", "m K");
var createStefanBoltzmann = unitFactory("stefanBoltzmann", "5.67037441918443e-8", "W m^-2 K^-4");
var createWienDisplacement = unitFactory("wienDisplacement", "2.897771955e-3", "m K");
var createMolarMass = unitFactory("molarMass", "0.99999999965e-3", "kg mol^-1");
var createMolarMassC12 = unitFactory("molarMassC12", "11.9999999958e-3", "kg mol^-1");
var createGravity = unitFactory("gravity", "9.80665", "m s^-2");
var createPlanckLength = unitFactory("planckLength", "1.616255e-35", "m");
var createPlanckMass = unitFactory("planckMass", "2.176435e-8", "kg");
var createPlanckTime = unitFactory("planckTime", "5.391245e-44", "s");
var createPlanckCharge = unitFactory("planckCharge", "1.87554603778e-18", "C");
var createPlanckTemperature = unitFactory("planckTemperature", "1.416785e+32", "K");
function unitFactory(name314, valueStr, unitStr) {
  var dependencies314 = ["config", "Unit", "BigNumber"];
  return factory(name314, dependencies314, (_ref) => {
    var {
      config: config4,
      Unit: Unit2,
      BigNumber: BigNumber2
    } = _ref;
    var value = config4.number === "BigNumber" ? new BigNumber2(valueStr) : parseFloat(valueStr);
    var unit2 = new Unit2(value, unitStr);
    unit2.fixPrefix = true;
    return unit2;
  });
}
function numberFactory(name314, value) {
  var dependencies314 = ["config", "BigNumber"];
  return factory(name314, dependencies314, (_ref2) => {
    var {
      config: config4,
      BigNumber: BigNumber2
    } = _ref2;
    return config4.number === "BigNumber" ? new BigNumber2(value) : value;
  });
}

// node_modules/mathjs/lib/esm/expression/transform/apply.transform.js
var name290 = "apply";
var dependencies290 = ["typed", "isInteger"];
var createApplyTransform = factory(name290, dependencies290, (_ref) => {
  var {
    typed: typed2,
    isInteger: isInteger3
  } = _ref;
  var apply2 = createApply({
    typed: typed2,
    isInteger: isInteger3
  });
  return typed2("apply", {
    "...any": function any(args) {
      var dim = args[1];
      if (isNumber(dim)) {
        args[1] = dim - 1;
      } else if (isBigNumber(dim)) {
        args[1] = dim.minus(1);
      }
      try {
        return apply2.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/column.transform.js
var name291 = "column";
var dependencies291 = ["typed", "Index", "matrix", "range"];
var createColumnTransform = factory(name291, dependencies291, (_ref) => {
  var {
    typed: typed2,
    Index: Index2,
    matrix: matrix2,
    range: range3
  } = _ref;
  var column2 = createColumn({
    typed: typed2,
    Index: Index2,
    matrix: matrix2,
    range: range3
  });
  return typed2("column", {
    "...any": function any(args) {
      var lastIndex = args.length - 1;
      var last = args[lastIndex];
      if (isNumber(last)) {
        args[lastIndex] = last - 1;
      }
      try {
        return column2.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/utils/compileInlineExpression.js
function compileInlineExpression(expression, math2, scope) {
  var symbol = expression.filter(function(node) {
    return isSymbolNode(node) && !(node.name in math2) && !scope.has(node.name);
  })[0];
  if (!symbol) {
    throw new Error('No undefined variable found in inline expression "' + expression + '"');
  }
  var name314 = symbol.name;
  var argsScope = /* @__PURE__ */ new Map();
  var subScope = new PartitionedMap(scope, argsScope, /* @__PURE__ */ new Set([name314]));
  var eq = expression.compile();
  return function inlineExpression(x) {
    argsScope.set(name314, x);
    return eq.evaluate(subScope);
  };
}

// node_modules/mathjs/lib/esm/expression/transform/filter.transform.js
var name292 = "filter";
var dependencies292 = ["typed"];
var createFilterTransform = factory(name292, dependencies292, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  function filterTransform(args, math2, scope) {
    var x, callback;
    if (args[0]) {
      x = args[0].compile().evaluate(scope);
    }
    if (args[1]) {
      if (isSymbolNode(args[1]) || isFunctionAssignmentNode(args[1])) {
        callback = args[1].compile().evaluate(scope);
      } else {
        callback = compileInlineExpression(args[1], math2, scope);
      }
    }
    return filter3(x, callback);
  }
  filterTransform.rawArgs = true;
  var filter3 = typed2("filter", {
    "Array, function": _filter,
    "Matrix, function": function MatrixFunction(x, test) {
      return x.create(_filter(x.toArray(), test));
    },
    "Array, RegExp": filterRegExp,
    "Matrix, RegExp": function MatrixRegExp(x, test) {
      return x.create(filterRegExp(x.toArray(), test));
    }
  });
  return filterTransform;
}, {
  isTransformFunction: true
});
function _filter(x, callback) {
  return filter(x, function(value, index2, array) {
    return applyCallback(callback, value, [index2 + 1], array, "filter");
  });
}

// node_modules/mathjs/lib/esm/expression/transform/forEach.transform.js
var name293 = "forEach";
var dependencies293 = ["typed"];
var createForEachTransform = factory(name293, dependencies293, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  function forEachTransform(args, math2, scope) {
    var x, callback;
    if (args[0]) {
      x = args[0].compile().evaluate(scope);
    }
    if (args[1]) {
      if (isSymbolNode(args[1]) || isFunctionAssignmentNode(args[1])) {
        callback = args[1].compile().evaluate(scope);
      } else {
        callback = compileInlineExpression(args[1], math2, scope);
      }
    }
    return _forEach2(x, callback);
  }
  forEachTransform.rawArgs = true;
  var _forEach2 = typed2("forEach", {
    "Array | Matrix, function": function ArrayMatrixFunction(array, callback) {
      var recurse = function recurse2(value, index2) {
        if (Array.isArray(value)) {
          forEach(value, function(child, i2) {
            recurse2(child, index2.concat(i2 + 1));
          });
        } else {
          return applyCallback(callback, value, index2, array, "forEach");
        }
      };
      recurse(array.valueOf(), []);
    }
  });
  return forEachTransform;
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/index.transform.js
var name294 = "index";
var dependencies294 = ["Index", "getMatrixDataType"];
var createIndexTransform = factory(name294, dependencies294, (_ref) => {
  var {
    Index: Index2,
    getMatrixDataType: getMatrixDataType2
  } = _ref;
  return function indexTransform() {
    var args = [];
    for (var i2 = 0, ii = arguments.length; i2 < ii; i2++) {
      var arg2 = arguments[i2];
      if (isRange(arg2)) {
        arg2.start--;
        arg2.end -= arg2.step > 0 ? 0 : 2;
      } else if (arg2 && arg2.isSet === true) {
        arg2 = arg2.map(function(v) {
          return v - 1;
        });
      } else if (isArray(arg2) || isMatrix(arg2)) {
        if (getMatrixDataType2(arg2) !== "boolean") {
          arg2 = arg2.map(function(v) {
            return v - 1;
          });
        }
      } else if (isNumber(arg2)) {
        arg2--;
      } else if (isBigNumber(arg2)) {
        arg2 = arg2.toNumber() - 1;
      } else if (typeof arg2 === "string") {
      } else {
        throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range");
      }
      args[i2] = arg2;
    }
    var res = new Index2();
    Index2.apply(res, args);
    return res;
  };
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/map.transform.js
var name295 = "map";
var dependencies295 = ["typed"];
var createMapTransform = factory(name295, dependencies295, (_ref) => {
  var {
    typed: typed2
  } = _ref;
  function mapTransform(args, math2, scope) {
    var x, callback;
    if (args[0]) {
      x = args[0].compile().evaluate(scope);
    }
    if (args[1]) {
      if (isSymbolNode(args[1]) || isFunctionAssignmentNode(args[1])) {
        callback = args[1].compile().evaluate(scope);
      } else {
        callback = compileInlineExpression(args[1], math2, scope);
      }
    }
    return map3(x, callback);
  }
  mapTransform.rawArgs = true;
  var map3 = typed2("map", {
    "Array, function": function ArrayFunction(x, callback) {
      return _map2(x, callback, x);
    },
    "Matrix, function": function MatrixFunction(x, callback) {
      return x.create(_map2(x.valueOf(), callback, x));
    }
  });
  return mapTransform;
}, {
  isTransformFunction: true
});
function _map2(array, callback, orig) {
  function recurse(value, index2) {
    if (Array.isArray(value)) {
      return map(value, function(child, i2) {
        return recurse(child, index2.concat(i2 + 1));
      });
    } else {
      return applyCallback(callback, value, index2, orig, "map");
    }
  }
  return recurse(array, []);
}

// node_modules/mathjs/lib/esm/expression/transform/utils/lastDimToZeroBase.js
function lastDimToZeroBase(args) {
  if (args.length === 2 && isCollection(args[0])) {
    args = args.slice();
    var dim = args[1];
    if (isNumber(dim)) {
      args[1] = dim - 1;
    } else if (isBigNumber(dim)) {
      args[1] = dim.minus(1);
    }
  }
  return args;
}

// node_modules/mathjs/lib/esm/expression/transform/max.transform.js
var name296 = "max";
var dependencies296 = ["typed", "config", "numeric", "larger"];
var createMaxTransform = factory(name296, dependencies296, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    numeric: numeric3,
    larger: larger2
  } = _ref;
  var max3 = createMax({
    typed: typed2,
    config: config4,
    numeric: numeric3,
    larger: larger2
  });
  return typed2("max", {
    "...any": function any(args) {
      args = lastDimToZeroBase(args);
      try {
        return max3.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/mean.transform.js
var name297 = "mean";
var dependencies297 = ["typed", "add", "divide"];
var createMeanTransform = factory(name297, dependencies297, (_ref) => {
  var {
    typed: typed2,
    add: add4,
    divide: divide3
  } = _ref;
  var mean2 = createMean({
    typed: typed2,
    add: add4,
    divide: divide3
  });
  return typed2("mean", {
    "...any": function any(args) {
      args = lastDimToZeroBase(args);
      try {
        return mean2.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/min.transform.js
var name298 = "min";
var dependencies298 = ["typed", "config", "numeric", "smaller"];
var createMinTransform = factory(name298, dependencies298, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    numeric: numeric3,
    smaller: smaller2
  } = _ref;
  var min3 = createMin({
    typed: typed2,
    config: config4,
    numeric: numeric3,
    smaller: smaller2
  });
  return typed2("min", {
    "...any": function any(args) {
      args = lastDimToZeroBase(args);
      try {
        return min3.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/range.transform.js
var name299 = "range";
var dependencies299 = ["typed", "config", "?matrix", "?bignumber", "smaller", "smallerEq", "larger", "largerEq", "add", "isPositive"];
var createRangeTransform = factory(name299, dependencies299, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    matrix: matrix2,
    bignumber: bignumber2,
    smaller: smaller2,
    smallerEq: smallerEq2,
    larger: larger2,
    largerEq: largerEq2,
    add: add4,
    isPositive: isPositive2
  } = _ref;
  var range3 = createRange({
    typed: typed2,
    config: config4,
    matrix: matrix2,
    bignumber: bignumber2,
    smaller: smaller2,
    smallerEq: smallerEq2,
    larger: larger2,
    largerEq: largerEq2,
    add: add4,
    isPositive: isPositive2
  });
  return typed2("range", {
    "...any": function any(args) {
      var lastIndex = args.length - 1;
      var last = args[lastIndex];
      if (typeof last !== "boolean") {
        args.push(true);
      }
      return range3.apply(null, args);
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/row.transform.js
var name300 = "row";
var dependencies300 = ["typed", "Index", "matrix", "range"];
var createRowTransform = factory(name300, dependencies300, (_ref) => {
  var {
    typed: typed2,
    Index: Index2,
    matrix: matrix2,
    range: range3
  } = _ref;
  var row2 = createRow({
    typed: typed2,
    Index: Index2,
    matrix: matrix2,
    range: range3
  });
  return typed2("row", {
    "...any": function any(args) {
      var lastIndex = args.length - 1;
      var last = args[lastIndex];
      if (isNumber(last)) {
        args[lastIndex] = last - 1;
      }
      try {
        return row2.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/subset.transform.js
var name301 = "subset";
var dependencies301 = ["typed", "matrix", "zeros", "add"];
var createSubsetTransform = factory(name301, dependencies301, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    zeros: zeros3,
    add: add4
  } = _ref;
  var subset2 = createSubset({
    typed: typed2,
    matrix: matrix2,
    zeros: zeros3,
    add: add4
  });
  return typed2("subset", {
    "...any": function any(args) {
      try {
        return subset2.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/concat.transform.js
var name302 = "concat";
var dependencies302 = ["typed", "matrix", "isInteger"];
var createConcatTransform = factory(name302, dependencies302, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    isInteger: isInteger3
  } = _ref;
  var concat4 = createConcat({
    typed: typed2,
    matrix: matrix2,
    isInteger: isInteger3
  });
  return typed2("concat", {
    "...any": function any(args) {
      var lastIndex = args.length - 1;
      var last = args[lastIndex];
      if (isNumber(last)) {
        args[lastIndex] = last - 1;
      } else if (isBigNumber(last)) {
        args[lastIndex] = last.minus(1);
      }
      try {
        return concat4.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/diff.transform.js
var name303 = "diff";
var dependencies303 = ["typed", "matrix", "subtract", "number", "bignumber"];
var createDiffTransform = factory(name303, dependencies303, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    subtract: subtract2,
    number: number2,
    bignumber: bignumber2
  } = _ref;
  var diff2 = createDiff({
    typed: typed2,
    matrix: matrix2,
    subtract: subtract2,
    number: number2,
    bignumber: bignumber2
  });
  return typed2(name303, {
    "...any": function any(args) {
      args = lastDimToZeroBase(args);
      try {
        return diff2.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/std.transform.js
var name304 = "std";
var dependencies304 = ["typed", "map", "sqrt", "variance"];
var createStdTransform = factory(name304, dependencies304, (_ref) => {
  var {
    typed: typed2,
    map: map3,
    sqrt: sqrt3,
    variance: variance2
  } = _ref;
  var std2 = createStd({
    typed: typed2,
    map: map3,
    sqrt: sqrt3,
    variance: variance2
  });
  return typed2("std", {
    "...any": function any(args) {
      args = lastDimToZeroBase(args);
      try {
        return std2.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/sum.transform.js
var name305 = "sum";
var dependencies305 = ["typed", "config", "add", "numeric"];
var createSumTransform = factory(name305, dependencies305, (_ref) => {
  var {
    typed: typed2,
    config: config4,
    add: add4,
    numeric: numeric3
  } = _ref;
  var sum3 = createSum({
    typed: typed2,
    config: config4,
    add: add4,
    numeric: numeric3
  });
  return typed2(name305, {
    "...any": function any(args) {
      args = lastDimToZeroBase(args);
      try {
        return sum3.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/quantileSeq.transform.js
var name306 = "quantileSeq";
var dependencies306 = ["typed", "bignumber", "add", "subtract", "divide", "multiply", "partitionSelect", "compare", "isInteger", "smaller", "smallerEq", "larger"];
var createQuantileSeqTransform = factory(name306, dependencies306, (_ref) => {
  var {
    typed: typed2,
    bignumber: bignumber2,
    add: add4,
    subtract: subtract2,
    divide: divide3,
    multiply: multiply2,
    partitionSelect: partitionSelect2,
    compare: compare2,
    isInteger: isInteger3,
    smaller: smaller2,
    smallerEq: smallerEq2,
    larger: larger2
  } = _ref;
  var quantileSeq2 = createQuantileSeq({
    typed: typed2,
    bignumber: bignumber2,
    add: add4,
    subtract: subtract2,
    divide: divide3,
    multiply: multiply2,
    partitionSelect: partitionSelect2,
    compare: compare2,
    isInteger: isInteger3,
    smaller: smaller2,
    smallerEq: smallerEq2,
    larger: larger2
  });
  return typed2("quantileSeq", {
    "Array | Matrix, number | BigNumber": quantileSeq2,
    "Array | Matrix, number | BigNumber, number": (arr, prob, dim) => quantileSeq2(arr, prob, dimToZeroBase(dim)),
    "Array | Matrix, number | BigNumber, boolean": quantileSeq2,
    "Array | Matrix, number | BigNumber, boolean, number": (arr, prob, sorted, dim) => quantileSeq2(arr, prob, sorted, dimToZeroBase(dim)),
    "Array | Matrix, Array | Matrix": quantileSeq2,
    "Array | Matrix, Array | Matrix, number": (data, prob, dim) => quantileSeq2(data, prob, dimToZeroBase(dim)),
    "Array | Matrix, Array | Matrix, boolean": quantileSeq2,
    "Array | Matrix, Array | Matrix, boolean, number": (data, prob, sorted, dim) => quantileSeq2(data, prob, sorted, dimToZeroBase(dim))
  });
  function dimToZeroBase(dim) {
    return lastDimToZeroBase([[], dim])[1];
  }
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/cumsum.transform.js
var name307 = "cumsum";
var dependencies307 = ["typed", "add", "unaryPlus"];
var createCumSumTransform = factory(name307, dependencies307, (_ref) => {
  var {
    typed: typed2,
    add: add4,
    unaryPlus: unaryPlus2
  } = _ref;
  var cumsum2 = createCumSum({
    typed: typed2,
    add: add4,
    unaryPlus: unaryPlus2
  });
  return typed2(name307, {
    "...any": function any(args) {
      if (args.length === 2 && isCollection(args[0])) {
        var dim = args[1];
        if (isNumber(dim)) {
          args[1] = dim - 1;
        } else if (isBigNumber(dim)) {
          args[1] = dim.minus(1);
        }
      }
      try {
        return cumsum2.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/variance.transform.js
var name308 = "variance";
var dependencies308 = ["typed", "add", "subtract", "multiply", "divide", "apply", "isNaN"];
var createVarianceTransform = factory(name308, dependencies308, (_ref) => {
  var {
    typed: typed2,
    add: add4,
    subtract: subtract2,
    multiply: multiply2,
    divide: divide3,
    apply: apply2,
    isNaN: isNaN3
  } = _ref;
  var variance2 = createVariance({
    typed: typed2,
    add: add4,
    subtract: subtract2,
    multiply: multiply2,
    divide: divide3,
    apply: apply2,
    isNaN: isNaN3
  });
  return typed2(name308, {
    "...any": function any(args) {
      args = lastDimToZeroBase(args);
      try {
        return variance2.apply(null, args);
      } catch (err) {
        throw errorTransform(err);
      }
    }
  });
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/print.transform.js
var name309 = "print";
var dependencies309 = ["typed", "matrix", "zeros", "add"];
var createPrintTransform = factory(name309, dependencies309, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    zeros: zeros3,
    add: add4
  } = _ref;
  var print2 = createPrint({
    typed: typed2,
    matrix: matrix2,
    zeros: zeros3,
    add: add4
  });
  return typed2(name309, {
    "string, Object | Array": function stringObjectArray(template, values) {
      return print2(_convertTemplateToZeroBasedIndex(template), values);
    },
    "string, Object | Array, number | Object": function stringObjectArrayNumberObject(template, values, options) {
      return print2(_convertTemplateToZeroBasedIndex(template), values, options);
    }
  });
  function _convertTemplateToZeroBasedIndex(template) {
    return template.replace(printTemplate, (x) => {
      var parts = x.slice(1).split(".");
      var result = parts.map(function(part) {
        if (!isNaN(part) && part.length > 0) {
          return parseInt(part) - 1;
        } else {
          return part;
        }
      });
      return "$" + result.join(".");
    });
  }
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/and.transform.js
var name310 = "and";
var dependencies310 = ["typed", "matrix", "zeros", "add", "equalScalar", "not", "concat"];
var createAndTransform = factory(name310, dependencies310, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    not: not2,
    concat: concat4
  } = _ref;
  var and2 = createAnd({
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    not: not2,
    concat: concat4
  });
  function andTransform(args, math2, scope) {
    var condition1 = args[0].compile().evaluate(scope);
    if (!isCollection(condition1) && !and2(condition1, true)) {
      return false;
    }
    var condition2 = args[1].compile().evaluate(scope);
    return and2(condition1, condition2);
  }
  andTransform.rawArgs = true;
  return andTransform;
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/or.transform.js
var name311 = "or";
var dependencies311 = ["typed", "matrix", "equalScalar", "DenseMatrix", "concat"];
var createOrTransform = factory(name311, dependencies311, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var or2 = createOr({
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  });
  function orTransform(args, math2, scope) {
    var condition1 = args[0].compile().evaluate(scope);
    if (!isCollection(condition1) && or2(condition1, false)) {
      return true;
    }
    var condition2 = args[1].compile().evaluate(scope);
    return or2(condition1, condition2);
  }
  orTransform.rawArgs = true;
  return orTransform;
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/bitAnd.transform.js
var name312 = "bitAnd";
var dependencies312 = ["typed", "matrix", "zeros", "add", "equalScalar", "not", "concat"];
var createBitAndTransform = factory(name312, dependencies312, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    not: not2,
    concat: concat4
  } = _ref;
  var bitAnd2 = createBitAnd({
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    zeros: zeros3,
    not: not2,
    concat: concat4
  });
  function bitAndTransform(args, math2, scope) {
    var condition1 = args[0].compile().evaluate(scope);
    if (!isCollection(condition1)) {
      if (isNaN(condition1)) {
        return NaN;
      }
      if (condition1 === 0 || condition1 === false) {
        return 0;
      }
    }
    var condition2 = args[1].compile().evaluate(scope);
    return bitAnd2(condition1, condition2);
  }
  bitAndTransform.rawArgs = true;
  return bitAndTransform;
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/expression/transform/bitOr.transform.js
var name313 = "bitOr";
var dependencies313 = ["typed", "matrix", "equalScalar", "DenseMatrix", "concat"];
var createBitOrTransform = factory(name313, dependencies313, (_ref) => {
  var {
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  } = _ref;
  var bitOr2 = createBitOr({
    typed: typed2,
    matrix: matrix2,
    equalScalar: equalScalar2,
    DenseMatrix: DenseMatrix2,
    concat: concat4
  });
  function bitOrTransform(args, math2, scope) {
    var condition1 = args[0].compile().evaluate(scope);
    if (!isCollection(condition1)) {
      if (isNaN(condition1)) {
        return NaN;
      }
      if (condition1 === -1) {
        return -1;
      }
      if (condition1 === true) {
        return 1;
      }
    }
    var condition2 = args[1].compile().evaluate(scope);
    return bitOr2(condition1, condition2);
  }
  bitOrTransform.rawArgs = true;
  return bitOrTransform;
}, {
  isTransformFunction: true
});

// node_modules/mathjs/lib/esm/entry/pureFunctionsAny.generated.js
var BigNumber = createBigNumberClass({
  config
});
var Complex2 = createComplexClass({});
var e2 = createE({
  BigNumber,
  config
});
var _false = createFalse({});
var fineStructure = createFineStructure({
  BigNumber,
  config
});
var Fraction2 = createFractionClass({});
var i = createI({
  Complex: Complex2
});
var _Infinity = createInfinity({
  BigNumber,
  config
});
var LN102 = createLN10({
  BigNumber,
  config
});
var LOG10E = createLOG10E({
  BigNumber,
  config
});
var Matrix = createMatrixClass({});
var _NaN = createNaN({
  BigNumber,
  config
});
var _null = createNull({});
var phi2 = createPhi({
  BigNumber,
  config
});
var Range = createRangeClass({});
var ResultSet = createResultSet({});
var SQRT1_2 = createSQRT1_2({
  BigNumber,
  config
});
var sackurTetrode = createSackurTetrode({
  BigNumber,
  config
});
var tau2 = createTau({
  BigNumber,
  config
});
var _true = createTrue({});
var version2 = createVersion({});
var DenseMatrix = createDenseMatrixClass({
  Matrix
});
var efimovFactor = createEfimovFactor({
  BigNumber,
  config
});
var LN2 = createLN2({
  BigNumber,
  config
});
var pi2 = createPi({
  BigNumber,
  config
});
var replacer = createReplacer({});
var SQRT2 = createSQRT2({
  BigNumber,
  config
});
var typed = createTyped({
  BigNumber,
  Complex: Complex2,
  DenseMatrix,
  Fraction: Fraction2
});
var unaryPlus = createUnaryPlus({
  BigNumber,
  config,
  typed
});
var weakMixingAngle = createWeakMixingAngle({
  BigNumber,
  config
});
var abs2 = createAbs({
  typed
});
var acos2 = createAcos({
  Complex: Complex2,
  config,
  typed
});
var acot = createAcot({
  BigNumber,
  typed
});
var acsc = createAcsc({
  BigNumber,
  Complex: Complex2,
  config,
  typed
});
var addScalar = createAddScalar({
  typed
});
var arg = createArg({
  typed
});
var asech = createAsech({
  BigNumber,
  Complex: Complex2,
  config,
  typed
});
var asinh3 = createAsinh({
  typed
});
var atan3 = createAtan({
  typed
});
var atanh3 = createAtanh({
  Complex: Complex2,
  config,
  typed
});
var bignumber = createBignumber({
  BigNumber,
  typed
});
var bitNot = createBitNot({
  typed
});
var boolean = createBoolean({
  typed
});
var clone4 = createClone({
  typed
});
var combinations = createCombinations({
  typed
});
var complex = createComplex({
  Complex: Complex2,
  typed
});
var conj = createConj({
  typed
});
var cos2 = createCos({
  typed
});
var cot = createCot({
  BigNumber,
  typed
});
var csc = createCsc({
  BigNumber,
  typed
});
var cube = createCube({
  typed
});
var equalScalar = createEqualScalar({
  config,
  typed
});
var erf = createErf({
  typed
});
var exp2 = createExp({
  typed
});
var expm13 = createExpm1({
  Complex: Complex2,
  typed
});
var filter2 = createFilter({
  typed
});
var forEach2 = createForEach({
  typed
});
var format4 = createFormat({
  typed
});
var getMatrixDataType = createGetMatrixDataType({
  typed
});
var hex = createHex({
  format: format4,
  typed
});
var im = createIm({
  typed
});
var isInteger2 = createIsInteger({
  typed
});
var isNegative = createIsNegative({
  typed
});
var isPositive = createIsPositive({
  typed
});
var isZero = createIsZero({
  typed
});
var LOG2E = createLOG2E({
  BigNumber,
  config
});
var lgamma = createLgamma({
  Complex: Complex2,
  typed
});
var log104 = createLog10({
  Complex: Complex2,
  config,
  typed
});
var log24 = createLog2({
  Complex: Complex2,
  config,
  typed
});
var map2 = createMap2({
  typed
});
var multiplyScalar = createMultiplyScalar({
  typed
});
var not = createNot({
  typed
});
var number = createNumber({
  typed
});
var oct = createOct({
  format: format4,
  typed
});
var pickRandom = createPickRandom({
  config,
  typed
});
var print = createPrint({
  typed
});
var random2 = createRandom({
  config,
  typed
});
var re = createRe({
  typed
});
var sec = createSec({
  BigNumber,
  typed
});
var sign3 = createSign({
  BigNumber,
  Fraction: Fraction2,
  complex,
  typed
});
var sin2 = createSin({
  typed
});
var SparseMatrix = createSparseMatrixClass({
  Matrix,
  equalScalar,
  typed
});
var splitUnit = createSplitUnit({
  typed
});
var square = createSquare({
  typed
});
var string = createString({
  typed
});
var subtractScalar = createSubtractScalar({
  typed
});
var tan2 = createTan({
  typed
});
var typeOf2 = createTypeOf({
  typed
});
var acosh3 = createAcosh({
  Complex: Complex2,
  config,
  typed
});
var acsch = createAcsch({
  BigNumber,
  typed
});
var apply = createApply({
  isInteger: isInteger2,
  typed
});
var asec = createAsec({
  BigNumber,
  Complex: Complex2,
  config,
  typed
});
var bin = createBin({
  format: format4,
  typed
});
var combinationsWithRep = createCombinationsWithRep({
  typed
});
var cosh4 = createCosh({
  typed
});
var csch = createCsch({
  BigNumber,
  typed
});
var isNaN2 = createIsNaN({
  typed
});
var isPrime = createIsPrime({
  typed
});
var randomInt = createRandomInt({
  config,
  typed
});
var sech = createSech({
  BigNumber,
  typed
});
var sinh4 = createSinh({
  typed
});
var sparse = createSparse({
  SparseMatrix,
  typed
});
var sqrt2 = createSqrt({
  Complex: Complex2,
  config,
  typed
});
var tanh3 = createTanh({
  typed
});
var unaryMinus = createUnaryMinus({
  typed
});
var acoth = createAcoth({
  BigNumber,
  Complex: Complex2,
  config,
  typed
});
var coth = createCoth({
  BigNumber,
  typed
});
var fraction = createFraction({
  Fraction: Fraction2,
  typed
});
var isNumeric = createIsNumeric({
  typed
});
var matrix = createMatrix({
  DenseMatrix,
  Matrix,
  SparseMatrix,
  typed
});
var matrixFromFunction = createMatrixFromFunction({
  isZero,
  matrix,
  typed
});
var mode = createMode({
  isNaN: isNaN2,
  isNumeric,
  typed
});
var numeric2 = createNumeric({
  bignumber,
  fraction,
  number
});
var prod = createProd({
  config,
  multiplyScalar,
  numeric: numeric2,
  typed
});
var reshape2 = createReshape({
  isInteger: isInteger2,
  matrix,
  typed
});
var size = createSize({
  matrix,
  config,
  typed
});
var squeeze2 = createSqueeze({
  matrix,
  typed
});
var transpose = createTranspose({
  matrix,
  typed
});
var xgcd = createXgcd({
  BigNumber,
  config,
  matrix,
  typed
});
var zeros2 = createZeros({
  BigNumber,
  config,
  matrix,
  typed
});
var asin2 = createAsin({
  Complex: Complex2,
  config,
  typed
});
var cbrt4 = createCbrt({
  BigNumber,
  Complex: Complex2,
  Fraction: Fraction2,
  config,
  isNegative,
  matrix,
  typed,
  unaryMinus
});
var concat2 = createConcat({
  isInteger: isInteger2,
  matrix,
  typed
});
var count = createCount({
  prod,
  size,
  typed
});
var ctranspose = createCtranspose({
  conj,
  transpose,
  typed
});
var diag = createDiag({
  DenseMatrix,
  SparseMatrix,
  matrix,
  typed
});
var divideScalar = createDivideScalar({
  numeric: numeric2,
  typed
});
var dotDivide = createDotDivide({
  DenseMatrix,
  concat: concat2,
  divideScalar,
  equalScalar,
  matrix,
  typed
});
var equal = createEqual({
  DenseMatrix,
  concat: concat2,
  equalScalar,
  matrix,
  typed
});
var flatten2 = createFlatten({
  matrix,
  typed
});
var hasNumericValue = createHasNumericValue({
  isNumeric,
  typed
});
var identity = createIdentity({
  BigNumber,
  DenseMatrix,
  SparseMatrix,
  config,
  matrix,
  typed
});
var kron = createKron({
  matrix,
  multiplyScalar,
  typed
});
var largerEq = createLargerEq({
  DenseMatrix,
  concat: concat2,
  config,
  matrix,
  typed
});
var leftShift = createLeftShift({
  DenseMatrix,
  concat: concat2,
  equalScalar,
  matrix,
  typed,
  zeros: zeros2
});
var lsolve = createLsolve({
  DenseMatrix,
  divideScalar,
  equalScalar,
  matrix,
  multiplyScalar,
  subtractScalar,
  typed
});
var matrixFromColumns = createMatrixFromColumns({
  flatten: flatten2,
  matrix,
  size,
  typed
});
var nthRoot = createNthRoot({
  BigNumber,
  concat: concat2,
  equalScalar,
  matrix,
  typed
});
var ones = createOnes({
  BigNumber,
  config,
  matrix,
  typed
});
var qr = createQr({
  addScalar,
  complex,
  conj,
  divideScalar,
  equal,
  identity,
  isZero,
  matrix,
  multiplyScalar,
  sign: sign3,
  sqrt: sqrt2,
  subtractScalar,
  typed,
  unaryMinus,
  zeros: zeros2
});
var resize2 = createResize({
  config,
  matrix
});
var rightArithShift = createRightArithShift({
  DenseMatrix,
  concat: concat2,
  equalScalar,
  matrix,
  typed,
  zeros: zeros2
});
var round2 = createRound({
  BigNumber,
  DenseMatrix,
  config,
  equalScalar,
  matrix,
  typed,
  zeros: zeros2
});
var smaller = createSmaller({
  DenseMatrix,
  concat: concat2,
  config,
  matrix,
  typed
});
var subtract = createSubtract({
  DenseMatrix,
  concat: concat2,
  equalScalar,
  matrix,
  subtractScalar,
  typed,
  unaryMinus
});
var to = createTo({
  concat: concat2,
  matrix,
  typed
});
var unequal = createUnequal({
  DenseMatrix,
  concat: concat2,
  config,
  equalScalar,
  matrix,
  typed
});
var usolve = createUsolve({
  DenseMatrix,
  divideScalar,
  equalScalar,
  matrix,
  multiplyScalar,
  subtractScalar,
  typed
});
var xor = createXor({
  DenseMatrix,
  concat: concat2,
  matrix,
  typed
});
var add3 = createAdd({
  DenseMatrix,
  SparseMatrix,
  addScalar,
  concat: concat2,
  equalScalar,
  matrix,
  typed
});
var atan22 = createAtan2({
  BigNumber,
  DenseMatrix,
  concat: concat2,
  equalScalar,
  matrix,
  typed
});
var bitAnd = createBitAnd({
  concat: concat2,
  equalScalar,
  matrix,
  typed
});
var bitOr = createBitOr({
  DenseMatrix,
  concat: concat2,
  equalScalar,
  matrix,
  typed
});
var bitXor2 = createBitXor({
  DenseMatrix,
  concat: concat2,
  matrix,
  typed
});
var catalan = createCatalan({
  addScalar,
  combinations,
  divideScalar,
  isInteger: isInteger2,
  isNegative,
  multiplyScalar,
  typed
});
var compare = createCompare({
  BigNumber,
  DenseMatrix,
  Fraction: Fraction2,
  concat: concat2,
  config,
  equalScalar,
  matrix,
  typed
});
var compareText2 = createCompareText({
  concat: concat2,
  matrix,
  typed
});
var cumsum = createCumSum({
  add: add3,
  typed,
  unaryPlus
});
var deepEqual = createDeepEqual({
  equal,
  typed
});
var diff = createDiff({
  matrix,
  number,
  subtract,
  typed
});
var distance = createDistance({
  abs: abs2,
  addScalar,
  deepEqual,
  divideScalar,
  multiplyScalar,
  sqrt: sqrt2,
  subtractScalar,
  typed
});
var dot = createDot({
  addScalar,
  conj,
  multiplyScalar,
  size,
  typed
});
var equalText = createEqualText({
  compareText: compareText2,
  isZero,
  typed
});
var floor2 = createFloor({
  DenseMatrix,
  config,
  equalScalar,
  matrix,
  round: round2,
  typed,
  zeros: zeros2
});
var gcd = createGcd({
  BigNumber,
  DenseMatrix,
  concat: concat2,
  config,
  equalScalar,
  matrix,
  round: round2,
  typed,
  zeros: zeros2
});
var hypot3 = createHypot({
  abs: abs2,
  addScalar,
  divideScalar,
  isPositive,
  multiplyScalar,
  smaller,
  sqrt: sqrt2,
  typed
});
var ImmutableDenseMatrix = createImmutableDenseMatrixClass({
  DenseMatrix,
  smaller
});
var Index = createIndexClass({
  ImmutableDenseMatrix,
  getMatrixDataType
});
var larger = createLarger({
  DenseMatrix,
  concat: concat2,
  config,
  matrix,
  typed
});
var log3 = createLog({
  Complex: Complex2,
  config,
  divideScalar,
  typed
});
var lsolveAll = createLsolveAll({
  DenseMatrix,
  divideScalar,
  equalScalar,
  matrix,
  multiplyScalar,
  subtractScalar,
  typed
});
var matrixFromRows = createMatrixFromRows({
  flatten: flatten2,
  matrix,
  size,
  typed
});
var min2 = createMin({
  config,
  numeric: numeric2,
  smaller,
  typed
});
var mod2 = createMod({
  DenseMatrix,
  concat: concat2,
  config,
  equalScalar,
  matrix,
  round: round2,
  typed,
  zeros: zeros2
});
var multiply = createMultiply({
  addScalar,
  dot,
  equalScalar,
  matrix,
  multiplyScalar,
  typed
});
var nthRoots = createNthRoots({
  Complex: Complex2,
  config,
  divideScalar,
  typed
});
var or = createOr({
  DenseMatrix,
  concat: concat2,
  equalScalar,
  matrix,
  typed
});
var partitionSelect = createPartitionSelect({
  compare,
  isNaN: isNaN2,
  isNumeric,
  typed
});
var rightLogShift = createRightLogShift({
  DenseMatrix,
  concat: concat2,
  equalScalar,
  matrix,
  typed,
  zeros: zeros2
});
var slu = createSlu({
  SparseMatrix,
  abs: abs2,
  add: add3,
  divideScalar,
  larger,
  largerEq,
  multiply,
  subtract,
  transpose,
  typed
});
var subset = createSubset({
  add: add3,
  matrix,
  typed,
  zeros: zeros2
});
var sum2 = createSum({
  add: add3,
  config,
  numeric: numeric2,
  typed
});
var trace = createTrace({
  add: add3,
  matrix,
  typed
});
var usolveAll = createUsolveAll({
  DenseMatrix,
  divideScalar,
  equalScalar,
  matrix,
  multiplyScalar,
  subtractScalar,
  typed
});
var zpk2tf = createZpk2tf({
  Complex: Complex2,
  add: add3,
  multiply,
  number,
  typed
});
var ceil2 = createCeil({
  DenseMatrix,
  config,
  equalScalar,
  matrix,
  round: round2,
  typed,
  zeros: zeros2
});
var compareNatural = createCompareNatural({
  compare,
  typed
});
var composition = createComposition({
  addScalar,
  combinations,
  isInteger: isInteger2,
  isNegative,
  isPositive,
  larger,
  typed
});
var cross = createCross({
  matrix,
  multiply,
  subtract,
  typed
});
var det = createDet({
  divideScalar,
  isZero,
  matrix,
  multiply,
  subtractScalar,
  typed,
  unaryMinus
});
var dotMultiply = createDotMultiply({
  concat: concat2,
  equalScalar,
  matrix,
  multiplyScalar,
  typed
});
var FibonacciHeap = createFibonacciHeapClass({
  larger,
  smaller
});
var fix = createFix({
  Complex: Complex2,
  DenseMatrix,
  ceil: ceil2,
  equalScalar,
  floor: floor2,
  matrix,
  typed,
  zeros: zeros2
});
var index = createIndex({
  Index,
  typed
});
var intersect = createIntersect({
  abs: abs2,
  add: add3,
  addScalar,
  config,
  divideScalar,
  equalScalar,
  flatten: flatten2,
  isNumeric,
  isZero,
  matrix,
  multiply,
  multiplyScalar,
  smaller,
  subtract,
  typed
});
var invmod = createInvmod({
  BigNumber,
  add: add3,
  config,
  equal,
  isInteger: isInteger2,
  mod: mod2,
  smaller,
  typed,
  xgcd
});
var lcm = createLcm({
  concat: concat2,
  equalScalar,
  matrix,
  typed
});
var log1p2 = createLog1p({
  Complex: Complex2,
  config,
  divideScalar,
  log: log3,
  typed
});
var max2 = createMax({
  config,
  larger,
  numeric: numeric2,
  typed
});
var setCartesian = createSetCartesian({
  DenseMatrix,
  Index,
  compareNatural,
  size,
  subset,
  typed
});
var setDistinct = createSetDistinct({
  DenseMatrix,
  Index,
  compareNatural,
  size,
  subset,
  typed
});
var setIsSubset = createSetIsSubset({
  Index,
  compareNatural,
  size,
  subset,
  typed
});
var setPowerset = createSetPowerset({
  Index,
  compareNatural,
  size,
  subset,
  typed
});
var smallerEq = createSmallerEq({
  DenseMatrix,
  concat: concat2,
  config,
  matrix,
  typed
});
var sort = createSort({
  compare,
  compareNatural,
  matrix,
  typed
});
var and = createAnd({
  concat: concat2,
  equalScalar,
  matrix,
  not,
  typed,
  zeros: zeros2
});
var range = createRange({
  bignumber,
  matrix,
  add: add3,
  config,
  isPositive,
  larger,
  largerEq,
  smaller,
  smallerEq,
  typed
});
var row = createRow({
  Index,
  matrix,
  range,
  typed
});
var setDifference = createSetDifference({
  DenseMatrix,
  Index,
  compareNatural,
  size,
  subset,
  typed
});
var setMultiplicity = createSetMultiplicity({
  Index,
  compareNatural,
  size,
  subset,
  typed
});
var setSymDifference = createSetSymDifference({
  Index,
  concat: concat2,
  setDifference,
  size,
  subset,
  typed
});
var Spa = createSpaClass({
  FibonacciHeap,
  addScalar,
  equalScalar
});
var column = createColumn({
  Index,
  matrix,
  range,
  typed
});
var inv = createInv({
  abs: abs2,
  addScalar,
  det,
  divideScalar,
  identity,
  matrix,
  multiply,
  typed,
  unaryMinus
});
var lup = createLup({
  DenseMatrix,
  Spa,
  SparseMatrix,
  abs: abs2,
  addScalar,
  divideScalar,
  equalScalar,
  larger,
  matrix,
  multiplyScalar,
  subtractScalar,
  typed,
  unaryMinus
});
var pinv = createPinv({
  Complex: Complex2,
  add: add3,
  ctranspose,
  deepEqual,
  divideScalar,
  dot,
  dotDivide,
  equal,
  inv,
  matrix,
  multiply,
  typed
});
var pow2 = createPow({
  Complex: Complex2,
  config,
  fraction,
  identity,
  inv,
  matrix,
  multiply,
  number,
  typed
});
var setIntersect = createSetIntersect({
  DenseMatrix,
  Index,
  compareNatural,
  size,
  subset,
  typed
});
var setUnion = createSetUnion({
  Index,
  concat: concat2,
  setIntersect,
  setSymDifference,
  size,
  subset,
  typed
});
var sqrtm = createSqrtm({
  abs: abs2,
  add: add3,
  identity,
  inv,
  map: map2,
  max: max2,
  multiply,
  size,
  sqrt: sqrt2,
  subtract,
  typed
});
var Unit = createUnitClass({
  BigNumber,
  Complex: Complex2,
  Fraction: Fraction2,
  abs: abs2,
  addScalar,
  config,
  divideScalar,
  equal,
  fix,
  format: format4,
  isNumeric,
  multiplyScalar,
  number,
  pow: pow2,
  round: round2,
  subtractScalar
});
var vacuumImpedance = createVacuumImpedance({
  BigNumber,
  Unit,
  config
});
var wienDisplacement = createWienDisplacement({
  BigNumber,
  Unit,
  config
});
var atomicMass = createAtomicMass({
  BigNumber,
  Unit,
  config
});
var bohrMagneton = createBohrMagneton({
  BigNumber,
  Unit,
  config
});
var boltzmann = createBoltzmann({
  BigNumber,
  Unit,
  config
});
var conductanceQuantum = createConductanceQuantum({
  BigNumber,
  Unit,
  config
});
var coulomb = createCoulomb({
  BigNumber,
  Unit,
  config
});
var deuteronMass = createDeuteronMass({
  BigNumber,
  Unit,
  config
});
var dotPow = createDotPow({
  DenseMatrix,
  concat: concat2,
  equalScalar,
  matrix,
  pow: pow2,
  typed
});
var electricConstant = createElectricConstant({
  BigNumber,
  Unit,
  config
});
var elementaryCharge = createElementaryCharge({
  BigNumber,
  Unit,
  config
});
var expm = createExpm({
  abs: abs2,
  add: add3,
  identity,
  inv,
  multiply,
  typed
});
var faraday = createFaraday({
  BigNumber,
  Unit,
  config
});
var fft = createFft({
  addScalar,
  ceil: ceil2,
  conj,
  divideScalar,
  dotDivide,
  exp: exp2,
  i,
  log2: log24,
  matrix,
  multiplyScalar,
  pow: pow2,
  tau: tau2,
  typed
});
var gamma = createGamma({
  BigNumber,
  Complex: Complex2,
  config,
  multiplyScalar,
  pow: pow2,
  typed
});
var gravitationConstant = createGravitationConstant({
  BigNumber,
  Unit,
  config
});
var hartreeEnergy = createHartreeEnergy({
  BigNumber,
  Unit,
  config
});
var ifft = createIfft({
  conj,
  dotDivide,
  fft,
  typed
});
var klitzing = createKlitzing({
  BigNumber,
  Unit,
  config
});
var loschmidt = createLoschmidt({
  BigNumber,
  Unit,
  config
});
var magneticConstant = createMagneticConstant({
  BigNumber,
  Unit,
  config
});
var molarMass = createMolarMass({
  BigNumber,
  Unit,
  config
});
var molarPlanckConstant = createMolarPlanckConstant({
  BigNumber,
  Unit,
  config
});
var neutronMass = createNeutronMass({
  BigNumber,
  Unit,
  config
});
var nuclearMagneton = createNuclearMagneton({
  BigNumber,
  Unit,
  config
});
var planckCharge = createPlanckCharge({
  BigNumber,
  Unit,
  config
});
var planckLength = createPlanckLength({
  BigNumber,
  Unit,
  config
});
var planckTemperature = createPlanckTemperature({
  BigNumber,
  Unit,
  config
});
var protonMass = createProtonMass({
  BigNumber,
  Unit,
  config
});
var quantumOfCirculation = createQuantumOfCirculation({
  BigNumber,
  Unit,
  config
});
var reducedPlanckConstant = createReducedPlanckConstant({
  BigNumber,
  Unit,
  config
});
var rydberg = createRydberg({
  BigNumber,
  Unit,
  config
});
var secondRadiation = createSecondRadiation({
  BigNumber,
  Unit,
  config
});
var speedOfLight = createSpeedOfLight({
  BigNumber,
  Unit,
  config
});
var stefanBoltzmann = createStefanBoltzmann({
  BigNumber,
  Unit,
  config
});
var thomsonCrossSection = createThomsonCrossSection({
  BigNumber,
  Unit,
  config
});
var avogadro = createAvogadro({
  BigNumber,
  Unit,
  config
});
var bohrRadius = createBohrRadius({
  BigNumber,
  Unit,
  config
});
var createUnit = createCreateUnit({
  Unit,
  typed
});
var divide2 = createDivide({
  divideScalar,
  equalScalar,
  inv,
  matrix,
  multiply,
  typed
});
var electronMass = createElectronMass({
  BigNumber,
  Unit,
  config
});
var factorial = createFactorial({
  gamma,
  typed
});
var firstRadiation = createFirstRadiation({
  BigNumber,
  Unit,
  config
});
var gravity = createGravity({
  BigNumber,
  Unit,
  config
});
var inverseConductanceQuantum = createInverseConductanceQuantum({
  BigNumber,
  Unit,
  config
});
var lusolve = createLusolve({
  DenseMatrix,
  lsolve,
  lup,
  matrix,
  slu,
  typed,
  usolve
});
var magneticFluxQuantum = createMagneticFluxQuantum({
  BigNumber,
  Unit,
  config
});
var molarMassC12 = createMolarMassC12({
  BigNumber,
  Unit,
  config
});
var multinomial = createMultinomial({
  add: add3,
  divide: divide2,
  factorial,
  isInteger: isInteger2,
  isPositive,
  multiply,
  typed
});
var permutations = createPermutations({
  factorial,
  typed
});
var planckMass = createPlanckMass({
  BigNumber,
  Unit,
  config
});
var polynomialRoot = createPolynomialRoot({
  add: add3,
  cbrt: cbrt4,
  divide: divide2,
  equalScalar,
  im,
  isZero,
  multiply,
  re,
  sqrt: sqrt2,
  subtract,
  typeOf: typeOf2,
  typed,
  unaryMinus
});
var setSize = createSetSize({
  compareNatural,
  typed
});
var solveODE = createSolveODE({
  abs: abs2,
  add: add3,
  bignumber,
  divide: divide2,
  isNegative,
  isPositive,
  larger,
  map: map2,
  matrix,
  max: max2,
  multiply,
  smaller,
  subtract,
  typed,
  unaryMinus
});
var stirlingS2 = createStirlingS2({
  bignumber,
  addScalar,
  combinations,
  divideScalar,
  factorial,
  isInteger: isInteger2,
  isNegative,
  larger,
  multiplyScalar,
  number,
  pow: pow2,
  subtractScalar,
  typed
});
var unit = createUnitFunction({
  Unit,
  typed
});
var bellNumbers = createBellNumbers({
  addScalar,
  isInteger: isInteger2,
  isNegative,
  stirlingS2,
  typed
});
var eigs = createEigs({
  abs: abs2,
  add: add3,
  addScalar,
  atan: atan3,
  bignumber,
  column,
  complex,
  config,
  cos: cos2,
  diag,
  divideScalar,
  dot,
  equal,
  flatten: flatten2,
  im,
  inv,
  larger,
  matrix,
  matrixFromColumns,
  multiply,
  multiplyScalar,
  number,
  qr,
  re,
  reshape: reshape2,
  sin: sin2,
  size,
  smaller,
  sqrt: sqrt2,
  subtract,
  typed,
  usolve,
  usolveAll
});
var fermiCoupling = createFermiCoupling({
  BigNumber,
  Unit,
  config
});
var gasConstant = createGasConstant({
  BigNumber,
  Unit,
  config
});
var kldivergence = createKldivergence({
  divide: divide2,
  dotDivide,
  isNumeric,
  log: log3,
  map: map2,
  matrix,
  multiply,
  sum: sum2,
  typed
});
var mean = createMean({
  add: add3,
  divide: divide2,
  typed
});
var molarVolume = createMolarVolume({
  BigNumber,
  Unit,
  config
});
var planckConstant = createPlanckConstant({
  BigNumber,
  Unit,
  config
});
var quantileSeq = createQuantileSeq({
  bignumber,
  add: add3,
  compare,
  divide: divide2,
  isInteger: isInteger2,
  larger,
  multiply,
  partitionSelect,
  smaller,
  smallerEq,
  subtract,
  typed
});
var variance = createVariance({
  add: add3,
  apply,
  divide: divide2,
  isNaN: isNaN2,
  multiply,
  subtract,
  typed
});
var classicalElectronRadius = createClassicalElectronRadius({
  BigNumber,
  Unit,
  config
});
var median = createMedian({
  add: add3,
  compare,
  divide: divide2,
  partitionSelect,
  typed
});
var corr = createCorr({
  add: add3,
  divide: divide2,
  matrix,
  mean,
  multiply,
  pow: pow2,
  sqrt: sqrt2,
  subtract,
  sum: sum2,
  typed
});
var freqz = createFreqz({
  Complex: Complex2,
  add: add3,
  divide: divide2,
  matrix,
  multiply,
  typed
});
var mad = createMad({
  abs: abs2,
  map: map2,
  median,
  subtract,
  typed
});
var std = createStd({
  map: map2,
  sqrt: sqrt2,
  typed,
  variance
});
var zeta = createZeta({
  BigNumber,
  Complex: Complex2,
  add: add3,
  config,
  divide: divide2,
  equal,
  factorial,
  gamma,
  isNegative,
  multiply,
  pi: pi2,
  pow: pow2,
  sin: sin2,
  smallerEq,
  subtract,
  typed
});
var norm = createNorm({
  abs: abs2,
  add: add3,
  conj,
  ctranspose,
  eigs,
  equalScalar,
  larger,
  matrix,
  multiply,
  pow: pow2,
  smaller,
  sqrt: sqrt2,
  typed
});
var rotationMatrix = createRotationMatrix({
  BigNumber,
  DenseMatrix,
  SparseMatrix,
  addScalar,
  config,
  cos: cos2,
  matrix,
  multiplyScalar,
  norm,
  sin: sin2,
  typed,
  unaryMinus
});
var planckTime = createPlanckTime({
  BigNumber,
  Unit,
  config
});
var schur = createSchur({
  identity,
  matrix,
  multiply,
  norm,
  qr,
  subtract,
  typed
});
var rotate = createRotate({
  multiply,
  rotationMatrix,
  typed
});
var sylvester = createSylvester({
  abs: abs2,
  add: add3,
  concat: concat2,
  identity,
  index,
  lusolve,
  matrix,
  matrixFromColumns,
  multiply,
  range,
  schur,
  subset,
  subtract,
  transpose,
  typed
});
var lyap = createLyap({
  matrix,
  multiply,
  sylvester,
  transpose,
  typed
});

// node_modules/mathjs/lib/esm/entry/impureFunctionsAny.generated.js
var math = {};
var mathWithTransform = {};
var classes = {};
var Node = createNode({
  mathWithTransform
});
var ObjectNode = createObjectNode({
  Node
});
var OperatorNode = createOperatorNode({
  Node
});
var ParenthesisNode = createParenthesisNode({
  Node
});
var RelationalNode = createRelationalNode({
  Node
});
var ArrayNode = createArrayNode({
  Node
});
var BlockNode = createBlockNode({
  Node,
  ResultSet
});
var ConditionalNode = createConditionalNode({
  Node
});
var ConstantNode = createConstantNode({
  Node
});
var RangeNode = createRangeNode({
  Node
});
var reviver = createReviver({
  classes
});
var Chain = createChainClass({
  math,
  typed
});
var FunctionAssignmentNode = createFunctionAssignmentNode({
  Node,
  typed
});
var chain = createChain({
  Chain,
  typed
});
var IndexNode = createIndexNode({
  Node,
  size
});
var AccessorNode = createAccessorNode({
  Node,
  subset
});
var AssignmentNode = createAssignmentNode({
  matrix,
  Node,
  subset
});
var SymbolNode = createSymbolNode({
  Unit,
  Node,
  math
});
var FunctionNode = createFunctionNode({
  Node,
  SymbolNode,
  math
});
var parse2 = createParse({
  AccessorNode,
  ArrayNode,
  AssignmentNode,
  BlockNode,
  ConditionalNode,
  ConstantNode,
  FunctionAssignmentNode,
  FunctionNode,
  IndexNode,
  ObjectNode,
  OperatorNode,
  ParenthesisNode,
  RangeNode,
  RelationalNode,
  SymbolNode,
  config,
  numeric: numeric2,
  typed
});
var resolve = createResolve({
  ConstantNode,
  FunctionNode,
  OperatorNode,
  ParenthesisNode,
  parse: parse2,
  typed
});
var simplifyConstant = createSimplifyConstant({
  bignumber,
  fraction,
  AccessorNode,
  ArrayNode,
  ConstantNode,
  FunctionNode,
  IndexNode,
  ObjectNode,
  OperatorNode,
  SymbolNode,
  config,
  mathWithTransform,
  matrix,
  typed
});
var compile = createCompile({
  parse: parse2,
  typed
});
var simplifyCore = createSimplifyCore({
  AccessorNode,
  ArrayNode,
  ConstantNode,
  FunctionNode,
  IndexNode,
  ObjectNode,
  OperatorNode,
  ParenthesisNode,
  SymbolNode,
  add: add3,
  divide: divide2,
  equal,
  isZero,
  multiply,
  parse: parse2,
  pow: pow2,
  subtract,
  typed
});
var evaluate = createEvaluate({
  parse: parse2,
  typed
});
var Help = createHelpClass({
  evaluate
});
var Parser = createParserClass({
  evaluate
});
var simplify = createSimplify({
  bignumber,
  fraction,
  AccessorNode,
  ArrayNode,
  ConstantNode,
  FunctionNode,
  IndexNode,
  ObjectNode,
  OperatorNode,
  ParenthesisNode,
  SymbolNode,
  add: add3,
  config,
  divide: divide2,
  equal,
  isZero,
  mathWithTransform,
  matrix,
  multiply,
  parse: parse2,
  pow: pow2,
  resolve,
  simplifyConstant,
  simplifyCore,
  subtract,
  typed
});
var symbolicEqual = createSymbolicEqual({
  OperatorNode,
  parse: parse2,
  simplify,
  typed
});
var leafCount = createLeafCount({
  parse: parse2,
  typed
});
var parser = createParser({
  Parser,
  typed
});
var rationalize = createRationalize({
  bignumber,
  fraction,
  AccessorNode,
  ArrayNode,
  ConstantNode,
  FunctionNode,
  IndexNode,
  ObjectNode,
  OperatorNode,
  ParenthesisNode,
  SymbolNode,
  add: add3,
  config,
  divide: divide2,
  equal,
  isZero,
  mathWithTransform,
  matrix,
  multiply,
  parse: parse2,
  pow: pow2,
  simplify,
  simplifyConstant,
  simplifyCore,
  subtract,
  typed
});
var derivative = createDerivative({
  ConstantNode,
  FunctionNode,
  OperatorNode,
  ParenthesisNode,
  SymbolNode,
  config,
  equal,
  isZero,
  numeric: numeric2,
  parse: parse2,
  simplify,
  typed
});
var help = createHelp({
  Help,
  mathWithTransform,
  typed
});
_extends(math, {
  e: e2,
  false: _false,
  fineStructure,
  i,
  Infinity: _Infinity,
  LN10: LN102,
  LOG10E,
  NaN: _NaN,
  null: _null,
  phi: phi2,
  SQRT1_2,
  sackurTetrode,
  tau: tau2,
  true: _true,
  "E": e2,
  version: version2,
  efimovFactor,
  LN2,
  pi: pi2,
  replacer,
  reviver,
  SQRT2,
  typed,
  unaryPlus,
  "PI": pi2,
  weakMixingAngle,
  abs: abs2,
  acos: acos2,
  acot,
  acsc,
  addScalar,
  arg,
  asech,
  asinh: asinh3,
  atan: atan3,
  atanh: atanh3,
  bignumber,
  bitNot,
  boolean,
  clone: clone4,
  combinations,
  complex,
  conj,
  cos: cos2,
  cot,
  csc,
  cube,
  equalScalar,
  erf,
  exp: exp2,
  expm1: expm13,
  filter: filter2,
  forEach: forEach2,
  format: format4,
  getMatrixDataType,
  hex,
  im,
  isInteger: isInteger2,
  isNegative,
  isPositive,
  isZero,
  LOG2E,
  lgamma,
  log10: log104,
  log2: log24,
  map: map2,
  multiplyScalar,
  not,
  number,
  oct,
  pickRandom,
  print,
  random: random2,
  re,
  sec,
  sign: sign3,
  sin: sin2,
  splitUnit,
  square,
  string,
  subtractScalar,
  tan: tan2,
  typeOf: typeOf2,
  acosh: acosh3,
  acsch,
  apply,
  asec,
  bin,
  chain,
  combinationsWithRep,
  cosh: cosh4,
  csch,
  isNaN: isNaN2,
  isPrime,
  randomInt,
  sech,
  sinh: sinh4,
  sparse,
  sqrt: sqrt2,
  tanh: tanh3,
  unaryMinus,
  acoth,
  coth,
  fraction,
  isNumeric,
  matrix,
  matrixFromFunction,
  mode,
  numeric: numeric2,
  prod,
  reshape: reshape2,
  size,
  squeeze: squeeze2,
  transpose,
  xgcd,
  zeros: zeros2,
  asin: asin2,
  cbrt: cbrt4,
  concat: concat2,
  count,
  ctranspose,
  diag,
  divideScalar,
  dotDivide,
  equal,
  flatten: flatten2,
  hasNumericValue,
  identity,
  kron,
  largerEq,
  leftShift,
  lsolve,
  matrixFromColumns,
  nthRoot,
  ones,
  qr,
  resize: resize2,
  rightArithShift,
  round: round2,
  smaller,
  subtract,
  to,
  unequal,
  usolve,
  xor,
  add: add3,
  atan2: atan22,
  bitAnd,
  bitOr,
  bitXor: bitXor2,
  catalan,
  compare,
  compareText: compareText2,
  cumsum,
  deepEqual,
  diff,
  distance,
  dot,
  equalText,
  floor: floor2,
  gcd,
  hypot: hypot3,
  larger,
  log: log3,
  lsolveAll,
  matrixFromRows,
  min: min2,
  mod: mod2,
  multiply,
  nthRoots,
  or,
  partitionSelect,
  rightLogShift,
  slu,
  subset,
  sum: sum2,
  trace,
  usolveAll,
  zpk2tf,
  ceil: ceil2,
  compareNatural,
  composition,
  cross,
  det,
  dotMultiply,
  fix,
  index,
  intersect,
  invmod,
  lcm,
  log1p: log1p2,
  max: max2,
  setCartesian,
  setDistinct,
  setIsSubset,
  setPowerset,
  smallerEq,
  sort,
  and,
  range,
  row,
  setDifference,
  setMultiplicity,
  setSymDifference,
  column,
  inv,
  lup,
  pinv,
  pow: pow2,
  setIntersect,
  setUnion,
  sqrtm,
  vacuumImpedance,
  wienDisplacement,
  atomicMass,
  bohrMagneton,
  boltzmann,
  conductanceQuantum,
  coulomb,
  deuteronMass,
  dotPow,
  electricConstant,
  elementaryCharge,
  expm,
  faraday,
  fft,
  gamma,
  gravitationConstant,
  hartreeEnergy,
  ifft,
  klitzing,
  loschmidt,
  magneticConstant,
  molarMass,
  molarPlanckConstant,
  neutronMass,
  nuclearMagneton,
  planckCharge,
  planckLength,
  planckTemperature,
  protonMass,
  quantumOfCirculation,
  reducedPlanckConstant,
  rydberg,
  secondRadiation,
  speedOfLight,
  stefanBoltzmann,
  thomsonCrossSection,
  avogadro,
  bohrRadius,
  createUnit,
  divide: divide2,
  electronMass,
  factorial,
  firstRadiation,
  gravity,
  inverseConductanceQuantum,
  lusolve,
  magneticFluxQuantum,
  molarMassC12,
  multinomial,
  parse: parse2,
  permutations,
  planckMass,
  polynomialRoot,
  resolve,
  setSize,
  simplifyConstant,
  solveODE,
  stirlingS2,
  unit,
  bellNumbers,
  compile,
  eigs,
  fermiCoupling,
  gasConstant,
  kldivergence,
  mean,
  molarVolume,
  planckConstant,
  quantileSeq,
  simplifyCore,
  variance,
  classicalElectronRadius,
  evaluate,
  median,
  simplify,
  symbolicEqual,
  corr,
  freqz,
  leafCount,
  mad,
  parser,
  rationalize,
  std,
  zeta,
  derivative,
  norm,
  rotationMatrix,
  help,
  planckTime,
  schur,
  rotate,
  sylvester,
  lyap,
  config
});
_extends(mathWithTransform, math, {
  filter: createFilterTransform({
    typed
  }),
  forEach: createForEachTransform({
    typed
  }),
  map: createMapTransform({
    typed
  }),
  apply: createApplyTransform({
    isInteger: isInteger2,
    typed
  }),
  or: createOrTransform({
    DenseMatrix,
    concat: concat2,
    equalScalar,
    matrix,
    typed
  }),
  and: createAndTransform({
    add: add3,
    concat: concat2,
    equalScalar,
    matrix,
    not,
    typed,
    zeros: zeros2
  }),
  concat: createConcatTransform({
    isInteger: isInteger2,
    matrix,
    typed
  }),
  max: createMaxTransform({
    config,
    larger,
    numeric: numeric2,
    typed
  }),
  print: createPrintTransform({
    add: add3,
    matrix,
    typed,
    zeros: zeros2
  }),
  bitAnd: createBitAndTransform({
    add: add3,
    concat: concat2,
    equalScalar,
    matrix,
    not,
    typed,
    zeros: zeros2
  }),
  diff: createDiffTransform({
    bignumber,
    matrix,
    number,
    subtract,
    typed
  }),
  min: createMinTransform({
    config,
    numeric: numeric2,
    smaller,
    typed
  }),
  subset: createSubsetTransform({
    add: add3,
    matrix,
    typed,
    zeros: zeros2
  }),
  bitOr: createBitOrTransform({
    DenseMatrix,
    concat: concat2,
    equalScalar,
    matrix,
    typed
  }),
  cumsum: createCumSumTransform({
    add: add3,
    typed,
    unaryPlus
  }),
  index: createIndexTransform({
    Index,
    getMatrixDataType
  }),
  sum: createSumTransform({
    add: add3,
    config,
    numeric: numeric2,
    typed
  }),
  range: createRangeTransform({
    bignumber,
    matrix,
    add: add3,
    config,
    isPositive,
    larger,
    largerEq,
    smaller,
    smallerEq,
    typed
  }),
  row: createRowTransform({
    Index,
    matrix,
    range,
    typed
  }),
  column: createColumnTransform({
    Index,
    matrix,
    range,
    typed
  }),
  mean: createMeanTransform({
    add: add3,
    divide: divide2,
    typed
  }),
  quantileSeq: createQuantileSeqTransform({
    add: add3,
    bignumber,
    compare,
    divide: divide2,
    isInteger: isInteger2,
    larger,
    multiply,
    partitionSelect,
    smaller,
    smallerEq,
    subtract,
    typed
  }),
  variance: createVarianceTransform({
    add: add3,
    apply,
    divide: divide2,
    isNaN: isNaN2,
    multiply,
    subtract,
    typed
  }),
  std: createStdTransform({
    map: map2,
    sqrt: sqrt2,
    typed,
    variance
  })
});
_extends(classes, {
  BigNumber,
  Complex: Complex2,
  Fraction: Fraction2,
  Matrix,
  Node,
  ObjectNode,
  OperatorNode,
  ParenthesisNode,
  Range,
  RelationalNode,
  ResultSet,
  ArrayNode,
  BlockNode,
  ConditionalNode,
  ConstantNode,
  DenseMatrix,
  RangeNode,
  Chain,
  FunctionAssignmentNode,
  SparseMatrix,
  IndexNode,
  ImmutableDenseMatrix,
  Index,
  AccessorNode,
  AssignmentNode,
  FibonacciHeap,
  Spa,
  Unit,
  SymbolNode,
  FunctionNode,
  Help,
  Parser
});
Chain.createProxy(math);

// node_modules/mathjs/lib/esm/utils/emitter.js
var import_tiny_emitter = __toESM(require_tiny_emitter(), 1);

// node_modules/signify-ts/dist/signify-ts.mjs
var import_structured_headers = __toESM(require_dist2(), 1);
var import_buffer8 = __toESM(require_buffer(), 1);
var import_libsodium_wrappers_sumo7 = __toESM(require_libsodium_wrappers(), 1);
var import_libsodium_wrappers_sumo8 = __toESM(require_libsodium_wrappers(), 1);
var import_buffer9 = __toESM(require_buffer(), 1);
var __defProp = Object.defineProperty;
var __export = (target, all2) => {
  for (var name314 in all2)
    __defProp(target, name314, { get: all2[name314], enumerable: true });
};
var exports_exports = {};
__export(exports_exports, {
  Agent: () => Agent,
  Algos: () => Algos,
  Authenticator: () => Authenticator,
  B64ChrByIdx: () => B64ChrByIdx,
  B64IdxByChr: () => B64IdxByChr,
  BexCodex: () => BexCodex,
  BexDex: () => BexDex,
  CesrNumber: () => CesrNumber,
  Challenges: () => Challenges,
  Cigar: () => Cigar,
  Cipher: () => Cipher,
  Codex: () => Codex,
  Config: () => Config,
  Contacts: () => Contacts,
  Controller: () => Controller,
  Counter: () => Counter,
  CounterCodex: () => CounterCodex,
  Creatory: () => Creatory,
  CredentialTypes: () => CredentialTypes,
  Credentials: () => Credentials,
  CtrDex: () => CtrDex,
  Decrypter: () => Decrypter,
  Diger: () => Diger,
  DigiCodex: () => DigiCodex,
  DigiDex: () => DigiDex,
  DipLabels: () => DipLabels,
  DrtLabels: () => DrtLabels,
  EmptyMaterialError: () => EmptyMaterialError,
  Encrypter: () => Encrypter,
  Escrows: () => Escrows,
  EventResult: () => EventResult,
  Exchanges: () => Exchanges,
  FALSY: () => FALSY,
  GroupKeeper: () => GroupKeeper,
  Groups: () => Groups,
  HEADER_SIG: () => HEADER_SIG,
  HEADER_SIG_DESTINATION: () => HEADER_SIG_DESTINATION,
  HEADER_SIG_INPUT: () => HEADER_SIG_INPUT,
  HEADER_SIG_SENDER: () => HEADER_SIG_SENDER,
  HEADER_SIG_TIME: () => HEADER_SIG_TIME,
  Hab: () => Hab,
  Habery: () => Habery,
  IcpLabels: () => IcpLabels,
  Ident: () => Ident,
  Identifier: () => Identifier,
  IdrDex: () => IdrDex,
  Ids: () => Ids,
  IdxBthSigDex: () => IdxBthSigDex,
  IdxCrtSigDex: () => IdxCrtSigDex,
  IdxSigDex: () => IdxSigDex,
  Ilks: () => Ilks,
  IndexedBothSigCodex: () => IndexedBothSigCodex,
  IndexedCurrentSigCodex: () => IndexedCurrentSigCodex,
  IndexedSigCodex: () => IndexedSigCodex,
  Indexer: () => Indexer,
  IndexerCodex: () => IndexerCodex,
  Inputage: () => Inputage,
  Ipex: () => Ipex,
  IxnLabels: () => IxnLabels,
  KeyEvents: () => KeyEvents,
  KeyManager: () => KeyManager,
  KeyStates: () => KeyStates,
  KsnLabels: () => KsnLabels,
  LargeVrzDex: () => LargeVrzDex,
  MINSIGSIZE: () => MINSIGSIZE,
  MINSNIFFSIZE: () => MINSNIFFSIZE,
  Manager: () => Manager,
  Matter: () => Matter,
  MatterCodex: () => MatterCodex,
  MtrDex: () => MtrDex,
  NonTransCodex: () => NonTransCodex,
  NonTransDex: () => NonTransDex,
  Notifications: () => Notifications,
  NumCodex: () => NumCodex,
  NumDex: () => NumDex,
  Oobis: () => Oobis,
  Operations: () => Operations,
  Prefixer: () => Prefixer,
  RandyCreator: () => RandyCreator,
  RandyKeeper: () => RandyKeeper,
  Registries: () => Registries,
  RegistryResult: () => RegistryResult,
  Replies: () => Replies,
  RotLabels: () => RotLabels,
  RpyLabels: () => RpyLabels,
  Saider: () => Saider,
  Salter: () => Salter,
  SaltyCreator: () => SaltyCreator,
  SaltyKeeper: () => SaltyKeeper,
  Schemas: () => Schemas,
  Seqner: () => Seqner,
  Serder: () => Serder,
  Serials: () => Serials,
  Siger: () => Siger,
  Signage: () => Signage,
  Signer: () => Signer,
  SignifyClient: () => SignifyClient,
  Sizage: () => Sizage,
  SmallVrzDex: () => SmallVrzDex,
  TRUTHY: () => TRUTHY,
  Tholder: () => Tholder,
  Tier: () => Tier,
  TraitCodex: () => TraitCodex,
  TraitDex: () => TraitDex,
  Unqualified: () => Unqualified,
  VEREX: () => VEREX,
  VERFULLSIZE: () => VERFULLSIZE,
  Verfer: () => Verfer,
  Version: () => Version,
  Versionage: () => Versionage,
  Xizage: () => Xizage,
  ample: () => ample,
  arrayEquals: () => arrayEquals,
  b: () => b,
  b64ToInt: () => b64ToInt,
  bytesToInt: () => bytesToInt,
  concat: () => concat3,
  d: () => d,
  desiginput: () => desiginput,
  designature: () => designature,
  deversify: () => deversify,
  dumps: () => dumps,
  exchange: () => exchange,
  extractValues: () => extractValues,
  incept: () => incept,
  intToB64: () => intToB64,
  intToB64b: () => intToB64b,
  intToBytes: () => intToBytes,
  interact: () => interact,
  messagize: () => messagize,
  normalize: () => normalize,
  nowUTC: () => nowUTC,
  openManager: () => openManager,
  pad: () => pad,
  parseRangeHeaders: () => parseRangeHeaders,
  randomNonce: () => randomNonce,
  randomPasscode: () => randomPasscode,
  range: () => range2,
  readInt: () => readInt,
  ready: () => ready,
  reply: () => reply,
  riKey: () => riKey,
  rotate: () => rotate2,
  serializeACDCAttachment: () => serializeACDCAttachment,
  serializeIssExnAttachment: () => serializeIssExnAttachment,
  siginput: () => siginput,
  signature: () => signature,
  sizeify: () => sizeify,
  versify: () => versify
});
var ready = async () => {
  await import_libsodium_wrappers_sumo.default.ready;
};
var EmptyMaterialError = class {
  constructor(err) {
    __publicField(this, "_err");
    this._err = new Error(err);
  }
  get err() {
    return this._err;
  }
};
var Serials = ((Serials2) => {
  Serials2["JSON"] = "JSON";
  return Serials2;
})(Serials || {});
var Ident = ((Ident2) => {
  Ident2["KERI"] = "KERI";
  Ident2["ACDC"] = "ACDC";
  return Ident2;
})(Ident || {});
var Version = class {
  constructor(major = 1, minor = 0) {
    __publicField(this, "major");
    __publicField(this, "minor");
    this.major = major;
    this.minor = minor;
  }
};
var Versionage = new Version();
var Ilks = {
  icp: "icp",
  rot: "rot",
  ixn: "ixn",
  dip: "dip",
  drt: "drt",
  rct: "rct",
  vrc: "vrc",
  rpy: "rpy",
  exn: "exn",
  vcp: "vcp",
  iss: "iss",
  rev: "rev",
  bis: "bis",
  brv: "brv"
};
var IcpLabels = [
  "v",
  "i",
  "s",
  "t",
  "kt",
  "k",
  "n",
  "bt",
  "b",
  "c",
  "a"
];
var DipLabels = [
  "v",
  "i",
  "s",
  "t",
  "kt",
  "k",
  "n",
  "bt",
  "b",
  "c",
  "a",
  "di"
];
var RotLabels = [
  "v",
  "i",
  "s",
  "t",
  "p",
  "kt",
  "k",
  "n",
  "bt",
  "br",
  "ba",
  "a"
];
var DrtLabels = [
  "v",
  "i",
  "s",
  "t",
  "p",
  "kt",
  "k",
  "n",
  "bt",
  "br",
  "ba",
  "a"
];
var IxnLabels = ["v", "i", "s", "t", "p", "a"];
var KsnLabels = [
  "v",
  "i",
  "s",
  "t",
  "p",
  "d",
  "f",
  "dt",
  "et",
  "kt",
  "k",
  "n",
  "bt",
  "b",
  "c",
  "ee",
  "di",
  "r"
];
var RpyLabels = ["v", "t", "d", "dt", "r", "a"];
var encoder = new TextEncoder();
var decoder = new TextDecoder();
var VERFULLSIZE = 17;
var MINSNIFFSIZE = 12 + VERFULLSIZE;
var MINSIGSIZE = 4;
var VEREX = "(KERI|ACDC)([0-9a-f])([0-9a-f])([A-Z]{4})([0-9a-f]{6})_";
function deversify(versionString) {
  let kind;
  let size2;
  let proto;
  const version3 = Versionage;
  const re2 = new RegExp(VEREX);
  const match = re2.exec(versionString);
  if (match) {
    [proto, version3.major, version3.minor, kind, size2] = [
      match[1],
      +match[2],
      +match[3],
      match[4],
      match[5]
    ];
    if (!Object.values(Serials).includes(kind)) {
      throw new Error(`Invalid serialization kind = ${kind}`);
    }
    if (!Object.values(Ident).includes(proto)) {
      throw new Error(`Invalid serialization kind = ${kind}`);
    }
    const ta = kind;
    kind = Serials[ta];
    const pa = proto;
    proto = Ident[pa];
    return [proto, kind, version3, size2];
  }
  throw new Error(`Invalid version string = ${versionString}`);
}
function versify(ident = "KERI", version3, kind = "JSON", size2 = 0) {
  version3 = version3 == void 0 ? Versionage : version3;
  return `${ident}${version3.major.toString(
    16
  )}${version3.minor.toString()}${kind}${size2.toString(16).padStart(6, "0")}_`;
}
var B64ChrByIdx = /* @__PURE__ */ new Map([
  [0, "A"],
  [1, "B"],
  [2, "C"],
  [3, "D"],
  [4, "E"],
  [5, "F"],
  [6, "G"],
  [7, "H"],
  [8, "I"],
  [9, "J"],
  [10, "K"],
  [11, "L"],
  [12, "M"],
  [13, "N"],
  [14, "O"],
  [15, "P"],
  [16, "Q"],
  [17, "R"],
  [18, "S"],
  [19, "T"],
  [20, "U"],
  [21, "V"],
  [22, "W"],
  [23, "X"],
  [24, "Y"],
  [25, "Z"],
  [26, "a"],
  [27, "b"],
  [28, "c"],
  [29, "d"],
  [30, "e"],
  [31, "f"],
  [32, "g"],
  [33, "h"],
  [34, "i"],
  [35, "j"],
  [36, "k"],
  [37, "l"],
  [38, "m"],
  [39, "n"],
  [40, "o"],
  [41, "p"],
  [42, "q"],
  [43, "r"],
  [44, "s"],
  [45, "t"],
  [46, "u"],
  [47, "v"],
  [48, "w"],
  [49, "x"],
  [50, "y"],
  [51, "z"],
  [52, "0"],
  [53, "1"],
  [54, "2"],
  [55, "3"],
  [56, "4"],
  [57, "5"],
  [58, "6"],
  [59, "7"],
  [60, "8"],
  [61, "9"],
  [62, "-"],
  [63, "_"]
]);
var B64IdxByChr = new Map(
  Array.from(B64ChrByIdx, (entry) => [entry[1], entry[0]])
);
function intToB64(i2, l = 1) {
  let out = "";
  while (l != 0) {
    out = B64ChrByIdx.get(i2 % 64) + out;
    i2 = Math.floor(i2 / 64);
    if (i2 == 0) {
      break;
    }
  }
  const x = l - out.length;
  for (let i22 = 0; i22 < x; i22++) {
    out = "A" + out;
  }
  return out;
}
function intToB64b(n, l = 1) {
  const s = intToB64(n, l);
  return b(s);
}
function b64ToInt(s) {
  if (s.length == 0) {
    throw new Error("Empty string, conversion undefined.");
  }
  let i2 = 0;
  const rev = s.split("").reverse();
  rev.forEach((c, e3) => {
    i2 |= B64IdxByChr.get(c) << e3 * 6;
  });
  return i2;
}
function b(s) {
  return encoder.encode(s);
}
function d(u) {
  return decoder.decode(u);
}
function concat3(one, two) {
  const out = new Uint8Array(one.length + two.length);
  out.set(one);
  out.set(two, one.length);
  return out;
}
function readInt(array) {
  let value = 0;
  for (let i2 = 0; i2 < array.length; i2++) {
    value = value * 256 + array[i2];
  }
  return value;
}
function encodeBase64Url(buffer) {
  if (!import_buffer2.Buffer.isBuffer(buffer)) {
    throw new TypeError("`buffer` must be a buffer.");
  }
  return buffer.toString("base64").replace(/\+/g, "-").replace(/\//g, "_").replace(/=+/, "");
}
function decodeBase64Url(input) {
  if (!(typeof input === "string")) {
    throw new TypeError("`input` must be a string.");
  }
  const n = input.length % 4;
  const padded = input + "=".repeat(n > 0 ? 4 - n : n);
  const base64String = padded.replace(/-/g, "+").replace(/_/g, "/");
  return import_buffer2.Buffer.from(base64String, "base64");
}
var Codex = class {
  has(prop) {
    const m = new Map(
      Array.from(Object.entries(this), (v) => [v[1], v[0]])
    );
    return m.has(prop);
  }
};
var MatterCodex = class extends Codex {
  constructor() {
    super(...arguments);
    __publicField(this, "Ed25519_Seed", "A");
    // Ed25519 256 bit random seed for private key
    __publicField(this, "Ed25519N", "B");
    // Ed25519 verification key non-transferable, basic derivation.
    __publicField(this, "X25519", "C");
    // X25519 public encryption key, converted from Ed25519 or Ed25519N.
    __publicField(this, "Ed25519", "D");
    // Ed25519 verification key basic derivation
    __publicField(this, "Blake3_256", "E");
    // Blake3 256 bit digest self-addressing derivation.
    __publicField(this, "SHA3_256", "H");
    // SHA3 256 bit digest self-addressing derivation.
    __publicField(this, "SHA2_256", "I");
    // SHA2 256 bit digest self-addressing derivation.
    __publicField(this, "ECDSA_256k1_Seed", "J");
    // ECDSA secp256k1 256 bit random Seed for private key
    __publicField(this, "X25519_Private", "O");
    // X25519 private decryption key converted from Ed25519
    __publicField(this, "X25519_Cipher_Seed", "P");
    // X25519 124 char b64 Cipher of 44 char qb64 Seed
    __publicField(this, "ECDSA_256r1_Seed", "Q");
    // ECDSA secp256r1 256 bit random Seed for private key
    __publicField(this, "Salt_128", "0A");
    // 128 bit random salt or 128 bit number (see Huge)
    __publicField(this, "Ed25519_Sig", "0B");
    // Ed25519 signature.
    __publicField(this, "ECDSA_256k1_Sig", "0C");
    // ECDSA secp256k1 signature.
    __publicField(this, "ECDSA_256r1_Sig", "0I");
    // ECDSA secp256r1 signature.
    __publicField(this, "StrB64_L0", "4A");
    // String Base64 Only Lead Size 0
    __publicField(this, "StrB64_L1", "5A");
    // String Base64 Only Lead Size 1
    __publicField(this, "StrB64_L2", "6A");
    // String Base64 Only Lead Size 2
    __publicField(this, "ECDSA_256k1N", "1AAA");
    // ECDSA secp256k1 verification key non-transferable, basic derivation.
    __publicField(this, "ECDSA_256k1", "1AAB");
    // ECDSA public verification or encryption key, basic derivation
    __publicField(this, "X25519_Cipher_Salt", "1AAH");
    // X25519 100 char b64 Cipher of 24 char qb64 Salt
    __publicField(this, "ECDSA_256r1N", "1AAI");
    // ECDSA secp256r1 verification key non-transferable, basic derivation.
    __publicField(this, "ECDSA_256r1", "1AAJ");
    // ECDSA secp256r1 verification or encryption key, basic derivation
    __publicField(this, "StrB64_Big_L0", "7AAA");
    // String Base64 Only Big Lead Size 0
    __publicField(this, "StrB64_Big_L1", "8AAA");
    // String Base64 Only Big Lead Size 1
    __publicField(this, "StrB64_Big_L2", "9AAA");
  }
  // String Base64 Only Big Lead Size 2
};
var MtrDex = new MatterCodex();
var NonTransCodex = class extends Codex {
  constructor() {
    super(...arguments);
    __publicField(this, "Ed25519N", "B");
    // Ed25519 verification key non-transferable, basic derivation.
    __publicField(this, "ECDSA_256k1N", "1AAA");
    // ECDSA secp256k1 verification key non-transferable, basic derivation.
    __publicField(this, "Ed448N", "1AAC");
    // Ed448 non-transferable prefix public signing verification key. Basic derivation.
    __publicField(this, "ECDSA_256r1N", "1AAI");
  }
  // ECDSA secp256r1 verification key non-transferable, basic derivation.
};
var NonTransDex = new NonTransCodex();
var DigiCodex = class extends Codex {
  constructor() {
    super(...arguments);
    __publicField(this, "Blake3_256", "E");
    // Blake3 256 bit digest self-addressing derivation.
    __publicField(this, "Blake2b_256", "F");
    // Blake2b 256 bit digest self-addressing derivation.
    __publicField(this, "Blake2s_256", "G");
    // Blake2s 256 bit digest self-addressing derivation.
    __publicField(this, "SHA3_256", "H");
    // SHA3 256 bit digest self-addressing derivation.
    __publicField(this, "SHA2_256", "I");
    // SHA2 256 bit digest self-addressing derivation.
    __publicField(this, "Blake3_512", "0D");
    // Blake3 512 bit digest self-addressing derivation.
    __publicField(this, "Blake2b_512", "0E");
    // Blake2b 512 bit digest self-addressing derivation.
    __publicField(this, "SHA3_512", "0F");
    // SHA3 512 bit digest self-addressing derivation.
    __publicField(this, "SHA2_512", "0G");
  }
  // SHA2 512 bit digest self-addressing derivation.
};
var DigiDex = new DigiCodex();
var NumCodex = class extends Codex {
  constructor() {
    super(...arguments);
    __publicField(this, "Short", "M");
    // Short 2 byte b2 number
    __publicField(this, "Long", "0H");
    // Long 4 byte b2 number
    __publicField(this, "Big", "N");
    // Big 8 byte b2 number
    __publicField(this, "Huge", "0A");
  }
  // Huge 16 byte b2 number (same as Salt_128)
};
var NumDex = new NumCodex();
var BexCodex = class extends Codex {
  constructor() {
    super(...arguments);
    __publicField(this, "StrB64_L0", "4A");
    // String Base64 Only Leader Size 0
    __publicField(this, "StrB64_L1", "5A");
    // String Base64 Only Leader Size 1
    __publicField(this, "StrB64_L2", "6A");
    // String Base64 Only Leader Size 2
    __publicField(this, "StrB64_Big_L0", "7AAA");
    // String Base64 Only Big Leader Size 0
    __publicField(this, "StrB64_Big_L1", "8AAA");
    // String Base64 Only Big Leader Size 1
    __publicField(this, "StrB64_Big_L2", "9AAA");
  }
  // String Base64 Only Big Leader Size 2
};
var BexDex = new BexCodex();
var SmallVarRawSizeCodex = class extends Codex {
  constructor() {
    super(...arguments);
    __publicField(this, "Lead0", "4");
    // First Selector Character for all ls == 0 codes
    __publicField(this, "Lead1", "5");
    // First Selector Character for all ls == 1 codes
    __publicField(this, "Lead2", "6");
  }
  // First Selector Character for all ls == 2 codes
};
var SmallVrzDex = new SmallVarRawSizeCodex();
var LargeVarRawSizeCodex = class extends Codex {
  constructor() {
    super(...arguments);
    __publicField(this, "Lead0_Big", "7");
    // First Selector Character for all ls == 0 codes
    __publicField(this, "Lead1_Big", "8");
    // First Selector Character for all ls == 1 codes
    __publicField(this, "Lead2_Big", "9");
  }
  // First Selector Character for all ls == 2 codes
};
var LargeVrzDex = new LargeVarRawSizeCodex();
var Sizage = class {
  constructor(hs, ss, fs, ls) {
    __publicField(this, "hs");
    __publicField(this, "ss");
    __publicField(this, "ls");
    __publicField(this, "fs");
    this.hs = hs;
    this.ss = ss;
    this.fs = fs;
    this.ls = ls;
  }
};
var _a;
var Matter = (_a = class {
  constructor({
    raw,
    code = MtrDex.Ed25519N,
    qb64b,
    qb64,
    qb2,
    rize
  }) {
    __publicField(this, "_code", "");
    __publicField(this, "_size", -1);
    __publicField(this, "_raw", new Uint8Array(0));
    let size2 = -1;
    if (raw != void 0) {
      if (code.length == 0) {
        throw new Error(
          "Improper initialization need either (raw and code) or qb64b or qb64 or qb2."
        );
      }
      if (SmallVrzDex.has(code[0]) || LargeVrzDex.has(code[0])) {
        if (rize !== void 0) {
          if (rize < 0)
            throw new Error(
              `missing var raw size for code=${code}`
            );
        } else {
          rize = raw.length;
        }
        const ls = (3 - rize % 3) % 3;
        size2 = Math.floor((rize + ls) / 3);
        if (SmallVrzDex.has(code[0])) {
          if (size2 <= 64 ** 2 - 1) {
            const hs = 2;
            const s = Object.values(SmallVrzDex)[ls];
            code = `${s}${code.substring(1, hs)}`;
          } else if (size2 <= 64 ** 4 - 1) {
            const hs = 4;
            const s = Object.values(LargeVrzDex)[ls];
            code = `${s}${"AAAA".substring(0, hs - 2)}${code[1]}`;
          } else {
            throw new Error(
              `Unsupported raw size for code=${code}`
            );
          }
        } else {
          if (size2 <= 64 ** 4 - 1) {
            const hs = 4;
            const s = Object.values(LargeVrzDex)[ls];
            code = `${s}${code.substring(1, hs)}`;
          } else {
            throw new Error(
              `Unsupported raw size for code=${code}`
            );
          }
        }
      } else {
        const sizage = _a.Sizes.get(code);
        if (sizage.fs == -1) {
          throw new Error(`Unsupported variable size code=${code}`);
        }
        rize = _a._rawSize(code);
      }
      raw = raw.slice(0, rize);
      if (raw.length != rize) {
        throw new Error(
          `Not enougth raw bytes for code=${code} expected ${rize} got ${raw.length}.`
        );
      }
      this._code = code;
      this._size = size2;
      this._raw = raw;
    } else if (qb64 !== void 0) {
      this._exfil(qb64);
    } else if (qb64b !== void 0) {
      const qb642 = d(qb64b);
      this._exfil(qb642);
    } else if (qb2 !== void 0) {
      this._bexfil(qb2);
    } else {
      throw new EmptyMaterialError("EmptyMaterialError");
    }
  }
  get code() {
    return this._code;
  }
  get size() {
    return this._size;
  }
  get raw() {
    return this._raw;
  }
  get qb64() {
    return this._infil();
  }
  get qb64b() {
    return b(this.qb64);
  }
  get transferable() {
    return !NonTransDex.has(this.code);
  }
  get digestive() {
    return DigiDex.has(this.code);
  }
  static _rawSize(code) {
    const sizage = this.Sizes.get(code);
    const cs = sizage.hs + sizage.ss;
    if (sizage.fs === -1) {
      throw Error(`Non-fixed raw size code ${code}.`);
    }
    return Math.floor((sizage.fs - cs) * 3 / 4) - sizage.ls;
  }
  static _leadSize(code) {
    const sizage = this.Sizes.get(code);
    return sizage.ls;
  }
  get both() {
    const sizage = _a.Sizes.get(this.code);
    return `${this.code}${intToB64(this.size, sizage.ss)}`;
  }
  _infil() {
    const code = this.code;
    const size2 = this.size;
    const raw = this.raw;
    const ps = (3 - raw.length % 3) % 3;
    const sizage = _a.Sizes.get(code);
    if (sizage.fs === void 0) {
      const cs = sizage.hs + sizage.ss;
      if (cs % 4) {
        throw new Error(
          `Whole code size not multiple of 4 for variable length material. cs=${cs}`
        );
      }
      if (size2 < 0 || size2 > 64 ** sizage.ss - 1) {
        throw new Error(`Invalid size=${size2} for code=${code}.`);
      }
      const both = `${code}${intToB64(size2, sizage.ss)}`;
      if (both.length % 4 !== ps - sizage.ls) {
        throw new Error(
          `Invalid code=${both} for converted raw pad size=${ps}.`
        );
      }
      const bytes = new Uint8Array(sizage.ls + raw.length);
      for (let i2 = 0; i2 < sizage.ls; i2++) {
        bytes[i2] = 0;
      }
      for (let i2 = 0; i2 < raw.length; i2++) {
        const odx = i2 + ps;
        bytes[odx] = raw[i2];
      }
      return both + encodeBase64Url(import_buffer.Buffer.from(bytes));
    } else {
      const both = code;
      const cs = both.length;
      if (cs % 4 != ps - sizage.ls) {
        throw new Error(
          `Invalid code=${both} for converted raw pad size=${ps}, ${raw.length}.`
        );
      }
      const bytes = new Uint8Array(ps + raw.length);
      for (let i2 = 0; i2 < ps; i2++) {
        bytes[i2] = 0;
      }
      for (let i2 = 0; i2 < raw.length; i2++) {
        const odx = i2 + ps;
        bytes[odx] = raw[i2];
      }
      return both + encodeBase64Url(import_buffer.Buffer.from(bytes)).slice(cs % 4);
    }
  }
  _exfil(qb64) {
    if (qb64.length == 0) {
      throw new Error("Empty Material");
    }
    const first = qb64[0];
    if (!Array.from(_a.Hards.keys()).includes(first)) {
      throw new Error(`Unexpected code ${first}`);
    }
    const hs = _a.Hards.get(first);
    if (qb64.length < hs) {
      throw new Error(`Shortage Error`);
    }
    const hard = qb64.slice(0, hs);
    if (!Array.from(_a.Sizes.keys()).includes(hard)) {
      throw new Error(`Unsupported code ${hard}`);
    }
    const sizage = _a.Sizes.get(hard);
    const cs = sizage.hs + sizage.ss;
    let size2 = -1;
    if (sizage.fs == -1) {
      throw new Error("Variable size codes not supported yet");
    } else {
      size2 = sizage.fs;
    }
    if (qb64.length < sizage.fs) {
      throw new Error(`Need ${sizage.fs - qb64.length} more chars.`);
    }
    qb64 = qb64.slice(0, sizage.fs);
    const ps = cs % 4;
    const pbs = 2 * (ps == 0 ? sizage.ls : ps);
    let raw;
    if (ps != 0) {
      const base = new Array(ps + 1).join("A") + qb64.slice(cs);
      const paw = decodeBase64Url(base);
      const pi3 = readInt(paw.subarray(0, ps));
      if (pi3 & 2 ** pbs - 1) {
        throw new Error(
          `Non zeroed prepad bits = {pi & (2 ** pbs - 1 ):<06b} in {qb64b[cs:cs+1]}.`
        );
      }
      raw = paw.subarray(ps);
    } else {
      const base = qb64.slice(cs);
      const paw = decodeBase64Url(base);
      const li = readInt(paw.subarray(0, sizage.ls));
      if (li != 0) {
        if (li == 1) {
          throw new Error(`Non zeroed lead byte = 0x{li:02x}.`);
        } else {
          throw new Error(`Non zeroed lead bytes = 0x{li:04x}`);
        }
      }
      raw = paw.subarray(sizage.ls);
    }
    this._code = hard;
    this._size = size2;
    this._raw = Uint8Array.from(raw);
  }
  _bexfil(qb2) {
    throw new Error(`qb2 not yet supported: ${qb2}`);
  }
}, __publicField(_a, "Sizes", new Map(
  Object.entries({
    A: new Sizage(1, 0, 44, 0),
    B: new Sizage(1, 0, 44, 0),
    C: new Sizage(1, 0, 44, 0),
    D: new Sizage(1, 0, 44, 0),
    E: new Sizage(1, 0, 44, 0),
    F: new Sizage(1, 0, 44, 0),
    G: new Sizage(1, 0, 44, 0),
    H: new Sizage(1, 0, 44, 0),
    I: new Sizage(1, 0, 44, 0),
    J: new Sizage(1, 0, 44, 0),
    K: new Sizage(1, 0, 76, 0),
    L: new Sizage(1, 0, 76, 0),
    M: new Sizage(1, 0, 4, 0),
    N: new Sizage(1, 0, 12, 0),
    O: new Sizage(1, 0, 44, 0),
    P: new Sizage(1, 0, 124, 0),
    Q: new Sizage(1, 0, 44, 0),
    "0A": new Sizage(2, 0, 24, 0),
    "0B": new Sizage(2, 0, 88, 0),
    "0C": new Sizage(2, 0, 88, 0),
    "0D": new Sizage(2, 0, 88, 0),
    "0E": new Sizage(2, 0, 88, 0),
    "0F": new Sizage(2, 0, 88, 0),
    "0G": new Sizage(2, 0, 88, 0),
    "0H": new Sizage(2, 0, 8, 0),
    "0I": new Sizage(2, 0, 88, 0),
    "1AAA": new Sizage(4, 0, 48, 0),
    "1AAB": new Sizage(4, 0, 48, 0),
    "1AAC": new Sizage(4, 0, 80, 0),
    "1AAD": new Sizage(4, 0, 80, 0),
    "1AAE": new Sizage(4, 0, 56, 0),
    "1AAF": new Sizage(4, 0, 8, 0),
    "1AAG": new Sizage(4, 0, 36, 0),
    "1AAH": new Sizage(4, 0, 100, 0),
    "1AAI": new Sizage(4, 0, 48, 0),
    "1AAJ": new Sizage(4, 0, 48, 0),
    "2AAA": new Sizage(4, 0, 8, 1),
    "3AAA": new Sizage(4, 0, 8, 2),
    "4A": new Sizage(2, 2, void 0, 0),
    "5A": new Sizage(2, 2, void 0, 1),
    "6A": new Sizage(2, 2, void 0, 2),
    "7AAA": new Sizage(4, 4, void 0, 0),
    "8AAA": new Sizage(4, 4, void 0, 1),
    "9AAA": new Sizage(4, 4, void 0, 2),
    "4B": new Sizage(2, 2, void 0, 0),
    "5B": new Sizage(2, 2, void 0, 1),
    "6B": new Sizage(2, 2, void 0, 2),
    "7AAB": new Sizage(4, 4, void 0, 0),
    "8AAB": new Sizage(4, 4, void 0, 1),
    "9AAB": new Sizage(4, 4, void 0, 2)
  })
)), __publicField(_a, "Hards", /* @__PURE__ */ new Map([
  ["A", 1],
  ["B", 1],
  ["C", 1],
  ["D", 1],
  ["E", 1],
  ["F", 1],
  ["G", 1],
  ["H", 1],
  ["I", 1],
  ["J", 1],
  ["K", 1],
  ["L", 1],
  ["M", 1],
  ["N", 1],
  ["O", 1],
  ["P", 1],
  ["Q", 1],
  ["R", 1],
  ["S", 1],
  ["T", 1],
  ["U", 1],
  ["V", 1],
  ["W", 1],
  ["X", 1],
  ["Y", 1],
  ["Z", 1],
  ["a", 1],
  ["b", 1],
  ["c", 1],
  ["d", 1],
  ["e", 1],
  ["f", 1],
  ["g", 1],
  ["h", 1],
  ["i", 1],
  ["j", 1],
  ["k", 1],
  ["l", 1],
  ["m", 1],
  ["n", 1],
  ["o", 1],
  ["p", 1],
  ["q", 1],
  ["r", 1],
  ["s", 1],
  ["t", 1],
  ["u", 1],
  ["v", 1],
  ["w", 1],
  ["x", 1],
  ["y", 1],
  ["z", 1],
  ["0", 2],
  ["1", 4],
  ["2", 4],
  ["3", 4],
  ["4", 2],
  ["5", 2],
  ["6", 2],
  ["7", 4],
  ["8", 4],
  ["9", 4]
])), _a);
var Verfer = class extends Matter {
  constructor({ raw, code, qb64, qb64b, qb2 }) {
    super({ raw, code, qb64, qb64b, qb2 });
    __publicField(this, "_verify");
    if (Array.from([MtrDex.Ed25519N, MtrDex.Ed25519]).includes(this.code)) {
      this._verify = this._ed25519;
    } else if (Array.from([MtrDex.ECDSA_256r1N, MtrDex.ECDSA_256r1]).includes(
      this.code
    )) {
      this._verify = this._secp256r1;
    } else {
      throw new Error(`Unsupported code = ${this.code} for verifier.`);
    }
  }
  verify(sig, ser) {
    return this._verify(sig, ser, this.raw);
  }
  _ed25519(sig, ser, key) {
    try {
      return import_libsodium_wrappers_sumo3.default.crypto_sign_verify_detached(sig, ser, key);
    } catch (error) {
      throw new Error(error);
    }
  }
  _secp256r1(sig, ser, key) {
    try {
      const publicKey = import_ecdsa_secp256r1.default.fromCompressedPublicKey(key);
      return publicKey.verify(ser, sig);
    } catch (error) {
      throw new Error(error);
    }
  }
};
var Cigar = class extends Matter {
  constructor({ raw, code, qb64, qb64b, qb2 }, verfer) {
    super({ raw, code, qb64, qb64b, qb2 });
    __publicField(this, "_verfer");
    this._verfer = verfer;
  }
  get verfer() {
    return this._verfer;
  }
  set verfer(verfer) {
    this._verfer = verfer;
  }
};
var IndexerCodex = class {
  constructor() {
    __publicField(this, "Ed25519_Sig", "A");
    // Ed25519 sig appears same in both lists if any.
    __publicField(this, "Ed25519_Crt_Sig", "B");
    // Ed25519 sig appears in current list only.
    __publicField(this, "ECDSA_256k1_Sig", "C");
    // ECDSA secp256k1 sig appears same in both lists if any.
    __publicField(this, "ECDSA_256k1_Crt_Sig", "D");
    // ECDSA secp256k1 sig appears in current list.
    __publicField(this, "ECDSA_256r1_Sig", "E");
    // ECDSA secp256r1 sig appears same in both lists if any.
    __publicField(this, "ECDSA_256r1_Crt_Sig", "F");
    // ECDSA secp256r1 sig appears in current list.
    __publicField(this, "Ed448_Sig", "0A");
    // Ed448 signature appears in both lists.
    __publicField(this, "Ed448_Crt_Sig", "0B");
    // Ed448 signature appears in current list only.
    __publicField(this, "Ed25519_Big_Sig", "2A");
    // Ed25519 sig appears in both lists.
    __publicField(this, "Ed25519_Big_Crt_Sig", "2B");
    // Ed25519 sig appears in current list only.
    __publicField(this, "ECDSA_256k1_Big_Sig", "2C");
    // ECDSA secp256k1 sig appears in both lists.
    __publicField(this, "ECDSA_256k1_Big_Crt_Sig", "2D");
    // ECDSA secp256k1 sig appears in current list only.
    __publicField(this, "ECDSA_256r1_Big_Sig", "2E");
    // ECDSA secp256r1 sig appears in both lists.
    __publicField(this, "ECDSA_256r1_Big_Crt_Sig", "2F");
    // ECDSA secp256r1 sig appears in current list only.
    __publicField(this, "Ed448_Big_Sig", "3A");
    // Ed448 signature appears in both lists.
    __publicField(this, "Ed448_Big_Crt_Sig", "3B");
  }
  // Ed448 signature appears in current list only.
};
var IdrDex = new IndexerCodex();
var IndexedSigCodex = class {
  constructor() {
    __publicField(this, "Ed25519_Sig", "A");
    // Ed25519 sig appears same in both lists if any.
    __publicField(this, "Ed25519_Crt_Sig", "B");
    // Ed25519 sig appears in current list only.
    __publicField(this, "ECDSA_256k1_Sig", "C");
    // ECDSA secp256k1 sig appears same in both lists if any.
    __publicField(this, "ECDSA_256k1_Crt_Sig", "D");
    // ECDSA secp256k1 sig appears in current list.
    __publicField(this, "ECDSA_256r1_Sig", "E");
    // ECDSA secp256r1 sig appears same in both lists if any.
    __publicField(this, "ECDSA_256r1_Crt_Sig", "F");
    // ECDSA secp256r1 sig appears in current list.
    __publicField(this, "Ed448_Sig", "0A");
    // Ed448 signature appears in both lists.
    __publicField(this, "Ed448_Crt_Sig", "0B");
    // Ed448 signature appears in current list only.
    __publicField(this, "Ed25519_Big_Sig", "2A");
    // Ed25519 sig appears in both lists.
    __publicField(this, "Ed25519_Big_Crt_Sig", "2B");
    // Ed25519 sig appears in current list only.
    __publicField(this, "ECDSA_256k1_Big_Sig", "2C");
    // ECDSA secp256k1 sig appears in both lists.
    __publicField(this, "ECDSA_256k1_Big_Crt_Sig", "2D");
    // ECDSA secp256k1 sig appears in current list only.
    __publicField(this, "ECDSA_256r1_Big_Sig", "2E");
    // ECDSA secp256r1 sig appears in both lists.
    __publicField(this, "ECDSA_256r1_Big_Crt_Sig", "2F");
    // ECDSA secp256r1 sig appears in current list only.
    __publicField(this, "Ed448_Big_Sig", "3A");
    // Ed448 signature appears in both lists.
    __publicField(this, "Ed448_Big_Crt_Sig", "3B");
  }
  // Ed448 signature appears in current list only.
  has(prop) {
    const m = new Map(
      Array.from(Object.entries(this), (v) => [v[1], v[0]])
    );
    return m.has(prop);
  }
};
var IdxSigDex = new IndexedSigCodex();
var IndexedCurrentSigCodex = class {
  constructor() {
    __publicField(this, "Ed25519_Crt_Sig", "B");
    // Ed25519 sig appears in current list only.
    __publicField(this, "ECDSA_256k1_Crt_Sig", "D");
    // ECDSA secp256k1 sig appears in current list only.
    __publicField(this, "ECDSA_256r1_Crt_Sig", "F");
    // ECDSA secp256r1 sig appears in current list.
    __publicField(this, "Ed448_Crt_Sig", "0B");
    // Ed448 signature appears in current list only.
    __publicField(this, "Ed25519_Big_Crt_Sig", "2B");
    // Ed25519 sig appears in current list only.
    __publicField(this, "ECDSA_256k1_Big_Crt_Sig", "2D");
    // ECDSA secp256k1 sig appears in current list only.
    __publicField(this, "ECDSA_256r1_Big_Crt_Sig", "2F");
    // ECDSA secp256r1 sig appears in current list only.
    __publicField(this, "Ed448_Big_Crt_Sig", "3B");
  }
  // Ed448 signature appears in current list only.
  has(prop) {
    const m = new Map(
      Array.from(Object.entries(this), (v) => [v[1], v[0]])
    );
    return m.has(prop);
  }
};
var IdxCrtSigDex = new IndexedCurrentSigCodex();
var IndexedBothSigCodex = class {
  constructor() {
    __publicField(this, "Ed25519_Sig", "A");
    // Ed25519 sig appears same in both lists if any.
    __publicField(this, "ECDSA_256k1_Sig", "C");
    // ECDSA secp256k1 sig appears same in both lists if any.
    __publicField(this, "Ed448_Sig", "0A");
    // Ed448 signature appears in both lists.
    __publicField(this, "Ed25519_Big_Sig", "2A");
    // Ed25519 sig appears in both listsy.
    __publicField(this, "ECDSA_256k1_Big_Sig", "2C");
    // ECDSA secp256k1 sig appears in both lists.
    __publicField(this, "Ed448_Big_Sig", "3A");
  }
  // Ed448 signature appears in both lists.
  has(prop) {
    const m = new Map(
      Array.from(Object.entries(this), (v) => [v[1], v[0]])
    );
    return m.has(prop);
  }
};
var IdxBthSigDex = new IndexedBothSigCodex();
var Xizage = class {
  constructor(hs, ss, os, fs, ls) {
    __publicField(this, "hs");
    __publicField(this, "ss");
    __publicField(this, "os");
    __publicField(this, "fs");
    __publicField(this, "ls");
    this.hs = hs;
    this.ss = ss;
    this.os = os;
    this.fs = fs;
    this.ls = ls;
  }
};
var _a2;
var Indexer = (_a2 = class {
  constructor({
    raw = void 0,
    code = IdrDex.Ed25519_Sig,
    index: index2 = 0,
    ondex = void 0,
    qb64b = void 0,
    qb64 = void 0,
    qb2 = void 0
  }) {
    __publicField(this, "Codex", IdrDex);
    __publicField(this, "_code", "");
    __publicField(this, "_index", -1);
    __publicField(this, "_ondex");
    __publicField(this, "_raw", new Uint8Array(0));
    if (raw != void 0) {
      if (code == void 0) {
        throw new EmptyMaterialError(
          `Improper initialization need either (raw and code) or qb64b or qb64 or qb2.`
        );
      }
      if (!_a2.Sizes.has(code)) {
        throw new Error(`Unsupported code=${code}.`);
      }
      const xizage = _a2.Sizes.get(code);
      const os = xizage.os;
      const fs = xizage.fs;
      const cs = xizage.hs + xizage.ss;
      const ms = xizage.ss - xizage.os;
      if (!Number.isInteger(index2) || index2 < 0 || index2 > 64 ** ms - 1) {
        throw new Error(`Invalid index=${index2} for code=${code}.`);
      }
      if (ondex != void 0 && xizage.os != 0 && !(ondex >= 0 && ondex <= 64 ** os - 1)) {
        throw new Error(`Invalid ondex=${ondex} for code=${code}.`);
      }
      if (IdxCrtSigDex.has(code) && ondex != void 0) {
        throw new Error(`Non None ondex=${ondex} for code=${code}.`);
      }
      if (IdxBthSigDex.has(code)) {
        if (ondex == void 0) {
          ondex = index2;
        } else {
          if (ondex != index2 && os == 0) {
            throw new Error(
              `Non matching ondex=${ondex} and index=${index2} for code=${code}.`
            );
          }
        }
      }
      if (fs == void 0) {
        throw new Error("variable length unsupported");
      }
      const rawsize = Math.floor((fs - cs) * 3 / 4);
      raw = raw.slice(0, rawsize);
      if (raw.length != rawsize) {
        throw new Error(
          `Not enougth raw bytes for code=${code} and index=${index2} ,expected ${rawsize} got ${raw.length}.`
        );
      }
      this._code = code;
      this._index = index2;
      this._ondex = ondex;
      this._raw = raw;
    } else if (qb64b != void 0) {
      const qb642 = d(qb64b);
      this._exfil(qb642);
    } else if (qb64 != void 0) {
      this._exfil(qb64);
    } else if (qb2 != void 0) {
      this._bexfil(qb2);
    } else {
      throw new EmptyMaterialError(
        `Improper initialization need either (raw and code and index) or qb64b or qb64 or qb2.`
      );
    }
  }
  _bexfil(qb2) {
    throw new Error(`qb2 not yet supported: ${qb2}`);
  }
  static _rawSize(code) {
    const xizage = _a2.Sizes.get(code);
    return Math.floor(xizage.fs - (xizage.hs + xizage.ss) * 3 / 4);
  }
  get code() {
    return this._code;
  }
  get raw() {
    return this._raw;
  }
  get index() {
    return this._index;
  }
  get ondex() {
    return this._ondex;
  }
  get qb64() {
    return this._infil();
  }
  get qb64b() {
    return b(this.qb64);
  }
  _infil() {
    const code = this.code;
    const index2 = this.index;
    const ondex = this.ondex;
    const raw = this.raw;
    const ps = (3 - raw.length % 3) % 3;
    const xizage = _a2.Sizes.get(code);
    const cs = xizage.hs + xizage.ss;
    const ms = xizage.ss - xizage.os;
    if (index2 < 0 || index2 > 64 ** ms - 1) {
      throw new Error(`Invalid index=${index2} for code=${code}.`);
    }
    if (ondex != void 0 && xizage.os != 0 && !(ondex >= 0 && ondex <= 64 ** xizage.os - 1)) {
      throw new Error(
        `Invalid ondex=${ondex} for os=${xizage.os} and code=${code}.`
      );
    }
    const both = `${code}${intToB64(index2, ms)}${intToB64(
      ondex == void 0 ? 0 : ondex,
      xizage.os
    )}`;
    if (both.length != cs) {
      throw new Error(
        `Mismatch code size = ${cs} with table = ${both.length}.`
      );
    }
    if (cs % 4 != ps - xizage.ls) {
      throw new Error(
        `Invalid code=${both} for converted raw pad size=${ps}.`
      );
    }
    const bytes = new Uint8Array(ps + raw.length);
    for (let i2 = 0; i2 < ps; i2++) {
      bytes[i2] = 0;
    }
    for (let i2 = 0; i2 < raw.length; i2++) {
      const odx = i2 + ps;
      bytes[odx] = raw[i2];
    }
    const full = both + encodeBase64Url(import_buffer3.Buffer.from(bytes)).slice(ps - xizage.ls);
    if (full.length != xizage.fs) {
      throw new Error(`Invalid code=${both} for raw size=${raw.length}.`);
    }
    return full;
  }
  _exfil(qb64) {
    if (qb64.length == 0) {
      throw new Error("Empty Material");
    }
    const first = qb64[0];
    if (!Array.from(_a2.Hards.keys()).includes(first)) {
      throw new Error(`Unexpected code ${first}`);
    }
    const hs = _a2.Hards.get(first);
    if (qb64.length < hs) {
      throw new Error(`Need ${hs - qb64.length} more characters.`);
    }
    const hard = qb64.slice(0, hs);
    if (!Array.from(_a2.Sizes.keys()).includes(hard)) {
      throw new Error(`Unsupported code ${hard}`);
    }
    const xizage = _a2.Sizes.get(hard);
    const cs = xizage.hs + xizage.ss;
    const ms = xizage.ss - xizage.os;
    if (qb64.length < cs) {
      throw new Error(`Need ${cs - qb64.length} more characters.`);
    }
    const sindex = qb64.slice(hs, hs + ms);
    const index2 = b64ToInt(sindex);
    const sondex = qb64.slice(hs + ms, hs + ms + xizage.os);
    let ondex;
    if (IdxCrtSigDex.has(hard)) {
      ondex = xizage.os != 0 ? b64ToInt(sondex) : void 0;
      if (ondex != 0 && ondex != void 0) {
        throw new Error(`Invalid ondex=${ondex} for code=${hard}.`);
      } else {
        ondex = void 0;
      }
    } else {
      ondex = xizage.os != 0 ? b64ToInt(sondex) : index2;
    }
    if (xizage.fs == void 0) {
      throw new Error("variable length not supported");
    }
    if (qb64.length < xizage.fs) {
      throw new Error(`Need ${xizage.fs - qb64.length} more chars.`);
    }
    qb64 = qb64.slice(0, xizage.fs);
    const ps = cs % 4;
    const pbs = 2 * ps != 0 ? ps : xizage.ls;
    let raw;
    if (ps != 0) {
      const base = new Array(ps + 1).join("A") + qb64.slice(cs);
      const paw = decodeBase64Url(base);
      const pi3 = readInt(paw.slice(0, ps));
      if (pi3 & 2 ** pbs - 1) {
        throw new Error(
          `Non zeroed prepad bits = {pi & (2 ** pbs - 1 ):<06b} in {qb64b[cs:cs+1]}.`
        );
      }
      raw = paw.slice(ps);
    } else {
      const base = qb64.slice(cs);
      const paw = decodeBase64Url(base);
      const li = readInt(paw.slice(0, xizage.ls));
      if (li != 0) {
        if (li == 1) {
          throw new Error(`Non zeroed lead byte = 0x{li:02x}.`);
        } else {
          throw new Error(`Non zeroed lead bytes = 0x{li:04x}`);
        }
      }
      raw = paw.slice(xizage.ls);
    }
    if (raw.length != Math.floor((qb64.length - cs) * 3 / 4)) {
      throw new Error(`Improperly qualified material = ${qb64}`);
    }
    this._code = hard;
    this._index = index2;
    this._ondex = ondex;
    this._raw = new Uint8Array(raw);
  }
}, __publicField(_a2, "Hards", /* @__PURE__ */ new Map([
  ["A", 1],
  ["B", 1],
  ["C", 1],
  ["D", 1],
  ["E", 1],
  ["F", 1],
  ["G", 1],
  ["H", 1],
  ["I", 1],
  ["J", 1],
  ["K", 1],
  ["L", 1],
  ["M", 1],
  ["N", 1],
  ["O", 1],
  ["P", 1],
  ["Q", 1],
  ["R", 1],
  ["S", 1],
  ["T", 1],
  ["U", 1],
  ["V", 1],
  ["W", 1],
  ["X", 1],
  ["Y", 1],
  ["Z", 1],
  ["a", 1],
  ["b", 1],
  ["c", 1],
  ["d", 1],
  ["e", 1],
  ["f", 1],
  ["g", 1],
  ["h", 1],
  ["i", 1],
  ["j", 1],
  ["k", 1],
  ["l", 1],
  ["m", 1],
  ["n", 1],
  ["o", 1],
  ["p", 1],
  ["q", 1],
  ["r", 1],
  ["s", 1],
  ["t", 1],
  ["u", 1],
  ["v", 1],
  ["w", 1],
  ["x", 1],
  ["y", 1],
  ["z", 1],
  ["0", 2],
  ["1", 2],
  ["2", 2],
  ["3", 2],
  ["4", 2]
])), __publicField(_a2, "Sizes", new Map(
  Object.entries({
    A: new Xizage(1, 1, 0, 88, 0),
    B: new Xizage(1, 1, 0, 88, 0),
    C: new Xizage(1, 1, 0, 88, 0),
    D: new Xizage(1, 1, 0, 88, 0),
    E: new Xizage(1, 1, 0, 88, 0),
    F: new Xizage(1, 1, 0, 88, 0),
    "0A": new Xizage(2, 2, 1, 156, 0),
    "0B": new Xizage(2, 2, 1, 156, 0),
    "2A": new Xizage(2, 4, 2, 92, 0),
    "2B": new Xizage(2, 4, 2, 92, 0),
    "2C": new Xizage(2, 4, 2, 92, 0),
    "2D": new Xizage(2, 4, 2, 92, 0),
    "2E": new Xizage(2, 4, 2, 92, 0),
    "2F": new Xizage(2, 4, 2, 92, 0),
    "3A": new Xizage(2, 6, 3, 160, 0),
    "3B": new Xizage(2, 6, 3, 160, 0),
    "0z": new Xizage(2, 2, 0, void 0, 0),
    "1z": new Xizage(2, 2, 1, 76, 1),
    "4z": new Xizage(2, 6, 3, 80, 1)
  })
)), _a2);
var Siger = class extends Indexer {
  constructor({ raw, code, index: index2, ondex, qb64, qb64b, qb2 }, verfer) {
    super({ raw, code, index: index2, ondex, qb64, qb64b, qb2 });
    __publicField(this, "_verfer");
    if (!IdxSigDex.has(this.code)) {
      throw new Error(`Invalid code = ${this.code} for Siger.`);
    }
    this._verfer = verfer;
  }
  get verfer() {
    return this._verfer;
  }
  set verfer(verfer) {
    this._verfer = verfer;
  }
};
var Signer = class extends Matter {
  constructor({
    raw,
    code = MtrDex.Ed25519_Seed,
    qb64,
    qb64b,
    qb2,
    transferable = true
  }) {
    var __super = (...args) => {
      super(...args);
      __publicField(this, "_sign");
      __publicField(this, "_verfer");
      return this;
    };
    try {
      __super({ raw, code, qb64, qb64b, qb2 });
    } catch (e3) {
      if (e3 instanceof EmptyMaterialError) {
        if (code == MtrDex.Ed25519_Seed) {
          const raw2 = import_libsodium_wrappers_sumo4.default.randombytes_buf(
            import_libsodium_wrappers_sumo4.default.crypto_sign_SEEDBYTES
          );
          __super({ raw: raw2, code, qb64, qb64b, qb2 });
        } else {
          throw new Error(`Unsupported signer code = ${code}.`);
        }
      } else {
        throw e3;
      }
    }
    let verfer;
    if (this.code == MtrDex.Ed25519_Seed) {
      this._sign = this._ed25519;
      const keypair = import_libsodium_wrappers_sumo4.default.crypto_sign_seed_keypair(this.raw);
      verfer = new Verfer({
        raw: keypair.publicKey,
        code: transferable ? MtrDex.Ed25519 : MtrDex.Ed25519N
      });
    } else {
      throw new Error(`Unsupported signer code = ${this.code}.`);
    }
    this._verfer = verfer;
  }
  /**
   * @description Property verfer:
   Returns Verfer instance
   Assumes ._verfer is correctly assigned
   */
  get verfer() {
    return this._verfer;
  }
  sign(ser, index2 = null, only = false, ondex = void 0) {
    return this._sign(ser, this.raw, this.verfer, index2, only, ondex);
  }
  _ed25519(ser, seed, verfer, index2, only = false, ondex) {
    const sig = import_libsodium_wrappers_sumo4.default.crypto_sign_detached(
      ser,
      import_buffer4.Buffer.concat([seed, verfer.raw])
    );
    if (index2 == null) {
      return new Cigar({ raw: sig, code: MtrDex.Ed25519_Sig }, verfer);
    } else {
      let code;
      if (only) {
        ondex = void 0;
        if (index2 <= 63) {
          code = IdrDex.Ed25519_Crt_Sig;
        } else {
          code = IdrDex.Ed25519_Big_Crt_Sig;
        }
      } else {
        if (ondex == void 0) {
          ondex = index2;
        }
        if (ondex == index2 && index2 <= 63)
          code = IdrDex.Ed25519_Sig;
        else
          code = IdrDex.Ed25519_Big_Sig;
      }
      return new Siger(
        { raw: sig, code, index: index2, ondex },
        verfer
      );
    }
  }
};
var Tier = ((Tier3) => {
  Tier3["low"] = "low";
  Tier3["med"] = "med";
  Tier3["high"] = "high";
  return Tier3;
})(Tier || {});
var Salter = class extends Matter {
  constructor({
    raw,
    code = MtrDex.Salt_128,
    tier = "low",
    qb64,
    qb64b,
    qb2
  }) {
    var __super = (...args) => {
      super(...args);
      __publicField(this, "_tier");
      return this;
    };
    try {
      __super({ raw, code, qb64, qb64b, qb2 });
    } catch (e3) {
      if (e3 instanceof EmptyMaterialError) {
        if (code == MtrDex.Salt_128) {
          const salt = import_libsodium_wrappers_sumo6.default.randombytes_buf(
            import_libsodium_wrappers_sumo6.default.crypto_pwhash_SALTBYTES
          );
          __super({ raw: salt, code });
        } else {
          throw new Error(
            "invalid code for Salter, only Salt_128 accepted"
          );
        }
      } else {
        throw e3;
      }
    }
    if (this.code != MtrDex.Salt_128) {
      throw new Error("invalid code for Salter, only Salt_128 accepted");
    }
    this._tier = tier !== null ? tier : "low";
  }
  stretch(size2 = 32, path = "", tier = null, temp = false) {
    tier = tier == null ? this.tier : tier;
    let opslimit, memlimit;
    if (temp) {
      opslimit = 1;
      memlimit = 8192;
    } else {
      switch (tier) {
        case "low":
          opslimit = 2;
          memlimit = 67108864;
          break;
        case "med":
          opslimit = 3;
          memlimit = 268435456;
          break;
        case "high":
          opslimit = 4;
          memlimit = 1073741824;
          break;
        default:
          throw new Error(`Unsupported security tier = ${tier}.`);
      }
    }
    return import_libsodium_wrappers_sumo6.default.crypto_pwhash(
      size2,
      path,
      this.raw,
      opslimit,
      memlimit,
      import_libsodium_wrappers_sumo6.default.crypto_pwhash_ALG_ARGON2ID13
    );
  }
  signer(code = MtrDex.Ed25519_Seed, transferable = true, path = "", tier = null, temp = false) {
    const seed = this.stretch(Matter._rawSize(code), path, tier, temp);
    return new Signer({
      raw: seed,
      code,
      transferable
    });
  }
  get tier() {
    return this._tier;
  }
};
var Decrypter = class extends Matter {
  constructor({ raw, code = MtrDex.X25519_Private, qb64, qb64b, qb2 }, seed = void 0) {
    var __super = (...args) => {
      super(...args);
      __publicField(this, "_decrypt");
      return this;
    };
    try {
      __super({ raw, code, qb64, qb64b, qb2 });
    } catch (e3) {
      if (e3 instanceof EmptyMaterialError) {
        if (seed != void 0) {
          const signer = new Signer({ qb64b: seed });
          if (signer.code != MtrDex.Ed25519_Seed) {
            throw new Error(
              `Unsupported signing seed derivation code ${signer.code}`
            );
          }
          const sigkey = new Uint8Array(
            signer.raw.length + signer.verfer.raw.length
          );
          sigkey.set(signer.raw);
          sigkey.set(signer.verfer.raw, signer.raw.length);
          raw = import_libsodium_wrappers_sumo5.default.crypto_sign_ed25519_sk_to_curve25519(sigkey);
          __super({ raw, code, qb64, qb64b, qb2 });
        } else {
          throw e3;
        }
      } else {
        throw e3;
      }
    }
    if (this.code == MtrDex.X25519_Private) {
      this._decrypt = this._x25519;
    } else {
      throw new Error(`Unsupported decrypter code = ${this.code}.`);
    }
  }
  decrypt(ser = null, cipher = null, transferable = false) {
    if (ser == null && cipher == null) {
      throw new EmptyMaterialError("Neither ser or cipher were provided");
    }
    if (ser != null) {
      cipher = new Cipher({ qb64b: ser });
    }
    return this._decrypt(cipher, this.raw, transferable);
  }
  _x25519(cipher, prikey, transferable = false) {
    const pubkey = import_libsodium_wrappers_sumo5.default.crypto_scalarmult_base(prikey);
    const plain = import_libsodium_wrappers_sumo5.default.crypto_box_seal_open(
      cipher.raw,
      pubkey,
      prikey
    );
    if (cipher.code == MtrDex.X25519_Cipher_Salt) {
      return new Salter({ qb64b: plain });
    } else if (cipher.code == MtrDex.X25519_Cipher_Seed) {
      return new Signer({ qb64b: plain, transferable });
    } else {
      throw new Error(`Unsupported cipher text code == ${cipher.code}`);
    }
  }
};
var Cipher = class extends Matter {
  constructor({ raw, code, qb64, qb64b, qb2 }) {
    if (raw != void 0 && code == void 0) {
      if (raw.length == Matter._rawSize(MtrDex.X25519_Cipher_Salt)) {
        code = MtrDex.X25519_Cipher_Salt;
      } else if (raw.length == Matter._rawSize(MtrDex.X25519_Cipher_Seed)) {
        code = MtrDex.X25519_Cipher_Salt;
      }
    }
    super({ raw, code, qb64b, qb64, qb2 });
    if (!Array.from([
      MtrDex.X25519_Cipher_Salt,
      MtrDex.X25519_Cipher_Seed
    ]).includes(this.code)) {
      throw new Error(`Unsupported Cipher code == ${this.code}`);
    }
  }
  decrypt(prikey = void 0, seed = void 0) {
    const decrypter = new Decrypter({ qb64b: prikey }, seed);
    return decrypter.decrypt(this.qb64b);
  }
};
var CounterCodex = class extends Codex {
  constructor() {
    super(...arguments);
    __publicField(this, "ControllerIdxSigs", "-A");
    // Qualified Base64 Indexed Signature.
    __publicField(this, "WitnessIdxSigs", "-B");
    // Qualified Base64 Indexed Signature.
    __publicField(this, "NonTransReceiptCouples", "-C");
    // Composed Base64 Couple, pre+cig.
    __publicField(this, "TransReceiptQuadruples", "-D");
    // Composed Base64 Quadruple, pre+snu+dig+sig.
    __publicField(this, "FirstSeenReplayCouples", "-E");
    // Composed Base64 Couple, fnu+dts.
    __publicField(this, "TransIdxSigGroups", "-F");
    // Composed Base64 Group, pre+snu+dig+ControllerIdxSigs group.
    __publicField(this, "SealSourceCouples", "-G");
    // Composed Base64 couple, snu+dig of given delegators or issuers event
    __publicField(this, "TransLastIdxSigGroups", "-H");
    // Composed Base64 Group, pre+ControllerIdxSigs group.
    __publicField(this, "SealSourceTriples", "-I");
    // Composed Base64 triple, pre+snu+dig of anchoring source event
    __publicField(this, "SadPathSig", "-J");
    // Composed Base64 Group path+TransIdxSigGroup of SAID of content
    __publicField(this, "SadPathSigGroup", "-K");
    // Composed Base64 Group, root(path)+SaidPathCouples
    __publicField(this, "PathedMaterialQuadlets", "-L");
    // Composed Grouped Pathed Material Quadlet (4 char each)
    __publicField(this, "AttachedMaterialQuadlets", "-V");
    // Composed Grouped Attached Material Quadlet (4 char each)
    __publicField(this, "BigAttachedMaterialQuadlets", "-0V");
    // Composed Grouped Attached Material Quadlet (4 char each)
    __publicField(this, "KERIProtocolStack", "--AAA");
  }
  // KERI ACDC Protocol Stack CESR Version
};
var CtrDex = new CounterCodex();
var _a3;
var Counter = (_a3 = class {
  constructor({ code, count: count2, countB64, qb64b, qb64, qb2 }) {
    __publicField(this, "_code", "");
    __publicField(this, "_count", -1);
    if (code != void 0) {
      if (!_a3.Sizes.has(code)) {
        throw new Error(`"Unsupported code=${code}.`);
      }
      const sizage = _a3.Sizes.get(code);
      const cs = sizage.hs + sizage.ss;
      if (sizage.fs != cs || cs % 4 != 0) {
        throw new Error(
          `Whole code size not full size or not multiple of 4. cs=${cs} fs=${sizage.fs}.`
        );
      }
      if (count2 == void 0) {
        count2 = countB64 == void 0 ? 1 : b64ToInt(countB64);
      }
      if (count2 < 0 || count2 > 64 ** sizage.ss - 1) {
        throw new Error(`Invalid count=${count2} for code=${code}.`);
      }
      this._code = code;
      this._count = count2;
    } else if (qb64b != void 0) {
      const qb642 = d(qb64b);
      this._exfil(qb642);
    } else if (qb64 != void 0) {
      this._exfil(qb64);
    } else if (qb2 != void 0) {
    } else {
      throw new Error(
        `Improper initialization need either (code and count) or qb64b or qb64 or qb2.`
      );
    }
  }
  get code() {
    return this._code;
  }
  get count() {
    return this._count;
  }
  get qb64() {
    return this._infil();
  }
  get qb64b() {
    return b(this.qb64);
  }
  countToB64(l) {
    if (l == void 0) {
      const sizage = _a3.Sizes.get(this.code);
      l = sizage.ss;
    }
    return intToB64(this.count, l);
  }
  static semVerToB64(version3 = "", major = 0, minor = 0, patch = 0) {
    let parts = [major, minor, patch];
    if (version3 != "") {
      const ssplits = version3.split(".");
      const splits = ssplits.map((x2) => {
        if (x2 == "")
          return 0;
        return parseInt(x2);
      });
      const off = splits.length;
      const x = 3 - off;
      for (let i2 = 0; i2 < x; i2++) {
        splits.push(parts[i2 + off]);
      }
      parts = splits;
    }
    parts.forEach((p) => {
      if (p < 0 || p > 63) {
        throw new Error(
          `Out of bounds semantic version. Part=${p} is < 0 or > 63.`
        );
      }
    });
    return parts.map((p) => {
      return intToB64(p, 1);
    }).join("");
  }
  _infil() {
    const code = this.code;
    const count2 = this.count;
    const sizage = _a3.Sizes.get(code);
    const cs = sizage.hs + sizage.ss;
    if (sizage.fs != cs || cs % 4 != 0) {
      throw new Error(
        `Whole code size not full size or not multiple of 4. cs=${cs} fs=${sizage.fs}.`
      );
    }
    if (count2 < 0 || count2 > 64 ** sizage.ss - 1) {
      throw new Error(`Invalid count=${count2} for code=${code}.`);
    }
    const both = `${code}${intToB64(count2, sizage.ss)}`;
    if (both.length % 4) {
      throw new Error(
        `Invalid size = ${both.length} of ${both} not a multiple of 4.`
      );
    }
    return both;
  }
  _exfil(qb64) {
    if (qb64.length == 0) {
      throw new Error("Empty Material");
    }
    const first = qb64.slice(0, 2);
    if (!_a3.Hards.has(first)) {
      throw new Error(`Unexpected code ${first}`);
    }
    const hs = _a3.Hards.get(first);
    if (qb64.length < hs) {
      throw new Error(`Need ${hs - qb64.length} more characters.`);
    }
    const hard = qb64.slice(0, hs);
    if (!_a3.Sizes.has(hard)) {
      throw new Error(`Unsupported code ${hard}`);
    }
    const sizage = _a3.Sizes.get(hard);
    const cs = sizage.hs + sizage.ss;
    if (qb64.length < cs) {
      throw new Error(`Need ${cs - qb64.length} more chars.`);
    }
    const scount = qb64.slice(sizage.hs, sizage.hs + sizage.ss);
    const count2 = b64ToInt(scount);
    this._code = hard;
    this._count = count2;
  }
}, __publicField(_a3, "Sizes", new Map(
  Object.entries({
    "-A": new Sizage(2, 2, 4, 0),
    "-B": new Sizage(2, 2, 4, 0),
    "-C": new Sizage(2, 2, 4, 0),
    "-D": new Sizage(2, 2, 4, 0),
    "-E": new Sizage(2, 2, 4, 0),
    "-F": new Sizage(2, 2, 4, 0),
    "-G": new Sizage(2, 2, 4, 0),
    "-H": new Sizage(2, 2, 4, 0),
    "-I": new Sizage(2, 2, 4, 0),
    "-J": new Sizage(2, 2, 4, 0),
    "-K": new Sizage(2, 2, 4, 0),
    "-L": new Sizage(2, 2, 4, 0),
    "-V": new Sizage(2, 2, 4, 0),
    "-0V": new Sizage(3, 5, 8, 0),
    "--AAA": new Sizage(5, 3, 8, 0)
  })
)), __publicField(_a3, "Hards", /* @__PURE__ */ new Map([
  ["-A", 2],
  ["-B", 2],
  ["-C", 2],
  ["-D", 2],
  ["-E", 2],
  ["-F", 2],
  ["-G", 2],
  ["-H", 2],
  ["-I", 2],
  ["-J", 2],
  ["-K", 2],
  ["-L", 2],
  ["-M", 2],
  ["-N", 2],
  ["-O", 2],
  ["-P", 2],
  ["-Q", 2],
  ["-R", 2],
  ["-S", 2],
  ["-T", 2],
  ["-U", 2],
  ["-V", 2],
  ["-W", 2],
  ["-X", 2],
  ["-Y", 2],
  ["-Z", 2],
  ["-a", 2],
  ["-b", 2],
  ["-c", 2],
  ["-d", 2],
  ["-e", 2],
  ["-f", 2],
  ["-g", 2],
  ["-h", 2],
  ["-i", 2],
  ["-j", 2],
  ["-k", 2],
  ["-l", 2],
  ["-m", 2],
  ["-n", 2],
  ["-o", 2],
  ["-p", 2],
  ["-q", 2],
  ["-r", 2],
  ["-s", 2],
  ["-t", 2],
  ["-u", 2],
  ["-v", 2],
  ["-w", 2],
  ["-x", 2],
  ["-y", 2],
  ["-z", 2],
  ["-0", 3],
  ["--", 5]
])), _a3);
var Seqner = class extends Matter {
  constructor({
    raw,
    code = MtrDex.Salt_128,
    qb64,
    qb64b,
    qb2,
    sn,
    snh,
    ...kwa
  }) {
    if (!raw && !qb64b && !qb64 && !qb2) {
      if (sn === void 0) {
        if (snh === void 0) {
          sn = 0;
        } else {
          sn = parseInt(snh, 16);
        }
      }
      raw = intToBytes(sn, Matter._rawSize(MtrDex.Salt_128));
    }
    super({ raw, code, qb64, qb64b, qb2, ...kwa });
    if (this.code !== MtrDex.Salt_128) {
      throw new Error(`Invalid code = ${this.code} for Seqner.`);
    }
  }
  get sn() {
    return bytesToInt(this.raw);
  }
  get snh() {
    return this.sn.toString(16);
  }
};
var Diger = class _Diger extends Matter {
  // This constructor will assign digest verification function to ._verify
  constructor({ raw, code = MtrDex.Blake3_256, qb64, qb64b, qb2 }, ser = null) {
    var __super = (...args) => {
      super(...args);
      __publicField(this, "_verify");
      return this;
    };
    try {
      __super({ raw, code, qb64, qb64b, qb2 });
    } catch (error) {
      if (ser == null) {
        throw error;
      }
      if (code === MtrDex.Blake3_256) {
        const dig = import_buffer5.Buffer.from(
          blake3.create({ dkLen: 32 }).update(ser).digest()
        );
        __super({ raw: dig, code });
      } else {
        throw new Error(`Unsupported code = ${code} for digester.`);
      }
    }
    if (code === MtrDex.Blake3_256) {
      this._verify = this.blake3_256;
    } else {
      throw new Error(`Unsupported code = ${code} for digester.`);
    }
  }
  /**
   *
   * @param {Uint8Array} ser  serialization bytes
   * @description  This method will return true if digest of bytes serialization ser matches .raw
   * using .raw as reference digest for ._verify digest algorithm determined
   by .code
   */
  verify(ser) {
    return this._verify(ser, this.raw);
  }
  compare(ser, dig = null, diger = null) {
    if (dig != null) {
      if (dig.toString() == this.qb64) {
        return true;
      }
      diger = new _Diger({ qb64b: dig });
    } else if (diger != null) {
      if (diger.qb64b == this.qb64b) {
        return true;
      }
    } else {
      throw new Error("Both dig and diger may not be None.");
    }
    if (diger.code == this.code) {
      return false;
    }
    return diger.verify(ser) && this.verify(ser);
  }
  blake3_256(ser, dig) {
    const digest = import_buffer5.Buffer.from(
      blake3.create({ dkLen: 32 }).update(ser).digest()
    );
    return digest.toString() === dig.toString();
  }
};
var CesrNumber = class extends Matter {
  constructor({ raw, code, qb64b, qb64, qb2 }, num, numh) {
    let _num;
    if (raw == void 0 && qb64 == void 0 && qb64b == void 0 && qb2 == void 0) {
      if (typeof num == "number") {
        _num = num;
      } else if (numh != void 0) {
        _num = parseInt(numh, 16);
      } else {
        _num = 0;
      }
    }
    if (_num == void 0) {
      throw new Error("Invalid whole number");
    }
    if (_num <= 256 ** 2 - 1) {
      code = NumDex.Short;
    } else if (_num <= 256 ** 4 - 1) {
      code = code = NumDex.Long;
    } else if (_num <= 256 ** 8 - 1) {
      code = code = NumDex.Big;
    } else if (_num <= 256 ** 16 - 1) {
      code = code = NumDex.Huge;
    } else {
      throw new Error(`Invalid num = ${num}, too large to encode.`);
    }
    raw = intToBytes(_num, Matter._rawSize(code));
    super({ raw, code, qb64b, qb64, qb2 });
    if (!NumDex.has(this.code)) {
      throw new Error("Invalid code " + code + " for Number");
    }
  }
  get num() {
    return bytesToInt(this.raw);
  }
  get numh() {
    return this.num.toString(16);
  }
  get positive() {
    return this.num > 0;
  }
};
var Serder = class {
  constructor(ked, kind = "JSON", code = MtrDex.Blake3_256) {
    __publicField(this, "_kind");
    __publicField(this, "_raw", "");
    __publicField(this, "_ked", {});
    __publicField(this, "_ident", "KERI");
    __publicField(this, "_size", 0);
    __publicField(this, "_version", Versionage);
    __publicField(this, "_code");
    this._code = code;
    this._kind = kind;
    this.ked = ked;
  }
  set ked(ked) {
    const [raw, ident, kind, kd, version3] = this._exhale(ked, this._kind);
    const size2 = raw.length;
    this._raw = raw;
    this._ident = ident;
    this._ked = kd;
    this._kind = kind;
    this._size = size2;
    this._version = version3;
  }
  get pre() {
    return this._ked["i"];
  }
  get ked() {
    return this._ked;
  }
  get code() {
    return this._code;
  }
  get raw() {
    return this._raw;
  }
  get sner() {
    return new CesrNumber({}, this.ked["s"]);
  }
  get sn() {
    return this.sner.num;
  }
  get kind() {
    return this._kind;
  }
  _exhale(ked, kind) {
    return sizeify(ked, kind);
  }
  get ident() {
    return this._ident;
  }
  get size() {
    return this._size;
  }
  get version() {
    return this._version;
  }
  get verfers() {
    let keys = [];
    if ("k" in this._ked) {
      keys = this._ked["k"];
    } else {
      keys = [];
    }
    const verfers = [];
    for (const key of keys) {
      verfers.push(new Verfer({ qb64: key }));
    }
    return verfers;
  }
  get digers() {
    let keys = [];
    if ("n" in this._ked) {
      keys = this._ked["n"];
    } else {
      keys = [];
    }
    const digers = [];
    for (const key of keys) {
      digers.push(new Diger({ qb64: key }));
    }
    return digers;
  }
  pretty() {
    return JSON.stringify(this._ked, void 0, 2);
  }
};
function dumps(ked, kind) {
  if (kind == "JSON") {
    return JSON.stringify(ked);
  } else {
    throw new Error("unsupported event encoding");
  }
}
function sizeify(ked, kind) {
  if (!("v" in ked)) {
    throw new Error("Missing or empty version string");
  }
  const [ident, knd, version3] = deversify(ked["v"]);
  if (version3 != Versionage) {
    throw new Error(`unsupported version ${version3.toString()}`);
  }
  if (kind == void 0) {
    kind = knd;
  }
  let raw = dumps(ked, kind);
  const size2 = new TextEncoder().encode(raw).length;
  ked["v"] = versify(ident, version3, kind, size2);
  raw = dumps(ked, kind);
  return [raw, ident, kind, ked, version3];
}
var Dummy = "#";
var Prefixer = class _Prefixer extends Matter {
  constructor({ raw, code, qb64b, qb64, qb2 }, ked) {
    var __super = (...args) => {
      super(...args);
      __publicField(this, "_derive");
      __publicField(this, "_verify");
      return this;
    };
    try {
      __super({ raw, code, qb64b, qb64, qb2 });
    } catch (e3) {
      if (e3 instanceof EmptyMaterialError) {
        if (ked == void 0 || code == void 0 && !("i" in ked)) {
          throw e3;
        }
        if (code == void 0) {
          __super({ qb64: ked["i"], code });
          code = this.code;
        }
        let _derive;
        if (code == MtrDex.Ed25519N) {
          _derive = _Prefixer._derive_ed25519N;
        } else if (code == MtrDex.Ed25519) {
          _derive = _Prefixer._derive_ed25519;
        } else if (code == MtrDex.Blake3_256) {
          _derive = _Prefixer._derive_blake3_256;
        } else {
          throw new Error(`Unsupported code = ${code} for prefixer.`);
        }
        [raw, code] = _derive(ked);
        __super({ raw, code });
        this._derive = _derive;
      } else {
        throw e3;
      }
    }
    if (this.code == MtrDex.Ed25519N) {
      this._verify = this._verify_ed25519N;
    } else if (this.code == MtrDex.Ed25519) {
      this._verify = this._verify_ed25519;
    } else if (this.code == MtrDex.Blake3_256) {
      this._verify = this._verify_blake3_256;
    } else {
      throw new Error(`Unsupported code = ${code} for prefixer.`);
    }
  }
  derive(ked) {
    if (ked["i"] != Ilks.icp) {
      throw new Error(
        `Non-incepting ilk ${ked["i"]} for prefix derivation`
      );
    }
    return this._derive(ked);
  }
  verify(ked, prefixed = false) {
    if (ked["i"] != Ilks.icp) {
      throw new Error(
        `Non-incepting ilk ${ked["i"]} for prefix derivation`
      );
    }
    return this._verify(ked, this.qb64, prefixed);
  }
  static _derive_ed25519N(ked) {
    let verfer;
    const keys = ked["k"];
    if (keys.length != 1) {
      throw new Error(
        `Basic derivation needs at most 1 key got ${keys.length} keys instead`
      );
    }
    try {
      verfer = new Verfer({ qb64: keys[0] });
    } catch (e3) {
      throw new Error(`Error extracting public key = ${e3}`);
    }
    if (verfer.code != MtrDex.Ed25519N) {
      throw new Error(`Mismatch derivation code = ${verfer.code}`);
    }
    const next = "n" in ked ? ked["n"] : [];
    if (verfer.code == MtrDex.Ed25519N && next.length > 0) {
      throw new Error(
        `Non-empty nxt = ${next} for non-transferable code = ${verfer.code}`
      );
    }
    const backers = "b" in ked ? ked["b"] : [];
    if (verfer.code == MtrDex.Ed25519N && backers.length > 0) {
      throw new Error(
        `Non-empty b =${backers} for non-transferable code = ${verfer.code}`
      );
    }
    const anchor = "a" in ked ? ked["a"] : [];
    if (verfer.code == MtrDex.Ed25519N && anchor.length > 0) {
      throw new Error(
        `Non-empty a = ${verfer.code} for non-transferable code = ${verfer.code}`
      );
    }
    return [verfer.raw, verfer.code];
  }
  static _derive_ed25519(ked) {
    let verfer;
    const keys = ked["k"];
    if (keys.length != 1) {
      throw new Error(
        `Basic derivation needs at most 1 key got ${keys.length} keys instead`
      );
    }
    try {
      verfer = new Verfer({ qb64: keys[0] });
    } catch (e3) {
      throw new Error(`Error extracting public key = ${e3}`);
    }
    if (verfer.code in [MtrDex.Ed25519]) {
      throw new Error(`Mismatch derivation code = ${verfer.code}`);
    }
    return [verfer.raw, verfer.code];
  }
  static _derive_blake3_256(ked) {
    const kd = ked;
    const ilk = ked["t"];
    if (![Ilks.icp, Ilks.dip, Ilks.vcp, Ilks.dip].includes(ilk)) {
      throw new Error(`Invalid ilk = ${ilk} to derive pre.`);
    }
    kd["i"] = "".padStart(Matter.Sizes.get(MtrDex.Blake3_256).fs, Dummy);
    kd["d"] = ked["i"];
    const [raw] = sizeify(ked);
    const dig = import_buffer6.Buffer.from(
      blake3.create({ dkLen: 32 }).update(raw).digest()
    );
    return [dig, MtrDex.Blake3_256];
  }
  _verify_ed25519N(ked, pre, prefixed = false) {
    try {
      const keys = ked["k"];
      if (keys.length != 1) {
        return false;
      }
      if (keys[0] != pre) {
        return false;
      }
      if (prefixed && ked["i"] != pre) {
        return false;
      }
      const next = "n" in ked ? ked["n"] : [];
      if (next.length > 0) {
        return false;
      }
    } catch (e3) {
      return false;
    }
    return true;
  }
  _verify_ed25519(ked, pre, prefixed = false) {
    try {
      const keys = ked["k"];
      if (keys.length != 1) {
        return false;
      }
      if (keys[0] != pre) {
        return false;
      }
      if (prefixed && ked["i"] != pre) {
        return false;
      }
    } catch (e3) {
      return false;
    }
    return true;
  }
  _verify_blake3_256(ked, pre, prefixed = false) {
    try {
      const [raw] = _Prefixer._derive_blake3_256(ked);
      const crymat = new Matter({ raw, code: MtrDex.Blake3_256 });
      if (crymat.qb64 != pre) {
        return false;
      }
      if (prefixed && ked["i"] != pre) {
        return false;
      }
    } catch (e3) {
      return false;
    }
    return true;
  }
};
var Dummy2 = "#";
var Ids = ((Ids2) => {
  Ids2["d"] = "d";
  return Ids2;
})(Ids || {});
var Digestage = class {
  constructor(klas, size2, length) {
    __publicField(this, "klas");
    __publicField(this, "size", 0);
    __publicField(this, "length", 0);
    this.klas = klas;
    this.size = size2;
    this.length = length;
  }
};
var _a4;
var Saider = (_a4 = class extends Matter {
  constructor({ raw, code, qb64b, qb64, qb2 }, sad, kind, label = "d") {
    try {
      super({ raw, code, qb64b, qb64, qb2 });
    } catch (e3) {
      if (e3 instanceof EmptyMaterialError) {
        if (sad == void 0 || !(label in sad)) {
          throw e3;
        }
        if (code == void 0) {
          if (sad[label] != "") {
            super({ qb64: sad[label], code });
            code = this.code;
          } else {
            code = MtrDex.Blake3_256;
          }
        }
        if (!DigiDex.has(code)) {
          throw new Error(`Unsupported digest code = ${code}`);
        }
        [raw] = _a4._derive({ ...sad }, code, kind, label);
        super({ raw, code });
      } else {
        throw e3;
      }
    }
    if (!this.digestive) {
      throw new Error(`Unsupported digest code = ${this.code}.`);
    }
  }
  static _derive_blake3_256(ser, _digest_size, _length) {
    return import_buffer7.Buffer.from(blake3.create({ dkLen: 32 }).update(ser).digest());
  }
  static _derive(sad, code, kind, label) {
    if (!DigiDex.has(code) || !_a4.Digests.has(code)) {
      throw new Error(`Unsupported digest code = ${code}.`);
    }
    sad = { ...sad };
    sad[label] = "".padStart(Matter.Sizes.get(code).fs, Dummy2);
    if ("v" in sad) {
      [, , kind, sad] = sizeify(sad, kind);
    }
    const ser = { ...sad };
    const digestage = _a4.Digests.get(code);
    const cpa = _a4._serialze(ser, kind);
    const args = [];
    if (digestage.size != void 0) {
      args.push(digestage.size);
    }
    if (digestage.length != void 0) {
      args.push(digestage.length);
    }
    return [digestage.klas(cpa, ...args), sad];
  }
  derive(sad, code, kind, label) {
    code = code != void 0 ? code : this.code;
    return _a4._derive(sad, code, kind, label);
  }
  verify(sad, prefixed = false, versioned = false, kind, label = "d") {
    try {
      const [raw, dsad] = _a4._derive(sad, this.code, kind, label);
      const saider = new _a4({ raw, code: this.code });
      if (this.qb64 != saider.qb64) {
        return false;
      }
      if ("v" in sad && versioned) {
        if (sad["v"] != dsad["v"]) {
          return false;
        }
      }
      if (prefixed && sad[label] != this.qb64) {
        return false;
      }
    } catch (e3) {
      return false;
    }
    return true;
  }
  static _serialze(sad, kind) {
    let knd = "JSON";
    if ("v" in sad) {
      [, knd] = deversify(sad["v"]);
    }
    if (kind == void 0) {
      kind = knd;
    }
    return dumps(sad, kind);
  }
  static saidify(sad, code = MtrDex.Blake3_256, kind = "JSON", label = "d") {
    if (!(label in sad)) {
      throw new Error(`Missing id field labeled=${label} in sad.`);
    }
    let raw;
    [raw, sad] = _a4._derive(sad, code, kind, label);
    const saider = new _a4(
      { raw, code },
      void 0,
      kind,
      label
    );
    sad[label] = saider.qb64;
    return [saider, sad];
  }
}, __publicField(_a4, "Digests", /* @__PURE__ */ new Map([
  [
    MtrDex.Blake3_256,
    new Digestage(_a4._derive_blake3_256, void 0, void 0)
  ]
])), _a4);
function pad(n, width = 3, z = 0) {
  return (String(z).repeat(width) + String(n)).slice(String(n).length);
}
function extractValues(ked, labels) {
  let values = [];
  for (const label of labels) {
    values = extractElementValues(ked[label], values);
  }
  return values;
}
function arrayEquals(ar1, ar2) {
  return ar1.length === ar2.length && ar1.every((val, index2) => val === ar2[index2]);
}
function extractElementValues(element, values) {
  let data = [];
  try {
    if (element instanceof Array && !(typeof element == "string")) {
      for (const k in element)
        extractElementValues(element[k], values);
    } else if (typeof element == "string") {
      values.push(element);
    }
    data = values;
  } catch (error) {
    throw new Error(error);
  }
  return data;
}
function nowUTC() {
  return /* @__PURE__ */ new Date();
}
function range2(start, stop, step) {
  if (typeof stop == "undefined") {
    stop = start;
    start = 0;
  }
  if (typeof step == "undefined") {
    step = 1;
  }
  if (step > 0 && start >= stop || step < 0 && start <= stop) {
    return [];
  }
  const result = new Array();
  for (let i2 = start; step > 0 ? i2 < stop : i2 > stop; i2 += step) {
    result.push(i2);
  }
  return result;
}
function intToBytes(value, length) {
  const byteArray = new Uint8Array(length);
  for (let index2 = byteArray.length - 1; index2 >= 0; index2--) {
    const byte = value & 255;
    byteArray[index2] = byte;
    value = (value - byte) / 256;
  }
  return byteArray;
}
function bytesToInt(ar) {
  let value = 0;
  for (let i2 = 0; i2 < ar.length; i2++) {
    value = value * 256 + ar[i2];
  }
  return value;
}
function serializeACDCAttachment(anc) {
  const prefixer = new Prefixer({ qb64: anc.pre });
  const seqner = new Seqner({ sn: anc.sn });
  const saider = new Saider({ qb64: anc.ked["d"] });
  const craw = new Uint8Array();
  const ctr = new Counter({ code: CtrDex.SealSourceTriples, count: 1 }).qb64b;
  const prefix = prefixer.qb64b;
  const seq = seqner.qb64b;
  const said = saider.qb64b;
  const newCraw = new Uint8Array(
    craw.length + ctr.length + prefix.length + seq.length + said.length
  );
  newCraw.set(craw);
  newCraw.set(ctr, craw.length);
  newCraw.set(prefix, craw.length + ctr.length);
  newCraw.set(seq, craw.length + ctr.length + prefix.length);
  newCraw.set(said, craw.length + ctr.length + prefix.length + seq.length);
  return newCraw;
}
function serializeIssExnAttachment(anc) {
  const seqner = new Seqner({ sn: anc.sn });
  const ancSaider = new Saider({ qb64: anc.ked["d"] });
  const coupleArray = new Uint8Array(
    seqner.qb64b.length + ancSaider.qb64b.length
  );
  coupleArray.set(seqner.qb64b);
  coupleArray.set(ancSaider.qb64b, seqner.qb64b.length);
  const counter = new Counter({
    code: CtrDex.SealSourceCouples,
    count: 1
  });
  const counterQb64b = counter.qb64b;
  const atc = new Uint8Array(counter.qb64b.length + coupleArray.length);
  atc.set(counterQb64b);
  atc.set(coupleArray, counterQb64b.length);
  if (atc.length % 4 !== 0) {
    throw new Error(
      `Invalid attachments size: ${atc.length}, non-integral quadlets detected.`
    );
  }
  const pcnt = new Counter({
    code: CtrDex.AttachedMaterialQuadlets,
    count: Math.floor(atc.length / 4)
  });
  const msg = new Uint8Array(pcnt.qb64b.length + atc.length);
  msg.set(pcnt.qb64b);
  msg.set(atc, pcnt.qb64b.length);
  return msg;
}
var Encrypter = class extends Matter {
  constructor({ raw, code = MtrDex.X25519, qb64, qb64b, qb2 }, verkey = null) {
    if (raw == void 0 && verkey != null) {
      const verfer = new Verfer({ qb64b: verkey });
      if (!Array.from([MtrDex.Ed25519N, MtrDex.Ed25519]).includes(
        verfer.code
      )) {
        throw new Error(
          `Unsupported verkey derivation code = ${verfer.code}.`
        );
      }
      raw = import_libsodium_wrappers_sumo2.default.crypto_sign_ed25519_pk_to_curve25519(verfer.raw);
    }
    super({ raw, code, qb64, qb64b, qb2 });
    __publicField(this, "_encrypt");
    if (this.code == MtrDex.X25519) {
      this._encrypt = this._x25519;
    } else {
      throw new Error(`Unsupported encrypter code = ${this.code}.`);
    }
  }
  verifySeed(seed) {
    const signer = new Signer({ qb64b: seed });
    const keypair = import_libsodium_wrappers_sumo2.default.crypto_sign_seed_keypair(signer.raw);
    const pubkey = import_libsodium_wrappers_sumo2.default.crypto_sign_ed25519_pk_to_curve25519(
      keypair.publicKey
    );
    return arrayEquals(pubkey, this.raw);
  }
  encrypt(ser = null, matter = null) {
    if (ser == null && matter == null) {
      throw new Error("Neither ser nor matter are provided.");
    }
    if (ser != null) {
      matter = new Matter({ qb64b: ser });
    }
    let code;
    if (matter.code == MtrDex.Salt_128) {
      code = MtrDex.X25519_Cipher_Salt;
    } else {
      code = MtrDex.X25519_Cipher_Seed;
    }
    return this._encrypt(matter.qb64, this.raw, code);
  }
  _x25519(ser, pubkey, code) {
    const raw = import_libsodium_wrappers_sumo2.default.crypto_box_seal(ser, pubkey);
    return new Cipher({ raw, code });
  }
};
var Algos = ((Algos2) => {
  Algos2["randy"] = "randy";
  Algos2["salty"] = "salty";
  Algos2["group"] = "group";
  Algos2["extern"] = "extern";
  return Algos2;
})(Algos || {});
var PubLot = class {
  constructor() {
    __publicField(this, "pubs", new Array());
    // list qb64 public keys.
    __publicField(this, "ridx", 0);
    //  index of rotation (est event) that uses public key set
    __publicField(this, "kidx", 0);
    //  index of key in sequence of public keys
    __publicField(this, "dt", "");
  }
  // datetime ISO8601 when key set created
};
var PreSit = class {
  constructor() {
    __publicField(this, "old", new PubLot());
    //previous publot
    __publicField(this, "new", new PubLot());
    //newly current publot
    __publicField(this, "nxt", new PubLot());
  }
  //next public publot
};
var PrePrm = class {
  constructor() {
    __publicField(this, "pidx", 0);
    // prefix index for this keypair sequence
    __publicField(this, "algo", "salty");
    // salty default uses indices and salt to create new key pairs
    __publicField(this, "salt", "");
    // empty salt  used for salty algo.
    __publicField(this, "stem", "");
    // default unique path stem for salty algo
    __publicField(this, "tier", "");
  }
  // security tier for stretch index salty algo
};
var PubSet = class {
  constructor() {
    __publicField(this, "pubs", new Array());
  }
  // list qb64 public keys.
};
var PubPath = class {
  constructor() {
    __publicField(this, "path", "");
    __publicField(this, "code", "");
    __publicField(this, "tier", "high");
    __publicField(this, "temp", false);
  }
};
var Keys = class {
  constructor(signers, paths) {
    __publicField(this, "_signers");
    __publicField(this, "_paths");
    this._signers = signers;
    if (paths != void 0) {
      if (signers.length != paths.length) {
        throw new Error(
          "If paths are provided, they must be the same length as signers"
        );
      }
    }
    this._paths = paths;
  }
  get paths() {
    return this._paths;
  }
  get signers() {
    return this._signers;
  }
};
var RandyCreator = class {
  create(codes = void 0, count2 = 1, code = MtrDex.Ed25519_Seed, transferable = true) {
    const signers = new Array();
    if (codes == void 0) {
      codes = new Array(count2).fill(code);
    }
    codes.forEach(function(code2) {
      signers.push(
        new Signer({ code: code2, transferable })
      );
    });
    return new Keys(signers);
  }
  get salt() {
    return "";
  }
  get stem() {
    return "";
  }
  get tier() {
    return "";
  }
};
var SaltyCreator = class {
  constructor(salt = void 0, tier = void 0, stem = void 0) {
    __publicField(this, "salter");
    __publicField(this, "_stem");
    this.salter = new Salter({ qb64: salt, tier });
    this._stem = stem == void 0 ? "" : stem;
  }
  get salt() {
    return this.salter.qb64;
  }
  get stem() {
    return this._stem;
  }
  get tier() {
    return this.salter.tier;
  }
  create(codes = void 0, count2 = 1, code = MtrDex.Ed25519_Seed, transferable = true, pidx = 0, ridx = 0, kidx = 0, temp = false) {
    const signers = new Array();
    const paths = new Array();
    if (codes == void 0) {
      codes = new Array(count2).fill(code);
    }
    codes.forEach((code2, idx) => {
      const path = this.stem == "" ? pidx.toString(16) : this.stem + ridx.toString(16) + (kidx + idx).toString(16);
      signers.push(
        this.salter.signer(code2, transferable, path, this.tier, temp)
      );
      paths.push(path);
    });
    return new Keys(signers, paths);
  }
};
var Creatory = class {
  constructor(algo = "salty") {
    __publicField(this, "_make");
    switch (algo) {
      case "randy":
        this._make = this._makeRandy;
        break;
      case "salty":
        this._make = this._makeSalty;
        break;
      default:
        throw new Error(`unsupported algo=${algo}`);
    }
  }
  make(...args) {
    return this._make(...args);
  }
  _makeRandy() {
    return new RandyCreator();
  }
  _makeSalty(...args) {
    return new SaltyCreator(...args);
  }
};
function openManager(passcode, salt) {
  if (passcode.length < 21) {
    throw new Error("Bran (passcode seed material) too short.");
  }
  const bran = MtrDex.Salt_128 + "A" + passcode.substring(0, 21);
  const signer = new Salter({ qb64: bran }).signer(
    MtrDex.Ed25519_Seed,
    false
  );
  const seed = signer.qb64;
  const aeid = signer.verfer.qb64;
  let algo;
  const salter = salt != void 0 ? new Salter({ qb64: salt }) : void 0;
  if (salt != void 0) {
    algo = "salty";
  } else {
    algo = "randy";
  }
  return new Manager({ seed, aeid, algo, salter });
}
var Manager = class {
  constructor({ ks, seed, aeid, pidx, algo, salter, tier }) {
    __publicField(this, "_seed");
    __publicField(this, "_salt");
    __publicField(this, "_encrypter");
    __publicField(this, "_decrypter");
    __publicField(this, "_ks");
    this._ks = ks == void 0 ? new Keeper() : ks;
    this._seed = seed;
    this._encrypter = void 0;
    this._decrypter = void 0;
    aeid = aeid == void 0 ? void 0 : aeid;
    pidx = pidx == void 0 ? 0 : pidx;
    algo = algo == void 0 ? "salty" : algo;
    const salt = salter == null ? void 0 : salter.qb64;
    tier = tier == void 0 ? "low" : tier;
    if (this.pidx == void 0) {
      this.pidx = pidx;
    }
    if (this.algo == void 0) {
      this.algo = algo;
    }
    if (this.salt == void 0) {
      this.salt = salt;
    }
    if (this.tier == void 0) {
      this.tier = tier;
    }
    if (this.aeid == void 0) {
      this.updateAeid(aeid, this._seed);
    }
  }
  get ks() {
    return this._ks;
  }
  get encrypter() {
    return this._encrypter;
  }
  get decrypter() {
    return this._decrypter;
  }
  get seed() {
    return this._seed;
  }
  get aeid() {
    return this.ks.getGbls("aeid");
  }
  get pidx() {
    const pidx = this.ks.getGbls("pidx");
    if (pidx != void 0) {
      return parseInt(pidx, 16);
    }
    return void 0;
  }
  set pidx(pidx) {
    this.ks.pinGbls("pidx", pidx.toString(16));
  }
  get salt() {
    if (this._decrypter == void 0) {
      return this._salt;
    } else {
      const salt = this.ks.getGbls("salt");
      return this._decrypter.decrypt(b(salt)).qb64;
    }
  }
  set salt(salt) {
    if (this._encrypter == void 0) {
      this._salt = salt;
    } else {
      salt = this._encrypter.encrypt(b(salt)).qb64;
      this.ks.pinGbls("salt", salt);
    }
  }
  get tier() {
    return this.ks.getGbls("tier");
  }
  set tier(tier) {
    this.ks.pinGbls("tier", tier);
  }
  get algo() {
    const a = this.ks.getGbls("algo");
    const ta = a;
    return Algos[ta];
  }
  set algo(algo) {
    this.ks.pinGbls("algo", algo);
  }
  updateAeid(aeid, seed) {
    var _a7;
    if (this.aeid != void 0) {
      const seed2 = b(this._seed);
      if (this._seed == void 0 || !((_a7 = this._encrypter) == null ? void 0 : _a7.verifySeed(seed2))) {
        throw new Error(`Last seed missing or provided last seed "
                                       "not associated with last aeid=${this.aeid}.`);
      }
    }
    if (aeid != "" && aeid != void 0) {
      if (aeid != this.aeid) {
        this._encrypter = new Encrypter({}, b(aeid));
        if (seed == void 0 || !this._encrypter.verifySeed(b(seed))) {
          throw new Error(`Seed missing or provided seed not associated"
                                           "  with provided aeid=${aeid}.`);
        }
      }
    } else if (this.algo == "randy") {
      throw new Error(
        "Invalid Manager configuration, encryption must be used with Randy key creation."
      );
    } else {
      this._encrypter = void 0;
    }
    const salt = this.salt;
    if (salt != void 0) {
      this.salt = salt;
    }
    if (this._decrypter != void 0) {
      for (const [keys, data] of this.ks.prmsElements()) {
        if (data.salt != void 0) {
          const salter = this._decrypter.decrypt(b(data.salt));
          data.salt = this._encrypter == void 0 ? salter.qb64 : this._encrypter.encrypt(null, salter);
          this.ks.pinPrms(keys, data);
        }
      }
      for (const [pubKey, signer] of this.ks.prisElements(
        this._decrypter
      )) {
        this.ks.pinPris(pubKey, signer, this._encrypter);
      }
    }
    this.ks.pinGbls("aeid", aeid);
    this._seed = seed;
    this._decrypter = seed != void 0 ? new Decrypter({}, b(seed)) : void 0;
  }
  incept({
    icodes = void 0,
    icount = 1,
    icode = MtrDex.Ed25519_Seed,
    ncodes = void 0,
    ncount = 1,
    ncode = MtrDex.Ed25519_Seed,
    dcode = MtrDex.Blake3_256,
    algo = void 0,
    salt = void 0,
    stem = void 0,
    tier = void 0,
    rooted = true,
    transferable = true,
    temp = false
  }) {
    if (rooted && algo == void 0) {
      algo = this.algo;
    }
    if (rooted && salt == void 0) {
      salt = this.salt;
    }
    if (rooted && tier == void 0) {
      tier = this.tier;
    }
    const pidx = this.pidx;
    const ridx = 0;
    const kidx = 0;
    const creator = new Creatory(algo).make(salt, tier, stem);
    if (icodes == void 0) {
      if (icount < 0) {
        throw new Error(`Invalid icount=${icount} must be >= 0.`);
      }
      icodes = new Array(icount).fill(icode);
    }
    const ikeys = creator.create(
      icodes,
      0,
      MtrDex.Ed25519_Seed,
      transferable,
      pidx,
      ridx,
      kidx,
      temp
    );
    const verfers = Array.from(
      ikeys.signers,
      (signer) => signer.verfer
    );
    if (ncodes == void 0) {
      if (ncount < 0) {
        throw new Error(`Invalid ncount=${ncount} must be >= 0.`);
      }
      ncodes = new Array(ncount).fill(ncode);
    }
    const nkeys = creator.create(
      ncodes,
      0,
      MtrDex.Ed25519_Seed,
      transferable,
      pidx,
      ridx + 1,
      kidx + icodes.length,
      temp
    );
    const digers = Array.from(
      nkeys.signers,
      (signer) => new Diger({ code: dcode }, signer.verfer.qb64b)
    );
    const pp = new PrePrm();
    pp.pidx = pidx;
    pp.algo = algo;
    pp.salt = creator.salt.length == 0 || this.encrypter == void 0 ? "" : this.encrypter.encrypt(b(creator.salt)).qb64;
    pp.stem = creator.stem;
    pp.tier = creator.tier;
    const dt = (/* @__PURE__ */ new Date()).toString();
    const nw = new PubLot();
    nw.pubs = Array.from(verfers, (verfer) => verfer.qb64);
    nw.ridx = ridx;
    nw.kidx = kidx;
    nw.dt = dt;
    const nt = new PubLot();
    nt.pubs = Array.from(
      nkeys.signers,
      (signer) => signer.verfer.qb64
    );
    nt.ridx = ridx + 1;
    nt.kidx = kidx + icodes.length;
    nt.dt = dt;
    const ps = new PreSit();
    ps.new = nw;
    ps.nxt = nt;
    const pre = verfers[0].qb64;
    if (!this.ks.putPres(pre, verfers[0].qb64b)) {
      throw new Error(`Already incepted pre=${pre}.`);
    }
    if (!this.ks.putPrms(pre, pp)) {
      throw new Error(`Already incepted prm for pre=${pre}.`);
    }
    this.pidx = pidx + 1;
    if (!this.ks.putSits(pre, ps)) {
      throw new Error(`Already incepted sit for pre=${pre}.`);
    }
    if (this.encrypter != void 0) {
      ikeys.signers.forEach((signer) => {
        this.ks.putPris(signer.verfer.qb64, signer, this.encrypter);
      });
      nkeys.signers.forEach((signer) => {
        this.ks.putPris(signer.verfer.qb64, signer, this.encrypter);
      });
    } else if (this._encrypter == void 0 && ikeys.paths != void 0 && nkeys.paths != void 0) {
      ikeys.paths.forEach((path, idx) => {
        const signer = ikeys.signers[idx];
        const ppt = new PubPath();
        ppt.path = path;
        ppt.code = icodes[idx];
        ppt.tier = pp.tier;
        ppt.temp = temp;
        this.ks.putPths(signer.verfer.qb64, ppt);
      });
      nkeys.paths.forEach((path, idx) => {
        const signer = nkeys.signers[idx];
        const ppt = new PubPath();
        ppt.path = path;
        ppt.code = ncodes[idx];
        ppt.tier = pp.tier;
        ppt.temp = temp;
        this.ks.putPths(signer.verfer.qb64, ppt);
      });
    } else {
      throw new Error(
        "invalid configuration, randy keys without encryption"
      );
    }
    const pubSet = new PubSet();
    pubSet.pubs = ps.new.pubs;
    this.ks.putPubs(riKey(pre, ridx), pubSet);
    const nxtPubSet = new PubSet();
    nxtPubSet.pubs = ps.nxt.pubs;
    this.ks.putPubs(riKey(pre, ridx + 1), nxtPubSet);
    return [verfers, digers];
  }
  move(old, gnu) {
    if (old == gnu) {
      return;
    }
    if (this.ks.getPres(old) == void 0) {
      throw new Error(`Nonexistent old pre=${old}, nothing to assign.`);
    }
    if (this.ks.getPres(gnu) != void 0) {
      throw new Error(`Preexistent new pre=${gnu} may not clobber.`);
    }
    const oldprm = this.ks.getPrms(old);
    if (oldprm == void 0) {
      throw new Error(
        `Nonexistent old prm for pre=${old}, nothing to move.`
      );
    }
    if (this.ks.getPrms(gnu) != void 0) {
      throw new Error(
        `Preexistent new prm for pre=${gnu} may not clobber.`
      );
    }
    const oldsit = this.ks.getSits(old);
    if (oldsit == void 0) {
      throw new Error(
        `Nonexistent old sit for pre=${old}, nothing to move.`
      );
    }
    if (this.ks.getSits(gnu) != void 0) {
      throw new Error(
        `Preexistent new sit for pre=${gnu} may not clobber.`
      );
    }
    if (!this.ks.putPrms(gnu, oldprm)) {
      throw new Error(
        `Failed moving prm from old pre=${old} to new pre=${gnu}.`
      );
    } else {
      this.ks.remPrms(old);
    }
    if (!this.ks.putSits(gnu, oldsit)) {
      throw new Error(
        `Failed moving sit from old pre=${old} to new pre=${gnu}.`
      );
    } else {
      this.ks.remSits(old);
    }
    let i2 = 0;
    while (true) {
      const pl = this.ks.getPubs(riKey(old, i2));
      if (pl == void 0) {
        break;
      }
      if (!this.ks.putPubs(riKey(gnu, i2), pl)) {
        throw new Error(
          `Failed moving pubs at pre=${old} ri=${i2} to new pre=${gnu}`
        );
      }
      i2 = i2 + 1;
    }
    if (!this.ks.pinPres(old, b(gnu))) {
      throw new Error(
        `Failed assiging new pre=${gnu} to old pre=${old}.`
      );
    }
    if (!this.ks.putPres(gnu, b(gnu))) {
      throw new Error(`Failed assiging new pre=${gnu}.`);
    }
  }
  rotate({
    pre,
    ncodes = void 0,
    ncount = 1,
    ncode = MtrDex.Ed25519_Seed,
    dcode = MtrDex.Blake3_256,
    transferable = true,
    temp = false,
    erase = true
  }) {
    const pp = this.ks.getPrms(pre);
    if (pp == void 0) {
      throw new Error(`Attempt to rotate nonexistent pre=${pre}.`);
    }
    const ps = this.ks.getSits(pre);
    if (ps == void 0) {
      throw new Error(`Attempt to rotate nonexistent pre=${pre}.`);
    }
    if (ps.nxt.pubs == void 0 || ps.nxt.pubs.length == 0) {
      throw new Error(`Attempt to rotate nontransferable pre=${pre}.`);
    }
    const old = ps.old;
    ps.old = ps.new;
    ps.new = ps.nxt;
    if (this.aeid != void 0 && this.decrypter == void 0) {
      throw new Error(
        "Unauthorized decryption attempt.  Aeid but no decrypter."
      );
    }
    const verfers = new Array();
    ps.new.pubs.forEach((pub) => {
      if (this.decrypter != void 0) {
        const signer = this.ks.getPris(pub, this.decrypter);
        if (signer == void 0) {
          throw new Error(`Missing prikey in db for pubkey=${pub}`);
        }
        verfers.push(signer.verfer);
      } else {
        verfers.push(new Verfer({ qb64: pub }));
      }
    });
    let salt = pp.salt;
    if (salt != void 0 && salt != "") {
      if (this.decrypter == void 0) {
        throw new Error(
          "Invalid configuration: AID salt with no encryption"
        );
      }
      salt = this.decrypter.decrypt(b(salt)).qb64;
    } else {
      salt = this.salt;
    }
    const creator = new Creatory(pp.algo).make(salt, pp.tier, pp.stem);
    if (ncodes == void 0) {
      if (ncount < 0) {
        throw new Error(`Invalid count=${ncount} must be >= 0`);
      }
      ncodes = new Array(ncount).fill(ncode);
    }
    const pidx = pp.pidx;
    const ridx = ps.new.ridx + 1;
    const kidx = ps.nxt.kidx + ps.new.pubs.length;
    const keys = creator.create(
      ncodes,
      0,
      "",
      transferable,
      pidx,
      ridx,
      kidx,
      temp
    );
    const digers = Array.from(
      keys.signers,
      (signer) => new Diger({ code: dcode }, signer.verfer.qb64b)
    );
    const dt = (/* @__PURE__ */ new Date()).toString();
    ps.nxt = new PubLot();
    ps.nxt.pubs = Array.from(
      keys.signers,
      (signer) => signer.verfer.qb64
    );
    ps.nxt.ridx = ridx;
    ps.nxt.kidx = kidx;
    ps.nxt.dt = dt;
    if (!this.ks.pinSits(pre, ps)) {
      throw new Error(`Problem updating pubsit db for pre=${pre}.`);
    }
    if (this.encrypter != void 0) {
      keys.signers.forEach((signer) => {
        this.ks.putPris(signer.verfer.qb64, signer, this.encrypter);
      });
    } else if (this._encrypter == void 0 && keys.paths != void 0) {
      keys.paths.forEach((path, idx) => {
        const signer = keys.signers[idx];
        const ppt = new PubPath();
        ppt.path = path;
        ppt.tier = pp.tier;
        ppt.temp = temp;
        this.ks.putPths(signer.verfer.qb64, ppt);
      });
    } else {
      throw new Error(
        "invalid configuration, randy keys without encryption"
      );
    }
    const newPs = new PubSet();
    newPs.pubs = ps.nxt.pubs;
    this.ks.putPubs(riKey(pre, ps.nxt.ridx), newPs);
    if (erase) {
      old.pubs.forEach((pub) => {
        this.ks.remPris(pub);
      });
    }
    return [verfers, digers];
  }
  sign({
    ser,
    pubs = void 0,
    verfers = void 0,
    indexed = true,
    indices = void 0,
    ondices = void 0
  }) {
    const signers = new Array();
    if (pubs == void 0 && verfers == void 0) {
      throw new Error("pubs or verfers required");
    }
    if (pubs != void 0) {
      if (this.aeid != void 0 && this.decrypter == void 0) {
        throw new Error(
          "Unauthorized decryption attempt.  Aeid but no decrypter."
        );
      }
      pubs.forEach((pub) => {
        if (this.decrypter != void 0) {
          const signer = this.ks.getPris(pub, this.decrypter);
          if (signer == void 0) {
            throw new Error(
              `Missing prikey in db for pubkey=${pub}`
            );
          }
          signers.push(signer);
        } else {
          const verfer = new Verfer({ qb64: pub });
          const ppt = this.ks.getPths(pub);
          if (ppt == void 0) {
            throw new Error(
              `Missing prikey in db for pubkey=${pub}`
            );
          }
          const salter = new Salter({ qb64: this.salt });
          signers.push(
            salter.signer(
              ppt.code,
              verfer.transferable,
              ppt.path,
              ppt.tier,
              ppt.temp
            )
          );
        }
      });
    } else {
      verfers.forEach((verfer) => {
        if (this.decrypter != void 0) {
          const signer = this.ks.getPris(verfer.qb64, this.decrypter);
          if (signer == void 0) {
            throw new Error(
              `Missing prikey in db for pubkey=${verfer.qb64}`
            );
          }
          signers.push(signer);
        } else {
          const ppt = this.ks.getPths(verfer.qb64);
          if (ppt == void 0) {
            throw new Error(
              `Missing prikey in db for pubkey=${verfer.qb64}`
            );
          }
          const salter = new Salter({ qb64: this.salt });
          signers.push(
            salter.signer(
              ppt.code,
              verfer.transferable,
              ppt.path,
              ppt.tier,
              ppt.temp
            )
          );
        }
      });
    }
    if (indices != void 0 && indices.length != signers.length) {
      throw new Error(
        `Mismatch indices length=${indices.length} and resultant signers length=${signers.length}`
      );
    }
    if (ondices != void 0 && ondices.length != signers.length) {
      throw new Error(
        `Mismatch ondices length=${ondices.length} and resultant signers length=${signers.length}`
      );
    }
    if (indexed) {
      const sigers = new Array();
      signers.forEach((signer, idx) => {
        let i2;
        if (indices != void 0) {
          i2 = indices[idx];
          if (i2 < 0) {
            throw new Error(
              `Invalid signing index = ${i2}, not whole number.`
            );
          }
        } else {
          i2 = idx;
        }
        let o;
        if (ondices != void 0) {
          o = ondices[idx];
          if (o <= 0) {
            throw new Error(
              `Invalid other signing index = {o}, not None or not whole number.`
            );
          }
        } else {
          o = i2;
        }
        const only = o == void 0;
        sigers.push(signer.sign(ser, i2, only, o));
      });
      return sigers;
    } else {
      const cigars = new Array();
      signers.forEach((signer) => {
        cigars.push(signer.sign(ser));
      });
      return cigars;
    }
  }
};
function riKey(pre, ridx) {
  return pre + "." + ridx.toString(16).padStart(32, "0");
}
var Keeper = class {
  constructor() {
    __publicField(this, "_gbls");
    __publicField(this, "_pris");
    __publicField(this, "_pths");
    __publicField(this, "_pres");
    __publicField(this, "_prms");
    __publicField(this, "_sits");
    __publicField(this, "_pubs");
    this._gbls = /* @__PURE__ */ new Map();
    this._pris = /* @__PURE__ */ new Map();
    this._pths = /* @__PURE__ */ new Map();
    this._pres = /* @__PURE__ */ new Map();
    this._prms = /* @__PURE__ */ new Map();
    this._sits = /* @__PURE__ */ new Map();
    this._pubs = /* @__PURE__ */ new Map();
  }
  getGbls(key) {
    return this._gbls.get(key);
  }
  pinGbls(key, val) {
    this._gbls.set(key, val);
  }
  prmsElements() {
    const out = new Array();
    this._prms.forEach((value, key) => {
      out.push([key, value]);
    });
    return out;
  }
  getPrms(keys) {
    return this._prms.get(keys);
  }
  pinPrms(keys, data) {
    this._prms.set(keys, data);
  }
  putPrms(keys, data) {
    if (this._prms.has(keys)) {
      return false;
    }
    this._prms.set(keys, data);
    return true;
  }
  remPrms(keys) {
    return this._prms.delete(keys);
  }
  prisElements(decrypter) {
    const out = new Array();
    this._pris.forEach(function(val, pubKey) {
      const verfer = new Verfer({ qb64: pubKey });
      const signer = decrypter.decrypt(val, null, verfer.transferable);
      out.push([pubKey, signer]);
    });
    return out;
  }
  pinPris(pubKey, signer, encrypter) {
    const cipher = encrypter.encrypt(null, signer);
    this._pris.set(pubKey, cipher.qb64b);
  }
  putPris(pubKey, signer, encrypter) {
    if (this._pris.has(pubKey)) {
      return false;
    }
    const cipher = encrypter.encrypt(null, signer);
    this._pris.set(pubKey, cipher.qb64b);
    return true;
  }
  getPris(pubKey, decrypter) {
    const val = this._pris.get(pubKey);
    if (val == void 0) {
      return void 0;
    }
    const verfer = new Verfer({ qb64: pubKey });
    return decrypter.decrypt(val, null, verfer.transferable);
  }
  pinPths(pubKey, val) {
    this._pths.set(pubKey, val);
    return true;
  }
  putPths(pubKey, val) {
    if (this._pths.has(pubKey)) {
      return false;
    }
    this._pths.set(pubKey, val);
    return true;
  }
  getPths(pubKey) {
    return this._pths.get(pubKey);
  }
  remPris(pubKey) {
    this._pris.delete(pubKey);
  }
  getPres(pre) {
    return this._pres.get(pre);
  }
  pinPres(pre, val) {
    this._pres.set(pre, val);
    return true;
  }
  putPres(pre, val) {
    if (this._pres.has(pre)) {
      return false;
    }
    this._pres.set(pre, val);
    return true;
  }
  getSits(keys) {
    return this._sits.get(keys);
  }
  putSits(pre, val) {
    if (this._sits.has(pre)) {
      return false;
    }
    this._sits.set(pre, val);
    return true;
  }
  pinSits(pre, val) {
    this._sits.set(pre, val);
    return true;
  }
  remSits(keys) {
    return this._sits.delete(keys);
  }
  getPubs(keys) {
    return this._pubs.get(keys);
  }
  putPubs(keys, data) {
    if (this._pubs.has(keys)) {
      return false;
    }
    this._pubs.set(keys, data);
    return true;
  }
};
var Tholder = class {
  // private _bexter: any
  constructor(kargs) {
    __publicField(this, "_weighted", false);
    __publicField(this, "_thold");
    __publicField(this, "_size", 0);
    __publicField(this, "_number");
    __publicField(this, "_satisfy");
    if (kargs.thold !== void 0) {
      this._processThold(kargs.thold);
    } else if (kargs.limen != void 0) {
      this._processLimen(kargs.limen);
    } else if (kargs.sith !== void 0) {
      this._processSith(kargs.sith);
    } else {
      throw new Error("Missing threshold expression");
    }
  }
  get weighted() {
    return this._weighted;
  }
  get thold() {
    return this._thold;
  }
  get size() {
    return this._size;
  }
  get limen() {
    var _a7;
    return (_a7 = this._number) == null ? void 0 : _a7.qb64b;
  }
  get sith() {
    if (this.weighted) {
      let sith = this.thold.map((clause) => {
        return clause.map((c) => {
          if (0 < Number(c) && Number(c) < 1) {
            return format4(c, { fraction: "ratio" });
          } else {
            return format4(c, { fraction: "decimal" });
          }
        });
      });
      if (sith.length == 1) {
        sith = sith[0];
      }
      return sith;
    } else {
      return this.thold.toString(16);
    }
  }
  get json() {
    return JSON.stringify(this.sith);
  }
  get num() {
    return this._weighted ? void 0 : this._thold;
  }
  _processThold(thold) {
    if (typeof thold === "number") {
      this._processUnweighted(thold);
    } else {
      this._processWeighted(thold);
    }
  }
  _processLimen(limen) {
    const matter = new Matter({ qb64: limen });
    if (NumDex.has(matter.code)) {
      const number2 = new CesrNumber({
        raw: matter.raw,
        code: matter.code
      });
      this._processUnweighted(number2.num);
    } else if (BexDex.has(matter.code)) {
    } else {
      throw new Error("Invalid code for limen=" + matter.code);
    }
  }
  _processSith(sith) {
    if (typeof sith == "number") {
      this._processUnweighted(sith);
    } else if (typeof sith == "string" && sith.indexOf("[") == -1) {
      this._processUnweighted(parseInt(sith, 16));
    } else {
      let _sith = sith;
      if (typeof sith == "string") {
        _sith = JSON.parse(sith);
      }
      if (_sith.length == 0) {
        throw new Error("Empty weight list");
      }
      const mask = _sith.map((x) => {
        return typeof x !== "string";
      });
      if (mask.length > 0 && !mask.every((x) => x)) {
        _sith = [_sith];
      }
      for (const c of _sith) {
        const mask2 = c.map((x) => {
          return typeof x === "string";
        });
        if (mask2.length > 0 && !mask2.every((x) => x)) {
          throw new Error(
            "Invalid sith, some weights in clause " + mask2 + " are non string"
          );
        }
      }
      const thold = this._processClauses(_sith);
      this._processWeighted(thold);
    }
  }
  _processClauses(sith) {
    const thold = new Array();
    sith.forEach((clause) => {
      thold.push(
        clause.map((w) => {
          return this.weight(w);
        })
      );
    });
    return thold;
  }
  _processUnweighted(thold) {
    if (thold < 0) {
      throw new Error("Non-positive int threshold = {thold}.");
    }
    this._thold = thold;
    this._weighted = false;
    this._size = this._thold;
    this._satisfy = this._satisfy_numeric;
    this._number = new CesrNumber({}, thold);
  }
  _processWeighted(thold) {
    for (const clause of thold) {
      if (Number(sum2(clause)) < 1) {
        throw new Error(
          "Invalid sith clause: " + thold + "all clause weight sums must be >= 1"
        );
      }
    }
    this._thold = thold;
    this._weighted = true;
    this._size = thold.reduce((acc, currentValue) => {
      return acc + currentValue.length;
    }, 0);
    this._satisfy = this._satisfy_weighted;
  }
  weight(w) {
    return fraction(w);
  }
  _satisfy_numeric(indices) {
    return this.thold > 0 && indices.length >= this.thold;
  }
  _satisfy_weighted(indices) {
    if (indices.length === 0) {
      return false;
    }
    const indexes = new Set(indices.sort());
    const sats = new Array(indices.length).fill(false);
    for (const idx of indexes) {
      sats[idx] = true;
    }
    let wio = 0;
    for (const clause of this.thold) {
      let cw = 0;
      for (const w of clause) {
        if (sats[wio]) {
          cw += Number(w);
        }
        wio += 1;
      }
      if (cw < 1) {
        return false;
      }
    }
    return true;
  }
  satisfy(indices) {
    return this._satisfy(indices);
  }
};
var MaxIntThold = 2 ** 32 - 1;
function rotate2({
  pre = void 0,
  keys,
  dig = void 0,
  ilk = Ilks.rot,
  sn = 1,
  isith = void 0,
  ndigs = void 0,
  nsith = void 0,
  wits = void 0,
  cuts = void 0,
  adds = void 0,
  toad = void 0,
  data = void 0,
  version: version3 = void 0,
  kind = void 0,
  intive = true
}) {
  const vs = versify("KERI", version3, kind, 0);
  const _ilk = ilk;
  if (_ilk != Ilks.rot && _ilk != Ilks.drt) {
    throw new Error(`Invalid ilk = ${ilk} for rot or drt.`);
  }
  const sner = new CesrNumber({}, sn);
  if (sner.num < 1) {
    throw new Error(`Invalid sn = 0x${sner.numh} for rot or drt.`);
  }
  let _isit;
  if (isith == void 0) {
    _isit = Math.max(1, Math.ceil(keys.length / 2));
  } else {
    _isit = isith;
  }
  const tholder = new Tholder({ sith: _isit });
  if (tholder.num != void 0 && tholder.num < 1) {
    throw new Error(`Invalid sith = ${tholder.num} less than 1.`);
  }
  if (tholder.size > keys.length) {
    throw new Error(`Invalid sith = ${tholder.num} for keys = ${keys}`);
  }
  let _ndigs;
  if (ndigs === void 0) {
    _ndigs = [];
  } else {
    _ndigs = ndigs;
  }
  let _nsith;
  if (nsith === void 0) {
    _nsith = Math.max(1, Math.ceil(_ndigs.length / 2));
  } else {
    _nsith = nsith;
  }
  const ntholder = new Tholder({ sith: _nsith });
  if (ntholder.num != void 0 && ntholder.num < 1) {
    throw new Error(`Invalid sith = ${ntholder.num} less than 1.`);
  }
  if (ntholder.size > _ndigs.length) {
    throw new Error(`Invalid sith = ${ntholder.num} for ndigs = ${ndigs}`);
  }
  let _wits;
  if (wits === void 0) {
    _wits = [];
  } else {
    _wits = wits;
  }
  const witset = new Set(_wits);
  if (witset.size != _wits.length) {
    throw new Error(`Invalid wits = ${wits}, has duplicates.`);
  }
  let _cuts;
  if (cuts === void 0) {
    _cuts = [];
  } else {
    _cuts = cuts;
  }
  const cutset = new Set(_cuts);
  if (cutset.size != _cuts.length) {
    throw new Error(`Invalid cuts = ${cuts}, has duplicates.`);
  }
  let _adds;
  if (adds === void 0) {
    _adds = [];
  } else {
    _adds = adds;
  }
  const addset = new Set(_adds);
  const witaddset = new Set([...witset].filter((x) => addset.has(x)));
  if (witaddset.size > 0) {
    throw new Error(
      `Invalid member combination among wits = ${wits}, and adds = ${adds}.`
    );
  }
  const cutaddset = new Set([...cutset].filter((x) => addset.has(x)));
  if (cutaddset.size > 0) {
    throw new Error(
      `Invalid member combination among cuts = ${cuts}, and adds = ${adds}.`
    );
  }
  const newitsetdiff = new Set(_wits);
  _cuts.forEach(function(v) {
    newitsetdiff.delete(v);
  });
  const newitset = new Set(
    function* () {
      yield* newitsetdiff;
      yield* addset;
    }()
  );
  if (newitset.size != witset.size - cutset.size + addset.size) {
    throw new Error(
      `Invalid member combination among wits = ${wits}, cuts = ${cuts}, and adds = ${adds}.`
    );
  }
  let _toad;
  if (toad === void 0) {
    if (newitset.size == 0) {
      _toad = 0;
    } else {
      _toad = ample(newitset.size);
    }
  } else {
    _toad = toad;
  }
  if (newitset.size > 0) {
    if (_toad < 1 || _toad > newitset.size) {
      throw new Error(`Invalid toad = ${_toad} for wit = ${wits}`);
    }
  } else {
    if (_toad != 0) {
      throw new Error(`Invalid toad = ${_toad} for wit = ${wits}`);
    }
  }
  const _ked = {
    v: vs,
    t: _ilk,
    d: "",
    i: pre,
    s: sner.numh,
    p: dig,
    kt: tholder.num && intive && tholder.num !== void 0 && tholder.num <= MaxIntThold ? tholder.num.toString(16) : tholder.sith,
    k: keys,
    nt: ntholder.num && intive && ntholder.num !== void 0 && ntholder.num <= MaxIntThold ? ntholder.num.toString(16) : ntholder.sith,
    n: _ndigs,
    bt: _toad && intive && _toad !== void 0 && _toad <= MaxIntThold ? _toad : _toad.toString(16),
    br: cuts,
    ba: adds,
    a: data != void 0 ? data : []
  };
  const [, ked] = Saider.saidify(_ked);
  return new Serder(ked);
}
function ample(n, f, weak = true) {
  n = Math.max(0, n);
  let f1;
  if (f == void 0) {
    f1 = Math.max(1, Math.floor(Math.max(0, n - 1) / 3));
    const f2 = Math.max(1, Math.ceil(Math.max(0, n - 1) / 3));
    if (weak) {
      return Math.min(
        n,
        Math.ceil((n + f1 + 1) / 2),
        Math.ceil((n + f2 + 1) / 2)
      );
    } else {
      return Math.min(
        n,
        Math.max(0, n - f1, Math.ceil((n + f1 + 1) / 2))
      );
    }
  } else {
    f = Math.max(0, f);
    const m1 = Math.ceil((n + f + 1) / 2);
    const m2 = Math.max(0, n - f);
    if (m2 < m1 && n > 0) {
      throw new Error(`Invalid f=${f} is too big for n=${n}.`);
    }
    if (weak) {
      return Math.min(n, m1, m2);
    } else {
      return Math.min(n, Math.max(m1, m2));
    }
  }
}
function incept({
  keys,
  isith,
  ndigs,
  nsith,
  toad,
  wits,
  cnfg,
  data,
  version: version3 = Versionage,
  kind = "JSON",
  code,
  intive = false,
  delpre
}) {
  const vs = versify("KERI", version3, kind, 0);
  const ilk = delpre == void 0 ? Ilks.icp : Ilks.dip;
  const sner = new CesrNumber({}, 0);
  if (isith == void 0) {
    isith = Math.max(1, Math.ceil(keys.length / 2));
  }
  const tholder = new Tholder({ sith: isith });
  if (tholder.num != void 0 && tholder.num < 1) {
    throw new Error(`Invalid sith = ${tholder.num} less than 1.`);
  }
  if (tholder.size > keys.length) {
    throw new Error(`Invalid sith = ${tholder.num} for keys ${keys}`);
  }
  if (ndigs == void 0) {
    ndigs = new Array();
  }
  if (nsith == void 0) {
    nsith = Math.max(0, Math.ceil(ndigs.length / 2));
  }
  const ntholder = new Tholder({ sith: nsith });
  if (ntholder.num != void 0 && ntholder.num < 0) {
    throw new Error(`Invalid nsith = ${ntholder.num} less than 0.`);
  }
  if (ntholder.size > keys.length) {
    throw new Error(`Invalid nsith = ${ntholder.num} for keys ${ndigs}`);
  }
  wits = wits == void 0 ? [] : wits;
  if (new Set(wits).size != wits.length) {
    throw new Error(`Invalid wits = ${wits}, has duplicates.`);
  }
  if (toad == void 0) {
    if (wits.length == 0) {
      toad = 0;
    } else {
      toad = ample(wits.length);
    }
  }
  const toader = new CesrNumber({}, toad);
  if (wits.length > 0) {
    if (toader.num < 1 || toader.num > wits.length) {
      throw new Error(`Invalid toad = ${toader.num} for wits = ${wits}`);
    }
  } else {
    if (toader.num != 0) {
      throw new Error(`Invalid toad = ${toader.num} for wits = ${wits}`);
    }
  }
  cnfg = cnfg == void 0 ? new Array() : cnfg;
  data = data == void 0 ? new Array() : data;
  let ked = {
    v: vs,
    t: ilk,
    d: "",
    i: "",
    s: sner.numh,
    kt: intive && tholder.num != void 0 ? tholder.num : tholder.sith,
    k: keys,
    nt: intive && tholder.num != void 0 ? ntholder.num : ntholder.sith,
    n: ndigs,
    bt: intive ? toader.num : toader.numh,
    b: wits,
    c: cnfg,
    a: data
  };
  if (delpre != void 0) {
    ked["di"] = delpre;
    if (code == void 0) {
      code = MtrDex.Blake3_256;
    }
  }
  let prefixer;
  if (delpre == void 0 && code == void 0 && keys.length == 1) {
    prefixer = new Prefixer({ qb64: keys[0] });
    if (prefixer.digestive) {
      throw new Error(
        `Invalid code, digestive=${prefixer.code}, must be derived from ked.`
      );
    }
  } else {
    prefixer = new Prefixer({ code }, ked);
    if (delpre != void 0) {
      if (!prefixer.digestive) {
        throw new Error(
          `Invalid derivation code = ${prefixer.code} for delegation. Must be digestive`
        );
      }
    }
  }
  ked["i"] = prefixer.qb64;
  if (prefixer.digestive) {
    ked["d"] = prefixer.qb64;
  } else {
    [, ked] = Saider.saidify(ked);
  }
  return new Serder(ked);
}
function messagize(serder, sigers, seal, wigers, cigars, pipelined = false) {
  let msg = new Uint8Array(b(serder.raw));
  let atc = new Uint8Array();
  if (sigers == void 0 && wigers == void 0 && cigars == void 0) {
    throw new Error(
      `Missing attached signatures on message = ${serder.ked}.`
    );
  }
  if (sigers != void 0) {
    if (seal != void 0) {
      if (seal[0] == "SealEvent") {
        atc = concat3(
          atc,
          new Counter({ code: CtrDex.TransIdxSigGroups, count: 1 }).qb64b
        );
        atc = concat3(atc, new TextEncoder().encode(seal[1].i));
        atc = concat3(
          atc,
          new Seqner({ sn: parseInt(seal[1].s) }).qb64b
        );
        atc = concat3(atc, new TextEncoder().encode(seal[1].d));
      } else if (seal[0] == "SealLast") {
        atc = concat3(
          atc,
          new Counter({
            code: CtrDex.TransLastIdxSigGroups,
            count: 1
          }).qb64b
        );
        atc = concat3(atc, new TextEncoder().encode(seal[1].i));
      }
    }
    atc = concat3(
      atc,
      new Counter({
        code: CtrDex.ControllerIdxSigs,
        count: sigers.length
      }).qb64b
    );
    sigers.forEach((siger) => {
      atc = concat3(atc, siger.qb64b);
    });
  }
  if (wigers != void 0) {
    atc = concat3(
      atc,
      new Counter({
        code: CtrDex.WitnessIdxSigs,
        count: wigers.length
      }).qb64b
    );
    wigers.forEach((wiger) => {
      if (wiger.verfer && !NonTransDex.has(wiger.verfer.code)) {
        throw new Error(
          `Attempt to use tranferable prefix=${wiger.verfer.qb64} for receipt.`
        );
      }
      atc = concat3(atc, wiger.qb64b);
    });
  }
  if (cigars != void 0) {
    atc = concat3(
      atc,
      new Counter({
        code: CtrDex.NonTransReceiptCouples,
        count: cigars.length
      }).qb64b
    );
    cigars.forEach((cigar) => {
      if (cigar.verfer && !NonTransDex.has(cigar.verfer.code)) {
        throw new Error(
          `Attempt to use tranferable prefix=${cigar.verfer.qb64} for receipt.`
        );
      }
      atc = concat3(atc, cigar.verfer.qb64b);
      atc = concat3(atc, cigar.qb64b);
    });
  }
  if (pipelined) {
    if (atc.length % 4 != 0) {
      throw new Error(
        `Invalid attachments size=${atc.length}, nonintegral quadlets.`
      );
    }
    msg = concat3(
      msg,
      new Counter({
        code: CtrDex.AttachedMaterialQuadlets,
        count: Math.floor(atc.length / 4)
      }).qb64b
    );
  }
  msg = concat3(msg, atc);
  return msg;
}
function interact(args) {
  let { pre, dig, sn, data, version: version3, kind } = args;
  const vs = versify("KERI", version3, kind, 0);
  const ilk = Ilks.ixn;
  const sner = new CesrNumber({}, sn);
  if (sner.num < 1) {
    throw new Error(`Invalid sn = 0x${sner.numh} for ixn.`);
  }
  data = data == void 0 ? new Array() : data;
  let ked = {
    v: vs,
    t: ilk,
    d: "",
    i: pre,
    s: sner.numh,
    p: dig,
    a: data
  };
  [, ked] = Saider.saidify(ked);
  return new Serder(ked);
}
function reply(route = "", data, stamp, version3, kind = "JSON") {
  const vs = versify("KERI", version3, kind, 0);
  if (data == void 0) {
    data = {};
  }
  const _sad = {
    v: vs,
    t: Ilks.rpy,
    d: "",
    dt: stamp ?? (/* @__PURE__ */ new Date()).toISOString().replace("Z", "000+00:00"),
    r: route,
    a: data
  };
  const [, sad] = Saider.saidify(_sad);
  const saider = new Saider({ qb64: sad["d"] });
  if (!saider.verify(sad, true, true, kind, "d"))
    throw new Error(`Invalid said = ${saider.qb64} for reply msg=${sad}.`);
  return new Serder(sad);
}
var TraitCodex = class {
  constructor() {
    __publicField(this, "EstOnly", "EO");
    // Only allow establishment events
    __publicField(this, "DoNotDelegate", "DND");
    // Dot not allow delegated identifiers
    __publicField(this, "NoBackers", "NB");
  }
  // Do not allow backers
};
var TraitDex = new TraitCodex();
var Hab = class {
  constructor(name314, icp) {
    __publicField(this, "name");
    __publicField(this, "serder");
    this.name = name314;
    this.serder = icp;
  }
  get pre() {
    return this.serder.ked["i"];
  }
};
var Habery = class {
  constructor({ name: name314, passcode, seed, aeid, pidx, salt }) {
    __publicField(this, "_name");
    __publicField(this, "_mgr");
    __publicField(this, "_habs", /* @__PURE__ */ new Map());
    this._name = name314;
    if (passcode != void 0 && seed == void 0) {
      if (passcode.length < 21) {
        throw new Error("Bran (passcode seed material) too short.");
      }
      const bran = MtrDex.Salt_128 + "A" + passcode.substring(0, 21);
      const signer = new Salter({ qb64: bran }).signer(
        MtrDex.Ed25519_Seed,
        false
      );
      seed = signer.qb64;
      if (aeid == void 0) {
        aeid = signer.verfer.qb64;
      }
    }
    let algo;
    const salter = salt != void 0 ? new Salter({ qb64: salt }) : void 0;
    if (salt != void 0) {
      algo = "salty";
    } else {
      algo = "randy";
    }
    this._mgr = new Manager({
      seed,
      aeid,
      pidx,
      algo,
      salter
    });
  }
  get mgr() {
    return this._mgr;
  }
  get habs() {
    return Array.from(this._habs.values());
  }
  habByName(name314) {
    return this._habs.get(name314);
  }
  makeHab(name314, {
    code = MtrDex.Blake3_256,
    transferable = true,
    isith = void 0,
    icount = 1,
    nsith = void 0,
    ncount = void 0,
    toad = void 0,
    wits = void 0,
    delpre = void 0,
    estOnly = false,
    DnD = false,
    data = void 0
  }) {
    if (nsith == void 0) {
      nsith = isith;
    }
    if (ncount == void 0) {
      ncount = icount;
    }
    if (!transferable) {
      ncount = 0;
      nsith = "0";
      code = MtrDex.Ed25519N;
    }
    const [verfers, digers] = this._mgr.incept({
      icount,
      ncount,
      stem: this.name,
      transferable,
      temp: false
    });
    icount = verfers.length;
    ncount = digers != void 0 ? digers.length : 0;
    if (isith == void 0) {
      isith = `${Math.max(1, Math.ceil(icount / 2)).toString(16)}`;
    }
    if (nsith == void 0) {
      nsith = `${Math.max(1, Math.ceil(ncount / 2)).toString(16)}`;
    }
    const cnfg = new Array();
    if (estOnly) {
      cnfg.push(TraitDex.EstOnly);
    }
    if (DnD) {
      cnfg.push(TraitDex.DoNotDelegate);
    }
    const keys = Array.from(verfers, (verfer) => verfer.qb64);
    const ndigs = Array.from(digers, (diger) => diger.qb64);
    const icp = incept({
      keys,
      isith,
      ndigs,
      nsith,
      toad,
      wits,
      cnfg,
      data,
      code,
      delpre
    });
    const hab = new Hab(name314, icp);
    this._habs.set(name314, hab);
    return hab;
  }
  get name() {
    return this._name;
  }
};
var Agent = class {
  constructor(agent) {
    __publicField(this, "pre");
    __publicField(this, "anchor");
    __publicField(this, "verfer");
    __publicField(this, "state");
    __publicField(this, "sn");
    __publicField(this, "said");
    this.pre = "";
    this.anchor = "";
    this.verfer = null;
    this.state = null;
    this.sn = 0;
    this.said = "";
    this.parse(agent);
  }
  parse(agent) {
    const [state, verfer] = this.event(agent);
    this.sn = new CesrNumber({}, void 0, state["s"]).num;
    this.said = state["d"];
    if (state["et"] !== Ilks.dip) {
      throw new Error(`invalid inception event type ${state["et"]}`);
    }
    this.pre = state["i"];
    if (!state["di"]) {
      throw new Error("no anchor to controller AID");
    }
    this.anchor = state["di"];
    this.verfer = verfer;
    this.state = state;
  }
  event(evt) {
    if (evt["k"].length !== 1) {
      throw new Error(`agent inception event can only have one key`);
    }
    const verfer = new Verfer({ qb64: evt["k"][0] });
    if (evt["n"].length !== 1) {
      throw new Error(`agent inception event can only have one next key`);
    }
    const diger = new Diger({ qb64: evt["n"][0] });
    const tholder = new Tholder({ sith: evt["kt"] });
    if (tholder.num !== 1) {
      throw new Error(`invalid threshold ${tholder.num}, must be 1`);
    }
    const ntholder = new Tholder({ sith: evt["nt"] });
    if (ntholder.num !== 1) {
      throw new Error(
        `invalid next threshold ${ntholder.num}, must be 1`
      );
    }
    return [evt, verfer, diger];
  }
};
var Controller = class {
  constructor(bran, tier, ridx = 0, state = null) {
    __publicField(this, "bran");
    __publicField(this, "stem");
    __publicField(this, "tier");
    __publicField(this, "ridx");
    __publicField(this, "salter");
    __publicField(this, "signer");
    __publicField(this, "nsigner");
    __publicField(this, "serder");
    __publicField(this, "keys");
    __publicField(this, "ndigs");
    this.bran = MtrDex.Salt_128 + "A" + bran.substring(0, 21);
    this.stem = "signify:controller";
    this.tier = tier;
    this.ridx = ridx;
    this.salter = new Salter({ qb64: this.bran, tier: this.tier });
    const creator = new SaltyCreator(
      this.salter.qb64,
      this.tier,
      this.stem
    );
    this.signer = creator.create(
      void 0,
      1,
      MtrDex.Ed25519_Seed,
      true,
      0,
      this.ridx,
      0,
      false
    ).signers.pop();
    this.nsigner = creator.create(
      void 0,
      1,
      MtrDex.Ed25519_Seed,
      true,
      0,
      this.ridx + 1,
      0,
      false
    ).signers.pop();
    this.keys = [this.signer.verfer.qb64];
    this.ndigs = [
      new Diger({ code: MtrDex.Blake3_256 }, this.nsigner.verfer.qb64b).qb64
    ];
    if (state == null || state["ee"]["s"] == 0) {
      this.serder = incept({
        keys: this.keys,
        isith: "1",
        nsith: "1",
        ndigs: this.ndigs,
        code: MtrDex.Blake3_256,
        toad: "0",
        wits: []
      });
    } else {
      this.serder = new Serder(state["ee"]);
    }
  }
  approveDelegation(_agent) {
    const seqner = new Seqner({ sn: _agent.sn });
    const anchor = { i: _agent.pre, s: seqner.snh, d: _agent.said };
    const sn = new CesrNumber({}, void 0, this.serder.ked["s"]).num + 1;
    this.serder = interact({
      pre: this.serder.pre,
      dig: this.serder.ked["d"],
      sn,
      data: [anchor],
      version: Versionage,
      kind: "JSON"
      /* JSON */
    });
    return [this.signer.sign(this.serder.raw, 0).qb64];
  }
  get pre() {
    return this.serder.pre;
  }
  get event() {
    const siger = this.signer.sign(this.serder.raw, 0);
    return [this.serder, siger];
  }
  get verfers() {
    return this.signer.verfer();
  }
  derive(state) {
    if (state != void 0 && state["ee"]["s"] === "0") {
      return incept({
        keys: this.keys,
        isith: "1",
        nsith: "1",
        ndigs: this.ndigs,
        code: MtrDex.Blake3_256,
        toad: "0",
        wits: []
      });
    } else {
      return new Serder({ ked: state.controller["ee"] });
    }
  }
  rotate(bran, aids) {
    const nbran = MtrDex.Salt_128 + "A" + bran.substring(0, 21);
    const nsalter = new Salter({ qb64: nbran, tier: this.tier });
    const nsigner = this.salter.signer(void 0, false);
    const creator = new SaltyCreator(
      this.salter.qb64,
      this.tier,
      this.stem
    );
    const signer = creator.create(
      void 0,
      1,
      MtrDex.Ed25519_Seed,
      true,
      0,
      this.ridx + 1,
      0,
      false
    ).signers.pop();
    const ncreator = new SaltyCreator(nsalter.qb64, this.tier, this.stem);
    this.signer = ncreator.create(
      void 0,
      1,
      MtrDex.Ed25519_Seed,
      true,
      0,
      this.ridx,
      0,
      false
    ).signers.pop();
    this.nsigner = ncreator.create(
      void 0,
      1,
      MtrDex.Ed25519_Seed,
      true,
      0,
      this.ridx + 1,
      0,
      false
    ).signers.pop();
    this.keys = [this.signer.verfer.qb64, signer == null ? void 0 : signer.verfer.qb64];
    this.ndigs = [new Diger({}, this.nsigner.verfer.qb64b).qb64];
    const rot = rotate2({
      pre: this.pre,
      keys: this.keys,
      dig: this.serder.ked["d"],
      isith: ["1", "0"],
      nsith: "1",
      ndigs: this.ndigs
    });
    const sigs = [
      signer == null ? void 0 : signer.sign(b(rot.raw), 1, false, 0).qb64,
      this.signer.sign(rot.raw, 0).qb64
    ];
    const encrypter = new Encrypter({}, b(nsigner.verfer.qb64));
    const decrypter = new Decrypter({}, nsigner.qb64b);
    const sxlt = encrypter.encrypt(b(this.bran)).qb64;
    const keys = {};
    for (const aid of aids) {
      const pre = aid["prefix"];
      if ("salty" in aid) {
        const salty = aid["salty"];
        const cipher = new Cipher({ qb64: salty["sxlt"] });
        const dnxt = decrypter.decrypt(null, cipher).qb64;
        const acreator = new SaltyCreator(
          dnxt,
          salty["tier"],
          salty["stem"]
        );
        const signers = acreator.create(
          salty["icodes"],
          void 0,
          MtrDex.Ed25519_Seed,
          salty["transferable"],
          salty["pidx"],
          0,
          salty["kidx"],
          false
        );
        const _signers = [];
        for (const signer2 of signers.signers) {
          _signers.push(signer2.verfer.qb64);
        }
        const pubs = aid["state"]["k"];
        if (pubs.join(",") != _signers.join(",")) {
          throw new Error("Invalid Salty AID");
        }
        const asxlt = encrypter.encrypt(b(dnxt)).qb64;
        keys[pre] = {
          sxlt: asxlt
        };
      } else if ("randy" in aid) {
        const randy = aid["randy"];
        const prxs = randy["prxs"];
        const nxts = randy["nxts"];
        const nprxs = [];
        const signers = [];
        for (const prx of prxs) {
          const cipher = new Cipher({ qb64: prx });
          const dsigner = decrypter.decrypt(null, cipher, true);
          signers.push(dsigner);
          nprxs.push(encrypter.encrypt(b(dsigner.qb64)).qb64);
        }
        const pubs = aid["state"]["k"];
        const _signers = [];
        for (const signer2 of signers) {
          _signers.push(signer2.verfer.qb64);
        }
        if (pubs.join(",") != _signers.join(",")) {
          throw new Error(
            `unable to rotate, validation of encrypted public keys ${pubs} failed`
          );
        }
        const nnxts = [];
        for (const nxt of nxts) {
          nnxts.push(this.recrypt(nxt, decrypter, encrypter));
        }
        keys[pre] = {
          prxs: nprxs,
          nxts: nnxts
        };
      } else {
        throw new Error("invalid aid type ");
      }
    }
    const data = {
      rot: rot.ked,
      sigs,
      sxlt,
      keys
    };
    return data;
  }
  recrypt(enc, decrypter, encrypter) {
    const cipher = new Cipher({ qb64: enc });
    const dnxt = decrypter.decrypt(null, cipher).qb64;
    return encrypter.encrypt(b(dnxt)).qb64;
  }
};
var HEADER_SIG = normalize("Signature");
var HEADER_SIG_INPUT = normalize("Signature-Input");
var HEADER_SIG_TIME = normalize("Signify-Timestamp");
var HEADER_SIG_SENDER = normalize("Signify-Resource");
var HEADER_SIG_DESTINATION = normalize("Signify-Receiver");
function normalize(header) {
  return header.trim();
}
function siginput(signer, {
  name: name314,
  method,
  path,
  headers,
  fields,
  expires,
  nonce,
  alg,
  keyid,
  context
}) {
  const items = new Array();
  const ifields = new Array();
  fields.forEach((field) => {
    if (field.startsWith("@")) {
      switch (field) {
        case "@method":
          items.push(`"${field}": ${method}`);
          ifields.push([field, /* @__PURE__ */ new Map()]);
          break;
        case "@path":
          items.push(`"${field}": ${path}`);
          ifields.push([field, /* @__PURE__ */ new Map()]);
          break;
      }
    } else {
      if (!headers.has(field))
        return;
      ifields.push([field, /* @__PURE__ */ new Map()]);
      const value = normalize(headers.get(field));
      items.push(`"${field}": ${value}`);
    }
  });
  const nameParams = /* @__PURE__ */ new Map();
  const now = Math.floor(nowUTC().getTime() / 1e3);
  nameParams.set("created", now);
  const values = [
    `(${ifields.map((field) => field[0]).join(" ")})`,
    `created=${now}`
  ];
  if (expires != void 0) {
    values.push(`expires=${expires}`);
    nameParams.set("expires", expires);
  }
  if (nonce != void 0) {
    values.push(`nonce=${nonce}`);
    nameParams.set("nonce", nonce);
  }
  if (keyid != void 0) {
    values.push(`keyid=${keyid}`);
    nameParams.set("keyid", keyid);
  }
  if (context != void 0) {
    values.push(`context=${context}`);
    nameParams.set("context", context);
  }
  if (alg != void 0) {
    values.push(`alg=${alg}`);
    nameParams.set("alg", alg);
  }
  const sid = /* @__PURE__ */ new Map([[name314, [ifields, nameParams]]]);
  const params = values.join(";");
  items.push(`"@signature-params: ${params}"`);
  const ser = items.join("\n");
  const sig = signer.sign(b(ser));
  return [
    /* @__PURE__ */ new Map([
      [HEADER_SIG_INPUT, `${(0, import_structured_headers.serializeDictionary)(sid)}`]
    ]),
    sig
  ];
}
var Unqualified = class {
  constructor(raw) {
    __publicField(this, "_raw");
    this._raw = raw;
  }
  get qb64() {
    return encodeBase64Url(import_buffer8.Buffer.from(this._raw));
  }
  get qb64b() {
    return b(this.qb64);
  }
};
var Inputage = class {
  constructor() {
    __publicField(this, "name");
    __publicField(this, "fields");
    __publicField(this, "created");
    __publicField(this, "expires");
    __publicField(this, "nonce");
    __publicField(this, "alg");
    __publicField(this, "keyid");
    __publicField(this, "context");
  }
};
function desiginput(value) {
  const sid = (0, import_structured_headers.parseDictionary)(value);
  const siginputs = new Array();
  sid.forEach((value2, key) => {
    const siginput2 = new Inputage();
    siginput2.name = key;
    let list;
    let params;
    [list, params] = value2;
    siginput2.fields = list.map((item) => item[0]);
    if (!params.has("created")) {
      throw new Error(
        "missing required `created` field from signature input"
      );
    }
    siginput2.created = params.get("created");
    if (params.has("expires")) {
      siginput2.expires = params.get("expires");
    }
    if (params.has("nonce")) {
      siginput2.nonce = params.get("nonce");
    }
    if (params.has("alg")) {
      siginput2.alg = params.get("alg");
    }
    if (params.has("keyid")) {
      siginput2.keyid = params.get("keyid");
    }
    if (params.has("context")) {
      siginput2.context = params.get("context");
    }
    siginputs.push(siginput2);
  });
  return siginputs;
}
function parseRangeHeaders(header, typ) {
  if (header !== null) {
    const data = header.replace(`${typ} `, "");
    const values = data.split("/");
    const rng = values[0].split("-");
    return {
      start: parseInt(rng[0]),
      end: parseInt(rng[1]),
      total: parseInt(values[1])
    };
  } else {
    return { start: 0, end: 0, total: 0 };
  }
}
var Identifier = class {
  /**
   * Identifier
   * @param {IdentifierDeps} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * List managed identifiers
   * @async
   * @param {number} [start=0] Start index of list of notifications, defaults to 0
   * @param {number} [end=24] End index of list of notifications, defaults to 24
   * @returns {Promise<any>} A promise to the list of managed identifiers
   */
  async list(start = 0, end = 24) {
    const extraHeaders = new Headers();
    extraHeaders.append("Range", `aids=${start}-${end}`);
    const path = `/identifiers`;
    const data = null;
    const method = "GET";
    const res = await this.client.fetch(path, method, data, extraHeaders);
    const cr = res.headers.get("content-range");
    const range22 = parseRangeHeaders(cr, "aids");
    const aids = await res.json();
    return {
      start: range22.start,
      end: range22.end,
      total: range22.total,
      aids
    };
  }
  /**
   * Get information for a managed identifier
   * @async
   * @param {string} name Prefix or alias of the identifier
   * @returns {Promise<HabState>} A promise to the identifier information
   */
  async get(name314) {
    const path = `/identifiers/${encodeURIComponent(name314)}`;
    const data = null;
    const method = "GET";
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
  /**
   * Update managed identifier
   * @async
   * @param {string} name Prefix or alias of the identifier
   * @param {IdentifierInfo} info Information to update for the given identifier
   * @returns {Promise<HabState>} A promise to the identifier information after updating
   */
  async update(name314, info) {
    const path = `/identifiers/${name314}`;
    const method = "PUT";
    const res = await this.client.fetch(path, method, info);
    return await res.json();
  }
  async createInceptionData(name314, kargs = {}) {
    const algo = kargs.algo ?? "salty";
    const transferable = kargs.transferable ?? true;
    const isith = kargs.isith ?? "1";
    let nsith = kargs.nsith ?? "1";
    let wits = kargs.wits ?? [];
    const toad = kargs.toad ?? 0;
    let dcode = kargs.dcode ?? MtrDex.Blake3_256;
    const delpre = kargs.delpre;
    const data = kargs.data != void 0 ? [kargs.data] : [];
    const pre = kargs.pre;
    const states = kargs.states;
    const rstates = kargs.rstates;
    const prxs = kargs.prxs;
    const nxts = kargs.nxts;
    const mhab = kargs.mhab;
    const _keys = kargs.keys;
    const _ndigs = kargs.ndigs;
    const bran = kargs.bran;
    const count2 = kargs.count;
    let ncount = kargs.ncount;
    const tier = kargs.tier;
    const extern_type = kargs.extern_type;
    const extern = kargs.extern;
    if (!transferable) {
      ncount = 0;
      nsith = 0;
      dcode = MtrDex.Ed25519N;
    }
    const xargs = {
      transferable,
      isith,
      nsith,
      wits,
      toad,
      delpre,
      dcode,
      data,
      algo,
      pre,
      prxs,
      nxts,
      mhab,
      states,
      rstates,
      keys: _keys,
      ndigs: _ndigs,
      bran,
      count: count2,
      ncount,
      tier,
      extern_type,
      extern
    };
    const keeper = this.client.manager.new(algo, this.client.pidx, xargs);
    const [keys, ndigs] = await keeper.incept(transferable);
    const serder = incept({
      keys,
      isith,
      ndigs,
      nsith,
      toad,
      wits,
      cnfg: [],
      data,
      version: Versionage,
      kind: "JSON",
      code: dcode,
      intive: false,
      delpre
    });
    const sigs = await keeper.sign(b(serder.raw));
    this.client.pidx = this.client.pidx + 1;
    const icp = serder.ked;
    return {
      name: name314,
      icp,
      sigs,
      smids: states == null ? void 0 : states.map((state) => state.i),
      rmids: rstates == null ? void 0 : rstates.map((state) => state.i),
      [algo]: keeper.params()
    };
  }
  async submitInceptionData(jsondata) {
    const res = await this.client.fetch("/identifiers", "POST", jsondata);
    return new EventResult(new Serder(jsondata.icp), jsondata.sigs, res);
  }
  /**
   * Create a managed identifier
   * @async
   * @param {string} name Name or alias of the identifier
   * @param {CreateIdentiferArgs} [kargs] Optional parameters to create the identifier
   * @returns {EventResult} The inception result
   */
  async create(name314, kargs = {}) {
    const jsondata = await this.createInceptionData(name314, kargs);
    return await this.submitInceptionData(jsondata);
  }
  /**
   * Generate an interaction event in a managed identifier
   * @async
   * @param {string} name Prefix or alias of the identifier
   * @param {any} [data] Option data to be anchored in the interaction event
   * @returns {Promise<EventResult>} A promise to the interaction event result
   */
  async interact(name314, data) {
    let { serder, sigs, jsondata } = await this.createInteract(name314, data);
    const res = await this.client.fetch(
      "/identifiers/" + name314 + "/events",
      "POST",
      jsondata
    );
    return new EventResult(serder, sigs, res);
  }
  async createInteract(name314, data) {
    const hab = await this.get(name314);
    const pre = hab.prefix;
    const state = hab.state;
    const sn = parseInt(state.s, 16);
    const dig = state.d;
    data = Array.isArray(data) ? data : [data];
    const serder = interact({
      pre,
      sn: sn + 1,
      data,
      dig,
      version: void 0,
      kind: void 0
    });
    const keeper = this.client.manager.get(hab);
    const sigs = await keeper.sign(b(serder.raw));
    const jsondata = {
      ixn: serder.ked,
      sigs
    };
    jsondata[keeper.algo] = keeper.params();
    return { serder, sigs, jsondata };
  }
  /**
   * Generate a rotation event in a managed identifier
   * @param {string} name Name or alias of the identifier
   * @param {RotateIdentifierArgs} [kargs] Optional parameters requiered to generate the rotation event
   * @returns {Promise<EventResult>} A promise to the rotation event result
   */
  async rotate(name314, kargs = {}) {
    const transferable = kargs.transferable ?? true;
    const ncode = kargs.ncode ?? MtrDex.Ed25519_Seed;
    const ncount = kargs.ncount ?? 1;
    const hab = await this.get(name314);
    const pre = hab.prefix;
    const delegated = hab.state.di !== "";
    const state = hab.state;
    const count2 = state.k.length;
    const dig = state.d;
    const ridx = parseInt(state.s, 16) + 1;
    const wits = state.b;
    let isith = state.nt;
    let nsith = kargs.nsith ?? isith;
    if (isith == void 0)
      isith = `${Math.max(1, Math.ceil(count2 / 2)).toString(16)}`;
    if (nsith == void 0)
      nsith = `${Math.max(1, Math.ceil(ncount / 2)).toString(16)}`;
    const cst = new Tholder({ sith: isith }).sith;
    const nst = new Tholder({ sith: nsith }).sith;
    const keeper = this.client.manager.get(hab);
    const ncodes = kargs.ncodes ?? new Array(ncount).fill(ncode);
    const states = kargs.states == void 0 ? [] : kargs.states;
    const rstates = kargs.rstates == void 0 ? [] : kargs.rstates;
    const [keys, ndigs] = await keeper.rotate(
      ncodes,
      transferable,
      states,
      rstates
    );
    const cuts = kargs.cuts ?? [];
    const adds = kargs.adds ?? [];
    const data = kargs.data != void 0 ? [kargs.data] : [];
    const toad = kargs.toad;
    const ilk = delegated ? Ilks.drt : Ilks.rot;
    const serder = rotate2({
      pre,
      ilk,
      keys,
      dig,
      sn: ridx,
      isith: cst,
      nsith: nst,
      ndigs,
      toad,
      wits,
      cuts,
      adds,
      data
    });
    const sigs = await keeper.sign(b(serder.raw));
    const jsondata = {
      rot: serder.ked,
      sigs,
      smids: states != void 0 ? states.map((state2) => state2.i) : void 0,
      rmids: rstates != void 0 ? rstates.map((state2) => state2.i) : void 0
    };
    jsondata[keeper.algo] = keeper.params();
    const res = await this.client.fetch(
      "/identifiers/" + name314 + "/events",
      "POST",
      jsondata
    );
    return new EventResult(serder, sigs, res);
  }
  /**
   * Authorize an endpoint provider in a given role for a managed identifier
   * @remarks
   * Typically used to authorize the agent to be the endpoint provider for the identifier in the role of `agent`
   * @async
   * @param {string} name Name or alias of the identifier
   * @param {string} role Authorized role for eid
   * @param {string} [eid] Optional qb64 of endpoint provider to be authorized
   * @param {string} [stamp=now] Optional date-time-stamp RFC-3339 profile of iso8601 datetime. Now is the default if not provided
   * @returns {Promise<EventResult>} A promise to the result of the authorization
   */
  async addEndRole(name314, role, eid, stamp) {
    const hab = await this.get(name314);
    const pre = hab.prefix;
    const rpy = this.makeEndRole(pre, role, eid, stamp);
    const keeper = this.client.manager.get(hab);
    const sigs = await keeper.sign(b(rpy.raw));
    const jsondata = {
      rpy: rpy.ked,
      sigs
    };
    const res = await this.client.fetch(
      "/identifiers/" + name314 + "/endroles",
      "POST",
      jsondata
    );
    return new EventResult(rpy, sigs, res);
  }
  /**
   * Generate an /end/role/add reply message
   * @param {string} pre Prefix of the identifier
   * @param {string} role Authorized role for eid
   * @param {string} [eid] Optional qb64 of endpoint provider to be authorized
   * @param {string} [stamp=now] Optional date-time-stamp RFC-3339 profile of iso8601 datetime. Now is the default if not provided
   * @returns {Serder} The reply message
   */
  makeEndRole(pre, role, eid, stamp) {
    const data = {
      cid: pre,
      role
    };
    if (eid != void 0) {
      data.eid = eid;
    }
    const route = "/end/role/add";
    return reply(
      route,
      data,
      stamp,
      void 0,
      "JSON"
      /* JSON */
    );
  }
  /**
   * Authorises a new location scheme (endpoint) for a particular endpoint identifier.
   * @param {LocSchemeArgs} args
   * @param name Name or alias of the identifier to sign reply message
   * @param args Arguments to create authorising reply message from
   * @returns A promise to the result of the authorization
   */
  async addLocScheme(name314, args) {
    const { url, scheme, eid, stamp } = args;
    const hab = await this.get(name314);
    const rpyData = {
      eid: eid ?? hab.prefix,
      url,
      scheme: scheme ?? "http"
    };
    const rpy = reply(
      "/loc/scheme",
      rpyData,
      stamp,
      void 0,
      "JSON"
      /* JSON */
    );
    const keeper = this.client.manager.get(hab);
    const sigs = await keeper.sign(b(rpy.raw));
    const jsondata = {
      rpy: rpy.ked,
      sigs
    };
    const res = await this.client.fetch(
      "/identifiers/" + name314 + "/locschemes",
      "POST",
      jsondata
    );
    return new EventResult(rpy, sigs, res);
  }
  /**
   * Get the members of a group identifier
   * @async
   * @param {string} name - Name or alias of the identifier
   * @returns {Promise<any>} - A promise to the list of members
   */
  async members(name314) {
    const res = await this.client.fetch(
      "/identifiers/" + name314 + "/members",
      "GET",
      void 0
    );
    return await res.json();
  }
};
var EventResult = class {
  constructor(serder, sigs, response) {
    __publicField(this, "_serder");
    __publicField(this, "_sigs");
    __publicField(this, "response");
    this._serder = serder;
    this._sigs = sigs;
    this.response = response;
  }
  get serder() {
    return this._serder;
  }
  get sigs() {
    return this._sigs;
  }
  async op() {
    return await this.response.json();
  }
};
var FALSY = [false, 0, "?0", "no", "false", "False", "off"];
var TRUTHY = [true, 1, "?1", "yes", "true", "True", "on"];
var Signage = class {
  constructor(markers, indexed, signer, ordinal, digest, kind) {
    this.markers = markers;
    this.indexed = indexed;
    this.signer = signer;
    this.ordinal = ordinal;
    this.digest = digest;
    this.kind = kind;
  }
};
function signature(signages) {
  const values = [];
  for (const signage of signages) {
    let markers;
    let tags;
    if (signage.markers instanceof Map) {
      markers = Array.from(signage.markers.values());
      tags = Array.from(signage.markers.keys());
    } else {
      markers = signage.markers;
      tags = [];
    }
    const items = new Array();
    const indexed = signage.indexed ?? markers[0] instanceof Siger;
    if (indexed) {
      items.push('indexed="?1"');
    } else {
      items.push('indexed="?0"');
    }
    if (signage.signer != void 0) {
      items.push(`signer="${signage.signer}"`);
    }
    if (signage.ordinal != void 0) {
      items.push(`ordinal="${signage.ordinal}"`);
    }
    if (signage.digest != void 0) {
      items.push(`digest="${signage.digest}"`);
    }
    if (signage.kind != void 0) {
      items.push(`kind="${signage.kind}"`);
    }
    items.push(
      ...markers.map((marker, idx) => {
        let tag2 = void 0;
        let val;
        if (tags != void 0 && tags.length > idx) {
          tag2 = tags[idx];
        }
        if (marker instanceof Siger) {
          if (!indexed) {
            throw new Error(
              `Indexed signature marker ${marker} when indexed False.`
            );
          }
          tag2 = tag2 ?? marker.index.toString();
          val = marker.qb64;
        } else if (marker instanceof Cigar) {
          if (indexed) {
            throw new Error(
              `Unindexed signature marker ${marker} when indexed True.`
            );
          }
          if (!marker.verfer) {
            throw new Error(
              `Indexed signature marker is missing verfer`
            );
          }
          tag2 = tag2 ?? marker.verfer.qb64;
          val = marker.qb64;
        } else {
          tag2 = tag2 ?? idx.toString();
          val = marker;
        }
        return `${tag2}="${val}"`;
      })
    );
    values.push(items.join(";"));
  }
  return new Headers([[HEADER_SIG, values.join(",")]]);
}
function designature(value) {
  const values = value.replace(" ", "").split(",");
  const signages = values.map((val) => {
    const dict = /* @__PURE__ */ new Map();
    val.split(";").forEach((v) => {
      const splits = v.split("=", 2);
      dict.set(splits[0], splits[1].replaceAll('"', ""));
    });
    if (!dict.has("indexed")) {
      throw new Error(
        "Missing indexed field in Signature header signage."
      );
    }
    const item = dict.get("indexed");
    const indexed = !FALSY.includes(item);
    dict.delete("indexed");
    let signer;
    if (dict.has("signer")) {
      signer = dict.get("signer");
      dict.delete("signer");
    }
    let ordinal;
    if (dict.has("ordinal")) {
      ordinal = dict.get("ordinal");
      dict.delete("ordinal");
    }
    let digest;
    if (dict.has("digest")) {
      digest = dict.get("digest");
      dict.delete("digest");
    }
    let kind;
    if (dict.has("kind")) {
      kind = dict.get("kind");
      dict.delete("kind");
    } else {
      kind = "CESR";
    }
    if (kind == "CESR") {
      const markers = /* @__PURE__ */ new Map();
      for (const [key, val2] of dict.entries()) {
        if (indexed) {
          markers.set(key, new Siger({ qb64: val2 }));
        } else {
          markers.set(key, new Cigar({ qb64: val2 }));
        }
      }
      return new Signage(markers, indexed, signer, ordinal, digest, kind);
    } else {
      return new Signage(dict, indexed, signer, ordinal, digest, kind);
    }
  });
  return signages;
}
var _a5;
var Authenticator = (_a5 = class {
  constructor(csig, verfer) {
    __publicField(this, "_csig");
    __publicField(this, "_cx25519Pub");
    __publicField(this, "_cx25519Priv");
    __publicField(this, "_verfer");
    __publicField(this, "_vx25519Pub");
    this._csig = csig;
    const sigkey = new Uint8Array(
      this._csig.raw.length + this._csig.verfer.raw.length
    );
    sigkey.set(this._csig.raw);
    sigkey.set(this._csig.verfer.raw, this._csig.raw.length);
    this._cx25519Priv = import_libsodium_wrappers_sumo7.default.crypto_sign_ed25519_sk_to_curve25519(sigkey);
    this._cx25519Pub = import_libsodium_wrappers_sumo7.default.crypto_scalarmult_base(this._cx25519Priv);
    this._verfer = verfer;
    this._vx25519Pub = import_libsodium_wrappers_sumo7.default.crypto_sign_ed25519_pk_to_curve25519(
      this._verfer.raw
    );
  }
  verify(headers, method, path) {
    const siginput2 = headers.get(HEADER_SIG_INPUT);
    if (siginput2 == null) {
      return false;
    }
    const signature2 = headers.get(HEADER_SIG);
    if (signature2 == null) {
      return false;
    }
    let inputs = desiginput(siginput2);
    inputs = inputs.filter((input) => input.name == "signify");
    if (inputs.length == 0) {
      return false;
    }
    inputs.forEach((input) => {
      const items = new Array();
      input.fields.forEach((field) => {
        if (field.startsWith("@")) {
          if (field == "@method") {
            items.push(`"${field}": ${method}`);
          } else if (field == "@path") {
            items.push(`"${field}": ${path}`);
          }
        } else {
          if (headers.has(field)) {
            const value = normalize(headers.get(field));
            items.push(`"${field}": ${value}`);
          }
        }
      });
      const values = new Array();
      values.push(`(${input.fields.join(" ")})`);
      values.push(`created=${input.created}`);
      if (input.expires != void 0) {
        values.push(`expires=${input.expires}`);
      }
      if (input.nonce != void 0) {
        values.push(`nonce=${input.nonce}`);
      }
      if (input.keyid != void 0) {
        values.push(`keyid=${input.keyid}`);
      }
      if (input.context != void 0) {
        values.push(`context=${input.context}`);
      }
      if (input.alg != void 0) {
        values.push(`alg=${input.alg}`);
      }
      const params = values.join(";");
      items.push(`"@signature-params: ${params}"`);
      const ser = items.join("\n");
      const signage = designature(signature2);
      const markers = signage[0].markers;
      const cig = markers.get(input.name);
      if (!cig || !this._verfer.verify(cig.raw, ser)) {
        throw new Error(`Signature for ${input.keyid} invalid.`);
      }
    });
    return true;
  }
  sign(headers, method, path, fields) {
    if (fields == void 0) {
      fields = _a5.DefaultFields;
    }
    const [header, sig] = siginput(this._csig, {
      name: "signify",
      method,
      path,
      headers,
      fields,
      alg: "ed25519",
      keyid: this._csig.verfer.qb64
    });
    header.forEach((value, key) => {
      headers.append(key, value);
    });
    const markers = /* @__PURE__ */ new Map();
    markers.set("signify", sig);
    const signage = new Signage(markers, false);
    const signed = signature([signage]);
    signed.forEach((value, key) => {
      headers.append(key, value);
    });
    return headers;
  }
  async wrap(request, baseUrl, sender, receiver) {
    const dt = (/* @__PURE__ */ new Date()).toISOString().replace("Z", "000+00:00");
    const headers = new Headers();
    headers.set(HEADER_SIG_SENDER, sender);
    headers.set(HEADER_SIG_DESTINATION, receiver);
    headers.set(HEADER_SIG_TIME, dt);
    headers.set("Content-Type", "application/octet-stream");
    const requestStr = await _a5.serializeRequest(request);
    const raw = import_libsodium_wrappers_sumo7.default.crypto_box_seal(requestStr, this._vx25519Pub);
    const diger = new Diger({ code: MtrDex.Blake3_256 }, raw);
    const payload = {
      src: sender,
      dest: receiver,
      d: diger.qb64,
      dt
    };
    const sig = this._csig.sign(b(JSON.stringify(payload)));
    const markers = /* @__PURE__ */ new Map();
    markers.set("signify", sig);
    const signage = new Signage(markers, false);
    const signed = signature([signage]);
    signed.forEach((value, key) => {
      headers.append(key, value);
    });
    return new Request(baseUrl + "/", {
      method: "POST",
      body: raw,
      headers
    });
  }
  static async serializeRequest(request) {
    let headers = "";
    request.headers.forEach((value, name314) => {
      headers += `${name314}: ${value}\r
`;
    });
    let body = "";
    if (request.method !== "GET") {
      body = Buffer.from(await request.arrayBuffer()).toString("utf-8");
    }
    return `${request.method} ${request.url} HTTP/1.1\r
${headers}\r
${body}`;
  }
  async unwrap(wrapper, sender, receiver) {
    const signature2 = wrapper.headers.get(HEADER_SIG);
    if (!signature2) {
      throw new Error("Signature is missing from ESSR payload");
    }
    if (wrapper.headers.get(HEADER_SIG_SENDER) !== sender) {
      throw new Error("Message from a different remote agent");
    }
    if (wrapper.headers.get(HEADER_SIG_DESTINATION) !== receiver) {
      throw new Error(
        "Invalid ESSR payload, missing or incorrect destination prefix"
      );
    }
    const dt = wrapper.headers.get(HEADER_SIG_TIME);
    if (!dt) {
      throw new Error("Timestamp is missing from ESSR payload");
    }
    const ciphertext = new Uint8Array(await wrapper.arrayBuffer());
    const diger = new Diger({ code: MtrDex.Blake3_256 }, ciphertext);
    const payload = {
      src: sender,
      dest: receiver,
      d: diger.qb64,
      dt
    };
    const signages = designature(signature2);
    const markers = signages[0].markers;
    const cig = markers.get("signify");
    const verified = this._verfer.verify(
      cig == null ? void 0 : cig.raw,
      Buffer.from(JSON.stringify(payload))
    );
    if (!verified) {
      throw new Error("Invalid signature");
    }
    const plaintext = d(
      import_libsodium_wrappers_sumo7.default.crypto_box_seal_open(
        ciphertext,
        this._cx25519Pub,
        this._cx25519Priv
      )
    );
    const response = this.deserializeResponse(plaintext);
    if (response.headers.get(HEADER_SIG_SENDER) !== sender) {
      throw new Error(
        "Invalid ESSR payload, missing or incorrect encrypted sender"
      );
    }
    return response;
  }
  deserializeResponse(httpString) {
    const lines = httpString.split("\r\n");
    const [_, statusCode, ...statusTextArr] = lines[0].split(" ");
    const statusText = statusTextArr.join(" ");
    const status = Number(statusCode);
    const headers = new Headers();
    let body = "";
    let bodyStart = false;
    for (let i2 = 1; i2 < lines.length; i2++) {
      if (lines[i2] === "") {
        bodyStart = true;
        continue;
      }
      if (bodyStart) {
        body += lines[i2] + "\n";
        continue;
      }
      const [key, value] = lines[i2].split(": ");
      headers.append(key, value);
    }
    return new Response(body ? body.trim() : null, {
      status,
      statusText,
      headers
    });
  }
}, __publicField(_a5, "DefaultFields", [
  "@method",
  "@path",
  "signify-resource",
  HEADER_SIG_TIME.toLowerCase()
]), _a5);
var KeyManager = class {
  constructor(salter, externalModules = []) {
    __publicField(this, "modules", {});
    this.salter = salter;
    this.salter = salter;
    for (const mod3 of externalModules) {
      this.modules[mod3.type] = mod3.module;
    }
  }
  new(algo, pidx, kargs) {
    switch (algo) {
      case "salty":
        return new SaltyKeeper(
          this.salter,
          pidx,
          kargs["kidx"],
          kargs["tier"],
          kargs["transferable"],
          kargs["stem"],
          kargs["code"],
          kargs["count"],
          kargs["icodes"],
          kargs["ncode"],
          kargs["ncount"],
          kargs["ncodes"],
          kargs["dcode"],
          kargs["bran"],
          kargs["sxlt"]
        );
      case "randy":
        return new RandyKeeper(
          this.salter,
          kargs["code"],
          kargs["count"],
          kargs["icodes"],
          kargs["transferable"],
          kargs["ncode"],
          kargs["ncount"],
          kargs["ncodes"],
          kargs["dcode"],
          kargs["prxs"],
          kargs["nxts"]
        );
      case "group":
        return new GroupKeeper(
          this,
          kargs["mhab"],
          kargs["states"],
          kargs["rstates"],
          kargs["keys"],
          kargs["ndigs"]
        );
      case "extern": {
        const ModuleConstructor = this.modules[kargs.extern_type];
        if (!ModuleConstructor) {
          throw new Error(
            `unsupported external module type ${kargs.extern_type}`
          );
        }
        return new ModuleConstructor(pidx, kargs);
      }
      default:
        throw new Error("Unknown algo");
    }
  }
  get(aid) {
    if (aid[
      "salty"
      /* salty */
    ]) {
      const kargs = aid[
        "salty"
        /* salty */
      ];
      return new SaltyKeeper(
        this.salter,
        kargs["pidx"],
        kargs["kidx"],
        kargs["tier"],
        kargs["transferable"],
        kargs["stem"],
        void 0,
        void 0,
        kargs["icodes"],
        void 0,
        void 0,
        kargs["ncodes"],
        kargs["dcode"],
        void 0,
        kargs["sxlt"]
      );
    } else if (aid[
      "randy"
      /* randy */
    ]) {
      const pre = new Prefixer({ qb64: aid["prefix"] });
      const kargs = aid[
        "randy"
        /* randy */
      ];
      return new RandyKeeper(
        this.salter,
        void 0,
        void 0,
        void 0,
        pre.transferable,
        void 0,
        void 0,
        [],
        void 0,
        kargs["prxs"],
        kargs["nxts"]
      );
    } else if (aid[
      "group"
      /* group */
    ]) {
      const kargs = aid[
        "group"
        /* group */
      ];
      return new GroupKeeper(
        this,
        kargs["mhab"],
        void 0,
        void 0,
        kargs["keys"],
        kargs["ndigs"]
      );
    } else if (aid[
      "extern"
      /* extern */
    ]) {
      const kargs = aid[
        "extern"
        /* extern */
      ];
      const typ = kargs.extern_type;
      if (typ in this.modules) {
        const mod3 = new this.modules[typ](kargs["pidx"], kargs);
        return mod3;
      } else {
        throw new Error(`unsupported external module type ${typ}`);
      }
    } else {
      throw new Error(`Algo not allowed yet`);
    }
  }
};
var SaltyKeeper = class {
  constructor(salter, pidx, kidx = 0, tier = "low", transferable = false, stem = void 0, code = MtrDex.Ed25519_Seed, count2 = 1, icodes = void 0, ncode = MtrDex.Ed25519_Seed, ncount = 1, ncodes = void 0, dcode = MtrDex.Blake3_256, bran = void 0, sxlt = void 0) {
    __publicField(this, "aeid");
    __publicField(this, "encrypter");
    __publicField(this, "decrypter");
    __publicField(this, "salter");
    __publicField(this, "pidx");
    __publicField(this, "kidx");
    __publicField(this, "tier");
    __publicField(this, "transferable");
    __publicField(this, "stem");
    __publicField(this, "code");
    __publicField(this, "count");
    __publicField(this, "icodes");
    __publicField(this, "ncode");
    __publicField(this, "ncount");
    __publicField(this, "ncodes");
    __publicField(this, "dcode");
    __publicField(this, "sxlt");
    __publicField(this, "bran");
    __publicField(this, "creator");
    __publicField(this, "algo", "salty");
    __publicField(this, "signers");
    this.salter = salter;
    const signer = this.salter.signer(code, transferable, void 0, tier);
    this.aeid = signer.verfer.qb64;
    this.encrypter = new Encrypter({}, b(this.aeid));
    this.decrypter = new Decrypter({}, signer.qb64b);
    this.code = code;
    this.ncode = ncode;
    this.tier = tier;
    this.icodes = icodes == void 0 ? new Array(count2).fill(code) : icodes;
    this.ncodes = ncodes == void 0 ? new Array(ncount).fill(ncode) : ncodes;
    this.dcode = dcode;
    this.pidx = pidx;
    this.kidx = kidx;
    this.transferable = transferable;
    this.count = count2;
    this.ncount = ncount;
    this.stem = stem == void 0 ? "signify:aid" : stem;
    if (bran != void 0) {
      this.bran = MtrDex.Salt_128 + "A" + bran.slice(0, 21);
      this.creator = new SaltyCreator(this.bran, this.tier, this.stem);
      this.sxlt = this.encrypter.encrypt(b(this.creator.salt)).qb64;
    } else if (sxlt == void 0) {
      this.creator = new SaltyCreator(void 0, this.tier, this.stem);
      this.sxlt = this.encrypter.encrypt(b(this.creator.salt)).qb64;
    } else {
      this.sxlt = sxlt;
      const ciph = new Cipher({ qb64: this.sxlt });
      this.creator = new SaltyCreator(
        this.decrypter.decrypt(null, ciph).qb64,
        tier,
        this.stem
      );
    }
    this.signers = this.creator.create(
      this.icodes,
      this.ncount,
      this.ncode,
      this.transferable,
      this.pidx,
      0,
      this.kidx,
      false
    ).signers;
  }
  params() {
    return {
      sxlt: this.sxlt,
      pidx: this.pidx,
      kidx: this.kidx,
      stem: this.stem,
      tier: this.tier,
      icodes: this.icodes,
      ncodes: this.ncodes,
      dcode: this.dcode,
      transferable: this.transferable
    };
  }
  async incept(transferable) {
    var _a7;
    this.transferable = transferable;
    this.kidx = 0;
    const signers = this.creator.create(
      this.icodes,
      this.count,
      this.code,
      this.transferable,
      this.pidx,
      0,
      this.kidx,
      false
    );
    const verfers = signers.signers.map((signer) => signer.verfer.qb64);
    const nsigners = this.creator.create(
      this.ncodes,
      this.ncount,
      this.ncode,
      this.transferable,
      this.pidx,
      0,
      (_a7 = this.icodes) == null ? void 0 : _a7.length,
      false
    );
    const digers = nsigners.signers.map(
      (nsigner) => new Diger({ code: this.dcode }, nsigner.verfer.qb64b).qb64
    );
    return [verfers, digers];
  }
  async rotate(ncodes, transferable) {
    this.ncodes = ncodes;
    this.transferable = transferable;
    const signers = this.creator.create(
      this.ncodes,
      this.ncount,
      this.ncode,
      this.transferable,
      this.pidx,
      0,
      this.kidx + this.icodes.length,
      false
    );
    const verfers = signers.signers.map((signer) => signer.verfer.qb64);
    this.kidx = this.kidx + this.icodes.length;
    const nsigners = this.creator.create(
      this.ncodes,
      this.ncount,
      this.ncode,
      this.transferable,
      this.pidx,
      0,
      this.kidx + this.icodes.length,
      false
    );
    const digers = nsigners.signers.map(
      (nsigner) => new Diger({ code: this.dcode }, nsigner.verfer.qb64b).qb64
    );
    return [verfers, digers];
  }
  async sign(ser, indexed = true, indices = void 0, ondices = void 0) {
    const signers = this.creator.create(
      this.icodes,
      this.ncount,
      this.ncode,
      this.transferable,
      this.pidx,
      0,
      this.kidx,
      false
    );
    if (indexed) {
      const sigers = [];
      let i2 = 0;
      for (const [j, signer] of signers.signers.entries()) {
        if (indices != void 0) {
          i2 = indices[j];
          if (typeof i2 != "number" || i2 < 0) {
            throw new Error(
              `Invalid signing index = ${i2}, not whole number.`
            );
          }
        } else {
          i2 = j;
        }
        let o = 0;
        if (ondices != void 0) {
          o = ondices[j];
          if (o == void 0 || typeof o == "number" && typeof o != "number" && o >= 0) {
            throw new Error(
              `Invalid ondex = ${o}, not whole number.`
            );
          }
        } else {
          o = i2;
        }
        sigers.push(
          signer.sign(ser, i2, o == void 0 ? true : false, o)
        );
      }
      return sigers.map((siger) => siger.qb64);
    } else {
      const cigars = [];
      for (const [, signer] of signers.signers.entries()) {
        cigars.push(signer.sign(ser));
      }
      return cigars.map((cigar) => cigar.qb64);
    }
  }
};
var RandyKeeper = class {
  constructor(salter, code = MtrDex.Ed25519_Seed, count2 = 1, icodes = void 0, transferable = false, ncode = MtrDex.Ed25519_Seed, ncount = 1, ncodes, dcode = MtrDex.Blake3_256, prxs = void 0, nxts = void 0) {
    __publicField(this, "salter");
    __publicField(this, "code");
    __publicField(this, "count");
    __publicField(this, "icodes");
    __publicField(this, "transferable");
    __publicField(this, "ncount");
    __publicField(this, "ncodes");
    __publicField(this, "ncode");
    __publicField(this, "dcode");
    __publicField(this, "prxs");
    __publicField(this, "nxts");
    __publicField(this, "aeid");
    __publicField(this, "encrypter");
    __publicField(this, "decrypter");
    __publicField(this, "creator");
    __publicField(this, "algo", "randy");
    __publicField(this, "signers");
    this.salter = salter;
    this.icodes = icodes == void 0 ? new Array(count2).fill(code) : icodes;
    this.ncodes = ncodes == void 0 ? new Array(ncount).fill(ncode) : ncodes;
    this.code = code;
    this.ncode = ncode;
    this.count = count2;
    this.ncount = ncount;
    const signer = this.salter.signer(code, transferable);
    this.aeid = signer.verfer.qb64;
    this.encrypter = new Encrypter({}, b(this.aeid));
    this.decrypter = new Decrypter({}, signer.qb64b);
    this.nxts = nxts ?? [];
    this.prxs = prxs ?? [];
    this.transferable = transferable;
    this.icodes = icodes;
    this.ncodes = ncodes;
    this.dcode = dcode;
    this.creator = new RandyCreator();
    this.signers = this.prxs.map(
      (prx) => this.decrypter.decrypt(
        new Cipher({ qb64: prx }).qb64b,
        void 0,
        this.transferable
      )
    );
  }
  params() {
    return {
      nxts: this.nxts,
      prxs: this.prxs,
      transferable: this.transferable
    };
  }
  async incept(transferable) {
    this.transferable = transferable;
    const signers = this.creator.create(
      this.icodes,
      this.count,
      this.code,
      this.transferable
    );
    this.prxs = signers.signers.map(
      (signer) => this.encrypter.encrypt(void 0, signer).qb64
    );
    const verfers = signers.signers.map((signer) => signer.verfer.qb64);
    const nsigners = this.creator.create(
      this.ncodes,
      this.ncount,
      this.ncode,
      this.transferable
    );
    this.nxts = nsigners.signers.map(
      (signer) => this.encrypter.encrypt(void 0, signer).qb64
    );
    const digers = nsigners.signers.map(
      (nsigner) => new Diger({ code: this.dcode }, nsigner.verfer.qb64b).qb64
    );
    return [verfers, digers];
  }
  async rotate(ncodes, transferable) {
    this.ncodes = ncodes;
    this.transferable = transferable;
    this.prxs = this.nxts;
    const signers = this.nxts.map(
      (nxt) => this.decrypter.decrypt(
        void 0,
        new Cipher({ qb64: nxt }),
        this.transferable
      )
    );
    const verfers = signers.map((signer) => signer.verfer.qb64);
    const nsigners = this.creator.create(
      this.ncodes,
      this.ncount,
      this.ncode,
      this.transferable
    );
    this.nxts = nsigners.signers.map(
      (signer) => this.encrypter.encrypt(void 0, signer).qb64
    );
    const digers = nsigners.signers.map(
      (nsigner) => new Diger({ code: this.dcode }, nsigner.verfer.qb64b).qb64
    );
    return [verfers, digers];
  }
  async sign(ser, indexed = true, indices = void 0, ondices = void 0) {
    const signers = this.prxs.map(
      (prx) => this.decrypter.decrypt(
        new Cipher({ qb64: prx }).qb64b,
        void 0,
        this.transferable
      )
    );
    if (indexed) {
      const sigers = [];
      let i2 = 0;
      for (const [j, signer] of signers.entries()) {
        if (indices != void 0) {
          i2 = indices[j];
          if (typeof i2 != "number" || i2 < 0) {
            throw new Error(
              `Invalid signing index = ${i2}, not whole number.`
            );
          }
        } else {
          i2 = j;
        }
        let o = 0;
        if (ondices != void 0) {
          o = ondices[j];
          if (o == void 0 || typeof o == "number" && typeof o != "number" && o >= 0) {
            throw new Error(
              `Invalid ondex = ${o}, not whole number.`
            );
          }
        } else {
          o = i2;
        }
        sigers.push(
          signer.sign(ser, i2, o == void 0 ? true : false, o)
        );
      }
      return sigers.map((siger) => siger.qb64);
    } else {
      const cigars = [];
      for (const [, signer] of signers.entries()) {
        cigars.push(signer.sign(ser));
      }
      return cigars.map((cigar) => cigar.qb64);
    }
  }
};
var GroupKeeper = class {
  constructor(manager, mhab, states = void 0, rstates = void 0, keys = [], ndigs = []) {
    __publicField(this, "manager");
    __publicField(this, "mhab");
    __publicField(this, "gkeys", []);
    __publicField(this, "gdigs", []);
    __publicField(this, "algo", "group");
    __publicField(this, "signers");
    this.manager = manager;
    if (states != void 0) {
      keys = states.map((state) => state["k"][0]);
    }
    if (rstates != void 0) {
      ndigs = rstates.map((state) => state["n"][0]);
    }
    this.gkeys = (states == null ? void 0 : states.map((state) => state["k"][0])) ?? keys;
    this.gdigs = (rstates == null ? void 0 : rstates.map((state) => state["n"][0])) ?? ndigs;
    this.mhab = mhab;
    this.signers = [];
  }
  async incept() {
    return [this.gkeys, this.gdigs];
  }
  async rotate(_ncodes, _transferable, states, rstates) {
    this.gkeys = states.map((state) => state["k"][0]);
    this.gdigs = rstates.map((state) => state["n"][0]);
    return [this.gkeys, this.gdigs];
  }
  async sign(ser, indexed = true) {
    if (!this.mhab.state) {
      throw new Error(`No state in mhab`);
    }
    const key = this.mhab["state"]["k"][0];
    const ndig = this.mhab["state"]["n"][0];
    const csi = this.gkeys.indexOf(key);
    const pni = this.gdigs.indexOf(ndig);
    const mkeeper = this.manager.get(this.mhab);
    return await mkeeper.sign(ser, indexed, [csi], [pni]);
  }
  params() {
    return {
      mhab: this.mhab,
      keys: this.gkeys,
      ndigs: this.gdigs
    };
  }
};
var Contacts = class {
  /**
   * Contacts
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * List contacts
   * @async
   * @param {string} [group] Optional group name to filter contacts
   * @param {string} [filterField] Optional field name to filter contacts
   * @param {string} [filterValue] Optional field value to filter contacts
   * @returns {Promise<any>} A promise to the list of contacts
   */
  async list(group, filterField, filterValue) {
    const params = new URLSearchParams();
    if (group !== void 0) {
      params.append("group", group);
    }
    if (filterField !== void 0 && filterValue !== void 0) {
      params.append("filter_field", filterField);
      params.append("filter_value", filterValue);
    }
    const path = `/contacts?` + params.toString();
    const method = "GET";
    const res = await this.client.fetch(path, method, null);
    return await res.json();
  }
  /**
   * Get a contact
   * @async
   * @param {string} pre Prefix of the contact
   * @returns {Promise<any>} A promise to the contact
   */
  async get(pre) {
    const path = `/contacts/` + pre;
    const method = "GET";
    const res = await this.client.fetch(path, method, null);
    return await res.json();
  }
  /**
   * Add a contact
   * @async
   * @param pre Prefix of the contact
   * @param info Information about the contact
   * @returns A promise to the result of the addition
   */
  async add(pre, info) {
    const path = `/contacts/` + pre;
    const method = "POST";
    const res = await this.client.fetch(path, method, info);
    return await res.json();
  }
  /**
   * Delete a contact
   * @async
   * @param {string} pre Prefix of the contact
   * @returns {Promise<void>}
   */
  async delete(pre) {
    const path = `/contacts/` + pre;
    const method = "DELETE";
    await this.client.fetch(path, method, void 0);
  }
  /**
   * Update a contact
   * @async
   * @param {string} pre Prefix of the contact
   * @param {any} info Updated information about the contact
   * @returns {Promise<any>} A promise to the result of the update
   */
  async update(pre, info) {
    const path = `/contacts/` + pre;
    const method = "PUT";
    const res = await this.client.fetch(path, method, info);
    return await res.json();
  }
};
var Challenges = class {
  /**
   * Challenges
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * Generate a random challenge word list based on BIP39
   * @async
   * @param {number} strength Integer representing the strength of the challenge. Typically 128 or 256
   * @returns {Promise<any>} A promise to the list of random words
   */
  async generate(strength = 128) {
    const path = `/challenges?strength=${strength.toString()}`;
    const method = "GET";
    const res = await this.client.fetch(path, method, null);
    return await res.json();
  }
  /**
   * Respond to a challenge by signing a message with the list of words
   * @async
   * @param name Name or alias of the identifier
   * @param recipient Prefix of the recipient of the response
   * @param words List of words to embed in the signed response
   * @returns A promise to the result of the response
   */
  async respond(name314, recipient, words) {
    const hab = await this.client.identifiers().get(name314);
    const exchanges = this.client.exchanges();
    const resp = await exchanges.send(
      name314,
      "challenge",
      hab,
      "/challenge/response",
      { words },
      {},
      [recipient]
    );
    return resp;
  }
  /**
   * Ask Agent to verify a given sender signed the provided words
   * @param source Prefix of the identifier that was challenged
   * @param words List of challenge words to check for
   * @returns A promise to the long running operation
   */
  async verify(source, words) {
    const path = `/challenges_verify/${source}`;
    const method = "POST";
    const data = {
      words
    };
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
  /**
   * Mark challenge response as signed and accepted
   * @param source Prefix of the identifier that was challenged
   * @param said qb64 AID of exn message representing the signed response
   * @returns {Promise<Response>} A promise to the result
   */
  async responded(source, said) {
    const path = `/challenges_verify/${source}`;
    const method = "PUT";
    const data = {
      said
    };
    const res = await this.client.fetch(path, method, data);
    return res;
  }
};
function randomPasscode() {
  const raw = import_libsodium_wrappers_sumo8.default.randombytes_buf(16);
  const salter = new Salter({ raw });
  return salter.qb64.substring(2, 23);
}
function randomNonce() {
  const seed = import_libsodium_wrappers_sumo8.default.randombytes_buf(import_libsodium_wrappers_sumo8.default.crypto_sign_SEEDBYTES);
  const seedqb64 = new Matter({ raw: seed, code: MtrDex.Ed25519_Seed });
  return seedqb64.qb64;
}
var Oobis = class {
  /**
   * Oobis
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * Get the OOBI(s) for a managed indentifier for a given role
   * @param {string} name Name or alias of the identifier
   * @param {string} role Authorized role
   * @returns {Promise<any>} A promise to the OOBI(s)
   */
  async get(name314, role = "agent") {
    const path = `/identifiers/${name314}/oobis?role=${role}`;
    const method = "GET";
    const res = await this.client.fetch(path, method, null);
    return await res.json();
  }
  /**
   * Resolve an OOBI
   * @async
   * @param {string} oobi The OOBI to be resolver
   * @param {string} [alias] Optional name or alias to link the OOBI resolution to a contact
   * @returns {Promise<any>} A promise to the long-running operation
   */
  async resolve(oobi, alias) {
    const path = `/oobis`;
    const data = {
      url: oobi
    };
    if (alias !== void 0) {
      data.oobialias = alias;
    }
    const method = "POST";
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
};
var Operations = class {
  /**
   * Operations
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * Get operation status
   * @async
   * @param {string} name Name of the operation
   * @returns {Promise<Operation>} A promise to the status of the operation
   */
  async get(name314) {
    const path = `/operations/${name314}`;
    const data = null;
    const method = "GET";
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
  /**
   * List operations
   * @async
   * @param {string} type Select operations by type
   * @returns {Promise<Operation[]>} A list of operations
   */
  async list(type) {
    const params = new URLSearchParams();
    if (type !== void 0) {
      params.append("type", type);
    }
    const path = `/operations?${params.toString()}`;
    const data = null;
    const method = "GET";
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
  /**
   * Delete operation
   * @async
   * @param {string} name Name of the operation
   */
  async delete(name314) {
    const path = `/operations/${name314}`;
    const data = null;
    const method = "DELETE";
    await this.client.fetch(path, method, data);
  }
  /**
   * Poll for operation to become completed.
   */
  async wait(op, options = {}) {
    var _a7, _b, _c;
    const minSleep = options.minSleep ?? 10;
    const maxSleep = options.maxSleep ?? 1e4;
    const increaseFactor = options.increaseFactor ?? 50;
    if (((_b = (_a7 = op.metadata) == null ? void 0 : _a7.depends) == null ? void 0 : _b.done) === false) {
      await this.wait(op.metadata.depends, options);
    }
    if (op.done === true) {
      return op;
    }
    let retries = 0;
    while (true) {
      op = await this.get(op.name);
      const delay = Math.max(
        minSleep,
        Math.min(maxSleep, 2 ** retries * increaseFactor)
      );
      retries++;
      if (op.done === true) {
        return op;
      }
      await new Promise((resolve2) => setTimeout(resolve2, delay));
      (_c = options.signal) == null ? void 0 : _c.throwIfAborted();
    }
  }
};
var KeyEvents = class {
  /**
   * KeyEvents
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * Retrieve key events for an identifier
   * @async
   * @param {string} pre Identifier prefix
   * @returns {Promise<any>} A promise to the key events
   */
  async get(pre) {
    const path = `/events?pre=${pre}`;
    const data = null;
    const method = "GET";
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
};
var KeyStates = class {
  /**
   * KeyStates
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * Retriene the key state for an identifier
   * @async
   * @param {string} pre Identifier prefix
   * @returns {Promise<any>} A promise to the key states
   */
  async get(pre) {
    const path = `/states?pre=${pre}`;
    const data = null;
    const method = "GET";
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
  /**
   * Retrieve the key state for a list of identifiers
   * @async
   * @param {Array<string>} pres List of identifier prefixes
   * @returns {Promise<any>} A promise to the key states
   */
  async list(pres) {
    const path = `/states?${pres.map((pre) => `pre=${pre}`).join("&")}`;
    const data = null;
    const method = "GET";
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
  /**
   * Query the key state of an identifier for a given sequence number or anchor
   * @async
   * @param {string} pre Identifier prefix
   * @param {number} [sn] Optional sequence number
   * @param {any} [anchor] Optional anchor
   * @returns {Promise<any>} A promise to the long-running operation
   */
  async query(pre, sn, anchor) {
    const path = `/queries`;
    const data = {
      pre
    };
    if (sn !== void 0) {
      data.sn = sn;
    }
    if (anchor !== void 0) {
      data.anchor = anchor;
    }
    const method = "POST";
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
};
var Config = class {
  /**
   * Config
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  async get() {
    const path = `/config`;
    const method = "GET";
    const res = await this.client.fetch(path, method, null);
    return await res.json();
  }
};
var Replies = class {
  /**
   * Replies
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  async submitRpy(rec, rpy) {
    const path = `/replies`;
    const data = {
      rec,
      rpy
    };
    const method = "POST";
    await this.client.fetch(path, method, data);
  }
};
var vdr;
((vdr2) => {
  function incept2({
    pre,
    toad,
    nonce = randomNonce(),
    baks = [],
    cnfg = [],
    version: version3 = Versionage,
    kind = "JSON",
    code = MtrDex.Blake3_256
  }) {
    const vs = versify("KERI", version3, kind, 0);
    const isn = 0;
    const ilk = Ilks.vcp;
    if (cnfg.includes(TraitDex.NoBackers) && baks.length > 0) {
      throw new Error(
        `${baks.length} backers specified for NB vcp, 0 allowed`
      );
    }
    if (new Set(baks).size < baks.length) {
      throw new Error(`Invalid baks ${baks} has duplicates`);
    }
    let _toad;
    if (toad === void 0) {
      if (baks.length === 0) {
        _toad = 0;
      } else {
        _toad = ample(baks.length);
      }
    } else {
      _toad = +toad;
    }
    if (baks.length > 0) {
      if (_toad < 1 || _toad > baks.length) {
        throw new Error(`Invalid toad ${_toad} for baks in ${baks}`);
      }
    } else {
      if (_toad != 0) {
        throw new Error(`Invalid toad ${_toad} for no baks`);
      }
    }
    const ked = {
      v: vs,
      t: ilk,
      d: "",
      i: "",
      ii: pre,
      s: "" + isn,
      c: cnfg,
      bt: _toad.toString(16),
      b: baks,
      n: nonce
    };
    const prefixer = new Prefixer({ code }, ked);
    ked.i = prefixer.qb64;
    ked.d = prefixer.qb64;
    return new Serder(ked);
  }
  vdr2.incept = incept2;
})(vdr || (vdr = {}));
var _a6;
var CredentialTypes = (_a6 = class {
}, __publicField(_a6, "issued", "issued"), __publicField(_a6, "received", "received"), _a6);
var Credentials = class {
  /**
   * Credentials
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * List credentials
   * @async
   * @param {CredentialFilter} [kargs] Optional parameters to filter the credentials
   * @returns {Promise<any>} A promise to the list of credentials
   */
  async list(kargs = {}) {
    const path = `/credentials/query`;
    const filtr = kargs.filter === void 0 ? {} : kargs.filter;
    const sort2 = kargs.sort === void 0 ? [] : kargs.sort;
    const limit = kargs.limit === void 0 ? 25 : kargs.limit;
    const skip = kargs.skip === void 0 ? 0 : kargs.skip;
    const data = {
      filter: filtr,
      sort: sort2,
      skip,
      limit
    };
    const method = "POST";
    const res = await this.client.fetch(path, method, data, void 0);
    return await res.json();
  }
  /**
   * Get a credential
   * @async
   * @param {string} said - SAID of the credential
   * @param {boolean} [includeCESR=false] - Optional flag export the credential in CESR format
   * @returns {Promise<any>} A promise to the credential
   */
  async get(said, includeCESR = false) {
    const path = `/credentials/${said}`;
    const method = "GET";
    const headers = includeCESR ? new Headers({ Accept: "application/json+cesr" }) : new Headers({ Accept: "application/json" });
    const res = await this.client.fetch(path, method, null, headers);
    return includeCESR ? await res.text() : await res.json();
  }
  /**
   * Delete a credential from the DB
   * @async
   * @param {string} said - SAID of the credential
   * @returns {Promise<void>}
   */
  async delete(said) {
    const path = `/credentials/${said}`;
    const method = "DELETE";
    await this.client.fetch(path, method, void 0);
  }
  /**
   * Get the state of a credential
   * @async
   * @param {string} ri - management registry identifier
   * @param {string} said - SAID of the credential
   * @returns {Promise<CredentialState>} A promise to the credential registry state
   */
  async state(ri, said) {
    const path = `/registries/${ri}/${said}`;
    const method = "GET";
    const res = await this.client.fetch(path, method, null);
    return res.json();
  }
  /**
   * Issue a credential
   */
  async issue(name314, args) {
    const hab = await this.client.identifiers().get(name314);
    const estOnly = hab.state.c !== void 0 && hab.state.c.includes("EO");
    if (estOnly) {
      throw new Error("Establishment only not implemented");
    }
    if (!this.client.manager) {
      throw new Error("No manager on client");
    }
    const keeper = this.client.manager.get(hab);
    const [, subject] = Saider.saidify({
      d: "",
      ...args.a,
      dt: args.a.dt ?? (/* @__PURE__ */ new Date()).toISOString().replace("Z", "000+00:00")
    });
    const [, acdc] = Saider.saidify({
      v: versify("ACDC", void 0, "JSON", 0),
      d: "",
      u: args.u,
      i: args.i ?? hab.prefix,
      ri: args.ri,
      s: args.s,
      a: subject,
      e: args.e,
      r: args.r
    });
    const [, iss] = Saider.saidify({
      v: versify("KERI", void 0, "JSON", 0),
      t: Ilks.iss,
      d: "",
      i: acdc.d,
      s: "0",
      ri: args.ri,
      dt: subject.dt
    });
    const sn = parseInt(hab.state.s, 16);
    const anc = interact({
      pre: hab.prefix,
      sn: sn + 1,
      data: [
        {
          i: iss.i,
          s: iss.s,
          d: iss.d
        }
      ],
      dig: hab.state.d,
      version: void 0,
      kind: void 0
    });
    const sigs = await keeper.sign(b(anc.raw));
    const path = `/identifiers/${hab.name}/credentials`;
    const method = "POST";
    const body = {
      acdc,
      iss,
      ixn: anc.ked,
      sigs,
      [keeper.algo]: keeper.params()
    };
    const headers = new Headers({
      Accept: "application/json+cesr"
    });
    const res = await this.client.fetch(path, method, body, headers);
    const op = await res.json();
    return {
      acdc: new Serder(acdc),
      iss: new Serder(iss),
      anc,
      op
    };
  }
  /**
   * Revoke credential
   * @async
   * @param {string} name Name or alias of the identifier
   * @param {string} said SAID of the credential
   * @param {string} datetime date time of revocation
   * @returns {Promise<any>} A promise to the long-running operation
   */
  async revoke(name314, said, datetime) {
    const hab = await this.client.identifiers().get(name314);
    const pre = hab.prefix;
    const vs = versify("KERI", void 0, "JSON", 0);
    const dt = datetime ?? (/* @__PURE__ */ new Date()).toISOString().replace("Z", "000+00:00");
    const cred = await this.get(said);
    const _rev = {
      v: vs,
      t: Ilks.rev,
      d: "",
      i: said,
      s: "1",
      ri: cred.sad.ri,
      p: cred.status.d,
      dt
    };
    const [, rev] = Saider.saidify(_rev);
    let ixn = {};
    let sigs = [];
    const state = hab.state;
    if (state.c !== void 0 && state.c.includes("EO")) {
      var estOnly = true;
    } else {
      var estOnly = false;
    }
    const sn = parseInt(state.s, 16);
    const dig = state.d;
    const data = [
      {
        i: rev.i,
        s: rev.s,
        d: rev.d
      }
    ];
    const keeper = this.client.manager.get(hab);
    if (estOnly) {
      throw new Error("Establishment only not implemented");
    } else {
      const serder = interact({
        pre,
        sn: sn + 1,
        data,
        dig,
        version: void 0,
        kind: void 0
      });
      sigs = await keeper.sign(b(serder.raw));
      ixn = serder.ked;
    }
    const body = {
      rev,
      ixn,
      sigs,
      [keeper.algo]: keeper.params()
    };
    const path = `/identifiers/${name314}/credentials/${said}`;
    const method = "DELETE";
    const headers = new Headers({
      Accept: "application/json+cesr"
    });
    const res = await this.client.fetch(path, method, body, headers);
    const op = await res.json();
    return {
      rev: new Serder(rev),
      anc: new Serder(ixn),
      op
    };
  }
};
var RegistryResult = class {
  constructor(regser, serder, sigs, promise) {
    __publicField(this, "_regser");
    __publicField(this, "_serder");
    __publicField(this, "_sigs");
    __publicField(this, "promise");
    this._regser = regser;
    this._serder = serder;
    this._sigs = sigs;
    this.promise = promise;
  }
  get regser() {
    return this._regser;
  }
  get serder() {
    return this._serder;
  }
  get sigs() {
    return this._sigs;
  }
  async op() {
    const res = await this.promise;
    return await res.json();
  }
};
var Registries = class {
  /**
   * Registries
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * List registries
   * @async
   * @param {string} name Name or alias of the identifier
   * @returns {Promise<any>} A promise to the list of registries
   */
  async list(name314) {
    const path = `/identifiers/${name314}/registries`;
    const method = "GET";
    const res = await this.client.fetch(path, method, null);
    return await res.json();
  }
  /**
   * Create a registry
   * @async
   * @param {CreateRegistryArgs}
   * @returns {Promise<[any, Serder, any[], object]> } A promise to the long-running operation
   */
  async create({
    name: name314,
    registryName,
    noBackers = true,
    toad = 0,
    baks = [],
    nonce
  }) {
    const hab = await this.client.identifiers().get(name314);
    const pre = hab.prefix;
    const cnfg = [];
    if (noBackers) {
      cnfg.push(TraitDex.NoBackers);
    }
    const state = hab.state;
    const estOnly = state.c !== void 0 && state.c.includes("EO");
    if (estOnly) {
      cnfg.push(TraitDex.EstOnly);
    }
    const regser = vdr.incept({ pre, baks, toad, nonce, cnfg });
    if (estOnly) {
      throw new Error("establishment only not implemented");
    } else {
      const state2 = hab.state;
      const sn = parseInt(state2.s, 16);
      const dig = state2.d;
      const data = [
        {
          i: regser.pre,
          s: "0",
          d: regser.pre
        }
      ];
      const serder = interact({
        pre,
        sn: sn + 1,
        data,
        dig,
        version: Versionage,
        kind: "JSON"
        /* JSON */
      });
      const keeper = this.client.manager.get(hab);
      const sigs = await keeper.sign(b(serder.raw));
      const res = this.createFromEvents(
        hab,
        name314,
        registryName,
        regser.ked,
        serder.ked,
        sigs
      );
      return new RegistryResult(regser, serder, sigs, res);
    }
  }
  createFromEvents(hab, name314, registryName, vcp, ixn, sigs) {
    const path = `/identifiers/${name314}/registries`;
    const method = "POST";
    const data = {
      name: registryName,
      vcp,
      ixn,
      sigs
    };
    const keeper = this.client.manager.get(hab);
    data[keeper.algo] = keeper.params();
    return this.client.fetch(path, method, data);
  }
  /**
   * Rename a registry
   * @async
   * @param {string} name Name or alias of the identifier
   * @param {string} registryName Current registry name
   * @param {string} newName New registry name
   * @returns {Promise<any>} A promise to the registry record
   */
  async rename(name314, registryName, newName) {
    const path = `/identifiers/${name314}/registries/${registryName}`;
    const method = "PUT";
    const data = {
      name: newName
    };
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
};
var Schemas = class {
  /**
   * Schemas
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * Get a schema
   * @async
   * @param {string} said SAID of the schema
   * @returns {Promise<any>} A promise to the schema
   */
  async get(said) {
    const path = `/schema/${said}`;
    const method = "GET";
    const res = await this.client.fetch(path, method, null);
    return await res.json();
  }
  /**
   * List schemas
   * @async
   * @returns {Promise<any>} A promise to the list of schemas
   */
  async list() {
    const path = `/schema`;
    const method = "GET";
    const res = await this.client.fetch(path, method, null);
    return await res.json();
  }
};
var Ipex = class {
  /**
   * Schemas
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * Create an IPEX apply EXN message
   */
  async apply(args) {
    const hab = await this.client.identifiers().get(args.senderName);
    const data = {
      m: args.message ?? "",
      s: args.schemaSaid,
      a: args.attributes ?? {}
    };
    return this.client.exchanges().createExchangeMessage(
      hab,
      "/ipex/apply",
      data,
      {},
      args.recipient,
      args.datetime,
      void 0
    );
  }
  async submitApply(name314, exn, sigs, recp) {
    const body = {
      exn: exn.ked,
      sigs,
      rec: recp
    };
    const response = await this.client.fetch(
      `/identifiers/${name314}/ipex/apply`,
      "POST",
      body
    );
    return response.json();
  }
  /**
   * Create an IPEX offer EXN message
   */
  async offer(args) {
    const hab = await this.client.identifiers().get(args.senderName);
    const data = {
      m: args.message ?? ""
    };
    return this.client.exchanges().createExchangeMessage(
      hab,
      "/ipex/offer",
      data,
      { acdc: [args.acdc, void 0] },
      args.recipient,
      args.datetime,
      args.applySaid
    );
  }
  async submitOffer(name314, exn, sigs, atc, recp) {
    const body = {
      exn: exn.ked,
      sigs,
      atc,
      rec: recp
    };
    const response = await this.client.fetch(
      `/identifiers/${name314}/ipex/offer`,
      "POST",
      body
    );
    return response.json();
  }
  /**
   * Create an IPEX agree EXN message
   */
  async agree(args) {
    const hab = await this.client.identifiers().get(args.senderName);
    const data = {
      m: args.message ?? ""
    };
    return this.client.exchanges().createExchangeMessage(
      hab,
      "/ipex/agree",
      data,
      {},
      args.recipient,
      args.datetime,
      args.offerSaid
    );
  }
  async submitAgree(name314, exn, sigs, recp) {
    const body = {
      exn: exn.ked,
      sigs,
      rec: recp
    };
    const response = await this.client.fetch(
      `/identifiers/${name314}/ipex/agree`,
      "POST",
      body
    );
    return response.json();
  }
  /**
   * Create an IPEX grant EXN message
   */
  async grant(args) {
    const hab = await this.client.identifiers().get(args.senderName);
    const data = {
      m: args.message ?? ""
    };
    let atc = args.ancAttachment;
    if (atc === void 0) {
      const keeper = this.client.manager.get(hab);
      const sigs = await keeper.sign(b(args.anc.raw));
      const sigers = sigs.map((sig) => new Siger({ qb64: sig }));
      const ims = d(messagize(args.anc, sigers));
      atc = ims.substring(args.anc.size);
    }
    const acdcAtc = args.acdcAttachment === void 0 ? d(serializeACDCAttachment(args.iss)) : args.acdcAttachment;
    const issAtc = args.issAttachment === void 0 ? d(serializeIssExnAttachment(args.anc)) : args.issAttachment;
    const embeds = {
      acdc: [args.acdc, acdcAtc],
      iss: [args.iss, issAtc],
      anc: [args.anc, atc]
    };
    return this.client.exchanges().createExchangeMessage(
      hab,
      "/ipex/grant",
      data,
      embeds,
      args.recipient,
      args.datetime,
      args.agreeSaid
    );
  }
  async submitGrant(name314, exn, sigs, atc, recp) {
    const body = {
      exn: exn.ked,
      sigs,
      atc,
      rec: recp
    };
    const response = await this.client.fetch(
      `/identifiers/${name314}/ipex/grant`,
      "POST",
      body
    );
    return response.json();
  }
  /**
   * Create an IPEX admit EXN message
   */
  async admit(args) {
    const hab = await this.client.identifiers().get(args.senderName);
    const data = {
      m: args.message
    };
    return this.client.exchanges().createExchangeMessage(
      hab,
      "/ipex/admit",
      data,
      {},
      args.recipient,
      args.datetime,
      args.grantSaid
    );
  }
  async submitAdmit(name314, exn, sigs, atc, recp) {
    const body = {
      exn: exn.ked,
      sigs,
      atc,
      rec: recp
    };
    const response = await this.client.fetch(
      `/identifiers/${name314}/ipex/admit`,
      "POST",
      body
    );
    return response.json();
  }
};
var Delegations = class {
  /**
   * Delegations
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * Approve the delegation via interaction event
   * @async
   * @param {string} name Name or alias of the identifier
   * @param {any} [data] The anchoring interaction event
   * @returns {Promise<EventResult>} A promise to the delegated approval result
   */
  async approve(name314, data) {
    let { serder, sigs, jsondata } = await this.client.identifiers().createInteract(name314, data);
    const res = await this.client.fetch(
      "/identifiers/" + name314 + "/delegation",
      "POST",
      jsondata
    );
    return new EventResult(serder, sigs, res);
  }
};
var Escrows = class {
  /**
   * Escrows
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * List replay messages
   * @async
   * @param {string} [route] Optional route in the replay message
   * @returns {Promise<any>} A promise to the list of replay messages
   */
  async listReply(route) {
    const params = new URLSearchParams();
    if (route !== void 0) {
      params.append("route", route);
    }
    const path = `/escrows/rpy?` + params.toString();
    const method = "GET";
    const res = await this.client.fetch(path, method, null);
    return await res.json();
  }
};
var B64REX = "^[A-Za-z0-9\\-_]*$";
var Reb64 = new RegExp(B64REX);
var Bexter = class _Bexter extends Matter {
  constructor({ raw, code = MtrDex.StrB64_L0, qb64b, qb64, qb2 }, bext) {
    if (raw === void 0 && qb64b === void 0 && qb64 === void 0 && qb2 === void 0) {
      if (bext === void 0)
        throw new EmptyMaterialError("Missing bext string.");
      const match = Reb64.exec(bext);
      if (!match)
        throw new Error("Invalid Base64.");
      raw = _Bexter._rawify(bext);
    }
    super({ raw, code, qb64b, qb64, qb2 });
    if (!BexDex.has(this.code))
      throw new Error(`Invalid code = ${this.code} for Bexter.`);
  }
  static _rawify(bext) {
    const ts = bext.length % 4;
    const ws = (4 - ts) % 4;
    const ls = (3 - ts) % 3;
    const wad = new Array(ws);
    wad.fill("A");
    const base = wad.join("") + bext;
    const raw = decodeBase64Url(base);
    return Uint8Array.from(raw).subarray(ls);
  }
  get bext() {
    const sizage = Matter.Sizes.get(this.code);
    const wad = Uint8Array.from(new Array(sizage == null ? void 0 : sizage.ls).fill(0));
    const bext = encodeBase64Url(import_buffer9.Buffer.from([...wad, ...this.raw]));
    let ws = 0;
    if ((sizage == null ? void 0 : sizage.ls) === 0 && bext !== void 0) {
      if (bext[0] === "A") {
        ws = 1;
      }
    } else {
      ws = ((sizage == null ? void 0 : sizage.ls) + 1) % 4;
    }
    return bext.substring(ws);
  }
};
var Pather = class _Pather extends Bexter {
  constructor({ raw, code = MtrDex.StrB64_L0, qb64b, qb64, qb2 }, bext, path) {
    if (raw === void 0 && bext === void 0 && qb64b === void 0 && qb64 === void 0 && qb2 === void 0) {
      if (path === void 0)
        throw new EmptyMaterialError("Missing bext string.");
      bext = _Pather._bextify(path);
    }
    super({ raw, code, qb64b, qb64, qb2 }, bext);
  }
  // TODO: implement SAD access methods like resolve, root, strip, startswith and tail
  get path() {
    if (!this.bext.startsWith("-")) {
      throw new Error("invalid SAD ptr");
    }
    let path = this.bext;
    while (path.charAt(0) === "-") {
      path = path.substring(1);
    }
    const apath = path.split("-");
    if (apath[0] !== "") {
      return apath;
    } else {
      return [];
    }
  }
  static _bextify(path) {
    const vath = [];
    for (const p of path) {
      let sp = "";
      if (typeof p === "number") {
        sp = p.toString();
      } else {
        sp = p;
      }
      const match = Reb64.exec(sp);
      if (!match) {
        throw new Error(`"Non Base64 path component = ${p}.`);
      }
      vath.push(sp);
    }
    return "-" + vath.join("-");
  }
};
var Exchanges = class {
  /**
   * Exchanges
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * Create exn message
   * @async
   * @returns {Promise<any>} A promise to the list of replay messages
   * @param sender
   * @param route
   * @param payload
   * @param embeds
   * @param recipient
   * @param datetime
   * @param dig
   */
  async createExchangeMessage(sender, route, payload, embeds, recipient, datetime, dig) {
    const keeper = this.client.manager.get(sender);
    const [exn, end] = exchange(
      route,
      payload,
      sender["prefix"],
      recipient,
      datetime,
      dig,
      void 0,
      embeds
    );
    const sigs = await keeper.sign(b(exn.raw));
    return [exn, sigs, d(end)];
  }
  /**
   * Send exn messages to list of recipients
   * @async
   * @returns {Promise<any>} A promise to the list of replay messages
   * @param name
   * @param topic
   * @param sender
   * @param route
   * @param payload
   * @param embeds
   * @param recipients
   */
  async send(name314, topic, sender, route, payload, embeds, recipients) {
    for (const recipient of recipients) {
      const [exn, sigs, atc] = await this.createExchangeMessage(
        sender,
        route,
        payload,
        embeds,
        recipient
      );
      return await this.sendFromEvents(
        name314,
        topic,
        exn,
        sigs,
        atc,
        recipients
      );
    }
  }
  /**
   * Send exn messaget to list of recipients
   * @async
   * @returns {Promise<any>} A promise to the list of replay messages
   * @param name
   * @param topic
   * @param exn
   * @param sigs
   * @param atc
   * @param recipients
   */
  async sendFromEvents(name314, topic, exn, sigs, atc, recipients) {
    const path = `/identifiers/${name314}/exchanges`;
    const method = "POST";
    const data = {
      tpc: topic,
      exn: exn.ked,
      sigs,
      atc,
      rec: recipients
    };
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
  /**
   * Get exn message by said
   * @async
   * @returns A promise to the exn message
   * @param said The said of the exn message
   */
  async get(said) {
    const path = `/exchanges/${said}`;
    const method = "GET";
    const res = await this.client.fetch(path, method, null);
    return await res.json();
  }
};
function exchange(route, payload, sender, recipient, date, dig, modifiers, embeds) {
  const vs = versify("KERI", void 0, "JSON", 0);
  const ilk = Ilks.exn;
  const dt = date !== void 0 ? date : nowUTC().toISOString().replace("Z", "000+00:00");
  const p = dig !== void 0 ? dig : "";
  const q = modifiers !== void 0 ? modifiers : {};
  const ems = embeds != void 0 ? embeds : {};
  let e3 = {};
  let end = "";
  Object.entries(ems).forEach(([key, value]) => {
    const serder = value[0];
    const atc = value[1];
    e3[key] = serder.ked;
    if (atc == void 0) {
      return;
    }
    let pathed = "";
    const pather = new Pather({}, void 0, ["e", key]);
    pathed += pather.qb64;
    pathed += atc;
    const counter = new Counter({
      code: CtrDex.PathedMaterialQuadlets,
      count: Math.floor(pathed.length / 4)
    });
    end += counter.qb64;
    end += pathed;
  });
  if (Object.keys(e3).length > 0) {
    e3["d"] = "";
    [, e3] = Saider.saidify(e3);
  }
  const _ked = {
    v: vs,
    t: ilk,
    d: "",
    i: sender,
    rp: recipient,
    p,
    dt,
    r: route,
    q,
    a: payload,
    e: e3
  };
  const [, ked] = Saider.saidify(_ked);
  const exn = new Serder(ked);
  return [exn, b(end)];
}
var Groups = class {
  /**
   * Groups
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * Get group request messages
   * @async
   * @param {string} [said] SAID of exn message to load
   * @returns {Promise<any>} A promise to the list of replay messages
   */
  async getRequest(said) {
    const path = `/multisig/request/` + said;
    const method = "GET";
    const res = await this.client.fetch(path, method, null);
    return await res.json();
  }
  /**
   * Send multisig exn request  messages to other group members
   * @async
   * @param {string} [name] human readable name of group AID
   * @param {Dict<any>} [exn] exn message to send to other members
   * @param {string[]} [sigs] signature of the participant over the exn
   * @param {string} [atc] additional attachments from embedded events in exn
   * @returns {Promise<any>} A promise to the list of replay messages
   */
  async sendRequest(name314, exn, sigs, atc) {
    const path = `/identifiers/${name314}/multisig/request`;
    const method = "POST";
    const data = {
      exn,
      sigs,
      atc
    };
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
  /**
   * Join multisig group using rotation event.
   * This can be used by participants being asked to contribute keys to a rotation event to join an existing group.
   * @async
   * @param {string} [name] human readable name of group AID
   * @param {any} [rot] rotation event
   * @param {any} [sigs] signatures
   * @param {string} [gid] prefix
   * @param {string[]} [smids] array of particpants
   * @param {string[]} [rmids] array of particpants
   * @returns {Promise<any>} A promise to the list of replay messages
   */
  async join(name314, rot, sigs, gid, smids, rmids) {
    const path = `/identifiers/${name314}/multisig/join`;
    const method = "POST";
    const data = {
      tpc: "multisig",
      rot: rot.ked,
      sigs,
      gid,
      smids,
      rmids
    };
    const res = await this.client.fetch(path, method, data);
    return await res.json();
  }
};
var Notifications = class {
  /**
   * Notifications
   * @param {SignifyClient} client
   */
  constructor(client) {
    __publicField(this, "client");
    this.client = client;
  }
  /**
   * List notifications
   * @async
   * @param {number} [start=0] Start index of list of notifications, defaults to 0
   * @param {number} [end=24] End index of list of notifications, defaults to 24
   * @returns {Promise<any>} A promise to the list of notifications
   */
  async list(start = 0, end = 24) {
    const extraHeaders = new Headers();
    extraHeaders.append("Range", `notes=${start}-${end}`);
    const path = `/notifications`;
    const method = "GET";
    const res = await this.client.fetch(path, method, null, extraHeaders);
    const cr = res.headers.get("content-range");
    const range22 = parseRangeHeaders(cr, "notes");
    const notes = await res.json();
    return {
      start: range22.start,
      end: range22.end,
      total: range22.total,
      notes
    };
  }
  /**
   * Mark a notification as read
   * @async
   * @param {string} said SAID of the notification
   * @returns {Promise<string>} A promise to the result of the marking
   */
  async mark(said) {
    const path = `/notifications/` + said;
    const method = "PUT";
    const res = await this.client.fetch(path, method, null);
    return await res.text();
  }
  /**
   * Delete a notification
   * @async
   * @param {string} said SAID of the notification
   * @returns {Promise<void>}
   */
  async delete(said) {
    const path = `/notifications/` + said;
    const method = "DELETE";
    await this.client.fetch(path, method, void 0);
  }
};
var DEFAULT_BOOT_URL = "http://localhost:3903";
var State = class {
  constructor() {
    __publicField(this, "agent");
    __publicField(this, "controller");
    __publicField(this, "ridx");
    __publicField(this, "pidx");
    this.agent = null;
    this.controller = null;
    this.pidx = 0;
    this.ridx = 0;
  }
};
var SignifyClient = class {
  /**
   * SignifyClient constructor
   * @param {string} url KERIA admin interface URL
   * @param {string} bran Base64 21 char string that is used as base material for seed of the client AID
   * @param {Tier} tier Security tier for generating keys of the client AID (high | mewdium | low)
   * @param {string} bootUrl KERIA boot interface URL
   * @param {ExternalModule[]} externalModules list of external modules to load
   */
  constructor(url, bran, tier = "low", bootUrl = DEFAULT_BOOT_URL, externalModules = []) {
    __publicField(this, "controller");
    __publicField(this, "url");
    __publicField(this, "bran");
    __publicField(this, "pidx");
    __publicField(this, "agent");
    __publicField(this, "authn");
    __publicField(this, "manager");
    __publicField(this, "tier");
    __publicField(this, "bootUrl");
    __publicField(this, "exteralModules");
    this.url = url;
    if (bran.length < 21) {
      throw Error("bran must be 21 characters");
    }
    this.bran = bran;
    this.pidx = 0;
    this.controller = new Controller(bran, tier);
    this.authn = null;
    this.agent = null;
    this.manager = null;
    this.tier = tier;
    this.bootUrl = bootUrl;
    this.exteralModules = externalModules;
  }
  get data() {
    return [this.url, this.bran, this.pidx, this.authn];
  }
  /**
   * Boot a KERIA agent
   * @async
   * @returns {Promise<Response>} A promise to the result of the boot
   */
  async boot() {
    var _a7, _b, _c;
    const [evt, sign4] = ((_a7 = this.controller) == null ? void 0 : _a7.event) ?? [];
    const data = {
      icp: evt.ked,
      sig: sign4.qb64,
      stem: (_b = this.controller) == null ? void 0 : _b.stem,
      pidx: 1,
      tier: (_c = this.controller) == null ? void 0 : _c.tier
    };
    return await fetch(this.bootUrl + "/boot", {
      method: "POST",
      body: JSON.stringify(data),
      headers: {
        "Content-Type": "application/json"
      }
    });
  }
  /**
   * Get state of the agent and the client
   * @async
   * @returns {Promise<Response>} A promise to the state
   */
  async state() {
    var _a7;
    const caid = (_a7 = this.controller) == null ? void 0 : _a7.pre;
    const res = await fetch(this.url + `/agent/${caid}`);
    if (res.status == 404) {
      throw new Error(`agent does not exist for controller ${caid}`);
    }
    const data = await res.json();
    const state = new State();
    state.agent = data.agent ?? {};
    state.controller = data.controller ?? {};
    state.ridx = data.ridx ?? 0;
    state.pidx = data.pidx ?? 0;
    return state;
  }
  /**  Connect to a KERIA agent
   * @async
   */
  async connect() {
    const state = await this.state();
    this.pidx = state.pidx;
    this.controller = new Controller(
      this.bran,
      this.tier,
      0,
      state.controller
    );
    this.controller.ridx = state.ridx !== void 0 ? state.ridx : 0;
    this.agent = new Agent(state.agent);
    if (this.agent.anchor != this.controller.pre) {
      throw Error(
        "commitment to controller AID missing in agent inception event"
      );
    }
    if (this.controller.serder.ked.s == 0) {
      await this.approveDelegation();
    }
    this.manager = new KeyManager(
      this.controller.salter,
      this.exteralModules
    );
    this.authn = new Authenticator(
      this.controller.signer,
      this.agent.verfer
    );
  }
  /**
   * Fetch a resource from the KERIA agent
   * @async
   * @param {string} path Path to the resource
   * @param {string} method HTTP method
   * @param {any} data Data to be sent in the body of the resource
   * @param {Headers} [extraHeaders] Optional extra headers to be sent with the request
   * @returns {Promise<Response>} A promise to the result of the fetch
   */
  async fetch(path, method, data, extraHeaders) {
    if (!this.authn) {
      throw new Error("Client needs to call connect first");
    }
    const headers = new Headers();
    headers.set(HEADER_SIG_SENDER, this.controller.pre);
    if (extraHeaders) {
      extraHeaders.forEach((value, key) => {
        headers.append(key, value);
      });
    }
    const body = method == "GET" ? null : JSON.stringify(data);
    if (body) {
      headers.set("Content-Type", "application/json");
      headers.set("Content-Length", body.length.toString());
    }
    const request = new Request(this.url + path, {
      method,
      body,
      headers
    });
    const wrappedRequest = await this.authn.wrap(
      request,
      this.url,
      this.controller.pre,
      this.agent.pre
    );
    const wrappedResponse = await fetch(wrappedRequest);
    if (wrappedResponse.status === 401) {
      throw new Error(
        `HTTP ${method} ${path} - ${wrappedResponse.status} ${wrappedResponse.statusText}`
      );
    }
    const response = await this.authn.unwrap(
      wrappedResponse,
      this.agent.pre,
      this.controller.pre
    );
    if (!response.ok) {
      const error = await response.text();
      throw new Error(
        `HTTP ${method} ${path} - ${response.status} ${response.statusText} - ${error}`
      );
    }
    return response;
  }
  /**
   * Create a Signed Request to fetch a resource from an external URL with headers signed by an AID
   * @async
   * @param {string} aidName Name or alias of the AID to be used for signing
   * @param {string} url URL of the requested resource
   * @param {RequestInit} req Request options should include:
   *     - method: HTTP method
   *     - data Data to be sent in the body of the resource.
   *              If the data is a CESR JSON string then you should also set contentType to 'application/json+cesr'
   *              If the data is a FormData object then you should not set the contentType and the browser will set it to 'multipart/form-data'
   *              If the data is an object then you should use JSON.stringify to convert it to a string and set the contentType to 'application/json'
   *     - contentType Content type of the request.
   * @returns {Promise<Request>} A promise to the created Request
   */
  async createSignedRequest(aidName, url, req) {
    const hab = await this.identifiers().get(aidName);
    const keeper = this.manager.get(hab);
    const authenticator = new Authenticator(
      keeper.signers[0],
      keeper.signers[0].verfer
    );
    const headers = new Headers(req.headers);
    headers.set(HEADER_SIG_SENDER, hab["prefix"]);
    headers.set(
      HEADER_SIG_TIME,
      (/* @__PURE__ */ new Date()).toISOString().replace("Z", "000+00:00")
    );
    const signed_headers = authenticator.sign(
      new Headers(headers),
      req.method ?? "GET",
      new URL(url).pathname
    );
    req.headers = signed_headers;
    return new Request(url, req);
  }
  /**
   * Approve the delegation of the client AID to the KERIA agent
   * @async
   * @returns {Promise<Response>} A promise to the result of the approval
   */
  async approveDelegation() {
    const sigs = this.controller.approveDelegation(this.agent);
    const data = {
      ixn: this.controller.serder.ked,
      sigs
    };
    return await fetch(
      this.url + "/agent/" + this.controller.pre + "?type=ixn",
      {
        method: "PUT",
        body: JSON.stringify(data),
        headers: {
          "Content-Type": "application/json"
        }
      }
    );
  }
  /**
   * Save old client passcode in KERIA agent
   * @async
   * @param {string} passcode Passcode to be saved
   * @returns {Promise<Response>} A promise to the result of the save
   */
  async saveOldPasscode(passcode) {
    var _a7;
    const caid = (_a7 = this.controller) == null ? void 0 : _a7.pre;
    const body = { salt: passcode };
    return await fetch(this.url + "/salt/" + caid, {
      method: "PUT",
      body: JSON.stringify(body),
      headers: {
        "Content-Type": "application/json"
      }
    });
  }
  /**
   * Delete a saved passcode from KERIA agent
   * @async
   * @returns {Promise<Response>} A promise to the result of the deletion
   */
  async deletePasscode() {
    var _a7;
    const caid = (_a7 = this.controller) == null ? void 0 : _a7.pre;
    return await fetch(this.url + "/salt/" + caid, {
      method: "DELETE",
      headers: {
        "Content-Type": "application/json"
      }
    });
  }
  /**
   * Rotate the client AID
   * @async
   * @param {string} nbran Base64 21 char string that is used as base material for the new seed
   * @param {Array<string>} aids List of managed AIDs to be rotated
   * @returns {Promise<Response>} A promise to the result of the rotation
   */
  async rotate(nbran, aids) {
    const data = this.controller.rotate(nbran, aids);
    return await fetch(this.url + "/agent/" + this.controller.pre, {
      method: "PUT",
      body: JSON.stringify(data),
      headers: {
        "Content-Type": "application/json"
      }
    });
  }
  /**
   * Get identifiers resource
   * @returns {Identifier}
   */
  identifiers() {
    return new Identifier(this);
  }
  /**
   * Get OOBIs resource
   * @returns {Oobis}
   */
  oobis() {
    return new Oobis(this);
  }
  /**
   * Get operations resource
   * @returns {Operations}
   */
  operations() {
    return new Operations(this);
  }
  /**
   * Get keyEvents resource
   * @returns {KeyEvents}
   */
  keyEvents() {
    return new KeyEvents(this);
  }
  /**
   * Get keyStates resource
   * @returns {KeyStates}
   */
  keyStates() {
    return new KeyStates(this);
  }
  /**
   * Get credentials resource
   * @returns {Credentials}
   */
  credentials() {
    return new Credentials(this);
  }
  /**
   * Get IPEX resource
   * @returns {Ipex}
   */
  ipex() {
    return new Ipex(this);
  }
  /**
   * Get registries resource
   * @returns {Registries}
   */
  registries() {
    return new Registries(this);
  }
  /**
   * Get schemas resource
   * @returns {Schemas}
   */
  schemas() {
    return new Schemas(this);
  }
  /**
   * Get challenges resource
   * @returns {Challenges}
   */
  challenges() {
    return new Challenges(this);
  }
  /**
   * Get contacts resource
   * @returns {Contacts}
   */
  contacts() {
    return new Contacts(this);
  }
  /**
   * Get notifications resource
   * @returns {Notifications}
   */
  notifications() {
    return new Notifications(this);
  }
  /**
   * Get escrows resource
   * @returns {Escrows}
   */
  escrows() {
    return new Escrows(this);
  }
  /**
   * Get groups resource
   * @returns {Groups}
   */
  groups() {
    return new Groups(this);
  }
  /**
   * Get exchange resource
   * @returns {Exchanges}
   */
  exchanges() {
    return new Exchanges(this);
  }
  /**
   * Get delegations resource
   * @returns {Delegations}
   */
  delegations() {
    return new Delegations(this);
  }
  /**
   * Get agent config resource
   * @returns {Config}
   */
  config() {
    return new Config(this);
  }
  replies() {
    return new Replies(this);
  }
};
var src_default = exports_exports;
export {
  Agent,
  Algos,
  Authenticator,
  B64ChrByIdx,
  B64IdxByChr,
  BexCodex,
  BexDex,
  CesrNumber,
  Challenges,
  Cigar,
  Cipher,
  Codex,
  Config,
  Contacts,
  Controller,
  Counter,
  CounterCodex,
  Creatory,
  CredentialTypes,
  Credentials,
  CtrDex,
  Decrypter,
  Diger,
  DigiCodex,
  DigiDex,
  DipLabels,
  DrtLabels,
  EmptyMaterialError,
  Encrypter,
  Escrows,
  EventResult,
  Exchanges,
  FALSY,
  GroupKeeper,
  Groups,
  HEADER_SIG,
  HEADER_SIG_DESTINATION,
  HEADER_SIG_INPUT,
  HEADER_SIG_SENDER,
  HEADER_SIG_TIME,
  Hab,
  Habery,
  IcpLabels,
  Ident,
  Identifier,
  IdrDex,
  Ids,
  IdxBthSigDex,
  IdxCrtSigDex,
  IdxSigDex,
  Ilks,
  IndexedBothSigCodex,
  IndexedCurrentSigCodex,
  IndexedSigCodex,
  Indexer,
  IndexerCodex,
  Inputage,
  Ipex,
  IxnLabels,
  KeyEvents,
  KeyManager,
  KeyStates,
  KsnLabels,
  LargeVrzDex,
  MINSIGSIZE,
  MINSNIFFSIZE,
  Manager,
  Matter,
  MatterCodex,
  MtrDex,
  NonTransCodex,
  NonTransDex,
  Notifications,
  NumCodex,
  NumDex,
  Oobis,
  Operations,
  Prefixer,
  RandyCreator,
  RandyKeeper,
  Registries,
  RegistryResult,
  Replies,
  RotLabels,
  RpyLabels,
  Saider,
  Salter,
  SaltyCreator,
  SaltyKeeper,
  Schemas,
  Seqner,
  Serder,
  Serials,
  Siger,
  Signage,
  Signer,
  SignifyClient,
  Sizage,
  SmallVrzDex,
  TRUTHY,
  Tholder,
  Tier,
  TraitCodex,
  TraitDex,
  Unqualified,
  VEREX,
  VERFULLSIZE,
  Verfer,
  Version,
  Versionage,
  Xizage,
  ample,
  arrayEquals,
  b,
  b64ToInt,
  bytesToInt,
  concat3 as concat,
  d,
  src_default as default,
  desiginput,
  designature,
  deversify,
  dumps,
  exchange,
  extractValues,
  incept,
  intToB64,
  intToB64b,
  intToBytes,
  interact,
  messagize,
  normalize,
  nowUTC,
  openManager,
  pad,
  parseRangeHeaders,
  randomNonce,
  randomPasscode,
  range2 as range,
  readInt,
  ready,
  reply,
  riKey,
  rotate2 as rotate,
  serializeACDCAttachment,
  serializeIssExnAttachment,
  siginput,
  signature,
  sizeify,
  versify
};
/*! Bundled license information:

ieee754/index.js:
  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)

buffer/index.js:
  (*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   *)

fraction.js/fraction.js:
  (**
   * @license Fraction.js v4.3.0 20/08/2023
   * https://www.xarg.org/2014/03/rational-numbers-in-javascript/
   *
   * Copyright (c) 2023, Robert Eisele (robert@raw.org)
   * Dual licensed under the MIT or GPL Version 2 licenses.
   **)

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

decimal.js/decimal.mjs:
  (*!
   *  decimal.js v10.6.0
   *  An arbitrary-precision Decimal type for JavaScript.
   *  https://github.com/MikeMcl/decimal.js
   *  Copyright (c) 2025 Michael Mclaughlin <M8ch88l@gmail.com>
   *  MIT Licence
   *)
*/
//# sourceMappingURL=signify-ts.js.map
